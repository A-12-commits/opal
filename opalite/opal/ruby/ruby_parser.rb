#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.6
# from Racc grammer file "".
#

###### racc/parser.rb begin
unless $".index 'racc/parser.rb'
$".push 'racc/parser.rb'
  #
# $Id$
#
# Copyright (c) 1999-2006 Minero Aoki
#
# This program is free software.
# You can distribute/modify this program under the same terms of ruby.
#
# As a special exception, when this code is copied by Racc
# into a Racc output file, you may use that output file
# without restriction.
#

unless defined?(NotImplementedError)
  NotImplementedError = NotImplementError
end

module Racc
  class ParseError < StandardError; end
end
unless defined?(::ParseError)
  ParseError = Racc::ParseError
end

module Racc

  unless defined?(Racc_No_Extentions)
    Racc_No_Extentions = false
  end

  class Parser

    Racc_Runtime_Version = '1.4.6'
    Racc_Runtime_Revision = '$Id$'

    Racc_Runtime_Core_Version_R = '1.4.6'
    Racc_Runtime_Core_Revision_R = '$Id$'.split[1]
    begin
      require 'racc/cparse'
    # Racc_Runtime_Core_Version_C  = (defined in extention)
      Racc_Runtime_Core_Revision_C = Racc_Runtime_Core_Id_C.split[2]
      unless new.respond_to?(:_racc_do_parse_c, true)
        raise LoadError, 'old cparse.so'
      end
      if Racc_No_Extentions
        raise LoadError, 'selecting ruby version of racc runtime core'
      end

      Racc_Main_Parsing_Routine    = :_racc_do_parse_c
      Racc_YY_Parse_Method         = :_racc_yyparse_c
      Racc_Runtime_Core_Version    = Racc_Runtime_Core_Version_C
      Racc_Runtime_Core_Revision   = Racc_Runtime_Core_Revision_C
      Racc_Runtime_Type            = 'c'
    rescue LoadError
      Racc_Main_Parsing_Routine    = :_racc_do_parse_rb
      Racc_YY_Parse_Method         = :_racc_yyparse_rb
      Racc_Runtime_Core_Version    = Racc_Runtime_Core_Version_R
      Racc_Runtime_Core_Revision   = Racc_Runtime_Core_Revision_R
      Racc_Runtime_Type            = 'ruby'
    end

    def Parser.racc_runtime_type
      Racc_Runtime_Type
    end

    private

    def _racc_setup
      @yydebug = false unless self.class::Racc_debug_parser
      @yydebug = false unless defined?(@yydebug)
      if @yydebug
        @racc_debug_out = $stderr unless defined?(@racc_debug_out)
        @racc_debug_out ||= $stderr
      end
      arg = self.class::Racc_arg
      arg[13] = true if arg.size < 14
      arg
    end

    def _racc_init_sysvars
      @racc_state  = [0]
      @racc_tstack = []
      @racc_vstack = []

      @racc_t = nil
      @racc_val = nil

      @racc_read_next = true

      @racc_user_yyerror = false
      @racc_error_status = 0
    end

    ###
    ### do_parse
    ###

    def do_parse
      __send__(Racc_Main_Parsing_Routine, _racc_setup(), false)
    end

    def next_token
      raise NotImplementedError, "#{self.class}\#next_token is not defined"
    end

    def _racc_do_parse_rb(arg, in_debug)
      action_table, action_check, action_default, action_pointer,
      goto_table,   goto_check,   goto_default,   goto_pointer,
      nt_base,      reduce_table, token_table,    shift_n,
      reduce_n,     use_result,   * = arg

      _racc_init_sysvars
      tok = act = i = nil
      nerr = 0

      catch(:racc_end_parse) {
        while true
          if i = action_pointer[@racc_state[-1]]
            if @racc_read_next
              if @racc_t != 0   # not EOF
                tok, @racc_val = next_token()
                unless tok      # EOF
                  @racc_t = 0
                else
                  @racc_t = (token_table[tok] or 1)   # error token
                end
                racc_read_token(@racc_t, tok, @racc_val) if @yydebug
                @racc_read_next = false
              end
            end
            i += @racc_t
            unless i >= 0 and
                   act = action_table[i] and
                   action_check[i] == @racc_state[-1]
              act = action_default[@racc_state[-1]]
            end
          else
            act = action_default[@racc_state[-1]]
          end
          while act = _racc_evalact(act, arg)
            ;
          end
        end
      }
    end

    ###
    ### yyparse
    ###

    def yyparse(recv, mid)
      __send__(Racc_YY_Parse_Method, recv, mid, _racc_setup(), true)
    end

    def _racc_yyparse_rb(recv, mid, arg, c_debug)
      action_table, action_check, action_default, action_pointer,
      goto_table,   goto_check,   goto_default,   goto_pointer,
      nt_base,      reduce_table, token_table,    shift_n,
      reduce_n,     use_result,   * = arg

      _racc_init_sysvars
      nerr = 0

      catch(:racc_end_parse) {
        until i = action_pointer[@racc_state[-1]]
          while act = _racc_evalact(action_default[@racc_state[-1]], arg)
            ;
          end
        end
        recv.__send__(mid) do |tok, val|
          unless tok
            @racc_t = 0
          else
            @racc_t = (token_table[tok] or 1)   # error token
          end
          @racc_val = val
          @racc_read_next = false

          i += @racc_t
          unless i >= 0 and
                 act = action_table[i] and
                 action_check[i] == @racc_state[-1]
            act = action_default[@racc_state[-1]]
          end
          while act = _racc_evalact(act, arg)
            ;
          end

          while !(i = action_pointer[@racc_state[-1]]) ||
                ! @racc_read_next ||
                @racc_t == 0  # $
            unless i and i += @racc_t and
                   i >= 0 and
                   act = action_table[i] and
                   action_check[i] == @racc_state[-1]
              act = action_default[@racc_state[-1]]
            end
            while act = _racc_evalact(act, arg)
              ;
            end
          end
        end
      }
    end

    ###
    ### common
    ###

    def _racc_evalact(act, arg)
      action_table, action_check, action_default, action_pointer,
      goto_table,   goto_check,   goto_default,   goto_pointer,
      nt_base,      reduce_table, token_table,    shift_n,
      reduce_n,     use_result,   * = arg
      nerr = 0   # tmp

      if act > 0 and act < shift_n
        #
        # shift
        #
        if @racc_error_status > 0
          @racc_error_status -= 1 unless @racc_t == 1   # error token
        end
        @racc_vstack.push @racc_val
        @racc_state.push act
        @racc_read_next = true
        if @yydebug
          @racc_tstack.push @racc_t
          racc_shift @racc_t, @racc_tstack, @racc_vstack
        end

      elsif act < 0 and act > -reduce_n
        #
        # reduce
        #
        code = catch(:racc_jump) {
          @racc_state.push _racc_do_reduce(arg, act)
          false
        }
        if code
          case code
          when 1 # yyerror
            @racc_user_yyerror = true   # user_yyerror
            return -reduce_n
          when 2 # yyaccept
            return shift_n
          else
            raise '[Racc Bug] unknown jump code'
          end
        end

      elsif act == shift_n
        #
        # accept
        #
        racc_accept if @yydebug
        throw :racc_end_parse, @racc_vstack[0]

      elsif act == -reduce_n
        #
        # error
        #
        case @racc_error_status
        when 0
          unless arg[21]    # user_yyerror
            nerr += 1
            on_error @racc_t, @racc_val, @racc_vstack
          end
        when 3
          if @racc_t == 0   # is $
            throw :racc_end_parse, nil
          end
          @racc_read_next = true
        end
        @racc_user_yyerror = false
        @racc_error_status = 3
        while true
          if i = action_pointer[@racc_state[-1]]
            i += 1   # error token
            if  i >= 0 and
                (act = action_table[i]) and
                action_check[i] == @racc_state[-1]
              break
            end
          end
          throw :racc_end_parse, nil if @racc_state.size <= 1
          @racc_state.pop
          @racc_vstack.pop
          if @yydebug
            @racc_tstack.pop
            racc_e_pop @racc_state, @racc_tstack, @racc_vstack
          end
        end
        return act

      else
        raise "[Racc Bug] unknown action #{act.inspect}"
      end

      racc_next_state(@racc_state[-1], @racc_state) if @yydebug

      nil
    end

    def _racc_do_reduce(arg, act)
      action_table, action_check, action_default, action_pointer,
      goto_table,   goto_check,   goto_default,   goto_pointer,
      nt_base,      reduce_table, token_table,    shift_n,
      reduce_n,     use_result,   * = arg
      state = @racc_state
      vstack = @racc_vstack
      tstack = @racc_tstack

      i = act * -3
      len       = reduce_table[i]
      reduce_to = reduce_table[i+1]
      method_id = reduce_table[i+2]
      void_array = []

      tmp_t = tstack[-len, len] if @yydebug
      tmp_v = vstack[-len, len]
      tstack[-len, len] = void_array if @yydebug
      vstack[-len, len] = void_array
      state[-len, len]  = void_array

      # tstack must be updated AFTER method call
      if use_result
        vstack.push __send__(method_id, tmp_v, vstack, tmp_v[0])
      else
        vstack.push __send__(method_id, tmp_v, vstack)
      end
      tstack.push reduce_to

      racc_reduce(tmp_t, reduce_to, tstack, vstack) if @yydebug

      k1 = reduce_to - nt_base
      if i = goto_pointer[k1]
        i += state[-1]
        if i >= 0 and (curstate = goto_table[i]) and goto_check[i] == k1
          return curstate
        end
      end
      goto_default[k1]
    end

    def on_error(t, val, vstack)
      raise ParseError, sprintf("\nparse error on value %s (%s)",
                                val.inspect, token_to_str(t) || '?')
    end

    def yyerror
      throw :racc_jump, 1
    end

    def yyaccept
      throw :racc_jump, 2
    end

    def yyerrok
      @racc_error_status = 0
    end

    #
    # for debugging output
    #

    def racc_read_token(t, tok, val)
      @racc_debug_out.print 'read    '
      @racc_debug_out.print tok.inspect, '(', racc_token2str(t), ') '
      @racc_debug_out.puts val.inspect
      @racc_debug_out.puts
    end

    def racc_shift(tok, tstack, vstack)
      @racc_debug_out.puts "shift   #{racc_token2str tok}"
      racc_print_stacks tstack, vstack
      @racc_debug_out.puts
    end

    def racc_reduce(toks, sim, tstack, vstack)
      out = @racc_debug_out
      out.print 'reduce '
      if toks.empty?
        out.print ' <none>'
      else
        toks.each {|t| out.print ' ', racc_token2str(t) }
      end
      out.puts " --> #{racc_token2str(sim)}"
          
      racc_print_stacks tstack, vstack
      @racc_debug_out.puts
    end

    def racc_accept
      @racc_debug_out.puts 'accept'
      @racc_debug_out.puts
    end

    def racc_e_pop(state, tstack, vstack)
      @racc_debug_out.puts 'error recovering mode: pop token'
      racc_print_states state
      racc_print_stacks tstack, vstack
      @racc_debug_out.puts
    end

    def racc_next_state(curstate, state)
      @racc_debug_out.puts  "goto    #{curstate}"
      racc_print_states state
      @racc_debug_out.puts
    end

    def racc_print_stacks(t, v)
      out = @racc_debug_out
      out.print '        ['
      t.each_index do |i|
        out.print ' (', racc_token2str(t[i]), ' ', v[i].inspect, ')'
      end
      out.puts ' ]'
    end

    def racc_print_states(s)
      out = @racc_debug_out
      out.print '        ['
      s.each {|st| out.print ' ', st }
      out.puts ' ]'
    end

    def racc_token2str(tok)
      self.class::Racc_token_to_s_table[tok] or
          raise "[Racc Bug] can't convert token #{tok} to string"
    end

    def token_to_str(t)
      self.class::Racc_token_to_s_table[t]
    end

  end

end

end
###### racc/parser.rb end
module Opal
  class RubyParser < Racc::Parser


##### State transition tables begin ###

clist = [
'62,63,64,7,51,664,544,260,56,57,196,197,260,60,562,58,59,61,23,24,65',
'66,492,574,260,-417,22,28,27,88,87,89,90,-416,-58,17,196,197,196,197',
'-416,6,41,8,9,92,91,82,50,84,83,85,86,94,95,562,80,81,474,38,39,37,664',
'664,196,197,-69,-83,72,255,-77,-66,518,-81,564,563,73,490,491,-80,518',
'36,562,708,30,573,255,52,518,-416,259,473,32,727,457,259,40,100,518',
'518,724,100,99,663,18,-79,99,259,543,78,72,74,75,76,77,564,563,565,73',
'79,62,63,64,292,51,292,93,100,56,57,53,54,99,60,741,58,59,61,247,248',
'65,66,564,563,560,-79,246,276,280,88,87,89,90,474,-464,-464,-72,736',
'100,100,663,663,41,99,99,92,91,82,50,84,83,85,86,94,95,562,80,81,-417',
'38,39,37,100,-81,517,-81,473,99,-81,-80,100,-80,517,-72,-80,99,735,-72',
'100,-409,517,201,562,99,205,619,-409,52,100,100,517,517,620,99,99,-79',
'40,-79,562,-264,-79,567,100,-77,208,506,-264,99,505,78,72,74,75,76,77',
'564,563,569,73,79,62,63,64,649,51,525,93,-270,56,57,53,54,292,60,-270',
'58,59,61,247,248,65,66,564,563,575,714,246,276,280,88,87,89,90,416,-264',
'-264,619,486,564,563,417,-264,41,620,487,92,91,82,50,84,83,85,86,94',
'95,-412,80,81,725,38,39,37,-412,-270,196,197,-70,495,252,-270,-78,-271',
'-413,-404,496,253,-270,743,-271,-413,-404,201,474,292,205,244,100,52',
'540,418,-264,99,881,485,244,538,40,420,-271,540,-270,193,745,-81,208',
'-271,775,-270,194,78,72,74,75,76,77,473,795,750,73,79,62,63,64,418,51',
'-270,93,-271,56,57,53,54,524,60,525,58,59,61,247,248,65,66,-84,584,539',
'195,246,276,280,88,87,89,90,-416,-271,539,-270,192,-71,474,-416,-78',
'41,285,286,92,91,82,50,84,83,85,86,94,95,-415,80,81,583,38,39,37,-415',
'746,-73,-73,-76,-305,-81,844,-84,-269,473,-410,-305,-71,845,100,-269',
'-71,-410,201,99,-465,205,557,-269,52,-269,-416,-407,747,558,-269,-414',
'-269,40,-407,-465,-71,-465,-414,-73,-79,208,748,-73,457,679,78,72,74',
'75,76,77,749,492,421,73,79,62,63,64,-305,51,843,93,-269,56,57,53,54',
'457,60,255,58,59,61,247,248,65,66,-269,786,-269,732,246,276,280,88,87',
'89,90,329,328,332,331,-75,196,197,422,-83,41,679,216,92,91,82,50,84',
'83,85,86,94,95,-411,80,81,100,38,39,37,-411,99,506,761,649,508,329,328',
'332,331,216,383,255,213,451,385,384,215,214,201,506,506,205,511,508',
'52,329,328,332,331,216,100,761,649,40,322,99,326,324,323,325,213,208',
'332,331,215,214,78,72,74,75,76,77,216,419,752,73,79,62,63,64,7,51,454',
'93,-252,56,57,53,54,756,60,457,58,59,61,23,24,65,66,329,328,332,331',
'22,28,27,88,87,89,90,629,216,17,102,103,104,105,106,6,41,8,9,92,91,82',
'50,84,83,85,86,94,95,462,80,81,649,38,39,37,765,703,704,213,705,94,95',
'215,214,211,212,102,103,104,105,106,766,767,462,36,462,386,30,771,532',
'52,532,533,-57,776,32,710,-464,777,40,322,778,326,324,323,325,699,18',
'532,781,292,696,78,72,74,75,76,77,694,480,690,73,79,62,63,64,7,51,790',
'93,481,56,57,53,54,482,60,-253,58,59,61,23,24,65,66,329,328,332,331',
'22,28,27,88,87,89,90,216,374,17,488,667,525,264,659,6,41,8,9,92,91,82',
'50,84,83,85,86,94,95,365,80,81,362,38,39,37,292,255,213,654,796,609',
'215,214,211,212,649,609,800,255,255,493,235,494,216,36,609,498,30,500',
'635,52,292,-66,816,634,32,818,284,633,40,554,283,326,324,323,325,501',
'18,292,235,621,786,78,72,74,75,76,77,826,827,828,73,79,62,63,64,532',
'51,532,93,699,56,57,53,54,292,60,833,58,59,61,247,248,65,66,329,328',
'332,331,246,28,27,88,87,89,90,329,328,332,331,616,235,609,835,837,41',
'510,840,92,91,82,50,84,83,85,86,94,95,216,80,81,216,38,39,37,216,216',
'846,513,255,848,849,191,376,532,-465,582,857,-252,190,609,189,609,500',
'201,188,526,205,580,578,52,187,577,532,572,300,875,568,877,40,322,527',
'326,324,323,325,529,208,532,536,533,879,78,72,74,75,76,77,609,535,609',
'73,79,62,63,64,534,51,96,93,609,56,57,53,54,,60,,58,59,61,247,248,65',
'66,329,328,332,331,246,276,280,88,87,89,90,,,,,,,,,,41,,,92,91,82,50',
'84,83,85,86,94,95,,80,81,,38,39,37,,,,,,,,,,,,,,,,,,,,201,,,205,,,52',
',,,,862,,244,,40,554,,326,324,323,325,,208,,,,,78,72,74,75,76,77,,,',
'73,79,62,63,64,,51,,93,,56,57,53,54,,60,,58,59,61,247,248,65,66,329',
'328,332,331,246,276,280,88,87,89,90,,,,,,,,,,41,,,92,91,82,50,84,83',
'85,86,94,95,,80,81,,38,39,37,216,-486,-486,-486,-486,222,224,,,-486',
'-486,,,,,,230,231,,201,,,205,,,52,,,,,859,213,244,219,40,215,214,211',
'212,223,221,217,208,218,,,,78,72,74,75,76,77,,,,73,79,62,63,64,,51,',
'93,,56,57,53,54,,60,,58,59,61,247,248,65,66,,,,,246,276,280,88,87,89',
'90,,,,,,,,,,41,,,92,91,82,50,84,83,85,86,94,95,,80,81,,38,39,37,216',
'-486,-486,-486,-486,222,224,,,-486,-486,,,,,,230,231,,201,,,205,,,52',
',,,,,213,,219,40,215,214,211,212,223,221,217,208,218,,,,78,72,74,75',
'76,77,,,,73,79,62,63,64,7,51,,93,,56,57,53,54,,60,,58,59,61,23,24,65',
'66,,,,,22,28,27,88,87,89,90,,,17,,,,,,6,41,8,9,92,91,82,50,84,83,85',
'86,94,95,,80,81,,38,39,37,216,-486,-486,-486,-486,222,224,,,-486,-486',
',,,,,230,231,,36,,,30,,,52,,,,,32,213,,219,40,215,214,211,212,223,221',
'217,18,218,,,,78,72,74,75,76,77,,,,73,79,62,63,64,,51,,93,,56,57,53',
'54,,60,,58,59,61,247,248,65,66,,,,,246,276,280,88,87,89,90,,,,,,,,,',
'41,,,92,91,82,50,84,83,85,86,94,95,,80,81,,38,39,37,216,-486,-486,-486',
'-486,222,224,,,-486,-486,,,,,,230,231,,201,,,205,,,52,,,,,,213,,219',
'40,215,214,211,212,223,221,217,208,218,,,,78,72,74,75,76,77,,,,73,79',
'62,63,64,,51,,93,,56,57,53,54,,60,,58,59,61,247,248,65,66,,,,,246,276',
'280,88,87,89,90,,,,,,,,,,41,,,92,91,82,50,84,83,85,86,94,95,,80,81,',
'38,39,37,216,-486,-486,-486,-486,222,224,,,-486,-486,,,,,,230,231,,201',
',,205,,,52,,,,,,213,,219,40,215,214,211,212,223,221,217,208,218,,,,78',
'72,74,75,76,77,,,,73,79,62,63,64,,51,,93,,56,57,53,54,,60,,58,59,61',
'23,24,65,66,,,,,22,28,27,88,87,89,90,,,17,,,,,,,41,,,92,91,82,50,84',
'83,85,86,94,95,,80,81,,38,39,37,216,220,225,226,227,222,224,232,,228',
'229,,,,,,230,231,,201,,,205,,,52,,,,,,213,,219,40,215,214,211,212,223',
'221,217,18,218,,,,78,72,74,75,76,77,,,,73,79,62,63,64,,51,,93,,56,57',
'53,54,,60,,58,59,61,23,24,65,66,,,,,22,28,27,88,87,89,90,,,,,,,,,,41',
',,92,91,82,50,84,83,85,86,94,95,,80,81,,38,39,37,216,,,,,,,,,,,,,,,',
'230,231,,201,,,205,,,52,,,,,,213,,219,40,215,214,211,212,,,217,208,218',
',,,78,72,74,75,76,77,,,,73,79,62,63,64,,51,,93,,56,57,53,54,,60,,58',
'59,61,247,248,65,66,,,,,246,276,280,88,87,89,90,,,,,,,,,,41,,,92,91',
'82,50,84,83,85,86,94,95,,80,81,,38,39,37,216,,,,,,,,,,,,,,,,230,231',
',201,,,205,,,52,,,,,,213,,219,40,215,214,211,212,,,217,208,218,,,,78',
'72,74,75,76,77,,,,73,79,62,63,64,,51,,93,,56,57,53,54,,60,,58,59,61',
'247,248,65,66,,,,,246,276,280,88,87,89,90,,,,,,,,,,41,,,92,91,82,50',
'84,83,85,86,94,95,,80,81,,38,39,37,216,,,,,,,,,,,,,,,,230,231,,201,',
',205,,,52,,,,,,213,,219,40,215,214,211,212,,,217,208,218,,,,78,72,74',
'75,76,77,,,,73,79,62,63,64,,51,,93,,56,57,53,54,,60,,58,59,61,247,248',
'65,66,,,,,246,28,27,88,87,89,90,,,,,,,,,,41,,,92,91,82,50,84,83,85,86',
'94,95,,80,81,,38,39,37,216,,,,,,,,,,,,,,,,230,231,,201,,,205,,,52,,',
',,242,213,244,219,40,215,214,211,212,,,217,208,218,,,,78,72,74,75,76',
'77,,,,73,79,62,63,64,,51,,93,,56,57,53,54,,60,,58,59,61,247,248,65,66',
',,,,246,28,27,88,87,89,90,,,,,,,,,,41,,,92,91,82,50,84,83,85,86,94,95',
',80,81,,38,39,37,216,220,225,226,227,222,224,232,233,228,229,,-486,-486',
',,230,231,,201,,,205,,,52,,,,,242,213,244,219,40,215,214,211,212,223',
'221,217,208,218,,,,78,72,74,75,76,77,,,,73,79,62,63,64,,51,,93,,56,57',
'53,54,,60,,58,59,61,247,248,65,66,,,,,246,28,27,88,87,89,90,,,,,,,,',
',41,,,92,91,82,50,84,83,85,86,94,95,,80,81,,38,39,37,216,-486,-486,-486',
'-486,222,224,,,-486,-486,,,,,,230,231,,201,,,205,,,52,,,,,242,213,244',
'219,40,215,214,211,212,223,221,217,208,218,,,,78,72,74,75,76,77,,,,73',
'79,62,63,64,7,51,,93,,56,57,53,54,,60,,58,59,61,23,24,65,66,,,,,22,28',
'27,88,87,89,90,,,17,,,,,,6,41,8,9,92,91,82,50,84,83,85,86,94,95,,80',
'81,,38,39,37,216,220,225,226,227,222,224,,,228,229,,,,,,230,231,,36',
',,30,,,52,,,,,32,213,,219,40,215,214,211,212,223,221,217,18,218,,,,78',
'72,74,75,76,77,,,,73,79,62,63,64,7,51,,93,,56,57,53,54,,60,,58,59,61',
'23,24,65,66,,,,,22,28,27,88,87,89,90,,,17,,,,,,6,41,8,9,92,91,82,50',
'84,83,85,86,94,95,,80,81,,38,39,37,216,220,225,226,227,222,224,232,233',
'228,229,,-486,-486,,,230,231,,36,,,30,,,52,,,,,32,213,,219,40,215,214',
'211,212,223,221,217,18,218,,,,78,72,74,75,76,77,,,,73,79,-244,-244,-244',
',-244,,93,,-244,-244,53,54,,-244,,-244,-244,-244,-244,-244,-244,-244',
',,,,-244,-244,-244,-244,-244,-244,-244,,,,,,,,,,-244,,,-244,-244,-244',
'-244,-244,-244,-244,-244,-244,-244,,-244,-244,,-244,-244,-244,216,,',
',,,,,,,,,,,,,230,231,,-244,,,-244,255,,-244,,,,,-244,213,-244,219,-244',
'215,214,211,212,,,,-244,,,,-277,-244,-244,-244,-244,-244,-244,-277,-277',
'-277,-244,-244,-277,-277,-277,216,-277,,-244,,,,-244,-244,,,-277,-277',
',,,230,231,,,-277,-277,,-277,-277,-277,-277,-277,,,,213,,,,215,214,211',
'212,,,,,,,,,,,-277,-277,-277,-277,-277,-277,-277,-277,-277,-277,-277',
'-277,-277,-277,,,-277,-277,-277,,,-277,,264,-277,,,-277,,-277,,-277',
',-277,,-277,-277,-277,-277,-277,-277,-277,,-277,,-277,,,,,,,,,,,,,-277',
'-277,-277,-277,,-277,,,,-277,62,63,64,7,51,,,,56,57,,,,60,,58,59,61',
'23,24,65,66,,,,,22,28,27,88,87,89,90,,,17,,,,,,6,41,8,9,92,91,82,50',
'84,83,85,86,94,95,,80,81,,38,39,37,216,,,,,,,,,,,,,,,,230,231,,36,,',
'266,,,52,,,,,32,213,,219,40,215,214,211,212,,,,18,,,,,78,72,74,75,76',
'77,,,,73,79,62,63,64,,51,,93,,56,57,53,54,,60,,58,59,61,247,248,65,66',
',,,,246,276,280,88,87,89,90,,,,,,,,,,277,,,92,91,82,50,84,83,85,86,94',
'95,,80,81,,,554,281,326,324,323,325,,,,,,,,,,,,,,,,274,,,271,,,52,,',
',,270,,,,,,548,,,,,,,329,328,332,331,78,72,74,75,76,77,,,,73,79,62,63',
'64,,51,,93,,56,57,53,54,,60,,58,59,61,247,248,65,66,,,,,246,276,280',
'88,87,89,90,,,,,,,,,,277,,,92,91,82,50,84,83,85,86,94,95,,80,81,,,554',
'281,326,324,323,325,,,,,,,,,,,,,,,,274,,,205,,,52,,,,,,,,,,,548,,,,',
',,329,328,332,331,78,72,74,75,76,77,,,,73,79,62,63,64,,51,,93,,56,57',
'53,54,,60,,58,59,61,247,248,65,66,,,,,246,276,280,88,87,89,90,,,,,,',
',,,41,,,92,91,82,50,84,83,85,86,94,95,,80,81,,38,39,37,,,,,,,,,,,,,',
',,,,,,201,,,205,,,52,,,,,821,,,,40,,,,,,,,208,,,,,78,72,74,75,76,77',
',,,73,79,62,63,64,,51,,93,,56,57,53,54,,60,,58,59,61,23,24,65,66,,,',
',22,28,27,88,87,89,90,,,17,,,,,,,41,,,92,91,82,50,84,83,85,86,94,95',
',80,81,,38,39,37,,,,,,,,,,,,,,,,,,,,201,,,205,,,52,,,,,,,,,40,,,,,,',
',18,,,,,78,72,74,75,76,77,,,,73,79,62,63,64,7,51,,93,,56,57,53,54,,60',
',58,59,61,23,24,65,66,,,,,22,28,27,88,87,89,90,,,17,,,,,,6,41,8,9,92',
'91,82,50,84,83,85,86,94,95,,80,81,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,',
'30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,78,72,74,75,76,77,,,,73,79,62,63',
'64,,51,,93,,56,57,53,54,,60,,58,59,61,23,24,65,66,,,,,22,28,27,88,87',
'89,90,,,17,,,,,,,41,,,92,91,82,50,84,83,85,86,94,95,,80,81,,38,39,37',
',,,,,,,,,,,,,,,,,,,201,,,205,,,52,,,,,,,,,40,,,,,,,,18,,,,,78,72,74',
'75,76,77,,,,73,79,62,63,64,,51,,93,,56,57,53,54,,60,,58,59,61,247,248',
'65,66,,,,,246,276,280,88,87,89,90,,,,,,,,,,41,,,92,91,82,50,84,83,85',
'86,94,95,,80,81,,38,39,37,,,,,,,,,,,,,,,,,,,,201,,,205,,,52,,,,,,,,',
'40,,,,,,,,208,,,,,78,72,74,75,76,77,,,,73,79,62,63,64,,51,,93,,56,57',
'53,54,,60,,58,59,61,247,248,65,66,,,,,246,276,280,88,87,89,90,,,,,,',
',,,41,,,92,91,82,50,84,83,85,86,94,95,,80,81,,38,39,37,,,,,,,,,,,,,',
',,,,,,201,,,205,,,52,,,,,,,,,40,,,,,,,,208,,,,,78,72,74,75,76,77,,,',
'73,79,62,63,64,,51,,93,,56,57,53,54,,60,,58,59,61,247,248,65,66,,,,',
'246,276,280,88,87,89,90,,,,,,,,,,41,,,92,91,82,50,84,83,85,86,94,95',
',80,81,,38,39,37,,,,,,,,,,,,,,,,,,,,201,,,205,,,52,,,,,,,,,40,,,,,,',
',208,,,,,78,72,74,75,76,77,,,,73,79,62,63,64,,51,,93,,56,57,53,54,,60',
',58,59,61,247,248,65,66,,,,,246,276,280,88,87,89,90,,,,,,,,,,277,,,92',
'91,82,50,84,83,85,86,94,95,,80,81,,,,281,,,,,,,,,,,,,,,,,,,,812,,,205',
',,52,,,,,,,,,,,,,,,,,,,,,,78,72,74,75,76,77,,,,73,79,62,63,64,7,51,',
'93,,56,57,53,54,,60,,58,59,61,23,24,65,66,,-462,,,22,28,27,88,87,89',
'90,,,17,,,,,,6,41,8,9,92,91,82,50,84,83,85,86,94,95,,80,81,,38,39,37',
',,,,,,,,,,,-407,,,,,,,-407,36,,,30,-462,,52,,,,,32,,,,40,,,,,,,,18,',
'-462,,-265,78,72,74,75,76,77,-265,-265,-265,73,79,-265,-265,-265,,-265',
',93,,,-407,53,54,-265,,-265,-265,,,,,,,,-265,-265,,-265,-265,-265,-265',
'-265,,,,,,,,,,,,,,,,,,,,,,-265,-265,-265,-265,-265,-265,-265,-265,-265',
'-265,-265,-265,-265,-265,,,-265,-265,-265,,,-265,,,-265,,,-265,,-265',
',-265,,-265,,-265,-265,-265,-265,-265,-265,-265,,-265,,-265,,,,,,,,',
',,,,-265,-265,-265,-265,,-265,,,,-265,62,63,64,7,51,,,,56,57,,,,60,',
'58,59,61,23,24,65,66,,,,,22,28,27,88,87,89,90,,,17,,,,,,6,41,8,9,92',
'91,82,50,84,83,85,86,94,95,,80,81,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,',
'30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,78,72,74,75,76,77,,,,73,79,62,63',
'64,,51,,93,,56,57,53,54,,60,,58,59,61,23,24,65,66,,,,,22,28,27,88,87',
'89,90,,,17,,,,,,,41,,,92,91,82,50,84,83,85,86,94,95,,80,81,,38,39,37',
',,,,,,,,,,,,,,,,,,,201,,,205,,,52,,,,,,,,,40,,,,,,,,18,,,,,78,72,74',
'75,76,77,,,,73,79,62,63,64,,51,,93,,56,57,53,54,,60,,58,59,61,247,248',
'65,66,,,,,246,28,27,88,87,89,90,,,,,,,,,,41,,,92,91,82,50,84,83,85,86',
'94,95,,80,81,,38,39,37,,,,,,,,,,,,,,,,,,,,201,,,205,,,52,,,,,300,,,',
'40,,,,,,,,208,,,,,78,72,74,75,76,77,,,,73,79,62,63,64,,51,,93,,56,57',
'53,54,,60,,58,59,61,247,248,65,66,,,,,246,276,280,88,87,89,90,,,,,,',
',,,41,,,92,91,82,50,84,83,85,86,94,95,,80,81,,38,39,37,,,,,,,,,,,,,',
',,,,,,201,,,205,,,52,,,,,,,,,40,,,,,,,,208,,,,,78,72,74,75,76,77,,,',
'73,79,62,63,64,,51,,93,,56,57,53,54,,60,,58,59,61,247,248,65,66,,,,',
'246,276,280,88,87,89,90,,,,,,,,,,41,,,92,91,82,50,84,83,85,86,94,95',
',80,81,,38,39,37,,,,,,,,,,,,,,,,,,,,201,,,205,,,52,,,,,806,,244,,40',
',,,,,,,208,,,,,78,72,74,75,76,77,,,,73,79,62,63,64,,51,,93,,56,57,53',
'54,,60,,58,59,61,23,24,65,66,,,,,22,28,27,88,87,89,90,,,17,,,,,,,41',
',,92,91,82,50,84,83,85,86,94,95,,80,81,,38,39,37,,,,,,,,,,,,,,,,,,,',
'201,,,205,,,52,,,,,,,,,40,,,,,,,,18,,,,,78,72,74,75,76,77,,,,73,79,62',
'63,64,,51,,93,,56,57,53,54,,60,,58,59,61,23,24,65,66,,,,,22,28,27,88',
'87,89,90,,,17,,,,,,,41,,,92,91,82,50,84,83,85,86,94,95,,80,81,,38,39',
'37,,,,,,,,,,,,,,,,,,,,201,,,205,,,52,,,,,,,,,40,,,,,,,,18,,,,,78,72',
'74,75,76,77,,,,73,79,62,63,64,,51,,93,,56,57,53,54,,60,,58,59,61,23',
'24,65,66,,,,,22,28,27,88,87,89,90,,,17,,,,,579,,41,,,92,91,82,50,84',
'83,85,86,94,95,,80,81,,38,39,37,216,220,225,226,227,222,224,232,233',
'228,229,,209,210,,,230,231,,201,,,205,,,52,,,,,,213,,219,40,215,214',
'211,212,223,221,217,18,218,,,,78,72,74,75,76,77,,,,73,79,100,234,,-210',
',99,93,,,,53,54,62,63,64,,51,,,,56,57,,,,60,,58,59,61,247,248,65,66',
',,,,246,276,280,88,87,89,90,,,,,,,,,,41,,,92,91,82,50,84,83,85,86,94',
'95,,80,81,,38,39,37,,,,,,,,,,,,,,,,,,,,201,,,205,,,52,,,,,804,,244,',
'40,,,,,,,,208,,,,,78,72,74,75,76,77,,,,73,79,62,63,64,,51,,93,,56,57',
'53,54,,60,,58,59,61,247,248,65,66,,,,,246,276,280,88,87,89,90,,,,,,',
',,,277,,,92,91,82,50,84,83,334,86,94,95,,80,81,,,,281,,,,,,,,,,,,,,',
',,340,,,335,,,205,,,52,,,,,,,,,,,,,,,,,,,,,,78,72,74,75,76,77,,,,73',
'79,62,63,64,,51,,93,,56,57,53,54,,60,,58,59,61,247,248,65,66,,,,,246',
'276,280,88,87,89,90,,,,,,,,,,277,,,92,91,82,50,84,83,334,86,94,95,,80',
'81,,,,281,,,,,,,,,,,,,,,,,,,,335,,,205,,,52,,,,,,,,,,,,,,,,,,,,,,78',
'72,74,75,76,77,,,,73,79,62,63,64,,51,,93,,56,57,53,54,,60,,58,59,61',
'247,248,65,66,,,,,246,276,280,88,87,89,90,,,,,,,,,,41,,,92,91,82,50',
'84,83,85,86,94,95,,80,81,,38,39,37,,,,,,,,,,,,,,,,,,,,201,,,205,,,52',
',,,,798,,244,,40,,,,,,,,208,,,,,78,72,74,75,76,77,,,,73,79,62,63,64',
',51,,93,,56,57,53,54,,60,,58,59,61,247,248,65,66,,,,,246,276,280,88',
'87,89,90,,,,,,,,,,41,,,92,91,82,50,84,83,85,86,94,95,,80,81,,38,39,37',
',,,,,,,,,,,,,,,,,,,201,,,205,,,52,,,,,,,,,40,,,,,,,,208,,,,,78,72,74',
'75,76,77,,,,73,79,62,63,64,,51,,93,,56,57,53,54,,60,,58,59,61,247,248',
'65,66,,,,,246,276,280,88,87,89,90,,,,,,,,,,41,,,92,91,82,50,84,83,85',
'86,94,95,,80,81,,38,39,37,,,,,,,,,,,,,,,,,,,,201,,,205,,,52,,,,,,,,',
'40,,,,,,,,208,,,,,78,72,74,75,76,77,,,,73,79,62,63,64,,51,,93,,56,57',
'53,54,,60,,58,59,61,247,248,65,66,,,,,246,276,280,88,87,89,90,,,,,,',
',,,41,,,92,91,82,50,84,83,85,86,94,95,,80,81,,38,39,37,,,,,,,,,,,,,',
',,,,,,201,,,205,,,52,,,,,,,,,40,,,,,,,,208,,,,,78,72,74,75,76,77,,,',
'73,79,62,63,64,,51,,93,,56,57,53,54,,60,,58,59,61,23,24,65,66,,,,,22',
'28,27,88,87,89,90,,,,,,,,,,41,,,92,91,82,50,84,83,85,86,94,95,,80,81',
',38,39,37,,,,,,,,,,,,,,,,,,,,201,,,205,,,52,,,,,,,,,40,,,,,,,,208,,',
',,78,72,74,75,76,77,,,,73,79,-461,-461,-461,,-461,,93,,-461,-461,53',
'54,,-461,,-461,-461,-461,-461,-461,-461,-461,,-461,,,-461,-461,-461',
'-461,-461,-461,-461,,,,,,,,,,-461,,,-461,-461,-461,-461,-461,-461,-461',
'-461,-461,-461,,-461,-461,,-461,-461,-461,,,,,,,,,,,,,,,,,,,,-461,,',
'-461,-461,,-461,,,,,-461,,-461,,-461,,,,,,,,-461,,-461,,,-461,-461,-461',
'-461,-461,-461,,,,-461,-461,-462,-462,-462,,-462,,-461,,-462,-462,-461',
'-461,,-462,,-462,-462,-462,-462,-462,-462,-462,,-462,,,-462,-462,-462',
'-462,-462,-462,-462,,,,,,,,,,-462,,,-462,-462,-462,-462,-462,-462,-462',
'-462,-462,-462,,-462,-462,,-462,-462,-462,,,,,,,,,,,,,,,,,,,,-462,,',
'-462,-462,,-462,,,,,-462,,-462,,-462,,,,,,,,-462,,-462,,,-462,-462,-462',
'-462,-462,-462,,,,-462,-462,62,63,64,,51,,-462,,56,57,-462,-462,,60',
',58,59,61,247,248,65,66,,,,,246,276,280,88,87,89,90,,,,,,,,,,41,,,92',
'91,82,50,84,83,85,86,94,95,,80,81,,38,39,37,,,,,,,,,,,,,,,,,,,,201,',
',205,,,52,,,,,,,,,40,,,,,,,,208,,,,,78,72,74,75,76,77,,,,73,79,62,63',
'64,7,51,,93,,56,57,53,54,,60,,58,59,61,23,24,65,66,,,,,22,28,27,88,87',
'89,90,,,17,,,,,,6,41,8,9,92,91,82,50,84,83,85,86,94,95,,80,81,,38,39',
'37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,78,72',
'74,75,76,77,,,,73,79,62,63,64,,51,376,93,,56,57,53,54,,60,,58,59,61',
'23,24,65,66,,,,,22,28,27,88,87,89,90,,,17,,,,,,,41,,,92,91,82,50,84',
'83,85,86,94,95,,80,81,,38,39,37,,,,,,,,,,,,,,,,,,,,201,,,205,,,52,,',
',,,,,,40,,,,,,,,18,,,,,78,72,74,75,76,77,,,,73,79,62,63,64,,51,,93,',
'56,57,53,54,,60,,58,59,61,23,24,65,66,,,,,22,28,27,88,87,89,90,,,17',
',,,,,,41,,,92,91,82,50,84,83,85,86,94,95,,80,81,,38,39,37,,,,,,,,,,',
',,,,,,,,,201,,,205,,,52,,,,,,,,,40,,,,,,,,18,,,,,78,72,74,75,76,77,',
',,73,79,62,63,64,,51,,93,,56,57,53,54,,60,,58,59,61,23,24,65,66,,,,',
'22,28,27,88,87,89,90,,,17,,,,,,,41,,,92,91,82,50,84,83,85,86,94,95,',
'80,81,,38,39,37,,,,,,,,,,,,,,,,,,,,201,,,205,,,52,,,,,,,,,40,,,,,,,',
'18,,,,,78,72,74,75,76,77,,,,73,79,62,63,64,,51,,93,,56,57,53,54,,60',
',58,59,61,23,24,65,66,,,,,22,28,27,88,87,89,90,,,17,,,,,,,41,,,92,91',
'82,50,84,83,85,86,94,95,,80,81,,38,39,37,,,,,,,,,,,,,,,,,,,,201,,,205',
',,52,,,,,,,,,40,,,,,,,,18,,,,,78,72,74,75,76,77,,,,73,79,62,63,64,7',
'51,,93,,56,57,53,54,,60,,58,59,61,23,24,65,66,,,,,22,28,27,88,87,89',
'90,,,17,,,,,,6,41,8,9,92,91,82,50,84,83,85,86,94,95,,80,81,,38,39,37',
',,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,78,72,74',
'75,76,77,,,,73,79,62,63,64,7,51,,93,,56,57,53,54,,60,,58,59,61,23,24',
'65,66,,,,,22,28,27,88,87,89,90,,,17,,,,,,6,41,8,9,92,91,82,50,84,83',
'85,86,94,95,,80,81,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32',
',,,40,,,,,,,,18,,,,,78,72,74,75,76,77,,,,73,79,62,63,64,,51,,93,,56',
'57,53,54,,60,,58,59,61,247,248,65,66,,,,,246,276,280,88,87,89,90,,,',
',,,,,,41,,,92,91,82,50,84,83,85,86,94,95,,80,81,,38,39,37,,,,,,,,,,',
',,,,,,,,,201,,,205,,,52,,,,,,,,,40,,,,,,,,208,,,,,78,72,74,75,76,77',
',,,73,79,62,63,64,7,51,,93,,56,57,53,54,,60,,58,59,61,23,24,65,66,,',
',,22,28,27,88,87,89,90,,,17,,,,,,6,41,8,9,92,91,82,50,84,83,85,86,94',
'95,,80,81,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,',
',,,,18,,,,,78,72,74,75,76,77,,,,73,79,62,63,64,,51,,93,,56,57,53,54',
',60,,58,59,61,23,24,65,66,,,,,22,28,27,88,87,89,90,,,17,,,,,,,41,,,92',
'91,82,50,84,83,85,86,94,95,,80,81,,38,39,37,,,,,,,,,,,,,,,,,,,,201,',
',205,,,52,,,,,,,,,40,,,,,,,,18,,,,,78,72,74,75,76,77,,,,73,79,62,63',
'64,7,51,,93,,56,57,53,54,,60,,58,59,61,23,24,65,66,,,,,22,28,27,88,87',
'89,90,,,17,,,,,,6,41,8,9,92,91,82,50,84,83,85,86,94,95,,80,81,,38,39',
'37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,78,72',
'74,75,76,77,,,,73,79,62,63,64,7,51,,93,,56,57,53,54,,60,,58,59,61,23',
'24,65,66,,,,,22,28,27,88,87,89,90,,,17,,,,,,6,41,8,9,92,91,82,50,84',
'83,85,86,94,95,,80,81,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,',
'32,,,,40,,,,,,,,18,,,,,78,72,74,75,76,77,,,,73,79,62,63,64,,51,,93,',
'56,57,53,54,,60,,58,59,61,23,24,65,66,,,,,22,28,27,88,87,89,90,,,,,',
',,,,41,,,92,91,82,50,84,83,85,86,94,95,,80,81,,38,39,37,,,,,,,,,,,,',
',,,,,,,201,,,205,,,52,,,,,394,,,,40,,,,,,,,208,,,,,78,72,74,75,76,77',
',,,73,79,62,63,64,,51,,93,,56,57,53,54,,60,,58,59,61,23,24,65,66,,,',
',22,28,27,88,87,89,90,,,,,,,,,,41,,,92,91,82,50,84,83,85,86,94,95,,80',
'81,,38,39,37,,,,,,,,,,,,,,,,,,,,201,,,205,,,52,,,,,394,,,,40,,,,,,,',
'208,,,,,78,72,74,75,76,77,,,,73,79,62,63,64,,51,,93,,56,57,53,54,,60',
',58,59,61,23,24,65,66,,,,,22,28,27,88,87,89,90,,,,,,,,,,41,,,92,91,82',
'50,84,83,85,86,94,95,,80,81,,38,39,37,,,,,,,,,,,,,,,,,,,,201,,,205,',
',52,,,,,,,,,40,,,,,,,,208,,,,,78,72,74,75,76,77,,,,73,79,62,63,64,,51',
',93,,56,57,53,54,,60,,58,59,61,247,248,65,66,,,,,246,28,27,88,87,89',
'90,,,,,,,,,,41,,,92,91,82,50,84,83,85,86,94,95,,80,81,,38,39,37,,,,',
',,,,,,,,,,,,,,,201,,,205,,,52,,,,,300,,,,40,,,,,,,,208,,,,,78,72,74',
'75,76,77,,,,73,79,62,63,64,,51,,93,,56,57,53,54,,60,,58,59,61,247,248',
'65,66,,,,,246,276,280,88,87,89,90,,,,,,,,,,41,,,92,91,82,50,84,83,85',
'86,94,95,,80,81,,38,39,37,,,,,,,,,,,,,,,,,,,,201,,,205,,,52,,,,,,,,',
'40,,,,,,,,208,,,,,78,72,74,75,76,77,,,,73,79,62,63,64,,51,,93,,56,57',
'53,54,,60,,58,59,61,247,248,65,66,,,,,246,276,280,88,87,89,90,,,,,,',
',,,41,,,92,91,82,50,84,83,85,86,94,95,,80,81,,38,39,37,,,,,,,,,,,,,',
',,,,,,201,,,205,,,52,,,,,,,,,40,,,,,,,,208,,,,,78,72,74,75,76,77,,,',
'73,79,62,63,64,,51,,93,,56,57,53,54,,60,,58,59,61,23,24,65,66,,,,,22',
'28,27,88,87,89,90,,,,,,,,,,41,,,92,91,82,50,84,83,85,86,94,95,,80,81',
',38,39,37,,,,,,,,,,,,,,,,,,,,201,,,205,,,52,,,,,,,,,40,,,,,,,,208,,',
',,78,72,74,75,76,77,,,,73,79,62,63,64,,51,,93,,56,57,53,54,,60,,58,59',
'61,23,24,65,66,,,,,22,28,27,88,87,89,90,,,17,,,,,,,41,,,92,91,82,50',
'84,83,85,86,94,95,,80,81,,38,39,37,,,,,,,,,,,,,,,,,,,,201,,,205,,,52',
',,,,,,,,40,,,,,,,,18,,,,,78,72,74,75,76,77,,,,73,79,62,63,64,,51,,93',
',56,57,53,54,,60,,58,59,61,23,24,65,66,,,,,22,28,27,88,87,89,90,,,17',
',,,,,,41,,,92,91,82,50,84,83,85,86,94,95,,80,81,,38,39,37,,,,,,,,,,',
',,,,,,,,,201,,,205,,,52,,,,,,,,,40,,,,,,,,18,,,,,78,72,74,75,76,77,',
',,73,79,62,63,64,7,51,,93,,56,57,53,54,,60,,58,59,61,23,24,65,66,,,',
',22,28,27,88,87,89,90,,,17,,,,,,6,41,8,9,92,91,82,50,84,83,85,86,94',
'95,,80,81,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,',
',,,,18,,,,,78,72,74,75,76,77,,,,73,79,62,63,64,,51,,93,,56,57,53,54',
',60,,58,59,61,247,248,65,66,,,,,246,276,280,88,87,89,90,,,,,,,,,,41',
',,92,91,82,50,84,83,85,86,94,95,,80,81,,38,39,37,,,,,,,,,,,,,,,,,,,',
'201,,,205,,,52,,,,,,,,,40,,,,,,,,208,,,,,78,72,74,75,76,77,,,,73,79',
'62,63,64,,51,,93,,56,57,53,54,,60,,58,59,61,247,248,65,66,,,,,246,28',
'27,88,87,89,90,,,,,,,,,,41,,,92,91,82,50,84,83,85,86,94,95,,80,81,,38',
'39,37,,,,,,,,,,,,,,,,,,,,201,,,205,,,52,,,,,601,,244,,40,,,,,,,,208',
',,,,78,72,74,75,76,77,,,,73,79,62,63,64,7,51,,93,,56,57,53,54,,60,,58',
'59,61,23,24,65,66,,,,,22,28,27,88,87,89,90,,,17,,,,,,6,41,8,9,92,91',
'82,50,84,83,85,86,94,95,,80,81,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30',
',,52,,,,,32,,,,40,,,,,,,,18,,,,,78,72,74,75,76,77,,,,73,79,62,63,64',
',51,,93,,56,57,53,54,,60,,58,59,61,247,248,65,66,,,,,246,276,280,88',
'87,89,90,,,,,,,,,,41,,,92,91,82,50,84,83,85,86,94,95,,80,81,,38,39,37',
',,,,,,,,,,,,,,,,,,,201,,,205,,,52,,,,,,,,,40,,,,,,,,208,,,,,78,72,74',
'75,76,77,,,,73,79,62,63,64,,51,,93,,56,57,53,54,,60,,58,59,61,247,248',
'65,66,,,,,246,276,280,88,87,89,90,,,,,,,,,,41,,,92,91,82,50,84,83,85',
'86,94,95,,80,81,,38,39,37,,,,,,,,,,,,,,,,,,,,201,,,205,,,52,,,,,,,,',
'40,,,,,,,,208,,,,,78,72,74,75,76,77,,,,73,79,62,63,64,7,51,,93,,56,57',
'53,54,,60,,58,59,61,23,24,65,66,,,,,22,28,27,88,87,89,90,,,17,,,,,,6',
'41,8,9,92,91,82,50,84,83,85,86,94,95,,80,81,,38,39,37,,,,,,,,,,,,,,',
',,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,78,72,74,75,76,77,,,,73',
'79,62,63,64,,51,,93,,56,57,53,54,,60,,58,59,61,247,248,65,66,,,,,246',
'276,280,88,87,89,90,,,,,,,,,,41,,,92,91,82,50,84,83,85,86,94,95,,80',
'81,,38,39,37,,,,,,,,,,,,,,,,,,,,201,,,205,,,52,,,,,,,,,40,,,,,,,,208',
',,,,78,72,74,75,76,77,,,,73,79,62,63,64,,51,,93,,56,57,53,54,,60,,58',
'59,61,247,248,65,66,,,,,246,276,280,88,87,89,90,,,,,,,,,,41,,,92,91',
'82,50,84,83,85,86,94,95,,80,81,,38,39,37,,,,,,,,,,,,,,,,,,,,201,,,205',
',,52,,,,,,,,,40,,,,,,,,208,,,,,78,72,74,75,76,77,,,,73,79,62,63,64,',
'51,,93,,56,57,53,54,,60,,58,59,61,247,248,65,66,,,,,246,276,280,88,87',
'89,90,,,,,,,,,,41,,,92,91,82,50,84,83,85,86,94,95,,80,81,,38,39,37,',
',,,,,,,,,,,,,,,,,,201,,,205,,,52,,,,,,,,,40,,,,,,,,208,,,,,78,72,74',
'75,76,77,,,,73,79,62,63,64,,51,,93,,56,57,53,54,,60,,58,59,61,247,248',
'65,66,,,,,246,276,280,88,87,89,90,,,,,,,,,,41,,,92,91,82,50,84,83,85',
'86,94,95,,80,81,,38,39,37,,,,,,,,,,,,,,,,,,,,201,,,205,,,52,,,,,,,,',
'40,,,,,,,,208,,,,,78,72,74,75,76,77,,,,73,79,62,63,64,,51,,93,,56,57',
'53,54,,60,,58,59,61,247,248,65,66,,,,,246,276,280,88,87,89,90,,,,,,',
',,,41,,,92,91,82,50,84,83,85,86,94,95,,80,81,,38,39,37,,,,,,,,,,,,,',
',,,,,,201,,,205,,,52,,,,,,,,,40,,,,,,,,208,,,,,78,72,74,75,76,77,,,',
'73,79,62,63,64,,51,,93,,56,57,53,54,,60,,58,59,61,247,248,65,66,,,,',
'246,276,280,88,87,89,90,,,,,,,,,,41,,,92,91,82,50,84,83,85,86,94,95',
',80,81,,38,39,37,,,,,,,,,,,,,,,,,,,,201,,,205,,,52,,,,,,,,,40,,,,,,',
',208,,,,,78,72,74,75,76,77,,,,73,79,62,63,64,,51,,93,,56,57,53,54,,60',
',58,59,61,247,248,65,66,,,,,246,276,280,88,87,89,90,,,,,,,,,,41,,,92',
'91,82,50,84,83,85,86,94,95,,80,81,,38,39,37,,,,,,,,,,,,,,,,,,,,201,',
',205,,,52,,,,,,,,,40,,,,,,,,208,,,,,78,72,74,75,76,77,,,,73,79,62,63',
'64,,51,,93,,56,57,53,54,,60,,58,59,61,247,248,65,66,,,,,246,276,280',
'88,87,89,90,,,,,,,,,,41,,,92,91,82,50,84,83,85,86,94,95,,80,81,,38,39',
'37,,,,,,,,,,,,,,,,,,,,201,,,205,,,52,,,,,,,,,40,,,,,,,,208,,,,,78,72',
'74,75,76,77,,,,73,79,62,63,64,,51,,93,,56,57,53,54,,60,,58,59,61,247',
'248,65,66,,,,,246,276,280,88,87,89,90,,,,,,,,,,41,,,92,91,82,50,84,83',
'85,86,94,95,,80,81,,38,39,37,,,,,,,,,,,,,,,,,,,,201,,,205,,,52,,,,,',
',,,40,,,,,,,,208,,,,,78,72,74,75,76,77,,,,73,79,62,63,64,,51,,93,,56',
'57,53,54,,60,,58,59,61,247,248,65,66,,,,,246,276,280,88,87,89,90,,,',
',,,,,,41,,,92,91,82,50,84,83,85,86,94,95,,80,81,,38,39,37,,,,,,,,,,',
',,,,,,,,,201,,,205,,,52,,,,,,,,,40,,,,,,,,208,,,,,78,72,74,75,76,77',
',,,73,79,62,63,64,,51,,93,,56,57,53,54,,60,,58,59,61,247,248,65,66,',
',,,246,276,280,88,87,89,90,,,,,,,,,,41,,,92,91,82,50,84,83,85,86,94',
'95,,80,81,,38,39,37,,,,,,,,,,,,,,,,,,,,201,,,205,,,52,,,,,,,,,40,,,',
',,,,208,,,,,78,72,74,75,76,77,,,,73,79,62,63,64,,51,,93,,56,57,53,54',
',60,,58,59,61,247,248,65,66,,,,,246,276,280,88,87,89,90,,,,,,,,,,41',
',,92,91,82,50,84,83,85,86,94,95,,80,81,,38,39,37,,,,,,,,,,,,,,,,,,,',
'201,,,205,,,52,,,,,,,,,40,,,,,,,,208,,,,,78,72,74,75,76,77,,,,73,79',
'62,63,64,,51,,93,,56,57,53,54,,60,,58,59,61,247,248,65,66,,,,,246,276',
'280,88,87,89,90,,,,,,,,,,41,,,92,91,82,50,84,83,85,86,94,95,,80,81,',
'38,39,37,,,,,,,,,,,,,,,,,,,,201,,,205,,,52,,,,,,,,,40,,,,,,,,208,,,',
',78,72,74,75,76,77,,,,73,79,62,63,64,,51,,93,,56,57,53,54,,60,,58,59',
'61,247,248,65,66,,,,,246,276,280,88,87,89,90,,,,,,,,,,41,,,92,91,82',
'50,84,83,85,86,94,95,,80,81,,38,39,37,,,,,,,,,,,,,,,,,,,,201,,,205,',
',52,,,,,,,,,40,,,,,,,,208,,,,,78,72,74,75,76,77,,,,73,79,62,63,64,,51',
',93,,56,57,53,54,,60,,58,59,61,247,248,65,66,,,,,246,276,280,88,87,89',
'90,,,,,,,,,,41,,,92,91,82,50,84,83,85,86,94,95,,80,81,,38,39,37,,,,',
',,,,,,,,,,,,,,,201,,,205,,,52,,,,,,,,,40,,,,,,,,208,,,,,78,72,74,75',
'76,77,,,,73,79,62,63,64,,51,,93,,56,57,53,54,,60,,58,59,61,247,248,65',
'66,,,,,246,276,280,88,87,89,90,,,,,,,,,,41,,,92,91,82,50,84,83,85,86',
'94,95,,80,81,,38,39,37,,,,,,,,,,,,,,,,,,,,201,,,205,,,52,,,,,,,,,40',
',,,,,,,208,,,,,78,72,74,75,76,77,,,,73,79,62,63,64,,51,,93,,56,57,53',
'54,,60,,58,59,61,247,248,65,66,,,,,246,276,280,88,87,89,90,,,,,,,,,',
'41,,,92,91,82,50,84,83,85,86,94,95,,80,81,,38,39,37,,,,,,,,,,,,,,,,',
',,,201,,,205,,,52,,,,,,,,,40,,,,,,,,208,,,,,78,72,74,75,76,77,,,,73',
'79,62,63,64,,51,,93,,56,57,53,54,,60,,58,59,61,247,248,65,66,,,,,246',
'276,280,88,87,89,90,,,,,,,,,,41,,,92,91,82,50,84,83,85,86,94,95,,80',
'81,,38,39,37,,,,,,,,,,,,,,,,,,,,201,,,205,,,52,,,,,,,,,40,,,,,,,,208',
',,,,78,72,74,75,76,77,,,,73,79,62,63,64,,51,,93,,56,57,53,54,,60,,58',
'59,61,247,248,65,66,,,,,246,276,280,88,87,89,90,,,,,,,,,,41,,,92,91',
'82,50,84,83,85,86,94,95,,80,81,,38,39,37,,,,,,,,,,,,,,,,,,,,201,,,205',
',,52,,,,,,,,,40,,,,,,,,208,,,,,78,72,74,75,76,77,,,,73,79,62,63,64,',
'51,,93,,56,57,53,54,,60,,58,59,61,247,248,65,66,,,,,246,276,280,88,87',
'89,90,,,,,,,,,,41,,,92,91,82,50,84,83,85,86,94,95,,80,81,,38,39,37,',
',,,,,,,,,,,,,,,,,,201,,,205,,,52,,,,,,,,,40,,,,,,,,208,,,,,78,72,74',
'75,76,77,,,,73,79,62,63,64,,51,,93,,56,57,53,54,,60,,58,59,61,247,248',
'65,66,,,,,246,276,280,88,87,89,90,,,,,,,,,,41,,,92,91,82,50,84,83,85',
'86,94,95,,80,81,,38,39,37,,,,,,,,,,,,,,,,,,,,201,,,205,,,52,,,,,,,,',
'40,,,,,,,,208,,,,,78,72,74,75,76,77,,,,73,79,62,63,64,,51,,93,,56,57',
'53,54,,60,,58,59,61,247,248,65,66,,,,,246,276,280,88,87,89,90,,,,,,',
',,,41,,,92,91,82,50,84,83,85,86,94,95,,80,81,,38,39,37,,,,,,,,,,,,,',
',,,,,,201,,,205,,,52,,,,,,,,,40,,,,,,,,208,,,,,78,72,74,75,76,77,,,',
'73,79,62,63,64,,51,,93,,56,57,53,54,,60,,58,59,61,247,248,65,66,,,,',
'246,276,280,88,87,89,90,,,,,,,,,,41,,,92,91,82,50,84,83,85,86,94,95',
',80,81,,38,39,37,,,,,,,,,,,,,,,,,,,,201,,,205,,,52,,,,,,,,,40,,,,,,',
',208,,,,,78,72,74,75,76,77,,,,73,79,62,63,64,,51,,93,,56,57,53,54,,60',
',58,59,61,247,248,65,66,,,,,246,276,280,88,87,89,90,,,,,,,,,,41,,,92',
'91,82,50,84,83,85,86,94,95,,80,81,,38,39,37,,,,,,,,,,,,,,,,,,,,201,',
',205,,,52,,,,,,,,,40,,,,,,,,208,,,,,78,72,74,75,76,77,,,,73,79,62,63',
'64,,51,,93,,56,57,53,54,,60,,58,59,61,247,248,65,66,,,,,246,276,280',
'88,87,89,90,,,,,,,,,,41,,,92,91,82,50,84,83,85,86,94,95,,80,81,,38,39',
'37,,,,,,,,,,,,,,,,,,,,201,,,205,,,52,,,,,,,,,40,,,,,,,,208,,,,,78,72',
'74,75,76,77,,,,73,79,62,63,64,,51,,93,,56,57,53,54,,60,,58,59,61,247',
'248,65,66,,,,,246,276,280,88,87,89,90,,,,,,,,,,41,,,92,91,82,50,84,83',
'85,86,94,95,,80,81,,38,39,37,,,,,,,,,,,,,,,,,,,,201,,,205,,,52,,,,,',
',,,40,,,,,,,,208,,,,,78,72,74,75,76,77,,,,73,79,62,63,64,,51,,93,,56',
'57,53,54,,60,,58,59,61,247,248,65,66,,,,,246,276,280,88,87,89,90,,,',
',,,,,,41,,,92,91,82,50,84,83,85,86,94,95,,80,81,,38,39,37,,,,,,,,,,',
',,,,,,,,,201,,,205,,,52,,,,,,,,,40,,,,,,,,208,,,,,78,72,74,75,76,77',
',,,73,79,62,63,64,7,51,,93,,56,57,53,54,,60,,58,59,61,23,24,65,66,,',
',,22,28,27,88,87,89,90,,,17,,,,,,6,41,8,9,92,91,82,50,84,83,85,86,94',
'95,,80,81,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,',
',,,,18,,,,,78,72,74,75,76,77,,,,73,79,62,63,64,,51,,93,,56,57,53,54',
',60,,58,59,61,247,248,65,66,,,,,246,276,280,88,87,89,90,,,,,,,,,,41',
',,92,91,82,50,84,83,85,86,94,95,,80,81,,38,39,37,,,,,,,,,,,,,,,,,,,',
'201,,,205,,,52,,,,,,,,,40,,,,,,,,208,,,,-269,78,72,74,75,76,77,-269',
'-269,-269,73,79,-269,-269,-269,,-269,,93,,,,53,54,,,-269,-269,,,,,,',
',-269,-269,,-269,-269,-269,-269,-269,,,,,,,,,,,,,,,,,,,,,,-269,-269',
'-269,-269,-269,-269,-269,-269,-269,-269,-269,-269,-269,-269,,,-269,-269',
'-269,,592,-269,,,-269,,,-269,,-269,,-269,,-269,,-269,-269,-269,-269',
'-269,-269,-269,,-269,,-269,,,,,,,,,,,,,-269,-269,-269,-269,,-269,,-82',
',-269,62,63,64,,51,,,,56,57,,,,60,,58,59,61,247,248,65,66,,,,,246,276',
'280,88,87,89,90,,,,,,,,,,41,,,92,91,82,50,84,83,85,86,94,95,,80,81,',
'38,39,37,,,,,,,,,,,,,,,,,,,,201,,,205,,,52,,,,,,,,,40,,,,,,,,208,,,',
',78,72,74,75,76,77,,,,73,79,62,63,64,,51,,93,,56,57,53,54,,60,,58,59',
'61,247,248,65,66,,,,,246,276,280,88,87,89,90,,,,,,,,,,41,,,92,91,82',
'50,84,83,85,86,94,95,,80,81,,38,39,37,,,,,,,,,,,,,,,,,,,,201,,,205,',
',52,,,,,,,,,40,,,,,,,,208,,,,,78,72,74,75,76,77,,,,73,79,-464,-464,-464',
',-464,,93,,-464,-464,53,54,,-464,,-464,-464,-464,-464,-464,-464,-464',
',,,,-464,-464,-464,-464,-464,-464,-464,,,,,,,,,,-464,,,-464,-464,-464',
'-464,-464,-464,-464,-464,-464,-464,,-464,-464,,-464,-464,-464,,,,,,',
',,,,,,,,,,,,,-464,726,,-464,-464,,-464,,,,,-464,,-464,,-464,,,,,,,,-464',
',,,,-464,-464,-464,-464,-464,-464,,,,-464,-464,62,63,64,,51,,-464,-80',
'56,57,-464,-464,,60,,58,59,61,247,248,65,66,,,,,246,276,280,88,87,89',
'90,,,,,,,,,,41,,,92,91,82,50,84,83,85,86,94,95,,80,81,,38,39,37,,,,',
',,,,,,,,,,,,,,,201,,,205,,,52,,,,,,,,,40,,,,,,,,208,,,,,78,72,74,75',
'76,77,,,,73,79,62,63,64,,51,,93,,56,57,53,54,,60,,58,59,61,23,24,65',
'66,,,,,22,28,27,88,87,89,90,,,,,,,,,,41,,,92,91,82,50,84,83,85,86,94',
'95,,80,81,,38,39,37,,,,,,,,,,,,,,,,,,,,201,,,205,,,52,,,,,,,,,40,,,',
',,,,208,,,,,78,72,74,75,76,77,,,,73,79,62,63,64,,51,,93,,56,57,53,54',
',60,,58,59,61,23,24,65,66,,,,,22,28,27,88,87,89,90,,,,,,,,,,41,,,92',
'91,82,50,84,83,85,86,94,95,,80,81,,38,39,37,,,,,,,,,,,,,,,,,,,,201,',
',205,,,52,,,,,,,,,40,,,,,,,,208,,,,,78,72,74,75,76,77,,,,73,79,62,63',
'64,,51,,93,,56,57,53,54,,60,,58,59,61,247,248,65,66,,,,,246,28,27,88',
'87,89,90,,,,,,,,,,41,,,92,91,82,50,84,83,85,86,94,95,,80,81,,38,39,37',
',,,,,,,,,,,,,,,,,,,201,,,205,,,52,,,,,242,,244,,40,,,,,,,,208,,,,,78',
'72,74,75,76,77,,,,73,79,62,63,64,,51,,93,,56,57,53,54,,60,,58,59,61',
'247,248,65,66,,,,,246,28,27,88,87,89,90,,,,,,,,,,41,,,92,91,82,50,84',
'83,85,86,94,95,,80,81,,38,39,37,,,,,,,,,,,,,,,,,,,,201,,,205,,,471,',
',,,242,,244,,40,,,,,,,,208,,,,,78,72,74,75,76,77,,,,73,79,62,63,64,',
'51,,93,,56,57,53,54,,60,,58,59,61,23,24,65,66,,,,,22,28,27,88,87,89',
'90,,,,,,,,,,41,,,92,91,82,50,84,83,85,86,94,95,,80,81,,38,39,37,,,,',
',,,,,,,,,,,,,,,201,,,205,,,52,,,,,,,,,40,,,,,,,,208,,,,,78,72,74,75',
'76,77,,,,73,79,62,63,64,,51,,93,,56,57,53,54,,60,,58,59,61,247,248,65',
'66,,,,,246,276,280,88,87,89,90,,,,,,,,,,41,,,92,91,82,50,84,83,85,86',
'94,95,,80,81,,38,39,37,,,,,,,,,,,,,,,,,,,,201,,,205,,,52,,,,,713,,,',
'40,,,,,,,,208,,,,,78,72,74,75,76,77,,,,73,79,62,63,64,,51,,93,,56,57',
'53,54,,60,,58,59,61,247,248,65,66,,,,,246,28,27,88,87,89,90,,,,,,,,',
',41,,,92,91,82,50,84,83,85,86,94,95,,80,81,,38,39,37,,,,,,,,,,,,,,,',
',,,,201,,,205,,478,52,,,,,242,,244,,40,,,,,,,,208,,,,,78,72,74,75,76',
'77,,,,73,79,62,63,64,,51,,93,,56,57,53,54,,60,,58,59,61,247,248,65,66',
',,,,246,276,280,88,87,89,90,,,,,,,,,,41,,,92,91,82,50,84,83,85,86,94',
'95,,80,81,,38,39,37,,,,,,,,,,,,,,,,,,,,201,,,205,,,52,,,,,,,,,40,,,',
',,,,208,,,,,78,72,74,75,76,77,,,,73,79,62,63,64,7,51,,93,,56,57,53,54',
',60,,58,59,61,23,24,65,66,,,,,22,28,27,88,87,89,90,,,17,,,,,,6,41,8',
'9,92,91,82,50,84,83,85,86,94,95,,80,81,,38,39,37,,,,,,,,,,,,,,,,,,,',
'36,,,266,,,52,,,,,32,,,,40,,,,,,,,18,,,,,78,72,74,75,76,77,,,,73,79',
'62,63,64,7,51,,93,,56,57,53,54,,60,,58,59,61,23,24,65,66,,,,,22,28,27',
'88,87,89,90,,,17,,,,,,6,41,8,9,92,91,82,50,84,83,85,86,94,95,,80,81',
',38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,',
',78,72,74,75,76,77,,,,73,79,62,63,64,,51,,93,,56,57,53,54,,60,,58,59',
'61,23,24,65,66,,,,,22,28,27,88,87,89,90,,,17,,,,,,,41,,,92,91,82,50',
'84,83,85,86,94,95,,80,81,,38,39,37,,,,,,,,,,,,,,,,,,,,201,,,205,,,52',
',,,,,,,,40,,,,,,,,18,,,,,78,72,74,75,76,77,,,,73,79,62,63,64,7,51,,93',
',56,57,53,54,,60,,58,59,61,23,24,65,66,,,,,22,28,27,88,87,89,90,,,17',
',,,,,6,41,8,9,92,91,82,50,84,83,85,86,94,95,,80,81,,38,39,37,,,,,,,',
',,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,78,72,74,75,76,77',
',,,73,79,62,63,64,,51,,93,,56,57,53,54,,60,,58,59,61,247,248,65,66,',
',,,246,276,280,88,87,89,90,,,,,,,,,,277,,,92,91,82,50,84,83,85,86,94',
'95,,80,81,,,,281,,,,,,,,,,,,,,,,,,,,274,,,205,,,52,,,,,,,,,,,,,,,,,',
',,,,78,72,74,75,76,77,,,,73,79,62,63,64,7,51,,93,,56,57,53,54,,60,,58',
'59,61,23,24,65,66,,,,,22,28,27,88,87,89,90,,,17,,,,,,6,41,8,9,92,91',
'82,50,84,83,85,86,94,95,,80,81,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,266',
',,52,,,,,32,,,,40,,,,,,,,18,,,,,78,72,74,75,76,77,,,,73,79,62,63,64',
',51,,93,,56,57,53,54,,60,,58,59,61,247,248,65,66,,,,,246,28,27,88,87',
'89,90,,,,,,,,,,41,,,92,91,82,50,84,83,85,86,94,95,,80,81,,38,39,37,',
',,,,,,,,,,,,,,,,,,201,,,205,,,52,,,,,300,,,,40,,,,,,,,208,,,,,78,72',
'74,75,76,77,,,,73,79,62,63,64,,51,,93,,56,57,53,54,,60,,58,59,61,247',
'248,65,66,,,,,246,276,280,88,87,89,90,,,,,,,,,,277,,,92,91,82,50,84',
'83,85,86,94,95,,80,81,,,,281,,,,,,,,,,,,,,,,,,,,681,,,205,,,52,,,,,',
',,,,,,,,,,,,,,,,78,72,74,75,76,77,,,,73,79,62,63,64,,51,,93,,56,57,53',
'54,,60,,58,59,61,247,248,65,66,,,,,246,276,280,88,87,89,90,,,,,,,,,',
'41,,,92,91,82,50,84,83,85,86,94,95,,80,81,,38,39,37,,,,,,,,,,,,,,,,',
',,,201,,,205,,,52,,,,,671,,,,40,,,,,,,,208,,,,,78,72,74,75,76,77,,,',
'73,79,62,63,64,7,51,,93,,56,57,53,54,,60,,58,59,61,23,24,65,66,,,,,22',
'28,27,88,87,89,90,,,17,,,,,,6,41,8,9,92,91,82,50,84,83,85,86,94,95,',
'80,81,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,',
'18,,,,,78,72,74,75,76,77,,,,73,79,62,63,64,7,51,,93,,56,57,53,54,,60',
',58,59,61,23,24,65,66,,,,,22,28,27,88,87,89,90,,,17,,,,,,6,41,8,9,92',
'91,82,50,84,83,85,86,94,95,,80,81,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,',
'30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,78,72,74,75,76,77,,,,73,79,62,63',
'64,7,51,,93,,56,57,53,54,,60,,58,59,61,23,24,65,66,,,,,22,28,27,88,87',
'89,90,,,17,,,,,,6,41,8,9,92,91,82,50,84,83,85,86,94,95,,80,81,,38,39',
'37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,78,72',
'74,75,76,77,,,,73,79,62,63,64,,51,,93,,56,57,53,54,,60,,58,59,61,247',
'248,65,66,,,,,246,276,280,88,87,89,90,,,,,,,,,,41,,,92,91,82,50,84,83',
'85,86,94,95,,80,81,,38,39,37,,,,,,,,,,,,,,,,,,,,201,,,205,,,52,,,,,',
',,,40,,,,,,,,208,,,,,78,72,74,75,76,77,,,,73,79,62,63,64,,51,,93,,56',
'57,53,54,,60,,58,59,61,247,248,65,66,,,,,246,276,280,88,87,89,90,,,',
',,,,,,41,,,92,91,82,50,84,83,85,86,94,95,,80,81,,38,39,37,,,,,,,,,,',
',,,,,,,,,201,,,205,,,52,,,,,,,,,40,,,,,,,,208,,,,,78,72,74,75,76,77',
',,,73,79,62,63,64,,51,,93,,56,57,53,54,,60,,58,59,61,247,248,65,66,',
',,,246,276,280,88,87,89,90,,,,,,,,,,41,,,92,91,82,50,84,83,85,86,94',
'95,,80,81,,38,39,37,,,,,,,,,,,,,,,,,,,,201,,,205,,,52,,,,,655,,,,40',
',,,,,,,208,,,,,78,72,74,75,76,77,,,,73,79,62,63,64,,51,,93,,56,57,53',
'54,,60,,58,59,61,247,248,65,66,,,,,246,276,280,88,87,89,90,,,,,,,,,',
'41,,,92,91,82,50,84,83,85,86,94,95,,80,81,,38,39,37,,,,,,,,,,,,,,,,',
',,,201,,,205,,,52,,,,,394,,,,40,,,,,,,,208,,,,,78,72,74,75,76,77,,,',
'73,79,62,63,64,,51,,93,,56,57,53,54,,60,,58,59,61,23,24,65,66,,,,,22',
'28,27,88,87,89,90,,,17,,,,,,,41,,,92,91,82,50,84,83,85,86,94,95,,80',
'81,,38,39,37,,,,,,,,,,,,,,,,,,,,201,,,205,,,52,,,,,,,,,40,,,,,,,,18',
',,,,78,72,74,75,76,77,,,,73,79,62,63,64,,51,,93,,56,57,53,54,,60,,58',
'59,61,247,248,65,66,,,,,246,276,280,88,87,89,90,,,,,,,,,,41,,,92,91',
'82,50,84,83,85,86,94,95,,80,81,,38,39,37,,,,,,,,,,,,,,,,,,,,201,,,205',
',,52,,,,,,,,,40,,,,,,,,208,,,,,78,72,74,75,76,77,,,,73,79,62,63,64,',
'51,,93,,56,57,53,54,,60,,58,59,61,247,248,65,66,,,,,246,276,280,88,87',
'89,90,,,,,,,,,,41,,,92,91,82,50,84,83,85,86,94,95,,80,81,,38,39,37,',
',,,,,,,,,,,,,,,,,,201,,,205,,,52,,,,,,,,,40,,,,,,,,208,,,,,78,72,74',
'75,76,77,,,,73,79,62,63,64,,51,,93,,56,57,53,54,,60,,58,59,61,247,248',
'65,66,,,,,246,276,280,88,87,89,90,,,,,,,,,,41,,,92,91,82,50,84,83,85',
'86,94,95,,80,81,,38,39,37,,,,,,,,,,,,,,,,,,,,201,,,205,,,52,,,,,,,,',
'40,,,,,,,,208,,,,,78,72,74,75,76,77,,,,73,79,62,63,64,,51,,93,,56,57',
'53,54,,60,,58,59,61,247,248,65,66,,,,,246,276,280,88,87,89,90,,,,,,',
',,,41,,,92,91,82,50,84,83,85,86,94,95,,80,81,,38,39,37,,,,,,,,,,,,,',
',,,,,,201,,,205,498,,52,,,,,,,,,40,,,,,,,,208,,,,,78,72,74,75,76,77',
',,,73,79,62,63,64,,51,,93,,56,57,53,54,,60,,58,59,61,247,248,65,66,',
',,,246,28,27,88,87,89,90,,,,,,,,,,41,,,92,91,82,50,84,83,85,86,94,95',
',80,81,,38,39,37,,,,,,,,,,,,,,,,,,,,201,,,205,,,52,,,,,300,,,,40,,,',
',,,,208,,,,,78,72,74,75,76,77,,,,73,79,62,63,64,7,51,,93,,56,57,53,54',
',60,,58,59,61,23,24,65,66,,,,,22,28,27,88,87,89,90,,,17,,,,,,6,41,8',
'9,92,91,82,50,84,83,85,86,94,95,,80,81,,38,39,37,,,,,,,,,,,,,,,,,,,',
'36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,78,72,74,75,76,77,,,,73,79,62',
'63,64,7,51,,93,,56,57,53,54,,60,,58,59,61,23,24,65,66,,,,,22,28,27,88',
'87,89,90,,,17,,,,,,6,41,8,9,92,91,82,50,84,83,85,86,94,95,,80,81,,38',
'39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,78',
'72,74,75,76,77,,,,73,79,62,63,64,,51,,93,,56,57,53,54,,60,,58,59,61',
'23,24,65,66,,,,,22,28,27,88,87,89,90,,,17,,,,,,,41,,,92,91,82,50,84',
'83,85,86,94,95,,80,81,,38,39,37,,,,,,,,,,,,,,,,,,,,201,,,205,,627,52',
',,,,625,,244,,40,,,,,,,,18,,,,,78,72,74,75,76,77,,,,73,79,62,63,64,',
'51,,93,,56,57,53,54,,60,,58,59,61,247,248,65,66,,,,,246,276,280,88,87',
'89,90,,,,,,,,,,41,,,92,91,82,50,84,83,85,86,94,95,,80,81,,38,39,37,',
',,,,,,,,,,,,,,,,,,201,,,205,,,52,,,,,,,,,40,,,,,,,,208,,,,,78,72,74',
'75,76,77,,,,73,79,62,63,64,,51,,93,,56,57,53,54,,60,,58,59,61,247,248',
'65,66,,,,,246,276,280,88,87,89,90,,,,,,,,,,41,,,92,91,82,50,84,83,85',
'86,94,95,,80,81,,38,39,37,,,,,,,,,,,,,,,,,,,,201,,,205,,,52,,,,,605',
',244,,40,,,,,,,,208,,,,,78,72,74,75,76,77,,,,73,79,62,63,64,,51,,93',
',56,57,53,54,,60,,58,59,61,247,248,65,66,,,,,246,276,280,88,87,89,90',
',,,,,,,,,41,,,92,91,82,50,84,83,85,86,94,95,,80,81,,38,39,37,,,,,,,',
',,,,,,,,,,,,201,,,205,,,52,,,,,,,,,40,,,,,,,,208,,,,,78,72,74,75,76',
'77,,,,73,79,62,63,64,,51,,93,,56,57,53,54,,60,,58,59,61,247,248,65,66',
',,,,246,276,280,88,87,89,90,,,,,,,,,,41,,,92,91,82,50,84,83,85,86,94',
'95,,80,81,,38,39,37,,,,,,,,,,,,,,,,,,,,201,,,205,,,52,,,,,601,,244,',
'40,,,,,,,,208,,,,,78,72,74,75,76,77,,,,73,79,62,63,64,,51,,93,,56,57',
'53,54,,60,,58,59,61,247,248,65,66,,,,,246,276,280,88,87,89,90,,,,,,',
',,,41,,,92,91,82,50,84,83,85,86,94,95,,80,81,,38,39,37,,,,,,,,,,,,,',
',,,,,,201,,,205,,,52,,,,,,,,,40,,,,,,,,208,,,,,78,72,74,75,76,77,,,',
'73,79,62,63,64,,51,,93,,56,57,53,54,,60,,58,59,61,247,248,65,66,,,,',
'246,276,280,88,87,89,90,,,,,,,,,,41,,,92,91,82,50,84,83,85,86,94,95',
',80,81,,38,39,37,,,,,,,,,,,,,,,,,,,,201,,,205,,,52,,,,,,,,,40,,,,,,',
',208,,,,,78,72,74,75,76,77,,,,73,79,62,63,64,,51,,93,,56,57,53,54,,60',
',58,59,61,247,248,65,66,,,,,246,276,280,88,87,89,90,,,,,,,,,,41,,,92',
'91,82,50,84,83,85,86,94,95,,80,81,,38,39,37,,,,,,,,,,,,,,,,,,,,201,',
',205,,,52,,,,,,,,,40,,,,,,,,208,,,,,78,72,74,75,76,77,,,,73,79,62,63',
'64,,51,,93,,56,57,53,54,,60,,58,59,61,247,248,65,66,,,,,246,28,27,88',
'87,89,90,,,,,,,,,,41,,,92,91,82,50,84,83,85,86,94,95,,80,81,,38,39,37',
',,,,,,,,,,,,,,,,,,,201,,,205,,,52,,,,,300,,,,40,,,,,,,,208,,,,,78,72',
'74,75,76,77,,,,73,79,-467,-467,-467,,-467,,93,,-467,-467,53,54,,-467',
',-467,-467,-467,-467,-467,-467,-467,,,,,-467,-467,-467,-467,-467,-467',
'-467,,,,,,,,,,-467,,,-467,-467,-467,-467,-467,-467,-467,-467,-467,-467',
',-467,-467,,-467,-467,-467,,,,,,,,,,,,,,,,,,,,-467,,,-467,-467,,-467',
',,,,-467,,-467,,-467,,,,,,,,-467,,,,,-467,-467,-467,-467,-467,-467,',
',,-467,-467,-466,-466,-466,,-466,,-467,,-466,-466,-467,-467,,-466,,-466',
'-466,-466,-466,-466,-466,-466,,,,,-466,-466,-466,-466,-466,-466,-466',
',,,,,,,,,-466,,,-466,-466,-466,-466,-466,-466,-466,-466,-466,-466,,-466',
'-466,,-466,-466,-466,,,,,,,,,,,,,,,,,,,,-466,,,-466,-466,,-466,,,,,-466',
',-466,,-466,,,,,,,,-466,,,,,-466,-466,-466,-466,-466,-466,,,,-466,-466',
'62,63,64,,51,,-466,,56,57,-466,-466,,60,,58,59,61,23,24,65,66,,,,,22',
'28,27,88,87,89,90,,,17,,,,,,,41,,,92,91,82,50,84,83,85,86,94,95,,80',
'81,,38,39,37,,,,,,,,,,,,,,,,,,,,201,,,205,,,52,,,,,,,,,40,,,,,,,,18',
',,,,78,72,74,75,76,77,,,,73,79,62,63,64,,51,,93,,56,57,53,54,,60,,58',
'59,61,23,24,65,66,,,,,22,28,27,88,87,89,90,,,17,,,,,,,41,,,92,91,82',
'50,84,83,85,86,94,95,,80,81,,38,39,37,,,,,,,,,,,,,,,,,,,,201,,,205,',
',52,,,,,,,,,40,,,,,,,,18,,,,-269,78,72,74,75,76,77,-269,-269,-269,73',
'79,,-269,-269,,-269,,93,,,,53,54,,,,,,,,,,,,-269,-269,,-269,-269,-269',
'-269,-269,,,,,,,,,,,,,,,,,,,,,,-269,-269,-269,-269,-269,-269,-269,-269',
'-269,-269,-269,-269,-269,-269,,,-269,-269,-269,,592,,,,-269,,,,,,,-269',
',-269,,-269,-269,-269,-269,-269,-269,-269,,-269,,-269,,,,,,,,,,,,,-269',
'-269,,-74,-468,-269,,-82,,-269,,-468,-468,-468,,,,-468,-468,,-468,,',
',,,,,,-468,,,,,,,,,,-468,-468,,-468,-468,-468,-468,-468,,,,,,,,,,,,',
',,,,,,,,,-468,-468,-468,-468,-468,-468,-468,-468,-468,-468,-468,-468',
'-468,-468,,,-468,-468,-468,,589,,,,-468,,,,,,,-468,,-468,,-468,-468',
'-468,-468,-468,-468,-468,,-468,-468,-468,,,,,,,,,,,,,-468,-468,,-72',
',-468,,-80,,-468,-244,-244,-244,,-244,,,,-244,-244,,,,-244,,-244,-244',
'-244,-244,-244,-244,-244,,,,,-244,-244,-244,-244,-244,-244,-244,,,,',
',,,,,-244,,,-244,-244,-244,-244,-244,-244,-244,-244,-244,-244,,-244',
'-244,,-244,-244,-244,,,,,,,,,,,,,,,,,,,,-244,,,-244,255,,-244,,,,,-244',
',-244,,-244,,,,,,,,-244,,,,,-244,-244,-244,-244,-244,-244,,,,-244,-244',
'62,63,64,,51,,-244,,56,57,-244,-244,,60,,58,59,61,247,248,65,66,,,,',
'246,276,280,88,87,89,90,,,,,,,,,,41,,,92,91,82,50,84,83,85,86,94,95',
',80,81,,38,39,37,,,,,,,,,,,,,,,,,,,,201,,,205,,,52,,,,,,,,,40,,,,,,',
',208,,,,,78,72,74,75,76,77,,,,73,79,62,63,64,,51,,93,,56,57,53,54,,60',
',58,59,61,23,24,65,66,,,,,22,28,27,88,87,89,90,,,17,,,,,,,41,,,92,91',
'82,50,84,83,85,86,94,95,,80,81,,38,39,37,,,,,,,,,,,,,,,,,,,,201,,,205',
',,52,,,,,,,,,40,,,,,,,,18,,,,,78,72,74,75,76,77,,,,73,79,62,63,64,7',
'51,,93,,56,57,53,54,,60,,58,59,61,23,24,65,66,,,,,22,28,27,88,87,89',
'90,,,17,,,,,,6,41,8,9,92,91,82,50,84,83,85,86,94,95,,80,81,,38,39,37',
',,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,78,72,74',
'75,76,77,,,,73,79,62,63,64,7,51,,93,,56,57,53,54,,60,,58,59,61,23,24',
'65,66,,,,,22,28,27,88,87,89,90,,,17,,,,,,6,41,8,9,92,91,82,50,84,83',
'85,86,94,95,,80,81,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32',
',,,40,,,,,,,,18,,,,-484,78,72,74,75,76,77,-484,-484,-484,73,79,-484',
'-484,-484,,-484,,93,,,,53,54,,,-484,,,,,,,,,-484,-484,,-484,-484,-484',
'-484,-484,,,,,,,,,,,,-484,,,,,,,-484,-484,-484,,,-484,-484,-484,,-484',
',,,,-484,,,,,-484,,-484,,,,,255,-484,-484,-484,,-484,-484,-484,-484',
'-484,,,,,,,,,,,,,-484,,,,,,,,,,,,,-484,,-484,,,-484,,-484,,,,,,,-484',
',,,,255,-484,,,,,,,,,,,,,,,,,,,,,-484,,,,,,,,,,,,,-484,,-484,,,-484',
'151,162,152,175,148,168,158,157,,,173,156,155,150,176,,,160,149,163',
'167,169,161,154,,,170,177,172,349,348,350,347,147,166,165,178,179,180',
'181,182,146,153,144,145,345,346,343,111,84,83,344,86,,,,,,,137,138,',
'135,119,120,121,,124,126,,,122,,,,,139,140,127,128,,,,,,355,,,,,,,132',
'131,,118,136,134,133,129,130,125,123,116,,117,,,141,,151,162,152,175',
'148,168,158,157,,,173,156,155,150,176,,351,160,149,163,167,169,161,154',
',,170,177,172,171,164,174,159,147,166,165,178,179,180,181,182,146,153',
'144,145,142,143,109,111,372,371,110,373,,,,,,,137,138,,135,119,120,121',
',124,126,,,122,,,,,139,140,127,128,,,,,,,,,,,,,132,131,,118,136,134',
'133,129,130,125,123,116,,117,,,141,,151,162,152,175,148,168,158,157',
',,173,156,155,150,176,,183,160,149,163,167,169,161,154,,,170,177,172',
'171,164,174,159,147,166,165,178,179,180,181,182,146,153,144,145,142',
'143,109,111,,,110,,,,,,,,137,138,,135,119,120,121,,124,126,,,122,,,',
',139,140,127,128,,,,,,,,,,,,,132,131,,118,136,134,133,129,130,125,123',
'116,,117,,,141,,151,162,152,175,148,168,158,157,,,173,156,155,150,176',
',183,160,149,163,167,169,161,154,,,170,177,172,171,164,174,159,147,166',
'165,178,179,180,181,182,146,153,144,145,142,143,109,111,108,,110,,,',
',,,,137,138,,135,119,120,121,,124,126,,,122,,,,,139,140,127,128,,,,',
',,,,,,,,132,131,,118,136,134,133,129,130,125,123,116,,117,,,141,184',
'151,162,152,175,148,168,158,157,,79,173,156,155,150,176,,183,160,149',
'163,167,169,161,154,,,170,177,172,171,164,174,159,147,166,165,178,179',
'180,181,182,146,153,144,145,142,143,109,111,,,110,,,,,,,,137,138,,135',
'119,120,121,,124,126,,,122,,,,,139,140,127,128,,,,,,,,,,,,,132,131,',
'118,136,134,133,129,130,125,123,116,,117,,,141,184,151,162,152,175,148',
'168,158,157,,79,173,156,155,150,176,,183,160,149,163,167,169,161,154',
',,170,177,172,171,164,174,159,147,166,165,178,179,180,181,182,146,153',
'144,145,142,143,109,111,372,371,110,373,,,,,,,137,138,,135,119,120,121',
',124,126,,,122,,,,,139,140,127,128,,,,,,,,,,,,,132,131,,118,136,134',
'133,129,130,125,123,116,,117,,,141,,151,162,152,175,148,168,158,157',
',,173,156,155,150,176,,183,160,149,163,167,169,161,154,,,170,177,172',
'171,164,174,159,147,166,165,178,179,180,181,182,146,153,144,145,142',
'143,109,111,,,110,,,,,,,,137,138,,135,119,120,121,,124,126,,,122,,,',
',139,140,127,128,,,,,,,,,,,,,132,131,,118,136,134,133,129,130,125,123',
'116,,117,,,141,184,151,162,152,175,148,168,158,157,,79,173,156,155,150',
'176,,183,160,149,163,167,169,161,154,,,170,177,172,171,164,174,159,147',
'166,165,178,179,180,181,182,146,153,144,145,142,143,109,111,,,110,,',
',,,,,137,138,,135,119,120,121,,124,126,,,122,,,,,139,140,127,128,,,',
',,,,,,,,,132,131,,118,136,134,133,129,130,125,123,116,,117,579,,141',
'184,,,,,,,,,,79,,,,,,,183,,216,220,225,226,227,222,224,232,233,228,229',
',209,210,,,230,231,,,,,,,,,,,,,,213,,219,,215,214,211,212,223,221,217',
',218,216,220,225,226,227,222,224,232,233,228,229,,209,210,,234,230,231',
',,,,,,,,,,,,,213,,219,,215,214,211,212,223,221,217,,218,,,,,,,866,404',
',,867,,,,,234,,609,137,138,,135,119,120,121,,124,126,,,122,,,,,139,140',
'127,128,,,,,,,,,,,,,132,131,,118,136,134,133,129,130,125,123,116,,117',
'459,404,141,,460,,,,,,,,137,138,,135,119,120,121,,124,126,,,122,,,,',
'139,140,127,128,,,,,,,,,,,,,132,131,,118,136,134,133,129,130,125,123',
'116,,117,595,410,141,,596,,,,,,,,137,138,,135,119,120,121,,124,126,',
',122,,,,,139,140,127,128,,,,,,,,,,,,,132,131,,118,136,134,133,129,130',
'125,123,116,,117,593,404,141,,594,,,,,,,,137,138,,135,119,120,121,,124',
'126,,,122,,,,,139,140,127,128,,,,,,,,,,,,,132,131,,118,136,134,133,129',
'130,125,123,116,,117,868,410,141,,869,,,,,,,,137,138,,135,119,120,121',
',124,126,,,122,,,,,139,140,127,128,,,,,,,,,,,,,132,131,,118,136,134',
'133,129,130,125,123,116,,117,406,410,141,,408,,,,,,,,137,138,,135,119',
'120,121,,124,126,,,122,,,,,139,140,127,128,,,,,,,,,,,,,132,131,,118',
'136,134,133,129,130,125,123,116,,117,640,410,141,,641,,,,,,,,137,138',
',135,119,120,121,,124,126,,,122,,,,,139,140,127,128,,,,,,,,,,,,,132',
'131,,118,136,134,133,129,130,125,123,116,,117,459,404,141,,460,,,,,',
',,137,138,,135,119,120,121,,124,126,,,122,,,,,139,140,127,128,,,,,,',
',,,,,,132,131,,118,136,134,133,129,130,125,123,116,,117,,,141,216,220',
'225,226,227,222,224,232,233,228,229,,209,210,,,230,231,,,,-210,,,,,',
',,,,213,,219,,215,214,211,212,223,221,217,,218,,,,,,,637,404,,,638,',
',,,234,,-210,137,138,,135,119,120,121,,124,126,,,122,,,,,139,140,127',
'128,,,,,,,,,,,,,132,131,,118,136,134,133,129,130,125,123,116,,117,593',
'404,141,,594,,,,,,,,137,138,,135,119,120,121,,124,126,,,122,,,,,139',
'140,127,128,,,,,,,,,,,,,132,131,,118,136,134,133,129,130,125,123,116',
',117,595,410,141,,596,,,,,,,,137,138,,135,119,120,121,,124,126,,,122',
',,,,139,140,127,128,,,,,,,,,,,,,132,131,,118,136,134,133,129,130,125',
'123,116,,117,459,404,141,,460,,,,,,,,137,138,,135,119,120,121,,124,126',
',,122,,,,,139,140,127,128,,,,,,,,,,,,,132,131,,118,136,134,133,129,130',
'125,123,116,,117,401,404,141,,402,,,,,,,,137,138,,135,119,120,121,,124',
'126,,,122,,,,,139,140,127,128,,,,,,,,,,,,,132,131,,118,136,134,133,129',
'130,125,123,116,,117,684,410,141,,682,,,,,,,,137,138,,135,119,120,121',
',124,126,,,122,,,,,139,140,127,128,,,,,,,,,,,,,132,131,,118,136,134',
'133,129,130,125,123,116,,117,684,410,141,,825,,,,,,,,137,138,,135,119',
'120,121,,124,126,,,122,,,,,139,140,127,128,,,,,,,,,,,,,132,131,,118',
'136,134,133,129,130,125,123,116,,117,459,404,141,,460,,,,,,,,137,138',
',135,119,120,121,,124,126,,,122,,,,,139,140,127,128,,,,,,,,,,,,,132',
'131,,118,136,134,133,129,130,125,123,116,,117,459,404,141,,460,,,,,',
',,137,138,,135,119,120,121,,124,126,,,122,,,,,139,140,127,128,,,,,,',
',,,,,,132,131,,118,136,134,133,129,130,125,123,116,,117,,,141,216,220',
'225,226,227,222,224,232,233,228,229,,209,210,,,230,231,,,,,,,,,,,,,',
'213,,219,,215,214,211,212,223,221,217,,218,,216,220,225,226,227,222',
'224,232,233,228,229,,209,210,234,599,230,231,,,,,,,,,,,,,,213,,219,',
'215,214,211,212,223,221,217,,218,216,220,225,226,227,222,224,232,233',
'228,229,,209,210,292,234,230,231,,,,,,,,,,,,,,213,,219,,215,214,211',
'212,223,221,217,,218,216,220,225,226,227,222,224,232,233,228,229,,209',
'210,,234,230,231,,,,,,,,,,,,,,213,,219,,215,214,211,212,223,221,217',
',218,216,220,225,226,227,222,224,232,233,228,229,,209,210,,234,230,231',
',,,,,,,,,,,,,213,,219,,215,214,211,212,223,221,217,,218,216,220,225',
'226,227,222,224,232,233,228,229,,209,210,,234,230,231,,,,,,,,,,,,,,213',
',219,,215,214,211,212,223,221,217,,218,216,220,225,226,227,222,224,232',
'233,228,229,,209,210,,234,230,231,,,,,,,,,,,,,,213,,219,,215,214,211',
'212,223,221,217,,218,216,220,225,226,227,222,224,232,233,228,229,,209',
'210,,234,230,231,,,,,,,,,,,,,,213,,219,,215,214,211,212,223,221,217',
',218,216,220,225,226,227,222,224,232,233,228,229,,209,210,,234,230,231',
',,,,,,,,,,,,,213,,219,,215,214,211,212,223,221,217,,218,216,220,225',
'226,227,222,224,232,233,228,229,,209,210,292,234,230,231,,,,,,,,,,,',
',,213,,219,,215,214,211,212,223,221,217,,218,216,220,225,226,227,222',
'224,232,233,228,229,,209,210,,234,230,231,,,,,,,,,,,,,,213,,219,,215',
'214,211,212,223,221,217,,218,216,220,225,226,227,222,224,232,233,228',
'229,,209,210,,234,230,231,,,,,,,,,,,,,,213,,219,,215,214,211,212,223',
'221,217,,218,216,220,225,226,227,222,224,232,233,228,229,,209,210,,234',
'230,231,,,,,,,,,,,,,,213,,219,,215,214,211,212,223,221,217,,218,216',
'220,225,226,227,222,224,232,233,228,229,,209,210,,234,230,231,,,,,,',
',,,,,,,213,,219,,215,214,211,212,223,221,217,,218,216,220,225,226,227',
'222,224,232,233,228,229,,209,210,,234,230,231,,,,,,,,,,,,,,213,,219',
',215,214,211,212,223,221,217,,218,216,220,225,226,227,222,224,232,233',
'228,229,,209,210,,234,230,231,,,,,,,,,,,,,,213,,219,,215,214,211,212',
'223,221,217,,218,,,,,,,,,,,,,,,,234' ]
        racc_action_table = arr = Array.new(23480, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'0,0,0,0,0,520,339,278,0,0,545,545,55,0,570,0,0,0,0,0,0,0,419,366,26',
'35,0,0,0,0,0,0,0,272,634,0,295,295,559,559,272,0,0,0,0,0,0,0,0,0,0,0',
'0,0,0,359,0,0,462,0,0,0,521,770,15,15,35,419,70,278,35,634,670,867,570',
'570,70,281,281,868,817,0,357,570,0,366,26,0,309,272,278,462,0,597,623',
'55,0,545,308,755,593,520,545,520,0,866,520,26,339,0,0,0,0,0,0,359,359',
'359,0,0,881,881,881,295,881,559,0,339,881,881,0,0,339,881,623,881,881',
'881,881,881,881,881,357,357,357,593,881,881,881,881,881,881,881,449',
'868,640,640,618,521,770,521,770,881,521,770,881,881,881,881,881,881',
'881,881,881,881,363,881,881,200,881,881,881,670,867,670,867,449,670',
'867,868,817,868,817,640,868,817,617,640,309,348,309,881,368,309,881',
'739,348,881,308,755,308,755,739,308,755,866,881,866,361,813,866,361',
'544,200,881,298,813,544,298,881,881,881,881,881,881,363,363,363,881',
'881,875,875,875,822,875,822,881,846,875,875,881,881,739,875,846,875',
'875,875,875,875,875,875,368,368,368,582,875,875,875,875,875,875,875',
'199,275,813,466,273,361,361,199,275,875,466,273,875,875,875,875,875',
'875,875,875,875,875,347,875,875,594,875,875,875,347,846,646,646,582',
'287,25,536,582,877,346,343,287,25,536,624,877,346,343,875,259,466,875',
'609,3,875,337,199,275,3,875,273,875,337,875,202,749,680,488,13,628,594',
'875,749,680,488,13,875,875,875,875,875,875,259,727,646,875,875,862,862',
'862,287,862,536,875,877,862,862,875,875,313,862,313,862,862,862,862',
'862,862,862,202,402,337,14,862,862,862,862,862,862,862,810,749,680,488',
'13,637,260,810,727,862,37,37,862,862,862,862,862,862,862,862,862,862',
'351,862,862,401,862,862,862,351,630,402,638,14,42,402,811,14,641,260',
'349,42,637,811,312,641,637,349,862,312,641,862,353,682,862,869,810,344',
'631,353,682,345,869,862,344,682,401,869,345,638,401,862,632,638,607',
'529,862,862,862,862,862,862,636,284,203,862,862,859,859,859,42,859,811',
'862,641,859,859,862,862,604,859,639,859,859,859,859,859,859,859,682',
'828,869,602,859,859,859,859,859,859,859,529,529,529,529,284,307,307',
'204,284,859,771,426,859,859,859,859,859,859,859,859,859,859,350,859',
'859,687,859,859,859,350,687,299,870,870,299,828,828,828,828,425,108',
'642,426,240,108,108,426,426,859,302,305,859,302,305,859,771,771,771',
'771,644,549,658,658,859,473,549,473,473,473,473,425,859,532,532,425',
'425,859,859,859,859,859,859,645,201,647,859,859,854,854,854,854,854',
'241,859,650,854,854,859,859,651,854,245,854,854,854,854,854,854,854',
'473,473,473,473,854,854,854,854,854,854,854,473,444,854,5,5,5,5,5,854',
'854,854,854,854,854,854,854,854,854,854,854,854,854,590,854,854,660',
'854,854,854,666,563,563,444,563,563,563,444,444,444,444,375,375,375',
'375,375,668,669,585,854,254,185,854,673,674,854,677,679,265,681,854',
'574,684,685,854,527,686,527,527,527,527,554,854,552,691,692,551,854',
'854,854,854,854,854,550,267,546,854,854,847,847,847,847,847,701,854',
'268,847,847,854,854,269,847,712,847,847,847,847,847,847,847,527,527',
'527,527,847,847,847,847,847,847,847,445,96,847,274,523,522,276,516,847',
'847,847,847,847,847,847,847,847,847,847,847,847,847,77,847,847,76,847',
'847,847,277,280,445,502,729,730,445,445,445,445,499,733,734,737,738',
'285,740,286,289,847,744,489,847,293,484,847,41,480,759,479,847,762,36',
'477,847,694,34,694,694,694,694,294,847,297,468,467,696,847,847,847,847',
'847,847,780,782,783,847,847,843,843,843,784,843,785,847,786,843,843',
'847,847,465,843,791,843,843,843,843,843,843,843,694,694,694,694,843',
'843,843,843,843,843,843,696,696,696,696,464,20,455,801,802,843,301,805',
'843,843,843,843,843,843,843,843,843,843,430,843,843,429,843,843,843',
'428,427,812,303,407,819,820,12,314,824,825,400,832,396,11,838,10,841',
'842,843,9,315,843,393,388,843,8,387,856,365,843,860,362,865,843,61,317',
'61,61,61,61,318,843,319,335,322,871,843,843,843,843,843,843,873,333',
'876,843,843,840,840,840,330,840,1,843,883,840,840,843,843,,840,,840',
'840,840,840,840,840,840,61,61,61,61,840,840,840,840,840,840,840,,,,',
',,,,,840,,,840,840,840,840,840,840,840,840,840,840,,840,840,,840,840',
'840,,,,,,,,,,,,,,,,,,,,840,,,840,,,840,,,,,840,,840,,840,548,,548,548',
'548,548,,840,,,,,840,840,840,840,840,840,,,,840,840,837,837,837,,837',
',840,,837,837,840,840,,837,,837,837,837,837,837,837,837,548,548,548',
'548,837,837,837,837,837,837,837,,,,,,,,,,837,,,837,837,837,837,837,837',
'837,837,837,837,,837,837,,837,837,837,439,439,439,439,439,439,439,,',
'439,439,,,,,,439,439,,837,,,837,,,837,,,,,837,439,837,439,837,439,439',
'439,439,439,439,439,837,439,,,,837,837,837,837,837,837,,,,837,837,821',
'821,821,,821,,837,,821,821,837,837,,821,,821,821,821,821,821,821,821',
',,,,821,821,821,821,821,821,821,,,,,,,,,,821,,,821,821,821,821,821,821',
'821,821,821,821,,821,821,,821,821,821,443,443,443,443,443,443,443,,',
'443,443,,,,,,443,443,,821,,,821,,,821,,,,,,443,,443,821,443,443,443',
'443,443,443,443,821,443,,,,821,821,821,821,821,821,,,,821,821,809,809',
'809,809,809,,821,,809,809,821,821,,809,,809,809,809,809,809,809,809',
',,,,809,809,809,809,809,809,809,,,809,,,,,,809,809,809,809,809,809,809',
'809,809,809,809,809,809,809,,809,809,,809,809,809,442,442,442,442,442',
'442,442,,,442,442,,,,,,442,442,,809,,,809,,,809,,,,,809,442,,442,809',
'442,442,442,442,442,442,442,809,442,,,,809,809,809,809,809,809,,,,809',
'809,806,806,806,,806,,809,,806,806,809,809,,806,,806,806,806,806,806',
'806,806,,,,,806,806,806,806,806,806,806,,,,,,,,,,806,,,806,806,806,806',
'806,806,806,806,806,806,,806,806,,806,806,806,441,441,441,441,441,441',
'441,,,441,441,,,,,,441,441,,806,,,806,,,806,,,,,,441,,441,806,441,441',
'441,441,441,441,441,806,441,,,,806,806,806,806,806,806,,,,806,806,804',
'804,804,,804,,806,,804,804,806,806,,804,,804,804,804,804,804,804,804',
',,,,804,804,804,804,804,804,804,,,,,,,,,,804,,,804,804,804,804,804,804',
'804,804,804,804,,804,804,,804,804,804,440,440,440,440,440,440,440,,',
'440,440,,,,,,440,440,,804,,,804,,,804,,,,,,440,,440,804,440,440,440',
'440,440,440,440,804,440,,,,804,804,804,804,804,804,,,,804,804,17,17',
'17,,17,,804,,17,17,804,804,,17,,17,17,17,17,17,17,17,,,,,17,17,17,17',
'17,17,17,,,17,,,,,,,17,,,17,17,17,17,17,17,17,17,17,17,,17,17,,17,17',
'17,447,447,447,447,447,447,447,447,,447,447,,,,,,447,447,,17,,,17,,',
'17,,,,,,447,,447,17,447,447,447,447,447,447,447,17,447,,,,17,17,17,17',
'17,17,,,,17,17,18,18,18,,18,,17,,18,18,17,17,,18,,18,18,18,18,18,18',
'18,,,,,18,18,18,18,18,18,18,,,,,,,,,,18,,,18,18,18,18,18,18,18,18,18',
'18,,18,18,,18,18,18,438,,,,,,,,,,,,,,,,438,438,,18,,,18,,,18,,,,,,438',
',438,18,438,438,438,438,,,438,18,438,,,,18,18,18,18,18,18,,,,18,18,798',
'798,798,,798,,18,,798,798,18,18,,798,,798,798,798,798,798,798,798,,',
',,798,798,798,798,798,798,798,,,,,,,,,,798,,,798,798,798,798,798,798',
'798,798,798,798,,798,798,,798,798,798,437,,,,,,,,,,,,,,,,437,437,,798',
',,798,,,798,,,,,,437,,437,798,437,437,437,437,,,437,798,437,,,,798,798',
'798,798,798,798,,,,798,798,795,795,795,,795,,798,,795,795,798,798,,795',
',795,795,795,795,795,795,795,,,,,795,795,795,795,795,795,795,,,,,,,',
',,795,,,795,795,795,795,795,795,795,795,795,795,,795,795,,795,795,795',
'436,,,,,,,,,,,,,,,,436,436,,795,,,795,,,795,,,,,,436,,436,795,436,436',
'436,436,,,436,795,436,,,,795,795,795,795,795,795,,,,795,795,22,22,22',
',22,,795,,22,22,795,795,,22,,22,22,22,22,22,22,22,,,,,22,22,22,22,22',
'22,22,,,,,,,,,,22,,,22,22,22,22,22,22,22,22,22,22,,22,22,,22,22,22,435',
',,,,,,,,,,,,,,,435,435,,22,,,22,,,22,,,,,22,435,22,435,22,435,435,435',
'435,,,435,22,435,,,,22,22,22,22,22,22,,,,22,22,23,23,23,,23,,22,,23',
'23,22,22,,23,,23,23,23,23,23,23,23,,,,,23,23,23,23,23,23,23,,,,,,,,',
',23,,,23,23,23,23,23,23,23,23,23,23,,23,23,,23,23,23,424,424,424,424',
'424,424,424,424,424,424,424,,424,424,,,424,424,,23,,,23,,,23,,,,,23',
'424,23,424,23,424,424,424,424,424,424,424,23,424,,,,23,23,23,23,23,23',
',,,23,23,24,24,24,,24,,23,,24,24,23,23,,24,,24,24,24,24,24,24,24,,,',
',24,24,24,24,24,24,24,,,,,,,,,,24,,,24,24,24,24,24,24,24,24,24,24,,24',
'24,,24,24,24,434,434,434,434,434,434,434,,,434,434,,,,,,434,434,,24',
',,24,,,24,,,,,24,434,24,434,24,434,434,434,434,434,434,434,24,434,,',
',24,24,24,24,24,24,,,,24,24,789,789,789,789,789,,24,,789,789,24,24,',
'789,,789,789,789,789,789,789,789,,,,,789,789,789,789,789,789,789,,,789',
',,,,,789,789,789,789,789,789,789,789,789,789,789,789,789,789,,789,789',
',789,789,789,446,446,446,446,446,446,446,,,446,446,,,,,,446,446,,789',
',,789,,,789,,,,,789,446,,446,789,446,446,446,446,446,446,446,789,446',
',,,789,789,789,789,789,789,,,,789,789,768,768,768,768,768,,789,,768',
'768,789,789,,768,,768,768,768,768,768,768,768,,,,,768,768,768,768,768',
'768,768,,,768,,,,,,768,768,768,768,768,768,768,768,768,768,768,768,768',
'768,,768,768,,768,768,768,423,423,423,423,423,423,423,423,423,423,423',
',423,423,,,423,423,,768,,,768,,,768,,,,,768,423,,423,768,423,423,423',
'423,423,423,423,768,423,,,,768,768,768,768,768,768,,,,768,768,27,27',
'27,,27,,768,,27,27,768,768,,27,,27,27,27,27,27,27,27,,,,,27,27,27,27',
'27,27,27,,,,,,,,,,27,,,27,27,27,27,27,27,27,27,27,27,,27,27,,27,27,27',
'431,,,,,,,,,,,,,,,,431,431,,27,,,27,27,,27,,,,,27,431,27,431,27,431',
'431,431,431,,,,27,,,,28,27,27,27,27,27,27,28,28,28,27,27,28,28,28,433',
'28,,27,,,,27,27,,,28,28,,,,433,433,,,28,28,,28,28,28,28,28,,,,433,,',
',433,433,433,433,,,,,,,,,,,28,28,28,28,28,28,28,28,28,28,28,28,28,28',
',,28,28,28,,,28,,28,28,,,28,,28,,28,,28,,28,28,28,28,28,28,28,,28,,28',
',,,,,,,,,,,,28,28,28,28,,28,,,,28,30,30,30,30,30,,,,30,30,,,,30,,30',
'30,30,30,30,30,30,,,,,30,30,30,30,30,30,30,,,30,,,,,,30,30,30,30,30',
'30,30,30,30,30,30,30,30,30,,30,30,,30,30,30,432,,,,,,,,,,,,,,,,432,432',
',30,,,30,,,30,,,,,30,432,,432,30,432,432,432,432,,,,30,,,,,30,30,30',
'30,30,30,,,,30,30,31,31,31,,31,,30,,31,31,30,30,,31,,31,31,31,31,31',
'31,31,,,,,31,31,31,31,31,31,31,,,,,,,,,,31,,,31,31,31,31,31,31,31,31',
'31,31,,31,31,,,352,31,352,352,352,352,,,,,,,,,,,,,,,,31,,,31,,,31,,',
',,31,,,,,,352,,,,,,,352,352,352,352,31,31,31,31,31,31,,,,31,31,32,32',
'32,,32,,31,,32,32,31,31,,32,,32,32,32,32,32,32,32,,,,,32,32,32,32,32',
'32,32,,,,,,,,,,32,,,32,32,32,32,32,32,32,32,32,32,,32,32,,,700,32,700',
'700,700,700,,,,,,,,,,,,,,,,32,,,32,,,32,,,,,,,,,,,700,,,,,,,700,700',
'700,700,32,32,32,32,32,32,,,,32,32,767,767,767,,767,,32,,767,767,32',
'32,,767,,767,767,767,767,767,767,767,,,,,767,767,767,767,767,767,767',
',,,,,,,,,767,,,767,767,767,767,767,767,767,767,767,767,,767,767,,767',
'767,767,,,,,,,,,,,,,,,,,,,,767,,,767,,,767,,,,,767,,,,767,,,,,,,,767',
',,,,767,767,767,767,767,767,,,,767,767,340,340,340,,340,,767,,340,340',
'767,767,,340,,340,340,340,340,340,340,340,,,,,340,340,340,340,340,340',
'340,,,340,,,,,,,340,,,340,340,340,340,340,340,340,340,340,340,,340,340',
',340,340,340,,,,,,,,,,,,,,,,,,,,340,,,340,,,340,,,,,,,,,340,,,,,,,,340',
',,,,340,340,340,340,340,340,,,,340,340,763,763,763,763,763,,340,,763',
'763,340,340,,763,,763,763,763,763,763,763,763,,,,,763,763,763,763,763',
'763,763,,,763,,,,,,763,763,763,763,763,763,763,763,763,763,763,763,763',
'763,,763,763,,763,763,763,,,,,,,,,,,,,,,,,,,,763,,,763,,,763,,,,,763',
',,,763,,,,,,,,763,,,,,763,763,763,763,763,763,,,,763,763,761,761,761',
',761,,763,,761,761,763,763,,761,,761,761,761,761,761,761,761,,,,,761',
'761,761,761,761,761,761,,,761,,,,,,,761,,,761,761,761,761,761,761,761',
'761,761,761,,761,761,,761,761,761,,,,,,,,,,,,,,,,,,,,761,,,761,,,761',
',,,,,,,,761,,,,,,,,761,,,,,761,761,761,761,761,761,,,,761,761,38,38',
'38,,38,,761,,38,38,761,761,,38,,38,38,38,38,38,38,38,,,,,38,38,38,38',
'38,38,38,,,,,,,,,,38,,,38,38,38,38,38,38,38,38,38,38,,38,38,,38,38,38',
',,,,,,,,,,,,,,,,,,,38,,,38,,,38,,,,,,,,,38,,,,,,,,38,,,,,38,38,38,38',
'38,38,,,,38,38,39,39,39,,39,,38,,39,39,38,38,,39,,39,39,39,39,39,39',
'39,,,,,39,39,39,39,39,39,39,,,,,,,,,,39,,,39,39,39,39,39,39,39,39,39',
'39,,39,39,,39,39,39,,,,,,,,,,,,,,,,,,,,39,,,39,,,39,,,,,,,,,39,,,,,',
',,39,,,,,39,39,39,39,39,39,,,,39,39,40,40,40,,40,,39,,40,40,39,39,,40',
',40,40,40,40,40,40,40,,,,,40,40,40,40,40,40,40,,,,,,,,,,40,,,40,40,40',
'40,40,40,40,40,40,40,,40,40,,40,40,40,,,,,,,,,,,,,,,,,,,,40,,,40,,,40',
',,,,,,,,40,,,,,,,,40,,,,,40,40,40,40,40,40,,,,40,40,756,756,756,,756',
',40,,756,756,40,40,,756,,756,756,756,756,756,756,756,,,,,756,756,756',
'756,756,756,756,,,,,,,,,,756,,,756,756,756,756,756,756,756,756,756,756',
',756,756,,,,756,,,,,,,,,,,,,,,,,,,,756,,,756,,,756,,,,,,,,,,,,,,,,,',
',,,,756,756,756,756,756,756,,,,756,756,752,752,752,752,752,,756,,752',
'752,756,756,,752,,752,752,752,752,752,752,752,,334,,,752,752,752,752',
'752,752,752,,,752,,,,,,752,752,752,752,752,752,752,752,752,752,752,752',
'752,752,,752,752,,752,752,752,,,,,,,,,,,,334,,,,,,,334,752,,,752,334',
',752,,,,,752,,,,752,,,,,,,,752,,334,,50,752,752,752,752,752,752,50,50',
'50,752,752,50,50,50,,50,,752,,,334,752,752,50,,50,50,,,,,,,,50,50,,50',
'50,50,50,50,,,,,,,,,,,,,,,,,,,,,,50,50,50,50,50,50,50,50,50,50,50,50',
'50,50,,,50,50,50,,,50,,,50,,,50,,50,,50,,50,,50,50,50,50,50,50,50,,50',
',50,,,,,,,,,,,,,50,50,50,50,,50,,,,50,51,51,51,51,51,,,,51,51,,,,51',
',51,51,51,51,51,51,51,,,,,51,51,51,51,51,51,51,,,51,,,,,,51,51,51,51',
'51,51,51,51,51,51,51,51,51,51,,51,51,,51,51,51,,,,,,,,,,,,,,,,,,,,51',
',,51,,,51,,,,,51,,,,51,,,,,,,,51,,,,,51,51,51,51,51,51,,,,51,51,52,52',
'52,,52,,51,,52,52,51,51,,52,,52,52,52,52,52,52,52,,,,,52,52,52,52,52',
'52,52,,,52,,,,,,,52,,,52,52,52,52,52,52,52,52,52,52,,52,52,,52,52,52',
',,,,,,,,,,,,,,,,,,,52,,,52,,,52,,,,,,,,,52,,,,,,,,52,,,,,52,52,52,52',
'52,52,,,,52,52,53,53,53,,53,,52,,53,53,52,52,,53,,53,53,53,53,53,53',
'53,,,,,53,53,53,53,53,53,53,,,,,,,,,,53,,,53,53,53,53,53,53,53,53,53',
'53,,53,53,,53,53,53,,,,,,,,,,,,,,,,,,,,53,,,53,,,53,,,,,53,,,,53,,,',
',,,,53,,,,,53,53,53,53,53,53,,,,53,53,54,54,54,,54,,53,,54,54,53,53',
',54,,54,54,54,54,54,54,54,,,,,54,54,54,54,54,54,54,,,,,,,,,,54,,,54',
'54,54,54,54,54,54,54,54,54,,54,54,,54,54,54,,,,,,,,,,,,,,,,,,,,54,,',
'54,,,54,,,,,,,,,54,,,,,,,,54,,,,,54,54,54,54,54,54,,,,54,54,743,743',
'743,,743,,54,,743,743,54,54,,743,,743,743,743,743,743,743,743,,,,,743',
'743,743,743,743,743,743,,,,,,,,,,743,,,743,743,743,743,743,743,743,743',
'743,743,,743,743,,743,743,743,,,,,,,,,,,,,,,,,,,,743,,,743,,,743,,,',
',743,,743,,743,,,,,,,,743,,,,,743,743,743,743,743,743,,,,743,743,56',
'56,56,,56,,743,,56,56,743,743,,56,,56,56,56,56,56,56,56,,,,,56,56,56',
'56,56,56,56,,,56,,,,,,,56,,,56,56,56,56,56,56,56,56,56,56,,56,56,,56',
'56,56,,,,,,,,,,,,,,,,,,,,56,,,56,,,56,,,,,,,,,56,,,,,,,,56,,,,,56,56',
'56,56,56,56,,,,56,56,57,57,57,,57,,56,,57,57,56,56,,57,,57,57,57,57',
'57,57,57,,,,,57,57,57,57,57,57,57,,,57,,,,,,,57,,,57,57,57,57,57,57',
'57,57,57,57,,57,57,,57,57,57,,,,,,,,,,,,,,,,,,,,57,,,57,,,57,,,,,,,',
',57,,,,,,,,57,,,,,57,57,57,57,57,57,,,,57,57,60,60,60,,60,,57,,60,60',
'57,57,,60,,60,60,60,60,60,60,60,,,,,60,60,60,60,60,60,60,,,60,,,,,391',
',60,,,60,60,60,60,60,60,60,60,60,60,,60,60,,60,60,60,391,391,391,391',
'391,391,391,391,391,391,391,,391,391,,,391,391,,60,,,60,,,60,,,,,,391',
',391,60,391,391,391,391,391,391,391,60,391,,,,60,60,60,60,60,60,,,,60',
'60,60,391,,391,,60,60,,,,60,60,741,741,741,,741,,,,741,741,,,,741,,741',
'741,741,741,741,741,741,,,,,741,741,741,741,741,741,741,,,,,,,,,,741',
',,741,741,741,741,741,741,741,741,741,741,,741,741,,741,741,741,,,,',
',,,,,,,,,,,,,,,741,,,741,,,741,,,,,741,,741,,741,,,,,,,,741,,,,,741',
'741,741,741,741,741,,,,741,741,62,62,62,,62,,741,,62,62,741,741,,62',
',62,62,62,62,62,62,62,,,,,62,62,62,62,62,62,62,,,,,,,,,,62,,,62,62,62',
'62,62,62,62,62,62,62,,62,62,,,,62,,,,,,,,,,,,,,,,,62,,,62,,,62,,,62',
',,,,,,,,,,,,,,,,,,,,,62,62,62,62,62,62,,,,62,62,63,63,63,,63,,62,,63',
'63,62,62,,63,,63,63,63,63,63,63,63,,,,,63,63,63,63,63,63,63,,,,,,,,',
',63,,,63,63,63,63,63,63,63,63,63,63,,63,63,,,,63,,,,,,,,,,,,,,,,,,,',
'63,,,63,,,63,,,,,,,,,,,,,,,,,,,,,,63,63,63,63,63,63,,,,63,63,732,732',
'732,,732,,63,,732,732,63,63,,732,,732,732,732,732,732,732,732,,,,,732',
'732,732,732,732,732,732,,,,,,,,,,732,,,732,732,732,732,732,732,732,732',
'732,732,,732,732,,732,732,732,,,,,,,,,,,,,,,,,,,,732,,,732,,,732,,,',
',732,,732,,732,,,,,,,,732,,,,,732,732,732,732,732,732,,,,732,732,726',
'726,726,,726,,732,,726,726,732,732,,726,,726,726,726,726,726,726,726',
',,,,726,726,726,726,726,726,726,,,,,,,,,,726,,,726,726,726,726,726,726',
'726,726,726,726,,726,726,,726,726,726,,,,,,,,,,,,,,,,,,,,726,,,726,',
',726,,,,,,,,,726,,,,,,,,726,,,,,726,726,726,726,726,726,,,,726,726,725',
'725,725,,725,,726,,725,725,726,726,,725,,725,725,725,725,725,725,725',
',,,,725,725,725,725,725,725,725,,,,,,,,,,725,,,725,725,725,725,725,725',
'725,725,725,725,,725,725,,725,725,725,,,,,,,,,,,,,,,,,,,,725,,,725,',
',725,,,,,,,,,725,,,,,,,,725,,,,,725,725,725,725,725,725,,,,725,725,724',
'724,724,,724,,725,,724,724,725,725,,724,,724,724,724,724,724,724,724',
',,,,724,724,724,724,724,724,724,,,,,,,,,,724,,,724,724,724,724,724,724',
'724,724,724,724,,724,724,,724,724,724,,,,,,,,,,,,,,,,,,,,724,,,724,',
',724,,,,,,,,,724,,,,,,,,724,,,,,724,724,724,724,724,724,,,,724,724,714',
'714,714,,714,,724,,714,714,724,724,,714,,714,714,714,714,714,714,714',
',,,,714,714,714,714,714,714,714,,,,,,,,,,714,,,714,714,714,714,714,714',
'714,714,714,714,,714,714,,714,714,714,,,,,,,,,,,,,,,,,,,,714,,,714,',
',714,,,,,,,,,714,,,,,,,,714,,,,,714,714,714,714,714,714,,,,714,714,82',
'82,82,,82,,714,,82,82,714,714,,82,,82,82,82,82,82,82,82,,82,,,82,82',
'82,82,82,82,82,,,,,,,,,,82,,,82,82,82,82,82,82,82,82,82,82,,82,82,,82',
'82,82,,,,,,,,,,,,,,,,,,,,82,,,82,82,,82,,,,,82,,82,,82,,,,,,,,82,,82',
',,82,82,82,82,82,82,,,,82,82,85,85,85,,85,,82,,85,85,82,82,,85,,85,85',
'85,85,85,85,85,,85,,,85,85,85,85,85,85,85,,,,,,,,,,85,,,85,85,85,85',
'85,85,85,85,85,85,,85,85,,85,85,85,,,,,,,,,,,,,,,,,,,,85,,,85,85,,85',
',,,,85,,85,,85,,,,,,,,85,,85,,,85,85,85,85,85,85,,,,85,85,713,713,713',
',713,,85,,713,713,85,85,,713,,713,713,713,713,713,713,713,,,,,713,713',
'713,713,713,713,713,,,,,,,,,,713,,,713,713,713,713,713,713,713,713,713',
'713,,713,713,,713,713,713,,,,,,,,,,,,,,,,,,,,713,,,713,,,713,,,,,,,',
',713,,,,,,,,713,,,,,713,713,713,713,713,713,,,,713,713,98,98,98,98,98',
',713,,98,98,713,713,,98,,98,98,98,98,98,98,98,,,,,98,98,98,98,98,98',
'98,,,98,,,,,,98,98,98,98,98,98,98,98,98,98,98,98,98,98,,98,98,,98,98',
'98,,,,,,,,,,,,,,,,,,,,98,,,98,,,98,,,,,98,,,,98,,,,,,,,98,,,,,98,98',
'98,98,98,98,,,,98,98,102,102,102,,102,98,98,,102,102,98,98,,102,,102',
'102,102,102,102,102,102,,,,,102,102,102,102,102,102,102,,,102,,,,,,',
'102,,,102,102,102,102,102,102,102,102,102,102,,102,102,,102,102,102',
',,,,,,,,,,,,,,,,,,,102,,,102,,,102,,,,,,,,,102,,,,,,,,102,,,,,102,102',
'102,102,102,102,,,,102,102,103,103,103,,103,,102,,103,103,102,102,,103',
',103,103,103,103,103,103,103,,,,,103,103,103,103,103,103,103,,,103,',
',,,,,103,,,103,103,103,103,103,103,103,103,103,103,,103,103,,103,103',
'103,,,,,,,,,,,,,,,,,,,,103,,,103,,,103,,,,,,,,,103,,,,,,,,103,,,,,103',
'103,103,103,103,103,,,,103,103,104,104,104,,104,,103,,104,104,103,103',
',104,,104,104,104,104,104,104,104,,,,,104,104,104,104,104,104,104,,',
'104,,,,,,,104,,,104,104,104,104,104,104,104,104,104,104,,104,104,,104',
'104,104,,,,,,,,,,,,,,,,,,,,104,,,104,,,104,,,,,,,,,104,,,,,,,,104,,',
',,104,104,104,104,104,104,,,,104,104,105,105,105,,105,,104,,105,105',
'104,104,,105,,105,105,105,105,105,105,105,,,,,105,105,105,105,105,105',
'105,,,105,,,,,,,105,,,105,105,105,105,105,105,105,105,105,105,,105,105',
',105,105,105,,,,,,,,,,,,,,,,,,,,105,,,105,,,105,,,,,,,,,105,,,,,,,,105',
',,,,105,105,105,105,105,105,,,,105,105,106,106,106,106,106,,105,,106',
'106,105,105,,106,,106,106,106,106,106,106,106,,,,,106,106,106,106,106',
'106,106,,,106,,,,,,106,106,106,106,106,106,106,106,106,106,106,106,106',
'106,,106,106,,106,106,106,,,,,,,,,,,,,,,,,,,,106,,,106,,,106,,,,,106',
',,,106,,,,,,,,106,,,,,106,106,106,106,106,106,,,,106,106,707,707,707',
'707,707,,106,,707,707,106,106,,707,,707,707,707,707,707,707,707,,,,',
'707,707,707,707,707,707,707,,,707,,,,,,707,707,707,707,707,707,707,707',
'707,707,707,707,707,707,,707,707,,707,707,707,,,,,,,,,,,,,,,,,,,,707',
',,707,,,707,,,,,707,,,,707,,,,,,,,707,,,,,707,707,707,707,707,707,,',
',707,707,699,699,699,,699,,707,,699,699,707,707,,699,,699,699,699,699',
'699,699,699,,,,,699,699,699,699,699,699,699,,,,,,,,,,699,,,699,699,699',
'699,699,699,699,699,699,699,,699,699,,699,699,699,,,,,,,,,,,,,,,,,,',
',699,,,699,,,699,,,,,,,,,699,,,,,,,,699,,,,,699,699,699,699,699,699',
',,,699,699,689,689,689,689,689,,699,,689,689,699,699,,689,,689,689,689',
'689,689,689,689,,,,,689,689,689,689,689,689,689,,,689,,,,,,689,689,689',
'689,689,689,689,689,689,689,689,689,689,689,,689,689,,689,689,689,,',
',,,,,,,,,,,,,,,,,689,,,689,,,689,,,,,689,,,,689,,,,,,,,689,,,,,689,689',
'689,689,689,689,,,,689,689,672,672,672,,672,,689,,672,672,689,689,,672',
',672,672,672,672,672,672,672,,,,,672,672,672,672,672,672,672,,,672,',
',,,,,672,,,672,672,672,672,672,672,672,672,672,672,,672,672,,672,672',
'672,,,,,,,,,,,,,,,,,,,,672,,,672,,,672,,,,,,,,,672,,,,,,,,672,,,,,672',
'672,672,672,672,672,,,,672,672,187,187,187,187,187,,672,,187,187,672',
'672,,187,,187,187,187,187,187,187,187,,,,,187,187,187,187,187,187,187',
',,187,,,,,,187,187,187,187,187,187,187,187,187,187,187,187,187,187,',
'187,187,,187,187,187,,,,,,,,,,,,,,,,,,,,187,,,187,,,187,,,,,187,,,,187',
',,,,,,,187,,,,,187,187,187,187,187,187,,,,187,187,188,188,188,188,188',
',187,,188,188,187,187,,188,,188,188,188,188,188,188,188,,,,,188,188',
'188,188,188,188,188,,,188,,,,,,188,188,188,188,188,188,188,188,188,188',
'188,188,188,188,,188,188,,188,188,188,,,,,,,,,,,,,,,,,,,,188,,,188,',
',188,,,,,188,,,,188,,,,,,,,188,,,,,188,188,188,188,188,188,,,,188,188',
'189,189,189,,189,,188,,189,189,188,188,,189,,189,189,189,189,189,189',
'189,,,,,189,189,189,189,189,189,189,,,,,,,,,,189,,,189,189,189,189,189',
'189,189,189,189,189,,189,189,,189,189,189,,,,,,,,,,,,,,,,,,,,189,,,189',
',,189,,,,,189,,,,189,,,,,,,,189,,,,,189,189,189,189,189,189,,,,189,189',
'190,190,190,,190,,189,,190,190,189,189,,190,,190,190,190,190,190,190',
'190,,,,,190,190,190,190,190,190,190,,,,,,,,,,190,,,190,190,190,190,190',
'190,190,190,190,190,,190,190,,190,190,190,,,,,,,,,,,,,,,,,,,,190,,,190',
',,190,,,,,190,,,,190,,,,,,,,190,,,,,190,190,190,190,190,190,,,,190,190',
'191,191,191,,191,,190,,191,191,190,190,,191,,191,191,191,191,191,191',
'191,,,,,191,191,191,191,191,191,191,,,,,,,,,,191,,,191,191,191,191,191',
'191,191,191,191,191,,191,191,,191,191,191,,,,,,,,,,,,,,,,,,,,191,,,191',
',,191,,,,,,,,,191,,,,,,,,191,,,,,191,191,191,191,191,191,,,,191,191',
'192,192,192,,192,,191,,192,192,191,191,,192,,192,192,192,192,192,192',
'192,,,,,192,192,192,192,192,192,192,,,,,,,,,,192,,,192,192,192,192,192',
'192,192,192,192,192,,192,192,,192,192,192,,,,,,,,,,,,,,,,,,,,192,,,192',
',,192,,,,,192,,,,192,,,,,,,,192,,,,,192,192,192,192,192,192,,,,192,192',
'671,671,671,,671,,192,,671,671,192,192,,671,,671,671,671,671,671,671',
'671,,,,,671,671,671,671,671,671,671,,,,,,,,,,671,,,671,671,671,671,671',
'671,671,671,671,671,,671,671,,671,671,671,,,,,,,,,,,,,,,,,,,,671,,,671',
',,671,,,,,,,,,671,,,,,,,,671,,,,,671,671,671,671,671,671,,,,671,671',
'655,655,655,,655,,671,,655,655,671,671,,655,,655,655,655,655,655,655',
'655,,,,,655,655,655,655,655,655,655,,,,,,,,,,655,,,655,655,655,655,655',
'655,655,655,655,655,,655,655,,655,655,655,,,,,,,,,,,,,,,,,,,,655,,,655',
',,655,,,,,,,,,655,,,,,,,,655,,,,,655,655,655,655,655,655,,,,655,655',
'195,195,195,,195,,655,,195,195,655,655,,195,,195,195,195,195,195,195',
'195,,,,,195,195,195,195,195,195,195,,,,,,,,,,195,,,195,195,195,195,195',
'195,195,195,195,195,,195,195,,195,195,195,,,,,,,,,,,,,,,,,,,,195,,,195',
',,195,,,,,,,,,195,,,,,,,,195,,,,,195,195,195,195,195,195,,,,195,195',
'196,196,196,,196,,195,,196,196,195,195,,196,,196,196,196,196,196,196',
'196,,,,,196,196,196,196,196,196,196,,,196,,,,,,,196,,,196,196,196,196',
'196,196,196,196,196,196,,196,196,,196,196,196,,,,,,,,,,,,,,,,,,,,196',
',,196,,,196,,,,,,,,,196,,,,,,,,196,,,,,196,196,196,196,196,196,,,,196',
'196,197,197,197,,197,,196,,197,197,196,196,,197,,197,197,197,197,197',
'197,197,,,,,197,197,197,197,197,197,197,,,197,,,,,,,197,,,197,197,197',
'197,197,197,197,197,197,197,,197,197,,197,197,197,,,,,,,,,,,,,,,,,,',
',197,,,197,,,197,,,,,,,,,197,,,,,,,,197,,,,,197,197,197,197,197,197',
',,,197,197,649,649,649,649,649,,197,,649,649,197,197,,649,,649,649,649',
'649,649,649,649,,,,,649,649,649,649,649,649,649,,,649,,,,,,649,649,649',
'649,649,649,649,649,649,649,649,649,649,649,,649,649,,649,649,649,,',
',,,,,,,,,,,,,,,,,649,,,649,,,649,,,,,649,,,,649,,,,,,,,649,,,,,649,649',
'649,649,649,649,,,,649,649,625,625,625,,625,,649,,625,625,649,649,,625',
',625,625,625,625,625,625,625,,,,,625,625,625,625,625,625,625,,,,,,,',
',,625,,,625,625,625,625,625,625,625,625,625,625,,625,625,,625,625,625',
',,,,,,,,,,,,,,,,,,,625,,,625,,,625,,,,,,,,,625,,,,,,,,625,,,,,625,625',
'625,625,625,625,,,,625,625,621,621,621,,621,,625,,621,621,625,625,,621',
',621,621,621,621,621,621,621,,,,,621,621,621,621,621,621,621,,,,,,,',
',,621,,,621,621,621,621,621,621,621,621,621,621,,621,621,,621,621,621',
',,,,,,,,,,,,,,,,,,,621,,,621,,,621,,,,,621,,621,,621,,,,,,,,621,,,,',
'621,621,621,621,621,621,,,,621,621,615,615,615,615,615,,621,,615,615',
'621,621,,615,,615,615,615,615,615,615,615,,,,,615,615,615,615,615,615',
'615,,,615,,,,,,615,615,615,615,615,615,615,615,615,615,615,615,615,615',
',615,615,,615,615,615,,,,,,,,,,,,,,,,,,,,615,,,615,,,615,,,,,615,,,',
'615,,,,,,,,615,,,,,615,615,615,615,615,615,,,,615,615,605,605,605,,605',
',615,,605,605,615,615,,605,,605,605,605,605,605,605,605,,,,,605,605',
'605,605,605,605,605,,,,,,,,,,605,,,605,605,605,605,605,605,605,605,605',
'605,,605,605,,605,605,605,,,,,,,,,,,,,,,,,,,,605,,,605,,,605,,,,,,,',
',605,,,,,,,,605,,,,,605,605,605,605,605,605,,,,605,605,601,601,601,',
'601,,605,,601,601,605,605,,601,,601,601,601,601,601,601,601,,,,,601',
'601,601,601,601,601,601,,,,,,,,,,601,,,601,601,601,601,601,601,601,601',
'601,601,,601,601,,601,601,601,,,,,,,,,,,,,,,,,,,,601,,,601,,,601,,,',
',,,,,601,,,,,,,,601,,,,,601,601,601,601,601,601,,,,601,601,205,205,205',
'205,205,,601,,205,205,601,601,,205,,205,205,205,205,205,205,205,,,,',
'205,205,205,205,205,205,205,,,205,,,,,,205,205,205,205,205,205,205,205',
'205,205,205,205,205,205,,205,205,,205,205,205,,,,,,,,,,,,,,,,,,,,205',
',,205,,,205,,,,,205,,,,205,,,,,,,,205,,,,,205,205,205,205,205,205,,',
',205,205,208,208,208,,208,,205,,208,208,205,205,,208,,208,208,208,208',
'208,208,208,,,,,208,208,208,208,208,208,208,,,,,,,,,,208,,,208,208,208',
'208,208,208,208,208,208,208,,208,208,,208,208,208,,,,,,,,,,,,,,,,,,',
',208,,,208,,,208,,,,,,,,,208,,,,,,,,208,,,,,208,208,208,208,208,208',
',,,208,208,209,209,209,,209,,208,,209,209,208,208,,209,,209,209,209',
'209,209,209,209,,,,,209,209,209,209,209,209,209,,,,,,,,,,209,,,209,209',
'209,209,209,209,209,209,209,209,,209,209,,209,209,209,,,,,,,,,,,,,,',
',,,,,209,,,209,,,209,,,,,,,,,209,,,,,,,,209,,,,,209,209,209,209,209',
'209,,,,209,209,210,210,210,,210,,209,,210,210,209,209,,210,,210,210',
'210,210,210,210,210,,,,,210,210,210,210,210,210,210,,,,,,,,,,210,,,210',
'210,210,210,210,210,210,210,210,210,,210,210,,210,210,210,,,,,,,,,,',
',,,,,,,,,210,,,210,,,210,,,,,,,,,210,,,,,,,,210,,,,,210,210,210,210',
'210,210,,,,210,210,211,211,211,,211,,210,,211,211,210,210,,211,,211',
'211,211,211,211,211,211,,,,,211,211,211,211,211,211,211,,,,,,,,,,211',
',,211,211,211,211,211,211,211,211,211,211,,211,211,,211,211,211,,,,',
',,,,,,,,,,,,,,,211,,,211,,,211,,,,,,,,,211,,,,,,,,211,,,,,211,211,211',
'211,211,211,,,,211,211,212,212,212,,212,,211,,212,212,211,211,,212,',
'212,212,212,212,212,212,212,,,,,212,212,212,212,212,212,212,,,,,,,,',
',212,,,212,212,212,212,212,212,212,212,212,212,,212,212,,212,212,212',
',,,,,,,,,,,,,,,,,,,212,,,212,,,212,,,,,,,,,212,,,,,,,,212,,,,,212,212',
'212,212,212,212,,,,212,212,213,213,213,,213,,212,,213,213,212,212,,213',
',213,213,213,213,213,213,213,,,,,213,213,213,213,213,213,213,,,,,,,',
',,213,,,213,213,213,213,213,213,213,213,213,213,,213,213,,213,213,213',
',,,,,,,,,,,,,,,,,,,213,,,213,,,213,,,,,,,,,213,,,,,,,,213,,,,,213,213',
'213,213,213,213,,,,213,213,214,214,214,,214,,213,,214,214,213,213,,214',
',214,214,214,214,214,214,214,,,,,214,214,214,214,214,214,214,,,,,,,',
',,214,,,214,214,214,214,214,214,214,214,214,214,,214,214,,214,214,214',
',,,,,,,,,,,,,,,,,,,214,,,214,,,214,,,,,,,,,214,,,,,,,,214,,,,,214,214',
'214,214,214,214,,,,214,214,215,215,215,,215,,214,,215,215,214,214,,215',
',215,215,215,215,215,215,215,,,,,215,215,215,215,215,215,215,,,,,,,',
',,215,,,215,215,215,215,215,215,215,215,215,215,,215,215,,215,215,215',
',,,,,,,,,,,,,,,,,,,215,,,215,,,215,,,,,,,,,215,,,,,,,,215,,,,,215,215',
'215,215,215,215,,,,215,215,216,216,216,,216,,215,,216,216,215,215,,216',
',216,216,216,216,216,216,216,,,,,216,216,216,216,216,216,216,,,,,,,',
',,216,,,216,216,216,216,216,216,216,216,216,216,,216,216,,216,216,216',
',,,,,,,,,,,,,,,,,,,216,,,216,,,216,,,,,,,,,216,,,,,,,,216,,,,,216,216',
'216,216,216,216,,,,216,216,217,217,217,,217,,216,,217,217,216,216,,217',
',217,217,217,217,217,217,217,,,,,217,217,217,217,217,217,217,,,,,,,',
',,217,,,217,217,217,217,217,217,217,217,217,217,,217,217,,217,217,217',
',,,,,,,,,,,,,,,,,,,217,,,217,,,217,,,,,,,,,217,,,,,,,,217,,,,,217,217',
'217,217,217,217,,,,217,217,218,218,218,,218,,217,,218,218,217,217,,218',
',218,218,218,218,218,218,218,,,,,218,218,218,218,218,218,218,,,,,,,',
',,218,,,218,218,218,218,218,218,218,218,218,218,,218,218,,218,218,218',
',,,,,,,,,,,,,,,,,,,218,,,218,,,218,,,,,,,,,218,,,,,,,,218,,,,,218,218',
'218,218,218,218,,,,218,218,219,219,219,,219,,218,,219,219,218,218,,219',
',219,219,219,219,219,219,219,,,,,219,219,219,219,219,219,219,,,,,,,',
',,219,,,219,219,219,219,219,219,219,219,219,219,,219,219,,219,219,219',
',,,,,,,,,,,,,,,,,,,219,,,219,,,219,,,,,,,,,219,,,,,,,,219,,,,,219,219',
'219,219,219,219,,,,219,219,220,220,220,,220,,219,,220,220,219,219,,220',
',220,220,220,220,220,220,220,,,,,220,220,220,220,220,220,220,,,,,,,',
',,220,,,220,220,220,220,220,220,220,220,220,220,,220,220,,220,220,220',
',,,,,,,,,,,,,,,,,,,220,,,220,,,220,,,,,,,,,220,,,,,,,,220,,,,,220,220',
'220,220,220,220,,,,220,220,221,221,221,,221,,220,,221,221,220,220,,221',
',221,221,221,221,221,221,221,,,,,221,221,221,221,221,221,221,,,,,,,',
',,221,,,221,221,221,221,221,221,221,221,221,221,,221,221,,221,221,221',
',,,,,,,,,,,,,,,,,,,221,,,221,,,221,,,,,,,,,221,,,,,,,,221,,,,,221,221',
'221,221,221,221,,,,221,221,222,222,222,,222,,221,,222,222,221,221,,222',
',222,222,222,222,222,222,222,,,,,222,222,222,222,222,222,222,,,,,,,',
',,222,,,222,222,222,222,222,222,222,222,222,222,,222,222,,222,222,222',
',,,,,,,,,,,,,,,,,,,222,,,222,,,222,,,,,,,,,222,,,,,,,,222,,,,,222,222',
'222,222,222,222,,,,222,222,223,223,223,,223,,222,,223,223,222,222,,223',
',223,223,223,223,223,223,223,,,,,223,223,223,223,223,223,223,,,,,,,',
',,223,,,223,223,223,223,223,223,223,223,223,223,,223,223,,223,223,223',
',,,,,,,,,,,,,,,,,,,223,,,223,,,223,,,,,,,,,223,,,,,,,,223,,,,,223,223',
'223,223,223,223,,,,223,223,224,224,224,,224,,223,,224,224,223,223,,224',
',224,224,224,224,224,224,224,,,,,224,224,224,224,224,224,224,,,,,,,',
',,224,,,224,224,224,224,224,224,224,224,224,224,,224,224,,224,224,224',
',,,,,,,,,,,,,,,,,,,224,,,224,,,224,,,,,,,,,224,,,,,,,,224,,,,,224,224',
'224,224,224,224,,,,224,224,225,225,225,,225,,224,,225,225,224,224,,225',
',225,225,225,225,225,225,225,,,,,225,225,225,225,225,225,225,,,,,,,',
',,225,,,225,225,225,225,225,225,225,225,225,225,,225,225,,225,225,225',
',,,,,,,,,,,,,,,,,,,225,,,225,,,225,,,,,,,,,225,,,,,,,,225,,,,,225,225',
'225,225,225,225,,,,225,225,226,226,226,,226,,225,,226,226,225,225,,226',
',226,226,226,226,226,226,226,,,,,226,226,226,226,226,226,226,,,,,,,',
',,226,,,226,226,226,226,226,226,226,226,226,226,,226,226,,226,226,226',
',,,,,,,,,,,,,,,,,,,226,,,226,,,226,,,,,,,,,226,,,,,,,,226,,,,,226,226',
'226,226,226,226,,,,226,226,227,227,227,,227,,226,,227,227,226,226,,227',
',227,227,227,227,227,227,227,,,,,227,227,227,227,227,227,227,,,,,,,',
',,227,,,227,227,227,227,227,227,227,227,227,227,,227,227,,227,227,227',
',,,,,,,,,,,,,,,,,,,227,,,227,,,227,,,,,,,,,227,,,,,,,,227,,,,,227,227',
'227,227,227,227,,,,227,227,228,228,228,,228,,227,,228,228,227,227,,228',
',228,228,228,228,228,228,228,,,,,228,228,228,228,228,228,228,,,,,,,',
',,228,,,228,228,228,228,228,228,228,228,228,228,,228,228,,228,228,228',
',,,,,,,,,,,,,,,,,,,228,,,228,,,228,,,,,,,,,228,,,,,,,,228,,,,,228,228',
'228,228,228,228,,,,228,228,229,229,229,,229,,228,,229,229,228,228,,229',
',229,229,229,229,229,229,229,,,,,229,229,229,229,229,229,229,,,,,,,',
',,229,,,229,229,229,229,229,229,229,229,229,229,,229,229,,229,229,229',
',,,,,,,,,,,,,,,,,,,229,,,229,,,229,,,,,,,,,229,,,,,,,,229,,,,,229,229',
'229,229,229,229,,,,229,229,230,230,230,,230,,229,,230,230,229,229,,230',
',230,230,230,230,230,230,230,,,,,230,230,230,230,230,230,230,,,,,,,',
',,230,,,230,230,230,230,230,230,230,230,230,230,,230,230,,230,230,230',
',,,,,,,,,,,,,,,,,,,230,,,230,,,230,,,,,,,,,230,,,,,,,,230,,,,,230,230',
'230,230,230,230,,,,230,230,231,231,231,,231,,230,,231,231,230,230,,231',
',231,231,231,231,231,231,231,,,,,231,231,231,231,231,231,231,,,,,,,',
',,231,,,231,231,231,231,231,231,231,231,231,231,,231,231,,231,231,231',
',,,,,,,,,,,,,,,,,,,231,,,231,,,231,,,,,,,,,231,,,,,,,,231,,,,,231,231',
'231,231,231,231,,,,231,231,232,232,232,,232,,231,,232,232,231,231,,232',
',232,232,232,232,232,232,232,,,,,232,232,232,232,232,232,232,,,,,,,',
',,232,,,232,232,232,232,232,232,232,232,232,232,,232,232,,232,232,232',
',,,,,,,,,,,,,,,,,,,232,,,232,,,232,,,,,,,,,232,,,,,,,,232,,,,,232,232',
'232,232,232,232,,,,232,232,233,233,233,,233,,232,,233,233,232,232,,233',
',233,233,233,233,233,233,233,,,,,233,233,233,233,233,233,233,,,,,,,',
',,233,,,233,233,233,233,233,233,233,233,233,233,,233,233,,233,233,233',
',,,,,,,,,,,,,,,,,,,233,,,233,,,233,,,,,,,,,233,,,,,,,,233,,,,,233,233',
'233,233,233,233,,,,233,233,234,234,234,,234,,233,,234,234,233,233,,234',
',234,234,234,234,234,234,234,,,,,234,234,234,234,234,234,234,,,,,,,',
',,234,,,234,234,234,234,234,234,234,234,234,234,,234,234,,234,234,234',
',,,,,,,,,,,,,,,,,,,234,,,234,,,234,,,,,,,,,234,,,,,,,,234,,,,,234,234',
'234,234,234,234,,,,234,234,600,600,600,600,600,,234,,600,600,234,234',
',600,,600,600,600,600,600,600,600,,,,,600,600,600,600,600,600,600,,',
'600,,,,,,600,600,600,600,600,600,600,600,600,600,600,600,600,600,,600',
'600,,600,600,600,,,,,,,,,,,,,,,,,,,,600,,,600,,,600,,,,,600,,,,600,',
',,,,,,600,,,,,600,600,600,600,600,600,,,,600,600,599,599,599,,599,,600',
',599,599,600,600,,599,,599,599,599,599,599,599,599,,,,,599,599,599,599',
'599,599,599,,,,,,,,,,599,,,599,599,599,599,599,599,599,599,599,599,',
'599,599,,599,599,599,,,,,,,,,,,,,,,,,,,,599,,,599,,,599,,,,,,,,,599',
',,,,,,,599,,,,596,599,599,599,599,599,599,596,596,596,599,599,596,596',
'596,,596,,599,,,,599,599,,,596,596,,,,,,,,596,596,,596,596,596,596,596',
',,,,,,,,,,,,,,,,,,,,,596,596,596,596,596,596,596,596,596,596,596,596',
'596,596,,,596,596,596,,596,596,,,596,,,596,,596,,596,,596,,596,596,596',
'596,596,596,596,,596,,596,,,,,,,,,,,,,596,596,596,596,,596,,596,,596',
'242,242,242,,242,,,,242,242,,,,242,,242,242,242,242,242,242,242,,,,',
'242,242,242,242,242,242,242,,,,,,,,,,242,,,242,242,242,242,242,242,242',
'242,242,242,,242,242,,242,242,242,,,,,,,,,,,,,,,,,,,,242,,,242,,,242',
',,,,,,,,242,,,,,,,,242,,,,,242,242,242,242,242,242,,,,242,242,244,244',
'244,,244,,242,,244,244,242,242,,244,,244,244,244,244,244,244,244,,,',
',244,244,244,244,244,244,244,,,,,,,,,,244,,,244,244,244,244,244,244',
'244,244,244,244,,244,244,,244,244,244,,,,,,,,,,,,,,,,,,,,244,,,244,',
',244,,,,,,,,,244,,,,,,,,244,,,,,244,244,244,244,244,244,,,,244,244,595',
'595,595,,595,,244,,595,595,244,244,,595,,595,595,595,595,595,595,595',
',,,,595,595,595,595,595,595,595,,,,,,,,,,595,,,595,595,595,595,595,595',
'595,595,595,595,,595,595,,595,595,595,,,,,,,,,,,,,,,,,,,,595,595,,595',
'595,,595,,,,,595,,595,,595,,,,,,,,595,,,,,595,595,595,595,595,595,,',
',595,595,592,592,592,,592,,595,595,592,592,595,595,,592,,592,592,592',
'592,592,592,592,,,,,592,592,592,592,592,592,592,,,,,,,,,,592,,,592,592',
'592,592,592,592,592,592,592,592,,592,592,,592,592,592,,,,,,,,,,,,,,',
',,,,,592,,,592,,,592,,,,,,,,,592,,,,,,,,592,,,,,592,592,592,592,592',
'592,,,,592,592,589,589,589,,589,,592,,589,589,592,592,,589,,589,589',
'589,589,589,589,589,,,,,589,589,589,589,589,589,589,,,,,,,,,,589,,,589',
'589,589,589,589,589,589,589,589,589,,589,589,,589,589,589,,,,,,,,,,',
',,,,,,,,,589,,,589,,,589,,,,,,,,,589,,,,,,,,589,,,,,589,589,589,589',
'589,589,,,,589,589,584,584,584,,584,,589,,584,584,589,589,,584,,584',
'584,584,584,584,584,584,,,,,584,584,584,584,584,584,584,,,,,,,,,,584',
',,584,584,584,584,584,584,584,584,584,584,,584,584,,584,584,584,,,,',
',,,,,,,,,,,,,,,584,,,584,,,584,,,,,,,,,584,,,,,,,,584,,,,,584,584,584',
'584,584,584,,,,584,584,255,255,255,,255,,584,,255,255,584,584,,255,',
'255,255,255,255,255,255,255,,,,,255,255,255,255,255,255,255,,,,,,,,',
',255,,,255,255,255,255,255,255,255,255,255,255,,255,255,,255,255,255',
',,,,,,,,,,,,,,,,,,,255,,,255,,,255,,,,,255,,255,,255,,,,,,,,255,,,,',
'255,255,255,255,255,255,,,,255,255,256,256,256,,256,,255,,256,256,255',
'255,,256,,256,256,256,256,256,256,256,,,,,256,256,256,256,256,256,256',
',,,,,,,,,256,,,256,256,256,256,256,256,256,256,256,256,,256,256,,256',
'256,256,,,,,,,,,,,,,,,,,,,,256,,,256,,,256,,,,,256,,256,,256,,,,,,,',
'256,,,,,256,256,256,256,256,256,,,,256,256,583,583,583,,583,,256,,583',
'583,256,256,,583,,583,583,583,583,583,583,583,,,,,583,583,583,583,583',
'583,583,,,,,,,,,,583,,,583,583,583,583,583,583,583,583,583,583,,583',
'583,,583,583,583,,,,,,,,,,,,,,,,,,,,583,,,583,,,583,,,,,,,,,583,,,,',
',,,583,,,,,583,583,583,583,583,583,,,,583,583,580,580,580,,580,,583',
',580,580,583,583,,580,,580,580,580,580,580,580,580,,,,,580,580,580,580',
'580,580,580,,,,,,,,,,580,,,580,580,580,580,580,580,580,580,580,580,',
'580,580,,580,580,580,,,,,,,,,,,,,,,,,,,,580,,,580,,,580,,,,,580,,,,580',
',,,,,,,580,,,,,580,580,580,580,580,580,,,,580,580,264,264,264,,264,',
'580,,264,264,580,580,,264,,264,264,264,264,264,264,264,,,,,264,264,264',
'264,264,264,264,,,,,,,,,,264,,,264,264,264,264,264,264,264,264,264,264',
',264,264,,264,264,264,,,,,,,,,,,,,,,,,,,,264,,,264,,264,264,,,,,264',
',264,,264,,,,,,,,264,,,,,264,264,264,264,264,264,,,,264,264,579,579',
'579,,579,,264,,579,579,264,264,,579,,579,579,579,579,579,579,579,,,',
',579,579,579,579,579,579,579,,,,,,,,,,579,,,579,579,579,579,579,579',
'579,579,579,579,,579,579,,579,579,579,,,,,,,,,,,,,,,,,,,,579,,,579,',
',579,,,,,,,,,579,,,,,,,,579,,,,,579,579,579,579,579,579,,,,579,579,266',
'266,266,266,266,,579,,266,266,579,579,,266,,266,266,266,266,266,266',
'266,,,,,266,266,266,266,266,266,266,,,266,,,,,,266,266,266,266,266,266',
'266,266,266,266,266,266,266,266,,266,266,,266,266,266,,,,,,,,,,,,,,',
',,,,,266,,,266,,,266,,,,,266,,,,266,,,,,,,,266,,,,,266,266,266,266,266',
'266,,,,266,266,547,547,547,547,547,,266,,547,547,266,266,,547,,547,547',
'547,547,547,547,547,,,,,547,547,547,547,547,547,547,,,547,,,,,,547,547',
'547,547,547,547,547,547,547,547,547,547,547,547,,547,547,,547,547,547',
',,,,,,,,,,,,,,,,,,,547,,,547,,,547,,,,,547,,,,547,,,,,,,,547,,,,,547',
'547,547,547,547,547,,,,547,547,543,543,543,,543,,547,,543,543,547,547',
',543,,543,543,543,543,543,543,543,,,,,543,543,543,543,543,543,543,,',
'543,,,,,,,543,,,543,543,543,543,543,543,543,543,543,543,,543,543,,543',
'543,543,,,,,,,,,,,,,,,,,,,,543,,,543,,,543,,,,,,,,,543,,,,,,,,543,,',
',,543,543,543,543,543,543,,,,543,543,541,541,541,541,541,,543,,541,541',
'543,543,,541,,541,541,541,541,541,541,541,,,,,541,541,541,541,541,541',
'541,,,541,,,,,,541,541,541,541,541,541,541,541,541,541,541,541,541,541',
',541,541,,541,541,541,,,,,,,,,,,,,,,,,,,,541,,,541,,,541,,,,,541,,,',
'541,,,,,,,,541,,,,,541,541,541,541,541,541,,,,541,541,270,270,270,,270',
',541,,270,270,541,541,,270,,270,270,270,270,270,270,270,,,,,270,270',
'270,270,270,270,270,,,,,,,,,,270,,,270,270,270,270,270,270,270,270,270',
'270,,270,270,,,,270,,,,,,,,,,,,,,,,,,,,270,,,270,,,270,,,,,,,,,,,,,',
',,,,,,,,270,270,270,270,270,270,,,,270,270,271,271,271,271,271,,270',
',271,271,270,270,,271,,271,271,271,271,271,271,271,,,,,271,271,271,271',
'271,271,271,,,271,,,,,,271,271,271,271,271,271,271,271,271,271,271,271',
'271,271,,271,271,,271,271,271,,,,,,,,,,,,,,,,,,,,271,,,271,,,271,,,',
',271,,,,271,,,,,,,,271,,,,,271,271,271,271,271,271,,,,271,271,539,539',
'539,,539,,271,,539,539,271,271,,539,,539,539,539,539,539,539,539,,,',
',539,539,539,539,539,539,539,,,,,,,,,,539,,,539,539,539,539,539,539',
'539,539,539,539,,539,539,,539,539,539,,,,,,,,,,,,,,,,,,,,539,,,539,',
',539,,,,,539,,,,539,,,,,,,,539,,,,,539,539,539,539,539,539,,,,539,539',
'533,533,533,,533,,539,,533,533,539,539,,533,,533,533,533,533,533,533',
'533,,,,,533,533,533,533,533,533,533,,,,,,,,,,533,,,533,533,533,533,533',
'533,533,533,533,533,,533,533,,,,533,,,,,,,,,,,,,,,,,,,,533,,,533,,,533',
',,,,,,,,,,,,,,,,,,,,,533,533,533,533,533,533,,,,533,533,525,525,525',
',525,,533,,525,525,533,533,,525,,525,525,525,525,525,525,525,,,,,525',
'525,525,525,525,525,525,,,,,,,,,,525,,,525,525,525,525,525,525,525,525',
'525,525,,525,525,,525,525,525,,,,,,,,,,,,,,,,,,,,525,,,525,,,525,,,',
',525,,,,525,,,,,,,,525,,,,,525,525,525,525,525,525,,,,525,525,524,524',
'524,524,524,,525,,524,524,525,525,,524,,524,524,524,524,524,524,524',
',,,,524,524,524,524,524,524,524,,,524,,,,,,524,524,524,524,524,524,524',
'524,524,524,524,524,524,524,,524,524,,524,524,524,,,,,,,,,,,,,,,,,,',
',524,,,524,,,524,,,,,524,,,,524,,,,,,,,524,,,,,524,524,524,524,524,524',
',,,524,524,519,519,519,519,519,,524,,519,519,524,524,,519,,519,519,519',
'519,519,519,519,,,,,519,519,519,519,519,519,519,,,519,,,,,,519,519,519',
'519,519,519,519,519,519,519,519,519,519,519,,519,519,,519,519,519,,',
',,,,,,,,,,,,,,,,,519,,,519,,,519,,,,,519,,,,519,,,,,,,,519,,,,,519,519',
'519,519,519,519,,,,519,519,515,515,515,515,515,,519,,515,515,519,519',
',515,,515,515,515,515,515,515,515,,,,,515,515,515,515,515,515,515,,',
'515,,,,,,515,515,515,515,515,515,515,515,515,515,515,515,515,515,,515',
'515,,515,515,515,,,,,,,,,,,,,,,,,,,,515,,,515,,,515,,,,,515,,,,515,',
',,,,,,515,,,,,515,515,515,515,515,515,,,,515,515,511,511,511,,511,,515',
',511,511,515,515,,511,,511,511,511,511,511,511,511,,,,,511,511,511,511',
'511,511,511,,,,,,,,,,511,,,511,511,511,511,511,511,511,511,511,511,',
'511,511,,511,511,511,,,,,,,,,,,,,,,,,,,,511,,,511,,,511,,,,,,,,,511',
',,,,,,,511,,,,,511,511,511,511,511,511,,,,511,511,508,508,508,,508,',
'511,,508,508,511,511,,508,,508,508,508,508,508,508,508,,,,,508,508,508',
'508,508,508,508,,,,,,,,,,508,,,508,508,508,508,508,508,508,508,508,508',
',508,508,,508,508,508,,,,,,,,,,,,,,,,,,,,508,,,508,,,508,,,,,,,,,508',
',,,,,,,508,,,,,508,508,508,508,508,508,,,,508,508,505,505,505,,505,',
'508,,505,505,508,508,,505,,505,505,505,505,505,505,505,,,,,505,505,505',
'505,505,505,505,,,,,,,,,,505,,,505,505,505,505,505,505,505,505,505,505',
',505,505,,505,505,505,,,,,,,,,,,,,,,,,,,,505,,,505,,,505,,,,,505,,,',
'505,,,,,,,,505,,,,,505,505,505,505,505,505,,,,505,505,500,500,500,,500',
',505,,500,500,505,505,,500,,500,500,500,500,500,500,500,,,,,500,500',
'500,500,500,500,500,,,,,,,,,,500,,,500,500,500,500,500,500,500,500,500',
'500,,500,500,,500,500,500,,,,,,,,,,,,,,,,,,,,500,,,500,,,500,,,,,500',
',,,500,,,,,,,,500,,,,,500,500,500,500,500,500,,,,500,500,498,498,498',
',498,,500,,498,498,500,500,,498,,498,498,498,498,498,498,498,,,,,498',
'498,498,498,498,498,498,,,498,,,,,,,498,,,498,498,498,498,498,498,498',
'498,498,498,,498,498,,498,498,498,,,,,,,,,,,,,,,,,,,,498,,,498,,,498',
',,,,,,,,498,,,,,,,,498,,,,,498,498,498,498,498,498,,,,498,498,494,494',
'494,,494,,498,,494,494,498,498,,494,,494,494,494,494,494,494,494,,,',
',494,494,494,494,494,494,494,,,,,,,,,,494,,,494,494,494,494,494,494',
'494,494,494,494,,494,494,,494,494,494,,,,,,,,,,,,,,,,,,,,494,,,494,',
',494,,,,,,,,,494,,,,,,,,494,,,,,494,494,494,494,494,494,,,,494,494,493',
'493,493,,493,,494,,493,493,494,494,,493,,493,493,493,493,493,493,493',
',,,,493,493,493,493,493,493,493,,,,,,,,,,493,,,493,493,493,493,493,493',
'493,493,493,493,,493,493,,493,493,493,,,,,,,,,,,,,,,,,,,,493,,,493,',
',493,,,,,,,,,493,,,,,,,,493,,,,,493,493,493,493,493,493,,,,493,493,492',
'492,492,,492,,493,,492,492,493,493,,492,,492,492,492,492,492,492,492',
',,,,492,492,492,492,492,492,492,,,,,,,,,,492,,,492,492,492,492,492,492',
'492,492,492,492,,492,492,,492,492,492,,,,,,,,,,,,,,,,,,,,492,,,492,',
',492,,,,,,,,,492,,,,,,,,492,,,,,492,492,492,492,492,492,,,,492,492,291',
'291,291,,291,,492,,291,291,492,492,,291,,291,291,291,291,291,291,291',
',,,,291,291,291,291,291,291,291,,,,,,,,,,291,,,291,291,291,291,291,291',
'291,291,291,291,,291,291,,291,291,291,,,,,,,,,,,,,,,,,,,,291,,,291,291',
',291,,,,,,,,,291,,,,,,,,291,,,,,291,291,291,291,291,291,,,,291,291,485',
'485,485,,485,,291,,485,485,291,291,,485,,485,485,485,485,485,485,485',
',,,,485,485,485,485,485,485,485,,,,,,,,,,485,,,485,485,485,485,485,485',
'485,485,485,485,,485,485,,485,485,485,,,,,,,,,,,,,,,,,,,,485,,,485,',
',485,,,,,485,,,,485,,,,,,,,485,,,,,485,485,485,485,485,485,,,,485,485',
'476,476,476,476,476,,485,,476,476,485,485,,476,,476,476,476,476,476',
'476,476,,,,,476,476,476,476,476,476,476,,,476,,,,,,476,476,476,476,476',
'476,476,476,476,476,476,476,476,476,,476,476,,476,476,476,,,,,,,,,,',
',,,,,,,,,476,,,476,,,476,,,,,476,,,,476,,,,,,,,476,,,,,476,476,476,476',
'476,476,,,,476,476,475,475,475,475,475,,476,,475,475,476,476,,475,,475',
'475,475,475,475,475,475,,,,,475,475,475,475,475,475,475,,,475,,,,,,475',
'475,475,475,475,475,475,475,475,475,475,475,475,475,,475,475,,475,475',
'475,,,,,,,,,,,,,,,,,,,,475,,,475,,,475,,,,,475,,,,475,,,,,,,,475,,,',
',475,475,475,475,475,475,,,,475,475,471,471,471,,471,,475,,471,471,475',
'475,,471,,471,471,471,471,471,471,471,,,,,471,471,471,471,471,471,471',
',,471,,,,,,,471,,,471,471,471,471,471,471,471,471,471,471,,471,471,',
'471,471,471,,,,,,,,,,,,,,,,,,,,471,,,471,,471,471,,,,,471,,471,,471',
',,,,,,,471,,,,,471,471,471,471,471,471,,,,471,471,457,457,457,,457,',
'471,,457,457,471,471,,457,,457,457,457,457,457,457,457,,,,,457,457,457',
'457,457,457,457,,,,,,,,,,457,,,457,457,457,457,457,457,457,457,457,457',
',457,457,,457,457,457,,,,,,,,,,,,,,,,,,,,457,,,457,,,457,,,,,,,,,457',
',,,,,,,457,,,,,457,457,457,457,457,457,,,,457,457,454,454,454,,454,',
'457,,454,454,457,457,,454,,454,454,454,454,454,454,454,,,,,454,454,454',
'454,454,454,454,,,,,,,,,,454,,,454,454,454,454,454,454,454,454,454,454',
',454,454,,454,454,454,,,,,,,,,,,,,,,,,,,,454,,,454,,,454,,,,,454,,454',
',454,,,,,,,,454,,,,,454,454,454,454,454,454,,,,454,454,300,300,300,',
'300,,454,,300,300,454,454,,300,,300,300,300,300,300,300,300,,,,,300',
'300,300,300,300,300,300,,,,,,,,,,300,,,300,300,300,300,300,300,300,300',
'300,300,,300,300,,300,300,300,,,,,,,,,,,,,,,,,,,,300,,,300,,,300,,,',
',,,,,300,,,,,,,,300,,,,,300,300,300,300,300,300,,,,300,300,451,451,451',
',451,,300,,451,451,300,300,,451,,451,451,451,451,451,451,451,,,,,451',
'451,451,451,451,451,451,,,,,,,,,,451,,,451,451,451,451,451,451,451,451',
'451,451,,451,451,,451,451,451,,,,,,,,,,,,,,,,,,,,451,,,451,,,451,,,',
',451,,451,,451,,,,,,,,451,,,,,451,451,451,451,451,451,,,,451,451,422',
'422,422,,422,,451,,422,422,451,451,,422,,422,422,422,422,422,422,422',
',,,,422,422,422,422,422,422,422,,,,,,,,,,422,,,422,422,422,422,422,422',
'422,422,422,422,,422,422,,422,422,422,,,,,,,,,,,,,,,,,,,,422,,,422,',
',422,,,,,,,,,422,,,,,,,,422,,,,,422,422,422,422,422,422,,,,422,422,421',
'421,421,,421,,422,,421,421,422,422,,421,,421,421,421,421,421,421,421',
',,,,421,421,421,421,421,421,421,,,,,,,,,,421,,,421,421,421,421,421,421',
'421,421,421,421,,421,421,,421,421,421,,,,,,,,,,,,,,,,,,,,421,,,421,',
',421,,,,,,,,,421,,,,,,,,421,,,,,421,421,421,421,421,421,,,,421,421,420',
'420,420,,420,,421,,420,420,421,421,,420,,420,420,420,420,420,420,420',
',,,,420,420,420,420,420,420,420,,,,,,,,,,420,,,420,420,420,420,420,420',
'420,420,420,420,,420,420,,420,420,420,,,,,,,,,,,,,,,,,,,,420,,,420,',
',420,,,,,,,,,420,,,,,,,,420,,,,,420,420,420,420,420,420,,,,420,420,418',
'418,418,,418,,420,,418,418,420,420,,418,,418,418,418,418,418,418,418',
',,,,418,418,418,418,418,418,418,,,,,,,,,,418,,,418,418,418,418,418,418',
'418,418,418,418,,418,418,,418,418,418,,,,,,,,,,,,,,,,,,,,418,,,418,',
',418,,,,,418,,,,418,,,,,,,,418,,,,,418,418,418,418,418,418,,,,418,418',
'411,411,411,,411,,418,,411,411,418,418,,411,,411,411,411,411,411,411',
'411,,,,,411,411,411,411,411,411,411,,,,,,,,,,411,,,411,411,411,411,411',
'411,411,411,411,411,,411,411,,411,411,411,,,,,,,,,,,,,,,,,,,,411,,,411',
'411,,411,,,,,411,,411,,411,,,,,,,,411,,,,,411,411,411,411,411,411,,',
',411,411,410,410,410,,410,,411,,410,410,411,411,,410,,410,410,410,410',
'410,410,410,,,,,410,410,410,410,410,410,410,,,,,,,,,,410,,,410,410,410',
'410,410,410,410,410,410,410,,410,410,,410,410,410,,,,,,,,,,,,,,,,,,',
',410,,,410,410,,410,,,,,410,,410,,410,,,,,,,,410,,,,,410,410,410,410',
'410,410,,,,410,410,310,310,310,,310,,410,,310,310,410,410,,310,,310',
'310,310,310,310,310,310,,,,,310,310,310,310,310,310,310,,,310,,,,,,',
'310,,,310,310,310,310,310,310,310,310,310,310,,310,310,,310,310,310',
',,,,,,,,,,,,,,,,,,,310,,,310,,,310,,,,,,,,,310,,,,,,,,310,,,,,310,310',
'310,310,310,310,,,,310,310,311,311,311,,311,,310,,311,311,310,310,,311',
',311,311,311,311,311,311,311,,,,,311,311,311,311,311,311,311,,,311,',
',,,,,311,,,311,311,311,311,311,311,311,311,311,311,,311,311,,311,311',
'311,,,,,,,,,,,,,,,,,,,,311,,,311,,,311,,,,,,,,,311,,,,,,,,311,,,,408',
'311,311,311,311,311,311,408,408,408,311,311,,408,408,,408,,311,,,,311',
'311,,,,,,,,,,,,408,408,,408,408,408,408,408,,,,,,,,,,,,,,,,,,,,,,408',
'408,408,408,408,408,408,408,408,408,408,408,408,408,,,408,408,408,,408',
',,,408,,,,,,,408,,408,,408,408,408,408,408,408,408,,408,,408,,,,,,,',
',,,,,408,408,,408,406,408,,408,,408,,406,406,406,,,,406,406,,406,,,',
',,,,,406,,,,,,,,,,406,406,,406,406,406,406,406,,,,,,,,,,,,,,,,,,,,,',
'406,406,406,406,406,406,406,406,406,406,406,406,406,406,,,406,406,406',
',406,,,,406,,,,,,,406,,406,,406,406,406,406,406,406,406,,406,406,406',
',,,,,,,,,,,,406,406,,406,,406,,406,,406,403,403,403,,403,,,,403,403',
',,,403,,403,403,403,403,403,403,403,,,,,403,403,403,403,403,403,403',
',,,,,,,,,403,,,403,403,403,403,403,403,403,403,403,403,,403,403,,403',
'403,403,,,,,,,,,,,,,,,,,,,,403,,,403,403,,403,,,,,403,,403,,403,,,,',
',,,403,,,,,403,403,403,403,403,403,,,,403,403,394,394,394,,394,,403',
',394,394,403,403,,394,,394,394,394,394,394,394,394,,,,,394,394,394,394',
'394,394,394,,,,,,,,,,394,,,394,394,394,394,394,394,394,394,394,394,',
'394,394,,394,394,394,,,,,,,,,,,,,,,,,,,,394,,,394,,,394,,,,,,,,,394',
',,,,,,,394,,,,,394,394,394,394,394,394,,,,394,394,355,355,355,,355,',
'394,,355,355,394,394,,355,,355,355,355,355,355,355,355,,,,,355,355,355',
'355,355,355,355,,,355,,,,,,,355,,,355,355,355,355,355,355,355,355,355',
'355,,355,355,,355,355,355,,,,,,,,,,,,,,,,,,,,355,,,355,,,355,,,,,,,',
',355,,,,,,,,355,,,,,355,355,355,355,355,355,,,,355,355,342,342,342,342',
'342,,355,,342,342,355,355,,342,,342,342,342,342,342,342,342,,,,,342',
'342,342,342,342,342,342,,,342,,,,,,342,342,342,342,342,342,342,342,342',
'342,342,342,342,342,,342,342,,342,342,342,,,,,,,,,,,,,,,,,,,,342,,,342',
',,342,,,,,342,,,,342,,,,,,,,342,,,,,342,342,342,342,342,342,,,,342,342',
'764,764,764,764,764,,342,,764,764,342,342,,764,,764,764,764,764,764',
'764,764,,,,,764,764,764,764,764,764,764,,,764,,,,,,764,764,764,764,764',
'764,764,764,764,764,764,764,764,764,,764,764,,764,764,764,,,,,,,,,,',
',,,,,,,,,764,,,764,,,764,,,,,764,,,,764,,,,,,,,764,,,,461,764,764,764',
'764,764,764,461,461,461,764,764,461,461,461,,461,,764,,,,764,764,,,461',
',,,,,,,,461,461,,461,461,461,461,461,,,,,,,,,,,,458,,,,,,,458,458,458',
',,458,458,458,,458,,,,,461,,,,,458,,461,,,,,461,461,458,458,,458,458',
'458,458,458,,,,,,,,,,,,,461,,,,,,,,,,,,,461,,461,,,461,,458,,,,,,,458',
',,,,458,458,,,,,,,,,,,,,,,,,,,,,458,,,,,,,,,,,,,458,,458,,,458,64,64',
'64,64,64,64,64,64,,,64,64,64,64,64,,,64,64,64,64,64,64,64,,,64,64,64',
'64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64',
'64,,,,,,,64,64,,64,64,64,64,,64,64,,,64,,,,,64,64,64,64,,,,,,64,,,,',
',,64,64,,64,64,64,64,64,64,64,64,64,,64,,,64,,184,184,184,184,184,184',
'184,184,,,184,184,184,184,184,,64,184,184,184,184,184,184,184,,,184',
'184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184',
'184,184,184,184,184,184,184,184,184,,,,,,,184,184,,184,184,184,184,',
'184,184,,,184,,,,,184,184,184,184,,,,,,,,,,,,,184,184,,184,184,184,184',
'184,184,184,184,184,,184,,,184,,556,556,556,556,556,556,556,556,,,556',
'556,556,556,556,,184,556,556,556,556,556,556,556,,,556,556,556,556,556',
'556,556,556,556,556,556,556,556,556,556,556,556,556,556,556,556,556',
'556,,,556,,,,,,,,556,556,,556,556,556,556,,556,556,,,556,,,,,556,556',
'556,556,,,,,,,,,,,,,556,556,,556,556,556,556,556,556,556,556,556,,556',
',,556,,6,6,6,6,6,6,6,6,,,6,6,6,6,6,,556,6,6,6,6,6,6,6,,,6,6,6,6,6,6',
'6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,,6,,,,,,,,6,6,,6,6,6,6,,6,6,,,6',
',,,,6,6,6,6,,,,,,,,,,,,,6,6,,6,6,6,6,6,6,6,6,6,,6,,,6,6,107,107,107',
'107,107,107,107,107,,6,107,107,107,107,107,,6,107,107,107,107,107,107',
'107,,,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107',
'107,107,107,107,107,107,107,,,107,,,,,,,,107,107,,107,107,107,107,,107',
'107,,,107,,,,,107,107,107,107,,,,,,,,,,,,,107,107,,107,107,107,107,107',
'107,107,107,107,,107,,,107,107,78,78,78,78,78,78,78,78,,107,78,78,78',
'78,78,,107,78,78,78,78,78,78,78,,,78,78,78,78,78,78,78,78,78,78,78,78',
'78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,,,,,,,78,78,,78,78,78,78',
',78,78,,,78,,,,,78,78,78,78,,,,,,,,,,,,,78,78,,78,78,78,78,78,78,78',
'78,78,,78,,,78,,386,386,386,386,386,386,386,386,,,386,386,386,386,386',
',78,386,386,386,386,386,386,386,,,386,386,386,386,386,386,386,386,386',
'386,386,386,386,386,386,386,386,386,386,386,386,386,386,,,386,,,,,,',
',386,386,,386,386,386,386,,386,386,,,386,,,,,386,386,386,386,,,,,,,',
',,,,,386,386,,386,386,386,386,386,386,386,386,386,,386,,,386,386,7,7',
'7,7,7,7,7,7,,386,7,7,7,7,7,,386,7,7,7,7,7,7,7,,,7,7,7,7,7,7,7,7,7,7',
'7,7,7,7,7,7,7,7,7,7,7,7,7,,,7,,,,,,,,7,7,,7,7,7,7,,7,7,,,7,,,,,7,7,7',
'7,,,,,,,,,,,,,7,7,,7,7,7,7,7,7,7,7,7,,7,598,,7,7,,,,,,,,,,7,,,,,,,7',
',598,598,598,598,598,598,598,598,598,598,598,,598,598,,,598,598,,,,',
',,,,,,,,,598,,598,,598,598,598,598,598,598,598,,598,834,834,834,834',
'834,834,834,834,834,834,834,,834,834,,598,834,834,,,,,,,,,,,,,,834,',
'834,,834,834,834,834,834,834,834,,834,,,,,,,844,844,,,844,,,,,834,,834',
'844,844,,844,844,844,844,,844,844,,,844,,,,,844,844,844,844,,,,,,,,',
',,,,844,844,,844,844,844,844,844,844,844,844,844,,844,252,252,844,,252',
',,,,,,,252,252,,252,252,252,252,,252,252,,,252,,,,,252,252,252,252,',
',,,,,,,,,,,252,252,,252,252,252,252,252,252,252,252,252,,252,496,496',
'252,,496,,,,,,,,496,496,,496,496,496,496,,496,496,,,496,,,,,496,496',
'496,496,,,,,,,,,,,,,496,496,,496,496,496,496,496,496,496,496,496,,496',
'495,495,496,,495,,,,,,,,495,495,,495,495,495,495,,495,495,,,495,,,,',
'495,495,495,495,,,,,,,,,,,,,495,495,,495,495,495,495,495,495,495,495',
'495,,495,845,845,495,,845,,,,,,,,845,845,,845,845,845,845,,845,845,',
',845,,,,,845,845,845,845,,,,,,,,,,,,,845,845,,845,845,845,845,845,845',
'845,845,845,,845,194,194,845,,194,,,,,,,,194,194,,194,194,194,194,,194',
'194,,,194,,,,,194,194,194,194,,,,,,,,,,,,,194,194,,194,194,194,194,194',
'194,194,194,194,,194,487,487,194,,487,,,,,,,,487,487,,487,487,487,487',
',487,487,,,487,,,,,487,487,487,487,,,,,,,,,,,,,487,487,,487,487,487',
'487,487,487,487,487,487,,487,253,253,487,,253,,,,,,,,253,253,,253,253',
'253,253,,253,253,,,253,,,,,253,253,253,253,,,,,,,,,,,,,253,253,,253',
'253,253,253,253,253,253,253,253,,253,,,253,622,622,622,622,622,622,622',
'622,622,622,622,,622,622,,,622,622,,,,622,,,,,,,,,,622,,622,,622,622',
'622,622,622,622,622,,622,,,,,,,486,486,,,486,,,,,622,,622,486,486,,486',
'486,486,486,,486,486,,,486,,,,,486,486,486,486,,,,,,,,,,,,,486,486,',
'486,486,486,486,486,486,486,486,486,,486,416,416,486,,416,,,,,,,,416',
'416,,416,416,416,416,,416,416,,,416,,,,,416,416,416,416,,,,,,,,,,,,',
'416,416,,416,416,416,416,416,416,416,416,416,,416,417,417,416,,417,',
',,,,,,417,417,,417,417,417,417,,417,417,,,417,,,,,417,417,417,417,,',
',,,,,,,,,,417,417,,417,417,417,417,417,417,417,417,417,,417,619,619',
'417,,619,,,,,,,,619,619,,619,619,619,619,,619,619,,,619,,,,,619,619',
'619,619,,,,,,,,,,,,,619,619,,619,619,619,619,619,619,619,619,619,,619',
'193,193,619,,193,,,,,,,,193,193,,193,193,193,193,,193,193,,,193,,,,',
'193,193,193,193,,,,,,,,,,,,,193,193,,193,193,193,193,193,193,193,193',
'193,,193,538,538,193,,538,,,,,,,,538,538,,538,538,538,538,,538,538,',
',538,,,,,538,538,538,538,,,,,,,,,,,,,538,538,,538,538,538,538,538,538',
'538,538,538,,538,775,775,538,,775,,,,,,,,775,775,,775,775,775,775,,775',
'775,,,775,,,,,775,775,775,775,,,,,,,,,,,,,775,775,,775,775,775,775,775',
'775,775,775,775,,775,540,540,775,,540,,,,,,,,540,540,,540,540,540,540',
',540,540,,,540,,,,,540,540,540,540,,,,,,,,,,,,,540,540,,540,540,540',
'540,540,540,540,540,540,,540,620,620,540,,620,,,,,,,,620,620,,620,620',
'620,620,,620,620,,,620,,,,,620,620,620,620,,,,,,,,,,,,,620,620,,620',
'620,620,620,620,620,620,620,620,,620,,,620,448,448,448,448,448,448,448',
'448,448,448,448,,448,448,,,448,448,,,,,,,,,,,,,,448,,448,,448,448,448',
'448,448,448,448,,448,,509,509,509,509,509,509,509,509,509,509,509,,509',
'509,448,448,509,509,,,,,,,,,,,,,,509,,509,,509,509,509,509,509,509,509',
',509,794,794,794,794,794,794,794,794,794,794,794,,794,794,509,509,794',
'794,,,,,,,,,,,,,,794,,794,,794,794,794,794,794,794,794,,794,413,413',
'413,413,413,413,413,413,413,413,413,,413,413,,794,413,413,,,,,,,,,,',
',,,413,,413,,413,413,413,413,413,413,413,,413,238,238,238,238,238,238',
'238,238,238,238,238,,238,238,,413,238,238,,,,,,,,,,,,,,238,,238,,238',
'238,238,238,238,238,238,,238,19,19,19,19,19,19,19,19,19,19,19,,19,19',
',238,19,19,,,,,,,,,,,,,,19,,19,,19,19,19,19,19,19,19,,19,711,711,711',
'711,711,711,711,711,711,711,711,,711,711,,19,711,711,,,,,,,,,,,,,,711',
',711,,711,711,711,711,711,711,711,,711,643,643,643,643,643,643,643,643',
'643,643,643,,643,643,,711,643,643,,,,,,,,,,,,,,643,,643,,643,643,643',
'643,643,643,643,,643,758,758,758,758,758,758,758,758,758,758,758,,758',
'758,,643,758,758,,,,,,,,,,,,,,758,,758,,758,758,758,758,758,758,758',
',758,497,497,497,497,497,497,497,497,497,497,497,,497,497,758,758,497',
'497,,,,,,,,,,,,,,497,,497,,497,497,497,497,497,497,497,,497,728,728',
'728,728,728,728,728,728,728,728,728,,728,728,,497,728,728,,,,,,,,,,',
',,,728,,728,,728,728,728,728,728,728,728,,728,716,716,716,716,716,716',
'716,716,716,716,716,,716,716,,728,716,716,,,,,,,,,,,,,,716,,716,,716',
'716,716,716,716,716,716,,716,718,718,718,718,718,718,718,718,718,718',
'718,,718,718,,716,718,718,,,,,,,,,,,,,,718,,718,,718,718,718,718,718',
'718,718,,718,723,723,723,723,723,723,723,723,723,723,723,,723,723,,718',
'723,723,,,,,,,,,,,,,,723,,723,,723,723,723,723,723,723,723,,723,399',
'399,399,399,399,399,399,399,399,399,399,,399,399,,723,399,399,,,,,,',
',,,,,,,399,,399,,399,399,399,399,399,399,399,,399,721,721,721,721,721',
'721,721,721,721,721,721,,721,721,,399,721,721,,,,,,,,,,,,,,721,,721',
',721,721,721,721,721,721,721,,721,,,,,,,,,,,,,,,,721' ]
        racc_action_check = arr = Array.new(23480, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_action_pointer = [
    -2,   965,   nil,   204,   nil,   598, 21036, 21476,   820,   814,
   789,   787,   825,   266,   301,    29,   nil,  1678,  1798, 22916,
   851,   nil,  2158,  2278,  2398,   233,    -1,  2758,  2868,   nil,
  2998,  3118,  3238,   nil,   693,   -59,   761,   345,  3838,  3958,
  4078,   686,   352,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
  4428,  4558,  4678,  4798,  4918,   -13,  5158,  5278,   nil,   nil,
  5398,   888,  5650,  5770, 20706,   nil,   nil,   nil,   nil,   nil,
   -44,   nil,   nil,   nil,   nil,   nil,   652,   649, 21256,   nil,
   nil,   nil,  6490,   nil,   nil,  6610,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   754,   nil,  6850,   nil,
   nil,   nil,  6970,  7090,  7210,  7330,  7450, 21146,   502,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil, 20816,   558,   nil,  8050,  8170,  8290,
  8410,  8530,  8650, 22412, 21946,  9010,  9130,  9250,   nil,   198,
    94,   543,   253,   348,   436, 10090,   nil,   nil, 10210, 10330,
 10450, 10570, 10690, 10810, 10930, 11050, 11170, 11290, 11410, 11530,
 11650, 11770, 11890, 12010, 12130, 12250, 12370, 12490, 12610, 12730,
 12850, 12970, 13090, 13210, 13330,   nil,   nil,   nil, 22872,   nil,
   431,   480, 13810,   nil, 13930,   529,   nil,   nil,   nil,   nil,
   nil,   nil, 21710, 22064,   589, 14530, 14650,   nil,   nil,   250,
   327,   nil,   nil,   nil, 15010,   602, 15250,   628,   639,   607,
 15730, 15850,   -42,   202,   703,   199,   672,   660,   -18,   nil,
   696,    19,   nil,   nil,   392,   733,   735,   232,   nil,   736,
   nil, 17650,   nil,   798,   814,     1,   nil,   703,   103,   422,
 18490,   792,   440,   796,   nil,   441,   nil,   483,    86,    76,
 19450, 19570,   315,   358,   783,   899,   nil,   813,   818,   820,
   nil,   nil,   818,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   914,   nil,   nil,   907,  4318,   893,   nil,   253,   nil,     5,
  3478,   nil, 20296,   238,   375,   379,   237,   220,   124,   358,
   460,   340,  3131,   370,   nil, 20176,   nil,    25,   nil,    -2,
   nil,   161,   815,   118,   nil,   812,   -34,   nil,   145,   nil,
   nil,   nil,   nil,   nil,   nil,   635,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil, 21366,   820,   817,   nil,
   nil,  5398,   nil,   800, 20056,   nil,   790,   nil,   nil, 23312,
   822,   334,   299, 19936,   nil,   nil, 19806,   819, 19680,   nil,
 19330, 19210,   nil, 22828,   nil,   nil, 22235, 22294, 19090,   -62,
 18970, 18850, 18730,  2638,  2278,   488,   460,   839,   838,   834,
   831,  2758,  2998,  2819,  2398,  2158,  2038,  1918,  1798,  1078,
  1558,  1438,  1318,  1198,   570,   689,  2518,  1678, 22695,    81,
   nil, 18610,   nil,   nil, 18370,   754,   nil, 18250, 20580,   nil,
   nil, 20526,   -14,   nil,   789,   730,   201,   702,   799,   nil,
   nil, 18130,   nil,   528,   nil, 18010, 17890,   727,   nil,   723,
   684,   nil,   nil,   nil,   718, 17770, 22176, 22005,   265,   716,
   nil,   nil, 17530, 17410, 17290, 21828, 21769, 23092, 17170,   778,
 17050,   nil,   697,   nil,   nil, 16930,   nil,   nil, 16810, 22740,
   nil, 16690,   nil,   nil,   nil, 16570,   748,   nil,   nil, 16450,
   -21,    36,   742,   748, 16330, 16210,   nil,   648,   nil,   419,
   nil,   nil,   489, 16090,   nil,   nil,   234,   nil, 22471, 15970,
 22589, 15610,   nil, 15490,   100,   -25,   708, 15370,  1008,   451,
   590,   583,   580,   nil,   574,   nil, 20926,   nil,   nil,     3,
   nil,   nil,   nil,   612,   nil,   nil,   nil,   nil,   nil,   nil,
   -43,   nil,   nil,   nil,   567,   nil,   nil,   nil,   nil, 15130,
 14890,   nil,   181, 14770, 14410,   587,   nil,   nil,   nil, 14290,
   562,   nil, 14170,    16,   214, 14050, 13680,     2, 21542, 13570,
 13450,  9970,   380,   nil,   407,  9850,   nil,   382,   nil,   229,
   nil,   nil,   nil,   nil,   nil,  9730,   nil,   108,    69, 22353,
 22648,  9610, 22111,     9,   192,  9490,   nil,   nil,   254,   nil,
   318,   342,   456,   nil,   -54,   nil,   384,   310,   337,   407,
    68,   356,   467, 23004,   508,   531,   269,   589,   nil,  9370,
   482,   527,   nil,   nil,   nil,  8890,   nil,   nil,   561,   nil,
   644,   nil,   nil,   nil,   nil,   nil,   653,   nil,   669,   554,
    60,  8770,  7930,   560,   561,   nil,   nil,   563,   nil,   560,
   264,   638,   371,   nil,   607,   604,   689,   416,   nil,  7810,
   nil,   697,   585,   nil,   768,   nil,   779,   nil,   nil,  7690,
  3251,   637,   nil,   nil,   nil,   nil,   nil,  7570,   nil,   nil,
   nil, 22960,   609,  6730,  6370,   nil, 23180,   nil, 23224,   nil,
   nil, 23356,   nil, 23268,  6250,  6130,  6010,   272, 23136,   777,
   662,   nil,  5890,   668,   685,   nil,   nil,   708,   709,   130,
   771,  5530,   nil,  5038,   677,   nil,   nil,   nil,   nil,   263,
   nil,   nil,  4318,   nil,   nil,    87,  4198,   nil, 23048,   801,
   nil,  3718,   804,  3598, 20416,   nil,   nil,  3358,  2638,   nil,
    37,   474,   nil,   nil,   nil, 22530,   nil,   nil,   nil,   nil,
   826,   nil,   748,   712,   718,   720,   718,   nil,   nil,  2518,
   nil,   745,   nil,   nil, 22784,  2038,   nil,   nil,  1918,   nil,
   nil,   792,   756,   nil,  1558,   759,  1438,   nil,   nil,  1318,
   318,   354,   851,   144,   nil,   nil,   nil,    68,   nil,   898,
   899,  1198,   229,   nil,   786,   825,   nil,   nil,   454,   nil,
   nil,   nil,   905,   nil, 21586,   nil,   nil,  1078,   792,   nil,
   958,   794,   913,   838, 21651, 21887,   172,   718,   nil,   nil,
   nil,   nil,   nil,   nil,   598,   nil,   805,   nil,   nil,   478,
   808,   nil,   358,   nil,   nil,   844,    93,    61,    67,   373,
   532,   939,   nil,   830,   nil,   238,   832,   236,   nil,   nil,
   nil,   118,   nil,   842,   nil ]

racc_action_default = [
  -484,  -486,    -1,  -473,    -4,    -5,  -486,  -486,  -486,  -486,
  -486,  -486,  -486,  -486,  -264,   -30,   -31,  -486,  -486,   -36,
   -38,   -39,  -274,  -301,  -302,   -43,  -244,  -343,  -244,   -55,
  -484,   -59,   -64,   -65,  -486,  -416,  -486,  -486,  -486,  -486,
  -486,  -475,  -209,  -257,  -258,  -259,  -260,  -261,  -262,  -263,
  -463,  -484,  -486,  -484,  -484,  -280,  -486,  -486,  -284,  -287,
  -473,  -486,  -486,  -486,  -486,  -303,  -304,  -361,  -362,  -363,
  -364,  -365,  -484,  -368,  -484,  -484,  -484,  -484,  -484,  -394,
  -400,  -401,  -404,  -405,  -406,  -407,  -408,  -409,  -410,  -411,
  -412,  -413,  -414,  -415,  -418,  -419,  -486,    -3,  -474,  -480,
  -481,  -482,  -486,  -486,  -486,  -486,  -486,  -486,  -486,   -89,
   -90,   -91,   -92,   -93,   -94,   -95,   -98,   -99,  -100,  -101,
  -102,  -103,  -104,  -105,  -106,  -107,  -108,  -109,  -110,  -111,
  -112,  -113,  -114,  -115,  -116,  -117,  -118,  -119,  -120,  -121,
  -122,  -123,  -124,  -125,  -126,  -127,  -128,  -129,  -130,  -131,
  -132,  -133,  -134,  -135,  -136,  -137,  -138,  -139,  -140,  -141,
  -142,  -143,  -144,  -145,  -146,  -147,  -148,  -149,  -150,  -151,
  -152,  -153,  -154,  -155,  -156,  -157,  -158,  -159,  -160,  -161,
  -162,  -163,  -164,  -165,  -486,   -11,   -96,  -484,  -484,  -486,
  -486,  -486,  -484,  -486,  -486,  -486,  -486,  -486,   -34,  -486,
  -416,  -486,  -264,  -486,  -486,  -484,   -35,  -201,  -486,  -486,
  -486,  -486,  -486,  -486,  -486,  -486,  -486,  -486,  -486,  -486,
  -486,  -486,  -486,  -486,  -486,  -486,  -486,  -486,  -486,  -486,
  -486,  -486,  -486,  -486,  -486,  -333,  -335,   -40,  -210,  -223,
  -485,  -485,  -486,  -231,  -486,  -252,  -274,  -301,  -302,  -458,
   -41,   -42,  -486,  -486,   -47,  -484,  -486,  -279,  -338,  -484,
  -484,   -53,  -342,   -54,  -486,   -55,  -484,  -486,  -486,   -60,
   -62,  -484,   -69,  -486,  -486,   -76,  -277,  -475,  -486,  -305,
  -343,  -486,   -63,   -67,  -270,  -402,  -403,  -486,  -186,  -187,
  -202,  -486,  -476,  -353,  -486,  -475,  -211,  -475,  -477,  -477,
  -486,  -486,  -477,  -486,  -455,  -477,  -281,   -37,  -486,  -486,
  -486,  -486,  -473,  -486,  -474,  -486,  -317,  -452,  -452,  -452,
  -325,  -326,  -438,  -434,  -435,  -436,  -437,  -439,  -444,  -445,
  -447,  -448,  -449,  -486,   -85,  -486,   -87,  -486,  -264,  -486,
  -486,  -416,  -484,   -89,   -90,  -124,  -125,  -141,  -146,  -153,
  -156,  -165,  -433,  -486,  -453,  -486,  -366,  -486,  -381,  -486,
  -383,  -486,  -486,  -486,  -373,  -486,  -486,  -379,  -486,  -393,
  -395,  -396,  -397,  -398,   885,    -6,  -483,   -12,   -13,   -14,
   -15,   -16,    -7,    -8,    -9,   -10,  -486,  -486,  -486,   -19,
   -27,  -166,  -252,  -486,  -486,   -20,   -28,   -29,   -21,  -168,
  -486,  -464,  -465,  -484,  -466,  -467,  -464,  -244,  -465,  -341,
  -469,  -470,   -26,  -175,   -32,   -33,  -486,  -486,  -484,  -270,
  -486,  -486,  -486,  -176,  -177,  -178,  -179,  -180,  -181,  -182,
  -183,  -188,  -189,  -190,  -191,  -192,  -193,  -194,  -195,  -196,
  -197,  -198,  -199,  -200,  -203,  -204,  -205,  -206,  -486,  -484,
  -224,  -486,  -251,  -226,  -486,  -485,  -249,  -486,  -244,  -464,
  -465,  -244,  -484,   -48,  -486,  -475,  -475,  -485,  -223,  -245,
  -246,  -486,  -329,  -486,  -331,  -484,  -484,  -486,  -276,  -486,
   -56,  -268,   -68,   -61,  -486,  -484,  -486,  -486,   -75,  -486,
  -402,  -403,  -486,  -486,  -486,  -486,  -486,  -207,  -486,  -484,
  -484,  -266,  -486,  -212,  -213,  -479,  -478,  -215,  -479,  -475,
  -272,  -479,  -457,  -273,  -456,  -484,  -306,  -307,  -308,  -484,
  -486,  -486,  -486,  -486,  -484,  -486,  -293,  -486,  -321,  -486,
  -323,  -324,  -486,  -486,  -446,  -450,   -85,   -86,  -486,  -484,
  -486,  -484,  -420,  -486,  -486,  -486,  -486,  -484,  -433,  -486,
  -452,  -452,  -452,  -432,  -438,  -442,  -486,  -471,  -472,  -475,
  -367,  -382,  -385,  -486,  -387,  -369,  -384,  -370,  -371,  -372,
  -486,  -375,  -377,  -378,  -486,  -399,   -97,   -17,   -18,  -486,
  -486,  -256,  -271,  -486,  -486,   -49,  -221,  -222,  -339,  -486,
   -51,  -340,  -486,  -464,  -465,  -468,  -465,  -486,  -166,  -486,
  -484,  -486,  -485,  -250,  -253,  -486,  -459,  -486,  -230,  -486,
  -460,   -44,  -336,   -45,  -337,  -484,  -217,  -486,  -486,  -486,
  -486,  -486,   -36,  -486,  -485,  -486,  -243,  -247,  -486,  -330,
  -486,  -486,  -486,  -275,   -56,   -66,  -486,  -464,  -465,  -484,
  -468,   -74,  -486,  -174,  -184,  -185,  -486,  -484,  -315,  -484,
  -354,  -484,  -355,  -356,  -267,  -486,  -253,  -216,  -484,  -309,
  -484,  -285,  -310,  -311,  -312,  -288,  -486,  -291,  -486,  -347,
  -486,  -486,  -486,  -452,  -452,  -440,  -451,  -452,  -327,  -486,
  -328,  -486,   -85,   -88,  -468,  -486,  -486,  -486,  -422,  -484,
  -298,  -486,  -475,  -424,  -486,  -428,  -486,  -430,  -431,  -486,
  -433,  -486,  -386,  -389,  -390,  -391,  -392,  -484,  -374,  -376,
  -380,  -167,  -254,  -486,  -486,   -23,  -170,   -24,  -171,   -50,
   -25,  -172,   -52,  -173,  -486,  -486,  -486,  -271,  -208,  -486,
  -485,  -228,  -486,  -485,  -486,  -218,  -219,  -484,  -484,  -475,
  -486,  -486,  -236,  -486,  -485,  -248,  -332,  -344,  -345,   -70,
  -278,    -2,  -484,  -360,  -316,  -486,  -486,  -358,  -475,  -486,
  -313,  -486,  -486,  -484,  -484,  -290,  -292,  -486,  -484,  -349,
  -486,  -486,  -319,  -320,  -322,  -486,  -270,  -271,  -296,  -421,
  -486,  -299,  -486,  -452,  -452,  -452,  -486,  -443,  -441,  -484,
  -454,  -486,  -255,   -22,  -169,  -486,  -334,  -225,  -486,  -227,
   -46,  -486,  -485,  -233,  -486,  -485,  -486,  -242,  -359,  -484,
   -77,  -486,  -486,   -84,  -357,  -214,  -282,  -486,  -283,  -486,
  -486,  -486,  -484,  -294,  -452,  -269,  -297,  -423,  -486,  -426,
  -427,  -429,  -486,  -388,  -485,  -220,  -232,  -486,  -485,  -238,
  -486,  -485,  -353,  -484,  -486,  -486,   -83,  -484,  -286,  -289,
  -348,  -346,  -350,  -351,  -484,  -318,  -452,  -300,  -229,  -486,
  -485,  -234,  -486,  -237,  -352,  -486,  -464,  -465,  -468,   -82,
  -484,  -486,  -425,  -485,  -239,  -486,  -485,   -78,  -314,  -295,
  -235,  -486,  -240,  -485,  -241 ]

clist = [
'207,294,198,319,238,238,238,320,403,407,299,305,301,523,499,315,239',
'239,239,317,288,289,290,279,279,258,262,466,254,261,263,606,547,515',
'519,238,238,295,101,352,267,307,307,107,186,307,206,297,463,390,397',
'759,97,370,279,279,537,115,115,647,243,243,243,612,661,665,614,458,461',
'678,237,250,251,308,309,282,675,312,112,112,265,673,12,375,353,606,561',
'307,307,307,307,381,571,787,556,101,310,240,240,240,763,2,311,504,507',
'339,342,512,764,313,514,672,12,359,361,475,476,368,854,377,378,379,380',
'269,541,185,98,306,751,302,449,268,670,12,851,651,112,755,356,357,303',
'363,570,354,382,366,702,707,692,299,112,400,783,469,628,1,,,115,370',
',,,,,,,,,,,391,238,399,238,,,413,,112,12,414,415,,291,,297,,12,,207',
'423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439',
'440,441,442,443,444,445,446,447,448,389,395,398,762,,666,412,238,787',
'238,,,,,403,407,,,,,238,238,,,,,675,,,238,,,468,239,,,,,,112,,239,683',
',,279,878,393,393,411,,,12,12,,,497,,,479,258,,262,,484,509,,,,,12,387',
'388,,,546,243,243,307,307,,553,709,,639,243,465,470,600,268,,,606,639',
'678,477,483,823,,265,,615,,606,265,,,,545,,520,521,,467,240,,,,,,,,240',
'559,,612,614,,,,101,12,,,,,12,,639,,,,,652,522,,,,,,268,,,,,268,,542',
'299,238,597,,719,789,,852,,722,,,,,,,,,739,,768,,,,,238,,413,598,399',
'585,591,,602,590,,,297,453,,319,,606,,320,489,,,576,12,,,630,624,,,317',
',238,737,738,238,115,502,238,503,,299,,636,,,,,,,,606,622,,,295,,112',
',611,,,613,,,,238,,674,,677,,,643,644,645,,,297,809,,238,646,,,,238',
'13,411,238,686,,238,553,,299,691,685,,,,,,,199,199,238,,626,199,199',
'199,,,,,,13,273,273,238,853,,,279,,,307,,,700,,297,,,,,,13,199,199,847',
',199,199,,,199,,337,337,,,,662,662,12,12,411,687,711,238,864,,716,718',
',411,,,721,,,723,393,631,632,602,688,689,728,,238,693,,13,238,,,199',
'199,199,199,13,,,12,,,669,12,,238,,,12,238,617,618,411,715,717,,,740',
'658,720,,,660,,,12,,668,,608,112,12,,,,,,,784,758,785,780,,591,,,,,553',
',,,,,657,238,,,,307,,639,528,530,531,,,,,,,,,,,,,13,13,199,199,199,199',
'238,12,199,199,199,,,,770,,,,13,,238,794,12,805,,,729,701,,,,716,718',
'721,,,,,824,238,,734,,,,,,779,238,,238,,,,,,12,,,,,,,,832,,,793,199',
'199,,307,,279,238,754,,199,,13,,,,273,13,,,,,,,,,,,856,12,,,731,,,794',
'817,803,834,,,,,,238,,238,12,,,,,860,,742,,199,199,299,,865,238,,662',
',,791,10,,,,,,,802,,,238,,,238,,,238,,,199,,13,,,,12,782,35,297,,10',
',238,,199,238,12,12,411,,,12,,,808,,,,238,,,10,,,238,819,820,35,272',
'272,822,,12,,,,,,,,,,,801,,,,,35,,,,12,,695,697,698,,,341,341,341,815',
'797,,,799,199,10,,,842,,,,,10,807,411,,,,,,,,,,,,12,14,,,,35,,12,,,',
',,35,,,,,,870,,,,,,,871,,,,199,14,275,275,13,13,,,,,,,,,199,836,,,839',
',,,14,,,,,199,,,,,,338,338,,,10,10,,,,,,13,,,858,13,,,861,,13,863,10',
',772,773,,,774,680,,35,35,,,199,14,13,,199,874,,,13,14,,,,,35,,,,880',
',,882,,,,,,,884,,,,,,,,,,,,,,,,199,199,,,10,,199,,,10,,,,,,,,13,,,,',
',,,,,,,,,35,13,,,272,35,,199,,,,,,,,14,14,,,,,,,,829,830,831,,,,,,,14',
',13,,,,,,,,,,,,,,10,,,,,,,,,199,,,,,,,855,,,,,,,,,,13,35,,,,,,,,,,296',
'304,,,,,,13,14,,,872,275,14,199,,,,,358,,360,360,364,367,360,,,,,,,',
',,,,,,,,,,,,,,,,,,,13,,,,811,,,,,199,,13,13,,,,13,,,,,,,,,,,,,,,,14',
',,,,13,,,,,,,10,10,,,,,,,,,,,,13,,,,,,,,,,,,,,35,35,,,,,,,,,,,,10,,',
'296,10,,,199,,10,,13,,,,,,,13,,,,,,,,10,35,,,,35,10,,,,35,,,,,,,,,341',
',,,,,,,35,,,,,,35,,,,,,,464,,,,472,472,,,,,,,,,,14,14,,,10,,,,,,,,,',
',,,,,10,,,,,,,,,,,,35,,,,,,,,,14,,,,14,,35,26,,14,,,,10,,,,,338,,,,',
',26,26,14,,,26,26,26,14,,,,,26,,,35,,,,,,,,706,,,,,10,,,,,26,26,26,',
',26,26,,,26,,,,10,,,,,,,,,35,,,,,14,,,,,,,,586,,,,,35,,14,,,,,26,,,296',
'26,26,26,26,26,,,10,,,,814,,,,,,,10,10,392,396,,10,,14,,,,,472,,,,35',
',,,810,586,,,586,472,10,35,35,,,,35,,,,,,,,,,,,,,10,14,296,,,,,35,,455',
',456,,,,,648,653,,14,,26,26,26,26,26,26,35,,26,26,26,,,,,,,10,26,,,',
',,10,,,,,,,,,,,296,,,,,,,,14,35,,,813,,,,35,,,14,14,,,,14,,,,,,,,,26',
'26,,,,,,,,26,,26,14,,,,26,,,,,,,,,,,,,,,,14,,,,,,,,,,,,,,,,,,,,,,,26',
'26,,,,,,,,,,,586,,,14,,581,,,753,,14,,757,,,,,,26,648,26,648,,,,,,,',
',,,,26,,,,,,,,,,,,,,,,,,,,,,,,,,,,,604,,,607,,,610,,,,,,,,,,,,,,623',
',,,,,,,,,,,,,26,,586,586,,,,,,,,,,,,650,,,,,656,,,607,,,656,,,,,,,,',
',,,,,392,,,,,,,,,,,,,26,,,,26,26,,,,,,,,,26,,,,,,,,,,,,,26,,,,,,,648',
',,,,,,,712,,26,,,,26,,,,,26,,296,,,,,,,,730,,,,733,26,,26,,26,,,,26',
',,,,,648,604,,,,744,,,,,,,,,,,,,,,,,,,,,,,,,26,26,,,,,26,,,,,,,,,,,26',
',,,769,,,,,,,,,,,26,,,,,,26,,,,,,,,,,,788,,,,,,,,,,,,,,792,,,26,,,,',
',,,,,,,,,,,607,,,,,,,26,,,,607,,,,,,,,,,,,,26,,,,,,,,,,,656,,,,,,,26',
',,,,,,26,,,,,,,,,,,,,,,,,,,,,,,838,,841,,,,,,,,,,,,,26,,850,,,,,,,26',
',26,26,,,,26,,604,,,607,,,,,,,,,,,,,,,,26,,,873,,,876,,,,,,,,,,,,,607',
'26,,,,,883,,,,,,,,,,,,,,,,,,,,,,,,,,,,,26,,,,26,,,,,,,26' ]
        racc_goto_table = arr = Array.new(2307, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'25,3,24,89,25,25,25,91,30,30,51,51,20,73,4,74,26,26,26,87,25,25,25,48',
'48,52,52,29,31,31,31,119,77,70,70,25,25,24,76,43,36,24,24,12,12,24,16',
'26,32,22,22,71,8,43,48,48,41,46,46,5,55,55,55,53,72,72,53,30,30,92,28',
'28,28,14,14,39,115,14,44,44,35,88,18,10,78,119,108,24,24,24,24,10,108',
'116,79,76,80,49,49,49,81,2,82,50,50,42,42,50,83,8,50,84,18,105,105,33',
'33,105,85,14,14,14,14,38,75,13,11,68,6,49,94,2,96,18,97,98,44,99,103',
'104,67,106,107,66,12,109,110,111,113,51,44,20,114,57,56,1,,,46,43,,',
',,,,,,,,,25,25,25,25,,,25,,44,18,24,24,,47,,26,,18,,25,25,25,25,25,25',
'25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,16,16',
'16,5,,73,16,25,116,25,,,,,30,30,,,,,25,25,,,,,115,,,25,,,26,26,,,,,',
'44,,26,41,,,48,71,49,49,44,,,18,18,,,25,,,36,52,,52,,36,25,,,,,18,2',
'2,,,3,55,55,24,24,,91,108,,30,55,28,28,33,2,,,119,30,92,28,39,72,,35',
',33,,119,35,,,,24,,14,14,,49,49,,,,,,,,49,24,,53,53,,,,76,18,,,,,18',
',30,,,,,22,8,,,,,,2,,,,,2,,76,51,25,20,,32,77,,5,,32,,,,,,,,,29,,70',
',,,,25,,25,25,25,31,52,,51,31,,,26,54,,89,,119,,91,47,,,12,18,,,74,51',
',,87,,25,30,30,25,46,47,25,47,,51,,20,,,,,,,,119,25,,,24,,44,,31,,,31',
',,,25,,89,,89,,,25,25,25,,,26,70,,25,24,,,,25,19,44,25,3,,25,91,,51',
'3,20,,,,,,,19,19,25,,55,19,19,19,,,,,,19,19,19,25,73,,,48,,,24,,,43',
',26,,,,,,19,19,19,70,,19,19,,,19,,19,19,,,,76,76,18,18,44,14,25,25,4',
',25,25,,44,,,25,,,25,49,2,2,51,76,76,25,,25,76,,19,25,,,19,19,19,19',
'19,,,18,,,49,18,,25,,,18,25,47,47,44,16,16,,,26,2,16,,,2,,,18,,2,,54',
'44,18,,,,,,,89,25,89,3,,52,,,,,91,,,,,,47,25,,,,24,,30,90,90,90,,,,',
',,,,,,,,19,19,19,19,19,19,25,18,19,19,19,,,,14,,,,19,,25,25,18,51,,',
'2,47,,,,25,25,25,,,,,89,25,,2,,,,,,76,25,,25,,,,,,18,,,,,,,,3,,,16,19',
'19,,24,,48,25,2,,19,,19,,,,19,19,,,,,,,,,,,89,18,,,54,,,25,14,55,25',
',,,,,25,,25,18,,,,,51,,54,,19,19,51,,20,25,,76,,,2,15,,,,,,,49,,,25',
',,25,,,25,,,19,,19,,,,18,47,40,26,,15,,25,,19,25,18,18,44,,,18,,,2,',
',,25,,,15,,,25,2,2,40,40,40,2,,18,,,,,,,,,,,47,,,,,40,,,,18,,90,90,90',
',,40,40,40,47,54,,,54,19,15,,,2,,,,,15,54,44,,,,,,,,,,,,18,21,,,,40',
',18,,,,,,40,,,,,,2,,,,,,,2,,,,19,21,21,21,19,19,,,,,,,,,19,54,,,54,',
',,21,,,,,19,,,,,,21,21,,,15,15,,,,,,19,,,54,19,,,54,,19,54,15,,90,90',
',,90,19,,40,40,,,19,21,19,,19,54,,,19,21,,,,,40,,,,54,,,54,,,,,,,54',
',,,,,,,,,,,,,,,19,19,,,15,,19,,,15,,,,,,,,19,,,,,,,,,,,,,,40,19,,,40',
'40,,19,,,,,,,,21,21,,,,,,,,90,90,90,,,,,,,21,,19,,,,,,,,,,,,,,15,,,',
',,,,,19,,,,,,,90,,,,,,,,,,19,40,,,,,,,,,,9,9,,,,,,19,21,,,90,21,21,19',
',,,,9,,9,9,9,9,9,,,,,,,,,,,,,,,,,,,,,,,,,,,19,,,,19,,,,,19,,19,19,,',
',19,,,,,,,,,,,,,,,,21,,,,,19,,,,,,,15,15,,,,,,,,,,,,19,,,,,,,,,,,,,',
'40,40,,,,,,,,,,,,15,,,9,15,,,19,,15,,19,,,,,,,19,,,,,,,,15,40,,,,40',
'15,,,,40,,,,,,,,,40,,,,,,,,40,,,,,,40,,,,,,,9,,,,9,9,,,,,,,,,,21,21',
',,15,,,,,,,,,,,,,,,15,,,,,,,,,,,,40,,,,,,,,,21,,,,21,,40,34,,21,,,,15',
',,,,21,,,,,,34,34,21,,,34,34,34,21,,,,,34,,,40,,,,,,,,21,,,,,15,,,,',
'34,34,34,,,34,34,,,34,,,,15,,,,,,,,,40,,,,,21,,,,,,,,9,,,,,40,,21,,',
',,34,,,9,34,34,34,34,34,,,15,,,,15,,,,,,,15,15,23,23,,15,,21,,,,,9,',
',,40,,,,40,9,,,9,9,15,40,40,,,,40,,,,,,,,,,,,,,15,21,9,,,,,40,,23,,23',
',,,,9,9,,21,,34,34,34,34,34,34,40,,34,34,34,,,,,,,15,34,,,,,,15,,,,',
',,,,,,9,,,,,,,,21,40,,,21,,,,40,,,21,21,,,,21,,,,,,,,,34,34,,,,,,,,34',
',34,21,,,,34,,,,,,,,,,,,,,,,21,,,,,,,,,,,,,,,,,,,,,,,34,34,,,,,,,,,',
',9,,,21,,23,,,9,,21,,9,,,,,,34,9,34,9,,,,,,,,,,,,34,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,23,,,23,,,23,,,,,,,,,,,,,,23,,,,,,,,,,,,,,34,,9,9,,,,,,',
',,,,,23,,,,,23,,,23,,,23,,,,,,,,,,,,,,23,,,,,,,,,,,,,34,,,,34,34,,,',
',,,,,34,,,,,,,,,,,,,34,,,,,,,9,,,,,,,,23,,34,,,,34,,,,,34,,9,,,,,,,',
'23,,,,23,34,,34,,34,,,,34,,,,,,9,23,,,,23,,,,,,,,,,,,,,,,,,,,,,,,,34',
'34,,,,,34,,,,,,,,,,,34,,,,23,,,,,,,,,,,34,,,,,,34,,,,,,,,,,,23,,,,,',
',,,,,,,,23,,,34,,,,,,,,,,,,,,,,23,,,,,,,34,,,,23,,,,,,,,,,,,,34,,,,',
',,,,,,23,,,,,,,34,,,,,,,34,,,,,,,,,,,,,,,,,,,,,,,23,,23,,,,,,,,,,,,',
'34,,23,,,,,,,34,,34,34,,,,34,,23,,,23,,,,,,,,,,,,,,,,34,,,23,,,23,,',
',,,,,,,,,,23,34,,,,,23,,,,,,,,,,,,,,,,,,,,,,,,,,,,,34,,,,34,,,,,,,34' ]
        racc_goto_check = arr = Array.new(2307, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_goto_pointer = [
   nil,   155,   101,   -50,  -279,  -440,  -519,   nil,    49,  1135,
   -15,   123,    37,   118,    17,   809,    28,   nil,    82,   488,
   -41,   930,  -140,  1385,   -15,   -18,    -6,   nil,    48,  -228,
  -185,     2,  -206,  -144,  1452,    50,    10,   nil,    92,    43,
   836,  -279,    43,   -25,    72,   nil,    51,   143,    -8,    75,
  -195,   -43,    -1,  -395,   172,    38,  -317,  -103,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    79,    86,    72,   nil,
  -275,  -607,  -456,  -300,   -46,  -215,    35,  -320,    20,  -259,
    38,  -561,    43,  -557,  -415,  -705,   nil,   -42,  -446,   -58,
   343,   -54,  -460,   nil,  -105,   nil,  -393,  -688,  -365,  -514,
   nil,   nil,   nil,    68,    67,    39,    65,  -221,  -271,    68,
  -417,  -417,   nil,  -400,  -542,  -451,  -603,   nil,   nil,  -423 ]

racc_goto_default = [
   nil,   nil,   293,   nil,   nil,   760,   nil,     3,   nil,     4,
     5,   314,   nil,   nil,   nil,   203,    16,    11,   204,   287,
   nil,   202,   nil,   245,    15,    19,    20,    21,   nil,    25,
   642,   nil,   nil,   nil,   278,    29,   nil,    31,    34,    33,
   200,   336,   nil,   114,   405,   113,    68,   nil,    42,   298,
   nil,   241,   587,   588,   450,   603,   nil,   nil,   256,   452,
    43,    44,    45,    46,    47,    48,    49,   nil,   257,    55,
   nil,   nil,   nil,   nil,   nil,   nil,   516,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   316,   550,   318,   552,
   nil,   676,   321,   236,   nil,   409,   nil,   nil,   nil,   nil,
    67,    69,    70,    71,   nil,   nil,   nil,   nil,   566,   nil,
   nil,   nil,   369,   549,   551,   327,   555,   330,   333,   249 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 135, :_reduce_1,
  4, 137, :_reduce_2,
  2, 136, :_reduce_3,
  1, 141, :_reduce_4,
  1, 141, :_reduce_5,
  3, 141, :_reduce_6,
  3, 144, :_reduce_none,
  3, 144, :_reduce_none,
  3, 144, :_reduce_none,
  3, 144, :_reduce_none,
  2, 144, :_reduce_none,
  3, 144, :_reduce_12,
  3, 144, :_reduce_13,
  3, 144, :_reduce_none,
  3, 144, :_reduce_none,
  3, 144, :_reduce_none,
  4, 144, :_reduce_none,
  4, 144, :_reduce_none,
  3, 144, :_reduce_19,
  3, 144, :_reduce_20,
  3, 144, :_reduce_21,
  6, 144, :_reduce_none,
  5, 144, :_reduce_none,
  5, 144, :_reduce_none,
  5, 144, :_reduce_none,
  3, 144, :_reduce_none,
  3, 144, :_reduce_none,
  3, 144, :_reduce_28,
  3, 144, :_reduce_29,
  1, 144, :_reduce_none,
  1, 158, :_reduce_none,
  3, 158, :_reduce_32,
  3, 158, :_reduce_33,
  2, 158, :_reduce_34,
  2, 158, :_reduce_35,
  1, 158, :_reduce_none,
  1, 148, :_reduce_none,
  1, 150, :_reduce_none,
  1, 150, :_reduce_none,
  2, 150, :_reduce_40,
  2, 150, :_reduce_41,
  2, 150, :_reduce_42,
  1, 161, :_reduce_none,
  4, 161, :_reduce_none,
  4, 161, :_reduce_none,
  4, 166, :_reduce_none,
  2, 160, :_reduce_47,
  3, 160, :_reduce_none,
  4, 160, :_reduce_49,
  5, 160, :_reduce_none,
  4, 160, :_reduce_51,
  5, 160, :_reduce_none,
  2, 160, :_reduce_53,
  2, 160, :_reduce_54,
  1, 151, :_reduce_55,
  3, 151, :_reduce_56,
  1, 170, :_reduce_57,
  3, 170, :_reduce_58,
  1, 169, :_reduce_59,
  2, 169, :_reduce_60,
  3, 169, :_reduce_none,
  2, 169, :_reduce_none,
  2, 169, :_reduce_none,
  1, 169, :_reduce_none,
  1, 172, :_reduce_65,
  3, 172, :_reduce_66,
  2, 171, :_reduce_67,
  3, 171, :_reduce_68,
  1, 173, :_reduce_none,
  4, 173, :_reduce_none,
  3, 173, :_reduce_none,
  3, 173, :_reduce_none,
  3, 173, :_reduce_none,
  3, 173, :_reduce_none,
  2, 173, :_reduce_none,
  1, 173, :_reduce_none,
  1, 149, :_reduce_none,
  4, 149, :_reduce_78,
  3, 149, :_reduce_79,
  3, 149, :_reduce_none,
  3, 149, :_reduce_none,
  3, 149, :_reduce_none,
  2, 149, :_reduce_none,
  1, 149, :_reduce_none,
  1, 175, :_reduce_none,
  2, 176, :_reduce_86,
  1, 176, :_reduce_87,
  3, 176, :_reduce_88,
  1, 177, :_reduce_none,
  1, 177, :_reduce_none,
  1, 177, :_reduce_none,
  1, 177, :_reduce_none,
  1, 177, :_reduce_none,
  1, 146, :_reduce_none,
  1, 146, :_reduce_none,
  1, 147, :_reduce_none,
  3, 147, :_reduce_none,
  1, 178, :_reduce_none,
  1, 178, :_reduce_none,
  1, 178, :_reduce_none,
  1, 178, :_reduce_none,
  1, 178, :_reduce_none,
  1, 178, :_reduce_none,
  1, 178, :_reduce_none,
  1, 178, :_reduce_none,
  1, 178, :_reduce_none,
  1, 178, :_reduce_none,
  1, 178, :_reduce_none,
  1, 178, :_reduce_none,
  1, 178, :_reduce_none,
  1, 178, :_reduce_none,
  1, 178, :_reduce_none,
  1, 178, :_reduce_none,
  1, 178, :_reduce_none,
  1, 178, :_reduce_none,
  1, 178, :_reduce_none,
  1, 178, :_reduce_none,
  1, 178, :_reduce_none,
  1, 178, :_reduce_none,
  1, 178, :_reduce_none,
  1, 178, :_reduce_none,
  1, 178, :_reduce_none,
  1, 178, :_reduce_none,
  1, 179, :_reduce_none,
  1, 179, :_reduce_none,
  1, 179, :_reduce_none,
  1, 179, :_reduce_none,
  1, 179, :_reduce_none,
  1, 179, :_reduce_none,
  1, 179, :_reduce_none,
  1, 179, :_reduce_none,
  1, 179, :_reduce_none,
  1, 179, :_reduce_none,
  1, 179, :_reduce_none,
  1, 179, :_reduce_none,
  1, 179, :_reduce_none,
  1, 179, :_reduce_none,
  1, 179, :_reduce_none,
  1, 179, :_reduce_none,
  1, 179, :_reduce_none,
  1, 179, :_reduce_none,
  1, 179, :_reduce_none,
  1, 179, :_reduce_none,
  1, 179, :_reduce_none,
  1, 179, :_reduce_none,
  1, 179, :_reduce_none,
  1, 179, :_reduce_none,
  1, 179, :_reduce_none,
  1, 179, :_reduce_none,
  1, 179, :_reduce_none,
  1, 179, :_reduce_none,
  1, 179, :_reduce_none,
  1, 179, :_reduce_none,
  1, 179, :_reduce_none,
  1, 179, :_reduce_none,
  1, 179, :_reduce_none,
  1, 179, :_reduce_none,
  1, 179, :_reduce_none,
  1, 179, :_reduce_none,
  1, 179, :_reduce_none,
  1, 179, :_reduce_none,
  1, 179, :_reduce_none,
  1, 179, :_reduce_none,
  1, 179, :_reduce_none,
  1, 179, :_reduce_none,
  3, 159, :_reduce_166,
  5, 159, :_reduce_none,
  3, 159, :_reduce_168,
  6, 159, :_reduce_none,
  5, 159, :_reduce_none,
  5, 159, :_reduce_none,
  5, 159, :_reduce_none,
  5, 159, :_reduce_none,
  4, 159, :_reduce_none,
  3, 159, :_reduce_none,
  3, 159, :_reduce_176,
  3, 159, :_reduce_177,
  3, 159, :_reduce_178,
  3, 159, :_reduce_179,
  3, 159, :_reduce_180,
  3, 159, :_reduce_181,
  3, 159, :_reduce_182,
  3, 159, :_reduce_183,
  4, 159, :_reduce_none,
  4, 159, :_reduce_none,
  2, 159, :_reduce_186,
  2, 159, :_reduce_187,
  3, 159, :_reduce_188,
  3, 159, :_reduce_189,
  3, 159, :_reduce_190,
  3, 159, :_reduce_191,
  3, 159, :_reduce_192,
  3, 159, :_reduce_193,
  3, 159, :_reduce_194,
  3, 159, :_reduce_195,
  3, 159, :_reduce_196,
  3, 159, :_reduce_197,
  3, 159, :_reduce_198,
  3, 159, :_reduce_199,
  3, 159, :_reduce_200,
  2, 159, :_reduce_201,
  2, 159, :_reduce_202,
  3, 159, :_reduce_203,
  3, 159, :_reduce_204,
  3, 159, :_reduce_205,
  3, 159, :_reduce_206,
  3, 159, :_reduce_none,
  5, 159, :_reduce_208,
  1, 159, :_reduce_none,
  1, 157, :_reduce_none,
  1, 154, :_reduce_211,
  2, 154, :_reduce_none,
  2, 154, :_reduce_213,
  5, 154, :_reduce_214,
  2, 154, :_reduce_215,
  3, 154, :_reduce_216,
  3, 186, :_reduce_217,
  4, 186, :_reduce_218,
  4, 186, :_reduce_none,
  6, 186, :_reduce_none,
  1, 187, :_reduce_221,
  1, 187, :_reduce_none,
  1, 162, :_reduce_223,
  2, 162, :_reduce_224,
  5, 162, :_reduce_225,
  2, 162, :_reduce_226,
  5, 162, :_reduce_227,
  4, 162, :_reduce_228,
  7, 162, :_reduce_229,
  3, 162, :_reduce_230,
  1, 162, :_reduce_231,
  4, 190, :_reduce_none,
  3, 190, :_reduce_none,
  5, 190, :_reduce_none,
  7, 190, :_reduce_none,
  2, 190, :_reduce_none,
  5, 190, :_reduce_none,
  4, 190, :_reduce_none,
  6, 190, :_reduce_none,
  7, 190, :_reduce_none,
  9, 190, :_reduce_none,
  3, 190, :_reduce_none,
  1, 190, :_reduce_none,
  0, 192, :_reduce_244,
  2, 165, :_reduce_245,
  1, 191, :_reduce_none,
  2, 191, :_reduce_247,
  3, 191, :_reduce_248,
  2, 189, :_reduce_249,
  2, 188, :_reduce_250,
  1, 188, :_reduce_251,
  1, 183, :_reduce_252,
  3, 183, :_reduce_253,
  3, 156, :_reduce_none,
  4, 156, :_reduce_none,
  2, 156, :_reduce_none,
  1, 182, :_reduce_none,
  1, 182, :_reduce_none,
  1, 182, :_reduce_none,
  1, 182, :_reduce_none,
  1, 182, :_reduce_none,
  1, 182, :_reduce_none,
  1, 182, :_reduce_none,
  1, 182, :_reduce_none,
  1, 182, :_reduce_none,
  3, 182, :_reduce_266,
  4, 182, :_reduce_none,
  3, 182, :_reduce_268,
  3, 182, :_reduce_269,
  2, 182, :_reduce_270,
  4, 182, :_reduce_271,
  3, 182, :_reduce_272,
  3, 182, :_reduce_273,
  1, 182, :_reduce_274,
  4, 182, :_reduce_275,
  3, 182, :_reduce_276,
  1, 182, :_reduce_277,
  5, 182, :_reduce_none,
  2, 182, :_reduce_279,
  1, 182, :_reduce_none,
  2, 182, :_reduce_281,
  6, 182, :_reduce_282,
  6, 182, :_reduce_283,
  0, 214, :_reduce_284,
  0, 215, :_reduce_285,
  7, 182, :_reduce_286,
  0, 216, :_reduce_287,
  0, 217, :_reduce_288,
  7, 182, :_reduce_289,
  5, 182, :_reduce_290,
  4, 182, :_reduce_291,
  5, 182, :_reduce_none,
  0, 218, :_reduce_293,
  0, 219, :_reduce_294,
  9, 182, :_reduce_none,
  5, 182, :_reduce_296,
  6, 182, :_reduce_297,
  4, 182, :_reduce_298,
  5, 182, :_reduce_299,
  7, 182, :_reduce_300,
  1, 182, :_reduce_301,
  1, 182, :_reduce_302,
  1, 182, :_reduce_none,
  1, 182, :_reduce_none,
  1, 153, :_reduce_none,
  1, 204, :_reduce_none,
  1, 204, :_reduce_none,
  1, 204, :_reduce_none,
  2, 204, :_reduce_none,
  1, 206, :_reduce_none,
  1, 206, :_reduce_none,
  1, 206, :_reduce_none,
  1, 205, :_reduce_313,
  5, 205, :_reduce_314,
  1, 139, :_reduce_315,
  2, 139, :_reduce_316,
  1, 208, :_reduce_317,
  6, 220, :_reduce_318,
  4, 220, :_reduce_319,
  4, 220, :_reduce_320,
  2, 220, :_reduce_321,
  4, 220, :_reduce_322,
  2, 220, :_reduce_323,
  2, 220, :_reduce_324,
  1, 220, :_reduce_325,
  1, 222, :_reduce_326,
  3, 222, :_reduce_327,
  3, 226, :_reduce_328,
  1, 167, :_reduce_329,
  2, 167, :_reduce_330,
  1, 167, :_reduce_331,
  3, 167, :_reduce_332,
  0, 228, :_reduce_333,
  5, 227, :_reduce_334,
  2, 163, :_reduce_335,
  4, 163, :_reduce_none,
  4, 163, :_reduce_none,
  2, 203, :_reduce_338,
  4, 203, :_reduce_339,
  4, 203, :_reduce_none,
  3, 203, :_reduce_none,
  2, 203, :_reduce_342,
  1, 203, :_reduce_343,
  4, 202, :_reduce_344,
  4, 202, :_reduce_345,
  5, 207, :_reduce_346,
  1, 230, :_reduce_347,
  4, 230, :_reduce_348,
  2, 230, :_reduce_349,
  1, 231, :_reduce_none,
  1, 231, :_reduce_none,
  6, 138, :_reduce_352,
  0, 138, :_reduce_353,
  1, 232, :_reduce_none,
  1, 232, :_reduce_none,
  1, 232, :_reduce_none,
  2, 233, :_reduce_357,
  1, 233, :_reduce_358,
  2, 140, :_reduce_none,
  1, 140, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 195, :_reduce_none,
  1, 236, :_reduce_none,
  2, 236, :_reduce_none,
  3, 237, :_reduce_367,
  1, 237, :_reduce_none,
  3, 196, :_reduce_369,
  3, 197, :_reduce_370,
  3, 198, :_reduce_371,
  3, 198, :_reduce_372,
  1, 240, :_reduce_373,
  3, 240, :_reduce_374,
  1, 241, :_reduce_375,
  2, 241, :_reduce_376,
  3, 199, :_reduce_377,
  3, 199, :_reduce_378,
  1, 243, :_reduce_379,
  3, 243, :_reduce_380,
  1, 238, :_reduce_381,
  2, 238, :_reduce_382,
  1, 239, :_reduce_383,
  2, 239, :_reduce_384,
  1, 242, :_reduce_385,
  2, 242, :_reduce_386,
  0, 245, :_reduce_387,
  4, 242, :_reduce_388,
  1, 244, :_reduce_none,
  1, 244, :_reduce_none,
  1, 244, :_reduce_none,
  1, 244, :_reduce_none,
  2, 180, :_reduce_393,
  1, 180, :_reduce_none,
  1, 246, :_reduce_none,
  1, 246, :_reduce_none,
  1, 246, :_reduce_none,
  1, 246, :_reduce_none,
  3, 235, :_reduce_399,
  1, 234, :_reduce_400,
  1, 234, :_reduce_401,
  2, 234, :_reduce_none,
  2, 234, :_reduce_none,
  1, 174, :_reduce_404,
  1, 174, :_reduce_405,
  1, 174, :_reduce_406,
  1, 174, :_reduce_407,
  1, 174, :_reduce_408,
  1, 174, :_reduce_409,
  1, 174, :_reduce_410,
  1, 174, :_reduce_411,
  1, 174, :_reduce_412,
  1, 174, :_reduce_413,
  1, 174, :_reduce_414,
  1, 174, :_reduce_415,
  1, 200, :_reduce_none,
  1, 152, :_reduce_none,
  1, 155, :_reduce_none,
  1, 155, :_reduce_none,
  1, 209, :_reduce_420,
  3, 209, :_reduce_421,
  2, 209, :_reduce_422,
  4, 211, :_reduce_423,
  2, 211, :_reduce_424,
  6, 247, :_reduce_425,
  4, 247, :_reduce_426,
  4, 247, :_reduce_427,
  2, 247, :_reduce_428,
  4, 247, :_reduce_429,
  2, 247, :_reduce_430,
  2, 247, :_reduce_431,
  1, 247, :_reduce_432,
  0, 247, :_reduce_433,
  1, 249, :_reduce_434,
  1, 249, :_reduce_435,
  1, 249, :_reduce_436,
  1, 249, :_reduce_437,
  1, 249, :_reduce_none,
  1, 221, :_reduce_439,
  3, 221, :_reduce_440,
  3, 250, :_reduce_441,
  1, 248, :_reduce_442,
  3, 248, :_reduce_443,
  1, 251, :_reduce_none,
  1, 251, :_reduce_none,
  2, 223, :_reduce_446,
  1, 223, :_reduce_447,
  1, 252, :_reduce_none,
  1, 252, :_reduce_none,
  2, 225, :_reduce_450,
  2, 224, :_reduce_451,
  0, 224, :_reduce_452,
  1, 212, :_reduce_453,
  4, 212, :_reduce_454,
  1, 201, :_reduce_455,
  2, 201, :_reduce_456,
  2, 201, :_reduce_457,
  1, 185, :_reduce_458,
  3, 185, :_reduce_459,
  3, 253, :_reduce_460,
  1, 168, :_reduce_none,
  1, 168, :_reduce_none,
  1, 168, :_reduce_none,
  1, 164, :_reduce_none,
  1, 164, :_reduce_none,
  1, 164, :_reduce_none,
  1, 164, :_reduce_none,
  1, 229, :_reduce_none,
  1, 229, :_reduce_none,
  1, 229, :_reduce_none,
  1, 213, :_reduce_none,
  1, 213, :_reduce_none,
  0, 142, :_reduce_none,
  1, 142, :_reduce_none,
  0, 181, :_reduce_none,
  1, 181, :_reduce_none,
  0, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 210, :_reduce_none,
  1, 210, :_reduce_none,
  1, 145, :_reduce_none,
  2, 145, :_reduce_none,
  0, 143, :_reduce_none,
  0, 193, :_reduce_none ]

racc_reduce_n = 486

racc_shift_n = 885

racc_token_table = {
  false => 0,
  :error => 1,
  :CLASS => 2,
  :MODULE => 3,
  :DEF => 4,
  :UNDEF => 5,
  :BEGIN => 6,
  :RESCUE => 7,
  :ENSURE => 8,
  :END => 9,
  :IF => 10,
  :UNLESS => 11,
  :THEN => 12,
  :ELSIF => 13,
  :ELSE => 14,
  :CASE => 15,
  :WHEN => 16,
  :WHILE => 17,
  :UNTIL => 18,
  :FOR => 19,
  :BREAK => 20,
  :NEXT => 21,
  :REDO => 22,
  :RETRY => 23,
  :IN => 24,
  :DO => 25,
  :DO_COND => 26,
  :DO_BLOCK => 27,
  :RETURN => 28,
  :YIELD => 29,
  :SUPER => 30,
  :SELF => 31,
  :NIL => 32,
  :TRUE => 33,
  :FALSE => 34,
  :AND => 35,
  :OR => 36,
  :NOT => 37,
  :IF_MOD => 38,
  :UNLESS_MOD => 39,
  :WHILE_MOD => 40,
  :UNTIL_MOD => 41,
  :RESCUE_MOD => 42,
  :ALIAS => 43,
  :DEFINED => 44,
  :klBEGIN => 45,
  :klEND => 46,
  :LINE => 47,
  :FILE => 48,
  :IDENTIFIER => 49,
  :FID => 50,
  :GVAR => 51,
  :IVAR => 52,
  :CONSTANT => 53,
  :CVAR => 54,
  :NTH_REF => 55,
  :BACK_REF => 56,
  :STRING_CONTENT => 57,
  :INTEGER => 58,
  :FLOAT => 59,
  :REGEXP_END => 60,
  "+@" => 61,
  "-@" => 62,
  "-@NUM" => 63,
  "**" => 64,
  "<=>" => 65,
  "==" => 66,
  "===" => 67,
  "!=" => 68,
  ">=" => 69,
  "<=" => 70,
  "&&" => 71,
  "||" => 72,
  "=~" => 73,
  "!~" => 74,
  "." => 75,
  ".." => 76,
  "..." => 77,
  "[]" => 78,
  "[]=" => 79,
  "<<" => 80,
  ">>" => 81,
  "::" => 82,
  "::@" => 83,
  :OP_ASGN => 84,
  "=>" => 85,
  :PAREN_BEG => 86,
  "(" => 87,
  ")" => 88,
  :tLPAREN_ARG => 89,
  :ARRAY_BEG => 90,
  "]" => 91,
  :tLBRACE => 92,
  :tLBRACE_ARG => 93,
  :SPLAT => 94,
  "*" => 95,
  "&@" => 96,
  "&" => 97,
  "~" => 98,
  "%" => 99,
  "/" => 100,
  "+" => 101,
  "-" => 102,
  "<" => 103,
  ">" => 104,
  "|" => 105,
  "!" => 106,
  "^" => 107,
  "{@" => 108,
  "}" => 109,
  :BACK_REF2 => 110,
  :SYMBOL_BEG => 111,
  :STRING_BEG => 112,
  :XSTRING_BEG => 113,
  :REGEXP_BEG => 114,
  :WORDS_BEG => 115,
  :AWORDS_BEG => 116,
  :STRING_DBEG => 117,
  :STRING_DVAR => 118,
  :STRING_END => 119,
  :STRING => 120,
  :SYMBOL => 121,
  "\\n" => 122,
  "?" => 123,
  ":" => 124,
  "," => 125,
  :SPACE => 126,
  ";" => 127,
  :BLOCK_GIVEN => 128,
  "=" => 129,
  :LOWEST => 130,
  "[@" => 131,
  "[" => 132,
  "{" => 133 }

racc_nt_base = 134

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "CLASS",
  "MODULE",
  "DEF",
  "UNDEF",
  "BEGIN",
  "RESCUE",
  "ENSURE",
  "END",
  "IF",
  "UNLESS",
  "THEN",
  "ELSIF",
  "ELSE",
  "CASE",
  "WHEN",
  "WHILE",
  "UNTIL",
  "FOR",
  "BREAK",
  "NEXT",
  "REDO",
  "RETRY",
  "IN",
  "DO",
  "DO_COND",
  "DO_BLOCK",
  "RETURN",
  "YIELD",
  "SUPER",
  "SELF",
  "NIL",
  "TRUE",
  "FALSE",
  "AND",
  "OR",
  "NOT",
  "IF_MOD",
  "UNLESS_MOD",
  "WHILE_MOD",
  "UNTIL_MOD",
  "RESCUE_MOD",
  "ALIAS",
  "DEFINED",
  "klBEGIN",
  "klEND",
  "LINE",
  "FILE",
  "IDENTIFIER",
  "FID",
  "GVAR",
  "IVAR",
  "CONSTANT",
  "CVAR",
  "NTH_REF",
  "BACK_REF",
  "STRING_CONTENT",
  "INTEGER",
  "FLOAT",
  "REGEXP_END",
  "\"+@\"",
  "\"-@\"",
  "\"-@NUM\"",
  "\"**\"",
  "\"<=>\"",
  "\"==\"",
  "\"===\"",
  "\"!=\"",
  "\">=\"",
  "\"<=\"",
  "\"&&\"",
  "\"||\"",
  "\"=~\"",
  "\"!~\"",
  "\".\"",
  "\"..\"",
  "\"...\"",
  "\"[]\"",
  "\"[]=\"",
  "\"<<\"",
  "\">>\"",
  "\"::\"",
  "\"::@\"",
  "OP_ASGN",
  "\"=>\"",
  "PAREN_BEG",
  "\"(\"",
  "\")\"",
  "tLPAREN_ARG",
  "ARRAY_BEG",
  "\"]\"",
  "tLBRACE",
  "tLBRACE_ARG",
  "SPLAT",
  "\"*\"",
  "\"&@\"",
  "\"&\"",
  "\"~\"",
  "\"%\"",
  "\"/\"",
  "\"+\"",
  "\"-\"",
  "\"<\"",
  "\">\"",
  "\"|\"",
  "\"!\"",
  "\"^\"",
  "\"{@\"",
  "\"}\"",
  "BACK_REF2",
  "SYMBOL_BEG",
  "STRING_BEG",
  "XSTRING_BEG",
  "REGEXP_BEG",
  "WORDS_BEG",
  "AWORDS_BEG",
  "STRING_DBEG",
  "STRING_DVAR",
  "STRING_END",
  "STRING",
  "SYMBOL",
  "\"\\\\n\"",
  "\"?\"",
  "\":\"",
  "\",\"",
  "SPACE",
  "\";\"",
  "BLOCK_GIVEN",
  "\"=\"",
  "LOWEST",
  "\"[@\"",
  "\"[\"",
  "\"{\"",
  "$start",
  "target",
  "compstmt",
  "bodystmt",
  "opt_rescue",
  "opt_else",
  "opt_ensure",
  "stmts",
  "opt_terms",
  "none",
  "stmt",
  "terms",
  "fitem",
  "undef_list",
  "expr_value",
  "lhs",
  "command_call",
  "mlhs",
  "var_lhs",
  "primary_value",
  "aref_args",
  "backref",
  "mrhs",
  "arg_value",
  "expr",
  "arg",
  "command",
  "block_command",
  "call_args",
  "block_call",
  "operation2",
  "command_args",
  "cmd_brace_block",
  "opt_block_var",
  "operation",
  "mlhs_basic",
  "mlhs_entry",
  "mlhs_head",
  "mlhs_item",
  "mlhs_node",
  "variable",
  "cname",
  "cpath",
  "fname",
  "op",
  "reswords",
  "symbol",
  "opt_nl",
  "primary",
  "args",
  "trailer",
  "assocs",
  "paren_args",
  "opt_paren_args",
  "opt_block_arg",
  "block_arg",
  "call_args2",
  "open_args",
  "@1",
  "none_block_pass",
  "literal",
  "strings",
  "xstring",
  "regexp",
  "words",
  "awords",
  "var_ref",
  "assoc_list",
  "brace_block",
  "method_call",
  "then",
  "if_tail",
  "do",
  "case_body",
  "block_var",
  "superclass",
  "term",
  "f_arglist",
  "singleton",
  "dot_or_colon",
  "@2",
  "@3",
  "@4",
  "@5",
  "@6",
  "@7",
  "block_var_args",
  "f_arg",
  "f_block_optarg",
  "f_rest_arg",
  "opt_f_block_arg",
  "f_block_arg",
  "f_block_opt",
  "do_block",
  "@8",
  "operation3",
  "when_args",
  "cases",
  "exc_list",
  "exc_var",
  "numeric",
  "dsym",
  "string",
  "string1",
  "string_contents",
  "xstring_contents",
  "word_list",
  "word",
  "string_content",
  "qword_list",
  "string_dvar",
  "@9",
  "sym",
  "f_args",
  "f_optarg",
  "f_norm_arg",
  "f_opt",
  "restarg_mark",
  "blkarg_mark",
  "assoc" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

def _reduce_1(val, _values, result)
      result = val[0]
    
    result
end

def _reduce_2(val, _values, result)
      result = BodyStatementsNode.new val[0], val[1], val[2], val[3]
    
    result
end

def _reduce_3(val, _values, result)
      result = val[0]
    
    result
end

def _reduce_4(val, _values, result)
      result = StatementsNode.new []
    
    result
end

def _reduce_5(val, _values, result)
      result = StatementsNode.new [val[0]]
    
    result
end

def _reduce_6(val, _values, result)
      val[0] << val[2]
      result = val[0]
    
    result
end

# reduce 7 omitted

# reduce 8 omitted

# reduce 9 omitted

# reduce 10 omitted

# reduce 11 omitted

def _reduce_12(val, _values, result)
      result = IfModNode.new val[1], val[2], val[0]
    
    result
end

def _reduce_13(val, _values, result)
      result = IfModNode.new val[1], val[2], val[0]
    
    result
end

# reduce 14 omitted

# reduce 15 omitted

# reduce 16 omitted

# reduce 17 omitted

# reduce 18 omitted

def _reduce_19(val, _values, result)
      result = AssignNode.new val[0], val[2], val[1]
    
    result
end

def _reduce_20(val, _values, result)
      result = MlhsAssignNode.new val[1], val[0], val[2]
    
    result
end

def _reduce_21(val, _values, result)
      result = OpAsgnNode.new val[1], val[0], val[2]
    
    result
end

# reduce 22 omitted

# reduce 23 omitted

# reduce 24 omitted

# reduce 25 omitted

# reduce 26 omitted

# reduce 27 omitted

def _reduce_28(val, _values, result)
      result = MlhsAssignNode.new val[1], val[0], val[2]
    
    result
end

def _reduce_29(val, _values, result)
      result = MlhsAssignNode.new val[1], val[0], val[2]
    
    result
end

# reduce 30 omitted

# reduce 31 omitted

def _reduce_32(val, _values, result)
      result = AndNode.new val[1], val[0], val[2]
    
    result
end

def _reduce_33(val, _values, result)
      result = OrNode.new val[1], val[0], val[2]
    
    result
end

def _reduce_34(val, _values, result)
      result = CallNode.new val[1], {:value => '!', :line => 0}, []
    
    result
end

def _reduce_35(val, _values, result)
      result = CallNode.new val[1], val[0], []
    
    result
end

# reduce 36 omitted

# reduce 37 omitted

# reduce 38 omitted

# reduce 39 omitted

def _reduce_40(val, _values, result)
      result = ReturnNode.new val[0], val[1]
    
    result
end

def _reduce_41(val, _values, result)
      result = BreakNode.new val[0], val[1]
    
    result
end

def _reduce_42(val, _values, result)
      result = NextNode.new val[0], val[1]
    
    result
end

# reduce 43 omitted

# reduce 44 omitted

# reduce 45 omitted

# reduce 46 omitted

def _reduce_47(val, _values, result)
      result = CallNode.new nil, val[0], val[1]
    
    result
end

# reduce 48 omitted

def _reduce_49(val, _values, result)
      result = CallNode.new val[0], val[2], val[3]
    
    result
end

# reduce 50 omitted

def _reduce_51(val, _values, result)
      result = "result = ['call', val[0], val[2], val[3]];"
    
    result
end

# reduce 52 omitted

def _reduce_53(val, _values, result)
      result = SuperNode.new val[0], val[1]
    
    result
end

def _reduce_54(val, _values, result)
      result = YieldNode.new val[0], val[1]
    
    result
end

def _reduce_55(val, _values, result)
      result = val[0]
    
    result
end

def _reduce_56(val, _values, result)
      result = val[1]
    
    result
end

def _reduce_57(val, _values, result)
      result = val[0]
    
    result
end

def _reduce_58(val, _values, result)
      result = val[1]
    
    result
end

def _reduce_59(val, _values, result)
      result = [val[0]]
    
    result
end

def _reduce_60(val, _values, result)
      result = [val[0] << val[1]]
    
    result
end

# reduce 61 omitted

# reduce 62 omitted

# reduce 63 omitted

# reduce 64 omitted

def _reduce_65(val, _values, result)
      result = val[0]
    
    result
end

def _reduce_66(val, _values, result)
      result = val[1]
    
    result
end

def _reduce_67(val, _values, result)
      result = [val[0]]
    
    result
end

def _reduce_68(val, _values, result)
      result = val[0] << val[1]
    
    result
end

# reduce 69 omitted

# reduce 70 omitted

# reduce 71 omitted

# reduce 72 omitted

# reduce 73 omitted

# reduce 74 omitted

# reduce 75 omitted

# reduce 76 omitted

# reduce 77 omitted

def _reduce_78(val, _values, result)
      result = ArefNode.new val[0], val[2]
    
    result
end

def _reduce_79(val, _values, result)
      result = CallNode.new val[0], val[2], [[]]
    
    result
end

# reduce 80 omitted

# reduce 81 omitted

# reduce 82 omitted

# reduce 83 omitted

# reduce 84 omitted

# reduce 85 omitted

def _reduce_86(val, _values, result)
      result = "result = ['::', val[1]];"
    
    result
end

def _reduce_87(val, _values, result)
      result = [nil, val[0]]
    
    result
end

def _reduce_88(val, _values, result)
      result = [val[0], val[2]]
    
    result
end

# reduce 89 omitted

# reduce 90 omitted

# reduce 91 omitted

# reduce 92 omitted

# reduce 93 omitted

# reduce 94 omitted

# reduce 95 omitted

# reduce 96 omitted

# reduce 97 omitted

# reduce 98 omitted

# reduce 99 omitted

# reduce 100 omitted

# reduce 101 omitted

# reduce 102 omitted

# reduce 103 omitted

# reduce 104 omitted

# reduce 105 omitted

# reduce 106 omitted

# reduce 107 omitted

# reduce 108 omitted

# reduce 109 omitted

# reduce 110 omitted

# reduce 111 omitted

# reduce 112 omitted

# reduce 113 omitted

# reduce 114 omitted

# reduce 115 omitted

# reduce 116 omitted

# reduce 117 omitted

# reduce 118 omitted

# reduce 119 omitted

# reduce 120 omitted

# reduce 121 omitted

# reduce 122 omitted

# reduce 123 omitted

# reduce 124 omitted

# reduce 125 omitted

# reduce 126 omitted

# reduce 127 omitted

# reduce 128 omitted

# reduce 129 omitted

# reduce 130 omitted

# reduce 131 omitted

# reduce 132 omitted

# reduce 133 omitted

# reduce 134 omitted

# reduce 135 omitted

# reduce 136 omitted

# reduce 137 omitted

# reduce 138 omitted

# reduce 139 omitted

# reduce 140 omitted

# reduce 141 omitted

# reduce 142 omitted

# reduce 143 omitted

# reduce 144 omitted

# reduce 145 omitted

# reduce 146 omitted

# reduce 147 omitted

# reduce 148 omitted

# reduce 149 omitted

# reduce 150 omitted

# reduce 151 omitted

# reduce 152 omitted

# reduce 153 omitted

# reduce 154 omitted

# reduce 155 omitted

# reduce 156 omitted

# reduce 157 omitted

# reduce 158 omitted

# reduce 159 omitted

# reduce 160 omitted

# reduce 161 omitted

# reduce 162 omitted

# reduce 163 omitted

# reduce 164 omitted

# reduce 165 omitted

def _reduce_166(val, _values, result)
      result = AssignNode.new val[0], val[2], val[1]
    
    result
end

# reduce 167 omitted

def _reduce_168(val, _values, result)
      result = OpAsgnNode.new val[1], val[0], val[2]
    
    result
end

# reduce 169 omitted

# reduce 170 omitted

# reduce 171 omitted

# reduce 172 omitted

# reduce 173 omitted

# reduce 174 omitted

# reduce 175 omitted

def _reduce_176(val, _values, result)
      result = RangeNode.new val[1], val[0], val[2]
    
    result
end

def _reduce_177(val, _values, result)
      result = RangeNode.new val[1], val[0], val[2]
    
    result
end

def _reduce_178(val, _values, result)
      result = CallNode.new val[0], val[1], [[val[2]]]
    
    result
end

def _reduce_179(val, _values, result)
      result = CallNode.new val[0], val[1], [[val[2]]]
    
    result
end

def _reduce_180(val, _values, result)
      result = CallNode.new val[0], val[1], [[val[2]]]
    
    result
end

def _reduce_181(val, _values, result)
      result = CallNode.new val[0], val[1], [[val[2]]]
    
    result
end

def _reduce_182(val, _values, result)
      result = CallNode.new val[0], val[1], [[val[2]]]
    
    result
end

def _reduce_183(val, _values, result)
      result = CallNode.new val[0], val[1], [[val[2]]]
    
    result
end

# reduce 184 omitted

# reduce 185 omitted

def _reduce_186(val, _values, result)
      result = CallNode.new val[1], val[0], []
    
    result
end

def _reduce_187(val, _values, result)
      result = CallNode.new val[1], val[0], []
    
    result
end

def _reduce_188(val, _values, result)
      result = CallNode.new val[0], val[1], [[val[2]]]
    
    result
end

def _reduce_189(val, _values, result)
      result = CallNode.new val[0], val[1], [[val[2]]]
    
    result
end

def _reduce_190(val, _values, result)
      result = CallNode.new val[0], val[1], [[val[2]]]
    
    result
end

def _reduce_191(val, _values, result)
      result = CallNode.new val[0], val[1], [[val[2]]]
    
    result
end

def _reduce_192(val, _values, result)
      result = CallNode.new val[0], val[1], [[val[2]]]
    
    result
end

def _reduce_193(val, _values, result)
      result = CallNode.new val[0], val[1], [[val[2]]]
    
    result
end

def _reduce_194(val, _values, result)
      result = CallNode.new val[0], val[1], [[val[2]]]
    
    result
end

def _reduce_195(val, _values, result)
      result = CallNode.new val[0], val[1], [[val[2]]]
    
    result
end

def _reduce_196(val, _values, result)
      result = CallNode.new val[0], val[1], [[val[2]]]
    
    result
end

def _reduce_197(val, _values, result)
      result = CallNode.new val[0], val[1], [[val[2]]]
    
    result
end

def _reduce_198(val, _values, result)
      result = CallNode.new val[0], val[1], [[val[2]]]
    
    result
end

def _reduce_199(val, _values, result)
      result = CallNode.new val[0], val[1], [[val[2]]]
    
    result
end

def _reduce_200(val, _values, result)
      result = CallNode.new val[0], val[1], [[val[2]]]
    
    result
end

def _reduce_201(val, _values, result)
      result = CallNode.new val[1], val[0], []
    
    result
end

def _reduce_202(val, _values, result)
      result = CallNode.new val[1], val[0], []
    
    result
end

def _reduce_203(val, _values, result)
      result = CallNode.new val[0], val[1], [[val[2]]]
    
    result
end

def _reduce_204(val, _values, result)
      result = CallNode.new val[0], val[1], [[val[2]]]
    
    result
end

def _reduce_205(val, _values, result)
      result = AndNode.new val[1], val[0], val[2]
    
    result
end

def _reduce_206(val, _values, result)
      result = OrNode.new val[1], val[0], val[2]
    
    result
end

# reduce 207 omitted

def _reduce_208(val, _values, result)
      result = val[0]
      # FIXME
      # result = "result = ['ternary', val[0], val[2], val[4]];"
    
    result
end

# reduce 209 omitted

# reduce 210 omitted

def _reduce_211(val, _values, result)
      result = [[], nil]
    
    result
end

# reduce 212 omitted

def _reduce_213(val, _values, result)
      result = [val[0], nil]
    
    result
end

def _reduce_214(val, _values, result)
      result = [val[0], val[3]]
    
    result
end

def _reduce_215(val, _values, result)
      result = [[HashNode.new(val[0], {}, {})], nil]
    
    result
end

def _reduce_216(val, _values, result)
      result = [[], val[1]]
    
    result
end

def _reduce_217(val, _values, result)
      result = [[]]
    
    result
end

def _reduce_218(val, _values, result)
      result = val[1]
    
    result
end

# reduce 219 omitted

# reduce 220 omitted

def _reduce_221(val, _values, result)
      result = []
    
    result
end

# reduce 222 omitted

def _reduce_223(val, _values, result)
      result = [[val[0]], nil, nil, nil]
    
    result
end

def _reduce_224(val, _values, result)
      result = [val[0], nil, nil, val[1]]
    
    result
end

def _reduce_225(val, _values, result)
      result = [val[0], val[3], nil, val[4]]
    
    result
end

def _reduce_226(val, _values, result)
      result = [nil, nil, val[0], val[1]]
    
    result
end

def _reduce_227(val, _values, result)
      result = [nil, val[3], val[0], val[4]]
    
    result
end

def _reduce_228(val, _values, result)
      result = [val[0], nil, val[2], val[3]]
    
    result
end

def _reduce_229(val, _values, result)
      result = [val[0], val[5], val[2], val[6]]
    
    result
end

def _reduce_230(val, _values, result)
      result = [nil, val[1], nil, val[2]]
    
    result
end

def _reduce_231(val, _values, result)
      result = [nil, nil, nil, val[0]]
    
    result
end

# reduce 232 omitted

# reduce 233 omitted

# reduce 234 omitted

# reduce 235 omitted

# reduce 236 omitted

# reduce 237 omitted

# reduce 238 omitted

# reduce 239 omitted

# reduce 240 omitted

# reduce 241 omitted

# reduce 242 omitted

# reduce 243 omitted

def _reduce_244(val, _values, result)
      cmdarg_push 1
    
    result
end

def _reduce_245(val, _values, result)
      cmdarg_pop
      result = val[1]
    
    result
end

# reduce 246 omitted

def _reduce_247(val, _values, result)
      result = [[]]
    
    result
end

def _reduce_248(val, _values, result)
      result = val[1]
    
    result
end

def _reduce_249(val, _values, result)
      result = val[1]
    
    result
end

def _reduce_250(val, _values, result)
      result = val[1]
    
    result
end

def _reduce_251(val, _values, result)
      result = nil
    
    result
end

def _reduce_252(val, _values, result)
      result = [val[0]]
    
    result
end

def _reduce_253(val, _values, result)
      result = val[0] << val[2]
    
    result
end

# reduce 254 omitted

# reduce 255 omitted

# reduce 256 omitted

# reduce 257 omitted

# reduce 258 omitted

# reduce 259 omitted

# reduce 260 omitted

# reduce 261 omitted

# reduce 262 omitted

# reduce 263 omitted

# reduce 264 omitted

# reduce 265 omitted

def _reduce_266(val, _values, result)
      result = BeginNode.new val[0], val[1], val[2]
    
    result
end

# reduce 267 omitted

def _reduce_268(val, _values, result)
      result = ParenNode.new val[0], val[1], val[2]
    
    result
end

def _reduce_269(val, _values, result)
      result = Colon2Node.new val[0], val[2]
    
    result
end

def _reduce_270(val, _values, result)
      result = Colon3Node.new val[1]
    
    result
end

def _reduce_271(val, _values, result)
      result = CallNode.new val[0], { :line => val[0].line, :value => '[]' }, val[2]
    
    result
end

def _reduce_272(val, _values, result)
      result = ArrayNode.new val[1], val[0], val[2]
    
    result
end

def _reduce_273(val, _values, result)
      result = HashNode.new val[1], val[0], val[2]
    
    result
end

def _reduce_274(val, _values, result)
      result = ReturnNode.new val[0], [nil]
    
    result
end

def _reduce_275(val, _values, result)
      result = YieldNode.new val[0], val[2]
    
    result
end

def _reduce_276(val, _values, result)
      result = YieldNode.new val[0], []
    
    result
end

def _reduce_277(val, _values, result)
      result = YieldNode.new val[0], []
    
    result
end

# reduce 278 omitted

def _reduce_279(val, _values, result)
      result = CallNode.new nil, val[0], [[]]
      result.block = val[1]
    
    result
end

# reduce 280 omitted

def _reduce_281(val, _values, result)
      result = val[0];
      result.block = val[1]
    
    result
end

def _reduce_282(val, _values, result)
      result = IfNode.new val[0], val[1], val[3], val[4], val[5]
    
    result
end

def _reduce_283(val, _values, result)
      result = IfNode.new val[0], val[1], val[3], val[4], val[5]
    
    result
end

def _reduce_284(val, _values, result)
      cond_push 1
    
    result
end

def _reduce_285(val, _values, result)
      cond_pop
    
    result
end

def _reduce_286(val, _values, result)
      result = WhileNode.new val[0], val[2], val[5], val[6]
    
    result
end

def _reduce_287(val, _values, result)
      result = "this.cond_push(1);"
    
    result
end

def _reduce_288(val, _values, result)
      result = "this.cond_pop();"
    
    result
end

def _reduce_289(val, _values, result)
      result = "result = ['while', val[0], val[2], val[5]];"
    
    result
end

def _reduce_290(val, _values, result)
      result = CaseNode.new val[0], val[1], val[3], val[4]
    
    result
end

def _reduce_291(val, _values, result)
      result = "result = ['case', null, val[2]];"
    
    result
end

# reduce 292 omitted

def _reduce_293(val, _values, result)
      result = "this.cond_push(1);"
    
    result
end

def _reduce_294(val, _values, result)
      result = "this.cond_pop();"
    
    result
end

# reduce 295 omitted

def _reduce_296(val, _values, result)
      result = ClassNode.new val[0], val[1], val[2], val[3], val[4]
    
    result
end

def _reduce_297(val, _values, result)
      result = ClassShiftNode.new val[0], val[2], val[4], val[5]
    
    result
end

def _reduce_298(val, _values, result)
      result = ModuleNode.new val[0], val[1], val[2], val[3]
    
    result
end

def _reduce_299(val, _values, result)
      result = DefNode.new val[0], nil, val[1], val[2], val[3], val[4]
    
    result
end

def _reduce_300(val, _values, result)
      result = DefNode.new val[0], val[1], val[3], val[4], val[5], val[6]
    
    result
end

def _reduce_301(val, _values, result)
      result = BreakNode.new val[0], []
    
    result
end

def _reduce_302(val, _values, result)
      result = NextNode.new val[0], []
    
    result
end

# reduce 303 omitted

# reduce 304 omitted

# reduce 305 omitted

# reduce 306 omitted

# reduce 307 omitted

# reduce 308 omitted

# reduce 309 omitted

# reduce 310 omitted

# reduce 311 omitted

# reduce 312 omitted

def _reduce_313(val, _values, result)
      result = val[0]
    
    result
end

def _reduce_314(val, _values, result)
      result = [[val[0], val[1], val[3]]].concat val[4]
    
    result
end

def _reduce_315(val, _values, result)
      result = []
    
    result
end

def _reduce_316(val, _values, result)
      result = [[val[0], val[1]]]
    
    result
end

def _reduce_317(val, _values, result)
      result = [val[0], nil]
    
    result
end

def _reduce_318(val, _values, result)
      result = [val[0], val[2], val[4], val[5]]
    
    result
end

def _reduce_319(val, _values, result)
      result = [val[0], val[2], nil, val[3]]
    
    result
end

def _reduce_320(val, _values, result)
      result = [val[0], nil, val[2], val[3]]
    
    result
end

def _reduce_321(val, _values, result)
      result = [val[0], nil, nil, val[1]]
    
    result
end

def _reduce_322(val, _values, result)
      result = [nil, val[0], val[2], val[3]]
    
    result
end

def _reduce_323(val, _values, result)
      result = [nil, val[0], nil, val[1]]
    
    result
end

def _reduce_324(val, _values, result)
      result = [nil, nil, val[0], val[1]]
    
    result
end

def _reduce_325(val, _values, result)
      result = [nil, nil, nil, val[0]]
    
    result
end

def _reduce_326(val, _values, result)
      result = [val[0]]
    
    result
end

def _reduce_327(val, _values, result)
      val[0] << val[2]
      result = val[0]
    
    result
end

def _reduce_328(val, _values, result)
      result = [val[0], val[2]]
    
    result
end

def _reduce_329(val, _values, result)
      result = [nil]
    
    result
end

def _reduce_330(val, _values, result)
      result = [nil]
    
    result
end

def _reduce_331(val, _values, result)
      result = [nil]
    
    result
end

def _reduce_332(val, _values, result)
      result = val[1]
    
    result
end

def _reduce_333(val, _values, result)
      # result = "print('doing half command');"
    
    result
end

def _reduce_334(val, _values, result)
      result = BlockNode.new val[0], val[2], val[3], val[4]
    
    result
end

def _reduce_335(val, _values, result)
      result = val[0]
      val[0].block = val[1]
    
    result
end

# reduce 336 omitted

# reduce 337 omitted

def _reduce_338(val, _values, result)
      result = CallNode.new nil, val[0], val[1]
    
    result
end

def _reduce_339(val, _values, result)
      result = CallNode.new val[0], val[2], val[3]
    
    result
end

# reduce 340 omitted

# reduce 341 omitted

def _reduce_342(val, _values, result)
      result = SuperNode.new val[0], val[1]
    
    result
end

def _reduce_343(val, _values, result)
      result = SuperNode.new val[0], []
    
    result
end

def _reduce_344(val, _values, result)
      result = BlockNode.new val[0], val[1], val[2], val[3]
    
    result
end

def _reduce_345(val, _values, result)
      result = BlockNode.new val[0], val[1], val[2], val[3]
    
    result
end

def _reduce_346(val, _values, result)
      # result = "result = [['when', val[1], val[3]]].concat(val[4]);"
      result = [[val[0], val[1], val[3]]] + val[4]
    
    result
end

def _reduce_347(val, _values, result)
      result = val[0]
    
    result
end

def _reduce_348(val, _values, result)
      result = val[0]
    
    result
end

def _reduce_349(val, _values, result)
      result = []
    
    result
end

# reduce 350 omitted

# reduce 351 omitted

def _reduce_352(val, _values, result)
      result = [[val[0], val[1], val[2], val[4]]]
      result.concat val[5]
    
    result
end

def _reduce_353(val, _values, result)
      result = []
    
    result
end

# reduce 354 omitted

# reduce 355 omitted

# reduce 356 omitted

def _reduce_357(val, _values, result)
      result = val[1]
    
    result
end

def _reduce_358(val, _values, result)
      result = nil
    
    result
end

# reduce 359 omitted

# reduce 360 omitted

# reduce 361 omitted

# reduce 362 omitted

# reduce 363 omitted

# reduce 364 omitted

# reduce 365 omitted

# reduce 366 omitted

def _reduce_367(val, _values, result)
      result = StringNode.new val[1], val[2]
    
    result
end

# reduce 368 omitted

def _reduce_369(val, _values, result)
      result = XStringNode.new val[0], val[1], val[2]
    
    result
end

def _reduce_370(val, _values, result)
      result = RegexpNode.new val[0], val[1]
    
    result
end

def _reduce_371(val, _values, result)
      result = WordsNode.new val[0], [], val[2]
    
    result
end

def _reduce_372(val, _values, result)
      result = WordsNode.new val[0], val[1], val[2]
    
    result
end

def _reduce_373(val, _values, result)
      result = []
    
    result
end

def _reduce_374(val, _values, result)
      result = val[0].concat([val[1]])
    
    result
end

def _reduce_375(val, _values, result)
      result = val[0]
    
    result
end

def _reduce_376(val, _values, result)
      result = val[0].concat([val[1]])
    
    result
end

def _reduce_377(val, _values, result)
      result = WordsNode.new val[0], [], val[2]
    
    result
end

def _reduce_378(val, _values, result)
      result = WordsNode.new val[0], val[1], val[2]
    
    result
end

def _reduce_379(val, _values, result)
      result = []
    
    result
end

def _reduce_380(val, _values, result)
      result = val[0].concat([['string_content', val[1]]])
    
    result
end

def _reduce_381(val, _values, result)
      result = []
    
    result
end

def _reduce_382(val, _values, result)
      result = val[0] << val[1]
    
    result
end

def _reduce_383(val, _values, result)
      result = []
    
    result
end

def _reduce_384(val, _values, result)
      result = val[0].concat [val[1]]
    
    result
end

def _reduce_385(val, _values, result)
      result = ['string_content', val[0]]
    
    result
end

def _reduce_386(val, _values, result)
      result = ['string_dvar', val[1]]
    
    result
end

def _reduce_387(val, _values, result)
      cond_push 0
      cmdarg_push 0
    
    result
end

def _reduce_388(val, _values, result)
      cond_lexpop
      cmdarg_lexpop
      result = ['string_dbegin', val[2]]
    
    result
end

# reduce 389 omitted

# reduce 390 omitted

# reduce 391 omitted

# reduce 392 omitted

def _reduce_393(val, _values, result)
      result = SymbolNode.new val[1]
    
    result
end

# reduce 394 omitted

# reduce 395 omitted

# reduce 396 omitted

# reduce 397 omitted

# reduce 398 omitted

def _reduce_399(val, _values, result)
      result = "result = ['dsym', val[1]];"
    
    result
end

def _reduce_400(val, _values, result)
      result = NumericNode.new val[0]
    
    result
end

def _reduce_401(val, _values, result)
      result = NumericNode.new val[0]
    
    result
end

# reduce 402 omitted

# reduce 403 omitted

def _reduce_404(val, _values, result)
      result = IdentifierNode.new val[0]
    
    result
end

def _reduce_405(val, _values, result)
      result = IvarNode.new val[0]
    
    result
end

def _reduce_406(val, _values, result)
      result = GvarNode.new val[0];
    
    result
end

def _reduce_407(val, _values, result)
      result = ConstantNode.new val[0]
    
    result
end

def _reduce_408(val, _values, result)
      result = "result = ['cvar', val[0]];"
    
    result
end

def _reduce_409(val, _values, result)
      result = NilNode.new val[0]
    
    result
end

def _reduce_410(val, _values, result)
      result = SelfNode.new val[0]
    
    result
end

def _reduce_411(val, _values, result)
      result = TrueNode.new val[0]
    
    result
end

def _reduce_412(val, _values, result)
      result = FalseNode.new val[0]
    
    result
end

def _reduce_413(val, _values, result)
      result = FileNode.new val[0]
    
    result
end

def _reduce_414(val, _values, result)
      result = LineNode.new val[0]
    
    result
end

def _reduce_415(val, _values, result)
      result = BlockGivenNode.new val[0]
    
    result
end

# reduce 416 omitted

# reduce 417 omitted

# reduce 418 omitted

# reduce 419 omitted

def _reduce_420(val, _values, result)
      result = nil
    
    result
end

def _reduce_421(val, _values, result)
      result = val[1]
    
    result
end

def _reduce_422(val, _values, result)
      result = nil
    
    result
end

def _reduce_423(val, _values, result)
      result = val[1]
    
    result
end

def _reduce_424(val, _values, result)
      result = val[0]
    
    result
end

def _reduce_425(val, _values, result)
      result = [val[0], val[2], val[4], val[5]]
    
    result
end

def _reduce_426(val, _values, result)
      result = [val[0], val[2], nil, val[3]]
    
    result
end

def _reduce_427(val, _values, result)
      result = [val[0], nil, val[2], val[3]]
    
    result
end

def _reduce_428(val, _values, result)
      result = [val[0], nil, nil, val[1]]
    
    result
end

def _reduce_429(val, _values, result)
      rsult = [nil, val[0], val[2], val[3]]
    
    result
end

def _reduce_430(val, _values, result)
      result = [nil, val[0], nil, val[1]]
    
    result
end

def _reduce_431(val, _values, result)
      result = [nil, nil, val[0], val[1]]
    
    result
end

def _reduce_432(val, _values, result)
      result = [nil, nil, nil, val[0]]
    
    result
end

def _reduce_433(val, _values, result)
      result = [nil, nil, nil, nil]
    
    result
end

def _reduce_434(val, _values, result)
      result = "this.yyerror('formal argument cannot be a constant');"
    
    result
end

def _reduce_435(val, _values, result)
      result = "this.yyerror('formal argument cannot be an instance variable');"
    
    result
end

def _reduce_436(val, _values, result)
      result = "this.yyerror('formal argument cannot be a class variable');"
    
    result
end

def _reduce_437(val, _values, result)
      result = "this.yyerror('formal argument cannot be a global variable');"
    
    result
end

# reduce 438 omitted

def _reduce_439(val, _values, result)
      result = [val[0]]
    
    result
end

def _reduce_440(val, _values, result)
      val[0] << val[2]
      result = val[0]
    
    result
end

def _reduce_441(val, _values, result)
      result = [val[0], val[2]]
    
    result
end

def _reduce_442(val, _values, result)
      result = [val[0]]
    
    result
end

def _reduce_443(val, _values, result)
      result = val[0]
      val[0] << val[2]
    
    result
end

# reduce 444 omitted

# reduce 445 omitted

def _reduce_446(val, _values, result)
      result = val[1]
    
    result
end

def _reduce_447(val, _values, result)
      result = val[0]
    
    result
end

# reduce 448 omitted

# reduce 449 omitted

def _reduce_450(val, _values, result)
      result = val[1]
    
    result
end

def _reduce_451(val, _values, result)
      result = val[1]
    
    result
end

def _reduce_452(val, _values, result)
      result = nil
    
    result
end

def _reduce_453(val, _values, result)
      result = val[0]
    
    result
end

def _reduce_454(val, _values, result)
      result = val[1]
    
    result
end

def _reduce_455(val, _values, result)
      result = []
    
    result
end

def _reduce_456(val, _values, result)
      result = val[0]
    
    result
end

def _reduce_457(val, _values, result)
      raise "unsupported assoc list type (#@line_number)"
    
    result
end

def _reduce_458(val, _values, result)
      result = [val[0]]
    
    result
end

def _reduce_459(val, _values, result)
      result = val[0] << val[2]
    
    result
end

def _reduce_460(val, _values, result)
      result = [val[0], val[2]]
    
    result
end

# reduce 461 omitted

# reduce 462 omitted

# reduce 463 omitted

# reduce 464 omitted

# reduce 465 omitted

# reduce 466 omitted

# reduce 467 omitted

# reduce 468 omitted

# reduce 469 omitted

# reduce 470 omitted

# reduce 471 omitted

# reduce 472 omitted

# reduce 473 omitted

# reduce 474 omitted

# reduce 475 omitted

# reduce 476 omitted

# reduce 477 omitted

# reduce 478 omitted

# reduce 479 omitted

# reduce 480 omitted

# reduce 481 omitted

# reduce 482 omitted

# reduce 483 omitted

# reduce 484 omitted

# reduce 485 omitted

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class RubyParser
  end   # module Opal
