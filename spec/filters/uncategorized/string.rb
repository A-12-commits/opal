opal_filter "String" do
  fails "String#=== ignores encoding difference of compatible string"
  fails "String#=== considers encoding difference of incompatible string"
  fails "String#=== considers encoding compatibility"
  fails "String#<=> with String ignores encoding difference"
  fails "String#<=> with String returns 0 with identical ASCII-compatible bytes of different encodings"
  fails "String#<=> with String compares the indices of the encodings when the strings have identical non-ASCII-compatible bytes"
  fails "String#count returns the number of occurrences of a multi-byte character"
  fails "String#dup does not modify the original string when changing dupped string"
  fails "String#each_line accepts a string separator"
  fails "String#eql? ignores encoding difference of compatible string"
  fails "String#eql? considers encoding difference of incompatible string"
  fails "String#eql? considers encoding compatibility"
  fails "String#== ignores encoding difference of compatible string"
  fails "String#== considers encoding difference of incompatible string"
  fails "String#== considers encoding compatibility"
  fails "String#initialize with an argument carries over the encoding invalidity"
  fails "String#lines accepts a string separator"
  fails "String#partition with String raises an error if not convertible to string"
  fails "String#replace carries over the encoding invalidity"
  fails "String#rpartition with String raises an error if not convertible to string"
  fails "String#split with Regexp splits a string on each character for a multibyte encoding and empty split"
  fails "String#sub with pattern and Hash returns a copy of self with the first occurrence of pattern replaced with the value of the corresponding hash key"
  fails "String#sub with pattern and Hash removes keys that don't correspond to matches"
  fails "String#sub with pattern and Hash ignores non-String keys"
  fails "String#sub with pattern and Hash uses a key's value only a single time"
  fails "String#sub with pattern and Hash uses the hash's default value for missing keys"
  fails "String#sub with pattern and Hash coerces the hash values with #to_s"
  fails "String#sub with pattern and Hash uses the hash's value set from default_proc for missing keys"
  fails "String#sub with pattern and Hash sets $~ to MatchData of first match and nil when there's none for access from outside"
  fails "String#sub with pattern and Hash doesn't interpolate special sequences like \\1 for the block's return value"
  fails "String#sub with pattern and Hash untrusts the result if the original string is untrusted"
  fails "String#sub with pattern and Hash untrusts the result if a hash value is untrusted"
  fails "String#sub with pattern and Hash taints the result if the original string is tainted"
  fails "String#sub with pattern and Hash taints the result if a hash value is tainted"
  fails "String#sub! with pattern and Hash returns self with the first occurrence of pattern replaced with the value of the corresponding hash key"
  fails "String#sub! with pattern and Hash removes keys that don't correspond to matches"
  fails "String#sub! with pattern and Hash ignores non-String keys"
  fails "String#sub! with pattern and Hash uses a key's value only a single time"
  fails "String#sub! with pattern and Hash uses the hash's default value for missing keys"
  fails "String#sub! with pattern and Hash coerces the hash values with #to_s"
  fails "String#sub! with pattern and Hash coerces the hash values with #to_s"
  fails "String#sub! with pattern and Hash uses the hash's value set from default_proc for missing keys"
  fails "String#sub! with pattern and Hash sets $~ to MatchData of first match and nil when there's none for access from outside"
  fails "String#sub! with pattern and Hash doesn't interpolate special sequences like \\1 for the block's return value"
  fails "String#sub! with pattern and Hash keeps untrusted state"
  fails "String#sub! with pattern and Hash untrusts self if a hash value is untrusted"
  fails "String#sub! with pattern and Hash keeps tainted state"
  fails "String#sub! with pattern and Hash taints self if a hash value is tainted"
  fails "String#to_str returns a new instance of String when called on a subclass"
  fails "String#tr raises an ArgumentError a descending range in the replacement as containing just the start character"
  fails "String#tr raises an ArgumentError a descending range in the source as empty"
  fails "String#upto passes successive values, starting at self and ending at other_string, to the block"
  fails "String#upto calls the block once even when start eqals stop"
  fails "String#upto doesn't call block with self even if self is less than stop but stop length is less than self length"
  fails "String#upto doesn't call block if stop is less than self and stop length is less than self length"
  fails "String#upto doesn't call the block if self is greater than stop"
  fails "String#upto stops iterating as soon as the current value's character count gets higher than stop's"
  fails "String#upto returns self"
  fails "String#upto tries to convert other to string using to_str"
  fails "String#upto raises a TypeError if other can't be converted to a string"
  fails "String#upto does not work with symbols"
  fails "String#upto returns an enumerator when no block given"
  fails "String#upto returns non-alphabetic characters in the ASCII range for single letters"
  fails "String#upto stops before the last value if exclusive"
  fails "String#upto on sequence of numbers calls the block as Integer#upto"
end
