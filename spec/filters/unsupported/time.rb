opal_filter "Time" do
  fails "Time#<=> returns -1 if the first argument is a fraction of a microsecond before the second argument"
  fails "Time#<=> returns -1 if the first argument is a point in time before the second argument (down to a microsecond)"
  fails "Time#<=> returns 0 if time is the same as other, including fractional microseconds"
  fails "Time#<=> returns 1 if the first argument is a fraction of a microsecond after the second argument"
  fails "Time#<=> returns 1 if the first argument is a point in time after the second argument (down to a microsecond)"
  fails "Time#dst? dst? returns whether time is during daylight saving time"
  fails "Time#dup returns a subclass instance"
  fails "Time#eql? returns false if self and other have differing numbers of microseconds"
  fails "Time#hash returns a Fixnum"
  fails "Time#isdst dst? returns whether time is during daylight saving time"
  fails "Time#strftime with %L formats the milliseconds of the second"
  fails "Time#strftime with %z formats a UTC time offset as '+0000'"
  fails "Time#strftime with %z formats a local time with negative UTC offset as '-HHMM'"
  fails "Time#strftime with %z formats a local time with positive UTC offset as '+HHMM'"
  fails "Time#strftime with %z formats a time with fixed negative offset as '-HHMM'"
  fails "Time#strftime with %z formats a time with fixed offset as '+/-HH:MM' with ':' specifier"
  fails "Time#strftime with %z formats a time with fixed offset as '+/-HH:MM:SS' with '::' specifier"
  fails "Time#strftime with %z formats a time with fixed positive offset as '+HHMM'"
  fails "Time#to_a returns a 10 element array representing the deconstructed time"
  fails "Time.at passed Numeric returns a subclass instance on a Time subclass"
  fails "Time.at passed Time returns a subclass instance"
  fails "Time.at passed [Integer, Numeric] returns a Time object representing the given number of seconds and Float microseconds since 1970-01-01 00:00:00 UTC"
  fails "Time.at passed non-Time, non-Numeric with an argument that responds to #to_r coerces using #to_r"
  fails "Time.at with a second argument that responds to #to_r coerces using #to_r"
  fails "Time.mktime handles fractional microseconds as a Float"
  fails "Time.mktime handles fractional microseconds as a Rational"
  fails "Time.mktime handles microseconds"
  fails "Time.mktime ignores fractional seconds if a passed fractional number of microseconds"
  fails "Time.mktime ignores fractional seconds if a passed whole number of microseconds"
end
