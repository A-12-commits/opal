opal_filter "Module" do
  fails "Module#class_variable_set raises a RuntimeError when self is frozen"
  fails "Module#define_method is private"
  fails "Module#define_method raises a RuntimeError if frozen"
  fails "Module#define_method when name is :initialize given an UnboundMethod sets the visibility to private when method is named :initialize"
  fails "Module#define_method when name is :initialize passed a block sets visibility to private when method name is :initialize"
  fails "Module#instance_methods makes a private Object instance method public in Kernel"
  fails "Module#private_constant marked constants in Object cannot be accessed using ::Const form"
  fails "Module#private_constant marked constants in Object is defined? through the normal search"
  fails "Module#private_constant marked constants in Object is not defined? using ::Const form"
  fails "Module#private_constant marked constants in a class can be accessed from lexical scope"
  fails "Module#private_constant marked constants in a class can be accessed from the class itself"
  fails "Module#private_constant marked constants in a class cannot be accessed from outside the class"
  fails "Module#private_constant marked constants in a class cannot be reopened as a class"
  fails "Module#private_constant marked constants in a class cannot be reopened as a module"
  fails "Module#private_constant marked constants in a class is defined? from lexical scope"
  fails "Module#private_constant marked constants in a class is defined? from subclasses"
  fails "Module#private_constant marked constants in a class is defined? from the class itself"
  fails "Module#private_constant marked constants in a class is not defined? with A::B form"
  fails "Module#private_constant marked constants in a module can be accessed from lexical scope"
  fails "Module#private_constant marked constants in a module can be accessed from the module itself"
  fails "Module#private_constant marked constants in a module cannot be accessed from outside the module"
  fails "Module#private_constant marked constants in a module cannot be reopened as a class"
  fails "Module#private_constant marked constants in a module cannot be reopened as a module"
  fails "Module#private_constant marked constants in a module is defined? from classes that include the module"
  fails "Module#private_constant marked constants in a module is defined? from lexical scope"
  fails "Module#private_constant marked constants in a module is defined? from the module itself"
  fails "Module#private_constant marked constants in a module is not defined? with A::B form"
  fails "Module#private_constant marked constants remain private even when updated"
  fails "Module#public_constant marked constants in Object can be accessed using ::Const form"
  fails "Module#public_constant marked constants in Object is defined? using ::Const form"
  fails "Module#public_constant marked constants in a class can be accessed from outside the class"
  fails "Module#public_constant marked constants in a class is defined? with A::B form"
  fails "Module#public_constant marked constants in a module can be accessed from outside the module"
  fails "Module#public_constant marked constants in a module is defined? with A::B form"
end
