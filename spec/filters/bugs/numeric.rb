opal_filter "Numeric" do
  fails "Numeric#remainder returns the result of calling self#% with other - other if self is greater than 0 and other is less than 0"
  fails "Numeric#remainder returns the result of calling self#% with other - other if self is less than 0 and other is greater than 0"
  fails "Numeric#remainder returns the result of calling self#% with other if self and other are greater than 0"
  fails "Numeric#remainder returns the result of calling self#% with other if self and other are less than 0"
  fails "Numeric#remainder returns the result of calling self#% with other if self is 0"
  fails "Numeric#singleton_method_added raises a TypeError when trying to define a singleton method on a Numeric"
  fails "Numeric#step with keyword arguments defaults to step = 1"
  fails "Numeric#step with keyword arguments does not rescue ArgumentError exceptions"
  fails "Numeric#step with keyword arguments does not rescue TypeError exceptions"
  fails "Numeric#step with keyword arguments should loop over self when step is 0 or 0.0"
  fails "Numeric#step with keyword arguments when at least one of self, stop or step is a Float with a negative Infinity step yields once if self > stop"
  fails "Numeric#step with keyword arguments when at least one of self, stop or step is a Float with a negative Infinity step yields once if stop is -Infinity"
  fails "Numeric#step with keyword arguments when at least one of self, stop or step is a Float with a negative Infinity step yields once when self and stop are Infinity"
  fails "Numeric#step with keyword arguments when at least one of self, stop or step is a Float with a negative Infinity step yields once when self equals stop"
  fails "Numeric#step with keyword arguments when at least one of self, stop or step is a Float with a negative step is careful about not yielding a value smaller than limit"
  fails "Numeric#step with keyword arguments when at least one of self, stop or step is a Float with a negative step yields once when self equals stop"
  fails "Numeric#step with keyword arguments when at least one of self, stop or step is a Float with a negative step yields while decreasing self by step while self > stop"
  fails "Numeric#step with keyword arguments when at least one of self, stop or step is a Float with a positive Infinity step yields once if self < stop"
  fails "Numeric#step with keyword arguments when at least one of self, stop or step is a Float with a positive Infinity step yields once when self and stop are Infinity"
  fails "Numeric#step with keyword arguments when at least one of self, stop or step is a Float with a positive Infinity step yields once when self equals stop"
  fails "Numeric#step with keyword arguments when at least one of self, stop or step is a Float with a positive Infinity step yields once when stop is Infinity"
  fails "Numeric#step with keyword arguments when at least one of self, stop or step is a Float with a positive step is careful about not yielding a value greater than limit"
  fails "Numeric#step with keyword arguments when at least one of self, stop or step is a Float with a positive step yields once when self equals stop"
  fails "Numeric#step with keyword arguments when at least one of self, stop or step is a Float with a positive step yields while increasing self by step while < stop"
  fails "Numeric#step with keyword arguments when at least one of self, stop or step is a Float yields Floats even if only self is a Float"
  fails "Numeric#step with keyword arguments when at least one of self, stop or step is a Float yields Floats even if only step is a Float"
  fails "Numeric#step with keyword arguments when at least one of self, stop or step is a Float yields Floats even if only stop is a Float"
  fails "Numeric#step with keyword arguments when no block is given returned Enumerator size should return infinity_value when step is 0"
  fails "Numeric#step with keyword arguments when no block is given returned Enumerator size should return infinity_value when step is 0.0"
  fails "Numeric#step with keyword arguments when no block is given returned Enumerator size when self, stop and step are Fixnums and step is negative returns 0 if value < limit"
  fails "Numeric#step with keyword arguments when no block is given returned Enumerator size when self, stop and step are Fixnums and step is negative returns the difference between self and stop divided by the number of steps"
  fails "Numeric#step with keyword arguments when no block is given returned Enumerator size when self, stop and step are Fixnums and step is positive returns 0 if value > limit"
  fails "Numeric#step with keyword arguments when no block is given returned Enumerator size when self, stop and step are Fixnums and step is positive returns the difference between self and stop divided by the number of steps"
  fails "Numeric#step with keyword arguments when no block is given returned Enumerator size when self, stop or step is a Float and step is negative returns 0 if value < limit"
  fails "Numeric#step with keyword arguments when no block is given returned Enumerator size when self, stop or step is a Float and step is negative returns 1 if step is infinity_value"
  fails "Numeric#step with keyword arguments when no block is given returned Enumerator size when self, stop or step is a Float and step is negative returns the difference between self and stop divided by the number of steps"
  fails "Numeric#step with keyword arguments when no block is given returned Enumerator size when self, stop or step is a Float and step is positive returns 0 if value > limit"
  fails "Numeric#step with keyword arguments when no block is given returned Enumerator size when self, stop or step is a Float and step is positive returns 1 if step is infinity_value"
  fails "Numeric#step with keyword arguments when no block is given returned Enumerator size when self, stop or step is a Float and step is positive returns the difference between self and stop divided by the number of steps"
  fails "Numeric#step with keyword arguments when no block is given returned Enumerator size when step is a String with self and stop as Fixnums raises an  when step is a numeric representation"
  fails "Numeric#step with keyword arguments when no block is given returned Enumerator size when step is a String with self and stop as Fixnums raises an  with step as an alphanumeric string"
  fails "Numeric#step with keyword arguments when no block is given returned Enumerator size when step is a String with self and stop as Floats raises an  when step is a numeric representation"
  fails "Numeric#step with keyword arguments when no block is given returned Enumerator size when step is a String with self and stop as Floats raises an  with step as an alphanumeric string"
  fails "Numeric#step with keyword arguments when no block is given returns an Enumerator that uses the given step"
  fails "Numeric#step with keyword arguments when self, stop and step are Fixnums with a negative step yields once when self equals stop"
  fails "Numeric#step with keyword arguments when self, stop and step are Fixnums with a negative step yields while decreasing self by step until stop is reached"
  fails "Numeric#step with keyword arguments when self, stop and step are Fixnums with a positive step yields once when self equals stop"
  fails "Numeric#step with keyword arguments when self, stop and step are Fixnums with a positive step yields while increasing self by step until stop is reached"
  fails "Numeric#step with keyword arguments when self, stop and step are Fixnums yields only Fixnums"
  fails "Numeric#step with keyword arguments when step is a String with self and stop as Fixnums raises an  when step is a numeric representation"
  fails "Numeric#step with keyword arguments when step is a String with self and stop as Fixnums raises an  with step as an alphanumeric string"
  fails "Numeric#step with keyword arguments when step is a String with self and stop as Floats raises an  when step is a numeric representation"
  fails "Numeric#step with keyword arguments when step is a String with self and stop as Floats raises an  with step as an alphanumeric string"
  fails "Numeric#step with mixed arguments should loop over self when step is 0 or 0.0"
  fails "Numeric#step with mixed arguments when at least one of self, stop or step is a Float with a Infinity stop and a negative step does not yield when self is negative infinity"
  fails "Numeric#step with mixed arguments when at least one of self, stop or step is a Float with a Infinity stop and a negative step does not yield when self is positive infinity"
  fails "Numeric#step with mixed arguments when at least one of self, stop or step is a Float with a Infinity stop and a positive step does not yield when self is infinity"
  fails "Numeric#step with mixed arguments when at least one of self, stop or step is a Float with a negative Infinity step does not yield when stop is Infinity"
  fails "Numeric#step with mixed arguments when at least one of self, stop or step is a Float with a negative Infinity stop and a negative step does not yield when self is negative infinity"
  fails "Numeric#step with mixed arguments when at least one of self, stop or step is a Float with a negative Infinity stop and a positive step does not yield when self is negative infinity"
  fails "Numeric#step with mixed arguments when at least one of self, stop or step is a Float with a negative step is careful about not yielding a value smaller than limit"
  fails "Numeric#step with mixed arguments when at least one of self, stop or step is a Float with a negative step yields while decreasing self by step while self > stop"
  fails "Numeric#step with mixed arguments when at least one of self, stop or step is a Float with a positive Infinity step does not yield when self > stop"
  fails "Numeric#step with mixed arguments when at least one of self, stop or step is a Float with a positive Infinity step does not yield when stop is -Infinity"
  fails "Numeric#step with mixed arguments when at least one of self, stop or step is a Float with a positive Infinity step yields once if self < stop"
  fails "Numeric#step with mixed arguments when at least one of self, stop or step is a Float with a positive step does not yield when self is greater than stop"
  fails "Numeric#step with mixed arguments when at least one of self, stop or step is a Float with a positive step is careful about not yielding a value greater than limit"
  fails "Numeric#step with mixed arguments when at least one of self, stop or step is a Float with a positive step yields while increasing self by step while < stop"
  fails "Numeric#step with mixed arguments when at least one of self, stop or step is a Float yields Floats even if only self is a Float"
  fails "Numeric#step with mixed arguments when at least one of self, stop or step is a Float yields Floats even if only step is a Float"
  fails "Numeric#step with mixed arguments when at least one of self, stop or step is a Float yields Floats even if only stop is a Float"
  fails "Numeric#step with mixed arguments when no block is given returned Enumerator size should return infinity_value when step is 0"
  fails "Numeric#step with mixed arguments when no block is given returned Enumerator size should return infinity_value when step is 0.0"
  fails "Numeric#step with mixed arguments when no block is given returned Enumerator size when self, stop and step are Fixnums and step is negative returns 0 if value < limit"
  fails "Numeric#step with mixed arguments when no block is given returned Enumerator size when self, stop and step are Fixnums and step is negative returns the difference between self and stop divided by the number of steps"
  fails "Numeric#step with mixed arguments when no block is given returned Enumerator size when self, stop and step are Fixnums and step is positive returns 0 if value > limit"
  fails "Numeric#step with mixed arguments when no block is given returned Enumerator size when self, stop and step are Fixnums and step is positive returns the difference between self and stop divided by the number of steps"
  fails "Numeric#step with mixed arguments when no block is given returned Enumerator size when self, stop or step is a Float and step is negative returns 0 if value < limit"
  fails "Numeric#step with mixed arguments when no block is given returned Enumerator size when self, stop or step is a Float and step is negative returns 1 if step is infinity_value"
  fails "Numeric#step with mixed arguments when no block is given returned Enumerator size when self, stop or step is a Float and step is negative returns the difference between self and stop divided by the number of steps"
  fails "Numeric#step with mixed arguments when no block is given returned Enumerator size when self, stop or step is a Float and step is positive returns 0 if value > limit"
  fails "Numeric#step with mixed arguments when no block is given returned Enumerator size when self, stop or step is a Float and step is positive returns 1 if step is infinity_value"
  fails "Numeric#step with mixed arguments when no block is given returned Enumerator size when self, stop or step is a Float and step is positive returns the difference between self and stop divided by the number of steps"
  fails "Numeric#step with mixed arguments when no block is given returned Enumerator size when step is a String with self and stop as Fixnums raises an  when step is a numeric representation"
  fails "Numeric#step with mixed arguments when no block is given returned Enumerator size when step is a String with self and stop as Fixnums raises an  with step as an alphanumeric string"
  fails "Numeric#step with mixed arguments when no block is given returned Enumerator size when step is a String with self and stop as Floats raises an  when step is a numeric representation"
  fails "Numeric#step with mixed arguments when no block is given returned Enumerator size when step is a String with self and stop as Floats raises an  with step as an alphanumeric string"
  fails "Numeric#step with mixed arguments when no block is given returns an Enumerator that uses the given step"
  fails "Numeric#step with mixed arguments when self, stop and step are Fixnums with a negative step yields while decreasing self by step until stop is reached"
  fails "Numeric#step with mixed arguments when self, stop and step are Fixnums with a positive step does not yield when self is greater than stop"
  fails "Numeric#step with mixed arguments when self, stop and step are Fixnums with a positive step yields while increasing self by step until stop is reached"
  fails "Numeric#step with mixed arguments when self, stop and step are Fixnums yields only Fixnums"
  fails "Numeric#step with mixed arguments when step is a String with self and stop as Fixnums raises an  when step is a numeric representation"
  fails "Numeric#step with mixed arguments when step is a String with self and stop as Fixnums raises an  with step as an alphanumeric string"
  fails "Numeric#step with mixed arguments when step is a String with self and stop as Floats raises an  when step is a numeric representation"
  fails "Numeric#step with mixed arguments when step is a String with self and stop as Floats raises an  with step as an alphanumeric string"
  fails "Numeric#step with positional args when at least one of self, stop or step is a Float with a Infinity stop and a negative step does not yield when self is negative infinity"
  fails "Numeric#step with positional args when at least one of self, stop or step is a Float with a Infinity stop and a negative step does not yield when self is positive infinity"
  fails "Numeric#step with positional args when at least one of self, stop or step is a Float with a Infinity stop and a positive step does not yield when self is infinity"
  fails "Numeric#step with positional args when at least one of self, stop or step is a Float with a negative Infinity step does not yield when stop is Infinity"
  fails "Numeric#step with positional args when at least one of self, stop or step is a Float with a negative Infinity stop and a negative step does not yield when self is negative infinity"
  fails "Numeric#step with positional args when at least one of self, stop or step is a Float with a negative Infinity stop and a positive step does not yield when self is negative infinity"
  fails "Numeric#step with positional args when at least one of self, stop or step is a Float with a negative step is careful about not yielding a value smaller than limit"
  fails "Numeric#step with positional args when at least one of self, stop or step is a Float with a positive Infinity step does not yield when stop is -Infinity"
  fails "Numeric#step with positional args when at least one of self, stop or step is a Float with a positive step is careful about not yielding a value greater than limit"
  fails "Numeric#step with positional args when no block is given returned Enumerator size raises an ArgumentError when step is 0"
  fails "Numeric#step with positional args when no block is given returned Enumerator size raises an ArgumentError when step is 0.0"
  fails "Numeric#step with positional args when no block is given returned Enumerator size when self, stop and step are Fixnums and step is negative returns 0 if value < limit"
  fails "Numeric#step with positional args when no block is given returned Enumerator size when self, stop and step are Fixnums and step is negative returns the difference between self and stop divided by the number of steps"
  fails "Numeric#step with positional args when no block is given returned Enumerator size when self, stop and step are Fixnums and step is positive returns 0 if value > limit"
  fails "Numeric#step with positional args when no block is given returned Enumerator size when self, stop and step are Fixnums and step is positive returns the difference between self and stop divided by the number of steps"
  fails "Numeric#step with positional args when no block is given returned Enumerator size when self, stop or step is a Float and step is negative returns 0 if value < limit"
  fails "Numeric#step with positional args when no block is given returned Enumerator size when self, stop or step is a Float and step is negative returns 1 if step is infinity_value"
  fails "Numeric#step with positional args when no block is given returned Enumerator size when self, stop or step is a Float and step is negative returns the difference between self and stop divided by the number of steps"
  fails "Numeric#step with positional args when no block is given returned Enumerator size when self, stop or step is a Float and step is positive returns 0 if value > limit"
  fails "Numeric#step with positional args when no block is given returned Enumerator size when self, stop or step is a Float and step is positive returns 1 if step is infinity_value"
  fails "Numeric#step with positional args when no block is given returned Enumerator size when self, stop or step is a Float and step is positive returns the difference between self and stop divided by the number of steps"
  fails "Numeric#step with positional args when no block is given returned Enumerator size when step is a String with self and stop as Fixnums raises an  when step is a numeric representation"
  fails "Numeric#step with positional args when no block is given returned Enumerator size when step is a String with self and stop as Fixnums raises an  with step as an alphanumeric string"
  fails "Numeric#step with positional args when no block is given returned Enumerator size when step is a String with self and stop as Floats raises an  when step is a numeric representation"
  fails "Numeric#step with positional args when no block is given returned Enumerator size when step is a String with self and stop as Floats raises an  with step as an alphanumeric string"
  fails "Numeric#step with positional args when step is a String with self and stop as Fixnums raises an  when step is a numeric representation"
  fails "Numeric#step with positional args when step is a String with self and stop as Fixnums raises an  with step as an alphanumeric string"
  fails "Numeric#step with positional args when step is a String with self and stop as Floats raises an  when step is a numeric representation"
  fails "Numeric#step with positional args when step is a String with self and stop as Floats raises an  with step as an alphanumeric string"
end
