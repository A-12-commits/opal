opal_filter "language" do
  fails "A class definition allows the declaration of class variables in a class method"
  fails "A class definition allows the declaration of class variables in an instance method"
  fails "A class definition allows the declaration of class variables in the body"
  fails "A class definition allows using self as the superclass if self is a class"
  fails "A class definition extending an object (sclass) can use return to cause the enclosing method to return"
  fails "A class definition extending an object (sclass) raises a TypeError when trying to extend numbers"
  fails "A class definition has no class variables"
  fails "A class definition raises a TypeError if inheriting from a metaclass"
  fails "A class definition raises TypeError if any constant qualifying the class is not a Module"
  fails "A class definition raises TypeError if constant given as class name exists and is not a Module"
  fails "A class definition raises TypeError if the constant qualifying the class is nil"
  fails "A class variable defined in a module can be accessed from classes that extend the module"
  fails "A class variable defined in a module can be accessed from modules that extend the module"
  fails "A class variable defined in a module can be accessed inside the class using the module methods"
  fails "A class variable defined in a module is defined in the extended module"
  fails "A class variable defined in a module is not defined in the extending module"
  fails "A class variable defined in a module is not defined in these classes"
  fails "A class variable defined in a module is only updated in the module a method defined in the module is used"
  fails "A class variable defined in a module is updated in the class when a Method defined in the class is used"
  fails "A constant on a metaclass appears in the metaclass constant list"
  fails "A constant on a metaclass cannot be accessed via object::CONST"
  fails "A constant on a metaclass does not appear in the object's class constant list"
  fails "A constant on a metaclass is not defined in the metaclass opener's scope"
  fails "A constant on a metaclass is not defined on the object's class"
  fails "A constant on a metaclass is not preserved when the object is duped"
  fails "A constant on a metaclass raises a NameError for anonymous_module::CONST"
  fails "A constant on a singleton class cannot be accessed via object::CONST"
  fails "A constant on a singleton class does not appear in the object's class constant list"
  fails "A constant on a singleton class is not defined in the singleton class opener's scope"
  fails "A constant on a singleton class is not defined on the object's class"
  fails "A constant on a singleton class is not preserved when the object is duped"
  fails "A constant on a singleton class raises a NameError for anonymous_module::CONST"
  fails "A method call evaluates block pass after arguments"
  fails "A number literal can be a binary literal with trailing 'i' to represent a Complex"
  fails "A number literal can be a binary literal with trailing 'r' to represent a Rational"
  fails "A number literal can be a decimal literal with trailing 'i' to represent a Complex"
  fails "A number literal can be a decimal literal with trailing 'r' to represent a Rational"
  fails "A number literal can be a hexadecimal literal with trailing 'i' to represent a Complex"
  fails "A number literal can be a hexadecimal literal with trailing 'r' to represent a Rational"
  fails "A number literal can be a octal literal with trailing 'i' to represent a Complex"
  fails "A number literal can be an integer literal with trailing 'i' to represent a Complex"
  fails "A number literal can be an integer literal with trailing 'r' to represent a Rational"
  fails "A number literal can be an octal literal with trailing 'r' to represent a Rational"
  fails "A singleton class doesn't have singleton class"
  fails "A singleton class for BasicObject has Class as it's superclass"
  fails "A singleton class for BasicObject has the proper level of superclass for Class"
  fails "A singleton class inherits from Class for classes"
  fails "A singleton class is a subclass of a superclass's singleton class"
  fails "A singleton class is a subclass of Class's singleton class"
  fails "A singleton class is a subclass of the same level of Class's singleton class"
  fails "A singleton class is a subclass of the same level of superclass's singleton class"
  fails "A singleton class raises a TypeError for Fixnum's"
  fails "A singleton class raises a TypeError for symbols"
  fails "An ensure block inside a begin block is executed even when a symbol is thrown in it's corresponding begin block"
  fails "An ensure block inside a method is executed even when a symbol is thrown in the method"
  fails "calling methods on the metaclass calls a method defined on the metaclass of the metaclass"
  fails "Class methods of a singleton class for a class include class methods of Class"
  fails "Class methods of a singleton class for a class include instance methods of the singleton class of Class"
  fails "Class methods of a singleton class for a singleton class include class methods of the singleton class of Class"
  fails "Instance methods of a singleton class for a singleton class includes instance methods of the singleton class of Class"
  fails "Instantiating a singleton class raises a TypeError when allocate is called"
  fails "Instantiating a singleton class raises a TypeError when new is called"
  fails "not() returns false if the argument is true"
  fails "not() returns true if the argument is false"
  fails "not() returns true if the argument is nil"
  fails "Operators * / % are left-associative"
  fails "self in a metaclass body (class << obj) raises a TypeError for numbers"
  fails "self in a metaclass body (class << obj) raises a TypeError for symbols"
  fails "The alias keyword is not allowed against Fixnum or String instances"
  fails "The alias keyword operates on methods defined via attr, attr_reader, and attr_accessor"
  fails "The alias keyword operates on methods with splat arguments defined in a superclass using text block for class eval"
  fails "The alias keyword operates on the object's metaclass when used in instance_eval"
  fails "The BEGIN keyword accesses variables outside the eval scope"
  fails "The BEGIN keyword must appear in a top-level context"
  fails "The BEGIN keyword runs first in a given code unit"
  fails "The BEGIN keyword runs in a shared scope"
  fails "The BEGIN keyword runs multiple begins in FIFO order"
  fails "The defined? keyword for a scoped constant does not call .const_missing if the constant is not defined"
  fails "The defined? keyword for a scoped constant returns nil when an undefined constant is scoped to a defined constant"
  fails "The defined? keyword for a simple constant does not call Object.const_missing if the constant is not defined"
  fails "The defined? keyword for a simple constant returns 'constant' for a constant defined in an included module"
  fails "The defined? keyword for a simple constant returns 'constant' for an included module"
  fails "The defined? keyword for a simple constant returns 'constant' when the constant is defined"
  fails "The defined? keyword for a simple constant returns nil when the constant is not defined"
  fails "The defined? keyword for a top-level scoped constant returns nil when an undefined constant is scoped to a defined constant"
  fails "The defined? keyword for an expression returns nil for an expression with != and an undefined method"
  fails "The defined? keyword for an expression returns nil for an expression with !~ and an undefined method"
  fails "The defined? keyword for an expression returns nil for an expression with == and an undefined method"
  fails "The defined? keyword for an expression with logical connectives does not propagate an exception raised by a method in a 'not' expression"
  fails "The defined? keyword for an expression with logical connectives returns nil for an expression with '!' and an undefined method"
  fails "The defined? keyword for an expression with logical connectives returns nil for an expression with '!' and an unset class variable"
  fails "The defined? keyword for an expression with logical connectives returns nil for an expression with '!' and an unset global variable"
  fails "The defined? keyword for an expression with logical connectives returns nil for an expression with '!' and an unset instance variable"
  fails "The defined? keyword for an expression with logical connectives returns nil for an expression with 'not' and an undefined method"
  fails "The defined? keyword for an expression with logical connectives returns nil for an expression with 'not' and an unset class variable"
  fails "The defined? keyword for an expression with logical connectives returns nil for an expression with 'not' and an unset global variable"
  fails "The defined? keyword for an expression with logical connectives returns nil for an expression with 'not' and an unset instance variable"
  fails "The defined? keyword for literals for a literal Array returns nil if all elements are not defined"
  fails "The defined? keyword for literals for a literal Array returns nil if one element is not defined"
  fails "The defined? keyword for loop expressions returns 'expression' for a 'retry' expression"
  fails "The defined? keyword for super for a method taking arguments returns nil from a #define_method when no superclass method exists"
  fails "The defined? keyword for super for a method taking arguments returns nil from a block in a #define_method when no superclass method exists"
  fails "The defined? keyword for super for a method taking arguments returns nil from a block when no superclass method exists"
  fails "The defined? keyword for super for a method taking arguments returns nil when no superclass method exists"
  fails "The defined? keyword for super for a method taking no arguments returns nil from a #define_method when no superclass method exists"
  fails "The defined? keyword for super for a method taking no arguments returns nil from a block in a #define_method when no superclass method exists"
  fails "The defined? keyword for super for a method taking no arguments returns nil from a block when no superclass method exists"
  fails "The defined? keyword for super for a method taking no arguments returns nil when no superclass method exists"
  fails "The defined? keyword for super returns nil when a superclass undef's the method"
  fails "The defined? keyword for variables returns 'instance-variable' for an instance variable that has been assigned to nil"
  fails "The defined? keyword for variables returns nil for a global variable that has been read but not assigned to"
  fails "The defined? keyword for variables when a Regexp matches a String returns nil for non-captures"
  fails "The defined? keyword for variables when a String matches a Regexp returns nil for non-captures"
  fails "The defined? keyword for yield returns nil if no block is passed to a method not taking a block parameter"
  fails "The defined? keyword for yield returns nil if no block is passed to a method taking a block parameter"
  fails "The defined? keyword when called with a method name having a local variable as receiver returns nil if the variable does not exist"
  fails "The defined? keyword when called with a method name having a method call as a receiver returns nil if evaluating the receiver raises an exception"
  fails "The defined? keyword when called with a method name having a module as receiver returns nil if the class is not defined"
  fails "The defined? keyword when called with a method name having a module as receiver returns nil if the subclass is not defined"
  fails "The if expression with a boolean range ('flip-flop' operator) allows combining two flip-flops"
  fails "The if expression with a boolean range ('flip-flop' operator) evaluates the first conditions lazily with exclusive-end range"
  fails "The if expression with a boolean range ('flip-flop' operator) evaluates the first conditions lazily with inclusive-end range"
  fails "The if expression with a boolean range ('flip-flop' operator) evaluates the second conditions lazily with exclusive-end range"
  fails "The if expression with a boolean range ('flip-flop' operator) evaluates the second conditions lazily with inclusive-end range"
  fails "The if expression with a boolean range ('flip-flop' operator) keeps flip-flops from interfering"
  fails "The if expression with a boolean range ('flip-flop' operator) mimics a sed conditional with a many-element exclusive-end range"
  fails "The if expression with a boolean range ('flip-flop' operator) mimics a sed conditional with a zero-element exclusive-end range"
  fails "The if expression with a boolean range ('flip-flop' operator) mimics an awk conditional with a many-element inclusive-end range"
  fails "The if expression with a boolean range ('flip-flop' operator) mimics an awk conditional with a single-element inclusive-end range"
  fails "The if expression with a boolean range ('flip-flop' operator) scopes state by flip-flop"
  fails "The or operator has a lower precedence than 'next' in 'next true or false'"
  fails "The redo statement in a method is invalid and raises a SyntaxError"
  fails "The redo statement triggers ensure block when re-executing a block"
  fails "The rescue keyword parses  'a += b rescue c' as 'a += (b rescue c)'"
  fails "The rescue keyword will execute an else block only if no exceptions were raised"
  fails "The rescue keyword will not rescue errors raised in an else block in the rescue block above it"
  fails "The rescue keyword without classes will not rescue Exception"
  fails "The retry keyword inside a begin block's rescue block causes the begin block to be executed again"
  fails "The retry statement raises a SyntaxError when used outside of a begin statement"
  fails "The retry statement re-executes the closest block"
  fails "The super keyword calls the correct method when the method visibility is modified"
  fails "The super keyword passes along modified rest args when they were originally empty"
  fails "The super keyword passes along modified rest args when they weren't originally empty"
  fails "The super keyword raises a RuntimeError when called with implicit arguments from a method defined with define_method"
  fails "The super keyword raises an error error when super method does not exist"
  fails "The super keyword uses given block even if arguments are passed explicitly"
  fails "The super keyword without explicit arguments passes arguments and rest arguments including any modifications"
  fails "The super keyword without explicit arguments passes optional arguments that have a default value but were modified"
  fails "The super keyword without explicit arguments passes optional arguments that have a default value"
  fails "The super keyword without explicit arguments passes optional arguments that have a non-default value but were modified"
  fails "The super keyword without explicit arguments passes rest arguments including any modifications"
  # can be removed when https://github.com/opal/opal/pull/1153 is merged
  fails "The undef keyword allows undefining multiple methods at a time"
  fails "The unpacking splat operator (*) unpacks arguments as if they were listed statically"
  fails "The until expression restarts the current iteration without reevaluating condition with redo"
  fails "The until modifier restarts the current iteration without reevaluating condition with redo"
  fails "The until modifier with begin .. end block evaluates condition after block execution"
  fails "The until modifier with begin .. end block restart the current iteration without reevaluting condition with redo"
  fails "The until modifier with begin .. end block runs block at least once (even if the expression is true)"
  fails "The until modifier with begin .. end block skips to end of body with next"
  fails "The __FILE__ pseudo-variable equals the absolute path of a file loaded by a relative path" # we can't clear $LOADED_FEATURES, should be treated as readonly
  fails "The __FILE__ pseudo-variable equals the absolute path of a file loaded by an absolute path" # we can't clear $LOADED_FEATURES, should be treated as readonly
end
