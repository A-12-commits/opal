opal_filter "Array" do
  fails "Array#flatten performs respond_to? and method_missing-aware checks when coercing elements to array"
  fails "Array#flatten with a non-Array object in the Array calls #method_missing if defined"
  fails "Array#join raises a NoMethodError if an element does not respond to #to_str, #to_ary, or #to_s"
  fails "Array#partition returns in the left array values for which the block evaluates to true"
  fails "Array#permutation when no block is given returned Enumerator size with an array size greater than 0 returns the descending factorial of array size and given length"
  fails "Array#permutation when no block is given returned Enumerator size with an array size greater than 0 returns the descending factorial of array size with array size when there's no param"
  fails "Array#permutation when no block is given returned Enumerator size with an empty array returns 1 when the given length is 0"
  fails "Array#permutation when no block is given returned Enumerator size with an empty array returns 1 when there's param"
  fails "Array#rassoc calls elem == obj on the second element of each contained array"
  fails "Array#rassoc does not check the last element in each contained but speficically the second"
  fails "Array#select returns a new array of elements for which block is true"
  fails "Array#sort_by! completes when supplied a block that always returns the same result"
  fails "Array#sort_by! makes some modification even if finished sorting when it would break in the given block"
  fails "Array#sort_by! raises a RuntimeError on a frozen array"
  fails "Array#sort_by! raises a RuntimeError on an empty frozen array"
  fails "Array#sort_by! returns an Enumerator if not given a block"
  fails "Array#sort_by! returns the specified value when it would break in the given block"
  fails "Array#sort_by! sorts array in place by passing each element to the given block"
  fails "Array#sort_by! when no block is given returned Enumerator size returns the enumerable size"
  fails "Array#uniq! properly handles recursive arrays"
  fails "Array#zip fills nil when the given enumereator is shorter than self"
  fails "Array.[] can unpack 2 or more nested referenced array"
end
