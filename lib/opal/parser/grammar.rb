#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.13
# from Racc grammer file "".
#

require 'racc/parser.rb'
module Opal
  class Parser < Racc::Parser


##### State transition tables begin ###

clist = [
'63,64,65,8,51,577,274,554,57,58,-461,274,577,61,274,59,60,62,23,24,66',
'67,-92,455,-100,97,621,22,28,27,90,89,91,92,546,533,17,545,108,655,-99',
'-84,7,41,6,9,94,93,84,50,86,85,87,-95,88,95,96,577,81,82,-92,38,39,-91',
'-97,-68,655,205,206,599,205,206,654,-100,-94,269,546,101,269,548,205',
'206,100,36,577,-99,30,620,577,52,273,54,-92,32,195,273,-100,40,273,654',
'-99,-79,205,206,-96,18,196,-84,-95,553,79,73,75,76,77,78,101,197,576',
'74,80,100,-97,101,-84,576,-91,56,100,-91,53,63,64,65,651,51,37,83,198',
'57,58,-94,-90,-84,61,-98,59,60,62,23,24,66,67,-84,309,-86,815,309,22',
'28,27,90,89,91,92,-91,-88,17,101,-538,576,906,598,100,41,-91,-85,94',
'93,84,50,86,85,87,781,88,95,96,-96,81,82,101,38,39,-90,101,100,576,246',
'101,100,576,300,-92,100,-92,-87,-100,-92,-100,-539,-99,-100,-99,210',
'301,-99,214,215,-95,52,-95,54,-98,-95,-449,609,309,40,730,730,-86,-449',
'-97,-93,-97,18,389,-97,655,655,79,73,75,76,77,78,-89,205,206,74,80,-94',
'-88,-94,730,-85,-94,56,392,-90,53,63,64,65,-538,51,37,83,101,57,58,654',
'654,100,61,-87,59,60,62,23,24,66,67,-89,611,610,607,792,22,28,27,90',
'89,91,92,-90,-86,219,-96,-539,-96,663,609,-96,41,-90,73,94,93,84,50',
'86,85,87,74,88,95,96,-88,81,82,-85,38,39,227,101,101,729,729,403,100',
'100,-86,-98,101,-98,758,-95,-98,100,-538,-87,-86,609,210,416,755,214',
'-539,-89,52,101,54,729,-88,224,100,-85,40,226,225,611,610,583,-88,584',
'218,-85,793,454,774,79,73,75,76,77,78,-87,345,344,74,80,265,266,921',
'-89,456,-87,56,758,267,53,63,64,65,-89,51,37,83,755,57,58,611,610,607',
'61,609,59,60,62,258,259,66,67,609,756,758,614,-97,257,28,27,90,89,91',
'92,755,881,219,342,341,345,344,609,882,41,204,457,94,93,84,50,86,85',
'87,262,88,95,96,609,81,82,215,38,39,101,-452,-459,345,344,100,203,201',
'-452,-459,611,610,612,756,202,205,206,-458,611,610,210,-91,-93,214,-458',
'818,52,584,54,-94,256,-100,254,488,40,-334,-334,611,610,616,756,101',
'218,-334,302,303,100,79,260,75,76,77,78,611,610,622,74,80,490,-457,921',
'199,-461,200,56,758,-457,53,63,64,65,-454,51,37,83,755,57,58,-454,546',
'492,61,548,59,60,62,258,259,66,67,-334,533,-334,632,499,257,28,27,90',
'89,91,92,-84,-67,219,342,341,345,344,516,633,41,-92,517,94,93,84,50',
'86,85,87,262,88,95,96,-455,81,82,518,38,39,-90,-455,-86,203,450,780',
'526,523,-456,604,-99,451,-95,756,524,-456,605,101,546,-88,210,548,100',
'214,401,402,52,527,54,-97,256,278,254,413,40,526,536,309,415,414,269',
'101,218,537,227,-85,100,79,260,75,76,77,78,529,530,-94,74,80,453,534',
'452,522,535,525,56,205,206,53,63,64,65,227,51,37,83,224,57,58,309,226',
'225,61,549,59,60,62,258,259,66,67,453,550,452,345,344,257,28,27,90,89',
'91,92,871,872,219,492,873,95,96,627,557,41,837,818,94,93,84,50,86,85',
'87,262,88,95,96,560,81,82,561,38,39,227,231,236,237,238,233,235,243',
'244,239,240,345,344,220,221,837,818,241,242,563,210,572,573,214,405',
'589,52,590,54,591,256,224,254,230,40,226,225,222,223,234,232,228,218',
'229,615,712,619,79,260,75,76,77,78,623,626,629,74,80,-266,245,712,-235',
'630,631,56,269,227,53,-258,-258,-258,227,-258,37,83,227,-258,-258,227',
'309,673,-258,674,-258,-258,-258,-258,-258,-258,-258,342,341,345,344',
'682,-258,-258,-258,-258,-258,-258,-258,684,-79,-258,342,341,345,344',
'627,685,-258,687,539,-258,-258,-258,-258,-258,-258,-258,-258,-258,-258',
'-258,697,-258,-258,703,-258,-258,227,231,236,237,238,233,235,243,244',
'239,240,704,705,220,221,710,720,241,242,722,-258,725,584,-258,269,733',
'-258,776,-258,-267,-258,224,-258,230,-258,226,225,222,223,234,232,228',
'-258,229,499,499,499,-258,-258,-258,-258,-258,-258,795,796,490,-258',
'-258,492,245,805,807,808,697,-258,812,269,-258,63,64,65,8,51,-258,-258',
'269,57,58,813,269,227,61,227,59,60,62,23,24,66,67,103,104,105,106,107',
'22,28,27,90,89,91,92,818,565,17,337,335,334,824,336,7,41,825,9,94,93',
'84,50,86,85,87,560,88,95,96,563,81,82,828,38,39,227,231,236,237,238',
'233,235,243,244,239,240,829,563,220,221,832,818,241,242,841,36,842,844',
'282,845,-538,52,847,54,855,32,224,857,230,40,226,225,222,223,234,232',
'228,18,229,860,861,863,79,73,75,76,77,78,865,867,869,74,80,-268,245',
'884,-235,885,886,56,887,889,53,63,64,65,890,51,37,83,697,57,58,-536',
'892,-266,61,896,59,60,62,258,259,66,67,103,104,105,106,107,257,292,296',
'90,89,91,92,901,565,219,337,335,334,903,336,909,293,911,912,94,93,84',
'50,86,85,87,309,88,95,96,925,81,82,-269,-452,-452,928,-539,227,563,526',
'586,-452,938,526,595,568,-536,587,939,944,860,593,571,946,865,290,865',
'867,287,955,961,52,703,54,971,286,-536,865,224,973,-287,-287,226,225',
'222,223,974,,-287,,,,79,73,75,76,77,78,-452,,-452,74,80,,585,,588,,594',
'56,525,,53,63,64,65,,51,297,83,,57,58,,,,61,,59,60,62,258,259,66,67',
'-287,,-287,,,257,292,296,90,89,91,92,,,219,526,595,,,,,293,,827,94,93',
'84,50,86,85,87,,88,95,96,,81,82,,768,,337,335,334,758,336,,,,-286,-286',
',,,755,,,-286,,,,290,-539,,214,,,52,,54,594,,525,,,,,339,753,103,104',
'105,106,107,342,341,345,344,79,73,75,76,77,78,,,,74,80,,,,299,,-286',
'56,-286,,53,63,64,65,227,51,297,83,,57,58,,,,61,756,59,60,62,258,259',
'66,67,,,,,,257,292,296,90,89,91,92,224,,219,,226,225,222,223,,41,,,94',
'93,84,50,86,85,87,,88,95,96,,81,82,,38,39,227,231,236,237,238,233,235',
'243,244,239,240,,,220,221,,,241,242,,210,,,214,,,52,,54,,,224,,230,40',
'226,225,222,223,234,232,228,218,229,,,,79,73,75,76,77,78,-289,-289,',
'74,80,,245,797,-289,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60',
'62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,565,219,337,335,334,-289',
'336,-289,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,227,231,236',
'237,238,233,235,243,244,239,240,,,220,221,,,241,242,,210,,,214,,,52',
',54,,,224,,230,40,226,225,222,223,234,232,228,218,229,,,,79,73,75,76',
'77,78,526,953,,74,80,,245,,954,,,56,,,53,63,64,65,,51,37,83,,57,58,',
',,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,952',
',588,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,227,231,236,237',
'238,233,235,243,244,239,240,,,220,221,,,241,242,,210,,,214,,,52,,54',
',,224,,230,40,226,225,222,223,234,232,228,218,229,,,,79,73,75,76,77',
'78,,,,74,80,,245,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60',
'62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,227,231,236,237,238,233,235,243,244',
'239,240,,,220,221,,,241,242,,210,,,214,,,52,,54,,,224,,230,40,226,225',
'222,223,234,232,228,18,229,,,,79,73,75,76,77,78,,,,74,80,,245,,,,,56',
',,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257',
'28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,262,88,95,96',
',81,82,,38,39,227,231,236,237,238,233,235,243,244,239,240,,,220,221',
',,241,242,,210,,,214,,,52,,54,,256,224,,230,40,226,225,222,223,234,232',
'228,218,229,,,,79,260,75,76,77,78,,,,74,80,,245,,,,,56,,,53,63,64,65',
',51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89',
'91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,262,88,95,96,,81,82,,38',
'39,227,231,236,237,238,233,235,243,244,239,240,,,220,221,,,241,242,',
'210,,,214,,,52,,54,,,224,,230,40,226,225,222,223,234,232,228,218,229',
',,,79,260,75,76,77,78,,,,74,80,,245,,,,,56,,,53,63,64,65,,51,37,83,',
'57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,',
',,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,227,231,236,237',
'238,233,235,243,244,239,240,,,220,221,,,241,242,,210,,,214,,,52,,54',
',,224,,230,40,226,225,222,223,234,232,228,18,229,,,,79,73,75,76,77,78',
',,,74,80,,245,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,84,50,86',
'85,87,,88,95,96,,81,82,,38,39,227,231,236,237,238,233,235,243,244,239',
'240,,,220,221,,,241,242,,210,,,214,,,52,,54,,,224,,230,40,226,225,222',
'223,234,232,228,18,229,,,,79,73,75,76,77,78,,,,74,80,,245,,,,,56,,,53',
'63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27',
'90,89,91,92,,,17,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,227,231,236,237,238,233,235,243,244,239,240,,,220,221,,,241,242,',
'210,,,214,,,52,,54,,,224,,230,40,226,225,222,223,234,232,228,18,229',
',,,79,73,75,76,77,78,,,,74,80,101,245,,,,100,56,,,53,63,64,65,,51,37',
'83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92',
',,219,,,,,,,293,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,768,,337,335',
'334,758,336,,,,,,,,,755,,328,,337,335,334,357,336,,30,,,52,,54,,32,',
',,,,339,,,,,,,342,341,345,344,79,73,75,76,77,78,339,,,74,80,,,342,341',
'345,344,56,,,53,63,64,65,798,51,297,83,,57,58,,,,61,756,59,60,62,258',
'259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,293,,,94,93,84,50',
'86,85,362,,88,95,96,227,81,82,,768,,337,335,334,758,336,,,,,,,241,242',
'755,,,,368,,,363,,,214,227,224,52,230,54,226,225,222,223,,,228,339,229',
',,,241,242,342,341,345,344,79,73,75,76,77,78,,,224,74,80,,226,225,222',
'223,,56,,,53,-535,-535,-535,,-535,297,83,,-535,-535,,,,-535,756,-535',
'-535,-535,-535,-535,-535,-535,,-535,,,,-535,-535,-535,-535,-535,-535',
'-535,,,-535,,,,,,,-535,,,-535,-535,-535,-535,-535,-535,-535,-535,-535',
'-535,-535,,-535,-535,,-535,-535,227,231,236,237,238,233,235,243,244',
'239,240,,,220,221,,,241,242,,-535,,,-535,-535,,-535,,-535,,-535,224',
'-535,230,-535,226,225,222,223,234,232,228,-535,229,-535,,,-535,-535',
'-535,-535,-535,-535,,,,-535,-535,,245,,,,,-535,,,-535,-536,-536,-536',
',-536,-535,-535,,-536,-536,,,,-536,,-536,-536,-536,-536,-536,-536,-536',
',-536,,,,-536,-536,-536,-536,-536,-536,-536,,,-536,,,,,,,-536,,,-536',
'-536,-536,-536,-536,-536,-536,-536,-536,-536,-536,,-536,-536,,-536,-536',
'227,231,236,237,238,233,235,243,244,239,240,,,220,221,,,241,242,,-536',
',,-536,-536,,-536,,-536,,-536,224,-536,230,-536,226,225,222,223,234',
'232,228,-536,229,-536,,,-536,-536,-536,-536,-536,-536,,,,-536,-536,',
'245,,,,,-536,,,-536,63,64,65,8,51,-536,-536,,57,58,,,,61,,59,60,62,23',
'24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,6,9,94,93,84,50,86',
'85,87,,88,95,96,,81,82,,38,39,227,231,236,237,238,233,235,243,244,239',
'240,,,220,221,,,241,242,,36,,,30,,,52,,54,,32,224,,230,40,226,225,222',
'223,234,232,228,18,229,,,,79,73,75,76,77,78,,,,74,80,,245,,,,405,56',
',,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28',
'27,90,89,91,92,,,17,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82',
',38,39,227,231,236,237,238,233,235,243,244,239,240,,,220,221,,,241,242',
',210,,,214,,,52,,54,,,224,,230,40,226,225,222,223,234,232,228,18,229',
',,,79,73,75,76,77,78,,,,74,80,,245,,,,,56,,,53,63,64,65,,51,37,83,,57',
'58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,',
'41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,227,231,236,237,238',
'233,235,243,244,239,240,,,220,221,,,241,242,,210,,,214,,,52,,54,,,224',
',230,40,226,225,222,223,234,232,228,18,229,,,,79,73,75,76,77,78,,,,74',
'80,,245,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,23,24',
'66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,84,50,86,85,87',
',88,95,96,,81,82,,38,39,227,231,236,237,238,233,235,243,244,239,240',
',,220,221,,,241,242,,210,,,214,,,52,,54,,,224,,230,40,226,225,222,223',
'234,232,228,18,229,,,,79,73,75,76,77,78,,,,74,80,,245,,,,,56,,,53,63',
'64,65,,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90',
'89,91,92,,,17,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,227,81,82,,38',
'39,565,,337,335,334,,336,,,,,241,242,,,328,,337,335,334,210,336,,214',
',224,52,230,54,226,225,222,223,,40,,,565,568,337,335,334,18,336,,571',
',79,73,75,76,77,78,339,323,,74,80,,,342,341,345,344,56,,,53,63,64,65',
'8,51,37,83,568,57,58,,,,61,834,59,60,62,23,24,66,67,,,,,,22,28,27,90',
'89,91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,328,,337,335,334,36,336,,30,,,52,,54,,32,,,,40,,,',
',,,,18,,,,,79,73,75,76,77,78,339,,556,74,80,,,342,341,345,344,56,,,53',
'63,64,65,8,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27',
'90,89,91,92,,,17,,,,,,7,41,6,9,94,93,84,50,86,85,87,,88,95,96,,81,82',
',38,39,,,,,,,,,,,,,,,,328,,337,335,334,36,336,,30,,,52,,54,,32,,,,40',
',,,,,,,18,,,,,79,73,75,76,77,78,339,,,74,80,,,342,341,345,344,56,,,53',
'63,64,65,8,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27',
'90,89,91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95,96,,81,82',
',38,39,227,231,236,237,238,233,235,243,244,239,240,,,-559,-559,,,241',
'242,,36,,,30,,,52,,54,,32,224,,230,40,226,225,222,223,234,232,228,18',
'229,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,',
'57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,219,,',
',,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,227,231,236,237',
'238,233,235,243,244,239,240,,,-559,-559,,,241,242,,210,,,214,,,52,,54',
',422,224,,230,40,226,225,222,223,234,232,228,218,229,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60',
'62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,227,-559,-559,-559,-559,233,235,,,-559',
'-559,,,,,,,241,242,,210,,,214,,,52,,54,,422,224,,230,40,226,225,222',
'223,234,232,228,218,229,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
'63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27',
'90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,227,81,82',
',38,39,,,,,,,,,,,,241,242,,,,,,,,210,,,214,,224,52,230,54,226,225,222',
'223,,40,228,,229,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
'63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,28',
'27,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,262,88,95,96,,81',
'82,,38,39,227,,,,,,,,,,,,,,,,,241,242,,210,,,214,,,52,,54,,256,224,',
'230,40,226,225,222,223,,,228,218,229,,,,79,260,75,76,77,78,,,,74,80',
',,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67',
',,,,,257,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,262',
'88,95,96,,81,82,,38,39,227,,,,,,,,,,,,,,,,,241,242,,210,,,214,,,52,',
'54,,256,224,,230,40,226,225,222,223,,,228,218,229,,,,79,260,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86',
'85,87,,88,95,96,,81,82,,38,39,227,-559,-559,-559,-559,233,235,,,-559',
'-559,,,,,,,241,242,,210,,,214,,,52,,54,,,224,,230,40,226,225,222,223',
'234,232,228,218,229,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64',
'65,,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89',
'91,92,,,17,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,227',
'-559,-559,-559,-559,233,235,,,-559,-559,,,,,,,241,242,,210,,,214,,,52',
',54,,,224,,230,40,226,225,222,223,234,232,228,18,229,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60',
'62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,227,-559,-559,-559,-559,233,235,,,-559',
'-559,,,,,,,241,242,,210,,,214,,,52,,54,,,224,,230,40,226,225,222,223',
'234,232,228,18,229,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64',
'65,8,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89',
'91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39',
'227,-559,-559,-559,-559,233,235,,,-559,-559,,,,,,,241,242,,36,,,30,',
',52,,54,,32,224,,230,40,226,225,222,223,234,232,228,18,229,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,',
'59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93',
'84,50,86,85,87,,88,95,96,,81,82,,38,39,227,-559,-559,-559,-559,233,235',
',,-559,-559,,,,,,,241,242,,210,,,214,,459,52,,54,,,224,,230,40,226,225',
'222,223,234,232,228,18,229,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,',
'53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257',
'292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96',
',81,82,,38,39,227,231,236,237,238,233,235,,,239,240,,,,,,,241,242,,210',
',,214,,,52,,54,,,224,,230,40,226,225,222,223,234,232,228,218,229,,,',
'79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,',
',,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,',
',,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,227,231,236,237',
'238,233,235,243,,239,240,,,,,,,241,242,,210,,,214,,,52,,54,,,224,,230',
'40,226,225,222,223,234,232,228,218,229,,,,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67',
',,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,',
'88,95,96,227,81,82,,38,39,,,,,,,,,,,,241,242,,,,,,,,210,,,214,,224,52',
'230,54,226,225,222,223,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67',
',,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,',
'88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40',
',,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51',
'37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91',
'92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,',
',,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59',
'60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94',
'93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,',
'214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,',
',56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,',
',,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,',
',,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51',
'37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91',
'92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,',
',,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59',
'60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94',
'93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,',
'214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,',
',56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,',
',,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,',
',,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51',
'37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91',
'92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,',
',,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59',
'60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94',
'93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,',
'214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,',
',56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,',
',,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,',
',,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51',
'37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91',
'92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,',
',,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59',
'60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94',
'93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,',
'214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,',
',56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,',
',,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,',
',,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51',
'37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91',
'92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,',
',,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59',
'60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94',
'93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,',
'214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,',
',56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,',
',,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,',
',,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51',
'37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91',
'92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,',
',,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59',
'60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94',
'93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,',
'214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,',
',56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,',
',,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,',
',,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51',
'37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91',
'92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,',
',,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59',
'60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94',
'93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,',
'214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,',
',56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,',
',,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,',
',,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51',
'37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91',
'92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,',
',,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59',
'60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94',
'93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,',
'214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,',
',56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,',
',,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,',
',,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51',
'37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91',
'92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,',
',,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59',
'60,62,258,259,66,67,,,,,,257,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93',
'84,50,86,85,87,262,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,',
'214,,,52,,54,,256,,254,,40,,,,,,,,218,,,,,79,260,75,76,77,78,,,,74,80',
',,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67',
',,,,,257,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,262',
'88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,508,,54,,256',
',254,,40,,,,,,,,218,,,,,79,260,75,76,77,78,,,,74,80,,,,,,,56,,,53,63',
'64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,28,27',
'90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,262,88,95,96,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,512,52,,54,,256,,254,,40,,,,,',
',,218,,,,,79,260,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,8,51,37',
'83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17',
',,,,,7,41,,9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,',
',,,,,,,,,,36,,,282,,,52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78',
',,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258',
'259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,293,,,94,93,84,50',
'86,85,87,,88,95,96,,81,82,,768,,337,335,334,758,336,,,,,,,,,755,,,,',
',,290,,,214,,,52,,54,,,,,,,,339,753,,,,,,342,341,345,344,79,73,75,76',
'77,78,,,,74,80,,,,520,,,56,,,53,63,64,65,8,51,297,83,,57,58,,,,61,756',
'59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94',
'93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,282',
',,52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56',
',,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257',
'292,296,90,89,91,92,,,219,,,,,,,293,,,94,93,84,50,86,85,87,,88,95,96',
',81,82,,,,,,,,,,,,,,,,,,,,,,,,290,,,287,,,52,,54,,,,,,,,,,,,,,,,,,,79',
'73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,297,83,,57,58,,,',
'61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,',
'41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,',
',,210,,,214,539,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,',
'74,80,,,,,,,56,,,53,63,64,65,8,51,37,83,,57,58,,,,61,,59,60,62,23,24',
'66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85',
'87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,54,,32',
',,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65',
',51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91',
'92,,,17,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,',
',,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60',
'62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52',
',54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63',
'64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296',
'90,89,91,92,,,219,,,,,,,293,,,94,93,84,50,86,85,362,,88,95,96,,81,82',
',,,,,,,,,,,,,,,,,,,,,,,363,,,214,,,52,,54,,,,,,,,,,,,,,,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,297,83,,57,58,,,,61,,59',
'60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,84',
'50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,',
'52,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
'63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292',
'296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81',
'82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,-258,-258,-258,,-258,37',
'83,,-258,-258,,,,-258,,-258,-258,-258,-258,-258,-258,-258,,,,,,-258',
'-258,-258,-258,-258,-258,-258,,,-258,,,,,,,-258,,,-258,-258,-258,-258',
'-258,-258,-258,-258,-258,-258,-258,,-258,-258,,-258,-258,,,,,,,,,,,',
',,,,,,,,,-258,,,-258,269,,-258,,-258,,-258,,-258,,-258,,,,,,,,-258,',
',,,-258,-258,-258,-258,-258,-258,,,,-258,-258,,,,,,,-258,,,-258,-540',
'-540,-540,,-540,-258,-258,,-540,-540,,,,-540,,-540,-540,-540,-540,-540',
'-540,-540,,,,,,-540,-540,-540,-540,-540,-540,-540,,,-540,,,,,,,-540',
',,-540,-540,-540,-540,-540,-540,-540,-540,-540,-540,-540,,-540,-540',
',-540,-540,,,,,,,,,,,,,,,,,,,,,-540,,,-540,-540,,-540,,-540,,-540,,-540',
',-540,,,,,,,,-540,,,,,-540,-540,-540,-540,-540,-540,,,,-540,-540,,,',
',,,-540,,,-540,-541,-541,-541,,-541,-540,-540,,-541,-541,,,,-541,,-541',
'-541,-541,-541,-541,-541,-541,,,,,,-541,-541,-541,-541,-541,-541,-541',
',,-541,,,,,,,-541,,,-541,-541,-541,-541,-541,-541,-541,-541,-541,-541',
'-541,,-541,-541,,-541,-541,,,,,,,,,,,,,,,,,,,,,-541,,,-541,-541,,-541',
',-541,,-541,,-541,,-541,,,,,,,,-541,,,,,-541,-541,-541,-541,-541,-541',
',,,-541,-541,,,,,,,-541,,,-541,-258,-258,-258,,-258,-541,-541,,-258',
'-258,,,,-258,,-258,-258,-258,-258,-258,-258,-258,,,,,,-258,-258,-258',
'-258,-258,-258,-258,,,-258,,,,,,,-258,,,-258,-258,-258,-258,-258,-258',
'-258,-258,-258,-258,-258,,-258,-258,,-258,-258,,,,,,,,,,,,,,,,,,,,,-258',
',,-258,269,,-258,,-258,,-258,,-258,,-258,,,,,,,,-258,,,,,-258,-258,-258',
'-258,-258,-258,,,,-258,-258,,,,,,,-258,,,-258,63,64,65,,51,-258,-258',
',57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,28,27,90,89,91,92,,,219',
',,,,,,41,,,94,93,84,50,86,85,87,262,88,95,96,,81,82,,38,39,,,,,,,,,',
',,,,,,,,,,,210,,,214,,,52,,54,,256,,,,40,,,,,,,,218,,,,,79,260,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60',
'62,258,259,66,67,,,,,,257,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,84',
'50,86,85,87,262,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214',
',,52,,54,,256,,,,40,,,,,,,,218,,,,,79,260,75,76,77,78,,,,74,80,,,,,',
',56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,',
',,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,',
',,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51',
'37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91',
'92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,',
',,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59',
'60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94',
'93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,',
'214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,',
',56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,',
',,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,',
',,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51',
'37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91',
'92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,262,88,95,96,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,660,,254,,40,,,,,,,,218,,,,',
'79,260,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58',
',,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,',
',,,41,,,94,93,84,50,86,85,87,262,88,95,96,,81,82,,38,39,,,,,,,,,,,,',
',,,,,,,,210,,,214,,,52,,54,,,,254,,40,,,,,,,,218,,,,,79,260,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62',
'258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84',
'50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,',
'52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,',
'53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28',
'27,90,89,91,92,,,17,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,678,52,,54,,,,254,,40,,,,,,,,18',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,8,51,37,83,,57',
'58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7',
'41,,9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,',
',,,36,,,30,,,52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74',
'80,,,,,,405,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259',
'66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,293,,,94,93,84,50,86',
'85,87,,88,95,96,,81,82,,,,,,,,,,,,,,,,,,,,,,,,290,,,287,,,52,,54,,,',
',,,,,,,,,,,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51',
'297,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,28,27,90,89,91',
'92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,262,88,95,96,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,256,,,,40,,,,,,,,218,,,,,79',
'260,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,',
'61,,59,60,62,258,259,66,67,,,,,,257,28,27,90,89,91,92,,,219,,,,,,,41',
',,94,93,84,50,86,85,87,262,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,',
',,210,,,214,,,52,,54,,256,,,,40,,,,,,,,218,,,,,79,260,75,76,77,78,,',
',74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259',
'66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85',
'87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,',
',,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64',
'65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90',
'89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79',
'73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61',
',59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41',
',,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210',
',,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,',
',,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,',
',,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,',
'18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,',
'57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219',
',,,,,,41,,,94,93,84,50,86,85,87,262,88,95,96,,81,82,,38,39,,,,,,,,,',
',,,,,,,,,,,210,,,214,,,52,,54,,660,,254,,40,,,,,,,,218,,,,,79,260,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59',
'60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94',
'93,84,50,86,85,87,262,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210',
',,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,260,75,76,77,78,,,,74,80,,',
',,,,56,,,53,63,64,65,8,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,',
',,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,',
',,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,8,51',
'37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,',
',17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,',
',,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62',
'258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,293,,,94,93,84',
'50,86,85,87,,88,95,96,,81,82,,,,,,,,,,,,,,,,,,,,,,,,716,,,214,,,52,',
'54,,,,,,,,,,,,,,,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64',
'65,8,51,297,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89',
'91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,8,51,37,83,,57,58,,,,61,,59',
'60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93',
'84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,',
',52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56',
',,53,63,64,65,8,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22',
'28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95,96,',
'81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,,,,,,,,18',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57',
'58,,,,61,,59,60,62,258,259,66,67,,,,,,257,28,27,90,89,91,92,,,219,,',
',,,,41,,,94,93,84,50,86,85,87,262,88,95,96,,81,82,,38,39,,,,,,,,,,,',
',,,,,,,,,210,,,214,,,52,,54,,256,,,,40,,,,,,,,218,,,,,79,260,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62',
'258,259,66,67,,,,,,257,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50',
'86,85,87,262,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,',
'52,,54,,256,,,,40,,,,,,,,218,,,,,79,260,75,76,77,78,,,,74,80,,,,,,,56',
',,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257',
'28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,262,88,95,96',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,256,,,,40,,,,',
',,,218,,,,,79,260,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37',
'83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17',
',,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,',
',,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,',
',,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,23,24',
'66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,84,50,86,85,87',
',88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,',
'40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,',
'51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89',
'91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,',
'59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,',
',94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210',
',,214,,,52,,54,,779,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67',
',,,,,22,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,',
',,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51',
'37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,',
',219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,',
',,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86',
'85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54',
',,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64',
'65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90',
'89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79',
'73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,8,51,37,83,,57,58,,,',
'61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9',
'94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36',
',,30,,,52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,',
',,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,',
',,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,',
',,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51',
'37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91',
'92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,',
',,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,8,51,37,83,,57,58,,,,61,,59',
'60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93',
'84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,',
',52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56',
',,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257',
'292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,262,88,95',
'96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,660,,254,,40',
',,,,,,,218,,,,,79,260,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51',
'37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91',
'92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,262,88,95,96,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,254,,40,,,,,,,,218,,,,,79',
'260,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,8,51,37,83,,57,58,,',
',61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,',
'9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36',
',,30,,,52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,',
',,,56,,,53,63,64,65,8,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,',
',,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95',
'96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,,,,',
',,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83',
',57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,',
'219,,,,,,,293,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,,,,,,,,,,,,,',
',,,,,,,,,290,,,287,,,52,,54,,,,,,,,,,,,,,,,,,,79,73,75,76,77,78,,,,74',
'80,,,,,,,56,,,53,63,64,65,,51,297,83,,57,58,,,,61,,59,60,62,258,259',
'66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,293,,,94,93,84,50,86',
'85,87,,88,95,96,,81,82,,,,,,,,,,,,,,,,,,,,,,,,290,,,287,,,52,,54,,,',
',,,,,,,,,,,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51',
'297,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91',
'92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,',
',,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,422,,,,40,,,,,,,,218,,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,',
'59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,',
',94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210',
',,214,,,52,,54,,256,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67',
',,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,84,50,86,85,87,,88,95',
'96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,',
',,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,8,51,37',
'83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17',
',,,,,7,41,,9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,',
',,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78',
',,,74,80,,,,,,,56,,,53,63,64,65,8,51,37,83,,57,58,,,,61,,59,60,62,23',
'24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,84,50,86',
'85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,54,',
'32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64',
'65,8,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89',
'91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59',
'60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94',
'93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,',
'214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,',
',56,,,53,63,64,65,8,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,',
',22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95',
'96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,,,,',
',,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83',
',57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,',
'219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,',
',,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86',
'85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54',
',,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64',
'65,,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89',
'91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,',
'59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,',
',94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210',
',,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,',
',,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,',
',,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,',
',,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51',
'37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91',
'92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,',
',,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59',
'60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94',
'93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,',
'214,,,52,,54,,256,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,',
',,,,56,,,53,63,64,65,8,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,',
',,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,',
',,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37',
'83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17',
',,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,',
',,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,',
',,74,80,,,,,,,56,,,53,63,64,65,8,51,37,83,,57,58,,,,61,,59,60,62,23',
'24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,84,50,86',
'85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,54,',
'32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64',
'65,8,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89',
'91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59',
'60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94',
'93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,',
'214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,',
',56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,',
',,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,',
',,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51',
'37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91',
'92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,',
',,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59',
'60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94',
'93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,',
'214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,',
',56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,',
',,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,262',
'88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,254',
',40,,,,,,,,218,,,,,79,260,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65',
'8,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91',
'92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,',
',,,,,,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59',
'60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,293,,,94',
'93,84,50,86,85,87,,88,95,96,,81,82,,,,,,,,,,,,,,,,,,,,,,,,933,,,214',
',,52,,54,,,,,,,,,,,,,,,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
'63,64,65,,51,297,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292',
'296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81',
'82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,660,,,,40,,,,,,,,218',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,8,51,37,83,,57',
'58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7',
'41,,9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,',
',,,36,,,30,,,52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74',
'80,,,,,,,56,,,53,63,64,65,8,51,37,83,,57,58,,,,61,,59,60,62,23,24,66',
'67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87',
',88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,',
'40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,',
'51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89',
'91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,660,,254,,40,,,,,,,,218,,,,',
'79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,8,51,37,83,,57,58',
',,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41',
',9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,',
'36,,,30,,,52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,63,64,65,8,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67',
',,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,',
',,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,8,51',
'37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,',
',17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,',
',,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,63,64,65,8,51,37,83,,57,58,,,,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,54',
',32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63',
'64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,28,27',
'90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,262,88,95,96,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,256,,,,40,,,,,,,,218',
',,,-542,79,260,75,76,77,78,-542,-542,-542,74,80,,-542,-542,,-542,,56',
',,53,,,,-542,,37,83,,,,,,,,-542,-542,,-542,-542,-542,-542,-542,,,,,',
',,,,,,,,,,,,,,,,-542,-542,-542,-542,-542,-542,-542,-542,-542,-542,-542',
'-542,-542,-542,-542,,,-542,-542,-542,,638,,,,-542,,,,,,-542,,-542,,-542',
'-542,-542,-542,-542,-542,-542,,-542,-542,-542,,,,,,,,,,,,,-542,-542',
',-87,,-542,,-286,-542,,-542,,,-96,-286,-286,-286,,,,-286,-286,,-286',
',,,,,,,,,,,,,,,,,,,-286,-286,,-286,-286,-286,-286,-286,,,,,,,,,,,,,',
',,,,,,,,-286,-286,-286,-286,-286,-286,-286,-286,-286,-286,-286,-286',
'-286,-286,-286,,,-286,-286,-286,,641,,,,-286,,,,,,-286,,-286,,-286,-286',
'-286,-286,-286,-286,-286,,-286,,-286,,,,,,,,,,,,,-286,-286,,-89,,-286',
',-542,-286,,-286,,,-98,-542,-542,-542,,,-542,-542,-542,,-542,,,,,,,',
',-542,-542,-542,,,,,,,,,-542,-542,,-542,-542,-542,-542,-542,,,,,,,,',
',,,,,,,,,,,,,-542,-542,-542,-542,-542,-542,-542,-542,-542,-542,-542',
'-542,-542,-542,-542,,,-542,-542,-542,,794,-542,,,-542,,-542,,-542,,-542',
',-542,,-542,-542,-542,-542,-542,-542,-542,,-542,-542,-542,,,,,,,,,,',
',,-542,-542,-542,-542,,-542,,-286,-542,,-542,,,-96,-286,-286,-286,,',
'-286,-286,-286,,-286,,,,,,,,,,-286,-286,,,,,,,,,-286,-286,,-286,-286',
'-286,-286,-286,,,,,,,,,,,,,,,,,,,,,,-286,-286,-286,-286,-286,-286,-286',
'-286,-286,-286,-286,-286,-286,-286,-286,,,-286,-286,-286,,641,-286,',
',-286,,-286,,-286,,-286,,-286,,-286,-286,-286,-286,-286,-286,-286,,-286',
',-286,,,,,,,,,,,,,-286,-286,-286,-286,,-286,,-295,-286,,-286,,,-98,-295',
'-295,-295,,,-295,-295,-295,,-295,,,,,,,,,,-295,-295,,,,,,,,,-295,-295',
',-295,-295,-295,-295,-295,,,,,,,,,,,,,,,,,,,,,,-295,-295,-295,-295,-295',
'-295,-295,-295,-295,-295,-295,-295,-295,-295,-295,,,-295,-295,-295,',
',-295,,278,-295,,-295,,-295,,-295,,-295,,-295,-295,-295,-295,-295,-295',
'-295,,-295,,-295,,,,,,,,,,,,,-295,-295,-295,-295,-281,-295,,,-295,,-295',
'-281,-281,-281,,,-281,-281,-281,,-281,,,,,,,,,,-281,-281,-281,,,,,,',
',-281,-281,,-281,-281,-281,-281,-281,,,,,,,,,,,,,,,,,,,,,,-281,-281',
'-281,-281,-281,-281,-281,-281,-281,-281,-281,-281,-281,-281,-281,,,-281',
'-281,-281,,,-281,,,-281,,-281,,-281,,-281,,-281,,-281,-281,-281,-281',
'-281,-281,-281,,-281,,-281,,,,,,,,,,,,,-281,-281,-281,-281,-558,-281',
',-281,-281,,-281,-558,-558,-558,,,-558,-558,-558,,-558,,,,,,,,,,-558',
',,,,,,,,,-558,-558,,-558,-558,-558,-558,-558,,,,,,,,,,,,-558,,,,,,,-558',
'-558,-558,,,-558,-558,-558,,-558,,,,,-558,-558,,,,-558,,,-558,,,,,269',
'-558,-558,-558,,-558,-558,-558,-558,-558,,,,,,,,,,,,-558,,,,,,,,,,,',
',-558,,-558,,,-558,,,-558,-558,,-558,,,,,-558,,-558,-558,-558,269,-558',
'-558,-558,-558,,-558,,,,,,,,,,-558,,,,,-558,,,,,-558,-558,,-558,-558',
'-558,-558,-558,-558,,-558,,,-558,437,441,,,439,,,,,,,,,142,143,139,121',
'122,123,130,127,129,,,124,125,-558,-558,,,144,145,131,132,-558,,,,,269',
'-558,,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119,,-558',
'146,,,,,,,,,,,,-558,,-558,,,-558,156,167,157,180,153,173,163,162,188',
'191,178,161,160,155,181,189,190,165,154,168,172,174,166,159,,,,175,182',
'177,176,169,179,164,152,171,170,183,184,185,186,187,151,158,149,150',
'147,148,111,113,110,,112,,,,,,,,,142,143,139,121,122,123,130,127,129',
',,124,125,,,,,144,145,131,132,,,,,,,,,,,,136,135,,120,141,138,137,133',
'134,128,126,118,140,119,,,146,192,,,,,,,,,,80,156,167,157,180,153,173',
'163,162,188,191,178,161,160,155,181,189,190,165,154,168,172,174,166',
'159,,,,175,182,177,176,169,179,164,152,171,170,183,184,185,186,187,151',
'158,149,150,147,148,111,113,,,112,,,,,,,,,142,143,139,121,122,123,130',
'127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,,,136,135,,120,141,138',
'137,133,134,128,126,118,140,119,,,146,192,,,,,,,,,,80,156,167,157,180',
'153,173,163,162,188,191,178,161,160,155,181,189,190,165,154,168,172',
'174,166,159,,,,175,182,177,176,169,179,164,152,171,170,183,184,185,186',
'187,151,158,149,150,147,148,111,113,,,112,,,,,,,,,142,143,139,121,122',
'123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,,,136,135,,120',
'141,138,137,133,134,128,126,118,140,119,,,146,192,,,,,,,,,,80,156,167',
'157,180,153,173,163,162,188,191,178,161,160,155,181,189,190,165,154',
'168,172,174,166,159,,,,175,182,177,176,169,179,164,152,171,170,183,184',
'185,186,187,151,158,149,150,147,148,111,113,,,112,,,,,,,,,142,143,139',
'121,122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,,,136',
'135,,120,141,138,137,133,134,128,126,118,140,119,,,146,192,,,,,,,,,',
'80,156,167,157,180,153,173,163,162,188,191,178,161,160,155,181,189,190',
'165,154,168,172,174,166,159,,,,175,182,177,377,376,378,375,152,171,170',
'183,184,185,186,187,151,158,149,150,373,374,371,113,86,85,372,,88,,',
',,,,142,143,139,121,122,123,130,127,129,,,124,125,,,,,144,145,131,132',
',,,,,382,,,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119,',
',146,156,167,157,180,153,173,163,162,188,191,178,161,160,155,181,189',
'190,165,154,168,172,174,166,159,,,,175,182,177,176,169,179,164,152,171',
'170,183,184,185,186,187,151,158,149,150,147,148,111,113,399,398,112',
',400,,,,,,,142,143,139,121,122,123,130,127,129,,,124,125,,,,,144,145',
'131,132,,,,,,,,,,,,136,135,,120,141,138,137,133,134,128,126,118,140',
'119,,,146,156,167,157,180,153,173,163,162,188,191,178,161,160,155,181',
'189,190,165,154,168,172,174,166,159,,,,175,182,177,176,169,179,164,152',
'171,170,183,184,185,186,187,151,158,149,150,147,148,111,113,399,398',
'112,,400,,,,,,,142,143,139,121,122,123,130,127,129,,,124,125,,,,,144',
'145,131,132,,,,,,,,,,,,136,135,,120,141,138,137,133,134,128,126,118',
'140,119,,,146,156,167,157,180,153,173,163,162,188,191,178,161,160,155',
'181,189,190,165,154,168,172,174,166,159,,,,175,182,177,176,169,179,164',
'152,171,170,183,184,185,186,187,151,158,149,150,147,148,111,113,,,112',
',,,,,,,,142,143,139,121,122,123,130,127,129,,,124,125,,,,,144,145,131',
'132,,,,,,,,,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119',
'431,435,146,,432,,,,,,,,,142,143,139,121,122,123,130,127,129,,,124,125',
',,,,144,145,131,132,,,,,,269,,,,,,136,135,,120,141,138,137,133,134,128',
'126,118,140,119,444,435,146,,445,,,,,,,,,142,143,139,121,122,123,130',
'127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,,,136,135,,120,141,138',
'137,133,134,128,126,118,140,119,444,435,146,,445,,,,,,,,,142,143,139',
'121,122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,,,136',
'135,,120,141,138,137,133,134,128,126,118,140,119,444,435,146,,445,,',
',,,,,,142,143,139,121,122,123,130,127,129,,,124,125,,,,,144,145,131',
'132,,,,,,,,,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119',
'444,435,146,,445,,,,,,,,,142,143,139,121,122,123,130,127,129,,,124,125',
',,,,144,145,131,132,,,,,,,,,,,,136,135,,120,141,138,137,133,134,128',
'126,118,140,119,644,435,146,,645,,,,,,,,,142,143,139,121,122,123,130',
'127,129,,,124,125,,,,,144,145,131,132,,,,,,269,,,,,,136,135,,120,141',
'138,137,133,134,128,126,118,140,119,646,441,146,,647,,,,,,,,,142,143',
'139,121,122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,',
',136,135,,120,141,138,137,133,134,128,126,118,140,119,689,435,146,,690',
',,,,,,,,142,143,139,121,122,123,130,127,129,,,124,125,,,,,144,145,131',
'132,,,,,,269,,,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119',
'692,441,146,,693,,,,,,,,,142,143,139,121,122,123,130,127,129,,,124,125',
',,,,144,145,131,132,,,,,,,,,,,,136,135,,120,141,138,137,133,134,128',
'126,118,140,119,444,435,146,,445,,,,,,,,,142,143,139,121,122,123,130',
'127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,,,136,135,,120,141,138',
'137,133,134,128,126,118,140,119,644,435,146,,645,,,,,,,,,142,143,139',
'121,122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,269,,,,,',
'136,135,,120,141,138,137,133,134,128,126,118,140,119,646,441,146,,647',
',,,,,,,,142,143,139,121,122,123,130,127,129,,,124,125,,,,,144,145,131',
'132,,,,,,,,,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119',
'737,435,146,,738,,,,,,,,,142,143,139,121,122,123,130,127,129,,,124,125',
',,,,144,145,131,132,,,,,,269,,,,,,136,135,,120,141,138,137,133,134,128',
'126,118,140,119,739,441,146,,740,,,,,,,,,142,143,139,121,122,123,130',
'127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,,,136,135,,120,141,138',
'137,133,134,128,126,118,140,119,745,441,146,,743,,,,,,,,,142,143,139',
'121,122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,,,136',
'135,,120,141,138,137,133,134,128,126,118,140,119,444,435,146,,445,,',
',,,,,,142,143,139,121,122,123,130,127,129,,,124,125,,,,,144,145,131',
'132,,,,,,269,,,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119',
'745,441,146,,898,,,,,,,,,142,143,139,121,122,123,130,127,129,,,124,125',
',,,,144,145,131,132,,,,,,,,,,,,136,135,,120,141,138,137,133,134,128',
'126,118,140,119,966,435,146,,967,,,,,,,,,142,143,139,121,122,123,130',
'127,129,,,124,125,,,,,144,145,131,132,,,,,,269,,,,,,136,135,,120,141',
'138,137,133,134,128,126,118,140,119,968,441,146,,969,,,,,,,,,142,143',
'139,121,122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,',
',136,135,,120,141,138,137,133,134,128,126,118,140,119,,,146' ]
        racc_action_table = arr = ::Array.new(25330, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'0,0,0,0,0,348,55,322,0,0,209,26,349,0,294,0,0,0,0,0,0,0,355,211,358',
'1,393,0,0,0,0,0,0,0,314,454,0,314,6,486,589,288,0,0,0,0,0,0,0,0,0,0',
'0,737,0,0,0,843,0,0,209,0,0,291,738,684,499,311,311,367,606,606,486',
'211,844,26,315,3,294,315,458,458,3,0,895,454,0,393,902,0,55,0,931,0',
'9,26,934,0,294,499,955,684,701,701,739,0,10,288,966,322,0,0,0,0,0,0',
'348,11,348,0,0,348,967,349,355,349,358,0,349,291,0,17,17,17,458,17,0',
'0,12,17,17,974,589,288,17,740,17,17,17,17,17,17,17,288,311,737,701,606',
'17,17,17,17,17,17,17,291,738,17,843,739,843,843,367,843,17,291,844,17',
'17,17,17,17,17,17,631,17,17,17,968,17,17,367,17,17,527,895,367,895,20',
'902,895,902,34,931,902,931,739,934,931,934,740,955,934,955,17,36,955',
'17,17,966,17,966,17,969,966,371,494,41,17,579,580,689,371,967,631,967',
'17,77,967,509,510,17,17,17,17,17,17,740,750,750,17,17,974,690,974,846',
'812,974,17,78,527,17,18,18,18,968,18,17,17,279,18,18,509,510,279,18',
'692,18,18,18,18,18,18,18,693,494,494,494,644,18,18,18,18,18,18,18,527',
'689,18,968,969,968,494,617,968,18,527,71,18,18,18,18,18,18,18,71,18',
'18,18,690,18,18,812,18,18,462,579,580,579,580,97,579,580,689,969,750',
'969,857,644,969,750,692,692,689,384,18,193,857,18,693,693,18,846,18',
'846,690,462,846,812,18,462,462,617,617,353,690,353,18,812,645,210,617',
'18,18,18,18,18,18,692,857,857,18,18,25,25,863,693,212,692,18,863,25',
'18,22,22,22,693,22,18,18,863,22,22,384,384,384,22,386,22,22,22,22,22',
'22,22,388,857,865,388,645,22,22,22,22,22,22,22,865,795,22,863,863,863',
'863,390,796,22,14,213,22,22,22,22,22,22,22,22,22,22,22,395,22,22,219',
'22,22,352,372,373,865,865,352,13,13,372,373,386,386,386,863,13,15,15',
'374,388,388,22,14,795,22,374,941,22,941,22,796,22,14,22,251,22,42,42',
'390,390,390,865,599,22,42,37,37,599,22,22,22,22,22,22,395,395,395,22',
'22,252,375,946,13,35,13,22,946,375,22,23,23,23,376,23,22,22,946,23,23',
'376,318,255,23,318,23,23,23,23,23,23,23,42,301,42,431,268,23,23,23,23',
'23,23,23,35,281,23,946,946,946,946,283,432,23,35,284,23,23,23,23,23',
'23,23,23,23,23,23,377,23,23,285,23,23,301,377,431,208,208,630,289,289',
'378,380,301,208,431,946,289,378,380,748,706,432,23,706,748,23,83,83',
'23,290,23,432,23,292,23,110,23,304,304,293,110,110,296,754,23,304,463',
'630,754,23,23,23,23,23,23,297,297,630,23,23,208,302,208,289,303,289',
'23,347,347,23,24,24,24,306,24,23,23,463,24,24,313,463,463,24,316,24',
'24,24,24,24,24,24,304,317,304,563,563,24,24,24,24,24,24,24,772,772,24',
'319,772,772,772,420,327,24,724,724,24,24,24,24,24,24,24,24,24,24,24',
'328,24,24,330,24,24,420,420,420,420,420,420,420,420,420,420,420,860',
'860,420,420,956,956,420,420,331,24,343,346,24,354,357,24,359,24,363',
'24,420,24,420,24,420,420,420,420,420,420,420,24,420,389,557,392,24,24',
'24,24,24,24,411,417,423,24,24,425,420,829,420,429,430,24,438,464,24',
'27,27,27,465,27,24,24,466,27,27,467,501,504,27,505,27,27,27,27,27,27',
'27,557,557,557,557,511,27,27,27,27,27,27,27,515,516,27,829,829,829,829',
'650,519,27,521,528,27,27,27,27,27,27,27,27,27,27,27,531,27,27,540,27',
'27,650,650,650,650,650,650,650,650,650,650,650,541,542,650,650,555,566',
'650,650,570,27,575,581,27,27,582,27,621,27,628,27,650,27,650,27,650',
'650,650,650,650,650,650,27,650,634,639,642,27,27,27,27,27,27,648,649',
'657,27,27,659,650,672,676,679,686,27,688,691,27,30,30,30,30,30,27,27',
'694,30,30,695,696,699,30,700,30,30,30,30,30,30,30,5,5,5,5,5,30,30,30',
'30,30,30,30,702,571,30,571,571,571,708,571,30,30,709,30,30,30,30,30',
'30,30,30,712,30,30,30,714,30,30,716,30,30,675,675,675,675,675,675,675',
'675,675,675,675,717,718,675,675,721,726,675,675,732,30,734,736,30,741',
'745,30,746,30,757,30,675,761,675,30,675,675,675,675,675,675,675,30,675',
'762,764,765,30,30,30,30,30,30,766,768,771,30,30,778,675,799,675,800',
'804,30,806,809,30,31,31,31,810,31,30,30,811,31,31,362,816,819,31,820',
'31,31,31,31,31,31,31,280,280,280,280,280,31,31,31,31,31,31,31,835,339',
'31,339,339,339,838,339,848,31,851,852,31,31,31,31,31,31,31,853,31,31',
'31,875,31,31,876,362,362,888,898,481,899,356,356,362,904,365,365,339',
'362,356,905,913,915,365,339,918,919,31,920,921,31,933,943,31,951,31',
'960,31,362,962,481,963,591,591,481,481,481,481,965,,591,,,,31,31,31',
'31,31,31,362,,362,31,31,,356,,356,,365,31,365,,31,32,32,32,,32,31,31',
',32,32,,,,32,,32,32,32,32,32,32,32,591,,591,,,32,32,32,32,32,32,32,',
',32,715,715,,,,,32,,715,32,32,32,32,32,32,32,,32,32,32,,32,32,,602,',
'602,602,602,602,602,,,,743,743,,,,602,,,743,,,,32,743,,32,,,32,,32,715',
',715,,,,,602,602,683,683,683,683,683,602,602,602,602,32,32,32,32,32',
'32,,,,32,32,,,,32,,743,32,743,,32,38,38,38,482,38,32,32,,38,38,,,,38',
'602,38,38,38,38,38,38,38,,,,,,38,38,38,38,38,38,38,482,,38,,482,482',
'482,482,,38,,,38,38,38,38,38,38,38,,38,38,38,,38,38,,38,38,652,652,652',
'652,652,652,652,652,652,652,652,,,652,652,,,652,652,,38,,,38,,,38,,38',
',,652,,652,38,652,652,652,652,652,652,652,38,652,,,,38,38,38,38,38,38',
'845,845,,38,38,,652,652,845,,,38,,,38,39,39,39,,39,38,38,,39,39,,,,39',
',39,39,39,39,39,39,39,,,,,,39,39,39,39,39,39,39,,834,39,834,834,834',
'845,834,845,39,,,39,39,39,39,39,39,39,,39,39,39,,39,39,,39,39,19,19',
'19,19,19,19,19,19,19,19,19,,,19,19,,,19,19,,39,,,39,,,39,,39,,,19,,19',
'39,19,19,19,19,19,19,19,39,19,,,,39,39,39,39,39,39,932,932,,39,39,,19',
',932,,,39,,,39,40,40,40,,40,39,39,,40,40,,,,40,,40,40,40,40,40,40,40',
',,,,,40,40,40,40,40,40,40,,,40,,,,932,,932,40,,,40,40,40,40,40,40,40',
',40,40,40,,40,40,,40,40,249,249,249,249,249,249,249,249,249,249,249',
',,249,249,,,249,249,,40,,,40,,,40,,40,,,249,,249,40,249,249,249,249',
'249,249,249,40,249,,,,40,40,40,40,40,40,,,,40,40,,249,,,,,40,,,40,52',
'52,52,,52,40,40,,52,52,,,,52,,52,52,52,52,52,52,52,,,,,,52,52,52,52',
'52,52,52,,,52,,,,,,,52,,,52,52,52,52,52,52,52,,52,52,52,,52,52,,52,52',
'428,428,428,428,428,428,428,428,428,428,428,,,428,428,,,428,428,,52',
',,52,,,52,,52,,,428,,428,52,428,428,428,428,428,428,428,52,428,,,,52',
'52,52,52,52,52,,,,52,52,,428,,,,,52,,,52,53,53,53,,53,52,52,,53,53,',
',,53,,53,53,53,53,53,53,53,,,,,,53,53,53,53,53,53,53,,,53,,,,,,,53,',
',53,53,53,53,53,53,53,53,53,53,53,,53,53,,53,53,447,447,447,447,447',
'447,447,447,447,447,447,,,447,447,,,447,447,,53,,,53,,,53,,53,,53,447',
',447,53,447,447,447,447,447,447,447,53,447,,,,53,53,53,53,53,53,,,,53',
'53,,447,,,,,53,,,53,54,54,54,,54,53,53,,54,54,,,,54,,54,54,54,54,54',
'54,54,,,,,,54,54,54,54,54,54,54,,,54,,,,,,,54,,,54,54,54,54,54,54,54',
'54,54,54,54,,54,54,,54,54,538,538,538,538,538,538,538,538,538,538,538',
',,538,538,,,538,538,,54,,,54,,,54,,54,,,538,,538,54,538,538,538,538',
'538,538,538,54,538,,,,54,54,54,54,54,54,,,,54,54,,538,,,,,54,,,54,57',
'57,57,,57,54,54,,57,57,,,,57,,57,57,57,57,57,57,57,,,,,,57,57,57,57',
'57,57,57,,,57,,,,,,,57,,,57,57,57,57,57,57,57,,57,57,57,,57,57,,57,57',
'698,698,698,698,698,698,698,698,698,698,698,,,698,698,,,698,698,,57',
',,57,,,57,,57,,,698,,698,57,698,698,698,698,698,698,698,57,698,,,,57',
'57,57,57,57,57,,,,57,57,,698,,,,,57,,,57,58,58,58,,58,57,57,,58,58,',
',,58,,58,58,58,58,58,58,58,,,,,,58,58,58,58,58,58,58,,,58,,,,,,,58,',
',58,58,58,58,58,58,58,,58,58,58,,58,58,,58,58,777,777,777,777,777,777',
'777,777,777,777,777,,,777,777,,,777,777,,58,,,58,,,58,,58,,,777,,777',
'58,777,777,777,777,777,777,777,58,777,,,,58,58,58,58,58,58,,,,58,58',
',777,,,,,58,,,58,61,61,61,,61,58,58,,61,61,,,,61,,61,61,61,61,61,61',
'61,,,,,,61,61,61,61,61,61,61,,,61,,,,,,,61,,,61,61,61,61,61,61,61,,61',
'61,61,,61,61,,61,61,783,783,783,783,783,783,783,783,783,783,783,,,783',
'783,,,783,783,,61,,,61,,,61,,61,,,783,,783,61,783,783,783,783,783,783',
'783,61,783,,,,61,61,61,61,61,61,,,,61,61,61,783,,,,61,61,,,61,62,62',
'62,,62,61,61,,62,62,,,,62,,62,62,62,62,62,62,62,,,,,,62,62,62,62,62',
'62,62,,,62,,,,,,,62,,,62,62,62,62,62,62,62,,62,62,62,,62,62,,753,,753',
'753,753,753,753,,,,,,,,,753,,654,,654,654,654,62,654,,62,,,62,,62,,62',
',,,,,753,,,,,,,753,753,753,753,62,62,62,62,62,62,654,,,62,62,,,654,654',
'654,654,62,,,62,63,63,63,654,63,62,62,,63,63,,,,63,753,63,63,63,63,63',
'63,63,,,,,,63,63,63,63,63,63,63,,,63,,,,,,,63,,,63,63,63,63,63,63,63',
',63,63,63,472,63,63,,861,,861,861,861,861,861,,,,,,,472,472,861,,,,63',
',,63,,,63,470,472,63,472,63,472,472,472,472,,,472,861,472,,,,470,470',
'861,861,861,861,63,63,63,63,63,63,,,470,63,63,,470,470,470,470,,63,',
',63,84,84,84,,84,63,63,,84,84,,,,84,861,84,84,84,84,84,84,84,,84,,,',
'84,84,84,84,84,84,84,,,84,,,,,,,84,,,84,84,84,84,84,84,84,84,84,84,84',
',84,84,,84,84,785,785,785,785,785,785,785,785,785,785,785,,,785,785',
',,785,785,,84,,,84,84,,84,,84,,84,785,84,785,84,785,785,785,785,785',
'785,785,84,785,84,,,84,84,84,84,84,84,,,,84,84,,785,,,,,84,,,84,87,87',
'87,,87,84,84,,87,87,,,,87,,87,87,87,87,87,87,87,,87,,,,87,87,87,87,87',
'87,87,,,87,,,,,,,87,,,87,87,87,87,87,87,87,87,87,87,87,,87,87,,87,87',
'788,788,788,788,788,788,788,788,788,788,788,,,788,788,,,788,788,,87',
',,87,87,,87,,87,,87,788,87,788,87,788,788,788,788,788,788,788,87,788',
'87,,,87,87,87,87,87,87,,,,87,87,,788,,,,,87,,,87,99,99,99,99,99,87,87',
',99,99,,,,99,,99,99,99,99,99,99,99,,,,,,99,99,99,99,99,99,99,,,99,,',
',,,99,99,99,99,99,99,99,99,99,99,99,,99,99,99,,99,99,,99,99,790,790',
'790,790,790,790,790,790,790,790,790,,,790,790,,,790,790,,99,,,99,,,99',
',99,,99,790,,790,99,790,790,790,790,790,790,790,99,790,,,,99,99,99,99',
'99,99,,,,99,99,,790,,,,99,99,,,99,103,103,103,,103,99,99,,103,103,,',
',103,,103,103,103,103,103,103,103,,,,,,103,103,103,103,103,103,103,',
',103,,,,,,,103,,,103,103,103,103,103,103,103,,103,103,103,,103,103,',
'103,103,878,878,878,878,878,878,878,878,878,878,878,,,878,878,,,878',
'878,,103,,,103,,,103,,103,,,878,,878,103,878,878,878,878,878,878,878',
'103,878,,,,103,103,103,103,103,103,,,,103,103,,878,,,,,103,,,103,104',
'104,104,,104,103,103,,104,104,,,,104,,104,104,104,104,104,104,104,,',
',,,104,104,104,104,104,104,104,,,104,,,,,,,104,,,104,104,104,104,104',
'104,104,,104,104,104,,104,104,,104,104,880,880,880,880,880,880,880,880',
'880,880,880,,,880,880,,,880,880,,104,,,104,,,104,,104,,,880,,880,104',
'880,880,880,880,880,880,880,104,880,,,,104,104,104,104,104,104,,,,104',
'104,,880,,,,,104,,,104,105,105,105,,105,104,104,,105,105,,,,105,,105',
'105,105,105,105,105,105,,,,,,105,105,105,105,105,105,105,,,105,,,,,',
',105,,,105,105,105,105,105,105,105,,105,105,105,,105,105,,105,105,926',
'926,926,926,926,926,926,926,926,926,926,,,926,926,,,926,926,,105,,,105',
',,105,,105,,,926,,926,105,926,926,926,926,926,926,926,105,926,,,,105',
'105,105,105,105,105,,,,105,105,,926,,,,,105,,,105,106,106,106,,106,105',
'105,,106,106,,,,106,,106,106,106,106,106,106,106,,,,,,106,106,106,106',
'106,106,106,,,106,,,,,,,106,,,106,106,106,106,106,106,106,,106,106,106',
'468,106,106,,106,106,568,,568,568,568,,568,,,,,468,468,,,56,,56,56,56',
'106,56,,106,,468,106,468,106,468,468,468,468,,106,,,722,568,722,722',
'722,106,722,,568,,106,106,106,106,106,106,56,56,,106,106,,,56,56,56',
'56,106,,,106,107,107,107,107,107,106,106,722,107,107,,,,107,722,107',
'107,107,107,107,107,107,,,,,,107,107,107,107,107,107,107,,,107,,,,,',
'107,107,,107,107,107,107,107,107,107,107,,107,107,107,,107,107,,107',
'107,,,,,,,,,,,,,,,,323,,323,323,323,107,323,,107,,,107,,107,,107,,,',
'107,,,,,,,,107,,,,,107,107,107,107,107,107,323,,323,107,107,,,323,323',
'323,323,107,,,107,108,108,108,108,108,107,107,,108,108,,,,108,,108,108',
'108,108,108,108,108,,,,,,108,108,108,108,108,108,108,,,108,,,,,,108',
'108,108,108,108,108,108,108,108,108,108,,108,108,108,,108,108,,108,108',
',,,,,,,,,,,,,,,561,,561,561,561,108,561,,108,,,108,,108,,108,,,,108',
',,,,,,,108,,,,,108,108,108,108,108,108,561,,,108,108,,,561,561,561,561',
'108,,,108,195,195,195,195,195,108,108,,195,195,,,,195,,195,195,195,195',
'195,195,195,,,,,,195,195,195,195,195,195,195,,,195,,,,,,195,195,,195',
'195,195,195,195,195,195,195,,195,195,195,,195,195,,195,195,460,460,460',
'460,460,460,460,460,460,460,460,,,460,460,,,460,460,,195,,,195,,,195',
',195,,195,460,,460,195,460,460,460,460,460,460,460,195,460,,,,195,195',
'195,195,195,195,,,,195,195,,,,,,,195,,,195,196,196,196,,196,195,195',
',196,196,,,,196,,196,196,196,196,196,196,196,,,,,,196,196,196,196,196',
'196,196,,,196,,,,,,,196,,,196,196,196,196,196,196,196,,196,196,196,',
'196,196,,196,196,461,461,461,461,461,461,461,461,461,461,461,,,461,461',
',,461,461,,196,,,196,,,196,,196,,196,461,,461,196,461,461,461,461,461',
'461,461,196,461,,,,196,196,196,196,196,196,,,,196,196,,,,,,,196,,,196',
'197,197,197,,197,196,196,,197,197,,,,197,,197,197,197,197,197,197,197',
',,,,,197,197,197,197,197,197,197,,,197,,,,,,,197,,,197,197,197,197,197',
'197,197,,197,197,197,,197,197,,197,197,471,471,471,471,471,471,471,',
',471,471,,,,,,,471,471,,197,,,197,,,197,,197,,197,471,,471,197,471,471',
'471,471,471,471,471,197,471,,,,197,197,197,197,197,197,,,,197,197,,',
',,,,197,,,197,198,198,198,,198,197,197,,198,198,,,,198,,198,198,198',
'198,198,198,198,,,,,,198,198,198,198,198,198,198,,,198,,,,,,,198,,,198',
'198,198,198,198,198,198,,198,198,198,473,198,198,,198,198,,,,,,,,,,',
',473,473,,,,,,,,198,,,198,,473,198,473,198,473,473,473,473,,198,473',
',473,,,,,198,,,,,198,198,198,198,198,198,,,,198,198,,,,,,,198,,,198',
'199,199,199,,199,198,198,,199,199,,,,199,,199,199,199,199,199,199,199',
',,,,,199,199,199,199,199,199,199,,,199,,,,,,,199,,,199,199,199,199,199',
'199,199,199,199,199,199,,199,199,,199,199,474,,,,,,,,,,,,,,,,,474,474',
',199,,,199,,,199,,199,,199,474,,474,199,474,474,474,474,,,474,199,474',
',,,199,199,199,199,199,199,,,,199,199,,,,,,,199,,,199,200,200,200,,200',
'199,199,,200,200,,,,200,,200,200,200,200,200,200,200,,,,,,200,200,200',
'200,200,200,200,,,200,,,,,,,200,,,200,200,200,200,200,200,200,200,200',
'200,200,,200,200,,200,200,475,,,,,,,,,,,,,,,,,475,475,,200,,,200,,,200',
',200,,200,475,,475,200,475,475,475,475,,,475,200,475,,,,200,200,200',
'200,200,200,,,,200,200,,,,,,,200,,,200,204,204,204,,204,200,200,,204',
'204,,,,204,,204,204,204,204,204,204,204,,,,,,204,204,204,204,204,204',
'204,,,204,,,,,,,204,,,204,204,204,204,204,204,204,,204,204,204,,204',
'204,,204,204,476,476,476,476,476,476,476,,,476,476,,,,,,,476,476,,204',
',,204,,,204,,204,,,476,,476,204,476,476,476,476,476,476,476,204,476',
',,,204,204,204,204,204,204,,,,204,204,,,,,,,204,,,204,205,205,205,,205',
'204,204,,205,205,,,,205,,205,205,205,205,205,205,205,,,,,,205,205,205',
'205,205,205,205,,,205,,,,,,,205,,,205,205,205,205,205,205,205,,205,205',
'205,,205,205,,205,205,477,477,477,477,477,477,477,,,477,477,,,,,,,477',
'477,,205,,,205,,,205,,205,,,477,,477,205,477,477,477,477,477,477,477',
'205,477,,,,205,205,205,205,205,205,,,,205,205,,,,,,,205,,,205,206,206',
'206,,206,205,205,,206,206,,,,206,,206,206,206,206,206,206,206,,,,,,206',
'206,206,206,206,206,206,,,206,,,,,,,206,,,206,206,206,206,206,206,206',
',206,206,206,,206,206,,206,206,478,478,478,478,478,478,478,,,478,478',
',,,,,,478,478,,206,,,206,,,206,,206,,,478,,478,206,478,478,478,478,478',
'478,478,206,478,,,,206,206,206,206,206,206,,,,206,206,,,,,,,206,,,206',
'214,214,214,214,214,206,206,,214,214,,,,214,,214,214,214,214,214,214',
'214,,,,,,214,214,214,214,214,214,214,,,214,,,,,,214,214,,214,214,214',
'214,214,214,214,214,,214,214,214,,214,214,,214,214,479,479,479,479,479',
'479,479,,,479,479,,,,,,,479,479,,214,,,214,,,214,,214,,214,479,,479',
'214,479,479,479,479,479,479,479,214,479,,,,214,214,214,214,214,214,',
',,214,214,,,,,,,214,,,214,215,215,215,,215,214,214,,215,215,,,,215,',
'215,215,215,215,215,215,215,,,,,,215,215,215,215,215,215,215,,,215,',
',,,,,215,,,215,215,215,215,215,215,215,,215,215,215,,215,215,,215,215',
'480,480,480,480,480,480,480,,,480,480,,,,,,,480,480,,215,,,215,,215',
'215,,215,,,480,,480,215,480,480,480,480,480,480,480,215,480,,,,215,215',
'215,215,215,215,,,,215,215,,,,,,,215,,,215,218,218,218,,218,215,215',
',218,218,,,,218,,218,218,218,218,218,218,218,,,,,,218,218,218,218,218',
'218,218,,,218,,,,,,,218,,,218,218,218,218,218,218,218,,218,218,218,',
'218,218,,218,218,483,483,483,483,483,483,483,,,483,483,,,,,,,483,483',
',218,,,218,,,218,,218,,,483,,483,218,483,483,483,483,483,483,483,218',
'483,,,,218,218,218,218,218,218,,,,218,218,,,,,,,218,,,218,220,220,220',
',220,218,218,,220,220,,,,220,,220,220,220,220,220,220,220,,,,,,220,220',
'220,220,220,220,220,,,220,,,,,,,220,,,220,220,220,220,220,220,220,,220',
'220,220,,220,220,,220,220,484,484,484,484,484,484,484,484,,484,484,',
',,,,,484,484,,220,,,220,,,220,,220,,,484,,484,220,484,484,484,484,484',
'484,484,220,484,,,,220,220,220,220,220,220,,,,220,220,,,,,,,220,,,220',
'221,221,221,,221,220,220,,221,221,,,,221,,221,221,221,221,221,221,221',
',,,,,221,221,221,221,221,221,221,,,221,,,,,,,221,,,221,221,221,221,221',
'221,221,,221,221,221,469,221,221,,221,221,,,,,,,,,,,,469,469,,,,,,,',
'221,,,221,,469,221,469,221,469,469,469,469,,221,,,,,,,,221,,,,,221,221',
'221,221,221,221,,,,221,221,,,,,,,221,,,221,222,222,222,,222,221,221',
',222,222,,,,222,,222,222,222,222,222,222,222,,,,,,222,222,222,222,222',
'222,222,,,222,,,,,,,222,,,222,222,222,222,222,222,222,,222,222,222,',
'222,222,,222,222,,,,,,,,,,,,,,,,,,,,,222,,,222,,,222,,222,,,,,,222,',
',,,,,,222,,,,,222,222,222,222,222,222,,,,222,222,,,,,,,222,,,222,223',
'223,223,,223,222,222,,223,223,,,,223,,223,223,223,223,223,223,223,,',
',,,223,223,223,223,223,223,223,,,223,,,,,,,223,,,223,223,223,223,223',
'223,223,,223,223,223,,223,223,,223,223,,,,,,,,,,,,,,,,,,,,,223,,,223',
',,223,,223,,,,,,223,,,,,,,,223,,,,,223,223,223,223,223,223,,,,223,223',
',,,,,,223,,,223,224,224,224,,224,223,223,,224,224,,,,224,,224,224,224',
'224,224,224,224,,,,,,224,224,224,224,224,224,224,,,224,,,,,,,224,,,224',
'224,224,224,224,224,224,,224,224,224,,224,224,,224,224,,,,,,,,,,,,,',
',,,,,,,224,,,224,,,224,,224,,,,,,224,,,,,,,,224,,,,,224,224,224,224',
'224,224,,,,224,224,,,,,,,224,,,224,225,225,225,,225,224,224,,225,225',
',,,225,,225,225,225,225,225,225,225,,,,,,225,225,225,225,225,225,225',
',,225,,,,,,,225,,,225,225,225,225,225,225,225,,225,225,225,,225,225',
',225,225,,,,,,,,,,,,,,,,,,,,,225,,,225,,,225,,225,,,,,,225,,,,,,,,225',
',,,,225,225,225,225,225,225,,,,225,225,,,,,,,225,,,225,226,226,226,',
'226,225,225,,226,226,,,,226,,226,226,226,226,226,226,226,,,,,,226,226',
'226,226,226,226,226,,,226,,,,,,,226,,,226,226,226,226,226,226,226,,226',
'226,226,,226,226,,226,226,,,,,,,,,,,,,,,,,,,,,226,,,226,,,226,,226,',
',,,,226,,,,,,,,226,,,,,226,226,226,226,226,226,,,,226,226,,,,,,,226',
',,226,227,227,227,,227,226,226,,227,227,,,,227,,227,227,227,227,227',
'227,227,,,,,,227,227,227,227,227,227,227,,,227,,,,,,,227,,,227,227,227',
'227,227,227,227,,227,227,227,,227,227,,227,227,,,,,,,,,,,,,,,,,,,,,227',
',,227,,,227,,227,,,,,,227,,,,,,,,227,,,,,227,227,227,227,227,227,,,',
'227,227,,,,,,,227,,,227,228,228,228,,228,227,227,,228,228,,,,228,,228',
'228,228,228,228,228,228,,,,,,228,228,228,228,228,228,228,,,228,,,,,',
',228,,,228,228,228,228,228,228,228,,228,228,228,,228,228,,228,228,,',
',,,,,,,,,,,,,,,,,,228,,,228,,,228,,228,,,,,,228,,,,,,,,228,,,,,228,228',
'228,228,228,228,,,,228,228,,,,,,,228,,,228,229,229,229,,229,228,228',
',229,229,,,,229,,229,229,229,229,229,229,229,,,,,,229,229,229,229,229',
'229,229,,,229,,,,,,,229,,,229,229,229,229,229,229,229,,229,229,229,',
'229,229,,229,229,,,,,,,,,,,,,,,,,,,,,229,,,229,,,229,,229,,,,,,229,',
',,,,,,229,,,,,229,229,229,229,229,229,,,,229,229,,,,,,,229,,,229,230',
'230,230,,230,229,229,,230,230,,,,230,,230,230,230,230,230,230,230,,',
',,,230,230,230,230,230,230,230,,,230,,,,,,,230,,,230,230,230,230,230',
'230,230,,230,230,230,,230,230,,230,230,,,,,,,,,,,,,,,,,,,,,230,,,230',
',,230,,230,,,,,,230,,,,,,,,230,,,,,230,230,230,230,230,230,,,,230,230',
',,,,,,230,,,230,231,231,231,,231,230,230,,231,231,,,,231,,231,231,231',
'231,231,231,231,,,,,,231,231,231,231,231,231,231,,,231,,,,,,,231,,,231',
'231,231,231,231,231,231,,231,231,231,,231,231,,231,231,,,,,,,,,,,,,',
',,,,,,,231,,,231,,,231,,231,,,,,,231,,,,,,,,231,,,,,231,231,231,231',
'231,231,,,,231,231,,,,,,,231,,,231,232,232,232,,232,231,231,,232,232',
',,,232,,232,232,232,232,232,232,232,,,,,,232,232,232,232,232,232,232',
',,232,,,,,,,232,,,232,232,232,232,232,232,232,,232,232,232,,232,232',
',232,232,,,,,,,,,,,,,,,,,,,,,232,,,232,,,232,,232,,,,,,232,,,,,,,,232',
',,,,232,232,232,232,232,232,,,,232,232,,,,,,,232,,,232,233,233,233,',
'233,232,232,,233,233,,,,233,,233,233,233,233,233,233,233,,,,,,233,233',
'233,233,233,233,233,,,233,,,,,,,233,,,233,233,233,233,233,233,233,,233',
'233,233,,233,233,,233,233,,,,,,,,,,,,,,,,,,,,,233,,,233,,,233,,233,',
',,,,233,,,,,,,,233,,,,,233,233,233,233,233,233,,,,233,233,,,,,,,233',
',,233,234,234,234,,234,233,233,,234,234,,,,234,,234,234,234,234,234',
'234,234,,,,,,234,234,234,234,234,234,234,,,234,,,,,,,234,,,234,234,234',
'234,234,234,234,,234,234,234,,234,234,,234,234,,,,,,,,,,,,,,,,,,,,,234',
',,234,,,234,,234,,,,,,234,,,,,,,,234,,,,,234,234,234,234,234,234,,,',
'234,234,,,,,,,234,,,234,235,235,235,,235,234,234,,235,235,,,,235,,235',
'235,235,235,235,235,235,,,,,,235,235,235,235,235,235,235,,,235,,,,,',
',235,,,235,235,235,235,235,235,235,,235,235,235,,235,235,,235,235,,',
',,,,,,,,,,,,,,,,,,235,,,235,,,235,,235,,,,,,235,,,,,,,,235,,,,,235,235',
'235,235,235,235,,,,235,235,,,,,,,235,,,235,236,236,236,,236,235,235',
',236,236,,,,236,,236,236,236,236,236,236,236,,,,,,236,236,236,236,236',
'236,236,,,236,,,,,,,236,,,236,236,236,236,236,236,236,,236,236,236,',
'236,236,,236,236,,,,,,,,,,,,,,,,,,,,,236,,,236,,,236,,236,,,,,,236,',
',,,,,,236,,,,,236,236,236,236,236,236,,,,236,236,,,,,,,236,,,236,237',
'237,237,,237,236,236,,237,237,,,,237,,237,237,237,237,237,237,237,,',
',,,237,237,237,237,237,237,237,,,237,,,,,,,237,,,237,237,237,237,237',
'237,237,,237,237,237,,237,237,,237,237,,,,,,,,,,,,,,,,,,,,,237,,,237',
',,237,,237,,,,,,237,,,,,,,,237,,,,,237,237,237,237,237,237,,,,237,237',
',,,,,,237,,,237,238,238,238,,238,237,237,,238,238,,,,238,,238,238,238',
'238,238,238,238,,,,,,238,238,238,238,238,238,238,,,238,,,,,,,238,,,238',
'238,238,238,238,238,238,,238,238,238,,238,238,,238,238,,,,,,,,,,,,,',
',,,,,,,238,,,238,,,238,,238,,,,,,238,,,,,,,,238,,,,,238,238,238,238',
'238,238,,,,238,238,,,,,,,238,,,238,239,239,239,,239,238,238,,239,239',
',,,239,,239,239,239,239,239,239,239,,,,,,239,239,239,239,239,239,239',
',,239,,,,,,,239,,,239,239,239,239,239,239,239,,239,239,239,,239,239',
',239,239,,,,,,,,,,,,,,,,,,,,,239,,,239,,,239,,239,,,,,,239,,,,,,,,239',
',,,,239,239,239,239,239,239,,,,239,239,,,,,,,239,,,239,240,240,240,',
'240,239,239,,240,240,,,,240,,240,240,240,240,240,240,240,,,,,,240,240',
'240,240,240,240,240,,,240,,,,,,,240,,,240,240,240,240,240,240,240,,240',
'240,240,,240,240,,240,240,,,,,,,,,,,,,,,,,,,,,240,,,240,,,240,,240,',
',,,,240,,,,,,,,240,,,,,240,240,240,240,240,240,,,,240,240,,,,,,,240',
',,240,241,241,241,,241,240,240,,241,241,,,,241,,241,241,241,241,241',
'241,241,,,,,,241,241,241,241,241,241,241,,,241,,,,,,,241,,,241,241,241',
'241,241,241,241,,241,241,241,,241,241,,241,241,,,,,,,,,,,,,,,,,,,,,241',
',,241,,,241,,241,,,,,,241,,,,,,,,241,,,,,241,241,241,241,241,241,,,',
'241,241,,,,,,,241,,,241,242,242,242,,242,241,241,,242,242,,,,242,,242',
'242,242,242,242,242,242,,,,,,242,242,242,242,242,242,242,,,242,,,,,',
',242,,,242,242,242,242,242,242,242,,242,242,242,,242,242,,242,242,,',
',,,,,,,,,,,,,,,,,,242,,,242,,,242,,242,,,,,,242,,,,,,,,242,,,,,242,242',
'242,242,242,242,,,,242,242,,,,,,,242,,,242,243,243,243,,243,242,242',
',243,243,,,,243,,243,243,243,243,243,243,243,,,,,,243,243,243,243,243',
'243,243,,,243,,,,,,,243,,,243,243,243,243,243,243,243,,243,243,243,',
'243,243,,243,243,,,,,,,,,,,,,,,,,,,,,243,,,243,,,243,,243,,,,,,243,',
',,,,,,243,,,,,243,243,243,243,243,243,,,,243,243,,,,,,,243,,,243,244',
'244,244,,244,243,243,,244,244,,,,244,,244,244,244,244,244,244,244,,',
',,,244,244,244,244,244,244,244,,,244,,,,,,,244,,,244,244,244,244,244',
'244,244,,244,244,244,,244,244,,244,244,,,,,,,,,,,,,,,,,,,,,244,,,244',
',,244,,244,,,,,,244,,,,,,,,244,,,,,244,244,244,244,244,244,,,,244,244',
',,,,,,244,,,244,254,254,254,,254,244,244,,254,254,,,,254,,254,254,254',
'254,254,254,254,,,,,,254,254,254,254,254,254,254,,,254,,,,,,,254,,,254',
'254,254,254,254,254,254,,254,254,254,,254,254,,254,254,,,,,,,,,,,,,',
',,,,,,,254,,,254,,,254,,254,,,,,,254,,,,,,,,254,,,,,254,254,254,254',
'254,254,,,,254,254,,,,,,,254,,,254,256,256,256,,256,254,254,,256,256',
',,,256,,256,256,256,256,256,256,256,,,,,,256,256,256,256,256,256,256',
',,256,,,,,,,256,,,256,256,256,256,256,256,256,,256,256,256,,256,256',
',256,256,,,,,,,,,,,,,,,,,,,,,256,,,256,,,256,,256,,,,,,256,,,,,,,,256',
',,,,256,256,256,256,256,256,,,,256,256,,,,,,,256,,,256,262,262,262,',
'262,256,256,,262,262,,,,262,,262,262,262,262,262,262,262,,,,,,262,262',
'262,262,262,262,262,,,262,,,,,,,262,,,262,262,262,262,262,262,262,,262',
'262,262,,262,262,,262,262,,,,,,,,,,,,,,,,,,,,,262,,,262,,,262,,262,',
',,,,262,,,,,,,,262,,,,,262,262,262,262,262,262,,,,262,262,,,,,,,262',
',,262,269,269,269,,269,262,262,,269,269,,,,269,,269,269,269,269,269',
'269,269,,,,,,269,269,269,269,269,269,269,,,269,,,,,,,269,,,269,269,269',
'269,269,269,269,269,269,269,269,,269,269,,269,269,,,,,,,,,,,,,,,,,,',
',,269,,,269,,,269,,269,,269,,269,,269,,,,,,,,269,,,,,269,269,269,269',
'269,269,,,,269,269,,,,,,,269,,,269,270,270,270,,270,269,269,,270,270',
',,,270,,270,270,270,270,270,270,270,,,,,,270,270,270,270,270,270,270',
',,270,,,,,,,270,,,270,270,270,270,270,270,270,270,270,270,270,,270,270',
',270,270,,,,,,,,,,,,,,,,,,,,,270,,,270,,,270,,270,,270,,270,,270,,,',
',,,,270,,,,,270,270,270,270,270,270,,,,270,270,,,,,,,270,,,270,278,278',
'278,,278,270,270,,278,278,,,,278,,278,278,278,278,278,278,278,,,,,,278',
'278,278,278,278,278,278,,,278,,,,,,,278,,,278,278,278,278,278,278,278',
'278,278,278,278,,278,278,,278,278,,,,,,,,,,,,,,,,,,,,,278,,,278,,278',
'278,,278,,278,,278,,278,,,,,,,,278,,,,,278,278,278,278,278,278,,,,278',
'278,,,,,,,278,,,278,282,282,282,282,282,278,278,,282,282,,,,282,,282',
'282,282,282,282,282,282,,,,,,282,282,282,282,282,282,282,,,282,,,,,',
'282,282,,282,282,282,282,282,282,282,282,,282,282,282,,282,282,,282',
'282,,,,,,,,,,,,,,,,,,,,,282,,,282,,,282,,282,,282,,,,282,,,,,,,,282',
',,,,282,282,282,282,282,282,,,,282,282,,,,,,,282,,,282,286,286,286,',
'286,282,282,,286,286,,,,286,,286,286,286,286,286,286,286,,,,,,286,286',
'286,286,286,286,286,,,286,,,,,,,286,,,286,286,286,286,286,286,286,,286',
'286,286,,286,286,,924,,924,924,924,924,924,,,,,,,,,924,,,,,,,286,,,286',
',,286,,286,,,,,,,,924,924,,,,,,924,924,924,924,286,286,286,286,286,286',
',,,286,286,,,,286,,,286,,,286,287,287,287,287,287,286,286,,287,287,',
',,287,924,287,287,287,287,287,287,287,,,,,,287,287,287,287,287,287,287',
',,287,,,,,,287,287,,287,287,287,287,287,287,287,287,,287,287,287,,287',
'287,,287,287,,,,,,,,,,,,,,,,,,,,,287,,,287,,,287,,287,,287,,,,287,,',
',,,,,287,,,,,287,287,287,287,287,287,,,,287,287,,,,,,,287,,,287,299',
'299,299,,299,287,287,,299,299,,,,299,,299,299,299,299,299,299,299,,',
',,,299,299,299,299,299,299,299,,,299,,,,,,,299,,,299,299,299,299,299',
'299,299,,299,299,299,,299,299,,,,,,,,,,,,,,,,,,,,,,,,299,,,299,,,299',
',299,,,,,,,,,,,,,,,,,,,299,299,299,299,299,299,,,,299,299,,,,,,,299',
',,299,308,308,308,,308,299,299,,308,308,,,,308,,308,308,308,308,308',
'308,308,,,,,,308,308,308,308,308,308,308,,,308,,,,,,,308,,,308,308,308',
'308,308,308,308,,308,308,308,,308,308,,308,308,,,,,,,,,,,,,,,,,,,,,308',
',,308,308,,308,,308,,,,,,308,,,,,,,,308,,,,,308,308,308,308,308,308',
',,,308,308,,,,,,,308,,,308,310,310,310,310,310,308,308,,310,310,,,,310',
',310,310,310,310,310,310,310,,,,,,310,310,310,310,310,310,310,,,310',
',,,,,310,310,,310,310,310,310,310,310,310,310,,310,310,310,,310,310',
',310,310,,,,,,,,,,,,,,,,,,,,,310,,,310,,,310,,310,,310,,,,310,,,,,,',
',310,,,,,310,310,310,310,310,310,,,,310,310,,,,,,,310,,,310,350,350',
'350,,350,310,310,,350,350,,,,350,,350,350,350,350,350,350,350,,,,,,350',
'350,350,350,350,350,350,,,350,,,,,,,350,,,350,350,350,350,350,350,350',
',350,350,350,,350,350,,350,350,,,,,,,,,,,,,,,,,,,,,350,,,350,,,350,',
'350,,,,,,350,,,,,,,,350,,,,,350,350,350,350,350,350,,,,350,350,,,,,',
',350,,,350,351,351,351,,351,350,350,,351,351,,,,351,,351,351,351,351',
'351,351,351,,,,,,351,351,351,351,351,351,351,,,351,,,,,,,351,,,351,351',
'351,351,351,351,351,,351,351,351,,351,351,,351,351,,,,,,,,,,,,,,,,,',
',,,351,,,351,,,351,,351,,,,,,351,,,,,,,,351,,,,,351,351,351,351,351',
'351,,,,351,351,,,,,,,351,,,351,370,370,370,,370,351,351,,370,370,,,',
'370,,370,370,370,370,370,370,370,,,,,,370,370,370,370,370,370,370,,',
'370,,,,,,,370,,,370,370,370,370,370,370,370,,370,370,370,,370,370,,',
',,,,,,,,,,,,,,,,,,,,,370,,,370,,,370,,370,,,,,,,,,,,,,,,,,,,370,370',
'370,370,370,370,,,,370,370,,,,,,,370,,,370,382,382,382,,382,370,370',
',382,382,,,,382,,382,382,382,382,382,382,382,,,,,,382,382,382,382,382',
'382,382,,,382,,,,,,,382,,,382,382,382,382,382,382,382,,382,382,382,',
'382,382,,382,382,,,,,,,,,,,,,,,,,,,,,382,,,382,,,382,,382,,,,,,382,',
',,,,,,382,,,,,382,382,382,382,382,382,,,,382,382,,,,,,,382,,,382,422',
'422,422,,422,382,382,,422,422,,,,422,,422,422,422,422,422,422,422,,',
',,,422,422,422,422,422,422,422,,,422,,,,,,,422,,,422,422,422,422,422',
'422,422,,422,422,422,,422,422,,422,422,,,,,,,,,,,,,,,,,,,,,422,,,422',
',,422,,422,,,,,,422,,,,,,,,422,,,,,422,422,422,422,422,422,,,,422,422',
',,,,,,422,,,422,433,433,433,,433,422,422,,433,433,,,,433,,433,433,433',
'433,433,433,433,,,,,,433,433,433,433,433,433,433,,,433,,,,,,,433,,,433',
'433,433,433,433,433,433,433,433,433,433,,433,433,,433,433,,,,,,,,,,',
',,,,,,,,,,433,,,433,433,,433,,433,,433,,433,,433,,,,,,,,433,,,,,433',
'433,433,433,433,433,,,,433,433,,,,,,,433,,,433,441,441,441,,441,433',
'433,,441,441,,,,441,,441,441,441,441,441,441,441,,,,,,441,441,441,441',
'441,441,441,,,441,,,,,,,441,,,441,441,441,441,441,441,441,441,441,441',
'441,,441,441,,441,441,,,,,,,,,,,,,,,,,,,,,441,,,441,441,,441,,441,,441',
',441,,441,,,,,,,,441,,,,,441,441,441,441,441,441,,,,441,441,,,,,,,441',
',,441,442,442,442,,442,441,441,,442,442,,,,442,,442,442,442,442,442',
'442,442,,,,,,442,442,442,442,442,442,442,,,442,,,,,,,442,,,442,442,442',
'442,442,442,442,442,442,442,442,,442,442,,442,442,,,,,,,,,,,,,,,,,,',
',,442,,,442,442,,442,,442,,442,,442,,442,,,,,,,,442,,,,,442,442,442',
'442,442,442,,,,442,442,,,,,,,442,,,442,443,443,443,,443,442,442,,443',
'443,,,,443,,443,443,443,443,443,443,443,,,,,,443,443,443,443,443,443',
'443,,,443,,,,,,,443,,,443,443,443,443,443,443,443,443,443,443,443,,443',
'443,,443,443,,,,,,,,,,,,,,,,,,,,,443,,,443,443,,443,,443,,443,,443,',
'443,,,,,,,,443,,,,,443,443,443,443,443,443,,,,443,443,,,,,,,443,,,443',
'452,452,452,,452,443,443,,452,452,,,,452,,452,452,452,452,452,452,452',
',,,,,452,452,452,452,452,452,452,,,452,,,,,,,452,,,452,452,452,452,452',
'452,452,452,452,452,452,,452,452,,452,452,,,,,,,,,,,,,,,,,,,,,452,,',
'452,,,452,,452,,452,,,,452,,,,,,,,452,,,,,452,452,452,452,452,452,,',
',452,452,,,,,,,452,,,452,453,453,453,,453,452,452,,453,453,,,,453,,453',
'453,453,453,453,453,453,,,,,,453,453,453,453,453,453,453,,,453,,,,,',
',453,,,453,453,453,453,453,453,453,453,453,453,453,,453,453,,453,453',
',,,,,,,,,,,,,,,,,,,,453,,,453,,,453,,453,,453,,,,453,,,,,,,,453,,,,',
'453,453,453,453,453,453,,,,453,453,,,,,,,453,,,453,455,455,455,,455',
'453,453,,455,455,,,,455,,455,455,455,455,455,455,455,,,,,,455,455,455',
'455,455,455,455,,,455,,,,,,,455,,,455,455,455,455,455,455,455,,455,455',
'455,,455,455,,455,455,,,,,,,,,,,,,,,,,,,,,455,,,455,,,455,,455,,,,,',
'455,,,,,,,,455,,,,,455,455,455,455,455,455,,,,455,455,,,,,,,455,,,455',
'456,456,456,,456,455,455,,456,456,,,,456,,456,456,456,456,456,456,456',
',,,,,456,456,456,456,456,456,456,,,456,,,,,,,456,,,456,456,456,456,456',
'456,456,,456,456,456,,456,456,,456,456,,,,,,,,,,,,,,,,,,,,,456,,,456',
',,456,,456,,,,,,456,,,,,,,,456,,,,,456,456,456,456,456,456,,,,456,456',
',,,,,,456,,,456,457,457,457,,457,456,456,,457,457,,,,457,,457,457,457',
'457,457,457,457,,,,,,457,457,457,457,457,457,457,,,457,,,,,,,457,,,457',
'457,457,457,457,457,457,,457,457,457,,457,457,,457,457,,,,,,,,,,,,,',
',,,,,,,457,,,457,,,457,,457,,,,,,457,,,,,,,,457,,,,,457,457,457,457',
'457,457,,,,457,457,,,,,,,457,,,457,485,485,485,,485,457,457,,485,485',
',,,485,,485,485,485,485,485,485,485,,,,,,485,485,485,485,485,485,485',
',,485,,,,,,,485,,,485,485,485,485,485,485,485,,485,485,485,,485,485',
',485,485,,,,,,,,,,,,,,,,,,,,,485,,,485,,,485,,485,,,,,,485,,,,,,,,485',
',,,,485,485,485,485,485,485,,,,485,485,,,,,,,485,,,485,488,488,488,',
'488,485,485,,488,488,,,,488,,488,488,488,488,488,488,488,,,,,,488,488',
'488,488,488,488,488,,,488,,,,,,,488,,,488,488,488,488,488,488,488,488',
'488,488,488,,488,488,,488,488,,,,,,,,,,,,,,,,,,,,,488,,,488,,,488,,488',
',488,,488,,488,,,,,,,,488,,,,,488,488,488,488,488,488,,,,488,488,,,',
',,,488,,,488,490,490,490,,490,488,488,,490,490,,,,490,,490,490,490,490',
'490,490,490,,,,,,490,490,490,490,490,490,490,,,490,,,,,,,490,,,490,490',
'490,490,490,490,490,490,490,490,490,,490,490,,490,490,,,,,,,,,,,,,,',
',,,,,,490,,,490,,,490,,490,,,,490,,490,,,,,,,,490,,,,,490,490,490,490',
'490,490,,,,490,490,,,,,,,490,,,490,492,492,492,,492,490,490,,492,492',
',,,492,,492,492,492,492,492,492,492,,,,,,492,492,492,492,492,492,492',
',,492,,,,,,,492,,,492,492,492,492,492,492,492,,492,492,492,,492,492',
',492,492,,,,,,,,,,,,,,,,,,,,,492,,,492,,,492,,492,,,,,,492,,,,,,,,492',
',,,,492,492,492,492,492,492,,,,492,492,,,,,,,492,,,492,508,508,508,',
'508,492,492,,508,508,,,,508,,508,508,508,508,508,508,508,,,,,,508,508',
'508,508,508,508,508,,,508,,,,,,,508,,,508,508,508,508,508,508,508,,508',
'508,508,,508,508,,508,508,,,,,,,,,,,,,,,,,,,,,508,,,508,,508,508,,508',
',,,508,,508,,,,,,,,508,,,,,508,508,508,508,508,508,,,,508,508,,,,,,',
'508,,,508,514,514,514,514,514,508,508,,514,514,,,,514,,514,514,514,514',
'514,514,514,,,,,,514,514,514,514,514,514,514,,,514,,,,,,514,514,,514',
'514,514,514,514,514,514,514,,514,514,514,,514,514,,514,514,,,,,,,,,',
',,,,,,,,,,,514,,,514,,,514,,514,,514,,,,514,,,,,,,,514,,,,,514,514,514',
'514,514,514,,,,514,514,,,,,,514,514,,,514,520,520,520,,520,514,514,',
'520,520,,,,520,,520,520,520,520,520,520,520,,,,,,520,520,520,520,520',
'520,520,,,520,,,,,,,520,,,520,520,520,520,520,520,520,,520,520,520,',
'520,520,,,,,,,,,,,,,,,,,,,,,,,,520,,,520,,,520,,520,,,,,,,,,,,,,,,,',
',,520,520,520,520,520,520,,,,520,520,,,,,,,520,,,520,522,522,522,,522',
'520,520,,522,522,,,,522,,522,522,522,522,522,522,522,,,,,,522,522,522',
'522,522,522,522,,,522,,,,,,,522,,,522,522,522,522,522,522,522,522,522',
'522,522,,522,522,,522,522,,,,,,,,,,,,,,,,,,,,,522,,,522,,,522,,522,',
'522,,,,522,,,,,,,,522,,,,,522,522,522,522,522,522,,,,522,522,,,,,,,522',
',,522,525,525,525,,525,522,522,,525,525,,,,525,,525,525,525,525,525',
'525,525,,,,,,525,525,525,525,525,525,525,,,525,,,,,,,525,,,525,525,525',
'525,525,525,525,525,525,525,525,,525,525,,525,525,,,,,,,,,,,,,,,,,,',
',,525,,,525,,,525,,525,,525,,,,525,,,,,,,,525,,,,,525,525,525,525,525',
'525,,,,525,525,,,,,,,525,,,525,533,533,533,,533,525,525,,533,533,,,',
'533,,533,533,533,533,533,533,533,,,,,,533,533,533,533,533,533,533,,',
'533,,,,,,,533,,,533,533,533,533,533,533,533,,533,533,533,,533,533,,533',
'533,,,,,,,,,,,,,,,,,,,,,533,,,533,,,533,,533,,,,,,533,,,,,,,,533,,,',
',533,533,533,533,533,533,,,,533,533,,,,,,,533,,,533,534,534,534,,534',
'533,533,,534,534,,,,534,,534,534,534,534,534,534,534,,,,,,534,534,534',
'534,534,534,534,,,534,,,,,,,534,,,534,534,534,534,534,534,534,,534,534',
'534,,534,534,,534,534,,,,,,,,,,,,,,,,,,,,,534,,,534,,,534,,534,,,,,',
'534,,,,,,,,534,,,,,534,534,534,534,534,534,,,,534,534,,,,,,,534,,,534',
'535,535,535,,535,534,534,,535,535,,,,535,,535,535,535,535,535,535,535',
',,,,,535,535,535,535,535,535,535,,,535,,,,,,,535,,,535,535,535,535,535',
'535,535,,535,535,535,,535,535,,535,535,,,,,,,,,,,,,,,,,,,,,535,,,535',
',,535,,535,,,,,,535,,,,,,,,535,,,,,535,535,535,535,535,535,,,,535,535',
',,,,,,535,,,535,539,539,539,,539,535,535,,539,539,,,,539,,539,539,539',
'539,539,539,539,,,,,,539,539,539,539,539,539,539,,,539,,,,,,,539,,,539',
'539,539,539,539,539,539,,539,539,539,,539,539,,539,539,,,,,,,,,,,,,',
',,,,,,,539,,,539,,,539,,539,,,,,,539,,,,,,,,539,,,,,539,539,539,539',
'539,539,,,,539,539,,,,,,,539,,,539,545,545,545,,545,539,539,,545,545',
',,,545,,545,545,545,545,545,545,545,,,,,,545,545,545,545,545,545,545',
',,545,,,,,,,545,,,545,545,545,545,545,545,545,545,545,545,545,,545,545',
',545,545,,,,,,,,,,,,,,,,,,,,,545,,,545,,,545,,545,,545,,545,,545,,,',
',,,,545,,,,,545,545,545,545,545,545,,,,545,545,,,,,,,545,,,545,548,548',
'548,,548,545,545,,548,548,,,,548,,548,548,548,548,548,548,548,,,,,,548',
'548,548,548,548,548,548,,,548,,,,,,,548,,,548,548,548,548,548,548,548',
'548,548,548,548,,548,548,,548,548,,,,,,,,,,,,,,,,,,,,,548,,,548,,,548',
',548,,,,,,548,,,,,,,,548,,,,,548,548,548,548,548,548,,,,548,548,,,,',
',,548,,,548,553,553,553,553,553,548,548,,553,553,,,,553,,553,553,553',
'553,553,553,553,,,,,,553,553,553,553,553,553,553,,,553,,,,,,553,553',
',553,553,553,553,553,553,553,553,,553,553,553,,553,553,,553,553,,,,',
',,,,,,,,,,,,,,,,553,,,553,,,553,,553,,553,,,,553,,,,,,,,553,,,,,553',
'553,553,553,553,553,,,,553,553,,,,,,,553,,,553,554,554,554,554,554,553',
'553,,554,554,,,,554,,554,554,554,554,554,554,554,,,,,,554,554,554,554',
'554,554,554,,,554,,,,,,554,554,,554,554,554,554,554,554,554,554,,554',
'554,554,,554,554,,554,554,,,,,,,,,,,,,,,,,,,,,554,,,554,,,554,,554,',
'554,,,,554,,,,,,,,554,,,,,554,554,554,554,554,554,,,,554,554,,,,,,,554',
',,554,560,560,560,,560,554,554,,560,560,,,,560,,560,560,560,560,560',
'560,560,,,,,,560,560,560,560,560,560,560,,,560,,,,,,,560,,,560,560,560',
'560,560,560,560,,560,560,560,,560,560,,,,,,,,,,,,,,,,,,,,,,,,560,,,560',
',,560,,560,,,,,,,,,,,,,,,,,,,560,560,560,560,560,560,,,,560,560,,,,',
',,560,,,560,574,574,574,574,574,560,560,,574,574,,,,574,,574,574,574',
'574,574,574,574,,,,,,574,574,574,574,574,574,574,,,574,,,,,,574,574',
',574,574,574,574,574,574,574,574,,574,574,574,,574,574,,574,574,,,,',
',,,,,,,,,,,,,,,,574,,,574,,,574,,574,,574,,,,574,,,,,,,,574,,,,,574',
'574,574,574,574,574,,,,574,574,,,,,,,574,,,574,578,578,578,578,578,574',
'574,,578,578,,,,578,,578,578,578,578,578,578,578,,,,,,578,578,578,578',
'578,578,578,,,578,,,,,,578,578,,578,578,578,578,578,578,578,578,,578',
'578,578,,578,578,,578,578,,,,,,,,,,,,,,,,,,,,,578,,,578,,,578,,578,',
'578,,,,578,,,,,,,,578,,,,,578,578,578,578,578,578,,,,578,578,,,,,,,578',
',,578,583,583,583,583,583,578,578,,583,583,,,,583,,583,583,583,583,583',
'583,583,,,,,,583,583,583,583,583,583,583,,,583,,,,,,583,583,,583,583',
'583,583,583,583,583,583,,583,583,583,,583,583,,583,583,,,,,,,,,,,,,',
',,,,,,,583,,,583,,,583,,583,,583,,,,583,,,,,,,,583,,,,,583,583,583,583',
'583,583,,,,583,583,,,,,,,583,,,583,585,585,585,,585,583,583,,585,585',
',,,585,,585,585,585,585,585,585,585,,,,,,585,585,585,585,585,585,585',
',,585,,,,,,,585,,,585,585,585,585,585,585,585,585,585,585,585,,585,585',
',585,585,,,,,,,,,,,,,,,,,,,,,585,,,585,,,585,,585,,585,,,,585,,,,,,',
',585,,,,,585,585,585,585,585,585,,,,585,585,,,,,,,585,,,585,588,588',
'588,,588,585,585,,588,588,,,,588,,588,588,588,588,588,588,588,,,,,,588',
'588,588,588,588,588,588,,,588,,,,,,,588,,,588,588,588,588,588,588,588',
'588,588,588,588,,588,588,,588,588,,,,,,,,,,,,,,,,,,,,,588,,,588,,,588',
',588,,588,,,,588,,,,,,,,588,,,,,588,588,588,588,588,588,,,,588,588,',
',,,,,588,,,588,594,594,594,,594,588,588,,594,594,,,,594,,594,594,594',
'594,594,594,594,,,,,,594,594,594,594,594,594,594,,,594,,,,,,,594,,,594',
'594,594,594,594,594,594,594,594,594,594,,594,594,,594,594,,,,,,,,,,',
',,,,,,,,,,594,,,594,,,594,,594,,594,,,,594,,,,,,,,594,,,,,594,594,594',
'594,594,594,,,,594,594,,,,,,,594,,,594,598,598,598,,598,594,594,,598',
'598,,,,598,,598,598,598,598,598,598,598,,,,,,598,598,598,598,598,598',
'598,,,598,,,,,,,598,,,598,598,598,598,598,598,598,,598,598,598,,598',
'598,,598,598,,,,,,,,,,,,,,,,,,,,,598,,,598,,,598,,598,,,,,,598,,,,,',
',,598,,,,,598,598,598,598,598,598,,,,598,598,,,,,,,598,,,598,600,600',
'600,,600,598,598,,600,600,,,,600,,600,600,600,600,600,600,600,,,,,,600',
'600,600,600,600,600,600,,,600,,,,,,,600,,,600,600,600,600,600,600,600',
',600,600,600,,600,600,,600,600,,,,,,,,,,,,,,,,,,,,,600,,,600,,,600,',
'600,,,,,,600,,,,,,,,600,,,,,600,600,600,600,600,600,,,,600,600,,,,,',
',600,,,600,627,627,627,,627,600,600,,627,627,,,,627,,627,627,627,627',
'627,627,627,,,,,,627,627,627,627,627,627,627,,,627,,,,,,,627,,,627,627',
'627,627,627,627,627,,627,627,627,,627,627,,627,627,,,,,,,,,,,,,,,,,',
',,,627,,,627,,,627,,627,,,,,,627,,,,,,,,627,,,,,627,627,627,627,627',
'627,,,,627,627,,,,,,,627,,,627,629,629,629,,629,627,627,,629,629,,,',
'629,,629,629,629,629,629,629,629,,,,,,629,629,629,629,629,629,629,,',
'629,,,,,,,629,,,629,629,629,629,629,629,629,,629,629,629,,629,629,,629',
'629,,,,,,,,,,,,,,,,,,,,,629,,,629,,,629,,629,,629,,,,629,,,,,,,,629',
',,,,629,629,629,629,629,629,,,,629,629,,,,,,,629,,,629,632,632,632,',
'632,629,629,,632,632,,,,632,,632,632,632,632,632,632,632,,,,,,632,632',
'632,632,632,632,632,,,632,,,,,,,632,,,632,632,632,632,632,632,632,,632',
'632,632,,632,632,,632,632,,,,,,,,,,,,,,,,,,,,,632,,,632,,,632,,632,',
',,,,632,,,,,,,,632,,,,,632,632,632,632,632,632,,,,632,632,,,,,,,632',
',,632,633,633,633,,633,632,632,,633,633,,,,633,,633,633,633,633,633',
'633,633,,,,,,633,633,633,633,633,633,633,,,633,,,,,,,633,,,633,633,633',
'633,633,633,633,,633,633,633,,633,633,,633,633,,,,,,,,,,,,,,,,,,,,,633',
',,633,,,633,,633,,,,,,633,,,,,,,,633,,,,,633,633,633,633,633,633,,,',
'633,633,,,,,,,633,,,633,638,638,638,,638,633,633,,638,638,,,,638,,638',
'638,638,638,638,638,638,,,,,,638,638,638,638,638,638,638,,,638,,,,,',
',638,,,638,638,638,638,638,638,638,,638,638,638,,638,638,,638,638,,',
',,,,,,,,,,,,,,,,,,638,,,638,,,638,,638,,,,,,638,,,,,,,,638,,,,,638,638',
'638,638,638,638,,,,638,638,,,,,,,638,,,638,641,641,641,,641,638,638',
',641,641,,,,641,,641,641,641,641,641,641,641,,,,,,641,641,641,641,641',
'641,641,,,641,,,,,,,641,,,641,641,641,641,641,641,641,,641,641,641,',
'641,641,,641,641,,,,,,,,,,,,,,,,,,,,,641,,,641,,,641,,641,,,,,,641,',
',,,,,,641,,,,,641,641,641,641,641,641,,,,641,641,,,,,,,641,,,641,656',
'656,656,656,656,641,641,,656,656,,,,656,,656,656,656,656,656,656,656',
',,,,,656,656,656,656,656,656,656,,,656,,,,,,656,656,,656,656,656,656',
'656,656,656,656,,656,656,656,,656,656,,656,656,,,,,,,,,,,,,,,,,,,,,656',
',,656,,,656,,656,,656,,,,656,,,,,,,,656,,,,,656,656,656,656,656,656',
',,,656,656,,,,,,,656,,,656,660,660,660,,660,656,656,,660,660,,,,660',
',660,660,660,660,660,660,660,,,,,,660,660,660,660,660,660,660,,,660',
',,,,,,660,,,660,660,660,660,660,660,660,,660,660,660,,660,660,,660,660',
',,,,,,,,,,,,,,,,,,,,660,,,660,,,660,,660,,,,,,660,,,,,,,,660,,,,,660',
'660,660,660,660,660,,,,660,660,,,,,,,660,,,660,663,663,663,,663,660',
'660,,663,663,,,,663,,663,663,663,663,663,663,663,,,,,,663,663,663,663',
'663,663,663,,,663,,,,,,,663,,,663,663,663,663,663,663,663,,663,663,663',
',663,663,,663,663,,,,,,,,,,,,,,,,,,,,,663,,,663,,,663,,663,,,,,,663',
',,,,,,,663,,,,,663,663,663,663,663,663,,,,663,663,,,,,,,663,,,663,670',
'670,670,670,670,663,663,,670,670,,,,670,,670,670,670,670,670,670,670',
',,,,,670,670,670,670,670,670,670,,,670,,,,,,670,670,,670,670,670,670',
'670,670,670,670,,670,670,670,,670,670,,670,670,,,,,,,,,,,,,,,,,,,,,670',
',,670,,,670,,670,,670,,,,670,,,,,,,,670,,,,,670,670,670,670,670,670',
',,,670,670,,,,,,,670,,,670,673,673,673,,673,670,670,,673,673,,,,673',
',673,673,673,673,673,673,673,,,,,,673,673,673,673,673,673,673,,,673',
',,,,,,673,,,673,673,673,673,673,673,673,673,673,673,673,,673,673,,673',
'673,,,,,,,,,,,,,,,,,,,,,673,,,673,,,673,,673,,673,,673,,673,,,,,,,,673',
',,,,673,673,673,673,673,673,,,,673,673,,,,,,,673,,,673,674,674,674,',
'674,673,673,,674,674,,,,674,,674,674,674,674,674,674,674,,,,,,674,674',
'674,674,674,674,674,,,674,,,,,,,674,,,674,674,674,674,674,674,674,674',
'674,674,674,,674,674,,674,674,,,,,,,,,,,,,,,,,,,,,674,,,674,,,674,,674',
',,,674,,674,,,,,,,,674,,,,,674,674,674,674,674,674,,,,674,674,,,,,,',
'674,,,674,680,680,680,680,680,674,674,,680,680,,,,680,,680,680,680,680',
'680,680,680,,,,,,680,680,680,680,680,680,680,,,680,,,,,,680,680,,680',
'680,680,680,680,680,680,680,,680,680,680,,680,680,,680,680,,,,,,,,,',
',,,,,,,,,,,680,,,680,,,680,,680,,680,,,,680,,,,,,,,680,,,,,680,680,680',
'680,680,680,,,,680,680,,,,,,,680,,,680,681,681,681,681,681,680,680,',
'681,681,,,,681,,681,681,681,681,681,681,681,,,,,,681,681,681,681,681',
'681,681,,,681,,,,,,681,681,,681,681,681,681,681,681,681,681,,681,681',
'681,,681,681,,681,681,,,,,,,,,,,,,,,,,,,,,681,,,681,,,681,,681,,681',
',,,681,,,,,,,,681,,,,,681,681,681,681,681,681,,,,681,681,,,,,,,681,',
',681,685,685,685,,685,681,681,,685,685,,,,685,,685,685,685,685,685,685',
'685,,,,,,685,685,685,685,685,685,685,,,685,,,,,,,685,,,685,685,685,685',
'685,685,685,,685,685,685,,685,685,,,,,,,,,,,,,,,,,,,,,,,,685,,,685,',
',685,,685,,,,,,,,,,,,,,,,,,,685,685,685,685,685,685,,,,685,685,,,,,',
',685,,,685,697,697,697,,697,685,685,,697,697,,,,697,,697,697,697,697',
'697,697,697,,,,,,697,697,697,697,697,697,697,,,697,,,,,,,697,,,697,697',
'697,697,697,697,697,,697,697,697,,697,697,,,,,,,,,,,,,,,,,,,,,,,,697',
',,697,,,697,,697,,,,,,,,,,,,,,,,,,,697,697,697,697,697,697,,,,697,697',
',,,,,,697,,,697,703,703,703,,703,697,697,,703,703,,,,703,,703,703,703',
'703,703,703,703,,,,,,703,703,703,703,703,703,703,,,703,,,,,,,703,,,703',
'703,703,703,703,703,703,,703,703,703,,703,703,,703,703,,,,,,,,,,,,,',
',,,,,,,703,,,703,,,703,,703,,703,,,,703,,,,,,,,703,,,,,703,703,703,703',
'703,703,,,,703,703,,,,,,,703,,,703,735,735,735,,735,703,703,,735,735',
',,,735,,735,735,735,735,735,735,735,,,,,,735,735,735,735,735,735,735',
',,735,,,,,,,735,,,735,735,735,735,735,735,735,,735,735,735,,735,735',
',735,735,,,,,,,,,,,,,,,,,,,,,735,,,735,,,735,,735,,735,,,,735,,,,,,',
',735,,,,,735,735,735,735,735,735,,,,735,735,,,,,,,735,,,735,742,742',
'742,,742,735,735,,742,742,,,,742,,742,742,742,742,742,742,742,,,,,,742',
'742,742,742,742,742,742,,,742,,,,,,,742,,,742,742,742,742,742,742,742',
',742,742,742,,742,742,,742,742,,,,,,,,,,,,,,,,,,,,,742,,,742,,,742,',
'742,,,,,,742,,,,,,,,742,,,,,742,742,742,742,742,742,,,,742,742,,,,,',
',742,,,742,747,747,747,747,747,742,742,,747,747,,,,747,,747,747,747',
'747,747,747,747,,,,,,747,747,747,747,747,747,747,,,747,,,,,,747,747',
',747,747,747,747,747,747,747,747,,747,747,747,,747,747,,747,747,,,,',
',,,,,,,,,,,,,,,,747,,,747,,,747,,747,,747,,,,747,,,,,,,,747,,,,,747',
'747,747,747,747,747,,,,747,747,,,,,,,747,,,747,751,751,751,751,751,747',
'747,,751,751,,,,751,,751,751,751,751,751,751,751,,,,,,751,751,751,751',
'751,751,751,,,751,,,,,,751,751,,751,751,751,751,751,751,751,751,,751',
'751,751,,751,751,,751,751,,,,,,,,,,,,,,,,,,,,,751,,,751,,,751,,751,',
'751,,,,751,,,,,,,,751,,,,,751,751,751,751,751,751,,,,751,751,,,,,,,751',
',,751,752,752,752,752,752,751,751,,752,752,,,,752,,752,752,752,752,752',
'752,752,,,,,,752,752,752,752,752,752,752,,,752,,,,,,752,752,,752,752',
'752,752,752,752,752,752,,752,752,752,,752,752,,752,752,,,,,,,,,,,,,',
',,,,,,,752,,,752,,,752,,752,,752,,,,752,,,,,,,,752,,,,,752,752,752,752',
'752,752,,,,752,752,,,,,,,752,,,752,759,759,759,,759,752,752,,759,759',
',,,759,,759,759,759,759,759,759,759,,,,,,759,759,759,759,759,759,759',
',,759,,,,,,,759,,,759,759,759,759,759,759,759,,759,759,759,,759,759',
',759,759,,,,,,,,,,,,,,,,,,,,,759,,,759,,,759,,759,,,,,,759,,,,,,,,759',
',,,,759,759,759,759,759,759,,,,759,759,,,,,,,759,,,759,773,773,773,773',
'773,759,759,,773,773,,,,773,,773,773,773,773,773,773,773,,,,,,773,773',
'773,773,773,773,773,,,773,,,,,,773,773,,773,773,773,773,773,773,773',
'773,,773,773,773,,773,773,,773,773,,,,,,,,,,,,,,,,,,,,,773,,,773,,,773',
',773,,773,,,,773,,,,,,,,773,,,,,773,773,773,773,773,773,,,,773,773,',
',,,,,773,,,773,779,779,779,,779,773,773,,779,779,,,,779,,779,779,779',
'779,779,779,779,,,,,,779,779,779,779,779,779,779,,,779,,,,,,,779,,,779',
'779,779,779,779,779,779,,779,779,779,,779,779,,779,779,,,,,,,,,,,,,',
',,,,,,,779,,,779,,,779,,779,,,,,,779,,,,,,,,779,,,,,779,779,779,779',
'779,779,,,,779,779,,,,,,,779,,,779,780,780,780,,780,779,779,,780,780',
',,,780,,780,780,780,780,780,780,780,,,,,,780,780,780,780,780,780,780',
',,780,,,,,,,780,,,780,780,780,780,780,780,780,,780,780,780,,780,780',
',780,780,,,,,,,,,,,,,,,,,,,,,780,,,780,,,780,,780,,,,,,780,,,,,,,,780',
',,,,780,780,780,780,780,780,,,,780,780,,,,,,,780,,,780,781,781,781,',
'781,780,780,,781,781,,,,781,,781,781,781,781,781,781,781,,,,,,781,781',
'781,781,781,781,781,,,781,,,,,,,781,,,781,781,781,781,781,781,781,,781',
'781,781,,781,781,,781,781,,,,,,,,,,,,,,,,,,,,,781,,,781,,,781,,781,',
',,,,781,,,,,,,,781,,,,,781,781,781,781,781,781,,,,781,781,,,,,,,781',
',,781,792,792,792,,792,781,781,,792,792,,,,792,,792,792,792,792,792',
'792,792,,,,,,792,792,792,792,792,792,792,,,792,,,,,,,792,,,792,792,792',
'792,792,792,792,,792,792,792,,792,792,,792,792,,,,,,,,,,,,,,,,,,,,,792',
',,792,,,792,,792,,,,,,792,,,,,,,,792,,,,,792,792,792,792,792,792,,,',
'792,792,,,,,,,792,,,792,793,793,793,,793,792,792,,793,793,,,,793,,793',
'793,793,793,793,793,793,,,,,,793,793,793,793,793,793,793,,,793,,,,,',
',793,,,793,793,793,793,793,793,793,,793,793,793,,793,793,,793,793,,',
',,,,,,,,,,,,,,,,,,793,,,793,,,793,,793,,,,,,793,,,,,,,,793,,,,,793,793',
'793,793,793,793,,,,793,793,,,,,,,793,,,793,794,794,794,,794,793,793',
',794,794,,,,794,,794,794,794,794,794,794,794,,,,,,794,794,794,794,794',
'794,794,,,794,,,,,,,794,,,794,794,794,794,794,794,794,,794,794,794,',
'794,794,,794,794,,,,,,,,,,,,,,,,,,,,,794,,,794,,,794,,794,,,,,,794,',
',,,,,,794,,,,,794,794,794,794,794,794,,,,794,794,,,,,,,794,,,794,807',
'807,807,,807,794,794,,807,807,,,,807,,807,807,807,807,807,807,807,,',
',,,807,807,807,807,807,807,807,,,807,,,,,,,807,,,807,807,807,807,807',
'807,807,,807,807,807,,807,807,,807,807,,,,,,,,,,,,,,,,,,,,,807,,,807',
',,807,,807,,807,,,,807,,,,,,,,807,,,,,807,807,807,807,807,807,,,,807',
'807,,,,,,,807,,,807,818,818,818,818,818,807,807,,818,818,,,,818,,818',
'818,818,818,818,818,818,,,,,,818,818,818,818,818,818,818,,,818,,,,,',
'818,818,,818,818,818,818,818,818,818,818,,818,818,818,,818,818,,818',
'818,,,,,,,,,,,,,,,,,,,,,818,,,818,,,818,,818,,818,,,,818,,,,,,,,818',
',,,,818,818,818,818,818,818,,,,818,818,,,,,,,818,,,818,837,837,837,',
'837,818,818,,837,837,,,,837,,837,837,837,837,837,837,837,,,,,,837,837',
'837,837,837,837,837,,,837,,,,,,,837,,,837,837,837,837,837,837,837,,837',
'837,837,,837,837,,837,837,,,,,,,,,,,,,,,,,,,,,837,,,837,,,837,,837,',
',,,,837,,,,,,,,837,,,,,837,837,837,837,837,837,,,,837,837,,,,,,,837',
',,837,839,839,839,839,839,837,837,,839,839,,,,839,,839,839,839,839,839',
'839,839,,,,,,839,839,839,839,839,839,839,,,839,,,,,,839,839,,839,839',
'839,839,839,839,839,839,,839,839,839,,839,839,,839,839,,,,,,,,,,,,,',
',,,,,,,839,,,839,,,839,,839,,839,,,,839,,,,,,,,839,,,,,839,839,839,839',
'839,839,,,,839,839,,,,,,,839,,,839,840,840,840,840,840,839,839,,840',
'840,,,,840,,840,840,840,840,840,840,840,,,,,,840,840,840,840,840,840',
'840,,,840,,,,,,840,840,,840,840,840,840,840,840,840,840,,840,840,840',
',840,840,,840,840,,,,,,,,,,,,,,,,,,,,,840,,,840,,,840,,840,,840,,,,840',
',,,,,,,840,,,,,840,840,840,840,840,840,,,,840,840,,,,,,,840,,,840,867',
'867,867,,867,840,840,,867,867,,,,867,,867,867,867,867,867,867,867,,',
',,,867,867,867,867,867,867,867,,,867,,,,,,,867,,,867,867,867,867,867',
'867,867,,867,867,867,,867,867,,867,867,,,,,,,,,,,,,,,,,,,,,867,,,867',
',,867,,867,,,,,,867,,,,,,,,867,,,,,867,867,867,867,867,867,,,,867,867',
',,,,,,867,,,867,881,881,881,,881,867,867,,881,881,,,,881,,881,881,881',
'881,881,881,881,,,,,,881,881,881,881,881,881,881,,,881,,,,,,,881,,,881',
'881,881,881,881,881,881,,881,881,881,,881,881,,881,881,,,,,,,,,,,,,',
',,,,,,,881,,,881,,,881,,881,,,,,,881,,,,,,,,881,,,,,881,881,881,881',
'881,881,,,,881,881,,,,,,,881,,,881,882,882,882,,882,881,881,,882,882',
',,,882,,882,882,882,882,882,882,882,,,,,,882,882,882,882,882,882,882',
',,882,,,,,,,882,,,882,882,882,882,882,882,882,,882,882,882,,882,882',
',882,882,,,,,,,,,,,,,,,,,,,,,882,,,882,,,882,,882,,,,,,882,,,,,,,,882',
',,,,882,882,882,882,882,882,,,,882,882,,,,,,,882,,,882,883,883,883,',
'883,882,882,,883,883,,,,883,,883,883,883,883,883,883,883,,,,,,883,883',
'883,883,883,883,883,,,883,,,,,,,883,,,883,883,883,883,883,883,883,,883',
'883,883,,883,883,,883,883,,,,,,,,,,,,,,,,,,,,,883,,,883,,,883,,883,',
',,,,883,,,,,,,,883,,,,,883,883,883,883,883,883,,,,883,883,,,,,,,883',
',,883,887,887,887,,887,883,883,,887,887,,,,887,,887,887,887,887,887',
'887,887,,,,,,887,887,887,887,887,887,887,,,887,,,,,,,887,,,887,887,887',
'887,887,887,887,887,887,887,887,,887,887,,887,887,,,,,,,,,,,,,,,,,,',
',,887,,,887,,,887,,887,,,,887,,887,,,,,,,,887,,,,,887,887,887,887,887',
'887,,,,887,887,,,,,,,887,,,887,892,892,892,892,892,887,887,,892,892',
',,,892,,892,892,892,892,892,892,892,,,,,,892,892,892,892,892,892,892',
',,892,,,,,,892,892,,892,892,892,892,892,892,892,892,,892,892,892,,892',
'892,,892,892,,,,,,,,,,,,,,,,,,,,,892,,,892,,,892,,892,,892,,,,892,,',
',,,,,892,,,,,892,892,892,892,892,892,,,,892,892,,,,,,,892,,,892,896',
'896,896,,896,892,892,,896,896,,,,896,,896,896,896,896,896,896,896,,',
',,,896,896,896,896,896,896,896,,,896,,,,,,,896,,,896,896,896,896,896',
'896,896,,896,896,896,,896,896,,,,,,,,,,,,,,,,,,,,,,,,896,,,896,,,896',
',896,,,,,,,,,,,,,,,,,,,896,896,896,896,896,896,,,,896,896,,,,,,,896',
',,896,906,906,906,,906,896,896,,906,906,,,,906,,906,906,906,906,906',
'906,906,,,,,,906,906,906,906,906,906,906,,,906,,,,,,,906,,,906,906,906',
'906,906,906,906,,906,906,906,,906,906,,906,906,,,,,,,,,,,,,,,,,,,,,906',
',,906,,,906,,906,,906,,,,906,,,,,,,,906,,,,,906,906,906,906,906,906',
',,,906,906,,,,,,,906,,,906,907,907,907,907,907,906,906,,907,907,,,,907',
',907,907,907,907,907,907,907,,,,,,907,907,907,907,907,907,907,,,907',
',,,,,907,907,,907,907,907,907,907,907,907,907,,907,907,907,,907,907',
',907,907,,,,,,,,,,,,,,,,,,,,,907,,,907,,,907,,907,,907,,,,907,,,,,,',
',907,,,,,907,907,907,907,907,907,,,,907,907,,,,,,,907,,,907,910,910',
'910,910,910,907,907,,910,910,,,,910,,910,910,910,910,910,910,910,,,',
',,910,910,910,910,910,910,910,,,910,,,,,,910,910,,910,910,910,910,910',
'910,910,910,,910,910,910,,910,910,,910,910,,,,,,,,,,,,,,,,,,,,,910,',
',910,,,910,,910,,910,,,,910,,,,,,,,910,,,,,910,910,910,910,910,910,',
',,910,910,,,,,,,910,,,910,928,928,928,,928,910,910,,928,928,,,,928,',
'928,928,928,928,928,928,928,,,,,,928,928,928,928,928,928,928,,,928,',
',,,,,928,,,928,928,928,928,928,928,928,,928,928,928,,928,928,,928,928',
',,,,,,,,,,,,,,,,,,,,928,,,928,,,928,,928,,928,,928,,928,,,,,,,,928,',
',,,928,928,928,928,928,928,,,,928,928,,,,,,,928,,,928,930,930,930,930',
'930,928,928,,930,930,,,,930,,930,930,930,930,930,930,930,,,,,,930,930',
'930,930,930,930,930,,,930,,,,,,930,930,,930,930,930,930,930,930,930',
'930,,930,930,930,,930,930,,930,930,,,,,,,,,,,,,,,,,,,,,930,,,930,,,930',
',930,,930,,,,930,,,,,,,,930,,,,,930,930,930,930,930,930,,,,930,930,',
',,,,,930,,,930,937,937,937,937,937,930,930,,937,937,,,,937,,937,937',
'937,937,937,937,937,,,,,,937,937,937,937,937,937,937,,,937,,,,,,937',
'937,,937,937,937,937,937,937,937,937,,937,937,937,,937,937,,937,937',
',,,,,,,,,,,,,,,,,,,,937,,,937,,,937,,937,,937,,,,937,,,,,,,,937,,,,',
'937,937,937,937,937,937,,,,937,937,,,,,,,937,,,937,942,942,942,942,942',
'937,937,,942,942,,,,942,,942,942,942,942,942,942,942,,,,,,942,942,942',
'942,942,942,942,,,942,,,,,,942,942,,942,942,942,942,942,942,942,942',
',942,942,942,,942,942,,942,942,,,,,,,,,,,,,,,,,,,,,942,,,942,,,942,',
'942,,942,,,,942,,,,,,,,942,,,,,942,942,942,942,942,942,,,,942,942,,',
',,,,942,,,942,950,950,950,950,950,942,942,,950,950,,,,950,,950,950,950',
'950,950,950,950,,,,,,950,950,950,950,950,950,950,,,950,,,,,,950,950',
',950,950,950,950,950,950,950,950,,950,950,950,,950,950,,950,950,,,,',
',,,,,,,,,,,,,,,,950,,,950,,,950,,950,,950,,,,950,,,,,,,,950,,,,,950',
'950,950,950,950,950,,,,950,950,,,,,,,950,,,950,952,952,952,,952,950',
'950,,952,952,,,,952,,952,952,952,952,952,952,952,,,,,,952,952,952,952',
'952,952,952,,,952,,,,,,,952,,,952,952,952,952,952,952,952,952,952,952',
'952,,952,952,,952,952,,,,,,,,,,,,,,,,,,,,,952,,,952,,,952,,952,,952',
',,,952,,,,,,,,952,,,,437,952,952,952,952,952,952,437,437,437,952,952',
',437,437,,437,,952,,,952,,,,437,,952,952,,,,,,,,437,437,,437,437,437',
'437,437,,,,,,,,,,,,,,,,,,,,,,437,437,437,437,437,437,437,437,437,437',
'437,437,437,437,437,,,437,437,437,,437,,,,437,,,,,,437,,437,,437,437',
'437,437,437,437,437,,437,437,437,,,,,,,,,,,,,437,437,,437,,437,,439',
'437,,437,,,437,439,439,439,,,,439,439,,439,,,,,,,,,,,,,,,,,,,,439,439',
',439,439,439,439,439,,,,,,,,,,,,,,,,,,,,,,439,439,439,439,439,439,439',
'439,439,439,439,439,439,439,439,,,439,439,439,,439,,,,439,,,,,,439,',
'439,,439,439,439,439,439,439,439,,439,,439,,,,,,,,,,,,,439,439,,439',
',439,,646,439,,439,,,439,646,646,646,,,646,646,646,,646,,,,,,,,,646',
'646,646,,,,,,,,,646,646,,646,646,646,646,646,,,,,,,,,,,,,,,,,,,,,,646',
'646,646,646,646,646,646,646,646,646,646,646,646,646,646,,,646,646,646',
',646,646,,,646,,646,,646,,646,,646,,646,646,646,646,646,646,646,,646',
'646,646,,,,,,,,,,,,,646,646,646,646,,646,,647,646,,646,,,646,647,647',
'647,,,647,647,647,,647,,,,,,,,,,647,647,,,,,,,,,647,647,,647,647,647',
'647,647,,,,,,,,,,,,,,,,,,,,,,647,647,647,647,647,647,647,647,647,647',
'647,647,647,647,647,,,647,647,647,,647,647,,,647,,647,,647,,647,,647',
',647,647,647,647,647,647,647,,647,,647,,,,,,,,,,,,,647,647,647,647,',
'647,,28,647,,647,,,647,28,28,28,,,28,28,28,,28,,,,,,,,,,28,28,,,,,,',
',,28,28,,28,28,28,28,28,,,,,,,,,,,,,,,,,,,,,,28,28,28,28,28,28,28,28',
'28,28,28,28,28,28,28,,,28,28,28,,,28,,28,28,,28,,28,,28,,28,,28,28,28',
'28,28,28,28,,28,,28,,,,,,,,,,,,,28,28,28,28,50,28,,,28,,28,50,50,50',
',,50,50,50,,50,,,,,,,,,,50,50,50,,,,,,,,50,50,,50,50,50,50,50,,,,,,',
',,,,,,,,,,,,,,,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,,,50,50',
'50,,,50,,,50,,50,,50,,50,,50,,50,50,50,50,50,50,50,,50,,50,,,,,,,,,',
',,,50,50,50,50,496,50,,50,50,,50,496,496,496,,,496,496,496,,496,,,,',
',,,,,496,,,,,,,,,,496,496,,496,496,496,496,496,,,,,,,,,,,,497,,,,,,',
'497,497,497,,,497,497,497,,497,,,,,496,496,,,,497,,,496,,,,,496,496',
'497,497,,497,497,497,497,497,,,,,,,,,,,,496,,,,,,,,,,,,,496,,496,,,496',
',,497,497,,498,,,,,497,,498,498,498,497,497,498,498,498,,498,,,,,,,',
',,498,,,,,497,,,,,498,498,,498,498,498,498,498,497,,497,,,497,202,202',
',,202,,,,,,,,,202,202,202,202,202,202,202,202,202,,,202,202,498,498',
',,202,202,202,202,498,,,,,498,498,,,,,202,202,,202,202,202,202,202,202',
'202,202,202,202,202,,498,202,,,,,,,,,,,,498,,498,,,498,7,7,7,7,7,7,7',
'7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,,,,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7',
'7,7,7,7,7,7,7,7,,7,,,,,,,,,7,7,7,7,7,7,7,7,7,,,7,7,,,,,7,7,7,7,,,,,',
',,,,,,7,7,,7,7,7,7,7,7,7,7,7,7,7,,,7,7,,,,,,,,,,7,8,8,8,8,8,8,8,8,8',
'8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,,,,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8',
'8,8,8,8,8,,,8,,,,,,,,,8,8,8,8,8,8,8,8,8,,,8,8,,,,,8,8,8,8,,,,,,,,,,',
',8,8,,8,8,8,8,8,8,8,8,8,8,8,,,8,8,,,,,,,,,,8,412,412,412,412,412,412',
'412,412,412,412,412,412,412,412,412,412,412,412,412,412,412,412,412',
'412,,,,412,412,412,412,412,412,412,412,412,412,412,412,412,412,412,412',
'412,412,412,412,412,412,412,,,412,,,,,,,,,412,412,412,412,412,412,412',
'412,412,,,412,412,,,,,412,412,412,412,,,,,,,,,,,,412,412,,412,412,412',
'412,412,412,412,412,412,412,412,,,412,412,,,,,,,,,,412,416,416,416,416',
'416,416,416,416,416,416,416,416,416,416,416,416,416,416,416,416,416',
'416,416,416,,,,416,416,416,416,416,416,416,416,416,416,416,416,416,416',
'416,416,416,416,416,416,416,416,416,,,416,,,,,,,,,416,416,416,416,416',
'416,416,416,416,,,416,416,,,,,416,416,416,416,,,,,,,,,,,,416,416,,416',
'416,416,416,416,416,416,416,416,416,416,,,416,416,,,,,,,,,,416,65,65',
'65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,,',
',65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65',
'65,65,65,,65,,,,,,,65,65,65,65,65,65,65,65,65,,,65,65,,,,,65,65,65,65',
',,,,,65,,,,,,65,65,,65,65,65,65,65,65,65,65,65,65,65,,,65,79,79,79,79',
'79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,,,,79,79',
'79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79',
'79,,79,,,,,,,79,79,79,79,79,79,79,79,79,,,79,79,,,,,79,79,79,79,,,,',
',,,,,,,79,79,,79,79,79,79,79,79,79,79,79,79,79,,,79,192,192,192,192',
'192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192',
'192,192,192,,,,192,192,192,192,192,192,192,192,192,192,192,192,192,192',
'192,192,192,192,192,192,192,192,192,192,192,192,,192,,,,,,,192,192,192',
'192,192,192,192,192,192,,,192,192,,,,,192,192,192,192,,,,,,,,,,,,192',
'192,,192,192,192,192,192,192,192,192,192,192,192,,,192,770,770,770,770',
'770,770,770,770,770,770,770,770,770,770,770,770,770,770,770,770,770',
'770,770,770,,,,770,770,770,770,770,770,770,770,770,770,770,770,770,770',
'770,770,770,770,770,770,770,770,770,,,770,,,,,,,,,770,770,770,770,770',
'770,770,770,770,,,770,770,,,,,770,770,770,770,,,,,,,,,,,,770,770,,770',
'770,770,770,770,770,770,770,770,770,770,201,201,770,,201,,,,,,,,,201',
'201,201,201,201,201,201,201,201,,,201,201,,,,,201,201,201,201,,,,,,201',
',,,,,201,201,,201,201,201,201,201,201,201,201,201,201,201,203,203,201',
',203,,,,,,,,,203,203,203,203,203,203,203,203,203,,,203,203,,,,,203,203',
'203,203,,,,,,,,,,,,203,203,,203,203,203,203,203,203,203,203,203,203',
'203,265,265,203,,265,,,,,,,,,265,265,265,265,265,265,265,265,265,,,265',
'265,,,,,265,265,265,265,,,,,,,,,,,,265,265,,265,265,265,265,265,265',
'265,265,265,265,265,266,266,265,,266,,,,,,,,,266,266,266,266,266,266',
'266,266,266,,,266,266,,,,,266,266,266,266,,,,,,,,,,,,266,266,,266,266',
'266,266,266,266,266,266,266,266,266,267,267,266,,267,,,,,,,,,267,267',
'267,267,267,267,267,267,267,,,267,267,,,,,267,267,267,267,,,,,,,,,,',
',267,267,,267,267,267,267,267,267,267,267,267,267,267,450,450,267,,450',
',,,,,,,,450,450,450,450,450,450,450,450,450,,,450,450,,,,,450,450,450',
'450,,,,,,450,,,,,,450,450,,450,450,450,450,450,450,450,450,450,450,450',
'451,451,450,,451,,,,,,,,,451,451,451,451,451,451,451,451,451,,,451,451',
',,,,451,451,451,451,,,,,,,,,,,,451,451,,451,451,451,451,451,451,451',
'451,451,451,451,523,523,451,,523,,,,,,,,,523,523,523,523,523,523,523',
'523,523,,,523,523,,,,,523,523,523,523,,,,,,523,,,,,,523,523,,523,523',
'523,523,523,523,523,523,523,523,523,524,524,523,,524,,,,,,,,,524,524',
'524,524,524,524,524,524,524,,,524,524,,,,,524,524,524,524,,,,,,,,,,',
',524,524,,524,524,524,524,524,524,524,524,524,524,524,526,526,524,,526',
',,,,,,,,526,526,526,526,526,526,526,526,526,,,526,526,,,,,526,526,526',
'526,,,,,,,,,,,,526,526,,526,526,526,526,526,526,526,526,526,526,526',
'536,536,526,,536,,,,,,,,,536,536,536,536,536,536,536,536,536,,,536,536',
',,,,536,536,536,536,,,,,,536,,,,,,536,536,,536,536,536,536,536,536,536',
'536,536,536,536,537,537,536,,537,,,,,,,,,537,537,537,537,537,537,537',
'537,537,,,537,537,,,,,537,537,537,537,,,,,,,,,,,,537,537,,537,537,537',
'537,537,537,537,537,537,537,537,586,586,537,,586,,,,,,,,,586,586,586',
'586,586,586,586,586,586,,,586,586,,,,,586,586,586,586,,,,,,586,,,,,',
'586,586,,586,586,586,586,586,586,586,586,586,586,586,587,587,586,,587',
',,,,,,,,587,587,587,587,587,587,587,587,587,,,587,587,,,,,587,587,587',
'587,,,,,,,,,,,,587,587,,587,587,587,587,587,587,587,587,587,587,587',
'593,593,587,,593,,,,,,,,,593,593,593,593,593,593,593,593,593,,,593,593',
',,,,593,593,593,593,,,,,,,,,,,,593,593,,593,593,593,593,593,593,593',
'593,593,593,593,595,595,593,,595,,,,,,,,,595,595,595,595,595,595,595',
'595,595,,,595,595,,,,,595,595,595,595,,,,,,595,,,,,,595,595,,595,595',
'595,595,595,595,595,595,595,595,595,827,827,595,,827,,,,,,,,,827,827',
'827,827,827,827,827,827,827,,,827,827,,,,,827,827,827,827,,,,,,,,,,',
',827,827,,827,827,827,827,827,827,827,827,827,827,827,953,953,827,,953',
',,,,,,,,953,953,953,953,953,953,953,953,953,,,953,953,,,,,953,953,953',
'953,,,,,,953,,,,,,953,953,,953,953,953,953,953,953,953,953,953,953,953',
'954,954,953,,954,,,,,,,,,954,954,954,954,954,954,954,954,954,,,954,954',
',,,,954,954,954,954,,,,,,,,,,,,954,954,,954,954,954,954,954,954,954',
'954,954,954,954,,,954' ]
        racc_action_check = arr = ::Array.new(25330, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_action_pointer = [
    -2,    25,   nil,   -46,   nil,   900,   -71, 23283, 23404,   -15,
   -30,   -19,    52,   386,   351,   435,   nil,   129,   260,  1439,
   171,   nil,   391,   522,   653,   307,   -14,   784, 22768,   nil,
   915,  1046,  1177,   nil,    76,   432,   161,   440,  1308,  1439,
  1570,   104,   415,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
 22895,   nil,  1701,  1832,  1963,   -19,  3565,  2094,  2225,   nil,
   nil,  2356,  2487,  2618,   nil, 23767,   nil,   nil,   nil,   nil,
   nil,   194,   nil,   nil,   nil,   nil,   nil,   110,   132, 23877,
   nil,   nil,   nil,   551,  2749,   nil,   nil,  2880,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   330,   nil,  3011,
   nil,   nil,   nil,  3142,  3273,  3404,  3535,  3666,  3797,   nil,
   568,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil, 23987,   220,   nil,  3928,  4059,  4190,  4321,  4452,
  4583, 24156, 23156, 24215,  4714,  4845,  4976,   nil,   514,   -76,
   316,   -63,   251,   352,  5107,  5238,   nil,   nil,  5369,   364,
  5500,  5631,  5762,  5893,  6024,  6155,  6286,  6417,  6548,  6679,
  6810,  6941,  7072,  7203,  7334,  7465,  7596,  7727,  7858,  7989,
  8120,  8251,  8382,  8513,  8644,   nil,   nil,   nil,   nil,  1570,
   nil,   363,   388,   nil,  8775,   449,  8906,   nil,   nil,   nil,
   nil,   nil,  9037,   nil,   nil, 24274, 24333, 24392,   456,  9168,
  9299,   nil,   nil,   nil,   nil,   nil,   nil,   nil,  9430,   146,
  1031,   469,  9561,   475,   479,   458,  9692,  9823,    17,   517,
   560,    39,   529,   501,   -11,   nil,   538,   580,   nil,  9954,
   nil,   461,   581,   584,   546,   nil,   593,   nil, 10085,   nil,
 10216,    31,   nil,   542,   -89,   -47,   577,   568,   412,   605,
   nil,   nil,   -21,  3696,   nil,   nil,   nil,   571,   576,   nil,
   589,   611,   nil,   nil,   nil,   nil,   nil,   nil,   nil,  1033,
   nil,   nil,   nil,   689,   nil,   nil,   690,   616,    -7,     0,
 10347, 10478,   333,   350,   614,    -2,  1039,   689,     0,   721,
   nil,   nil,  1033,   693,   nil,  1043,   nil,    68,   nil,   nil,
 10609,   148,   380,   381,   396,   438,   450,   504,   518,   nil,
   519,   nil, 10740,   nil,   285,   nil,   348,   nil,   356,   642,
   375,   nil,   644,   -33,   nil,   391,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   661, 23525,   nil,   nil,   nil, 23646,   662,   nil,   nil,
   653,   nil, 10871,   647,   nil,   650,   nil,   nil,  1701,   688,
   689,   463,   480, 11002,   nil,   nil,   nil, 22248,   694, 22378,
   nil, 11133, 11264, 11395,   nil,   nil,   nil,  1832,   nil,   nil,
 24451, 24510, 11526, 11657,   -51, 11788, 11919, 12050,    44,   nil,
  3928,  4059,   260,   566,   719,   724,   728,   731,  3529,  5625,
  2642,  4190,  2612,  4315,  4452,  4583,  4714,  4845,  4976,  5107,
  5238,  1048,  1248,  5369,  5500, 12181,   -34,   nil, 12312,   nil,
 12443,   nil, 12574,   nil,   167,   nil, 23022, 23077, 23156,    -7,
   nil,   674,   nil,   nil,   672,   674,   nil,   nil, 12705,   166,
   167,   722,   nil,   nil, 12836,   730,   695,   nil,   nil,   702,
 12967,   740, 13098, 24569, 24628, 13229, 24687,   170,   742,   nil,
   nil,   717,   nil, 13360, 13491, 13622, 24746, 24805,  1963, 13753,
   839,   851,   771,   nil,   nil, 13884,   nil,   nil, 14015,   nil,
   nil,   nil,   nil, 14146, 14277,   774,   nil,   713,   nil,   nil,
 14408,  3827,   nil,   583,   nil,   nil,   775,   nil,  3550,   nil,
   742,   902,   nil,   nil, 14539,   858,   nil,   nil, 14670,   203,
   204,   855,   865, 14801,   nil, 14932, 24864, 24923, 15063,    16,
   nil,  1070,   nil, 24982, 15194, 25041,   nil,   nil, 15325,   374,
 15456,   nil,  1190,   nil,   nil,   nil,    34,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   244,   nil,   nil,
   nil,   749,   nil,   nil,   nil,   nil,   nil, 15587,   752, 15718,
   506,    98, 15849, 15980,   799,   nil,   nil,   nil, 16111,   800,
   nil, 16242,   801,   nil,   202,   283, 22508, 22638,   810,   811,
   784,   nil,  1308,   nil,  2517,   nil, 16373,   778,   nil,   820,
 16504,   nil,   nil, 16635,   nil,   nil,   nil,   nil,   nil,   nil,
 16766,   nil,   819, 16897, 17028,   915,   784,   nil,   nil,   821,
 17159, 17290,   nil,  1241,   -25, 17421,   786,   nil,   822,   207,
   229,   826,   252,   260,   835,   835,   839, 17552,  2094,   864,
   866,    66,   937, 17683,   nil,   nil,   482,   nil,   847,   952,
   nil,   nil,   834,   nil,   848,  1140,   923,   865,   866,   nil,
   nil,   905,  3587,   nil,   686,   nil,   982,   nil,   nil,   nil,
   nil,   nil,   990,   nil,   992, 17814,   910,    29,    40,    80,
   121,   912, 17945,  1174,   nil,   916,   915, 18076,   481,   nil,
   212, 18207, 18338,  2500,   505,   nil,   nil,   959,   nil, 18469,
   nil,   886,   898,   nil,   899,   900,   907,   nil,   898,   nil,
 24097,   945,   637, 18600,   nil,   nil,   nil,  2225,   912, 18731,
 18862, 18993,   nil,  2356,   nil,  2749,   nil,   nil,  2880,   nil,
  3011,   nil, 19124, 19255, 19386,   342,   349,   nil,   nil,   934,
  1033,   nil,   nil,   nil,   933,   nil,   919, 19517,   nil,   936,
  1042,   929,   232,   nil,   nil,   nil,  1051,   nil, 19648,   934,
   975,   nil,   nil,   nil,   nil,   nil,   nil, 25100,   nil,   728,
   nil,   nil,   nil,   nil,  1426,  1073,   nil, 19779,  1079, 19910,
 20041,   nil,   nil,    45,    50,  1350,   229,   nil,  1081,   nil,
   nil,  1083,  1084,   978,   nil,   nil,   nil,   282,   nil,   nil,
   632,  2631,   nil,   335,   nil,   362,   nil, 20172,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   995,   982,   nil,  3142,   nil,
  3273, 20303, 20434, 20565,   nil,   nil,   nil, 20696,   985,   nil,
   nil,   nil, 20827,   nil,   nil,    72, 20958,   nil,  1023,   988,
   nil,   nil,    76,   nil,  1109,  1115, 21089, 21220,   nil,   nil,
 21351,   nil,   nil,  1035,   nil,  1000,   nil,   nil,  1003,  1004,
  1006,   997,   nil,   nil,  9705,   nil,  3404,   nil, 21482,   nil,
 21613,    80,  1481,  1081,    84,   nil,   nil, 21744,   nil,   nil,
   nil,   467, 21875,  1127,   nil,   nil,   466,   nil,   nil,   nil,
 22006,  1131, 22137, 25159, 25218,    88,   720,   nil,   nil,   nil,
  1131,   nil,  1017,  1136,   nil,  1060,    96,   110,   176,   211,
   nil,   nil,   nil,   nil,   129 ]

racc_action_default = [
    -3,  -559,    -1,  -547,    -4,    -6,  -559,  -559,  -559,  -559,
  -559,  -559,  -559,  -559,  -280,   -37,   -38,  -559,  -559,   -43,
   -45,   -46,  -292,  -330,  -331,   -50,  -258,  -385,  -258,   -65,
   -10,   -69,   -76,   -78,  -559,  -460,  -559,  -559,  -559,  -559,
  -559,  -549,  -234,  -273,  -274,  -275,  -276,  -277,  -278,  -279,
  -537,  -282,  -559,  -558,  -528,  -300,  -558,  -559,  -559,  -305,
  -308,  -547,  -559,  -559,  -322,  -559,  -332,  -333,  -403,  -404,
  -405,  -406,  -407,  -558,  -410,  -558,  -558,  -558,  -558,  -558,
  -437,  -443,  -444,  -559,  -449,  -450,  -451,  -452,  -453,  -454,
  -455,  -456,  -457,  -458,  -459,  -462,  -463,  -559,    -2,  -548,
  -554,  -555,  -556,  -559,  -559,  -559,  -559,  -559,    -3,   -13,
  -559,  -105,  -106,  -107,  -108,  -109,  -110,  -111,  -114,  -115,
  -116,  -117,  -118,  -119,  -120,  -121,  -122,  -123,  -124,  -125,
  -126,  -127,  -128,  -129,  -130,  -131,  -132,  -133,  -134,  -135,
  -136,  -137,  -138,  -139,  -140,  -141,  -142,  -143,  -144,  -145,
  -146,  -147,  -148,  -149,  -150,  -151,  -152,  -153,  -154,  -155,
  -156,  -157,  -158,  -159,  -160,  -161,  -162,  -163,  -164,  -165,
  -166,  -167,  -168,  -169,  -170,  -171,  -172,  -173,  -174,  -175,
  -176,  -177,  -178,  -179,  -180,  -181,  -182,  -183,  -184,  -185,
  -186,  -187,  -559,   -18,  -112,   -10,  -559,  -559,  -559,  -558,
  -558,  -559,  -559,  -559,  -559,  -559,  -559,   -41,  -559,  -460,
  -559,  -280,  -559,  -559,   -10,  -559,   -42,  -224,  -559,  -559,
  -559,  -559,  -559,  -559,  -559,  -559,  -559,  -559,  -559,  -559,
  -559,  -559,  -559,  -559,  -559,  -559,  -559,  -559,  -559,  -559,
  -559,  -559,  -559,  -559,  -559,  -231,  -372,  -374,   -47,  -235,
  -251,  -265,  -265,  -255,  -559,  -266,  -559,  -292,  -330,  -331,
  -558,  -530,  -559,   -48,   -49,  -559,  -559,  -559,   -55,  -558,
  -559,  -299,  -378,  -386,  -388,   -63,  -384,   -64,  -559,  -547,
   -11,   -65,   -10,  -559,  -559,   -70,   -73,   -10,  -460,  -559,
  -559,  -280,  -295,  -549,  -559,  -334,  -385,  -559,   -75,  -559,
   -80,  -287,  -445,  -446,  -559,  -209,  -210,  -225,  -559,  -550,
   -10,  -549,  -236,  -549,  -551,  -551,  -559,  -559,  -551,  -559,
  -301,  -302,  -559,  -559,  -345,  -346,  -353,  -558,  -494,  -360,
  -558,  -558,  -371,  -493,  -495,  -496,  -497,  -498,  -499,  -559,
  -512,  -517,  -518,  -520,  -521,  -522,  -559,   -44,  -559,  -559,
  -559,  -559,  -547,  -559,  -548,  -460,  -559,  -559,  -280,  -559,
  -501,  -502,  -101,  -559,  -103,  -559,  -280,  -559,  -319,  -460,
  -559,  -105,  -106,  -143,  -144,  -160,  -165,  -172,  -175,  -325,
  -559,  -526,  -559,  -408,  -559,  -423,  -559,  -425,  -559,  -559,
  -559,  -415,  -559,  -559,  -421,  -559,  -436,  -438,  -439,  -440,
  -441,  -447,  -448,   975,    -5,  -557,   -19,   -20,   -21,   -22,
   -23,  -559,  -559,   -15,   -16,   -17,  -559,  -559,   -25,   -34,
  -188,  -266,  -559,  -559,   -26,   -35,   -36,   -27,  -190,  -559,
  -559,  -538,  -539,  -558,  -381,  -540,  -541,  -538,  -258,  -539,
  -383,  -543,  -544,  -558,  -538,  -539,   -33,  -198,   -39,   -40,
  -559,  -559,  -558,  -558,  -287,  -559,  -559,  -559,  -559,  -298,
  -199,  -200,  -201,  -202,  -203,  -204,  -205,  -206,  -211,  -212,
  -213,  -214,  -215,  -216,  -217,  -218,  -219,  -220,  -221,  -222,
  -223,  -226,  -227,  -228,  -229,  -559,  -558,  -252,  -559,  -253,
  -559,  -263,  -559,  -267,  -559,  -533,  -258,  -258,  -258,  -558,
   -56,  -549,  -246,  -247,  -265,  -265,  -259,  -260,  -559,  -558,
  -558,  -559,  -294,    -9,  -548,  -559,   -66,  -285,   -81,   -71,
  -559,  -559,  -558,  -559,  -559,  -558,  -559,  -287,  -559,  -445,
  -446,   -77,   -82,  -559,  -559,  -559,  -559,  -559,  -230,  -559,
  -395,  -559,  -559,  -237,  -238,  -553,  -552,  -240,  -553,  -290,
  -291,  -529,  -342,   -10,   -10,  -559,  -344,  -559,  -362,  -369,
  -559,  -366,  -367,  -559,  -370,  -494,  -559,  -503,  -559,  -505,
  -507,  -511,  -519,  -523,   -10,  -335,  -336,  -337,   -10,  -559,
  -559,  -559,  -559,   -10,  -390,  -558,  -559,  -559,  -558,  -287,
  -314,  -101,  -102,  -559,  -558,  -559,  -317,  -464,  -559,  -559,
  -559,  -323,  -492,  -327,  -545,  -546,  -549,  -409,  -424,  -427,
  -428,  -430,  -411,  -426,  -412,  -413,  -414,  -559,  -417,  -419,
  -420,  -559,  -442,    -7,   -14,  -113,   -24,  -559,  -272,  -559,
  -288,  -289,  -559,  -559,   -59,  -244,  -245,  -379,  -559,   -61,
  -382,  -559,   -57,  -380,  -538,  -539,  -538,  -539,  -559,  -559,
  -188,  -297,  -559,  -356,  -559,  -358,   -10,  -265,  -264,  -268,
  -559,  -531,  -532,  -559,   -51,  -375,   -52,  -376,   -53,  -377,
   -10,  -242,  -559,  -248,  -250,   -43,  -559,  -257,  -261,  -559,
   -10,   -10,  -293,   -12,   -66,  -559,   -74,   -79,  -559,  -538,
  -539,  -558,  -542,  -286,  -559,  -559,  -558,  -559,  -197,  -207,
  -208,  -559,  -558,  -558,  -283,  -284,  -551,  -241,  -559,  -559,
  -343,  -354,  -559,  -361,  -558,  -355,  -559,  -558,  -558,  -513,
  -500,  -559,  -559,  -510,  -558,  -338,  -558,  -306,  -339,  -340,
  -341,  -309,  -559,  -312,  -559,  -559,  -559,  -538,  -539,  -542,
  -286,  -559,  -559,  -101,  -104,  -542,  -559,   -10,  -559,  -466,
  -559,   -10,   -10,  -492,  -559,  -469,  -470,  -472,  -473,  -475,
  -476,  -525,  -525,  -481,  -483,  -483,  -483,  -491,  -494,  -515,
  -559,  -559,  -559,   -10,  -416,  -418,  -422,  -189,  -270,  -559,
  -559,  -559,   -30,  -193,   -31,  -194,   -60,   -32,  -195,   -62,
  -196,   -58,  -559,  -559,  -559,  -289,  -288,  -232,  -357,  -559,
  -559,  -254,  -269,  -534,  -559,  -243,  -265,  -559,  -262,  -559,
  -559,   -72,  -288,  -289,   -83,  -296,  -558,  -351,   -10,  -396,
  -558,  -397,  -398,  -239,  -347,  -348,  -368,  -559,  -287,  -559,
  -364,  -365,  -504,  -506,  -509,  -559,  -349,  -559,  -559,   -10,
   -10,  -311,  -313,  -559,  -288,   -93,  -559,  -288,  -559,  -465,
  -320,  -559,  -559,  -549,  -468,  -471,  -474,  -559,  -479,  -480,
  -559,  -559,  -487,  -559,  -489,  -559,  -490,  -559,  -328,  -527,
  -429,  -432,  -433,  -434,  -435,  -559,  -271,   -28,  -191,   -29,
  -192,  -559,  -559,  -559,  -359,  -373,   -54,  -249,  -265,  -387,
  -389,    -8,   -10,  -402,  -352,  -559,  -559,  -400,  -286,  -558,
  -508,  -303,  -559,  -304,  -559,  -559,  -559,   -10,  -315,  -318,
   -10,  -324,  -326,  -559,  -477,  -525,  -524,  -482,  -483,  -483,
  -483,  -559,  -516,  -514,  -492,  -431,  -233,  -256,  -559,  -401,
   -10,  -460,  -559,  -559,  -280,  -399,  -363,   -10,  -307,  -310,
  -268,  -558,   -10,  -559,  -467,  -478,  -559,  -485,  -486,  -488,
   -10,  -395,  -558,  -559,  -559,  -287,  -558,  -391,  -392,  -393,
  -559,  -321,  -483,  -559,  -394,  -559,  -538,  -539,  -542,  -286,
  -350,  -316,  -484,  -329,  -288 ]

clist = [
'13,316,5,541,250,250,250,114,114,324,332,582,285,719,379,500,567,208',
'208,308,102,752,208,208,208,419,426,764,397,99,13,289,289,367,531,313',
'10,251,251,251,767,298,661,702,711,348,349,727,731,352,489,559,208,208',
'562,564,835,208,208,109,194,208,356,365,2,114,10,117,117,98,574,578',
'281,544,547,566,283,551,102,114,295,295,592,922,643,384,1,216,404,891',
'193,406,407,408,409,858,859,361,360,13,661,5,816,208,208,208,208,13',
'13,410,5,295,295,412,485,883,248,263,264,501,12,671,14,608,386,388,838',
'353,395,618,679,506,381,317,320,10,656,665,667,669,321,397,359,10,10',
'596,380,429,430,670,12,603,14,291,291,310,272,276,350,680,681,839,351',
'840,742,942,922,747,600,910,370,751,411,602,770,924,322,552,764,717',
'247,313,313,486,358,366,509,510,957,735,820,767,114,895,383,13,208,208',
'208,208,208,390,442,617,208,208,208,393,763,870,772,423,423,773,13,208',
'853,915,914,12,918,14,833,,,,661,12,12,14,14,10,,608,,,,,284,732,,268',
'275,277,,567,,,723,945,10,250,250,,,686,,,,,250,,252,252,252,418,424',
'427,,208,208,528,494,446,,,555,332,208,,532,,13,,504,251,289,13,970',
'542,,543,,251,318,519,102,,,289,658,,658,489,721,514,,,,,13,,744,719',
'908,12,711,14,10,,677,,,10,281,,,,515,281,433,438,443,521,12,295,14',
'643,579,580,601,958,,950,,513,10,,295,764,208,208,,,,,775,707,,763,',
',767,503,507,,,,,102,365,,511,862,864,866,,,,,,786,208,,597,,789,,,791',
',,,,496,497,498,,,567,648,649,12,417,14,,,12,291,14,,,114,,,,114,,581',
'295,811,291,284,,272,,276,,,,12,,14,,313,313,,,826,661,848,830,831,',
'851,852,,,,,35,442,208,208,964,801,,,,,,,,916,624,823,916,763,625,763',
'688,763,117,695,,,117,,,672,35,288,288,,,658,658,,,,284,,366,,,284,',
',,,,532,,,313,,,313,208,505,252,900,355,369,13,369,683,,252,,289,,208',
',442,208,,947,948,949,763,,821,736,,,741,442,,208,,,746,,,,,,,35,10',
',763,13,13,,,35,35,,715,,,636,,907,,313,640,295,313,972,,636,13,,313',
',13,433,438,,,13,771,208,748,442,208,10,10,,,442,208,,728,728,208,959',
'208,,,943,801,,,799,332,295,10,,,,10,,749,930,,10,,,,936,937,,636,636',
'636,,,,208,208,12,,14,,208,,,,291,963,,35,,,634,,,,691,639,,696,13,',
'642,,,,,,35,691,532,,,,13,,,12,12,14,14,,814,,13,13,366,,714,289,927',
',718,,,,10,,12,,14,289,12,658,14,782,784,12,,14,10,787,,,,664,666,668',
',691,10,10,423,868,,,,,691,,,,657,766,846,,35,,295,,288,35,,,658,,208',
',,,295,13,,288,843,13,13,,,,,,,,35,708,709,,,849,,850,,,114,854,,13',
',,12,,14,,208,208,724,10,,706,726,10,10,,12,734,14,,325,,,,,,12,12,14',
'14,,,,291,,10,,385,,387,387,391,394,387,13,291,369,636,888,,640,902',
'636,442,,,,913,,,,,,208,,13,13,,,,,,,,,877,879,,,,10,,,,,,,,,728,800',
',,12,,14,,12,12,14,14,10,10,,804,,766,,,,,,,,809,810,,,13,12,874,14',
'932,,,,965,,,,,,,13,,,13,,,806,,,,,,,,,,,,,,,10,,13,,935,,313,,,13,12',
',14,,13,10,,295,10,,,,13,,208,,442,,899,,,12,12,14,14,,35,,10,,,,288',
',,10,,,,,10,,,875,,,,,10,,919,,920,,,,,,,,385,,207,,,35,35,,,502,,,369',
',12,,14,,,,934,,,,,,35,,894,12,35,14,12,,14,35,,311,,,,,347,347,,,347',
',,904,905,,12,766,14,,,,,12,,14,,,12,,14,558,,,558,558,12,,14,962,,',
',,,,,,691,,,,347,347,347,347,,,217,,,,249,249,249,,929,,,,,,35,,,,,',
'305,306,307,941,,,,,35,,,,,,,249,249,,35,35,,,,288,,,951,,,,,,,956,',
'288,,,960,,,,,,,,,,,,,,,,,,,,,635,,,,,,,,,,635,,,,,,,448,449,,,,,,,',
'35,458,,,35,35,,,,,,,,,,,,,,,,,,,,,35,653,,,,,,,,,,635,635,635,653,',
',,,,,,,,653,653,,,,,,,,,,,,,,,,,,,,35,,420,249,428,249,249,,,,447,,',
',,,,319,,,,35,35,,217,,460,461,462,463,464,465,466,467,468,469,470,471',
'472,473,474,475,476,477,478,479,480,481,482,483,484,,,,,,,,,,249,,249',
',,347,347,,249,,,,,,35,249,249,,931,,,,,,249,,,,,35,,,35,,,,,606,,,',
',,,,,,,,,,,35,,538,,,,,35,,,,,35,,,,,,,,35,,,,,,,,,,,,,,,,,,,,,,,,,',
',421,425,635,,,,,635,,,,,,817,822,,,,,,,,,,,558,,,558,558,,,,,,817,',
'817,,,,,,,,,,,,,,,,,,,,,491,,493,,,,311,,495,,,249,,,,,,,,,,,,,,,,,',
',,,,,,,,701,,,,249,249,,447,650,428,,,,,,,,,,,,,,,,,,,,,,,893,,,,897',
'652,,,249,,249,,249,,,,,,,,,,,,,,,347,675,750,,,,,,,,,,294,294,,249',
',,249,294,294,294,,,,,698,699,700,,,,,,,294,,,249,,,249,,294,294,,,',
',,,,,,,,558,,,,,,,,,,,,,,,,628,,,,,,249,,,249,,,,,,249,,,,,,,,,,,817',
',,,,,,,,,,,,,,817,,,,,,,777,,249,,,783,785,,,,,788,,,790,,,,659,,319',
',662,,347,,,,,,,,,249,,,249,,676,,,,,,,,249,249,,,,,,,,,,,,,,,,,,,,',
',,,,,,,659,249,,319,294,,294,294,294,294,294,294,294,294,294,294,294',
'294,294,294,294,294,294,294,294,294,294,294,294,294,294,,,249,,,,,,',
'294,,294,,347,,,,294,,,,,,,,,249,,,,,,,,,,,,,,,294,,,,,249,878,880,',
',,,778,294,,,,,783,785,788,,294,,,,,,,,,,,249,,,,,,,,,,802,,,803,,,',
',,,,,,659,319,,,,,,,,,,,,,,,,,,,,,,,,,,,294,,819,,,,,,,249,,,,,,,,,',
',,,,880,878,926,,,,249,,,,,421,,,,,,,,,,,,,,249,,,,294,,,,,,856,,,,',
',,,,,,,249,,,,,,,,876,,,,,,,294,294,294,,,,,,,249,,,,,,,,,,,,421,,,',
',,,,,294,,,294,,294,,294,,,,,,,,,,,,,,,,,,,,,,,,,,,,294,,,,,,,,,,,,',
'294,294,294,923,,,,,,,,,294,,,294,,,,,,,,319,,,,294,,,,,,,,,,,,,,,940',
',,,,,,,,,,,,,,,,,,,,,940,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,294,,294,,,,,',
',,,,,,294,,,,,,,,,,,,,,,,,,,294,,,294,,,,,,,,,,294,294,,,,,,,,,,,294',
',,,,,,,,,,,294,,,,,,294,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,294,,,,,,,,,',
',,,,,,,,,,,,,,294,,,,,,,,,,,,,,,,,,,,294,,,,,,,,,,,,,294,294,294,,,',
',,,,,,,,,294,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,294,,,,,,,,,,,,,,294,294,294,,,,294,,,,,,,,,294,,,,,,,,,,294,,,',
',,,,,,,,,,,,,,,,,,294' ]
        racc_goto_table = arr = ::Array.new(2491, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'21,22,7,8,29,29,29,48,48,106,109,82,41,149,47,35,147,21,21,51,85,86',
'21,21,21,24,24,112,47,6,21,21,21,46,43,29,17,56,56,56,143,42,156,10',
'108,16,16,81,81,16,64,111,21,21,111,111,80,21,21,14,14,21,21,21,2,48',
'17,50,50,4,79,79,38,57,57,150,39,57,85,48,52,52,45,153,63,127,1,18,5',
'12,15,16,16,16,16,144,144,19,17,21,156,7,11,21,21,21,21,21,21,7,7,52',
'52,27,53,54,31,31,31,61,20,62,23,131,128,128,11,4,128,131,65,66,74,75',
'76,17,36,63,63,63,78,47,83,17,17,84,87,22,22,36,20,88,23,23,23,89,60',
'60,90,36,36,91,92,93,94,95,153,96,97,98,99,100,2,101,102,103,104,105',
'112,107,114,29,29,115,23,23,117,118,119,120,121,143,48,122,126,21,21',
'21,21,21,21,129,48,130,21,21,21,132,110,133,134,56,56,135,21,21,137',
'139,141,20,146,23,151,,,,156,20,20,23,23,17,,131,,,,,9,82,,34,34,34',
',147,,,147,144,17,29,29,,,43,,,,,29,,58,58,58,18,18,18,,21,21,51,127',
'18,,,106,109,21,,41,,21,,56,56,21,21,80,51,,51,,56,58,42,85,,,21,59',
',59,64,150,6,,,,,21,,45,149,81,20,108,23,17,,59,,,17,38,,,,39,38,33',
'33,33,39,20,52,23,63,16,16,46,11,,86,,4,17,,52,112,21,21,,,,,131,59',
',110,,,143,31,31,,,,,85,21,,31,145,145,145,,,,,,35,21,,85,,35,,,35,',
',,,33,33,33,,,147,22,22,20,9,23,,,20,23,23,,,48,,,,48,,4,52,43,23,9',
',60,,60,,,,20,,23,,29,29,,,111,156,8,111,111,,8,8,,,,,44,48,21,21,10',
'64,,,,,,,,110,14,57,110,110,14,110,22,110,50,22,,,50,,,51,44,44,44,',
',59,59,,,,9,,23,,,9,,,,,,41,,,29,,,29,21,58,58,147,44,44,21,44,7,,58',
',21,,21,,48,21,,145,145,145,110,,24,22,,,22,48,,21,,,22,,,,,,,44,17',
',110,21,21,,,44,44,,21,,,60,,79,,29,60,52,29,145,,60,21,,29,,21,33,33',
',,21,51,21,16,48,21,17,17,,,48,21,,85,85,21,82,21,,,8,64,,,106,109,52',
'17,,,,17,,85,79,,17,,,,111,79,,60,60,60,,,,21,21,20,,23,,21,,,,23,8',
',44,,,34,,,,33,34,,33,21,,34,,,,,,44,33,41,,,,21,,,20,20,23,23,,41,',
'21,21,23,,113,21,64,,113,,,,17,,20,,23,21,20,59,23,18,18,20,,23,17,18',
',,,34,34,34,,33,17,17,56,47,,,,,33,,,,58,113,16,,44,,52,,44,44,,,59',
',21,,,,52,21,,44,56,21,21,,,,,,,,44,9,9,,,85,,85,,,48,85,,21,,,20,,23',
',21,21,9,17,,58,9,17,17,,20,9,23,,55,,,,,,20,20,23,23,,,,23,,17,,55',
',55,55,55,55,55,21,23,44,60,56,,60,16,60,48,,,,51,,,,,,21,,21,21,,,',
',,,,,18,18,,,,17,,,,,,,,,85,9,,,20,,23,,20,20,23,23,17,17,,9,,113,,',
',,,,,9,9,,,21,20,23,23,21,,,,22,,,,,,,21,,,21,,,58,,,,,,,,,,,,,,,17',
',21,,17,,29,,,21,20,,23,,21,17,,52,17,,,,21,,21,,48,,113,,,20,20,23',
'23,,44,,17,,,,44,,,17,,,,,17,,,9,,,,,17,,113,,113,,,,,,,,55,,26,,,44',
'44,,,55,,,44,,20,,23,,,,23,,,,,,44,,9,20,44,23,20,,23,44,,26,,,,,26',
'26,,,26,,,9,9,,20,113,23,,,,,20,,23,,,20,,23,55,,,55,55,20,,23,113,',
',,,,,,,33,,,,26,26,26,26,,,28,,,,28,28,28,,9,,,,,,44,,,,,,28,28,28,9',
',,,,44,,,,,,,28,28,,44,44,,,,44,,,9,,,,,,,9,,44,,,9,,,,,,,,,,,,,,,,',
',,,,55,,,,,,,,,,55,,,,,,,26,26,,,,,,,,44,26,,,44,44,,,,,,,,,,,,,,,,',
',,,,44,55,,,,,,,,,,55,55,55,55,,,,,,,,,,55,55,,,,,,,,,,,,,,,,,,,,44',
',28,28,28,28,28,,,,28,,,,,,,25,,,,44,44,,28,,28,28,28,28,28,28,28,28',
'28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,,,,,,,,,,28,,28,',
',26,26,,28,,,,,,44,28,28,,44,,,,,,28,,,,,44,,,44,,,,,26,,,,,,,,,,,,',
',,44,,28,,,,,44,,,,,44,,,,,,,,44,,,,,,,,,,,,,,,,,,,,,,,,,,,25,25,55',
',,,,55,,,,,,55,55,,,,,,,,,,,55,,,55,55,,,,,,55,,55,,,,,,,,,,,,,,,,,',
',,,25,,25,,,,26,,25,,,28,,,,,,,,,,,,,,,,,,,,,,,,,,26,,,,28,28,,28,28',
'28,,,,,,,,,,,,,,,,,,,,,,,55,,,,55,28,,,28,,28,,28,,,,,,,,,,,,,,,26,28',
'26,,,,,,,,,,37,37,,28,,,28,37,37,37,,,,,28,28,28,,,,,,,37,,,28,,,28',
',37,37,,,,,,,,,,,,55,,,,,,,,,,,,,,,,25,,,,,,28,,,28,,,,,,28,,,,,,,,',
',,55,,,,,,,,,,,,,,,55,,,,,,,28,,28,,,28,28,,,,,28,,,28,,,,25,,25,,25',
',26,,,,,,,,,28,,,28,,25,,,,,,,,28,28,,,,,,,,,,,,,,,,,,,,,,,,,,,,25,28',
',25,37,,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37',
'37,37,37,37,37,,,28,,,,,,,37,,37,,26,,,,37,,,,,,,,,28,,,,,,,,,,,,,,',
'37,,,,,28,28,28,,,,,25,37,,,,,28,28,28,,37,,,,,,,,,,,28,,,,,,,,,,25',
',,25,,,,,,,,,,25,25,,,,,,,,,,,,,,,,,,,,,,,,,,,37,,25,,,,,,,28,,,,,,',
',,,,,,,28,28,28,,,,28,,,,,25,,,,,,,,,,,,,,28,,,,37,,,,,,25,,,,,,,,,',
',,28,,,,,,,,25,,,,,,,37,37,37,,,,,,,28,,,,,,,,,,,,25,,,,,,,,,37,,,37',
',37,,37,,,,,,,,,,,,,,,,,,,,,,,,,,,,37,,,,,,,,,,,,,37,37,37,25,,,,,,',
',,37,,,37,,,,,,,,25,,,,37,,,,,,,,,,,,,,,25,,,,,,,,,,,,,,,,,,,,,,25,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,37,,37,,,,,,,,,,,,37,,,,,,,,,,,,,,,,,,,37',
',,37,,,,,,,,,,37,37,,,,,,,,,,,37,,,,,,,,,,,,37,,,,,,37,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,37,,,,,,,,,,,,,,,,,,,,,,,,37,,,,,,,,,,,,,,,,,,,,37',
',,,,,,,,,,,,37,37,37,,,,,,,,,,,,,37,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,37,,,,,,,,,,,,,,37,37,37,,,,37,,,,,,,,,37',
',,,,,,,,,37,,,,,,,,,,,,,,,,,,,,,,37' ]
        racc_goto_check = arr = ::Array.new(2491, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_goto_pointer = [
   nil,    86,    64,   nil,    66,   -11,    26,     2,  -307,   208,
  -497,  -600,  -727,   nil,    52,    82,   -12,    36,    69,    35,
   120,     0,   -52,   122,  -171,  1231,   983,     4,  1074,   -18,
   nil,    94,   nil,   129,   215,  -253,  -350,  1562,    42,    46,
   nil,   -19,     9,  -265,   450,  -281,   -30,   -51,     0,   nil,
    60,   -22,    49,  -131,  -682,   738,    15,  -241,   240,  -188,
   130,  -150,  -380,  -359,  -202,  -378,  -139,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    67,    79,    79,   nil,    84,  -278,
  -668,  -532,  -342,    80,  -222,    17,  -581,    81,  -229,   104,
    99,  -566,   102,  -568,  -426,  -743,  -429,  -200,  -681,   106,
  -430,  -206,  -429,  -693,   120,  -145,   -47,  -382,  -513,   -46,
  -394,  -276,  -575,   127,   160,   -63,   nil,   -87,   -87,  -753,
  -395,  -513,  -627,   nil,   nil,   nil,   123,    12,    49,   124,
  -187,  -261,   129,  -563,  -400,  -398,   nil,  -537,   nil,  -640,
   nil,  -639,   nil,  -562,  -666,  -391,  -641,  -323,   nil,  -548,
  -264,  -500,   nil,  -780,   nil,   nil,  -448 ]

racc_goto_default = [
   nil,   nil,   nil,     3,   nil,     4,   354,   280,   nil,   540,
   nil,   836,   nil,   279,   nil,   nil,   nil,   212,    16,    11,
   213,   304,   nil,   211,   nil,   255,    15,   nil,    19,    20,
    21,   nil,    25,   694,   nil,   nil,   nil,    26,    29,   nil,
    31,    34,    33,   nil,   209,   364,   nil,   116,   436,   115,
    69,   nil,    42,   nil,   nil,   312,   314,   nil,   315,   253,
   434,   nil,   nil,   637,   487,   nil,   nil,   270,    43,    44,
    45,    46,    47,    48,    49,   nil,   271,    55,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   575,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   327,   326,   713,
   329,   nil,   330,   331,   nil,   nil,   440,   nil,   nil,   nil,
   nil,   nil,   nil,    68,    70,    71,    72,   nil,   nil,   nil,
   nil,   613,   nil,   nil,   nil,   nil,   396,   754,   757,   762,
   759,   760,   761,   917,   nil,   nil,   765,   338,   333,   340,
   nil,   569,   570,   769,   343,   346,   261 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 141, :_reduce_none,
  2, 142, :_reduce_2,
  0, 143, :_reduce_3,
  1, 143, :_reduce_4,
  3, 143, :_reduce_5,
  1, 145, :_reduce_none,
  4, 145, :_reduce_7,
  4, 148, :_reduce_8,
  2, 149, :_reduce_9,
  0, 153, :_reduce_10,
  1, 153, :_reduce_11,
  3, 153, :_reduce_12,
  0, 167, :_reduce_13,
  4, 147, :_reduce_14,
  3, 147, :_reduce_15,
  3, 147, :_reduce_none,
  3, 147, :_reduce_17,
  2, 147, :_reduce_18,
  3, 147, :_reduce_19,
  3, 147, :_reduce_20,
  3, 147, :_reduce_21,
  3, 147, :_reduce_22,
  3, 147, :_reduce_23,
  4, 147, :_reduce_none,
  3, 147, :_reduce_25,
  3, 147, :_reduce_26,
  3, 147, :_reduce_27,
  6, 147, :_reduce_none,
  6, 147, :_reduce_none,
  5, 147, :_reduce_30,
  5, 147, :_reduce_none,
  5, 147, :_reduce_none,
  3, 147, :_reduce_none,
  3, 147, :_reduce_34,
  3, 147, :_reduce_35,
  3, 147, :_reduce_36,
  1, 147, :_reduce_none,
  1, 166, :_reduce_none,
  3, 166, :_reduce_39,
  3, 166, :_reduce_40,
  2, 166, :_reduce_41,
  2, 166, :_reduce_42,
  1, 166, :_reduce_none,
  1, 156, :_reduce_none,
  1, 158, :_reduce_none,
  1, 158, :_reduce_none,
  2, 158, :_reduce_47,
  2, 158, :_reduce_48,
  2, 158, :_reduce_49,
  1, 170, :_reduce_none,
  4, 170, :_reduce_none,
  4, 170, :_reduce_none,
  4, 170, :_reduce_none,
  4, 175, :_reduce_none,
  2, 169, :_reduce_55,
  3, 169, :_reduce_none,
  4, 169, :_reduce_57,
  5, 169, :_reduce_none,
  4, 169, :_reduce_59,
  5, 169, :_reduce_none,
  4, 169, :_reduce_61,
  5, 169, :_reduce_none,
  2, 169, :_reduce_63,
  2, 169, :_reduce_64,
  1, 159, :_reduce_65,
  3, 159, :_reduce_66,
  1, 179, :_reduce_67,
  3, 179, :_reduce_68,
  1, 178, :_reduce_69,
  2, 178, :_reduce_70,
  3, 178, :_reduce_71,
  5, 178, :_reduce_none,
  2, 178, :_reduce_73,
  4, 178, :_reduce_none,
  2, 178, :_reduce_75,
  1, 178, :_reduce_76,
  3, 178, :_reduce_none,
  1, 181, :_reduce_78,
  3, 181, :_reduce_79,
  2, 180, :_reduce_80,
  3, 180, :_reduce_81,
  1, 183, :_reduce_none,
  3, 183, :_reduce_none,
  1, 182, :_reduce_84,
  4, 182, :_reduce_85,
  3, 182, :_reduce_86,
  3, 182, :_reduce_none,
  3, 182, :_reduce_none,
  3, 182, :_reduce_none,
  2, 182, :_reduce_none,
  1, 182, :_reduce_none,
  1, 157, :_reduce_92,
  4, 157, :_reduce_93,
  4, 157, :_reduce_94,
  3, 157, :_reduce_95,
  3, 157, :_reduce_96,
  3, 157, :_reduce_97,
  3, 157, :_reduce_98,
  2, 157, :_reduce_99,
  1, 157, :_reduce_none,
  1, 185, :_reduce_none,
  2, 186, :_reduce_102,
  1, 186, :_reduce_103,
  3, 186, :_reduce_104,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_108,
  1, 187, :_reduce_109,
  1, 154, :_reduce_110,
  1, 154, :_reduce_none,
  1, 155, :_reduce_112,
  3, 155, :_reduce_113,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  3, 168, :_reduce_188,
  5, 168, :_reduce_189,
  3, 168, :_reduce_190,
  6, 168, :_reduce_191,
  6, 168, :_reduce_192,
  5, 168, :_reduce_193,
  5, 168, :_reduce_none,
  5, 168, :_reduce_none,
  5, 168, :_reduce_none,
  4, 168, :_reduce_none,
  3, 168, :_reduce_none,
  3, 168, :_reduce_199,
  3, 168, :_reduce_200,
  3, 168, :_reduce_201,
  3, 168, :_reduce_202,
  3, 168, :_reduce_203,
  3, 168, :_reduce_204,
  3, 168, :_reduce_205,
  3, 168, :_reduce_206,
  4, 168, :_reduce_207,
  4, 168, :_reduce_208,
  2, 168, :_reduce_209,
  2, 168, :_reduce_210,
  3, 168, :_reduce_211,
  3, 168, :_reduce_212,
  3, 168, :_reduce_213,
  3, 168, :_reduce_214,
  3, 168, :_reduce_215,
  3, 168, :_reduce_216,
  3, 168, :_reduce_217,
  3, 168, :_reduce_218,
  3, 168, :_reduce_219,
  3, 168, :_reduce_220,
  3, 168, :_reduce_221,
  3, 168, :_reduce_222,
  3, 168, :_reduce_223,
  2, 168, :_reduce_224,
  2, 168, :_reduce_225,
  3, 168, :_reduce_226,
  3, 168, :_reduce_227,
  3, 168, :_reduce_228,
  3, 168, :_reduce_229,
  3, 168, :_reduce_230,
  0, 193, :_reduce_231,
  0, 194, :_reduce_232,
  7, 168, :_reduce_233,
  1, 168, :_reduce_none,
  1, 165, :_reduce_none,
  1, 162, :_reduce_236,
  2, 162, :_reduce_237,
  2, 162, :_reduce_238,
  4, 162, :_reduce_239,
  2, 162, :_reduce_240,
  3, 162, :_reduce_241,
  3, 200, :_reduce_242,
  2, 202, :_reduce_none,
  1, 203, :_reduce_244,
  1, 203, :_reduce_none,
  1, 201, :_reduce_246,
  1, 201, :_reduce_none,
  2, 201, :_reduce_248,
  4, 201, :_reduce_249,
  2, 201, :_reduce_250,
  1, 171, :_reduce_251,
  2, 171, :_reduce_252,
  2, 171, :_reduce_253,
  4, 171, :_reduce_254,
  1, 171, :_reduce_255,
  4, 205, :_reduce_none,
  1, 205, :_reduce_none,
  0, 207, :_reduce_258,
  2, 174, :_reduce_259,
  1, 206, :_reduce_none,
  2, 206, :_reduce_261,
  3, 206, :_reduce_262,
  2, 199, :_reduce_263,
  2, 204, :_reduce_264,
  0, 204, :_reduce_265,
  1, 196, :_reduce_266,
  2, 196, :_reduce_267,
  3, 196, :_reduce_268,
  4, 196, :_reduce_269,
  3, 164, :_reduce_270,
  4, 164, :_reduce_271,
  2, 164, :_reduce_272,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  0, 229, :_reduce_282,
  4, 192, :_reduce_283,
  4, 192, :_reduce_284,
  3, 192, :_reduce_285,
  3, 192, :_reduce_286,
  2, 192, :_reduce_287,
  4, 192, :_reduce_288,
  4, 192, :_reduce_289,
  3, 192, :_reduce_290,
  3, 192, :_reduce_291,
  1, 192, :_reduce_292,
  4, 192, :_reduce_293,
  3, 192, :_reduce_294,
  1, 192, :_reduce_295,
  5, 192, :_reduce_296,
  4, 192, :_reduce_297,
  3, 192, :_reduce_298,
  2, 192, :_reduce_299,
  1, 192, :_reduce_none,
  2, 192, :_reduce_301,
  2, 192, :_reduce_302,
  6, 192, :_reduce_303,
  6, 192, :_reduce_304,
  0, 230, :_reduce_305,
  0, 231, :_reduce_306,
  7, 192, :_reduce_307,
  0, 232, :_reduce_308,
  0, 233, :_reduce_309,
  7, 192, :_reduce_310,
  5, 192, :_reduce_311,
  4, 192, :_reduce_312,
  5, 192, :_reduce_313,
  0, 234, :_reduce_314,
  0, 235, :_reduce_315,
  9, 192, :_reduce_316,
  0, 236, :_reduce_317,
  6, 192, :_reduce_318,
  0, 237, :_reduce_319,
  0, 238, :_reduce_320,
  8, 192, :_reduce_321,
  0, 239, :_reduce_322,
  0, 240, :_reduce_323,
  6, 192, :_reduce_324,
  0, 241, :_reduce_325,
  6, 192, :_reduce_326,
  0, 242, :_reduce_327,
  0, 243, :_reduce_328,
  9, 192, :_reduce_329,
  1, 192, :_reduce_330,
  1, 192, :_reduce_331,
  1, 192, :_reduce_332,
  1, 192, :_reduce_none,
  1, 161, :_reduce_none,
  1, 219, :_reduce_none,
  1, 219, :_reduce_none,
  1, 219, :_reduce_none,
  2, 219, :_reduce_none,
  1, 221, :_reduce_none,
  1, 221, :_reduce_none,
  1, 221, :_reduce_none,
  2, 218, :_reduce_342,
  3, 244, :_reduce_343,
  2, 244, :_reduce_344,
  1, 244, :_reduce_none,
  1, 244, :_reduce_none,
  3, 245, :_reduce_347,
  3, 245, :_reduce_348,
  1, 220, :_reduce_349,
  5, 220, :_reduce_350,
  1, 151, :_reduce_none,
  2, 151, :_reduce_352,
  1, 247, :_reduce_353,
  3, 247, :_reduce_354,
  3, 248, :_reduce_355,
  1, 176, :_reduce_none,
  2, 176, :_reduce_357,
  1, 176, :_reduce_358,
  3, 176, :_reduce_359,
  1, 249, :_reduce_360,
  2, 251, :_reduce_361,
  1, 251, :_reduce_362,
  6, 246, :_reduce_363,
  4, 246, :_reduce_364,
  4, 246, :_reduce_365,
  2, 246, :_reduce_366,
  2, 246, :_reduce_367,
  4, 246, :_reduce_368,
  2, 246, :_reduce_369,
  2, 246, :_reduce_370,
  1, 246, :_reduce_371,
  0, 255, :_reduce_372,
  5, 254, :_reduce_373,
  2, 172, :_reduce_374,
  4, 172, :_reduce_none,
  4, 172, :_reduce_none,
  4, 172, :_reduce_none,
  2, 217, :_reduce_378,
  4, 217, :_reduce_379,
  4, 217, :_reduce_380,
  3, 217, :_reduce_381,
  4, 217, :_reduce_382,
  3, 217, :_reduce_383,
  2, 217, :_reduce_384,
  1, 217, :_reduce_385,
  0, 257, :_reduce_386,
  5, 216, :_reduce_387,
  0, 258, :_reduce_388,
  5, 216, :_reduce_389,
  0, 260, :_reduce_390,
  6, 222, :_reduce_391,
  1, 259, :_reduce_392,
  1, 259, :_reduce_none,
  6, 150, :_reduce_394,
  0, 150, :_reduce_395,
  1, 261, :_reduce_396,
  1, 261, :_reduce_none,
  1, 261, :_reduce_none,
  2, 262, :_reduce_399,
  1, 262, :_reduce_400,
  2, 152, :_reduce_401,
  1, 152, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 209, :_reduce_406,
  1, 265, :_reduce_none,
  2, 265, :_reduce_408,
  3, 266, :_reduce_409,
  1, 266, :_reduce_410,
  3, 210, :_reduce_411,
  3, 211, :_reduce_412,
  3, 212, :_reduce_413,
  3, 212, :_reduce_414,
  1, 269, :_reduce_415,
  3, 269, :_reduce_416,
  1, 270, :_reduce_417,
  2, 270, :_reduce_418,
  3, 213, :_reduce_419,
  3, 213, :_reduce_420,
  1, 272, :_reduce_421,
  3, 272, :_reduce_422,
  1, 267, :_reduce_423,
  2, 267, :_reduce_424,
  1, 268, :_reduce_425,
  2, 268, :_reduce_426,
  1, 271, :_reduce_427,
  0, 274, :_reduce_428,
  3, 271, :_reduce_429,
  0, 275, :_reduce_430,
  4, 271, :_reduce_431,
  1, 273, :_reduce_432,
  1, 273, :_reduce_433,
  1, 273, :_reduce_434,
  1, 273, :_reduce_none,
  2, 190, :_reduce_436,
  1, 190, :_reduce_437,
  1, 276, :_reduce_none,
  1, 276, :_reduce_none,
  1, 276, :_reduce_none,
  1, 276, :_reduce_none,
  3, 264, :_reduce_442,
  1, 263, :_reduce_443,
  1, 263, :_reduce_444,
  2, 263, :_reduce_445,
  2, 263, :_reduce_446,
  2, 263, :_reduce_447,
  2, 263, :_reduce_448,
  1, 184, :_reduce_449,
  1, 184, :_reduce_450,
  1, 184, :_reduce_451,
  1, 184, :_reduce_452,
  1, 184, :_reduce_453,
  1, 184, :_reduce_454,
  1, 184, :_reduce_455,
  1, 184, :_reduce_456,
  1, 184, :_reduce_457,
  1, 184, :_reduce_458,
  1, 184, :_reduce_459,
  1, 214, :_reduce_460,
  1, 160, :_reduce_461,
  1, 163, :_reduce_462,
  1, 163, :_reduce_none,
  1, 224, :_reduce_464,
  3, 224, :_reduce_465,
  2, 224, :_reduce_466,
  4, 226, :_reduce_467,
  2, 226, :_reduce_468,
  1, 278, :_reduce_none,
  1, 278, :_reduce_none,
  2, 279, :_reduce_471,
  1, 279, :_reduce_472,
  1, 280, :_reduce_473,
  2, 281, :_reduce_474,
  1, 281, :_reduce_475,
  1, 282, :_reduce_476,
  3, 282, :_reduce_477,
  4, 283, :_reduce_478,
  2, 283, :_reduce_479,
  2, 283, :_reduce_480,
  1, 283, :_reduce_481,
  2, 285, :_reduce_482,
  0, 285, :_reduce_483,
  6, 277, :_reduce_484,
  4, 277, :_reduce_485,
  4, 277, :_reduce_486,
  2, 277, :_reduce_487,
  4, 277, :_reduce_488,
  2, 277, :_reduce_489,
  2, 277, :_reduce_490,
  1, 277, :_reduce_491,
  0, 277, :_reduce_492,
  1, 287, :_reduce_none,
  1, 287, :_reduce_494,
  1, 288, :_reduce_495,
  1, 288, :_reduce_496,
  1, 288, :_reduce_497,
  1, 288, :_reduce_498,
  1, 289, :_reduce_499,
  3, 289, :_reduce_500,
  1, 223, :_reduce_none,
  1, 223, :_reduce_none,
  1, 291, :_reduce_503,
  3, 291, :_reduce_none,
  1, 292, :_reduce_505,
  3, 292, :_reduce_506,
  1, 290, :_reduce_none,
  4, 290, :_reduce_none,
  3, 290, :_reduce_none,
  2, 290, :_reduce_none,
  1, 290, :_reduce_none,
  1, 252, :_reduce_512,
  3, 252, :_reduce_513,
  3, 293, :_reduce_514,
  1, 286, :_reduce_515,
  3, 286, :_reduce_516,
  1, 294, :_reduce_none,
  1, 294, :_reduce_none,
  2, 253, :_reduce_519,
  1, 253, :_reduce_520,
  1, 295, :_reduce_none,
  1, 295, :_reduce_none,
  2, 250, :_reduce_523,
  2, 284, :_reduce_524,
  0, 284, :_reduce_525,
  1, 227, :_reduce_526,
  4, 227, :_reduce_527,
  0, 215, :_reduce_528,
  2, 215, :_reduce_529,
  1, 198, :_reduce_530,
  3, 198, :_reduce_531,
  3, 296, :_reduce_532,
  2, 296, :_reduce_533,
  4, 296, :_reduce_534,
  1, 177, :_reduce_none,
  1, 177, :_reduce_none,
  1, 177, :_reduce_none,
  1, 173, :_reduce_none,
  1, 173, :_reduce_none,
  1, 173, :_reduce_none,
  1, 173, :_reduce_none,
  1, 256, :_reduce_none,
  1, 256, :_reduce_none,
  1, 256, :_reduce_none,
  1, 228, :_reduce_none,
  1, 228, :_reduce_none,
  0, 144, :_reduce_none,
  1, 144, :_reduce_none,
  0, 191, :_reduce_none,
  1, 191, :_reduce_none,
  0, 197, :_reduce_none,
  1, 197, :_reduce_none,
  1, 197, :_reduce_none,
  1, 225, :_reduce_none,
  1, 225, :_reduce_none,
  1, 146, :_reduce_none,
  2, 146, :_reduce_none,
  0, 195, :_reduce_558 ]

racc_reduce_n = 559

racc_shift_n = 975

racc_token_table = {
  false => 0,
  :error => 1,
  :kCLASS => 2,
  :kMODULE => 3,
  :kDEF => 4,
  :kUNDEF => 5,
  :kBEGIN => 6,
  :kRESCUE => 7,
  :kENSURE => 8,
  :kEND => 9,
  :kIF => 10,
  :kUNLESS => 11,
  :kTHEN => 12,
  :kELSIF => 13,
  :kELSE => 14,
  :kCASE => 15,
  :kWHEN => 16,
  :kWHILE => 17,
  :kUNTIL => 18,
  :kFOR => 19,
  :kBREAK => 20,
  :kNEXT => 21,
  :kREDO => 22,
  :kRETRY => 23,
  :kIN => 24,
  :kDO => 25,
  :kDO_COND => 26,
  :kDO_BLOCK => 27,
  :kDO_LAMBDA => 28,
  :kRETURN => 29,
  :kYIELD => 30,
  :kSUPER => 31,
  :kSELF => 32,
  :kNIL => 33,
  :kTRUE => 34,
  :kFALSE => 35,
  :kAND => 36,
  :kOR => 37,
  :kNOT => 38,
  :kIF_MOD => 39,
  :kUNLESS_MOD => 40,
  :kWHILE_MOD => 41,
  :kUNTIL_MOD => 42,
  :kRESCUE_MOD => 43,
  :kALIAS => 44,
  :kDEFINED => 45,
  :klBEGIN => 46,
  :klEND => 47,
  :k__LINE__ => 48,
  :k__FILE__ => 49,
  :tIDENTIFIER => 50,
  :tFID => 51,
  :tGVAR => 52,
  :tIVAR => 53,
  :tCONSTANT => 54,
  :tLABEL => 55,
  :tCVAR => 56,
  :tNTH_REF => 57,
  :tBACK_REF => 58,
  :tSTRING_CONTENT => 59,
  :tINTEGER => 60,
  :tFLOAT => 61,
  :tREGEXP_END => 62,
  :tUPLUS => 63,
  :tUMINUS => 64,
  :tPOW => 65,
  :tCMP => 66,
  :tEQ => 67,
  :tEQQ => 68,
  :tNEQ => 69,
  :tGEQ => 70,
  :tLEQ => 71,
  :tANDOP => 72,
  :tOROP => 73,
  :tMATCH => 74,
  :tNMATCH => 75,
  :tJSDOT => 76,
  :tDOT => 77,
  :tDOT2 => 78,
  :tDOT3 => 79,
  :tAREF => 80,
  :tASET => 81,
  :tLSHFT => 82,
  :tRSHFT => 83,
  :tCOLON2 => 84,
  :tCOLON3 => 85,
  :tOP_ASGN => 86,
  :tASSOC => 87,
  :tLPAREN => 88,
  :tLPAREN2 => 89,
  :tRPAREN => 90,
  :tLPAREN_ARG => 91,
  :tRBRACK => 92,
  :tLBRACE => 93,
  :tLBRACE_ARG => 94,
  :tSTAR => 95,
  :tSTAR2 => 96,
  :tAMPER => 97,
  :tAMPER2 => 98,
  :tTILDE => 99,
  :tPERCENT => 100,
  :tDIVIDE => 101,
  :tPLUS => 102,
  :tMINUS => 103,
  :tLT => 104,
  :tGT => 105,
  :tPIPE => 106,
  :tBANG => 107,
  :tCARET => 108,
  :tLCURLY => 109,
  :tRCURLY => 110,
  :tBACK_REF2 => 111,
  :tSYMBEG => 112,
  :tSTRING_BEG => 113,
  :tXSTRING_BEG => 114,
  :tREGEXP_BEG => 115,
  :tWORDS_BEG => 116,
  :tAWORDS_BEG => 117,
  :tSTRING_DBEG => 118,
  :tSTRING_DVAR => 119,
  :tSTRING_END => 120,
  :tSTRING => 121,
  :tSYMBOL => 122,
  :tNL => 123,
  :tEH => 124,
  :tCOLON => 125,
  :tCOMMA => 126,
  :tSPACE => 127,
  :tSEMI => 128,
  :tLAMBDA => 129,
  :tLAMBEG => 130,
  :tLBRACK2 => 131,
  :tLBRACK => 132,
  :tJSLBRACK => 133,
  :tDSTAR => 134,
  :tLABEL_END => 135,
  :tEQL => 136,
  :tLOWEST => 137,
  "-@NUM" => 138,
  "+@NUM" => 139 }

racc_nt_base = 140

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "kCLASS",
  "kMODULE",
  "kDEF",
  "kUNDEF",
  "kBEGIN",
  "kRESCUE",
  "kENSURE",
  "kEND",
  "kIF",
  "kUNLESS",
  "kTHEN",
  "kELSIF",
  "kELSE",
  "kCASE",
  "kWHEN",
  "kWHILE",
  "kUNTIL",
  "kFOR",
  "kBREAK",
  "kNEXT",
  "kREDO",
  "kRETRY",
  "kIN",
  "kDO",
  "kDO_COND",
  "kDO_BLOCK",
  "kDO_LAMBDA",
  "kRETURN",
  "kYIELD",
  "kSUPER",
  "kSELF",
  "kNIL",
  "kTRUE",
  "kFALSE",
  "kAND",
  "kOR",
  "kNOT",
  "kIF_MOD",
  "kUNLESS_MOD",
  "kWHILE_MOD",
  "kUNTIL_MOD",
  "kRESCUE_MOD",
  "kALIAS",
  "kDEFINED",
  "klBEGIN",
  "klEND",
  "k__LINE__",
  "k__FILE__",
  "tIDENTIFIER",
  "tFID",
  "tGVAR",
  "tIVAR",
  "tCONSTANT",
  "tLABEL",
  "tCVAR",
  "tNTH_REF",
  "tBACK_REF",
  "tSTRING_CONTENT",
  "tINTEGER",
  "tFLOAT",
  "tREGEXP_END",
  "tUPLUS",
  "tUMINUS",
  "tPOW",
  "tCMP",
  "tEQ",
  "tEQQ",
  "tNEQ",
  "tGEQ",
  "tLEQ",
  "tANDOP",
  "tOROP",
  "tMATCH",
  "tNMATCH",
  "tJSDOT",
  "tDOT",
  "tDOT2",
  "tDOT3",
  "tAREF",
  "tASET",
  "tLSHFT",
  "tRSHFT",
  "tCOLON2",
  "tCOLON3",
  "tOP_ASGN",
  "tASSOC",
  "tLPAREN",
  "tLPAREN2",
  "tRPAREN",
  "tLPAREN_ARG",
  "tRBRACK",
  "tLBRACE",
  "tLBRACE_ARG",
  "tSTAR",
  "tSTAR2",
  "tAMPER",
  "tAMPER2",
  "tTILDE",
  "tPERCENT",
  "tDIVIDE",
  "tPLUS",
  "tMINUS",
  "tLT",
  "tGT",
  "tPIPE",
  "tBANG",
  "tCARET",
  "tLCURLY",
  "tRCURLY",
  "tBACK_REF2",
  "tSYMBEG",
  "tSTRING_BEG",
  "tXSTRING_BEG",
  "tREGEXP_BEG",
  "tWORDS_BEG",
  "tAWORDS_BEG",
  "tSTRING_DBEG",
  "tSTRING_DVAR",
  "tSTRING_END",
  "tSTRING",
  "tSYMBOL",
  "tNL",
  "tEH",
  "tCOLON",
  "tCOMMA",
  "tSPACE",
  "tSEMI",
  "tLAMBDA",
  "tLAMBEG",
  "tLBRACK2",
  "tLBRACK",
  "tJSLBRACK",
  "tDSTAR",
  "tLABEL_END",
  "tEQL",
  "tLOWEST",
  "\"-@NUM\"",
  "\"+@NUM\"",
  "$start",
  "program",
  "top_compstmt",
  "top_stmts",
  "opt_terms",
  "top_stmt",
  "terms",
  "stmt",
  "bodystmt",
  "compstmt",
  "opt_rescue",
  "opt_else",
  "opt_ensure",
  "stmts",
  "fitem",
  "undef_list",
  "expr_value",
  "lhs",
  "command_call",
  "mlhs",
  "var_lhs",
  "primary_value",
  "aref_args",
  "backref",
  "mrhs",
  "arg_value",
  "expr",
  "@1",
  "arg",
  "command",
  "block_command",
  "call_args",
  "block_call",
  "operation2",
  "command_args",
  "cmd_brace_block",
  "opt_block_var",
  "operation",
  "mlhs_basic",
  "mlhs_entry",
  "mlhs_head",
  "mlhs_item",
  "mlhs_node",
  "mlhs_post",
  "variable",
  "cname",
  "cpath",
  "fname",
  "op",
  "reswords",
  "symbol",
  "opt_nl",
  "primary",
  "@2",
  "@3",
  "none",
  "args",
  "trailer",
  "assocs",
  "block_arg",
  "paren_args",
  "opt_call_args",
  "rparen",
  "opt_paren_args",
  "opt_block_arg",
  "call_args2",
  "open_args",
  "@4",
  "literal",
  "strings",
  "xstring",
  "regexp",
  "words",
  "awords",
  "var_ref",
  "assoc_list",
  "brace_block",
  "method_call",
  "lambda",
  "then",
  "if_tail",
  "do",
  "case_body",
  "for_var",
  "superclass",
  "term",
  "f_arglist",
  "singleton",
  "dot_or_colon",
  "@5",
  "@6",
  "@7",
  "@8",
  "@9",
  "@10",
  "@11",
  "@12",
  "@13",
  "@14",
  "@15",
  "@16",
  "@17",
  "@18",
  "@19",
  "f_larglist",
  "lambda_body",
  "block_param",
  "f_block_optarg",
  "f_block_opt",
  "block_args_tail",
  "f_block_arg",
  "opt_block_args_tail",
  "f_arg",
  "f_rest_arg",
  "do_block",
  "@20",
  "operation3",
  "@21",
  "@22",
  "cases",
  "@23",
  "exc_list",
  "exc_var",
  "numeric",
  "dsym",
  "string",
  "string1",
  "string_contents",
  "xstring_contents",
  "word_list",
  "word",
  "string_content",
  "qword_list",
  "string_dvar",
  "@24",
  "@25",
  "sym",
  "f_args",
  "kwrest_mark",
  "f_kwrest",
  "f_label",
  "f_kw",
  "f_kwarg",
  "args_tail",
  "opt_f_block_arg",
  "opt_args_tail",
  "f_optarg",
  "f_norm_arg",
  "f_bad_arg",
  "f_arg_item",
  "f_margs",
  "f_marg",
  "f_marg_list",
  "f_opt",
  "restarg_mark",
  "blkarg_mark",
  "assoc" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

def _reduce_2(val, _values, result)
                      result = new_compstmt val[0]
                    
    result
end

def _reduce_3(val, _values, result)
                      result = new_block
                    
    result
end

def _reduce_4(val, _values, result)
                      result = new_block val[0]
                    
    result
end

def _reduce_5(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

# reduce 6 omitted

def _reduce_7(val, _values, result)
                      result = val[2]
                    
    result
end

def _reduce_8(val, _values, result)
                      result = new_body(val[0], val[1], val[2], val[3])
                    
    result
end

def _reduce_9(val, _values, result)
                      result = new_compstmt val[0]
                    
    result
end

def _reduce_10(val, _values, result)
                      result = new_block
                    
    result
end

def _reduce_11(val, _values, result)
                      result = new_block val[0]
                    
    result
end

def _reduce_12(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_13(val, _values, result)
                      lexer.lex_state = :expr_fname
                    
    result
end

def _reduce_14(val, _values, result)
                      result = new_alias(val[0], val[1], val[3])
                    
    result
end

def _reduce_15(val, _values, result)
                      result = s(:valias, value(val[1]).to_sym, value(val[2]).to_sym)
                    
    result
end

# reduce 16 omitted

def _reduce_17(val, _values, result)
                      result = s(:valias, value(val[1]).to_sym, value(val[2]).to_sym)
                    
    result
end

def _reduce_18(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_19(val, _values, result)
                      result = new_if(val[1], val[2], val[0], nil)
                    
    result
end

def _reduce_20(val, _values, result)
                      result = new_if(val[1], val[2], nil, val[0])
                    
    result
end

def _reduce_21(val, _values, result)
                      result = new_while(val[1], val[2], val[0])
                    
    result
end

def _reduce_22(val, _values, result)
                      result = new_until(val[1], val[2], val[0])
                    
    result
end

def _reduce_23(val, _values, result)
                      result = new_rescue_mod(val[1], val[0], val[2])
                    
    result
end

# reduce 24 omitted

def _reduce_25(val, _values, result)
                      result = new_assign(val[0], val[1], val[2])
                    
    result
end

def _reduce_26(val, _values, result)
                      result = s(:masgn, val[0], s(:to_ary, val[2]))
                    
    result
end

def _reduce_27(val, _values, result)
                      result = new_op_asgn val[1], val[0], val[2]
                    
    result
end

# reduce 28 omitted

# reduce 29 omitted

def _reduce_30(val, _values, result)
                      result = s(:op_asgn2, val[0], op_to_setter(val[2]), value(val[3]).to_sym, val[4])
                    
    result
end

# reduce 31 omitted

# reduce 32 omitted

# reduce 33 omitted

def _reduce_34(val, _values, result)
                      result = new_assign val[0], val[1], s(:svalue, val[2])
                    
    result
end

def _reduce_35(val, _values, result)
                      result = s(:masgn, val[0], s(:to_ary, val[2]))
                    
    result
end

def _reduce_36(val, _values, result)
                      result = s(:masgn, val[0], val[2])
                    
    result
end

# reduce 37 omitted

# reduce 38 omitted

def _reduce_39(val, _values, result)
                      result = s(:and, val[0], val[2])
                    
    result
end

def _reduce_40(val, _values, result)
                      result = s(:or, val[0], val[2])
                    
    result
end

def _reduce_41(val, _values, result)
                      result = new_unary_call(['!', []], val[1])
                    
    result
end

def _reduce_42(val, _values, result)
                      result = new_unary_call(val[0], val[1])
                    
    result
end

# reduce 43 omitted

# reduce 44 omitted

# reduce 45 omitted

# reduce 46 omitted

def _reduce_47(val, _values, result)
                      result = new_return(val[0], val[1])
                    
    result
end

def _reduce_48(val, _values, result)
                      result = new_break(val[0], val[1])
                    
    result
end

def _reduce_49(val, _values, result)
                      result = new_next(val[0], val[1])
                    
    result
end

# reduce 50 omitted

# reduce 51 omitted

# reduce 52 omitted

# reduce 53 omitted

# reduce 54 omitted

def _reduce_55(val, _values, result)
                      result = new_call(nil, val[0], val[1])
                    
    result
end

# reduce 56 omitted

def _reduce_57(val, _values, result)
                      result = new_js_call(val[0], val[2], val[3])
                    
    result
end

# reduce 58 omitted

def _reduce_59(val, _values, result)
                      result = new_call(val[0], val[2], val[3])
                    
    result
end

# reduce 60 omitted

def _reduce_61(val, _values, result)
                    result = new_call(val[0], val[2], val[3])
                  
    result
end

# reduce 62 omitted

def _reduce_63(val, _values, result)
                      result = new_super(val[0], val[1])
                    
    result
end

def _reduce_64(val, _values, result)
                      result = new_yield val[1]
                    
    result
end

def _reduce_65(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_66(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_67(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_68(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_69(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_70(val, _values, result)
                      result = val[0] << val[1]
                    
    result
end

def _reduce_71(val, _values, result)
                      result = val[0] << s(:splat, val[2])
                    
    result
end

# reduce 72 omitted

def _reduce_73(val, _values, result)
                      result = val[0] << s(:splat)
                    
    result
end

# reduce 74 omitted

def _reduce_75(val, _values, result)
                      result = s(:array, s(:splat, val[1]))
                    
    result
end

def _reduce_76(val, _values, result)
                      result = s(:array, s(:splat))
                    
    result
end

# reduce 77 omitted

def _reduce_78(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_79(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_80(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

def _reduce_81(val, _values, result)
                      result = val[0] << val[1]
                    
    result
end

# reduce 82 omitted

# reduce 83 omitted

def _reduce_84(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_85(val, _values, result)
                      args = val[2] ? val[2] : []
                      result = s(:attrasgn, val[0], :[]=, s(:arglist, *args))
                    
    result
end

def _reduce_86(val, _values, result)
                      result = new_call val[0], val[2], []
                    
    result
end

# reduce 87 omitted

# reduce 88 omitted

# reduce 89 omitted

# reduce 90 omitted

# reduce 91 omitted

def _reduce_92(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_93(val, _values, result)
                      result = new_js_attrasgn(val[0], val[2])
                    
    result
end

def _reduce_94(val, _values, result)
                      result = new_attrasgn(val[0], :[]=, val[2])
                    
    result
end

def _reduce_95(val, _values, result)
                      result = new_attrasgn(val[0], op_to_setter(val[2]))
                    
    result
end

def _reduce_96(val, _values, result)
                      result = new_attrasgn(val[0], op_to_setter(val[2]))
                    
    result
end

def _reduce_97(val, _values, result)
                      result = new_attrasgn(val[0], op_to_setter(val[2]))
                    
    result
end

def _reduce_98(val, _values, result)
                      result = new_colon2(val[0], val[1], val[2])
                    
    result
end

def _reduce_99(val, _values, result)
                      result = new_colon3(val[0], val[1])
                    
    result
end

# reduce 100 omitted

# reduce 101 omitted

def _reduce_102(val, _values, result)
                      result = new_colon3(val[0], val[1])
                    
    result
end

def _reduce_103(val, _values, result)
                      result = new_const(val[0])
                    
    result
end

def _reduce_104(val, _values, result)
                      result = new_colon2(val[0], val[1], val[2])
                    
    result
end

# reduce 105 omitted

# reduce 106 omitted

# reduce 107 omitted

def _reduce_108(val, _values, result)
                      lexer.lex_state = :expr_end
                      result = val[0]
                    
    result
end

def _reduce_109(val, _values, result)
                      lexer.lex_state = :expr_end
                      result = val[0]
                    
    result
end

def _reduce_110(val, _values, result)
                      result = new_sym(val[0])
                    
    result
end

# reduce 111 omitted

def _reduce_112(val, _values, result)
                      result = s(:undef, val[0])
                    
    result
end

def _reduce_113(val, _values, result)
                      result = val[0] << val[2]
                    
    result
end

# reduce 114 omitted

# reduce 115 omitted

# reduce 116 omitted

# reduce 117 omitted

# reduce 118 omitted

# reduce 119 omitted

# reduce 120 omitted

# reduce 121 omitted

# reduce 122 omitted

# reduce 123 omitted

# reduce 124 omitted

# reduce 125 omitted

# reduce 126 omitted

# reduce 127 omitted

# reduce 128 omitted

# reduce 129 omitted

# reduce 130 omitted

# reduce 131 omitted

# reduce 132 omitted

# reduce 133 omitted

# reduce 134 omitted

# reduce 135 omitted

# reduce 136 omitted

# reduce 137 omitted

# reduce 138 omitted

# reduce 139 omitted

# reduce 140 omitted

# reduce 141 omitted

# reduce 142 omitted

# reduce 143 omitted

# reduce 144 omitted

# reduce 145 omitted

# reduce 146 omitted

# reduce 147 omitted

# reduce 148 omitted

# reduce 149 omitted

# reduce 150 omitted

# reduce 151 omitted

# reduce 152 omitted

# reduce 153 omitted

# reduce 154 omitted

# reduce 155 omitted

# reduce 156 omitted

# reduce 157 omitted

# reduce 158 omitted

# reduce 159 omitted

# reduce 160 omitted

# reduce 161 omitted

# reduce 162 omitted

# reduce 163 omitted

# reduce 164 omitted

# reduce 165 omitted

# reduce 166 omitted

# reduce 167 omitted

# reduce 168 omitted

# reduce 169 omitted

# reduce 170 omitted

# reduce 171 omitted

# reduce 172 omitted

# reduce 173 omitted

# reduce 174 omitted

# reduce 175 omitted

# reduce 176 omitted

# reduce 177 omitted

# reduce 178 omitted

# reduce 179 omitted

# reduce 180 omitted

# reduce 181 omitted

# reduce 182 omitted

# reduce 183 omitted

# reduce 184 omitted

# reduce 185 omitted

# reduce 186 omitted

# reduce 187 omitted

def _reduce_188(val, _values, result)
                      result = new_assign(val[0], val[1], val[2])
                    
    result
end

def _reduce_189(val, _values, result)
                      result = new_assign val[0], val[1], s(:rescue_mod, val[2], val[4])
                    
    result
end

def _reduce_190(val, _values, result)
                      result = new_op_asgn val[1], val[0], val[2]
                    
    result
end

def _reduce_191(val, _values, result)
                      result = new_op_asgn1(val[0], val[2], val[4], val[5])
                    
    result
end

def _reduce_192(val, _values, result)
                      raise ".JS[...] #{val[4]} is not supported"
                    
    result
end

def _reduce_193(val, _values, result)
                      result = s(:op_asgn2, val[0], op_to_setter(val[2]), value(val[3]).to_sym, val[4])
                    
    result
end

# reduce 194 omitted

# reduce 195 omitted

# reduce 196 omitted

# reduce 197 omitted

# reduce 198 omitted

def _reduce_199(val, _values, result)
                      result = new_irange(val[0], val[1], val[2])
                    
    result
end

def _reduce_200(val, _values, result)
                      result = new_erange(val[0], val[1], val[2])
                    
    result
end

def _reduce_201(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_202(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_203(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_204(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_205(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_206(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_207(val, _values, result)
                      result = new_call new_binary_call(new_int(val[1]), val[2], val[3]), [:"-@", []], []
                    
    result
end

def _reduce_208(val, _values, result)
                      result = new_call new_binary_call(new_float(val[1]), val[2], val[3]), [:"-@", []], []
                    
    result
end

def _reduce_209(val, _values, result)
                      result = new_call val[1], [:"+@", []], []
                      if [:int, :float].include? val[1].type
                        result = val[1]
                      end
                    
    result
end

def _reduce_210(val, _values, result)
                      result = new_call val[1], [:"-@", []], []
                      if val[1].type == :int
                        val[1][1] = -val[1][1]
                        result = val[1]
                      elsif val[1].type == :float
                        val[1][1] = -val[1][1].to_f
                        result = val[1]
                      end
                    
    result
end

def _reduce_211(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_212(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_213(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_214(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_215(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_216(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_217(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_218(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_219(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_220(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_221(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_222(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_223(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_224(val, _values, result)
                      result = new_unary_call(val[0], val[1])
                    
    result
end

def _reduce_225(val, _values, result)
                      result = new_unary_call(val[0], val[1])
                    
    result
end

def _reduce_226(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_227(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_228(val, _values, result)
                      result = new_and(val[0], val[1], val[2])
                    
    result
end

def _reduce_229(val, _values, result)
                      result = new_or(val[0], val[1], val[2])
                    
    result
end

def _reduce_230(val, _values, result)
                      result = s(:defined, val[2])
                    
    result
end

def _reduce_231(val, _values, result)
 lexer.cond_push 1 
    result
end

def _reduce_232(val, _values, result)
 lexer.cond_pop 
    result
end

def _reduce_233(val, _values, result)
                      result = new_if(val[1], val[0], val[3], val[6])
                    
    result
end

# reduce 234 omitted

# reduce 235 omitted

def _reduce_236(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_237(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_238(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_239(val, _values, result)
                      val[0] << s(:hash, *val[2])
                      result = val[0]
                    
    result
end

def _reduce_240(val, _values, result)
                      result = [s(:hash, *val[0])]
                    
    result
end

def _reduce_241(val, _values, result)
                      result = val[0] << val[2]
                    
    result
end

def _reduce_242(val, _values, result)
                      result = val[1]
                    
    result
end

# reduce 243 omitted

def _reduce_244(val, _values, result)
                      result = []
                    
    result
end

# reduce 245 omitted

def _reduce_246(val, _values, result)
                      result = []
                    
    result
end

# reduce 247 omitted

def _reduce_248(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_249(val, _values, result)
                      result = val[0]
                      result << new_hash(nil, val[2], nil)
                    
    result
end

def _reduce_250(val, _values, result)
                      result = [new_hash(nil, val[0], nil)]
                    
    result
end

def _reduce_251(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_252(val, _values, result)
                      result = val[0]
                      add_block_pass val[0], val[1]
                    
    result
end

def _reduce_253(val, _values, result)
                      result = [new_hash(nil, val[0], nil)]
                      add_block_pass result, val[1]
                    
    result
end

def _reduce_254(val, _values, result)
                      result = val[0]
                      result << new_hash(nil, val[2], nil)
                      result << val[3] if val[3]
                    
    result
end

def _reduce_255(val, _values, result)
                      result = []
                      add_block_pass result, val[0]
                    
    result
end

# reduce 256 omitted

# reduce 257 omitted

def _reduce_258(val, _values, result)
                      lexer.cmdarg_push 1
                    
    result
end

def _reduce_259(val, _values, result)
                      lexer.cmdarg_pop
                      result = val[1]
                    
    result
end

# reduce 260 omitted

def _reduce_261(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_262(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_263(val, _values, result)
                      result = new_block_pass(val[0], val[1])
                    
    result
end

def _reduce_264(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_265(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_266(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_267(val, _values, result)
                      result = [new_splat(val[0], val[1])]
                    
    result
end

def _reduce_268(val, _values, result)
                      result = val[0] << val[2]
                    
    result
end

def _reduce_269(val, _values, result)
                      result  = val[0] << new_splat(val[2], val[3])
                    
    result
end

def _reduce_270(val, _values, result)
                      val[0] << val[2]
                      result = s(:array, *val[0])
                    
    result
end

def _reduce_271(val, _values, result)
                      val[0] << s(:splat, val[3])
                      result = s(:array, *val[0])
                    
    result
end

def _reduce_272(val, _values, result)
                      result = s(:splat, val[1])
                    
    result
end

# reduce 273 omitted

# reduce 274 omitted

# reduce 275 omitted

# reduce 276 omitted

# reduce 277 omitted

# reduce 278 omitted

# reduce 279 omitted

# reduce 280 omitted

# reduce 281 omitted

def _reduce_282(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_283(val, _values, result)
                      result = s(:begin, val[2])
                    
    result
end

def _reduce_284(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_285(val, _values, result)
                      result = new_paren(val[0], val[1], val[2])
                    
    result
end

def _reduce_286(val, _values, result)
                      result = new_colon2(val[0], val[1], val[2])
                    
    result
end

def _reduce_287(val, _values, result)
                      result = new_colon3(val[0], val[1])
                    
    result
end

def _reduce_288(val, _values, result)
                      result = new_call val[0], [:[], []], val[2]
                    
    result
end

def _reduce_289(val, _values, result)
                      result = new_js_call val[0], [:[], []], val[2]
                    
    result
end

def _reduce_290(val, _values, result)
                      result = new_array(val[0], val[1], val[2])
                    
    result
end

def _reduce_291(val, _values, result)
                      result = new_hash(val[0], val[1], val[2])
                    
    result
end

def _reduce_292(val, _values, result)
                      result = new_return(val[0])
                    
    result
end

def _reduce_293(val, _values, result)
                      result = new_yield val[2]
                    
    result
end

def _reduce_294(val, _values, result)
                      result = s(:yield)
                    
    result
end

def _reduce_295(val, _values, result)
                      result = s(:yield)
                    
    result
end

def _reduce_296(val, _values, result)
                      result = s(:defined, val[3])
                    
    result
end

def _reduce_297(val, _values, result)
                      result = new_unary_call(['!', []], val[2])
                    
    result
end

def _reduce_298(val, _values, result)
                      result = new_unary_call(['!', []], new_nil(val[0]))
                    
    result
end

def _reduce_299(val, _values, result)
                      result = new_call(nil, val[0], [])
                      result << val[1]
                    
    result
end

# reduce 300 omitted

def _reduce_301(val, _values, result)
                      val[0] << val[1]
                      result = val[0]
                    
    result
end

def _reduce_302(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_303(val, _values, result)
                      result = new_if(val[0], val[1], val[3], val[4])
                    
    result
end

def _reduce_304(val, _values, result)
                      result = new_if(val[0], val[1], val[4], val[3])
                    
    result
end

def _reduce_305(val, _values, result)
                      lexer.cond_push 1
                      result = lexer.line
                    
    result
end

def _reduce_306(val, _values, result)
                      lexer.cond_pop
                    
    result
end

def _reduce_307(val, _values, result)
                      result = s(:while, val[2], val[5])
                    
    result
end

def _reduce_308(val, _values, result)
                      lexer.cond_push 1
                      result = lexer.line
                    
    result
end

def _reduce_309(val, _values, result)
                      lexer.cond_pop
                    
    result
end

def _reduce_310(val, _values, result)
                      result = s(:until, val[2], val[5])
                    
    result
end

def _reduce_311(val, _values, result)
                      result = s(:case, val[1], *val[3])
                    
    result
end

def _reduce_312(val, _values, result)
                      result = s(:case, nil, *val[2])
                    
    result
end

def _reduce_313(val, _values, result)
                      result = s(:case, nil, val[3])
                    
    result
end

def _reduce_314(val, _values, result)
                      lexer.cond_push 1
                      result = lexer.line
                    
    result
end

def _reduce_315(val, _values, result)
                      lexer.cond_pop
                    
    result
end

def _reduce_316(val, _values, result)
                      result = s(:for, val[4], val[1], val[7])
                    
    result
end

def _reduce_317(val, _values, result)
                      # ...
                    
    result
end

def _reduce_318(val, _values, result)
                      result = new_class val[0], val[1], val[2], val[4], val[5]
                    
    result
end

def _reduce_319(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_320(val, _values, result)
                      # ...
                    
    result
end

def _reduce_321(val, _values, result)
                      result = new_sclass(val[0], val[3], val[6], val[7])
                    
    result
end

def _reduce_322(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_323(val, _values, result)
                      # ...
                    
    result
end

def _reduce_324(val, _values, result)
                      result = new_module(val[0], val[2], val[4], val[5])
                    
    result
end

def _reduce_325(val, _values, result)
                      push_scope
                      lexer.lex_state = :expr_endfn
                    
    result
end

def _reduce_326(val, _values, result)
                      result = new_def(val[0], nil, val[1], val[3], val[4], val[5])
                      pop_scope
                    
    result
end

def _reduce_327(val, _values, result)
                       lexer.lex_state = :expr_fname
                    
    result
end

def _reduce_328(val, _values, result)
                      push_scope
                      lexer.lex_state = :expr_endfn
                    
    result
end

def _reduce_329(val, _values, result)
                      result = new_def(val[0], val[1], val[4], val[6], val[7], val[8])
                      pop_scope
                    
    result
end

def _reduce_330(val, _values, result)
                      result = new_break(val[0])
                    
    result
end

def _reduce_331(val, _values, result)
                      result = s(:next)
                    
    result
end

def _reduce_332(val, _values, result)
                      result = s(:redo)
                    
    result
end

# reduce 333 omitted

# reduce 334 omitted

# reduce 335 omitted

# reduce 336 omitted

# reduce 337 omitted

# reduce 338 omitted

# reduce 339 omitted

# reduce 340 omitted

# reduce 341 omitted

def _reduce_342(val, _values, result)
                      result = new_call nil, [:lambda, []], []
                      result << new_iter(val[0], val[1])

    result
end

def _reduce_343(val, _values, result)
                      result = val[1]

    result
end

def _reduce_344(val, _values, result)
                      result = nil
                    
    result
end

# reduce 345 omitted

# reduce 346 omitted

def _reduce_347(val, _values, result)
                      result = val[1]

    result
end

def _reduce_348(val, _values, result)
                      result = val[1]

    result
end

def _reduce_349(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_350(val, _values, result)
                      result = new_if(val[0], val[1], val[3], val[4])
                    
    result
end

# reduce 351 omitted

def _reduce_352(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_353(val, _values, result)
                      result = s(:block, val[0])

    result
end

def _reduce_354(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_355(val, _values, result)
                      result = new_assign(new_assignable(new_ident(
                                  val[0])), val[1], val[2])
                    
    result
end

# reduce 356 omitted

def _reduce_357(val, _values, result)
                      result = nil

    result
end

def _reduce_358(val, _values, result)
                      result = nil

    result
end

def _reduce_359(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_360(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_361(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_362(val, _values, result)
                      nil
                    
    result
end

def _reduce_363(val, _values, result)
                      result = new_block_args(val[0], val[2], val[4], val[5])
                    
    result
end

def _reduce_364(val, _values, result)
                      result = new_block_args(val[0], val[2], nil, val[3])
                    
    result
end

def _reduce_365(val, _values, result)
                      result = new_block_args(val[0], nil, val[2], val[3])
                    
    result
end

def _reduce_366(val, _values, result)
                      result = new_block_args(val[0], nil, nil, nil)
                    
    result
end

def _reduce_367(val, _values, result)
                      result = new_block_args(val[0], nil, nil, val[1])
                    
    result
end

def _reduce_368(val, _values, result)
                      result = new_block_args(nil, val[0], val[2], val[3])
                    
    result
end

def _reduce_369(val, _values, result)
                      result = new_block_args(nil, val[0], nil, val[1])
                    
    result
end

def _reduce_370(val, _values, result)
                      result = new_block_args(nil, nil, val[0], val[1])
                    
    result
end

def _reduce_371(val, _values, result)
                      result = new_block_args(nil, nil, nil, val[0])
                    
    result
end

def _reduce_372(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_373(val, _values, result)
                      result = new_iter val[2], val[3]
                      pop_scope
                    
    result
end

def _reduce_374(val, _values, result)
                      val[0] << val[1]
                      result = val[0]
                    
    result
end

# reduce 375 omitted

# reduce 376 omitted

# reduce 377 omitted

def _reduce_378(val, _values, result)
                      result = new_call(nil, val[0], val[1])

    result
end

def _reduce_379(val, _values, result)
                      result = new_call(val[0], val[2], val[3])

    result
end

def _reduce_380(val, _values, result)
                      result = new_js_call(val[0], val[2], val[3])
                    
    result
end

def _reduce_381(val, _values, result)
                      result = new_call(val[0], [:call, []], val[2])
                    
    result
end

def _reduce_382(val, _values, result)
                      result = new_call(val[0], val[2], val[3])
                    
    result
end

def _reduce_383(val, _values, result)
                      result = new_call(val[0], val[2])
                    
    result
end

def _reduce_384(val, _values, result)
                      result = new_super(val[0], val[1])
                    
    result
end

def _reduce_385(val, _values, result)
                      result = new_super(val[0], nil)
                    
    result
end

def _reduce_386(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_387(val, _values, result)
                      result = new_iter val[2], val[3]
                      pop_scope
                    
    result
end

def _reduce_388(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_389(val, _values, result)
                      result = new_iter val[2], val[3]
                      pop_scope
                    
    result
end

def _reduce_390(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_391(val, _values, result)
                      part = s(:when, s(:array, *val[2]), val[4])
                      result = [part]
                      result.push(*val[5]) if val[5]
                    
    result
end

def _reduce_392(val, _values, result)
                      result = [val[0]]

    result
end

# reduce 393 omitted

def _reduce_394(val, _values, result)
                      exc = val[1] || s(:array)
                      exc << new_assign(val[2], val[2], s(:gvar, '$!'.intern)) if val[2]
                      result = [s(:resbody, exc, val[4])]
                      result.push val[5].first if val[5]
                    
    result
end

def _reduce_395(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_396(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

# reduce 397 omitted

# reduce 398 omitted

def _reduce_399(val, _values, result)
                      result = val[1]

    result
end

def _reduce_400(val, _values, result)
                      result = nil

    result
end

def _reduce_401(val, _values, result)
                      result = val[1].nil? ? s(:nil) : val[1]
                    
    result
end

# reduce 402 omitted

# reduce 403 omitted

# reduce 404 omitted

# reduce 405 omitted

def _reduce_406(val, _values, result)
                      result = new_str val[0]

    result
end

# reduce 407 omitted

def _reduce_408(val, _values, result)
                    result = str_append val[0], val[1]
                  
    result
end

def _reduce_409(val, _values, result)
                      result = val[1]

    result
end

def _reduce_410(val, _values, result)
                      result = s(:str, value(val[0]))

    result
end

def _reduce_411(val, _values, result)
                      result = new_xstr(val[0], val[1], val[2])
                    
    result
end

def _reduce_412(val, _values, result)
                      result = new_regexp val[1], val[2]
                    
    result
end

def _reduce_413(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_414(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_415(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_416(val, _values, result)
                      part = val[1]
                      part = s(:dstr, "", val[1]) if part.type == :evstr
                      result = val[0] << part
                    
    result
end

def _reduce_417(val, _values, result)
                      result = val[0]

    result
end

def _reduce_418(val, _values, result)
                      result = val[0].concat([val[1]])

    result
end

def _reduce_419(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_420(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_421(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_422(val, _values, result)
                      result = val[0] << s(:str, value(val[1]))
                    
    result
end

def _reduce_423(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_424(val, _values, result)
                      result = str_append val[0], val[1]
                    
    result
end

def _reduce_425(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_426(val, _values, result)
                      result = str_append val[0], val[1]
                    
    result
end

def _reduce_427(val, _values, result)
                      result = new_str_content(val[0])
                    
    result
end

def _reduce_428(val, _values, result)
                      result = lexer.strterm
                      lexer.strterm = nil
                    
    result
end

def _reduce_429(val, _values, result)
                      lexer.strterm = val[1]
                      result = new_evstr(val[2])
                    
    result
end

def _reduce_430(val, _values, result)
                      lexer.cond_push 0
                      lexer.cmdarg_push 0
                      result = lexer.strterm
                      lexer.strterm = nil
                      lexer.lex_state = :expr_beg
                    
    result
end

def _reduce_431(val, _values, result)
                      lexer.strterm = val[1]
                      lexer.cond_lexpop
                      lexer.cmdarg_lexpop
                      result = new_evstr(val[2])
                    
    result
end

def _reduce_432(val, _values, result)
                      result = new_gvar(val[0])

    result
end

def _reduce_433(val, _values, result)
                      result = new_ivar(val[0])

    result
end

def _reduce_434(val, _values, result)
                      result = new_cvar(val[0])
                    
    result
end

# reduce 435 omitted

def _reduce_436(val, _values, result)
                      result = new_sym(val[1])
                      lexer.lex_state = :expr_end
                    
    result
end

def _reduce_437(val, _values, result)
                      result = new_sym(val[0])
                    
    result
end

# reduce 438 omitted

# reduce 439 omitted

# reduce 440 omitted

# reduce 441 omitted

def _reduce_442(val, _values, result)
                      result = new_dsym val[1]
                    
    result
end

def _reduce_443(val, _values, result)
                      result = new_int(val[0])
                    
    result
end

def _reduce_444(val, _values, result)
                      result = new_float(val[0])
                    
    result
end

def _reduce_445(val, _values, result)
                    result = negate_num(new_int(val[1]))
                  
    result
end

def _reduce_446(val, _values, result)
                    result = negate_num(new_float(val[1]))
                  
    result
end

def _reduce_447(val, _values, result)
                    result = new_int(val[1])
                  
    result
end

def _reduce_448(val, _values, result)
                    result = new_float(val[1])
                  
    result
end

def _reduce_449(val, _values, result)
                      result = new_ident(val[0])
                    
    result
end

def _reduce_450(val, _values, result)
                      result = new_ivar(val[0])

    result
end

def _reduce_451(val, _values, result)
                      result = new_gvar(val[0])

    result
end

def _reduce_452(val, _values, result)
                      result = new_const(val[0])
                    
    result
end

def _reduce_453(val, _values, result)
                      result = new_cvar(val[0])
                    
    result
end

def _reduce_454(val, _values, result)
                      result = new_nil(val[0])
                    
    result
end

def _reduce_455(val, _values, result)
                      result = new_self(val[0])
                    
    result
end

def _reduce_456(val, _values, result)
                      result = new_true(val[0])
                    
    result
end

def _reduce_457(val, _values, result)
                      result = new_false(val[0])
                    
    result
end

def _reduce_458(val, _values, result)
                      result = new___FILE__(val[0])
                    
    result
end

def _reduce_459(val, _values, result)
                      result = new___LINE__(val[0])
                    
    result
end

def _reduce_460(val, _values, result)
                      result = new_var_ref(val[0])
                    
    result
end

def _reduce_461(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_462(val, _values, result)
                      result = s(:nth_ref, value(val[0]))
                    
    result
end

# reduce 463 omitted

def _reduce_464(val, _values, result)
                      result = nil

    result
end

def _reduce_465(val, _values, result)
                      result = val[1]

    result
end

def _reduce_466(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_467(val, _values, result)
                      result = val[1]
                      lexer.lex_state = :expr_beg
                    
    result
end

def _reduce_468(val, _values, result)
                      result = val[0]
                      lexer.lex_state = :expr_beg
                    
    result
end

# reduce 469 omitted

# reduce 470 omitted

def _reduce_471(val, _values, result)
                      result = new_kwrestarg(val[1])
                    
    result
end

def _reduce_472(val, _values, result)
                      result = new_kwrestarg()
                    
    result
end

def _reduce_473(val, _values, result)
                      result = new_sym(val[0])

    result
end

def _reduce_474(val, _values, result)
                      result = new_kwoptarg(val[0], val[1])

    result
end

def _reduce_475(val, _values, result)
                      result = new_kwarg(val[0])
                    
    result
end

def _reduce_476(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_477(val, _values, result)
                      result = val[0]
                      result << val[2]
                    
    result
end

def _reduce_478(val, _values, result)
                      result = new_args_tail(val[0], val[2], val[3])
                    
    result
end

def _reduce_479(val, _values, result)
                      result = new_args_tail(val[0], nil, val[1])
                    
    result
end

def _reduce_480(val, _values, result)
                      result = new_args_tail(nil, val[0], val[1])
                    
    result
end

def _reduce_481(val, _values, result)
                      result = new_args_tail(nil, nil, val[0])
                    
    result
end

def _reduce_482(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_483(val, _values, result)
                      result = new_args_tail(nil, nil, nil)
                    
    result
end

def _reduce_484(val, _values, result)
                      result = new_args(val[0], val[2], val[4], val[5])
                    
    result
end

def _reduce_485(val, _values, result)
                      result = new_args(val[0], val[2], nil, val[3])
                    
    result
end

def _reduce_486(val, _values, result)
                      result = new_args(val[0], nil, val[2], val[3])
                    
    result
end

def _reduce_487(val, _values, result)
                      result = new_args(val[0], nil, nil, val[1])
                    
    result
end

def _reduce_488(val, _values, result)
                      result = new_args(nil, val[0], val[2], val[3])
                    
    result
end

def _reduce_489(val, _values, result)
                      result = new_args(nil, val[0], nil, val[1])
                    
    result
end

def _reduce_490(val, _values, result)
                      result = new_args(nil, nil, val[0], val[1])
                    
    result
end

def _reduce_491(val, _values, result)
                      result = new_args(nil, nil, nil, val[0])
                    
    result
end

def _reduce_492(val, _values, result)
                      result = new_args(nil, nil, nil, nil)
                    
    result
end

# reduce 493 omitted

def _reduce_494(val, _values, result)
                      result = value(val[0]).to_sym
                      scope.add_local result
                    
    result
end

def _reduce_495(val, _values, result)
                      raise 'formal argument cannot be a constant'
                    
    result
end

def _reduce_496(val, _values, result)
                      raise 'formal argument cannot be an instance variable'
                    
    result
end

def _reduce_497(val, _values, result)
                      raise 'formal argument cannot be a class variable'
                    
    result
end

def _reduce_498(val, _values, result)
                      raise 'formal argument cannot be a global variable'
                    
    result
end

def _reduce_499(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_500(val, _values, result)
                      result = val[1]
                    
    result
end

# reduce 501 omitted

# reduce 502 omitted

def _reduce_503(val, _values, result)
                      result = s(:lasgn, val[0])

    result
end

# reduce 504 omitted

def _reduce_505(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

def _reduce_506(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

# reduce 507 omitted

# reduce 508 omitted

# reduce 509 omitted

# reduce 510 omitted

# reduce 511 omitted

def _reduce_512(val, _values, result)
                      result = [val[0]]

    result
end

def _reduce_513(val, _values, result)
                      val[0] << val[2]
                      result = val[0]

    result
end

def _reduce_514(val, _values, result)
                      result = new_assign(new_assignable(new_ident(val[0])), val[1], val[2])
                    
    result
end

def _reduce_515(val, _values, result)
                      result = s(:block, val[0])
                    
    result
end

def _reduce_516(val, _values, result)
                      result = val[0]
                      val[0] << val[2]
                    
    result
end

# reduce 517 omitted

# reduce 518 omitted

def _reduce_519(val, _values, result)
                      result = "*#{value(val[1])}".to_sym
                    
    result
end

def _reduce_520(val, _values, result)
                      result = :"*"
                    
    result
end

# reduce 521 omitted

# reduce 522 omitted

def _reduce_523(val, _values, result)
                      result = "&#{value(val[1])}".to_sym
                    
    result
end

def _reduce_524(val, _values, result)
                      result = val[1]

    result
end

def _reduce_525(val, _values, result)
                      result = nil

    result
end

def _reduce_526(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_527(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_528(val, _values, result)
                      result = []
                    
    result
end

def _reduce_529(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_530(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_531(val, _values, result)
                      result = val[0].push(*val[2])
                    
    result
end

def _reduce_532(val, _values, result)
                      result = [val[0], val[2]]
                    
    result
end

def _reduce_533(val, _values, result)
                      result = [new_sym(val[0]), val[1]]
                    
    result
end

def _reduce_534(val, _values, result)
                      result = [s(:sym, source(val[1]).to_sym), val[3]]
                    
    result
end

# reduce 535 omitted

# reduce 536 omitted

# reduce 537 omitted

# reduce 538 omitted

# reduce 539 omitted

# reduce 540 omitted

# reduce 541 omitted

# reduce 542 omitted

# reduce 543 omitted

# reduce 544 omitted

# reduce 545 omitted

# reduce 546 omitted

# reduce 547 omitted

# reduce 548 omitted

# reduce 549 omitted

# reduce 550 omitted

# reduce 551 omitted

# reduce 552 omitted

# reduce 553 omitted

# reduce 554 omitted

# reduce 555 omitted

# reduce 556 omitted

# reduce 557 omitted

def _reduce_558(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module Opal
