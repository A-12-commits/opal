#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.10
# from Racc grammer file "".
#

require 'racc/parser.rb'
module Opal
  class Parser < Racc::Parser


##### State transition tables begin ###

clist = [
'63,64,65,8,51,552,529,689,57,58,269,269,552,61,269,59,60,62,23,24,66',
'67,-83,202,203,576,726,22,28,27,89,88,90,91,820,-84,17,202,203,202,203',
'588,7,41,6,9,93,92,618,83,50,85,84,86,-64,87,94,95,634,81,82,-444,38',
'39,37,635,-434,-81,-444,202,203,508,73,-434,-89,264,-276,295,760,264',
'74,617,-89,-276,36,578,577,30,-505,-83,52,-75,614,100,720,32,268,268',
'99,40,268,576,-84,587,581,304,100,18,688,552,528,99,79,73,75,76,77,78',
'100,-94,551,74,80,99,657,100,-83,551,304,56,99,-276,53,-83,-509,54,63',
'64,65,-84,51,-509,-509,-509,57,58,-84,-509,-509,61,-509,59,60,62,255',
'256,66,67,304,-509,758,578,577,254,287,291,89,88,90,91,-509,-509,216',
'-509,-509,-509,-509,-509,-90,41,502,521,93,92,523,83,50,85,84,86,704',
'87,94,95,476,81,82,-92,38,39,37,-509,-509,-509,-509,-509,-509,-509,-509',
'-509,-509,-509,-509,-509,-509,264,-82,-509,-509,-509,207,604,100,211',
'551,-509,52,99,202,203,736,476,-509,432,-509,40,-509,-509,-509,-509',
'-509,-509,-509,215,-509,-509,-509,-91,79,73,75,76,77,78,634,689,428',
'74,80,-509,-509,635,-83,429,-509,56,-274,-509,53,-91,552,54,509,-274',
'-274,-274,689,-275,-90,-274,-274,-95,-274,-82,-275,618,521,-443,618',
'523,618,-90,700,-90,-443,703,-90,199,264,772,-446,304,-274,-274,200',
'-274,-274,-274,-274,-274,-92,430,-92,737,100,-92,510,100,617,99,-82',
'617,99,617,-445,-505,521,-82,763,520,559,-445,-275,-274,-274,-274,-274',
'-274,-274,-274,-274,-274,-274,-274,-274,-274,-274,699,-88,-274,-274',
'-274,198,607,100,-255,688,-274,100,99,-91,-92,-91,99,-274,-91,-274,224',
'-274,-274,-274,-274,-274,-274,-274,100,-274,688,-274,-445,99,521,-442',
'100,523,551,843,224,99,-442,-440,-274,-274,100,-85,722,-274,-440,99',
'-274,-274,-93,63,64,65,8,51,-274,-274,-274,57,58,-274,-274,-274,61,-274',
'59,60,62,23,24,66,67,297,298,-274,-274,763,22,28,27,89,88,90,91,-274',
'-274,17,-274,-274,-274,-274,-274,7,41,469,9,93,92,-63,83,50,85,84,86',
'889,87,94,95,576,81,82,890,38,39,37,-274,-274,-274,-274,-274,-274,-274',
'-274,-274,-274,-274,-274,-274,-274,782,763,-274,-274,-274,36,607,-274',
'30,100,-274,52,769,-274,99,-274,32,-274,770,-274,40,-274,-274,-274,-274',
'-274,-274,-274,18,-274,888,-274,535,79,73,75,76,77,78,578,577,589,74',
'80,-274,-274,-274,-274,538,-274,56,224,-274,53,-93,-509,54,-507,-507',
'-507,773,-507,-509,-509,-509,-507,-507,-509,-509,-509,-507,-509,-507',
'-507,-507,-507,-507,-507,-507,774,-509,-509,-509,538,-507,-507,-507',
'-507,-507,-507,-507,-509,-509,-507,-509,-509,-509,-509,-509,558,-507',
'559,777,-507,-507,304,-507,-507,-507,-507,-507,-507,-507,-507,-507,576',
'-507,-507,493,-507,-507,-507,-509,-509,-509,-509,-509,-509,-509,-509',
'-509,-509,-509,-509,-509,-509,340,339,-509,-509,-509,-507,738,-509,-507',
'-507,-509,-507,763,-509,786,-509,-507,-509,-507,-509,-507,-509,-509',
'-509,-509,-509,-509,-509,-507,-509,-509,-509,787,-507,-507,-507,-507',
'-507,-507,578,577,579,-507,-507,-509,-509,-509,-509,467,-509,-507,465',
'-509,-507,-91,-269,-507,-508,-508,-508,754,-508,-269,-269,-269,-508',
'-508,-269,-269,-269,-508,-269,-508,-508,-508,-508,-508,-508,-508,340',
'339,-269,-269,-269,-508,-508,-508,-508,-508,-508,-508,-269,-269,-508',
'-269,-269,-269,-269,-269,753,-508,782,763,-508,-508,696,-508,-508,-508',
'-508,-508,-508,-508,-508,-508,576,-508,-508,524,-508,-508,-508,-269',
'-269,-269,-269,-269,-269,-269,-269,-269,-269,-269,-269,-269,-269,212',
'100,-269,-269,-269,-508,99,-269,-508,-508,-269,-508,525,-269,434,-269',
'-508,-269,-508,-269,-508,-269,-269,-269,-269,-269,-269,-269,-508,-269',
'433,-269,692,-508,-508,-508,-508,-508,-508,578,577,574,-508,-508,-269',
'-269,-269,-269,559,-269,-508,-269,-269,-508,264,-282,-508,63,64,65,802',
'51,-282,-282,-282,57,58,-282,-282,-282,61,-282,59,60,62,255,256,66,67',
'202,203,-282,-282,804,254,28,27,89,88,90,91,-282,-282,216,-282,-282',
'-282,-282,-282,807,41,504,505,93,92,808,83,50,85,84,86,258,87,94,95',
'576,81,82,431,38,39,37,-282,-282,-282,-282,-282,-282,-282,-282,-282',
'-282,-282,-282,-282,-282,810,100,-282,-282,-282,207,99,-282,211,273',
'-282,52,469,-282,684,-282,253,-282,532,-282,40,-282,-282,-282,-282,-282',
'-282,-282,215,-282,-256,-282,681,79,73,75,76,77,78,578,577,583,74,80',
'-282,-282,-282,-282,679,-282,56,494,-282,53,535,-372,54,63,64,65,8,51',
'-372,-372,-372,57,58,-372,-372,-372,61,-372,59,60,62,23,24,66,67,669',
'-372,-372,-372,536,22,28,27,89,88,90,91,-372,-372,17,-372,-372,-372',
'-372,-372,7,41,538,9,93,92,398,83,50,85,84,86,261,87,94,95,547,81,82',
'262,38,39,37,-372,-372,-372,-372,-372,-372,-372,-372,-372,-372,-372',
'-372,-372,-372,508,665,-372,-372,-372,36,664,-372,30,264,-372,52,821',
'-372,822,-372,32,-372,823,-372,40,-372,-372,-372,-372,-372,-372,-372',
'18,-372,-372,-372,-441,79,73,75,76,77,78,-441,264,-86,74,80,-372,-372',
'-372,-372,-94,-372,56,264,-372,53,663,-525,54,63,64,65,8,51,-525,-525',
'-525,57,58,-525,-525,-525,61,-525,59,60,62,23,24,66,67,243,-525,-525',
'-525,385,22,28,27,89,88,90,91,-525,-525,17,-525,-525,-525,-525,-525',
'7,41,826,9,93,92,827,83,50,85,84,86,-437,87,94,95,657,81,82,-437,38',
'39,37,-525,-525,-525,-525,-525,-525,-525,-525,-525,-525,-525,-525,-525',
'-525,201,548,-525,-525,-525,36,829,-525,30,264,-525,52,552,-525,376',
'-525,32,-525,-254,-525,40,-525,-525,-525,-525,-525,-525,-525,18,-525',
'-525,-525,571,79,73,75,76,77,78,572,833,-87,74,80,-525,-525,-525,-525',
'-95,-525,56,304,-525,53,273,-525,54,63,64,65,657,51,-525,-525,-525,57',
'58,-525,-525,-525,61,-525,59,60,62,255,256,66,67,202,203,-525,838,598',
'254,28,27,89,88,90,91,-525,-525,216,-525,-525,-525,-525,-525,840,41',
'373,857,93,92,514,83,50,85,84,86,258,87,94,95,352,81,82,599,38,39,37',
'511,387,-82,100,649,551,-276,512,99,-90,700,-525,-505,-276,-439,846',
'560,698,-525,207,647,-439,211,264,-525,52,337,336,340,339,253,850,851',
'304,40,395,-75,-84,646,-268,397,396,215,748,-92,-525,-268,79,73,75,76',
'77,78,304,861,430,74,80,-525,-257,-525,-276,644,-525,56,699,747,53,862',
'-525,54,63,64,65,8,51,-525,-525,-525,57,58,-525,-525,-525,61,-525,59',
'60,62,23,24,66,67,864,-268,-525,296,243,22,28,27,89,88,90,91,-525,-525',
'17,-525,-525,-525,-525,-525,7,41,-446,9,93,92,476,83,50,85,84,86,-445',
'87,94,95,-506,81,82,-445,38,39,37,224,228,233,234,235,230,232,240,241',
'236,237,-525,217,218,-274,538,238,239,-525,36,-80,-274,30,264,-525,52',
'-506,-88,636,874,32,221,875,227,40,223,222,219,220,231,229,225,18,226',
'-445,-525,243,79,73,75,76,77,78,304,879,-275,74,80,-525,242,-525,-227',
'-275,-525,56,495,881,53,882,-274,54,63,64,65,-275,51,807,807,808,57',
'58,-275,631,-503,61,224,59,60,62,255,256,66,67,102,103,104,105,106,254',
'287,291,89,88,90,91,-268,224,216,-322,500,-275,224,-268,224,41,-322',
'501,93,92,891,83,50,85,84,86,-274,87,94,95,-275,81,82,-274,38,39,37',
'-437,-506,582,-274,224,197,739,-437,196,897,-274,264,-503,671,540,-506',
'332,330,329,207,331,195,211,663,-268,52,194,-322,499,586,623,597,251',
'-503,40,221,-254,107,907,223,222,807,215,909,-274,910,224,79,73,75,76',
'77,78,469,596,-437,74,80,-274,337,336,340,339,96,56,590,467,53,593,',
'54,63,64,65,8,51,,221,,57,58,223,222,,61,,59,60,62,23,24,66,67,102,103',
'104,105,106,22,28,27,89,88,90,91,812,813,17,,814,94,95,594,7,41,,9,93',
'92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,37,224,228,233,234,235,230',
'232,240,241,236,237,,217,218,,,238,239,,36,,,30,,,52,,,,,32,221,,227',
'40,223,222,219,220,231,229,225,18,226,,,,79,73,75,76,77,78,,,,74,80',
',242,,-227,671,,56,,,53,,,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23',
'24,66,67,102,103,104,105,106,22,28,27,89,88,90,91,,,17,337,336,340,339',
'594,,41,,857,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,37,224,228',
'233,234,235,230,232,240,241,236,237,,217,218,,,238,239,,207,,,211,212',
',52,337,336,340,339,,221,,227,40,223,222,219,220,231,229,225,18,226',
',,,79,73,75,76,77,78,,,,74,80,,242,,,,,56,,,53,,,54,63,64,65,224,51',
',,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,221,',
'216,,223,222,219,220,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38',
'39,37,224,228,233,234,235,230,232,240,241,236,237,,217,218,,,238,239',
',207,,,211,,540,52,332,330,329,,331,221,,227,40,223,222,219,220,231',
'229,225,215,226,,,,79,73,75,76,77,78,,,,74,80,,242,615,,,,56,,,53,,',
'54,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27',
'89,88,90,91,,,17,,,,,,7,41,,9,93,92,,83,50,85,84,86,,87,94,95,,81,82',
',38,39,37,224,228,233,234,235,230,232,240,241,236,237,,217,218,,,238',
'239,,36,,,30,,,52,,,,,32,221,,227,40,223,222,219,220,231,229,225,18',
'226,,,,79,73,75,76,77,78,,,,74,80,,242,,,,,56,,,53,,,54,63,64,65,224',
'51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90',
'91,221,,216,,223,222,219,220,,41,,,93,92,,83,50,85,84,86,,87,94,95,',
'81,82,,38,39,37,224,228,233,234,235,230,232,240,241,236,237,,217,218',
',,238,239,,207,,,211,,,52,,,,,623,221,,227,40,223,222,219,220,231,229',
'225,215,226,,,,79,73,75,76,77,78,,,,74,80,,242,,,,,56,,,53,,,54,63,64',
'65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,28,27,89,88,90',
'91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,258,87,94,95,,81,82,,38,39',
'37,224,228,233,234,235,230,232,240,241,236,237,,217,218,,,238,239,,207',
',,211,,,52,,,,,253,221,251,227,40,223,222,219,220,231,229,225,215,226',
',,,79,73,75,76,77,78,,,,74,80,,242,,,,,56,,,53,,,54,63,64,65,,51,,,',
'57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,28,27,89,88,90,91,,,216',
',,,,,,41,,,93,92,,83,50,85,84,86,258,87,94,95,,81,82,,38,39,37,224,228',
'233,234,235,230,232,240,241,236,237,,217,218,,,238,239,,207,,,211,,',
'52,,,,,253,221,251,227,40,223,222,219,220,231,229,225,215,226,,,,79',
'73,75,76,77,78,,,,74,80,,242,,,,,56,,,53,,,54,63,64,65,,51,,,,57,58',
',,,61,,59,60,62,255,256,66,67,,,,,,254,28,27,89,88,90,91,,,216,,,,,',
',41,,,93,92,,83,50,85,84,86,258,87,94,95,,81,82,,38,39,37,224,228,233',
'234,235,230,232,240,241,236,237,,217,218,,,238,239,,207,,,211,,,52,',
',,,253,221,251,227,40,223,222,219,220,231,229,225,215,226,,,,79,73,75',
'76,77,78,,,,74,80,,242,,,,,56,,,53,,,54,63,64,65,,51,,,,57,58,,,,61',
',59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92',
',83,50,85,84,86,,87,94,95,,81,82,,38,39,37,224,228,233,234,235,230,232',
'240,241,236,237,,217,218,,,238,239,,207,,,211,,,52,,,,,,221,,227,40',
'223,222,219,220,231,229,225,18,226,,,,79,73,75,76,77,78,,,,74,80,,242',
',,,,56,,,53,,,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67',
',,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86',
',87,94,95,,81,82,,38,39,37,224,228,233,234,235,230,232,240,241,236,237',
',217,218,,,238,239,,207,,,211,,,52,,,,,,221,,227,40,223,222,219,220',
'231,229,225,215,226,,,,79,73,75,76,77,78,,,,74,80,,242,,,,,56,,,53,',
',54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27',
'89,88,90,91,,,17,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,',
'38,39,37,224,228,233,234,235,230,232,240,241,236,237,,217,218,,,238',
'239,,207,,,211,,,52,,,,,,221,,227,40,223,222,219,220,231,229,225,18',
'226,,,,79,73,75,76,77,78,,,,74,80,,242,,,,,56,,,53,,,54,63,64,65,,51',
',,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91',
',,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,37,224',
'228,233,234,235,230,232,240,241,236,237,,217,218,,,238,239,,207,,,211',
',,52,,,,,,221,,227,40,223,222,219,220,231,229,225,215,226,,,,79,73,75',
'76,77,78,,,,74,80,,242,,,,,56,,,53,,,54,63,64,65,8,51,,,,57,58,,,,61',
',59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93',
'92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,37,224,228,233,234,235,230',
'232,240,241,236,237,,217,218,,,238,239,,36,,,277,,,52,,,,,32,221,,227',
'40,223,222,219,220,231,229,225,18,226,,,,79,73,75,76,77,78,,,,74,80',
',242,,,,,56,,,53,,,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256',
'66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,288,,,93,92,,83,50,85',
'84,86,,87,94,95,,81,82,,,,292,224,228,233,234,235,230,232,240,241,236',
'237,,217,218,,,238,239,,285,,,282,,,52,,,,,281,221,,227,,223,222,219',
'220,231,229,225,,226,,,,79,73,75,76,77,78,,,,74,80,,242,,,,,56,,,53',
',,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287',
'291,89,88,90,91,,,216,,,,,,,288,,,93,92,,83,50,85,84,86,,87,94,95,,81',
'82,,,,292,224,228,233,234,235,230,232,240,241,236,237,,217,218,,,238',
'239,,285,,,211,,,52,,,,,,221,,227,,223,222,219,220,231,229,225,,226',
',,,79,73,75,76,77,78,,,,74,80,,242,,294,,,56,,,53,,,54,63,64,65,,51',
',,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91',
',,216,,,,,,,288,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,,,292,224',
'228,233,234,235,230,232,240,241,236,237,,217,218,,,238,239,,869,,,211',
',,52,,,,,,221,,227,,223,222,219,220,231,229,225,,226,,,,79,73,75,76',
'77,78,,,,74,80,,242,,,,,56,,,53,,,54,63,64,65,,51,,,,57,58,,,,61,,59',
'60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,540,216,332,330,329',
',331,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,37,540,,332',
'330,329,,331,540,543,332,330,329,,331,,,779,,,207,,,211,224,,52,,,,',
',,,,40,,,,543,238,239,,215,,,543,546,79,73,75,76,77,78,546,221,,74,80',
'223,222,219,220,,,56,,,53,,,54,63,64,65,8,51,,,,57,58,,,,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,,83,50',
'85,84,86,,87,94,95,,81,82,,38,39,37,224,,,,,,,,,,,,,,,,238,239,,36,',
',30,,,52,,,,,32,221,,227,40,223,222,219,220,,,225,18,226,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,,,54,63,64,65,,51,,,,57,58,,,,61,,59',
'60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93',
'92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,37,224,,,,,,,,,,,,,,,,238',
'239,,207,,,211,,,52,,,,,,221,,227,40,223,222,219,220,,,225,215,226,',
',,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,54,63,64,65,,51,,,,57,58',
',,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,',
',,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,37,224,-526,-526',
'-526,-526,230,232,,,-526,-526,,,,,,238,239,,207,,,211,,,52,,,,,,221',
',227,40,223,222,219,220,231,229,225,215,226,,,,79,73,75,76,77,78,,,',
'74,80,,,,,,,56,,,53,,,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256',
'66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85',
'84,86,,87,94,95,,81,82,,38,39,37,224,-526,-526,-526,-526,230,232,,,-526',
'-526,,,,,,238,239,,207,,,211,,,52,,,,,,221,,227,40,223,222,219,220,231',
'229,225,215,226,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,54,63',
'64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89',
'88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38',
'39,37,224,228,233,234,235,230,232,,,236,237,,,,,,238,239,,207,,,211',
',,52,,,,,,221,,227,40,223,222,219,220,231,229,225,215,226,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,,,54,63,64,65,,51,,,,57,58,,,,61,,59',
'60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93',
'92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,37,224,-526,-526,-526,-526',
'230,232,,,-526,-526,,,,,,238,239,,207,,,211,,,52,,,,,,221,,227,40,223',
'222,219,220,231,229,225,215,226,,,,79,73,75,76,77,78,,,,74,80,,,,,,',
'56,,,53,,,54,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,',
',22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,,83,50,85,84,86,,87,94',
'95,,81,82,,38,39,37,224,228,233,234,235,230,232,240,,236,237,,,,,,238',
'239,,36,,,30,,,52,,,,,32,221,,227,40,223,222,219,220,231,229,225,18',
'226,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,54,63,64,65,,51,,',
',57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,',
'216,,,,,,,41,,,93,92,,83,50,85,84,86,258,87,94,95,,81,82,,38,39,37,224',
'-526,-526,-526,-526,230,232,,,-526,-526,,,,,,238,239,,207,,,211,,,52',
',,,,623,221,251,227,40,223,222,219,220,231,229,225,215,226,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,,,54,63,64,65,,51,,,,57,58,,,,61',
',59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92',
',83,50,85,84,86,,87,94,95,,81,82,,38,39,37,224,-526,-526,-526,-526,230',
'232,,,-526,-526,,,,,,238,239,,207,,,211,,,52,,,,,,221,,227,40,223,222',
'219,220,231,229,225,18,226,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,',
'53,,,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254',
'28,27,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,258,87,94,95',
',81,82,,38,39,37,224,,,,,,,,,,,,,,,,238,239,,207,,,211,,,52,,,,,253',
'221,,227,40,223,222,219,220,,,225,215,226,,,,79,73,75,76,77,78,,,,74',
'80,,,,,,,56,,,53,,,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256',
'66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85',
'84,86,258,87,94,95,,81,82,,38,39,37,224,-526,-526,-526,-526,230,232',
',,-526,-526,,,,,,238,239,,207,,,211,,,52,,,,,,221,,227,40,223,222,219',
'220,231,229,225,215,226,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
',,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287',
'291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,258,87,94,95',
',81,82,,38,39,37,224,228,233,234,235,230,232,240,241,236,237,,-526,-526',
',,238,239,,207,,,211,,,52,,,,,,221,251,227,40,223,222,219,220,231,229',
'225,215,226,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,54,63,64,65',
',51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90',
'91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,37',
'224,,,,,,,,,,,,,,,,238,239,,207,,,211,,,52,,,,,,221,,227,40,223,222',
'219,220,,,225,215,226,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,',
'54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89',
'88,90,91,,,17,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38',
'39,37,224,228,233,234,235,230,232,240,241,236,237,,-526,-526,,,238,239',
',207,,,211,,,52,,,,,,221,,227,40,223,222,219,220,231,229,225,18,226',
',,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,54,63,64,65,,51,,,,57',
'58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,',
'41,,,93,92,,83,50,85,84,86,,87,94,95,224,81,82,,38,39,37,,,,,,,,,,238',
'239,,,,,,,,,207,,,211,,221,52,227,,223,222,219,220,,,40,,,,,,,,18,,',
',,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,54,63,64,65,,51,,,,57,58',
',,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41',
',,93,92,,83,50,85,84,86,,87,94,95,224,81,82,,38,39,37,,,,,,,,,,238,239',
',,,,,,,,207,,,211,,221,52,227,,223,222,219,220,,,40,,,,,,,,18,,,,,79',
'73,75,76,77,78,,,,74,80,100,,,,,99,56,,,53,,,54,63,64,65,,51,,,,57,58',
',,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,',
',,,288,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,,,292,,,,,,,,,,,,,',
',,,,,,285,,,30,,,52,,,,,32,,,,,,,,,,,,,,,,,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,,,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67',
',,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,,83,50,85,84,86,,87',
'94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,207,,,211,,640,52,,,,,,,251',
',40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,54,63,64',
'65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90',
'91,,,17,,,,,,7,41,,9,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,37',
',,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,387,56,,,53,,,54,63,64,65,8,51,,,,57,58,,,,61',
',59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93',
'92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36',
',,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,',
',,56,,,53,,,54,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,',
',,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,,83,50,85,84,86,,87',
'94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40',
',,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,54,63,64,65',
'8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91',
',,17,,,,,,7,41,,9,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,37,',
',,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,,,54,63,64,65,,51,,,,57,58,,,,61,,59,60',
'62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,288,,,93,92',
',83,50,85,84,561,,87,94,95,,81,82,,,,292,,,,,,,,,,,,,,,,,,,,562,,,211',
',,52,,,,,,,,,,,,,,,,,,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,',
',54,-502,-502,-502,,-502,,,,-502,-502,,,,-502,,-502,-502,-502,-502,-502',
'-502,-502,,-502,,,,-502,-502,-502,-502,-502,-502,-502,,,-502,,,,,,,-502',
',,-502,-502,,-502,-502,-502,-502,-502,-502,-502,-502,-502,,-502,-502',
',-502,-502,-502,,,,,,,,,,,,,,,,,,,,-502,,,-502,-502,,-502,,,,,-502,',
'-502,,-502,,,,,,,,-502,,-502,,,-502,-502,-502,-502,-502,-502,,,,-502',
'-502,,,,,,,-502,,,-502,,,-502,-503,-503,-503,,-503,,,,-503,-503,,,,-503',
',-503,-503,-503,-503,-503,-503,-503,,-503,,,,-503,-503,-503,-503,-503',
'-503,-503,,,-503,,,,,,,-503,,,-503,-503,,-503,-503,-503,-503,-503,-503',
'-503,-503,-503,,-503,-503,,-503,-503,-503,,,,,,,,,,,,,,,,,,,,-503,,',
'-503,-503,,-503,,,,,-503,,-503,,-503,,,,,,,,-503,,-503,,,-503,-503,-503',
'-503,-503,-503,,,,-503,-503,,,,,,,-503,,,-503,,,-503,63,64,65,,51,,',
',57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,',
'216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,37,,,,',
',,,,,,,,,,,,,,,207,,,211,,,52,,,,,253,,,,40,,,,,,,,215,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,,,54,63,64,65,8,51,,,,57,58,,,,61,,59',
'60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,6,9,93,92',
',83,50,85,84,86,,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30',
',,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,387',
'56,,,53,,,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,',
'22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95',
',81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,',
',18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,54,63,64,65,,51,',
',,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,',
',,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,37,,,,,,,,,',
',,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78',
',,,74,80,,,,,,,56,,,53,,,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23',
'24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,,83,50,85,84',
'86,,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,',
',,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,54,63',
'64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90',
'91,,,17,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,37',
',,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,,,54,63,64,65,8,51,,,,57,58,,,,61,,59',
'60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92',
',83,50,85,84,86,,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30',
',,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56',
',,53,,,54,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22',
'28,27,89,88,90,91,,,17,,,,,,7,41,6,9,93,92,,83,50,85,84,86,,87,94,95',
',81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,',
',18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,54,63,64,65,,51,',
',,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,',
',216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,37,,,',
',,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,,,54,63,64,65,,51,,,,57,58,,,,61,,59,60',
'62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,288,,,93,92',
',83,50,85,84,561,,87,94,95,,81,82,,,,292,,,,,,,,,,,,,,,,,,,,562,,,211',
',,52,,,,,,,,,,,,,,,,,,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,',
',54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287',
'291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81',
'82,,38,39,37,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,54,63,64,65,8,51,,,,57',
'58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7',
'41,,9,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,',
',,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74',
'80,,,,,,,56,,,53,,,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66',
'67,,,,,,22,28,27,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86',
',87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,404',
',,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,54,63',
'64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90',
'91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,37',
',,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,404,,,,40,,,,,,,,215,,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,,,54,63,64,65,,51,,,,57,58,,,,61',
',59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,216,,,,,,,41,,,93',
'92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,207',
',,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,',
',,56,,,53,,,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,',
',,,,254,28,27,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,258',
'87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,253',
',,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,54,63',
'64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89',
'88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38',
'39,37,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79',
'73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,54,63,64,65,,51,,,,57,58,,,',
'61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,216,,,,,,,41,,',
'93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,',
'207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,,,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67',
',,,,,22,28,27,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87',
'94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40',
',,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,54,63,64,65',
',51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,',
',17,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,37,,,,',
',,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,,,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,,83,50,85',
'84,86,,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,',
',,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,54',
'63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291',
'89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82',
',38,39,37,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,',
',,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,54,63,64,65,8,51,,,,57',
'58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7',
'41,,9,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,',
',,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74',
'80,,,,,,,56,,,53,,,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256',
'66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,288,,,93,92,,83,50,85',
'84,86,,87,94,95,,81,82,,,,292,,,,,,,,,,,,,,,,,,,,285,,,282,,,52,,,,',
',,,,,,,,,,,,,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,54,63,64',
'65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90',
'91,,,17,,,,,,7,41,,9,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,37',
',,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,,,54,63,64,65,8,51,,,,57,58,,,,61,,59',
'60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92',
',83,50,85,84,86,,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30',
',,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56',
',,53,,,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254',
'28,27,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,258,87,94,95',
',81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,253,,,,40,,,',
',,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,54,63,64,65,8',
'51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,',
'17,,,,,,7,41,,9,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,37,,,',
',,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,,,54,63,64,65,,51,,,,57,58,,,,61,,59,60',
'62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,,83,50',
'85,84,86,,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,207,,,211,,436',
'52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
',,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287',
'291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81',
'82,,38,39,37,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,54,63,64,65,,51,,,,57',
'58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,',
'41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,',
',,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74',
'80,,,,,,,56,,,53,,,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256',
'66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85',
'84,86,,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,',
',,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,',
'54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287',
'291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81',
'82,,38,39,37,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,54,63,64,65,,51,,,,57',
'58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216',
',,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,37,,,,,,,,',
',,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78',
',,,74,80,,,,,,,56,,,53,,,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255',
'256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50',
'85,84,86,,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,207,,,211,,,52',
',,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,',
',54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287',
'291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81',
'82,,38,39,37,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,54,63,64,65,,51,,,,57',
'58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216',
',,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,37,,,,,,,,',
',,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78',
',,,74,80,,,,,,,56,,,53,,,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255',
'256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50',
'85,84,86,,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,207,,,211,,,52',
',,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,',
',54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287',
'291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81',
'82,,38,39,37,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,54,63,64,65,,51,,,,57',
'58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216',
',,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,37,,,,,,,,',
',,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78',
',,,74,80,,,,,,,56,,,53,,,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255',
'256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50',
'85,84,86,,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,207,,,211,,,52',
',,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,',
',54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287',
'291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81',
'82,,38,39,37,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,54,63,64,65,,51,,,,57',
'58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216',
',,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,37,,,,,,,,',
',,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78',
',,,74,80,,,,,,,56,,,53,,,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255',
'256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50',
'85,84,86,,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,207,,,211,,,52',
',,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,',
',54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287',
'291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81',
'82,,38,39,37,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,54,63,64,65,,51,,,,57',
'58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216',
',,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,37,,,,,,,,',
',,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78',
',,,74,80,,,,,,,56,,,53,,,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255',
'256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50',
'85,84,86,,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,207,,,211,,,52',
',,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,',
',54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287',
'291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81',
'82,,38,39,37,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,54,63,64,65,,51,,,,57',
'58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216',
',,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,37,,,,,,,,',
',,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78',
',,,74,80,,,,,,,56,,,53,,,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255',
'256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50',
'85,84,86,,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,207,,,211,,,52',
',,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,',
',54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287',
'291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81',
'82,,38,39,37,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,54,63,64,65,,51,,,,57',
'58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216',
',,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,37,,,,,,,,',
',,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78',
',,,74,80,,,,,,,56,,,53,,,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255',
'256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50',
'85,84,86,,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,207,,,211,,,52',
',,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,',
',54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287',
'291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81',
'82,,38,39,37,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,54,63,64,65,,51,,,,57',
'58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216',
',,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,37,,,,,,,,',
',,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78',
',,,74,80,,,,,,,56,,,53,,,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255',
'256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50',
'85,84,86,,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,207,,,211,,,52',
',,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,',
',54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287',
'291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81',
'82,,38,39,37,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,54,63,64,65,,51,,,,57',
'58,,,,61,,59,60,62,255,256,66,67,,,,,,254,28,27,89,88,90,91,,,216,,',
',,,,41,,,93,92,,83,50,85,84,86,258,87,94,95,,81,82,,38,39,37,,,,,,,',
',,,,,,,,,,,,207,,,211,,,52,,,,,253,,,,40,,,,,,,,215,,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,,,54,63,64,65,,51,,,,57,58,,,,61,,59,60',
'62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,,83,50',
'85,84,86,,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,207,,,211,,,52',
',,,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,',
'54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287',
'291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81',
'82,,38,39,37,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,253,,,,40,,,,,,,',
'215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,54,63,64,65,,51,',
',,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,',
',216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,37,,,',
',,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,,,54,63,64,65,,51,,,,57,58,,,,61,,59,60',
'62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92',
',83,50,85,84,86,,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,207,,',
'211,,,52,,,,,404,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,',
',,,56,,,53,,,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67',
',,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86',
',87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,',
',40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,54,63',
'64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89',
'88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38',
'39,37,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79',
'73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,54,63,64,65,,51,,,,57,58,,,',
'61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,',
'288,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,,,292,,,,,,,,,,,,,,,,',
',,,285,,,282,,,52,,,,,,,,,,,,,,,,,,,,,,79,73,75,76,77,78,,,,74,80,,',
',,,,56,,,53,,,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67',
',,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86',
',87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,',
',40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,54,63',
'64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89',
'88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38',
'39,37,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79',
'73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,54,63,64,65,,51,,,,57,58,,,',
'61,,59,60,62,255,256,66,67,,,,,,254,28,27,89,88,90,91,,,216,,,,,,,41',
',,93,92,,83,50,85,84,86,258,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,',
',,,,,207,,,211,,,52,,,,,253,,251,,40,,,,,,,,215,,,,,79,73,75,76,77,78',
',,,74,80,,,,,,,56,,,53,,,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255',
'256,66,67,,,,,,254,28,27,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85',
'84,86,258,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,207,,,211,,,485',
',,,,253,,251,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56',
',,53,,,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254',
'28,27,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,258,87,94,95',
',81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,207,,,211,,489,52,,,,,253,,251,',
'40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,54,63,64',
'65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91',
',,17,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,37,,,',
',,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,,,54,63,64,65,,51,,,,57,58,,,,61,,59,60',
'62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,288,,,93,92',
',83,50,85,84,86,,87,94,95,,81,82,,,,292,,,,,,,,,,,,,,,,,,,,285,,,282',
',,52,,,,,,,,,,,,,,,,,,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,',
',54,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27',
'89,88,90,91,,,17,,,,,,7,41,,9,93,92,,83,50,85,84,86,,87,94,95,,81,82',
',38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,',
',79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,54,63,64,65,8,51,,,,57,58',
',,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41',
',9,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,',
',,,36,,,277,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74',
'80,,,,,,,56,,,53,,,54,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66',
'67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,,83,50,85,84,86',
',87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,',
',40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,54,63,64',
'65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,28,27,89,88,90',
'91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,258,87,94,95,,81,82,,38,39',
'37,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,623,,251,,40,,,,,,,,215,,,',
',79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,54,63,64,65,8,51,,,,57,58',
',,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41',
',9,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,',
',,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,,,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66',
'67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,288,,,93,92,,83,50,85,84',
'86,,87,94,95,,81,82,,,,292,,,,,,,,,,,,,,,,,,,,285,,,211,,,52,,,,,,,',
',,,,,,,,,,,,,,79,73,75,76,77,78,,,,74,80,,,,497,,,56,,,53,,,54,63,64',
'65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90',
'91,,,17,,,,,,7,41,,9,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,37',
',,,,,,,,,,,,,,,,,,,36,,,277,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,,,54,63,64,65,,51,,,,57,58,,,,61,,59',
'60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93',
'92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,207',
',,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,',
',,56,,,53,,,54,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,',
',,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,,83,50,85,84,86,,87',
'94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40',
',,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,54,63,64,65',
',51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90',
'91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,37',
',,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,,,54,63,64,65,,51,,,,57,58,,,,61,,59',
'60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,,83',
'50,85,84,86,,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,207,,,211',
',,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,',
'53,,,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254',
'287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95',
',81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,',
',215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,54,63,64,65,,51',
',,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91',
',,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,37,,',
',,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,,,54,63,64,65,,51,,,,57,58,,,,61,,59,60',
'62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,216,,,,,,,41,,,93,92,,83',
'50,85,84,86,,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,207,,,211',
',,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,',
',53,,,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254',
'287,291,89,88,90,91,,,216,,,,,,,288,,,93,92,,83,50,85,84,86,,87,94,95',
',81,82,,,,292,,,,,,,,,,,,,,,,,,,,285,,,282,,,52,,,,,,,,,,,,,,,,,,,,',
',79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,54,63,64,65,,51,,,,57,58',
',,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,216,,,,,,,41',
',,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,',
',,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,,,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67',
',,,,,22,28,27,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87',
'94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40',
',,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,54,63,64,65',
',51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90',
'91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,37',
',,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,725,,,,40,,,,,,,,215,,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,,,54,63,64,65,,51,,,,57,58,,,,61',
',59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41',
',,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,',
',,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,,,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67',
',,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,,83,50,85,84,86,,87',
'94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40',
',,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,54,63,64,65',
',51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90',
'91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,37',
',,,,,,,,,,,,,,,,,,,207,,,211,514,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,,,54,63,64,65,8,51,,,,57,58,,,,61',
',59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93',
'92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36',
',,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,',
',,56,,,53,,,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,',
',,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,258',
'87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,623',
',,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,54,63',
'64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89',
'88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,258,87,94,95,,81,82',
',38,39,37,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,',
',,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,54,63,64,65,,51,,,,57,58',
',,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41',
',,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,',
',,207,,,211,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,,,54,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67',
',,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,,83,50,85,84,86,,87',
'94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40',
',,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,54,63,64,65',
'8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91',
',,17,,,,,,7,41,,9,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,37,',
',,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,,,54,63,64,65,8,51,,,,57,58,,,,61,,59,60',
'62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,,83',
'50,85,84,86,,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,',
'52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,',
'53,,,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254',
'287,291,89,88,90,91,,,216,,,,,,,288,,,93,92,,83,50,85,84,86,,87,94,95',
',81,82,,,,292,,,,,,,,,,,,,,,,,,,,675,,,211,,,52,,,,,,,,,,,,,,,,,,,,',
',79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,54,63,64,65,8,51,,,,57,58',
',,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41',
',9,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,',
',,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,,,54,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67',
',,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,,83,50,85,84,86,,87',
'94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40',
',,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,54,155,166',
'156,179,152,172,162,161,187,190,177,160,159,154,180,188,189,164,153',
'167,171,173,165,158,,,,174,181,176,175,168,178,163,151,170,169,182,183',
'184,185,186,150,157,148,149,146,147,,110,112,,,111,,,,,,,,,141,142,',
'138,120,121,122,129,126,128,,,123,124,,,,143,144,130,131,,,,,,,,,,,',
',135,134,,119,140,137,136,132,133,127,125,117,139,118,,,145,191,,,,',
',,,,,80,155,166,156,179,152,172,162,161,187,190,177,160,159,154,180',
'188,189,164,153,167,171,173,165,158,,,,174,181,176,175,168,178,163,151',
'170,169,182,183,184,185,186,150,157,148,149,146,147,,110,112,,,111,',
',,,,,,,141,142,,138,120,121,122,129,126,128,,,123,124,,,,143,144,130',
'131,,,,,,,,,,,,,135,134,,119,140,137,136,132,133,127,125,117,139,118',
',,145,191,,,,,,,,,,80,155,166,156,179,152,172,162,161,187,190,177,160',
'159,154,180,188,189,164,153,167,171,173,165,158,,,,174,181,176,175,168',
'178,163,151,170,169,182,183,184,185,186,150,157,148,149,146,147,,110',
'112,109,,111,,,,,,,,,141,142,,138,120,121,122,129,126,128,,,123,124',
',,,143,144,130,131,,,,,,,,,,,,,135,134,,119,140,137,136,132,133,127',
'125,117,139,118,,,145,191,,,,,,,,,,80,155,166,156,179,152,172,162,161',
'187,190,177,160,159,154,180,188,189,164,153,167,171,173,165,158,,,,174',
'181,176,175,168,178,163,151,170,169,182,183,184,185,186,150,157,148',
'149,146,147,,110,112,,,111,,,,,,,,,141,142,,138,120,121,122,129,126',
'128,,,123,124,,,,143,144,130,131,,,,,,,,,,,,,135,134,,119,140,137,136',
'132,133,127,125,117,139,118,,,145,191,,,,,,,,,,80,155,166,156,179,152',
'172,162,161,187,190,177,160,159,154,180,188,189,164,153,167,171,173',
'165,158,,,,174,181,176,175,168,178,163,151,170,169,182,183,184,185,186',
'150,157,148,149,146,147,,110,112,383,382,111,,384,,,,,,,141,142,,138',
'120,121,122,129,126,128,,,123,124,,,,143,144,130,131,,,,,,,,,,,,,135',
'134,,119,140,137,136,132,133,127,125,117,139,118,,,145,155,166,156,179',
'152,172,162,161,187,190,177,160,159,154,180,188,189,164,153,167,171',
'173,165,158,,,,174,181,176,175,168,178,163,151,170,169,182,183,184,185',
'186,150,157,148,149,146,147,,110,112,383,382,111,,384,,,,,,,141,142',
',138,120,121,122,129,126,128,,,123,124,,,,143,144,130,131,,,,,,,,,,',
',,135,134,,119,140,137,136,132,133,127,125,117,139,118,,,145,155,166',
'156,179,152,172,162,161,187,190,177,160,159,154,180,188,189,164,153',
'167,171,173,165,158,,,,174,181,176,175,168,178,163,151,170,169,182,183',
'184,185,186,150,157,148,149,146,147,,110,112,,,111,,,,,,,,,141,142,',
'138,120,121,122,129,126,128,,,123,124,,,,143,144,130,131,,,,,,,,,,,',
',135,134,,119,140,137,136,132,133,127,125,117,139,118,,,145,155,166',
'156,179,152,172,162,161,187,190,177,160,159,154,180,188,189,164,153',
'167,171,173,165,158,,,,174,181,176,360,359,361,358,151,170,169,182,183',
'184,185,186,150,157,148,149,356,357,,354,112,85,84,355,,87,,,,,,,141',
'142,,138,120,121,122,129,126,128,,,123,124,,,,143,144,130,131,,,,,,366',
',,,,,,135,134,,119,140,137,136,132,133,127,125,117,139,118,473,416,145',
',474,,,,,,,,,141,142,,138,120,121,122,129,126,128,,,123,124,,,,143,144',
'130,131,,,,,,,,,,,,,135,134,,119,140,137,136,132,133,127,125,117,139',
'118,473,416,145,,474,,,,,,,,,141,142,,138,120,121,122,129,126,128,,',
'123,124,,,,143,144,130,131,,,,,,264,,,,,,,135,134,,119,140,137,136,132',
'133,127,125,117,139,118,651,416,145,,652,,,,,,,,,141,142,,138,120,121',
'122,129,126,128,,,123,124,,,,143,144,130,131,,,,,,264,,,,,,,135,134',
',119,140,137,136,132,133,127,125,117,139,118,654,422,145,,655,,,,,,',
',,141,142,,138,120,121,122,129,126,128,,,123,124,,,,143,144,130,131',
',,,,,,,,,,,,135,134,,119,140,137,136,132,133,127,125,117,139,118,792',
'422,145,,790,,,,,,,,,141,142,,138,120,121,122,129,126,128,,,123,124',
',,,143,144,130,131,,,,,,,,,,,,,135,134,,119,140,137,136,132,133,127',
'125,117,139,118,904,422,145,,905,,,,,,,,,141,142,,138,120,121,122,129',
'126,128,,,123,124,,,,143,144,130,131,,,,,,,,,,,,,135,134,,119,140,137',
'136,132,133,127,125,117,139,118,792,422,145,,835,,,,,,,,,141,142,,138',
'120,121,122,129,126,128,,,123,124,,,,143,144,130,131,,,,,,,,,,,,,135',
'134,,119,140,137,136,132,133,127,125,117,139,118,473,416,145,,474,,',
',,,,,,141,142,,138,120,121,122,129,126,128,,,123,124,,,,143,144,130',
'131,,,,,,,,,,,,,135,134,,119,140,137,136,132,133,127,125,117,139,118',
'902,416,145,,903,,,,,,,,,141,142,,138,120,121,122,129,126,128,,,123',
'124,,,,143,144,130,131,,,,,,264,,,,,,,135,134,,119,140,137,136,132,133',
'127,125,117,139,118,473,416,145,,474,,,,,,,,,141,142,,138,120,121,122',
'129,126,128,,,123,124,,,,143,144,130,131,,,,,,,,,,,,,135,134,,119,140',
'137,136,132,133,127,125,117,139,118,473,416,145,,474,,,,,,,,,141,142',
',138,120,121,122,129,126,128,,,123,124,,,,143,144,130,131,,,,,,,,,,',
',,135,134,,119,140,137,136,132,133,127,125,117,139,118,608,416,145,',
'609,,,,,,,,,141,142,,138,120,121,122,129,126,128,,,123,124,,,,143,144',
'130,131,,,,,,264,,,,,,,135,134,,119,140,137,136,132,133,127,125,117',
'139,118,412,416,145,,413,,,,,,,,,141,142,,138,120,121,122,129,126,128',
',,123,124,,,,143,144,130,131,,,,,,264,,,,,,,135,134,,119,140,137,136',
'132,133,127,125,117,139,118,610,422,145,,611,,,,,,,,,141,142,,138,120',
'121,122,129,126,128,,,123,124,,,,143,144,130,131,,,,,,,,,,,,,135,134',
',119,140,137,136,132,133,127,125,117,139,118,608,416,145,,609,,,,,,',
',,141,142,,138,120,121,122,129,126,128,,,123,124,,,,143,144,130,131',
',,,,,264,,,,,,,135,134,,119,140,137,136,132,133,127,125,117,139,118',
'610,422,145,,611,,,,,,,,,141,142,,138,120,121,122,129,126,128,,,123',
'124,,,,143,144,130,131,,,,,,,,,,,,,135,134,,119,140,137,136,132,133',
'127,125,117,139,118,418,422,145,,420,,,,,,,,,141,142,,138,120,121,122',
'129,126,128,,,123,124,,,,143,144,130,131,323,,332,330,329,323,331,332',
'330,329,,331,135,134,,119,140,137,136,132,133,127,125,117,139,118,,323',
'145,332,330,329,,331,,,,,334,,,,,334,,,337,336,340,339,,337,336,340',
'339,,714,741,332,330,329,,331,,,334,,531,,,,,,337,336,340,339,714,,332',
'330,329,714,331,332,330,329,,331,,,,,,334,323,,332,330,329,,331,337',
'336,340,339,,714,,332,330,329,,331,,334,,,,,334,708,,337,336,340,339',
',337,336,340,339,,334,318,,,,,,,337,336,340,339,334,708,,,,,,,337,336',
'340,339' ]
        racc_action_table = arr = ::Array.new(23434, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'0,0,0,0,0,343,317,789,0,0,289,55,344,0,26,0,0,0,0,0,0,0,654,661,661',
'584,597,0,0,0,0,0,0,0,739,652,0,435,435,573,573,377,0,0,0,0,0,0,486',
'0,0,0,0,0,646,0,0,0,480,0,0,356,0,0,0,480,354,597,356,306,306,431,71',
'354,597,289,910,34,661,26,71,486,739,910,0,584,584,0,654,654,0,646,435',
'795,584,0,289,55,795,0,26,372,652,377,372,480,789,0,789,873,317,789',
'0,0,0,0,0,0,343,431,343,0,0,343,648,344,654,344,573,0,344,910,0,654',
'418,0,404,404,404,652,404,418,418,418,404,404,652,418,418,404,418,404',
'404,404,404,404,404,404,306,418,650,372,372,404,404,404,404,404,404',
'404,418,418,404,418,418,418,418,418,902,404,285,313,404,404,313,404',
'404,404,404,404,566,404,404,404,263,404,404,903,404,404,404,418,418',
'418,418,418,418,418,418,418,418,418,418,418,418,653,651,418,418,418',
'404,418,873,404,873,418,404,873,705,705,608,600,418,208,418,404,418',
'418,418,418,418,418,418,404,418,418,418,904,404,404,404,404,404,404',
'751,555,205,404,404,418,418,751,418,205,418,404,420,418,404,418,788',
'404,297,420,420,420,554,696,608,420,420,208,420,651,696,487,666,357',
'463,666,476,902,674,902,357,566,902,13,656,674,206,751,420,420,13,420',
'420,420,420,420,903,205,903,609,566,903,298,705,487,566,651,463,705',
'476,867,904,309,651,877,309,877,867,696,420,420,420,420,420,420,420',
'420,420,420,420,420,420,420,674,206,420,420,420,13,420,555,595,555,420',
'274,555,904,609,904,274,420,904,420,659,420,420,420,420,420,420,420',
'554,420,554,420,867,554,310,358,788,310,788,788,660,788,358,360,420',
'420,709,420,588,420,360,709,420,611,420,892,892,892,892,892,611,611',
'611,892,892,611,611,611,892,611,892,892,892,892,892,892,892,37,37,611',
'611,662,892,892,892,892,892,892,892,611,611,892,611,611,611,611,611',
'892,892,252,892,892,892,276,892,892,892,892,892,868,892,892,892,379',
'892,892,868,892,892,892,611,611,611,611,611,611,611,611,611,611,611',
'611,611,611,906,906,611,611,611,892,611,611,892,3,611,892,667,611,3',
'611,892,611,668,611,892,611,611,611,611,611,611,611,892,611,868,611',
'671,892,892,892,892,892,892,379,379,379,892,892,611,611,611,611,673',
'611,892,301,611,892,611,610,892,422,422,422,675,422,610,610,610,422',
'422,610,610,610,422,610,422,422,422,422,422,422,422,676,610,610,610',
'677,422,422,422,422,422,422,422,610,610,422,610,610,610,610,610,348',
'422,348,680,422,422,308,422,422,422,422,422,422,422,422,422,370,422',
'422,278,422,422,422,610,610,610,610,610,610,610,610,610,610,610,610',
'610,610,807,807,610,610,610,422,610,610,422,422,610,422,685,610,691',
'610,422,610,422,610,422,610,610,610,610,610,610,610,422,610,610,610',
'693,422,422,422,422,422,422,370,370,370,422,422,610,610,610,610,249',
'610,422,248,610,422,610,50,422,423,423,423,641,423,50,50,50,423,423',
'50,50,50,423,50,423,423,423,423,423,423,423,538,538,50,50,50,423,423',
'423,423,423,423,423,50,50,423,50,50,50,50,50,638,423,683,683,423,423',
'562,423,423,423,423,423,423,423,423,423,368,423,423,311,423,423,423',
'50,50,50,50,50,50,50,50,50,50,50,50,50,50,216,347,50,50,50,423,347,50',
'423,423,50,423,312,50,210,50,423,50,423,50,423,50,50,50,50,50,50,50',
'423,50,209,50,557,423,423,423,423,423,423,368,368,368,423,423,50,50',
'50,50,556,50,423,50,50,423,291,28,423,888,888,888,710,888,28,28,28,888',
'888,28,28,28,888,28,888,888,888,888,888,888,888,15,15,28,28,711,888',
'888,888,888,888,888,888,28,28,888,28,28,28,28,28,712,888,292,292,888',
'888,714,888,888,888,888,888,888,888,888,888,374,888,888,207,888,888',
'888,28,28,28,28,28,28,28,28,28,28,28,28,28,28,717,704,28,28,28,888,704',
'28,888,28,28,888,314,28,550,28,888,28,322,28,888,28,28,28,28,28,28,28',
'888,28,724,28,545,888,888,888,888,888,888,374,374,374,888,888,28,28',
'28,28,541,28,888,279,28,888,323,27,888,886,886,886,886,886,27,27,27',
'886,886,27,27,27,886,27,886,886,886,886,886,886,886,530,27,27,27,325',
'886,886,886,886,886,886,886,27,27,886,27,27,27,27,27,886,886,326,886',
'886,886,192,886,886,886,886,886,25,886,886,886,338,886,886,25,886,886',
'886,27,27,27,27,27,27,27,27,27,27,27,27,27,27,296,517,27,27,27,886,516',
'27,886,27,27,886,742,27,743,27,886,27,746,27,886,27,27,27,27,27,27,27',
'886,27,27,27,361,886,886,886,886,886,886,361,749,296,886,886,27,27,27',
'27,296,27,886,750,27,886,515,414,886,878,878,878,878,878,414,414,414',
'878,878,414,414,414,878,414,878,878,878,878,878,878,878,752,414,414',
'414,96,878,878,878,878,878,878,878,414,414,878,414,414,414,414,414,878',
'878,755,878,878,878,756,878,878,878,878,878,355,878,878,878,757,878',
'878,355,878,878,878,414,414,414,414,414,414,414,414,414,414,414,414',
'414,414,14,341,414,414,414,878,761,414,878,414,414,878,832,414,78,414',
'878,414,764,414,878,414,414,414,414,414,414,414,878,414,414,414,363',
'878,878,878,878,878,878,363,765,14,878,878,414,414,414,414,14,414,878',
'288,414,878,287,475,878,430,430,430,506,430,475,475,475,430,430,475',
'475,475,430,475,430,430,430,430,430,430,430,342,342,475,780,412,430',
'430,430,430,430,430,430,475,475,430,475,475,475,475,475,783,430,77,882',
'430,430,503,430,430,430,430,430,430,430,430,430,63,430,430,413,430,430',
'430,299,349,412,832,498,832,758,299,832,412,564,475,792,758,359,793',
'350,564,475,430,496,359,430,475,475,430,882,882,882,882,430,798,799',
'800,430,109,493,413,492,870,109,109,430,633,413,475,870,430,430,430',
'430,430,430,41,816,299,430,430,475,817,475,758,488,475,430,564,632,430',
'824,472,430,866,866,866,866,866,472,472,472,866,866,472,472,472,866',
'472,866,866,866,866,866,866,866,825,870,472,36,482,866,866,866,866,866',
'866,866,472,472,866,472,472,472,472,472,866,866,35,866,866,866,605,866',
'866,866,866,866,283,866,866,866,835,866,866,283,866,866,866,637,637',
'637,637,637,637,637,637,637,637,637,472,637,637,655,836,637,637,472',
'866,35,655,866,472,472,866,655,35,481,841,866,637,842,637,866,637,637',
'637,637,637,637,637,866,637,283,472,20,866,866,866,866,866,866,479,847',
'502,866,866,472,637,472,637,502,472,866,280,852,866,853,655,866,864',
'864,864,891,864,854,856,857,864,864,891,478,561,864,444,864,864,864',
'864,864,864,864,645,645,645,645,645,864,864,864,864,864,864,864,286',
'443,864,42,284,502,442,286,441,864,42,284,864,864,869,864,864,864,864',
'864,790,864,864,864,891,864,864,790,864,864,864,561,790,373,905,440',
'12,612,561,11,880,905,419,561,532,546,905,546,546,546,864,546,10,864',
'887,286,864,9,42,284,376,864,411,864,561,864,440,407,6,896,440,440,898',
'864,899,790,901,439,864,864,864,864,864,864,622,405,561,864,864,905',
'532,532,532,532,1,864,393,620,864,399,,864,849,849,849,849,849,,439',
',849,849,439,439,,849,,849,849,849,849,849,849,849,5,5,5,5,5,849,849',
'849,849,849,849,849,718,718,849,,718,718,718,402,849,849,,849,849,849',
',849,849,849,849,849,,849,849,849,,849,849,,849,849,849,402,402,402',
'402,402,402,402,402,402,402,402,,402,402,,,402,402,,849,,,849,,,849',
',,,,849,402,,402,849,402,402,402,402,402,402,402,849,402,,,,849,849',
'849,849,849,849,,,,849,849,,402,,402,774,,849,,,849,,,849,17,17,17,',
'17,,,,17,17,,,,17,,17,17,17,17,17,17,17,275,275,275,275,275,17,17,17',
'17,17,17,17,,,17,774,774,774,774,613,,17,,804,17,17,,17,17,17,17,17',
',17,17,17,,17,17,,17,17,17,613,613,613,613,613,613,613,613,613,613,613',
',613,613,,,613,613,,17,,,17,17,,17,804,804,804,804,,613,,613,17,613',
'613,613,613,613,613,613,17,613,,,,17,17,17,17,17,17,,,,17,17,,613,,',
',,17,,,17,,,17,18,18,18,458,18,,,,18,18,,,,18,,18,18,18,18,18,18,18',
',,,,,18,18,18,18,18,18,18,458,,18,,458,458,458,458,,18,,,18,18,,18,18',
'18,18,18,,18,18,18,,18,18,,18,18,18,462,462,462,462,462,462,462,462',
'462,462,462,,462,462,,,462,462,,18,,,18,,779,18,779,779,779,,779,462',
',462,18,462,462,462,462,462,462,462,18,462,,,,18,18,18,18,18,18,,,,18',
'18,,462,462,,,,18,,,18,,,18,844,844,844,844,844,,,,844,844,,,,844,,844',
'844,844,844,844,844,844,,,,,,844,844,844,844,844,844,844,,,844,,,,,',
'844,844,,844,844,844,,844,844,844,844,844,,844,844,844,,844,844,,844',
'844,844,425,425,425,425,425,425,425,425,425,425,425,,425,425,,,425,425',
',844,,,844,,,844,,,,,844,425,,425,844,425,425,425,425,425,425,425,844',
'425,,,,844,844,844,844,844,844,,,,844,844,,425,,,,,844,,,844,,,844,843',
'843,843,459,843,,,,843,843,,,,843,,843,843,843,843,843,843,843,,,,,',
'843,843,843,843,843,843,843,459,,843,,459,459,459,459,,843,,,843,843',
',843,843,843,843,843,,843,843,843,,843,843,,843,843,843,740,740,740',
'740,740,740,740,740,740,740,740,,740,740,,,740,740,,843,,,843,,,843',
',,,,843,740,,740,843,740,740,740,740,740,740,740,843,740,,,,843,843',
'843,843,843,843,,,,843,843,,740,,,,,843,,,843,,,843,22,22,22,,22,,,',
'22,22,,,,22,,22,22,22,22,22,22,22,,,,,,22,22,22,22,22,22,22,,,22,,,',
',,,22,,,22,22,,22,22,22,22,22,22,22,22,22,,22,22,,22,22,22,513,513,513',
'513,513,513,513,513,513,513,513,,513,513,,,513,513,,22,,,22,,,22,,,',
',22,513,22,513,22,513,513,513,513,513,513,513,22,513,,,,22,22,22,22',
'22,22,,,,22,22,,513,,,,,22,,,22,,,22,23,23,23,,23,,,,23,23,,,,23,,23',
'23,23,23,23,23,23,,,,,,23,23,23,23,23,23,23,,,23,,,,,,,23,,,23,23,,23',
'23,23,23,23,23,23,23,23,,23,23,,23,23,23,735,735,735,735,735,735,735',
'735,735,735,735,,735,735,,,735,735,,23,,,23,,,23,,,,,23,735,23,735,23',
'735,735,735,735,735,735,735,23,735,,,,23,23,23,23,23,23,,,,23,23,,735',
',,,,23,,,23,,,23,24,24,24,,24,,,,24,24,,,,24,,24,24,24,24,24,24,24,',
',,,,24,24,24,24,24,24,24,,,24,,,,,,,24,,,24,24,,24,24,24,24,24,24,24',
'24,24,,24,24,,24,24,24,733,733,733,733,733,733,733,733,733,733,733,',
'733,733,,,733,733,,24,,,24,,,24,,,,,24,733,24,733,24,733,733,733,733',
'733,733,733,24,733,,,,24,24,24,24,24,24,,,,24,24,,733,,,,,24,,,24,,',
'24,839,839,839,,839,,,,839,839,,,,839,,839,839,839,839,839,839,839,',
',,,,839,839,839,839,839,839,839,,,839,,,,,,,839,,,839,839,,839,839,839',
'839,839,,839,839,839,,839,839,,839,839,839,730,730,730,730,730,730,730',
'730,730,730,730,,730,730,,,730,730,,839,,,839,,,839,,,,,,730,,730,839',
'730,730,730,730,730,730,730,839,730,,,,839,839,839,839,839,839,,,,839',
'839,,730,,,,,839,,,839,,,839,432,432,432,,432,,,,432,432,,,,432,,432',
'432,432,432,432,432,432,,,,,,432,432,432,432,432,432,432,,,432,,,,,',
',432,,,432,432,,432,432,432,432,432,,432,432,432,,432,432,,432,432,432',
'728,728,728,728,728,728,728,728,728,728,728,,728,728,,,728,728,,432',
',,432,,,432,,,,,,728,,728,432,728,728,728,728,728,728,728,432,728,,',
',432,432,432,432,432,432,,,,432,432,,728,,,,,432,,,432,,,432,366,366',
'366,,366,,,,366,366,,,,366,,366,366,366,366,366,366,366,,,,,,366,366',
'366,366,366,366,366,,,366,,,,,,,366,,,366,366,,366,366,366,366,366,',
'366,366,366,,366,366,,366,366,366,658,658,658,658,658,658,658,658,658',
'658,658,,658,658,,,658,658,,366,,,366,,,366,,,,,,658,,658,366,658,658',
'658,658,658,658,658,366,658,,,,366,366,366,366,366,366,,,,366,366,,658',
',,,,366,,,366,,,366,433,433,433,,433,,,,433,433,,,,433,,433,433,433',
'433,433,433,433,,,,,,433,433,433,433,433,433,433,,,433,,,,,,,433,,,433',
'433,,433,433,433,433,433,,433,433,433,,433,433,,433,433,433,819,819',
'819,819,819,819,819,819,819,819,819,,819,819,,,819,819,,433,,,433,,',
'433,,,,,,819,,819,433,819,819,819,819,819,819,819,433,819,,,,433,433',
'433,433,433,433,,,,433,433,,819,,,,,433,,,433,,,433,30,30,30,30,30,',
',,30,30,,,,30,,30,30,30,30,30,30,30,,,,,,30,30,30,30,30,30,30,,,30,',
',,,,30,30,,30,30,30,,30,30,30,30,30,,30,30,30,,30,30,,30,30,30,410,410',
'410,410,410,410,410,410,410,410,410,,410,410,,,410,410,,30,,,30,,,30',
',,,,30,410,,410,30,410,410,410,410,410,410,410,30,410,,,,30,30,30,30',
'30,30,,,,30,30,,410,,,,,30,,,30,,,30,31,31,31,,31,,,,31,31,,,,31,,31',
'31,31,31,31,31,31,,,,,,31,31,31,31,31,31,31,,,31,,,,,,,31,,,31,31,,31',
'31,31,31,31,,31,31,31,,31,31,,,,31,723,723,723,723,723,723,723,723,723',
'723,723,,723,723,,,723,723,,31,,,31,,,31,,,,,31,723,,723,,723,723,723',
'723,723,723,723,,723,,,,31,31,31,31,31,31,,,,31,31,,723,,,,,31,,,31',
',,31,32,32,32,,32,,,,32,32,,,,32,,32,32,32,32,32,32,32,,,,,,32,32,32',
'32,32,32,32,,,32,,,,,,,32,,,32,32,,32,32,32,32,32,,32,32,32,,32,32,',
',,32,246,246,246,246,246,246,246,246,246,246,246,,246,246,,,246,246',
',32,,,32,,,32,,,,,,246,,246,,246,246,246,246,246,246,246,,246,,,,32',
'32,32,32,32,32,,,,32,32,,246,,32,,,32,,,32,,,32,833,833,833,,833,,,',
'833,833,,,,833,,833,833,833,833,833,833,833,,,,,,833,833,833,833,833',
'833,833,,,833,,,,,,,833,,,833,833,,833,833,833,833,833,,833,833,833',
',833,833,,,,833,19,19,19,19,19,19,19,19,19,19,19,,19,19,,,19,19,,833',
',,833,,,833,,,,,,19,,19,,19,19,19,19,19,19,19,,19,,,,833,833,833,833',
'833,833,,,,833,833,,19,,,,,833,,,833,,,833,434,434,434,,434,,,,434,434',
',,,434,,434,434,434,434,434,434,434,,,,,,434,434,434,434,434,434,434',
',681,434,681,681,681,,681,,434,,,434,434,,434,434,434,434,434,,434,434',
'434,,434,434,,434,434,434,334,,334,334,334,,334,543,681,543,543,543',
',543,,,681,,,434,,,434,447,,434,,,,,,,,,434,,,,334,447,447,,434,,,543',
'334,434,434,434,434,434,434,543,447,,434,434,447,447,447,447,,,434,',
',434,,,434,829,829,829,829,829,,,,829,829,,,,829,,829,829,829,829,829',
'829,829,,,,,,829,829,829,829,829,829,829,,,829,,,,,,829,829,,829,829',
'829,,829,829,829,829,829,,829,829,829,,829,829,,829,829,829,450,,,,',
',,,,,,,,,,,450,450,,829,,,829,,,829,,,,,829,450,,450,829,450,450,450',
'450,,,450,829,450,,,,829,829,829,829,829,829,,,,829,829,,,,,,,829,,',
'829,,,829,820,820,820,,820,,,,820,820,,,,820,,820,820,820,820,820,820',
'820,,,,,,820,820,820,820,820,820,820,,,820,,,,,,,820,,,820,820,,820',
'820,820,820,820,,820,820,820,,820,820,,820,820,820,449,,,,,,,,,,,,,',
',,449,449,,820,,,820,,,820,,,,,,449,,449,820,449,449,449,449,,,449,820',
'449,,,,820,820,820,820,820,820,,,,820,820,,,,,,,820,,,820,,,820,38,38',
'38,,38,,,,38,38,,,,38,,38,38,38,38,38,38,38,,,,,,38,38,38,38,38,38,38',
',,38,,,,,,,38,,,38,38,,38,38,38,38,38,,38,38,38,,38,38,,38,38,38,448',
'448,448,448,448,448,448,,,448,448,,,,,,448,448,,38,,,38,,,38,,,,,,448',
',448,38,448,448,448,448,448,448,448,38,448,,,,38,38,38,38,38,38,,,,38',
'38,,,,,,,38,,,38,,,38,39,39,39,,39,,,,39,39,,,,39,,39,39,39,39,39,39',
'39,,,,,,39,39,39,39,39,39,39,,,39,,,,,,,39,,,39,39,,39,39,39,39,39,',
'39,39,39,,39,39,,39,39,39,457,457,457,457,457,457,457,,,457,457,,,,',
',457,457,,39,,,39,,,39,,,,,,457,,457,39,457,457,457,457,457,457,457',
'39,457,,,,39,39,39,39,39,39,,,,39,39,,,,,,,39,,,39,,,39,40,40,40,,40',
',,,40,40,,,,40,,40,40,40,40,40,40,40,,,,,,40,40,40,40,40,40,40,,,40',
',,,,,,40,,,40,40,,40,40,40,40,40,,40,40,40,,40,40,,40,40,40,460,460',
'460,460,460,460,460,,,460,460,,,,,,460,460,,40,,,40,,,40,,,,,,460,,460',
'40,460,460,460,460,460,460,460,40,460,,,,40,40,40,40,40,40,,,,40,40',
',,,,,,40,,,40,,,40,808,808,808,,808,,,,808,808,,,,808,,808,808,808,808',
'808,808,808,,,,,,808,808,808,808,808,808,808,,,808,,,,,,,808,,,808,808',
',808,808,808,808,808,,808,808,808,,808,808,,808,808,808,456,456,456',
'456,456,456,456,,,456,456,,,,,,456,456,,808,,,808,,,808,,,,,,456,,456',
'808,456,456,456,456,456,456,456,808,456,,,,808,808,808,808,808,808,',
',,808,808,,,,,,,808,,,808,,,808,794,794,794,794,794,,,,794,794,,,,794',
',794,794,794,794,794,794,794,,,,,,794,794,794,794,794,794,794,,,794',
',,,,,794,794,,794,794,794,,794,794,794,794,794,,794,794,794,,794,794',
',794,794,794,461,461,461,461,461,461,461,461,,461,461,,,,,,461,461,',
'794,,,794,,,794,,,,,794,461,,461,794,461,461,461,461,461,461,461,794',
'461,,,,794,794,794,794,794,794,,,,794,794,,,,,,,794,,,794,,,794,465',
'465,465,,465,,,,465,465,,,,465,,465,465,465,465,465,465,465,,,,,,465',
'465,465,465,465,465,465,,,465,,,,,,,465,,,465,465,,465,465,465,465,465',
'465,465,465,465,,465,465,,465,465,465,455,455,455,455,455,455,455,,',
'455,455,,,,,,455,455,,465,,,465,,,465,,,,,465,455,465,455,465,455,455',
'455,455,455,455,455,465,455,,,,465,465,465,465,465,465,,,,465,465,,',
',,,,465,,,465,,,465,52,52,52,,52,,,,52,52,,,,52,,52,52,52,52,52,52,52',
',,,,,52,52,52,52,52,52,52,,,52,,,,,,,52,,,52,52,,52,52,52,52,52,,52',
'52,52,,52,52,,52,52,52,454,454,454,454,454,454,454,,,454,454,,,,,,454',
'454,,52,,,52,,,52,,,,,,454,,454,52,454,454,454,454,454,454,454,52,454',
',,,52,52,52,52,52,52,,,,52,52,,,,,,,52,,,52,,,52,53,53,53,,53,,,,53',
'53,,,,53,,53,53,53,53,53,53,53,,,,,,53,53,53,53,53,53,53,,,53,,,,,,',
'53,,,53,53,,53,53,53,53,53,53,53,53,53,,53,53,,53,53,53,451,,,,,,,,',
',,,,,,,451,451,,53,,,53,,,53,,,,,53,451,,451,53,451,451,451,451,,,451',
'53,451,,,,53,53,53,53,53,53,,,,53,53,,,,,,,53,,,53,,,53,54,54,54,,54',
',,,54,54,,,,54,,54,54,54,54,54,54,54,,,,,,54,54,54,54,54,54,54,,,54',
',,,,,,54,,,54,54,,54,54,54,54,54,54,54,54,54,,54,54,,54,54,54,453,453',
'453,453,453,453,453,,,453,453,,,,,,453,453,,54,,,54,,,54,,,,,,453,,453',
'54,453,453,453,453,453,453,453,54,453,,,,54,54,54,54,54,54,,,,54,54',
',,,,,,54,,,54,,,54,467,467,467,,467,,,,467,467,,,,467,,467,467,467,467',
'467,467,467,,,,,,467,467,467,467,467,467,467,,,467,,,,,,,467,,,467,467',
',467,467,467,467,467,467,467,467,467,,467,467,,467,467,467,438,438,438',
'438,438,438,438,438,438,438,438,,438,438,,,438,438,,467,,,467,,,467',
',,,,,438,467,438,467,438,438,438,438,438,438,438,467,438,,,,467,467',
'467,467,467,467,,,,467,467,,,,,,,467,,,467,,,467,469,469,469,,469,,',
',469,469,,,,469,,469,469,469,469,469,469,469,,,,,,469,469,469,469,469',
'469,469,,,469,,,,,,,469,,,469,469,,469,469,469,469,469,,469,469,469',
',469,469,,469,469,469,452,,,,,,,,,,,,,,,,452,452,,469,,,469,,,469,,',
',,,452,,452,469,452,452,452,452,,,452,469,452,,,,469,469,469,469,469',
'469,,,,469,469,,,,,,,469,,,469,,,469,57,57,57,,57,,,,57,57,,,,57,,57',
'57,57,57,57,57,57,,,,,,57,57,57,57,57,57,57,,,57,,,,,,,57,,,57,57,,57',
'57,57,57,57,,57,57,57,,57,57,,57,57,57,437,437,437,437,437,437,437,437',
'437,437,437,,437,437,,,437,437,,57,,,57,,,57,,,,,,437,,437,57,437,437',
'437,437,437,437,437,57,437,,,,57,57,57,57,57,57,,,,57,57,,,,,,,57,,',
'57,,,57,58,58,58,,58,,,,58,58,,,,58,,58,58,58,58,58,58,58,,,,,,58,58',
'58,58,58,58,58,,,58,,,,,,,58,,,58,58,,58,58,58,58,58,,58,58,58,445,58',
'58,,58,58,58,,,,,,,,,,445,445,,,,,,,,,58,,,58,,445,58,445,,445,445,445',
'445,,,58,,,,,,,,58,,,,,58,58,58,58,58,58,,,,58,58,,,,,,,58,,,58,,,58',
'61,61,61,,61,,,,61,61,,,,61,,61,61,61,61,61,61,61,,,,,,61,61,61,61,61',
'61,61,,,61,,,,,,,61,,,61,61,,61,61,61,61,61,,61,61,61,446,61,61,,61',
'61,61,,,,,,,,,,446,446,,,,,,,,,61,,,61,,446,61,446,,446,446,446,446',
',,61,,,,,,,,61,,,,,61,61,61,61,61,61,,,,61,61,61,,,,,61,61,,,61,,,61',
'62,62,62,,62,,,,62,62,,,,62,,62,62,62,62,62,62,62,,,,,,62,62,62,62,62',
'62,62,,,62,,,,,,,62,,,62,62,,62,62,62,62,62,,62,62,62,,62,62,,,,62,',
',,,,,,,,,,,,,,,,,,62,,,62,,,62,,,,,62,,,,,,,,,,,,,,,,,62,62,62,62,62',
'62,,,,62,62,,,,,,,62,,,62,,,62,485,485,485,,485,,,,485,485,,,,485,,485',
'485,485,485,485,485,485,,,,,,485,485,485,485,485,485,485,,,485,,,,,',
',485,,,485,485,,485,485,485,485,485,,485,485,485,,485,485,,485,485,485',
',,,,,,,,,,,,,,,,,,,485,,,485,,485,485,,,,,,,485,,485,,,,,,,,485,,,,',
'485,485,485,485,485,485,,,,485,485,,,,,,,485,,,485,,,485,491,491,491',
'491,491,,,,491,491,,,,491,,491,491,491,491,491,491,491,,,,,,491,491',
'491,491,491,491,491,,,491,,,,,,491,491,,491,491,491,,491,491,491,491',
'491,,491,491,491,,491,491,,491,491,491,,,,,,,,,,,,,,,,,,,,491,,,491',
',,491,,,,,491,,,,491,,,,,,,,491,,,,,491,491,491,491,491,491,,,,491,491',
',,,,,491,491,,,491,,,491,553,553,553,553,553,,,,553,553,,,,553,,553',
'553,553,553,553,553,553,,,,,,553,553,553,553,553,553,553,,,553,,,,,',
'553,553,,553,553,553,,553,553,553,553,553,,553,553,553,,553,553,,553',
'553,553,,,,,,,,,,,,,,,,,,,,553,,,553,,,553,,,,,553,,,,553,,,,,,,,553',
',,,,553,553,553,553,553,553,,,,553,553,,,,,,,553,,,553,,,553,784,784',
'784,784,784,,,,784,784,,,,784,,784,784,784,784,784,784,784,,,,,,784',
'784,784,784,784,784,784,,,784,,,,,,784,784,,784,784,784,,784,784,784',
'784,784,,784,784,784,,784,784,,784,784,784,,,,,,,,,,,,,,,,,,,,784,,',
'784,,,784,,,,,784,,,,784,,,,,,,,784,,,,,784,784,784,784,784,784,,,,784',
'784,,,,,,,784,,,784,,,784,763,763,763,763,763,,,,763,763,,,,763,,763',
'763,763,763,763,763,763,,,,,,763,763,763,763,763,763,763,,,763,,,,,',
'763,763,,763,763,763,,763,763,763,763,763,,763,763,763,,763,763,,763',
'763,763,,,,,,,,,,,,,,,,,,,,763,,,763,,,763,,,,,763,,,,763,,,,,,,,763',
',,,,763,763,763,763,763,763,,,,763,763,,,,,,,763,,,763,,,763,353,353',
'353,,353,,,,353,353,,,,353,,353,353,353,353,353,353,353,,,,,,353,353',
'353,353,353,353,353,,,353,,,,,,,353,,,353,353,,353,353,353,353,353,',
'353,353,353,,353,353,,,,353,,,,,,,,,,,,,,,,,,,,353,,,353,,,353,,,,,',
',,,,,,,,,,,,,,,,353,353,353,353,353,353,,,,353,353,,,,,,,353,,,353,',
',353,83,83,83,,83,,,,83,83,,,,83,,83,83,83,83,83,83,83,,83,,,,83,83',
'83,83,83,83,83,,,83,,,,,,,83,,,83,83,,83,83,83,83,83,83,83,83,83,,83',
'83,,83,83,83,,,,,,,,,,,,,,,,,,,,83,,,83,83,,83,,,,,83,,83,,83,,,,,,',
',83,,83,,,83,83,83,83,83,83,,,,83,83,,,,,,,83,,,83,,,83,86,86,86,,86',
',,,86,86,,,,86,,86,86,86,86,86,86,86,,86,,,,86,86,86,86,86,86,86,,,86',
',,,,,,86,,,86,86,,86,86,86,86,86,86,86,86,86,,86,86,,86,86,86,,,,,,',
',,,,,,,,,,,,,86,,,86,86,,86,,,,,86,,86,,86,,,,,,,,86,,86,,,86,86,86',
'86,86,86,,,,86,86,,,,,,,86,,,86,,,86,753,753,753,,753,,,,753,753,,,',
'753,,753,753,753,753,753,753,753,,,,,,753,753,753,753,753,753,753,,',
'753,,,,,,,753,,,753,753,,753,753,753,753,753,,753,753,753,,753,753,',
'753,753,753,,,,,,,,,,,,,,,,,,,,753,,,753,,,753,,,,,753,,,,753,,,,,,',
',753,,,,,753,753,753,753,753,753,,,,753,753,,,,,,,753,,,753,,,753,98',
'98,98,98,98,,,,98,98,,,,98,,98,98,98,98,98,98,98,,,,,,98,98,98,98,98',
'98,98,,,98,,,,,,98,98,98,98,98,98,,98,98,98,98,98,,98,98,98,,98,98,',
'98,98,98,,,,,,,,,,,,,,,,,,,,98,,,98,,,98,,,,,98,,,,98,,,,,,,,98,,,,',
'98,98,98,98,98,98,,,,98,98,,,,,,98,98,,,98,,,98,102,102,102,,102,,,',
'102,102,,,,102,,102,102,102,102,102,102,102,,,,,,102,102,102,102,102',
'102,102,,,102,,,,,,,102,,,102,102,,102,102,102,102,102,,102,102,102',
',102,102,,102,102,102,,,,,,,,,,,,,,,,,,,,102,,,102,,,102,,,,,,,,,102',
',,,,,,,102,,,,,102,102,102,102,102,102,,,,102,102,,,,,,,102,,,102,,',
'102,103,103,103,,103,,,,103,103,,,,103,,103,103,103,103,103,103,103',
',,,,,103,103,103,103,103,103,103,,,103,,,,,,,103,,,103,103,,103,103',
'103,103,103,,103,103,103,,103,103,,103,103,103,,,,,,,,,,,,,,,,,,,,103',
',,103,,,103,,,,,,,,,103,,,,,,,,103,,,,,103,103,103,103,103,103,,,,103',
'103,,,,,,,103,,,103,,,103,104,104,104,,104,,,,104,104,,,,104,,104,104',
'104,104,104,104,104,,,,,,104,104,104,104,104,104,104,,,104,,,,,,,104',
',,104,104,,104,104,104,104,104,,104,104,104,,104,104,,104,104,104,,',
',,,,,,,,,,,,,,,,,104,,,104,,,104,,,,,,,,,104,,,,,,,,104,,,,,104,104',
'104,104,104,104,,,,104,104,,,,,,,104,,,104,,,104,105,105,105,,105,,',
',105,105,,,,105,,105,105,105,105,105,105,105,,,,,,105,105,105,105,105',
'105,105,,,105,,,,,,,105,,,105,105,,105,105,105,105,105,,105,105,105',
',105,105,,105,105,105,,,,,,,,,,,,,,,,,,,,105,,,105,,,105,,,,,,,,,105',
',,,,,,,105,,,,,105,105,105,105,105,105,,,,105,105,,,,,,,105,,,105,,',
'105,106,106,106,106,106,,,,106,106,,,,106,,106,106,106,106,106,106,106',
',,,,,106,106,106,106,106,106,106,,,106,,,,,,106,106,,106,106,106,,106',
'106,106,106,106,,106,106,106,,106,106,,106,106,106,,,,,,,,,,,,,,,,,',
',,106,,,106,,,106,,,,,106,,,,106,,,,,,,,106,,,,,106,106,106,106,106',
'106,,,,106,106,,,,,,,106,,,106,,,106,107,107,107,107,107,,,,107,107',
',,,107,,107,107,107,107,107,107,107,,,,,,107,107,107,107,107,107,107',
',,107,,,,,,107,107,107,107,107,107,,107,107,107,107,107,,107,107,107',
',107,107,,107,107,107,,,,,,,,,,,,,,,,,,,,107,,,107,,,107,,,,,107,,,',
'107,,,,,,,,107,,,,,107,107,107,107,107,107,,,,107,107,,,,,,,107,,,107',
',,107,738,738,738,,738,,,,738,738,,,,738,,738,738,738,738,738,738,738',
',,,,,738,738,738,738,738,738,738,,,738,,,,,,,738,,,738,738,,738,738',
'738,738,738,,738,738,738,,738,738,,738,738,738,,,,,,,,,,,,,,,,,,,,738',
',,738,,,738,,,,,,,,,738,,,,,,,,738,,,,,738,738,738,738,738,738,,,,738',
'738,,,,,,,738,,,738,,,738,351,351,351,,351,,,,351,351,,,,351,,351,351',
'351,351,351,351,351,,,,,,351,351,351,351,351,351,351,,,351,,,,,,,351',
',,351,351,,351,351,351,351,351,,351,351,351,,351,351,,,,351,,,,,,,,',
',,,,,,,,,,,351,,,351,,,351,,,,,,,,,,,,,,,,,,,,,,351,351,351,351,351',
'351,,,,351,351,,,,,,,351,,,351,,,351,737,737,737,,737,,,,737,737,,,',
'737,,737,737,737,737,737,737,737,,,,,,737,737,737,737,737,737,737,,',
'737,,,,,,,737,,,737,737,,737,737,737,737,737,,737,737,737,,737,737,',
'737,737,737,,,,,,,,,,,,,,,,,,,,737,,,737,,,737,,,,,,,,,737,,,,,,,,737',
',,,,737,737,737,737,737,737,,,,737,737,,,,,,,737,,,737,,,737,194,194',
'194,194,194,,,,194,194,,,,194,,194,194,194,194,194,194,194,,,,,,194',
'194,194,194,194,194,194,,,194,,,,,,194,194,,194,194,194,,194,194,194',
'194,194,,194,194,194,,194,194,,194,194,194,,,,,,,,,,,,,,,,,,,,194,,',
'194,,,194,,,,,194,,,,194,,,,,,,,194,,,,,194,194,194,194,194,194,,,,194',
'194,,,,,,,194,,,194,,,194,195,195,195,,195,,,,195,195,,,,195,,195,195',
'195,195,195,195,195,,,,,,195,195,195,195,195,195,195,,,195,,,,,,,195',
',,195,195,,195,195,195,195,195,,195,195,195,,195,195,,195,195,195,,',
',,,,,,,,,,,,,,,,,195,,,195,,,195,,,,,195,,,,195,,,,,,,,195,,,,,195,195',
'195,195,195,195,,,,195,195,,,,,,,195,,,195,,,195,196,196,196,,196,,',
',196,196,,,,196,,196,196,196,196,196,196,196,,,,,,196,196,196,196,196',
'196,196,,,196,,,,,,,196,,,196,196,,196,196,196,196,196,,196,196,196',
',196,196,,196,196,196,,,,,,,,,,,,,,,,,,,,196,,,196,,,196,,,,,196,,,',
'196,,,,,,,,196,,,,,196,196,196,196,196,196,,,,196,196,,,,,,,196,,,196',
',,196,197,197,197,,197,,,,197,197,,,,197,,197,197,197,197,197,197,197',
',,,,,197,197,197,197,197,197,197,,,197,,,,,,,197,,,197,197,,197,197',
'197,197,197,,197,197,197,,197,197,,197,197,197,,,,,,,,,,,,,,,,,,,,197',
',,197,,,197,,,,,,,,,197,,,,,,,,197,,,,,197,197,197,197,197,197,,,,197',
'197,,,,,,,197,,,197,,,197,198,198,198,,198,,,,198,198,,,,198,,198,198',
'198,198,198,198,198,,,,,,198,198,198,198,198,198,198,,,198,,,,,,,198',
',,198,198,,198,198,198,198,198,198,198,198,198,,198,198,,198,198,198',
',,,,,,,,,,,,,,,,,,,198,,,198,,,198,,,,,198,,,,198,,,,,,,,198,,,,,198',
'198,198,198,198,198,,,,198,198,,,,,,,198,,,198,,,198,736,736,736,,736',
',,,736,736,,,,736,,736,736,736,736,736,736,736,,,,,,736,736,736,736',
'736,736,736,,,736,,,,,,,736,,,736,736,,736,736,736,736,736,,736,736',
'736,,736,736,,736,736,736,,,,,,,,,,,,,,,,,,,,736,,,736,,,736,,,,,,,',
',736,,,,,,,,736,,,,,736,736,736,736,736,736,,,,736,736,,,,,,,736,,,736',
',,736,726,726,726,,726,,,,726,726,,,,726,,726,726,726,726,726,726,726',
',,,,,726,726,726,726,726,726,726,,,726,,,,,,,726,,,726,726,,726,726',
'726,726,726,,726,726,726,,726,726,,726,726,726,,,,,,,,,,,,,,,,,,,,726',
',,726,,,726,,,,,,,,,726,,,,,,,,726,,,,,726,726,726,726,726,726,,,,726',
'726,,,,,,,726,,,726,,,726,201,201,201,,201,,,,201,201,,,,201,,201,201',
'201,201,201,201,201,,,,,,201,201,201,201,201,201,201,,,201,,,,,,,201',
',,201,201,,201,201,201,201,201,,201,201,201,,201,201,,201,201,201,,',
',,,,,,,,,,,,,,,,,201,,,201,,,201,,,,,,,,,201,,,,,,,,201,,,,,201,201',
'201,201,201,201,,,,201,201,,,,,,,201,,,201,,,201,202,202,202,,202,,',
',202,202,,,,202,,202,202,202,202,202,202,202,,,,,,202,202,202,202,202',
'202,202,,,202,,,,,,,202,,,202,202,,202,202,202,202,202,,202,202,202',
',202,202,,202,202,202,,,,,,,,,,,,,,,,,,,,202,,,202,,,202,,,,,,,,,202',
',,,,,,,202,,,,,202,202,202,202,202,202,,,,202,202,,,,,,,202,,,202,,',
'202,203,203,203,,203,,,,203,203,,,,203,,203,203,203,203,203,203,203',
',,,,,203,203,203,203,203,203,203,,,203,,,,,,,203,,,203,203,,203,203',
'203,203,203,,203,203,203,,203,203,,203,203,203,,,,,,,,,,,,,,,,,,,,203',
',,203,,,203,,,,,,,,,203,,,,,,,,203,,,,,203,203,203,203,203,203,,,,203',
'203,,,,,,,203,,,203,,,203,725,725,725,,725,,,,725,725,,,,725,,725,725',
'725,725,725,725,725,,,,,,725,725,725,725,725,725,725,,,725,,,,,,,725',
',,725,725,,725,725,725,725,725,,725,725,725,,725,725,,725,725,725,,',
',,,,,,,,,,,,,,,,,725,,,725,,,725,,,,,,,,,725,,,,,,,,725,,,,,725,725',
'725,725,725,725,,,,725,725,,,,,,,725,,,725,,,725,719,719,719,719,719',
',,,719,719,,,,719,,719,719,719,719,719,719,719,,,,,,719,719,719,719',
'719,719,719,,,719,,,,,,719,719,,719,719,719,,719,719,719,719,719,,719',
'719,719,,719,719,,719,719,719,,,,,,,,,,,,,,,,,,,,719,,,719,,,719,,,',
',719,,,,719,,,,,,,,719,,,,,719,719,719,719,719,719,,,,719,719,,,,,,',
'719,,,719,,,719,497,497,497,,497,,,,497,497,,,,497,,497,497,497,497',
'497,497,497,,,,,,497,497,497,497,497,497,497,,,497,,,,,,,497,,,497,497',
',497,497,497,497,497,,497,497,497,,497,497,,,,497,,,,,,,,,,,,,,,,,,',
',497,,,497,,,497,,,,,,,,,,,,,,,,,,,,,,497,497,497,497,497,497,,,,497',
'497,,,,,,,497,,,497,,,497,707,707,707,707,707,,,,707,707,,,,707,,707',
'707,707,707,707,707,707,,,,,,707,707,707,707,707,707,707,,,707,,,,,',
'707,707,,707,707,707,,707,707,707,707,707,,707,707,707,,707,707,,707',
'707,707,,,,,,,,,,,,,,,,,,,,707,,,707,,,707,,,,,707,,,,707,,,,,,,,707',
',,,,707,707,707,707,707,707,,,,707,707,,,,,,,707,,,707,,,707,706,706',
'706,706,706,,,,706,706,,,,706,,706,706,706,706,706,706,706,,,,,,706',
'706,706,706,706,706,706,,,706,,,,,,706,706,,706,706,706,,706,706,706',
'706,706,,706,706,706,,706,706,,706,706,706,,,,,,,,,,,,,,,,,,,,706,,',
'706,,,706,,,,,706,,,,706,,,,,,,,706,,,,,706,706,706,706,706,706,,,,706',
'706,,,,,,,706,,,706,,,706,499,499,499,,499,,,,499,499,,,,499,,499,499',
'499,499,499,499,499,,,,,,499,499,499,499,499,499,499,,,499,,,,,,,499',
',,499,499,,499,499,499,499,499,499,499,499,499,,499,499,,499,499,499',
',,,,,,,,,,,,,,,,,,,499,,,499,,,499,,,,,499,,,,499,,,,,,,,499,,,,,499',
'499,499,499,499,499,,,,499,499,,,,,,,499,,,499,,,499,211,211,211,211',
'211,,,,211,211,,,,211,,211,211,211,211,211,211,211,,,,,,211,211,211',
'211,211,211,211,,,211,,,,,,211,211,,211,211,211,,211,211,211,211,211',
',211,211,211,,211,211,,211,211,211,,,,,,,,,,,,,,,,,,,,211,,,211,,,211',
',,,,211,,,,211,,,,,,,,211,,,,,211,211,211,211,211,211,,,,211,211,,,',
',,,211,,,211,,,211,212,212,212,,212,,,,212,212,,,,212,,212,212,212,212',
'212,212,212,,,,,,212,212,212,212,212,212,212,,,212,,,,,,,212,,,212,212',
',212,212,212,212,212,,212,212,212,,212,212,,212,212,212,,,,,,,,,,,,',
',,,,,,,212,,,212,,212,212,,,,,,,,,212,,,,,,,,212,,,,,212,212,212,212',
'212,212,,,,212,212,,,,,,,212,,,212,,,212,215,215,215,,215,,,,215,215',
',,,215,,215,215,215,215,215,215,215,,,,,,215,215,215,215,215,215,215',
',,215,,,,,,,215,,,215,215,,215,215,215,215,215,,215,215,215,,215,215',
',215,215,215,,,,,,,,,,,,,,,,,,,,215,,,215,,,215,,,,,,,,,215,,,,,,,,215',
',,,,215,215,215,215,215,215,,,,215,215,,,,,,,215,,,215,,,215,703,703',
'703,,703,,,,703,703,,,,703,,703,703,703,703,703,703,703,,,,,,703,703',
'703,703,703,703,703,,,703,,,,,,,703,,,703,703,,703,703,703,703,703,',
'703,703,703,,703,703,,703,703,703,,,,,,,,,,,,,,,,,,,,703,,,703,,,703',
',,,,,,,,703,,,,,,,,703,,,,,703,703,703,703,703,703,,,,703,703,,,,,,',
'703,,,703,,,703,217,217,217,,217,,,,217,217,,,,217,,217,217,217,217',
'217,217,217,,,,,,217,217,217,217,217,217,217,,,217,,,,,,,217,,,217,217',
',217,217,217,217,217,,217,217,217,,217,217,,217,217,217,,,,,,,,,,,,',
',,,,,,,217,,,217,,,217,,,,,,,,,217,,,,,,,,217,,,,,217,217,217,217,217',
'217,,,,217,217,,,,,,,217,,,217,,,217,218,218,218,,218,,,,218,218,,,',
'218,,218,218,218,218,218,218,218,,,,,,218,218,218,218,218,218,218,,',
'218,,,,,,,218,,,218,218,,218,218,218,218,218,,218,218,218,,218,218,',
'218,218,218,,,,,,,,,,,,,,,,,,,,218,,,218,,,218,,,,,,,,,218,,,,,,,,218',
',,,,218,218,218,218,218,218,,,,218,218,,,,,,,218,,,218,,,218,219,219',
'219,,219,,,,219,219,,,,219,,219,219,219,219,219,219,219,,,,,,219,219',
'219,219,219,219,219,,,219,,,,,,,219,,,219,219,,219,219,219,219,219,',
'219,219,219,,219,219,,219,219,219,,,,,,,,,,,,,,,,,,,,219,,,219,,,219',
',,,,,,,,219,,,,,,,,219,,,,,219,219,219,219,219,219,,,,219,219,,,,,,',
'219,,,219,,,219,220,220,220,,220,,,,220,220,,,,220,,220,220,220,220',
'220,220,220,,,,,,220,220,220,220,220,220,220,,,220,,,,,,,220,,,220,220',
',220,220,220,220,220,,220,220,220,,220,220,,220,220,220,,,,,,,,,,,,',
',,,,,,,220,,,220,,,220,,,,,,,,,220,,,,,,,,220,,,,,220,220,220,220,220',
'220,,,,220,220,,,,,,,220,,,220,,,220,221,221,221,,221,,,,221,221,,,',
'221,,221,221,221,221,221,221,221,,,,,,221,221,221,221,221,221,221,,',
'221,,,,,,,221,,,221,221,,221,221,221,221,221,,221,221,221,,221,221,',
'221,221,221,,,,,,,,,,,,,,,,,,,,221,,,221,,,221,,,,,,,,,221,,,,,,,,221',
',,,,221,221,221,221,221,221,,,,221,221,,,,,,,221,,,221,,,221,222,222',
'222,,222,,,,222,222,,,,222,,222,222,222,222,222,222,222,,,,,,222,222',
'222,222,222,222,222,,,222,,,,,,,222,,,222,222,,222,222,222,222,222,',
'222,222,222,,222,222,,222,222,222,,,,,,,,,,,,,,,,,,,,222,,,222,,,222',
',,,,,,,,222,,,,,,,,222,,,,,222,222,222,222,222,222,,,,222,222,,,,,,',
'222,,,222,,,222,223,223,223,,223,,,,223,223,,,,223,,223,223,223,223',
'223,223,223,,,,,,223,223,223,223,223,223,223,,,223,,,,,,,223,,,223,223',
',223,223,223,223,223,,223,223,223,,223,223,,223,223,223,,,,,,,,,,,,',
',,,,,,,223,,,223,,,223,,,,,,,,,223,,,,,,,,223,,,,,223,223,223,223,223',
'223,,,,223,223,,,,,,,223,,,223,,,223,224,224,224,,224,,,,224,224,,,',
'224,,224,224,224,224,224,224,224,,,,,,224,224,224,224,224,224,224,,',
'224,,,,,,,224,,,224,224,,224,224,224,224,224,,224,224,224,,224,224,',
'224,224,224,,,,,,,,,,,,,,,,,,,,224,,,224,,,224,,,,,,,,,224,,,,,,,,224',
',,,,224,224,224,224,224,224,,,,224,224,,,,,,,224,,,224,,,224,225,225',
'225,,225,,,,225,225,,,,225,,225,225,225,225,225,225,225,,,,,,225,225',
'225,225,225,225,225,,,225,,,,,,,225,,,225,225,,225,225,225,225,225,',
'225,225,225,,225,225,,225,225,225,,,,,,,,,,,,,,,,,,,,225,,,225,,,225',
',,,,,,,,225,,,,,,,,225,,,,,225,225,225,225,225,225,,,,225,225,,,,,,',
'225,,,225,,,225,226,226,226,,226,,,,226,226,,,,226,,226,226,226,226',
'226,226,226,,,,,,226,226,226,226,226,226,226,,,226,,,,,,,226,,,226,226',
',226,226,226,226,226,,226,226,226,,226,226,,226,226,226,,,,,,,,,,,,',
',,,,,,,226,,,226,,,226,,,,,,,,,226,,,,,,,,226,,,,,226,226,226,226,226',
'226,,,,226,226,,,,,,,226,,,226,,,226,227,227,227,,227,,,,227,227,,,',
'227,,227,227,227,227,227,227,227,,,,,,227,227,227,227,227,227,227,,',
'227,,,,,,,227,,,227,227,,227,227,227,227,227,,227,227,227,,227,227,',
'227,227,227,,,,,,,,,,,,,,,,,,,,227,,,227,,,227,,,,,,,,,227,,,,,,,,227',
',,,,227,227,227,227,227,227,,,,227,227,,,,,,,227,,,227,,,227,228,228',
'228,,228,,,,228,228,,,,228,,228,228,228,228,228,228,228,,,,,,228,228',
'228,228,228,228,228,,,228,,,,,,,228,,,228,228,,228,228,228,228,228,',
'228,228,228,,228,228,,228,228,228,,,,,,,,,,,,,,,,,,,,228,,,228,,,228',
',,,,,,,,228,,,,,,,,228,,,,,228,228,228,228,228,228,,,,228,228,,,,,,',
'228,,,228,,,228,229,229,229,,229,,,,229,229,,,,229,,229,229,229,229',
'229,229,229,,,,,,229,229,229,229,229,229,229,,,229,,,,,,,229,,,229,229',
',229,229,229,229,229,,229,229,229,,229,229,,229,229,229,,,,,,,,,,,,',
',,,,,,,229,,,229,,,229,,,,,,,,,229,,,,,,,,229,,,,,229,229,229,229,229',
'229,,,,229,229,,,,,,,229,,,229,,,229,230,230,230,,230,,,,230,230,,,',
'230,,230,230,230,230,230,230,230,,,,,,230,230,230,230,230,230,230,,',
'230,,,,,,,230,,,230,230,,230,230,230,230,230,,230,230,230,,230,230,',
'230,230,230,,,,,,,,,,,,,,,,,,,,230,,,230,,,230,,,,,,,,,230,,,,,,,,230',
',,,,230,230,230,230,230,230,,,,230,230,,,,,,,230,,,230,,,230,231,231',
'231,,231,,,,231,231,,,,231,,231,231,231,231,231,231,231,,,,,,231,231',
'231,231,231,231,231,,,231,,,,,,,231,,,231,231,,231,231,231,231,231,',
'231,231,231,,231,231,,231,231,231,,,,,,,,,,,,,,,,,,,,231,,,231,,,231',
',,,,,,,,231,,,,,,,,231,,,,,231,231,231,231,231,231,,,,231,231,,,,,,',
'231,,,231,,,231,232,232,232,,232,,,,232,232,,,,232,,232,232,232,232',
'232,232,232,,,,,,232,232,232,232,232,232,232,,,232,,,,,,,232,,,232,232',
',232,232,232,232,232,,232,232,232,,232,232,,232,232,232,,,,,,,,,,,,',
',,,,,,,232,,,232,,,232,,,,,,,,,232,,,,,,,,232,,,,,232,232,232,232,232',
'232,,,,232,232,,,,,,,232,,,232,,,232,233,233,233,,233,,,,233,233,,,',
'233,,233,233,233,233,233,233,233,,,,,,233,233,233,233,233,233,233,,',
'233,,,,,,,233,,,233,233,,233,233,233,233,233,,233,233,233,,233,233,',
'233,233,233,,,,,,,,,,,,,,,,,,,,233,,,233,,,233,,,,,,,,,233,,,,,,,,233',
',,,,233,233,233,233,233,233,,,,233,233,,,,,,,233,,,233,,,233,234,234',
'234,,234,,,,234,234,,,,234,,234,234,234,234,234,234,234,,,,,,234,234',
'234,234,234,234,234,,,234,,,,,,,234,,,234,234,,234,234,234,234,234,',
'234,234,234,,234,234,,234,234,234,,,,,,,,,,,,,,,,,,,,234,,,234,,,234',
',,,,,,,,234,,,,,,,,234,,,,,234,234,234,234,234,234,,,,234,234,,,,,,',
'234,,,234,,,234,235,235,235,,235,,,,235,235,,,,235,,235,235,235,235',
'235,235,235,,,,,,235,235,235,235,235,235,235,,,235,,,,,,,235,,,235,235',
',235,235,235,235,235,,235,235,235,,235,235,,235,235,235,,,,,,,,,,,,',
',,,,,,,235,,,235,,,235,,,,,,,,,235,,,,,,,,235,,,,,235,235,235,235,235',
'235,,,,235,235,,,,,,,235,,,235,,,235,236,236,236,,236,,,,236,236,,,',
'236,,236,236,236,236,236,236,236,,,,,,236,236,236,236,236,236,236,,',
'236,,,,,,,236,,,236,236,,236,236,236,236,236,,236,236,236,,236,236,',
'236,236,236,,,,,,,,,,,,,,,,,,,,236,,,236,,,236,,,,,,,,,236,,,,,,,,236',
',,,,236,236,236,236,236,236,,,,236,236,,,,,,,236,,,236,,,236,237,237',
'237,,237,,,,237,237,,,,237,,237,237,237,237,237,237,237,,,,,,237,237',
'237,237,237,237,237,,,237,,,,,,,237,,,237,237,,237,237,237,237,237,',
'237,237,237,,237,237,,237,237,237,,,,,,,,,,,,,,,,,,,,237,,,237,,,237',
',,,,,,,,237,,,,,,,,237,,,,,237,237,237,237,237,237,,,,237,237,,,,,,',
'237,,,237,,,237,238,238,238,,238,,,,238,238,,,,238,,238,238,238,238',
'238,238,238,,,,,,238,238,238,238,238,238,238,,,238,,,,,,,238,,,238,238',
',238,238,238,238,238,,238,238,238,,238,238,,238,238,238,,,,,,,,,,,,',
',,,,,,,238,,,238,,,238,,,,,,,,,238,,,,,,,,238,,,,,238,238,238,238,238',
'238,,,,238,238,,,,,,,238,,,238,,,238,239,239,239,,239,,,,239,239,,,',
'239,,239,239,239,239,239,239,239,,,,,,239,239,239,239,239,239,239,,',
'239,,,,,,,239,,,239,239,,239,239,239,239,239,,239,239,239,,239,239,',
'239,239,239,,,,,,,,,,,,,,,,,,,,239,,,239,,,239,,,,,,,,,239,,,,,,,,239',
',,,,239,239,239,239,239,239,,,,239,239,,,,,,,239,,,239,,,239,240,240',
'240,,240,,,,240,240,,,,240,,240,240,240,240,240,240,240,,,,,,240,240',
'240,240,240,240,240,,,240,,,,,,,240,,,240,240,,240,240,240,240,240,',
'240,240,240,,240,240,,240,240,240,,,,,,,,,,,,,,,,,,,,240,,,240,,,240',
',,,,,,,,240,,,,,,,,240,,,,,240,240,240,240,240,240,,,,240,240,,,,,,',
'240,,,240,,,240,241,241,241,,241,,,,241,241,,,,241,,241,241,241,241',
'241,241,241,,,,,,241,241,241,241,241,241,241,,,241,,,,,,,241,,,241,241',
',241,241,241,241,241,,241,241,241,,241,241,,241,241,241,,,,,,,,,,,,',
',,,,,,,241,,,241,,,241,,,,,,,,,241,,,,,,,,241,,,,,241,241,241,241,241',
'241,,,,241,241,,,,,,,241,,,241,,,241,242,242,242,,242,,,,242,242,,,',
'242,,242,242,242,242,242,242,242,,,,,,242,242,242,242,242,242,242,,',
'242,,,,,,,242,,,242,242,,242,242,242,242,242,,242,242,242,,242,242,',
'242,242,242,,,,,,,,,,,,,,,,,,,,242,,,242,,,242,,,,,,,,,242,,,,,,,,242',
',,,,242,242,242,242,242,242,,,,242,242,,,,,,,242,,,242,,,242,699,699',
'699,,699,,,,699,699,,,,699,,699,699,699,699,699,699,699,,,,,,699,699',
'699,699,699,699,699,,,699,,,,,,,699,,,699,699,,699,699,699,699,699,699',
'699,699,699,,699,699,,699,699,699,,,,,,,,,,,,,,,,,,,,699,,,699,,,699',
',,,,699,,,,699,,,,,,,,699,,,,,699,699,699,699,699,699,,,,699,699,,,',
',,,699,,,699,,,699,695,695,695,,695,,,,695,695,,,,695,,695,695,695,695',
'695,695,695,,,,,,695,695,695,695,695,695,695,,,695,,,,,,,695,,,695,695',
',695,695,695,695,695,,695,695,695,,695,695,,695,695,695,,,,,,,,,,,,',
',,,,,,,695,,,695,,,695,,,,,,,,,695,,,,,,,,695,,,,,695,695,695,695,695',
'695,,,,695,695,,,,,,,695,,,695,,,695,694,694,694,,694,,,,694,694,,,',
'694,,694,694,694,694,694,694,694,,,,,,694,694,694,694,694,694,694,,',
'694,,,,,,,694,,,694,694,,694,694,694,694,694,,694,694,694,,694,694,',
'694,694,694,,,,,,,,,,,,,,,,,,,,694,,,694,,,694,,,,,694,,,,694,,,,,,',
',694,,,,,694,694,694,694,694,694,,,,694,694,,,,,,,694,,,694,,,694,251',
'251,251,,251,,,,251,251,,,,251,,251,251,251,251,251,251,251,,,,,,251',
'251,251,251,251,251,251,,,251,,,,,,,251,,,251,251,,251,251,251,251,251',
',251,251,251,,251,251,,251,251,251,,,,,,,,,,,,,,,,,,,,251,,,251,,,251',
',,,,,,,,251,,,,,,,,251,,,,,251,251,251,251,251,251,,,,251,251,,,,,,',
'251,,,251,,,251,663,663,663,,663,,,,663,663,,,,663,,663,663,663,663',
'663,663,663,,,,,,663,663,663,663,663,663,663,,,663,,,,,,,663,,,663,663',
',663,663,663,663,663,,663,663,663,,663,663,,663,663,663,,,,,,,,,,,,',
',,,,,,,663,,,663,,,663,,,,,663,,,,663,,,,,,,,663,,,,,663,663,663,663',
'663,663,,,,663,663,,,,,,,663,,,663,,,663,253,253,253,,253,,,,253,253',
',,,253,,253,253,253,253,253,253,253,,,,,,253,253,253,253,253,253,253',
',,253,,,,,,,253,,,253,253,,253,253,253,253,253,,253,253,253,,253,253',
',253,253,253,,,,,,,,,,,,,,,,,,,,253,,,253,,,253,,,,,,,,,253,,,,,,,,253',
',,,,253,253,253,253,253,253,,,,253,253,,,,,,,253,,,253,,,253,258,258',
'258,,258,,,,258,258,,,,258,,258,258,258,258,258,258,258,,,,,,258,258',
'258,258,258,258,258,,,258,,,,,,,258,,,258,258,,258,258,258,258,258,',
'258,258,258,,258,258,,258,258,258,,,,,,,,,,,,,,,,,,,,258,,,258,,,258',
',,,,,,,,258,,,,,,,,258,,,,,258,258,258,258,258,258,,,,258,258,,,,,,',
'258,,,258,,,258,657,657,657,,657,,,,657,657,,,,657,,657,657,657,657',
'657,657,657,,,,,,657,657,657,657,657,657,657,,,657,,,,,,,657,,,657,657',
',657,657,657,657,657,,657,657,657,,657,657,,,,657,,,,,,,,,,,,,,,,,,',
',657,,,657,,,657,,,,,,,,,,,,,,,,,,,,,,657,657,657,657,657,657,,,,657',
'657,,,,,,,657,,,657,,,657,508,508,508,,508,,,,508,508,,,,508,,508,508',
'508,508,508,508,508,,,,,,508,508,508,508,508,508,508,,,508,,,,,,,508',
',,508,508,,508,508,508,508,508,,508,508,508,,508,508,,508,508,508,,',
',,,,,,,,,,,,,,,,,508,,,508,,,508,,,,,,,,,508,,,,,,,,508,,,,,508,508',
'508,508,508,508,,,,508,508,,,,,,,508,,,508,,,508,509,509,509,,509,,',
',509,509,,,,509,,509,509,509,509,509,509,509,,,,,,509,509,509,509,509',
'509,509,,,509,,,,,,,509,,,509,509,,509,509,509,509,509,,509,509,509',
',509,509,,509,509,509,,,,,,,,,,,,,,,,,,,,509,,,509,,,509,,,,,,,,,509',
',,,,,,,509,,,,,509,509,509,509,509,509,,,,509,509,,,,,,,509,,,509,,',
'509,264,264,264,,264,,,,264,264,,,,264,,264,264,264,264,264,264,264',
',,,,,264,264,264,264,264,264,264,,,264,,,,,,,264,,,264,264,,264,264',
'264,264,264,264,264,264,264,,264,264,,264,264,264,,,,,,,,,,,,,,,,,,',
',264,,,264,,,264,,,,,264,,264,,264,,,,,,,,264,,,,,264,264,264,264,264',
'264,,,,264,264,,,,,,,264,,,264,,,264,265,265,265,,265,,,,265,265,,,',
'265,,265,265,265,265,265,265,265,,,,,,265,265,265,265,265,265,265,,',
'265,,,,,,,265,,,265,265,,265,265,265,265,265,265,265,265,265,,265,265',
',265,265,265,,,,,,,,,,,,,,,,,,,,265,,,265,,,265,,,,,265,,265,,265,,',
',,,,,265,,,,,265,265,265,265,265,265,,,,265,265,,,,,,,265,,,265,,,265',
'273,273,273,,273,,,,273,273,,,,273,,273,273,273,273,273,273,273,,,,',
',273,273,273,273,273,273,273,,,273,,,,,,,273,,,273,273,,273,273,273',
'273,273,273,273,273,273,,273,273,,273,273,273,,,,,,,,,,,,,,,,,,,,273',
',,273,,273,273,,,,,273,,273,,273,,,,,,,,273,,,,,273,273,273,273,273',
'273,,,,273,273,,,,,,,273,,,273,,,273,346,346,346,,346,,,,346,346,,,',
'346,,346,346,346,346,346,346,346,,,,,,346,346,346,346,346,346,346,,',
'346,,,,,,,346,,,346,346,,346,346,346,346,346,,346,346,346,,346,346,',
'346,346,346,,,,,,,,,,,,,,,,,,,,346,,,346,,,346,,,,,,,,,346,,,,,,,,346',
',,,,346,346,346,346,346,346,,,,346,346,,,,,,,346,,,346,,,346,647,647',
'647,,647,,,,647,647,,,,647,,647,647,647,647,647,647,647,,,,,,647,647',
'647,647,647,647,647,,,647,,,,,,,647,,,647,647,,647,647,647,647,647,',
'647,647,647,,647,647,,,,647,,,,,,,,,,,,,,,,,,,,647,,,647,,,647,,,,,',
',,,,,,,,,,,,,,,,647,647,647,647,647,647,,,,647,647,,,,,,,647,,,647,',
',647,643,643,643,643,643,,,,643,643,,,,643,,643,643,643,643,643,643',
'643,,,,,,643,643,643,643,643,643,643,,,643,,,,,,643,643,,643,643,643',
',643,643,643,643,643,,643,643,643,,643,643,,643,643,643,,,,,,,,,,,,',
',,,,,,,643,,,643,,,643,,,,,643,,,,643,,,,,,,,643,,,,,643,643,643,643',
'643,643,,,,643,643,,,,,,,643,,,643,,,643,277,277,277,277,277,,,,277',
'277,,,,277,,277,277,277,277,277,277,277,,,,,,277,277,277,277,277,277',
'277,,,277,,,,,,277,277,,277,277,277,,277,277,277,277,277,,277,277,277',
',277,277,,277,277,277,,,,,,,,,,,,,,,,,,,,277,,,277,,,277,,,,,277,,,',
'277,,,,,,,,277,,,,,277,277,277,277,277,277,,,,277,277,,,,,,,277,,,277',
',,277,642,642,642,642,642,,,,642,642,,,,642,,642,642,642,642,642,642',
'642,,,,,,642,642,642,642,642,642,642,,,642,,,,,,642,642,,642,642,642',
',642,642,642,642,642,,642,642,642,,642,642,,642,642,642,,,,,,,,,,,,',
',,,,,,,642,,,642,,,642,,,,,642,,,,642,,,,,,,,642,,,,,642,642,642,642',
'642,642,,,,642,642,,,,,,,642,,,642,,,642,636,636,636,,636,,,,636,636',
',,,636,,636,636,636,636,636,636,636,,,,,,636,636,636,636,636,636,636',
',,636,,,,,,,636,,,636,636,,636,636,636,636,636,636,636,636,636,,636',
'636,,636,636,636,,,,,,,,,,,,,,,,,,,,636,,,636,,,636,,,,,636,,636,,636',
',,,,,,,636,,,,,636,636,636,636,636,636,,,,636,636,,,,,,,636,,,636,,',
'636,630,630,630,630,630,,,,630,630,,,,630,,630,630,630,630,630,630,630',
',,,,,630,630,630,630,630,630,630,,,630,,,,,,630,630,,630,630,630,,630',
'630,630,630,630,,630,630,630,,630,630,,630,630,630,,,,,,,,,,,,,,,,,',
',,630,,,630,,,630,,,,,630,,,,630,,,,,,,,630,,,,,630,630,630,630,630',
'630,,,,630,630,,,,,,,630,,,630,,,630,281,281,281,,281,,,,281,281,,,',
'281,,281,281,281,281,281,281,281,,,,,,281,281,281,281,281,281,281,,',
'281,,,,,,,281,,,281,281,,281,281,281,281,281,,281,281,281,,281,281,',
',,281,,,,,,,,,,,,,,,,,,,,281,,,281,,,281,,,,,,,,,,,,,,,,,,,,,,281,281',
'281,281,281,281,,,,281,281,,,,281,,,281,,,281,,,281,282,282,282,282',
'282,,,,282,282,,,,282,,282,282,282,282,282,282,282,,,,,,282,282,282',
'282,282,282,282,,,282,,,,,,282,282,,282,282,282,,282,282,282,282,282',
',282,282,282,,282,282,,282,282,282,,,,,,,,,,,,,,,,,,,,282,,,282,,,282',
',,,,282,,,,282,,,,,,,,282,,,,,282,282,282,282,282,282,,,,282,282,,,',
',,,282,,,282,,,282,623,623,623,,623,,,,623,623,,,,623,,623,623,623,623',
'623,623,623,,,,,,623,623,623,623,623,623,623,,,623,,,,,,,623,,,623,623',
',623,623,623,623,623,,623,623,623,,623,623,,623,623,623,,,,,,,,,,,,',
',,,,,,,623,,,623,,,623,,,,,,,,,623,,,,,,,,623,,,,,623,623,623,623,623',
'623,,,,623,623,,,,,,,623,,,623,,,623,619,619,619,619,619,,,,619,619',
',,,619,,619,619,619,619,619,619,619,,,,,,619,619,619,619,619,619,619',
',,619,,,,,,619,619,,619,619,619,,619,619,619,619,619,,619,619,619,,619',
'619,,619,619,619,,,,,,,,,,,,,,,,,,,,619,,,619,,,619,,,,,619,,,,619,',
',,,,,,619,,,,,619,619,619,619,619,619,,,,619,619,,,,,,,619,,,619,,,619',
'615,615,615,,615,,,,615,615,,,,615,,615,615,615,615,615,615,615,,,,',
',615,615,615,615,615,615,615,,,615,,,,,,,615,,,615,615,,615,615,615',
'615,615,,615,615,615,,615,615,,615,615,615,,,,,,,,,,,,,,,,,,,,615,,',
'615,,,615,,,,,,,,,615,,,,,,,,615,,,,,615,615,615,615,615,615,,,,615',
'615,,,,,,,615,,,615,,,615,345,345,345,,345,,,,345,345,,,,345,,345,345',
'345,345,345,345,345,,,,,,345,345,345,345,345,345,345,,,345,,,,,,,345',
',,345,345,,345,345,345,345,345,,345,345,345,,345,345,,345,345,345,,',
',,,,,,,,,,,,,,,,,345,,,345,,,345,,,,,,,,,345,,,,,,,,345,,,,,345,345',
'345,345,345,345,,,,345,345,,,,,,,345,,,345,,,345,510,510,510,,510,,',
',510,510,,,,510,,510,510,510,510,510,510,510,,,,,,510,510,510,510,510',
'510,510,,,510,,,,,,,510,,,510,510,,510,510,510,510,510,,510,510,510',
',510,510,,510,510,510,,,,,,,,,,,,,,,,,,,,510,,,510,,,510,,,,,,,,,510',
',,,,,,,510,,,,,510,510,510,510,510,510,,,,510,510,,,,,,,510,,,510,,',
'510,607,607,607,,607,,,,607,607,,,,607,,607,607,607,607,607,607,607',
',,,,,607,607,607,607,607,607,607,,,607,,,,,,,607,,,607,607,,607,607',
'607,607,607,,607,607,607,,607,607,,607,607,607,,,,,,,,,,,,,,,,,,,,607',
',,607,,,607,,,,,,,,,607,,,,,,,,607,,,,,607,607,607,607,607,607,,,,607',
'607,,,,,,,607,,,607,,,607,604,604,604,,604,,,,604,604,,,,604,,604,604',
'604,604,604,604,604,,,,,,604,604,604,604,604,604,604,,,604,,,,,,,604',
',,604,604,,604,604,604,604,604,,604,604,604,,604,604,,604,604,604,,',
',,,,,,,,,,,,,,,,,604,,,604,,,604,,,,,,,,,604,,,,,,,,604,,,,,604,604',
'604,604,604,604,,,,604,604,,,,,,,604,,,604,,,604,294,294,294,,294,,',
',294,294,,,,294,,294,294,294,294,294,294,294,,,,,,294,294,294,294,294',
'294,294,,,294,,,,,,,294,,,294,294,,294,294,294,294,294,,294,294,294',
',294,294,,,,294,,,,,,,,,,,,,,,,,,,,294,,,294,,,294,,,,,,,,,,,,,,,,,',
',,,,294,294,294,294,294,294,,,,294,294,,,,,,,294,,,294,,,294,599,599',
'599,,599,,,,599,599,,,,599,,599,599,599,599,599,599,599,,,,,,599,599',
'599,599,599,599,599,,,599,,,,,,,599,,,599,599,,599,599,599,599,599,',
'599,599,599,,599,599,,599,599,599,,,,,,,,,,,,,,,,,,,,599,,,599,,,599',
',,,,,,,,599,,,,,,,,599,,,,,599,599,599,599,599,599,,,,599,599,,,,,,',
'599,,,599,,,599,598,598,598,,598,,,,598,598,,,,598,,598,598,598,598',
'598,598,598,,,,,,598,598,598,598,598,598,598,,,598,,,,,,,598,,,598,598',
',598,598,598,598,598,,598,598,598,,598,598,,598,598,598,,,,,,,,,,,,',
',,,,,,,598,,,598,,,598,,,,,,,,,598,,,,,,,,598,,,,,598,598,598,598,598',
'598,,,,598,598,,,,,,,598,,,598,,,598,596,596,596,,596,,,,596,596,,,',
'596,,596,596,596,596,596,596,596,,,,,,596,596,596,596,596,596,596,,',
'596,,,,,,,596,,,596,596,,596,596,596,596,596,,596,596,596,,596,596,',
'596,596,596,,,,,,,,,,,,,,,,,,,,596,,,596,,,596,,,,,596,,,,596,,,,,,',
',596,,,,,596,596,596,596,596,596,,,,596,596,,,,,,,596,,,596,,,596,594',
'594,594,,594,,,,594,594,,,,594,,594,594,594,594,594,594,594,,,,,,594',
'594,594,594,594,594,594,,,594,,,,,,,594,,,594,594,,594,594,594,594,594',
',594,594,594,,594,594,,594,594,594,,,,,,,,,,,,,,,,,,,,594,,,594,,,594',
',,,,,,,,594,,,,,,,,594,,,,,594,594,594,594,594,594,,,,594,594,,,,,,',
'594,,,594,,,594,514,514,514,,514,,,,514,514,,,,514,,514,514,514,514',
'514,514,514,,,,,,514,514,514,514,514,514,514,,,514,,,,,,,514,,,514,514',
',514,514,514,514,514,,514,514,514,,514,514,,514,514,514,,,,,,,,,,,,',
',,,,,,,514,,,514,,,514,,,,,,,,,514,,,,,,,,514,,,,,514,514,514,514,514',
'514,,,,514,514,,,,,,,514,,,514,,,514,303,303,303,,303,,,,303,303,,,',
'303,,303,303,303,303,303,303,303,,,,,,303,303,303,303,303,303,303,,',
'303,,,,,,,303,,,303,303,,303,303,303,303,303,,303,303,303,,303,303,',
'303,303,303,,,,,,,,,,,,,,,,,,,,303,,,303,303,,303,,,,,,,,,303,,,,,,',
',303,,,,,303,303,303,303,303,303,,,,303,303,,,,,,,303,,,303,,,303,305',
'305,305,305,305,,,,305,305,,,,305,,305,305,305,305,305,305,305,,,,,',
'305,305,305,305,305,305,305,,,305,,,,,,305,305,,305,305,305,,305,305',
'305,305,305,,305,305,305,,305,305,,305,305,305,,,,,,,,,,,,,,,,,,,,305',
',,305,,,305,,,,,305,,,,305,,,,,,,,305,,,,,305,305,305,305,305,305,,',
',305,305,,,,,,,305,,,305,,,305,520,520,520,,520,,,,520,520,,,,520,,520',
'520,520,520,520,520,520,,,,,,520,520,520,520,520,520,520,,,520,,,,,',
',520,,,520,520,,520,520,520,520,520,520,520,520,520,,520,520,,520,520',
'520,,,,,,,,,,,,,,,,,,,,520,,,520,,,520,,,,,520,,,,520,,,,,,,,520,,,',
',520,520,520,520,520,520,,,,520,520,,,,,,,520,,,520,,,520,523,523,523',
',523,,,,523,523,,,,523,,523,523,523,523,523,523,523,,,,,,523,523,523',
'523,523,523,523,,,523,,,,,,,523,,,523,523,,523,523,523,523,523,523,523',
'523,523,,523,523,,523,523,523,,,,,,,,,,,,,,,,,,,,523,,,523,,,523,,,',
',,,,,523,,,,,,,,523,,,,,523,523,523,523,523,523,,,,523,523,,,,,,,523',
',,523,,,523,567,567,567,,567,,,,567,567,,,,567,,567,567,567,567,567',
'567,567,,,,,,567,567,567,567,567,567,567,,,567,,,,,,,567,,,567,567,',
'567,567,567,567,567,,567,567,567,,567,567,,567,567,567,,,,,,,,,,,,,',
',,,,,,567,,,567,,,567,,,,,,,,,567,,,,,,,,567,,,,,567,567,567,567,567',
'567,,,,567,567,,,,,,,567,,,567,,,567,528,528,528,528,528,,,,528,528',
',,,528,,528,528,528,528,528,528,528,,,,,,528,528,528,528,528,528,528',
',,528,,,,,,528,528,,528,528,528,,528,528,528,528,528,,528,528,528,,528',
'528,,528,528,528,,,,,,,,,,,,,,,,,,,,528,,,528,,,528,,,,,528,,,,528,',
',,,,,,528,,,,,528,528,528,528,528,528,,,,528,528,,,,,,,528,,,528,,,528',
'529,529,529,529,529,,,,529,529,,,,529,,529,529,529,529,529,529,529,',
',,,,529,529,529,529,529,529,529,,,529,,,,,,529,529,,529,529,529,,529',
'529,529,529,529,,529,529,529,,529,529,,529,529,529,,,,,,,,,,,,,,,,,',
',,529,,,529,,,529,,,,,529,,,,529,,,,,,,,529,,,,,529,529,529,529,529',
'529,,,,529,529,,,,,,,529,,,529,,,529,558,558,558,558,558,,,,558,558',
',,,558,,558,558,558,558,558,558,558,,,,,,558,558,558,558,558,558,558',
',,558,,,,,,558,558,,558,558,558,,558,558,558,558,558,,558,558,558,,558',
'558,,558,558,558,,,,,,,,,,,,,,,,,,,,558,,,558,,,558,,,,,558,,,,558,',
',,,,,,558,,,,,558,558,558,558,558,558,,,,558,558,,,,,,,558,,,558,,,558',
'535,535,535,,535,,,,535,535,,,,535,,535,535,535,535,535,535,535,,,,',
',535,535,535,535,535,535,535,,,535,,,,,,,535,,,535,535,,535,535,535',
'535,535,,535,535,535,,535,535,,,,535,,,,,,,,,,,,,,,,,,,,535,,,535,,',
'535,,,,,,,,,,,,,,,,,,,,,,535,535,535,535,535,535,,,,535,535,,,,,,,535',
',,535,,,535,549,549,549,549,549,,,,549,549,,,,549,,549,549,549,549,549',
'549,549,,,,,,549,549,549,549,549,549,549,,,549,,,,,,549,549,,549,549',
'549,,549,549,549,549,549,,549,549,549,,549,549,,549,549,549,,,,,,,,',
',,,,,,,,,,,549,,,549,,,549,,,,,549,,,,549,,,,,,,,549,,,,,549,549,549',
'549,549,549,,,,549,549,,,,,,,549,,,549,,,549,785,785,785,785,785,,,',
'785,785,,,,785,,785,785,785,785,785,785,785,,,,,,785,785,785,785,785',
'785,785,,,785,,,,,,785,785,,785,785,785,,785,785,785,785,785,,785,785',
'785,,785,785,,785,785,785,,,,,,,,,,,,,,,,,,,,785,,,785,,,785,,,,,785',
',,,785,,,,,,,,785,,,,,785,785,785,785,785,785,,,,785,785,,,,,,,785,',
',785,,,785,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,,,,8,8,8',
'8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,,8,8,,,8,,,,,,,,,8,8,,8,8,8,8,8',
'8,8,,,8,8,,,,8,8,8,8,,,,,,,,,,,,,8,8,,8,8,8,8,8,8,8,8,8,8,8,,,8,8,,',
',,,,,,,8,398,398,398,398,398,398,398,398,398,398,398,398,398,398,398',
'398,398,398,398,398,398,398,398,398,,,,398,398,398,398,398,398,398,398',
'398,398,398,398,398,398,398,398,398,398,398,398,398,,398,398,,,398,',
',,,,,,,398,398,,398,398,398,398,398,398,398,,,398,398,,,,398,398,398',
'398,,,,,,,,,,,,,398,398,,398,398,398,398,398,398,398,398,398,398,398',
',,398,398,,,,,,,,,,398,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7',
'7,,,,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,,7,7,7,,7,,,,,,,,,7,7',
',7,7,7,7,7,7,7,,,7,7,,,,7,7,7,7,,,,,,,,,,,,,7,7,,7,7,7,7,7,7,7,7,7,7',
'7,,,7,7,,,,,,,,,,7,394,394,394,394,394,394,394,394,394,394,394,394,394',
'394,394,394,394,394,394,394,394,394,394,394,,,,394,394,394,394,394,394',
'394,394,394,394,394,394,394,394,394,394,394,394,394,394,394,,394,394',
',,394,,,,,,,,,394,394,,394,394,394,394,394,394,394,,,394,394,,,,394',
'394,394,394,,,,,,,,,,,,,394,394,,394,394,394,394,394,394,394,394,394',
'394,394,,,394,394,,,,,,,,,,394,79,79,79,79,79,79,79,79,79,79,79,79,79',
'79,79,79,79,79,79,79,79,79,79,79,,,,79,79,79,79,79,79,79,79,79,79,79',
'79,79,79,79,79,79,79,79,79,79,,79,79,79,79,79,,79,,,,,,,79,79,,79,79',
'79,79,79,79,79,,,79,79,,,,79,79,79,79,,,,,,,,,,,,,79,79,,79,79,79,79',
'79,79,79,79,79,79,79,,,79,191,191,191,191,191,191,191,191,191,191,191',
'191,191,191,191,191,191,191,191,191,191,191,191,191,,,,191,191,191,191',
'191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191',
',191,191,191,191,191,,191,,,,,,,191,191,,191,191,191,191,191,191,191',
',,191,191,,,,191,191,191,191,,,,,,,,,,,,,191,191,,191,191,191,191,191',
'191,191,191,191,191,191,,,191,716,716,716,716,716,716,716,716,716,716',
'716,716,716,716,716,716,716,716,716,716,716,716,716,716,,,,716,716,716',
'716,716,716,716,716,716,716,716,716,716,716,716,716,716,716,716,716',
'716,,716,716,,,716,,,,,,,,,716,716,,716,716,716,716,716,716,716,,,716',
'716,,,,716,716,716,716,,,,,,,,,,,,,716,716,,716,716,716,716,716,716',
'716,716,716,716,716,,,716,65,65,65,65,65,65,65,65,65,65,65,65,65,65',
'65,65,65,65,65,65,65,65,65,65,,,,65,65,65,65,65,65,65,65,65,65,65,65',
'65,65,65,65,65,65,65,65,65,,65,65,65,65,65,,65,,,,,,,65,65,,65,65,65',
'65,65,65,65,,,65,65,,,,65,65,65,65,,,,,,65,,,,,,,65,65,,65,65,65,65',
'65,65,65,65,65,65,65,261,261,65,,261,,,,,,,,,261,261,,261,261,261,261',
'261,261,261,,,261,261,,,,261,261,261,261,,,,,,,,,,,,,261,261,,261,261',
'261,261,261,261,261,261,261,261,261,700,700,261,,700,,,,,,,,,700,700',
',700,700,700,700,700,700,700,,,700,700,,,,700,700,700,700,,,,,,700,',
',,,,,700,700,,700,700,700,700,700,700,700,700,700,700,700,500,500,700',
',500,,,,,,,,,500,500,,500,500,500,500,500,500,500,,,500,500,,,,500,500',
'500,500,,,,,,500,,,,,,,500,500,,500,500,500,500,500,500,500,500,500',
'500,500,501,501,500,,501,,,,,,,,,501,501,,501,501,501,501,501,501,501',
',,501,501,,,,501,501,501,501,,,,,,,,,,,,,501,501,,501,501,501,501,501',
'501,501,501,501,501,501,698,698,501,,698,,,,,,,,,698,698,,698,698,698',
'698,698,698,698,,,698,698,,,,698,698,698,698,,,,,,,,,,,,,698,698,,698',
'698,698,698,698,698,698,698,698,698,698,890,890,698,,890,,,,,,,,,890',
'890,,890,890,890,890,890,890,890,,,890,890,,,,890,890,890,890,,,,,,',
',,,,,,890,890,,890,890,890,890,890,890,890,890,890,890,890,772,772,890',
',772,,,,,,,,,772,772,,772,772,772,772,772,772,772,,,772,772,,,,772,772',
'772,772,,,,,,,,,,,,,772,772,,772,772,772,772,772,772,772,772,772,772',
'772,634,634,772,,634,,,,,,,,,634,634,,634,634,634,634,634,634,634,,',
'634,634,,,,634,634,634,634,,,,,,,,,,,,,634,634,,634,634,634,634,634',
'634,634,634,634,634,634,889,889,634,,889,,,,,,,,,889,889,,889,889,889',
'889,889,889,889,,,889,889,,,,889,889,889,889,,,,,,889,,,,,,,889,889',
',889,889,889,889,889,889,889,889,889,889,889,635,635,889,,635,,,,,,',
',,635,635,,635,635,635,635,635,635,635,,,635,635,,,,635,635,635,635',
',,,,,,,,,,,,635,635,,635,635,635,635,635,635,635,635,635,635,635,262',
'262,635,,262,,,,,,,,,262,262,,262,262,262,262,262,262,262,,,262,262',
',,,262,262,262,262,,,,,,,,,,,,,262,262,,262,262,262,262,262,262,262',
'262,262,262,262,511,511,262,,511,,,,,,,,,511,511,,511,511,511,511,511',
'511,511,,,511,511,,,,511,511,511,511,,,,,,511,,,,,,,511,511,,511,511',
'511,511,511,511,511,511,511,511,511,199,199,511,,199,,,,,,,,,199,199',
',199,199,199,199,199,199,199,,,199,199,,,,199,199,199,199,,,,,,199,',
',,,,,199,199,,199,199,199,199,199,199,199,199,199,199,199,512,512,199',
',512,,,,,,,,,512,512,,512,512,512,512,512,512,512,,,512,512,,,,512,512',
'512,512,,,,,,,,,,,,,512,512,,512,512,512,512,512,512,512,512,512,512',
'512,428,428,512,,428,,,,,,,,,428,428,,428,428,428,428,428,428,428,,',
'428,428,,,,428,428,428,428,,,,,,428,,,,,,,428,428,,428,428,428,428,428',
'428,428,428,428,428,428,429,429,428,,429,,,,,,,,,429,429,,429,429,429',
'429,429,429,429,,,429,429,,,,429,429,429,429,,,,,,,,,,,,,429,429,,429',
'429,429,429,429,429,429,429,429,429,429,200,200,429,,200,,,,,,,,,200',
'200,,200,200,200,200,200,200,200,,,200,200,,,,200,200,200,200,617,,617',
'617,617,536,617,536,536,536,,536,200,200,,200,200,200,200,200,200,200',
'200,200,200,200,,318,200,318,318,318,,318,,,,,617,,,,,536,,,617,617',
'617,617,,536,536,536,536,,708,617,708,708,708,,708,,,318,,318,,,,,,318',
'318,318,318,802,,802,802,802,569,802,569,569,569,,569,,,,,,708,56,,56',
'56,56,,56,708,708,708,708,,860,,860,860,860,,860,,802,,,,,569,569,,802',
'802,802,802,,569,569,569,569,,56,56,,,,,,,56,56,56,56,860,860,,,,,,',
'860,860,860,860' ]
        racc_action_check = arr = ::Array.new(23434, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_action_pointer = [
    -2,  1618,   nil,   365,   nil,  1609,  1481, 21590, 21344,  1470,
  1441,  1428,  1473,   219,  1074,   796,   nil,  1760,  1896,  3664,
  1438,   nil,  2304,  2440,  2576,   922,   -11,   944,   808,   nil,
  3256,  3392,  3528,   nil,   -51,  1311,  1324,   363,  4208,  4344,
  4480,  1211,  1449,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   672,   nil,  5024,  5160,  5296,   -14, 23321,  5704,  5840,   nil,
   nil,  5976,  6112,  1193,   nil, 22172,   nil,   nil,   nil,   nil,
   nil,   -43,   nil,   nil,   nil,   nil,   nil,  1133,  1046, 21836,
   nil,   nil,   nil,  7064,   nil,   nil,  7200,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,  1108,   nil,  7472,   nil,
   nil,   nil,  7608,  7744,  7880,  8016,  8152,  8288,   nil,  1265,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil, 21948,   866,   nil,  8832,  8968,  9104,  9240,  9376, 22952,
 23192,  9784,  9920, 10056,   nil,   178,   213,   816,   146,   648,
   680, 11008, 11144,   nil,   nil, 11280,   663, 11552, 11688, 11824,
 11960, 12096, 12232, 12368, 12504, 12640, 12776, 12912, 13048, 13184,
 13320, 13456, 13592, 13728, 13864, 14000, 14136, 14272, 14408, 14544,
 14680, 14816, 14952,   nil,   nil,   nil,  3528,   nil,   540,   537,
   nil, 15496,   358, 15768,   nil,   nil,   nil,   nil, 15904,   nil,
   nil, 22232, 22832,    98, 16448, 16584,   nil,   nil,   nil,   nil,
   nil,   nil,   nil, 16720,   233,  1745,   359, 17264,   508,   849,
  1356, 17808, 17944,  1330,  1450,   125,  1446,  1125,  1087,   -15,
   nil,   717,   793,   nil, 19032,   nil,   938,   205,   249,  1205,
   nil,   465,   nil, 19848,   nil, 19984,    33,   nil,   461,   201,
   256,   641,   653,    56,   813,   nil,   nil,   -22, 23253,   nil,
   nil,   nil,   779,   808,   nil,   844,   862,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,  3816,   nil,   nil,   nil,   953,   nil,
   nil,  1111,  1204,    -7,     0, 18488, 16856,   629,   566,  1154,
  1275,  8560,   nil,  6928,   -12,  1058,   -17,   209,   304,  1219,
   312,   979,   nil,  1115,   nil,   nil,  2984,   nil,   672,   nil,
   536,   nil,    41,  1435,   808,   nil,  1462,   -19,   nil,   400,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,  1508, 21713,   nil,   nil,   nil, 21467,  1511,
   nil,   nil,  1624,   nil,   134,  1481,   nil,  1463,   nil,   nil,
  3256,  1492,  1157,  1192,  1080,   nil,   nil,   nil,   134,  1476,
   266,   nil,   536,   672,   nil,  2032,   nil,   nil, 23072, 23132,
  1216,   -16,  2848,  3120,  3800,     1,   nil,  5704,  5432,  1534,
  1492,  1465,  1463,  1458,  1437,  5833,  5969,  3823,  4208,  4072,
  3936,  5160,  5568,  5296,  5024,  4888,  4616,  4344,  1834,  2106,
  4480,  4752,  1896,   213,   nil,  4888,   nil,  5432,   nil,  5568,
   nil,   nil,  1352,   nil,   nil,  1216,   215,   nil,  1410,  1347,
   -20,  1319,  1353,   nil,   nil,  6248,   -27,   210,  1254,   nil,
   nil,  6384,  1230,  1191,   nil,   nil,  1175, 10464,  1196, 10872,
 22352, 22412,  1396,  1176,   nil,   nil,  1093,   nil, 16176, 16312,
 18624, 22892, 23012,  2304, 19712,  1072,  1022,   935,   nil,   nil,
 20120,   nil,   nil, 20256,   nil,   nil,   nil,   nil, 20528, 20664,
   877,   nil,  1517,   nil,   nil, 20936, 23231,   nil,   597,   nil,
   nil,   846,   nil,  3823,   nil,   793,  1518,   nil,   nil, 21072,
   891,   nil,   nil,  6520,   250,   229,   785,   776, 20800,   nil,
   nil,  1477,   667,   nil,  1215,   nil,   189, 20392,   nil, 23308,
   nil,   nil,   nil,     3,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   -35,   nil,   nil,   nil,   266,   nil,
   nil,   nil,   nil,   nil, 19576,   227, 19440,   -61, 19304, 19168,
   135,   nil,   nil,   nil, 18896,  1306,   nil, 18760,   143,   226,
   536,   400,  1467,  1760,   nil, 18352,   nil, 23226,   nil, 18216,
  1493,   nil,  1520, 18080,   nil,   nil,   nil,   nil,   nil,   nil,
 17672,   nil,  1258,  1235, 22652, 22772, 17536,  1352,   588,   nil,
   nil,   586, 17400, 17128,   nil,  1473,   -37, 16992,    -4,   nil,
    66,   192,    11,   125,    -2,  1355,   208, 16040,  2984,   300,
   320,   -13,   414, 15632,   nil,   nil,   161,   381,   490,   nil,
   nil,   378,   nil,   401,   214,   486,   432,   436,   nil,   nil,
   492,  3786,   nil,   705,   nil,   615,   nil,   nil,   nil,   nil,
   nil,   622,   nil,   640, 15360, 15224,   199,   nil, 22472, 15088,
 22292,   nil,   nil, 11416,   765,   192, 10736, 10600, 23282,   268,
   685,   708,   724,   nil,   723,   nil, 22060,   798,  1607, 10328,
   nil,   nil,   nil,  3392,   791, 10192,  9648,   nil,  2848,   nil,
  2712,   nil,   nil,  2576,   nil,  2440,  9512,  8696,  8424,   -53,
  2168,   nil,   929,  1030,   nil,   nil,   931,   nil,   nil,   975,
   986,   176,  1077,  7336,   nil,  1014,  1121,  1012,  1211,   nil,
   nil,  1159,   nil,  6792,  1051,  1113,   nil,   nil,   nil,   nil,
   nil,   nil, 22592,   nil,  1702,   nil,   nil,   nil,   nil,  1936,
  1234,   nil,   nil,  1251,  6656, 21208,   nil,   nil,   258,   -19,
  1466,   nil,  1205,  1204,  4752,   -32,   nil,   nil,  1305,  1306,
  1191,   nil, 23303,   nil,  1756,   nil,   nil,   518,  4616,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,  1225,  1214,   nil,  3120,
  4072,   nil,   nil,   nil,  1260,  1248,   nil,   nil,   nil,  3936,
   nil,   nil,  1161,  3664,   nil,  1322,  1306,   nil,   nil,  2712,
   nil,  1439,  1442,  2168,  2032,   nil,   nil,  1464,   nil,  1624,
   nil,   nil,  1394,  1359,  1367,   nil,  1368,  1362,   nil,   nil,
 23333,   nil,   nil,   nil,  1488,   nil,  1352,   246,   378,  1483,
  1244,   nil,   nil,    97,   nil,   nil,   nil,   314,  1080,   nil,
  1555,   nil,  1212,   nil,   nil,   nil,   944,  1571,   808, 22712,
 22532,  1415,   400,   nil,   nil,   nil,  1584,   nil,  1468,  1589,
   nil,  1506,   166,   185,   235,  1480,   468,   nil,   nil,   nil,
    -2,   nil ]

racc_action_default = [
    -3,  -526,    -1,  -514,    -4,    -6,  -526,  -526,  -526,  -526,
  -526,  -526,  -526,  -526,  -268,   -36,   -37,  -526,  -526,   -42,
   -44,   -45,  -279,  -318,  -319,   -49,  -246,  -246,  -246,   -61,
   -10,   -65,   -72,   -74,  -526,  -445,  -526,  -526,  -526,  -526,
  -526,  -516,  -226,  -261,  -262,  -263,  -264,  -265,  -266,  -267,
  -504,  -270,  -526,  -525,  -496,  -287,  -525,  -526,  -526,  -292,
  -295,  -514,  -526,  -304,  -310,  -526,  -320,  -321,  -390,  -391,
  -392,  -393,  -394,  -525,  -397,  -525,  -525,  -525,  -525,  -525,
  -424,  -430,  -431,  -434,  -435,  -436,  -437,  -438,  -439,  -440,
  -441,  -442,  -443,  -444,  -447,  -448,  -526,    -2,  -515,  -521,
  -522,  -523,  -526,  -526,  -526,  -526,  -526,    -3,   -13,  -526,
  -100,  -101,  -102,  -103,  -104,  -105,  -106,  -109,  -110,  -111,
  -112,  -113,  -114,  -115,  -116,  -117,  -118,  -119,  -120,  -121,
  -122,  -123,  -124,  -125,  -126,  -127,  -128,  -129,  -130,  -131,
  -132,  -133,  -134,  -135,  -136,  -137,  -138,  -139,  -140,  -141,
  -142,  -143,  -144,  -145,  -146,  -147,  -148,  -149,  -150,  -151,
  -152,  -153,  -154,  -155,  -156,  -157,  -158,  -159,  -160,  -161,
  -162,  -163,  -164,  -165,  -166,  -167,  -168,  -169,  -170,  -171,
  -172,  -173,  -174,  -175,  -176,  -177,  -178,  -179,  -180,  -181,
  -182,  -526,   -18,  -107,   -10,  -526,  -526,  -526,  -525,  -526,
  -526,  -526,  -526,  -526,   -40,  -526,  -445,  -526,  -268,  -526,
  -526,   -10,  -526,   -41,  -218,  -526,  -526,  -526,  -526,  -526,
  -526,  -526,  -526,  -526,  -526,  -526,  -526,  -526,  -526,  -526,
  -526,  -526,  -526,  -526,  -526,  -526,  -526,  -526,  -526,  -526,
  -526,  -526,  -526,  -361,  -363,   -46,  -227,  -239,  -253,  -253,
  -243,  -526,  -254,  -526,  -279,  -318,  -319,  -498,  -526,   -47,
   -48,  -526,  -526,   -53,  -525,  -526,  -286,  -366,  -373,  -375,
   -59,  -371,   -60,  -526,  -514,   -11,   -61,   -10,  -526,  -526,
   -66,   -69,   -10,   -80,  -526,  -526,   -87,  -282,  -516,  -526,
  -322,  -372,  -526,   -71,  -526,   -76,  -275,  -432,  -433,  -526,
  -203,  -204,  -219,  -526,  -517,   -10,  -516,  -228,  -516,  -518,
  -518,  -526,  -526,  -518,  -526,  -288,  -289,  -526,  -526,  -333,
  -334,  -342,  -525,  -464,  -349,  -525,  -525,  -360,  -463,  -465,
  -466,  -467,  -468,  -469,  -526,  -480,  -485,  -486,  -488,  -489,
  -490,  -526,   -43,  -526,  -526,  -526,  -526,  -514,  -526,  -515,
  -526,  -526,  -307,  -526,  -100,  -101,  -138,  -139,  -155,  -160,
  -167,  -170,  -313,  -526,  -445,  -494,  -526,  -395,  -526,  -410,
  -526,  -412,  -526,  -526,  -526,  -402,  -526,  -526,  -408,  -526,
  -423,  -425,  -426,  -427,  -428,   912,    -5,  -524,   -19,   -20,
   -21,   -22,   -23,  -526,  -526,   -15,   -16,   -17,  -526,  -526,
   -25,   -33,  -183,  -254,  -526,  -526,   -26,   -34,   -35,   -27,
  -185,  -526,  -505,  -506,  -246,  -368,  -507,  -508,  -505,  -246,
  -506,  -370,  -510,  -511,   -32,  -192,   -38,   -39,  -526,  -526,
  -525,  -275,  -526,  -526,  -526,  -526,  -285,  -193,  -194,  -195,
  -196,  -197,  -198,  -199,  -200,  -205,  -206,  -207,  -208,  -209,
  -210,  -211,  -212,  -213,  -214,  -215,  -216,  -217,  -220,  -221,
  -222,  -223,  -526,  -525,  -240,  -526,  -241,  -526,  -251,  -526,
  -255,  -501,  -246,  -505,  -506,  -246,  -525,   -54,  -526,  -516,
  -516,  -253,  -239,  -247,  -248,  -526,  -525,  -525,  -526,  -281,
    -9,  -515,  -526,   -62,  -273,   -77,   -67,  -526,  -526,  -525,
  -526,  -526,   -86,  -526,  -432,  -433,   -73,   -78,  -526,  -526,
  -526,  -526,  -526,  -224,  -526,  -382,  -526,  -526,  -229,  -230,
  -520,  -519,  -232,  -520,  -277,  -278,  -497,  -330,   -10,   -10,
  -526,  -332,  -526,  -351,  -358,  -526,  -355,  -356,  -526,  -359,
  -464,  -526,  -471,  -526,  -473,  -475,  -479,  -487,  -491,   -10,
  -323,  -324,  -325,   -10,  -526,  -526,  -526,  -526,   -10,  -377,
  -301,   -96,  -526,   -98,  -526,  -268,  -526,  -526,  -311,  -462,
  -315,  -512,  -513,  -516,  -396,  -411,  -414,  -415,  -417,  -398,
  -413,  -399,  -400,  -401,  -526,  -404,  -406,  -407,  -526,  -429,
    -7,   -14,  -108,   -24,  -526,  -260,  -526,  -276,  -526,  -526,
   -55,  -237,  -238,  -367,  -526,   -57,  -369,  -526,  -505,  -506,
  -505,  -506,  -526,  -183,  -284,  -526,  -345,  -526,  -347,   -10,
  -253,  -252,  -256,  -526,  -499,  -500,   -50,  -364,   -51,  -365,
   -10,  -233,  -526,  -526,  -526,  -526,  -526,   -42,  -526,  -245,
  -249,  -526,   -10,   -10,  -280,   -12,   -62,  -526,   -70,   -75,
  -526,  -505,  -506,  -525,  -509,   -85,  -526,  -526,  -191,  -201,
  -202,  -526,  -525,  -525,  -271,  -272,  -518,  -526,  -526,  -331,
  -343,  -526,  -350,  -525,  -344,  -526,  -525,  -525,  -481,  -470,
  -526,  -526,  -478,  -525,  -326,  -525,  -293,  -327,  -328,  -329,
  -296,  -526,  -299,  -526,  -526,  -526,   -96,   -97,  -526,  -525,
  -526,  -305,  -449,  -526,  -526,  -526,   -10,   -10,  -462,  -526,
  -493,  -493,  -493,  -461,  -464,  -483,  -526,  -526,  -526,   -10,
  -403,  -405,  -409,  -184,  -258,  -526,  -526,   -29,  -187,   -30,
  -188,   -56,   -31,  -189,   -58,  -190,  -526,  -526,  -526,  -276,
  -225,  -346,  -526,  -526,  -242,  -257,  -526,  -234,  -235,  -525,
  -525,  -516,  -526,  -526,  -250,  -526,  -526,   -68,   -81,   -79,
  -283,  -525,  -340,   -10,  -383,  -525,  -384,  -385,  -231,  -335,
  -336,  -357,  -526,  -275,  -526,  -353,  -354,  -472,  -474,  -477,
  -526,  -337,  -338,  -526,   -10,   -10,  -298,  -300,  -526,  -526,
   -96,   -99,  -509,  -526,   -10,  -526,  -451,  -308,  -526,  -526,
  -516,  -453,  -526,  -457,  -526,  -459,  -460,  -526,  -526,  -316,
  -495,  -416,  -419,  -420,  -421,  -422,  -526,  -259,   -28,  -186,
  -526,  -348,  -362,   -52,  -526,  -253,  -374,  -376,    -8,   -10,
  -389,  -341,  -526,  -526,  -387,  -274,  -525,  -476,  -290,  -526,
  -291,  -526,  -526,  -526,   -10,  -302,  -276,  -526,  -450,   -10,
  -312,  -314,  -526,  -493,  -493,  -492,  -493,  -526,  -484,  -482,
  -462,  -418,  -236,  -244,  -526,  -388,   -10,   -88,  -526,  -526,
   -95,  -386,  -352,  -526,  -294,  -297,  -256,  -525,   -10,  -306,
  -526,  -452,  -526,  -455,  -456,  -458,   -10,  -382,  -525,  -526,
  -526,   -94,   -10,  -378,  -379,  -380,  -526,  -309,  -493,  -526,
  -381,  -526,  -505,  -506,  -509,   -93,  -525,  -303,  -454,  -317,
   -89,  -339 ]

clist = [
'35,362,310,313,311,248,248,248,247,247,247,466,327,319,480,381,557,662',
'303,14,542,113,113,516,506,401,408,707,280,477,35,283,283,98,549,553',
'204,534,710,308,537,539,678,108,193,627,97,5,629,14,286,286,621,670',
'621,276,267,271,541,213,293,780,283,278,761,364,697,116,116,519,522',
'306,639,526,2,624,342,342,858,113,342,286,641,245,259,260,566,783,568',
'290,290,345,619,113,784,343,344,346,35,347,785,414,419,695,348,630,35',
'35,878,351,263,270,272,686,690,642,643,14,794,567,290,342,342,342,342',
'14,14,381,575,370,372,624,849,379,585,353,706,569,716,860,388,389,390',
'391,317,5,527,310,316,411,839,676,315,392,5,312,858,365,483,305,701',
'463,486,472,475,487,893,694,765,832,367,368,570,374,584,363,377,710',
'405,405,811,393,10,718,308,719,800,853,394,350,192,828,778,386,35,1',
',,,,,,791,,,113,,,,,,35,10,14,423,803,805,806,,,,426,427,621,691,,,648',
',542,14,435,682,,,,400,406,409,,,,424,,,,,481,248,,482,247,,,101,,248',
',,247,,,,,,503,,680,,,,,,,327,530,,35,,894,10,283,35,517,911,518,,,10',
'10,,507,,,283,670,14,,12,,286,14,276,,491,35,,276,678,496,492,,101,286',
',498,,490,886,267,,271,627,629,14,479,484,,12,710,414,419,,,488,,,,',
'290,,,,713,721,,,,845,,,364,290,364,,,,,883,884,,885,,,342,342,731,542',
',,565,734,565,,,,10,757,,310,,612,744,554,555,573,751,,771,900,556,775',
'776,10,,,12,307,,,320,,653,908,12,12,,,113,290,,290,113,653,620,13,308',
'369,,371,371,375,378,371,798,799,768,,,,591,,205,205,592,,,205,205,205',
',,,423,602,13,284,284,310,606,650,621,,,116,,632,633,116,10,,,,,10,837',
',205,205,666,,,205,205,,,205,284,,844,,,713,,,308,,10,,,,35,12,766,507',
',,283,600,,,,602,605,306,602,,,,12,14,,847,13,,423,286,205,205,205,205',
'13,13,866,,101,423,,35,35,,,,661,,364,749,750,645,,,,307,,,895,,14,14',
'35,717,872,,35,565,290,626,,35,628,,,,,892,,,880,14,,,,14,327,742,12',
'855,14,855,,12,855,,,,620,705,863,,,,,,290,,,,,101,,,,653,12,899,,,',
'478,13,205,205,205,205,,,205,205,205,35,,,752,,,,13,205,,,35,,,,713',
',,,14,727,729,,35,35,507,732,405,283,310,14,793,,809,,759,,855,283,',
',,14,14,,,,286,,,,,,,10,279,,286,788,,205,205,,,602,,308,606,,205,,',
',13,,,,284,13,,,,,,,,290,35,35,,284,10,10,423,,342,290,,,,35,13,,342',
',,14,14,,824,,113,10,,789,,10,825,815,14,,10,795,,,,,,,,,,673,,,,677',
',,601,,205,205,,35,,,564,818,564,,,,,,307,,,852,,602,602,205,14,,35',
'35,423,,712,12,,653,,,35,,,,,,,10,,14,14,687,687,616,,,,,10,14,,,601',
'702,,601,616,,,,10,10,12,12,,35,616,616,,867,,,,310,399,901,,,,307,35',
'205,,12,14,35,,12,870,,,279,12,,342,,,,,14,,,35,,14,,,,,,308,,,873,35',
',,,,,,14,35,,10,10,,290,35,,,,,14,,,205,10,,,423,14,13,,,,,14,284,,205',
',,12,,,,279,,,,,279,712,12,205,,,,,,,,,,,12,12,,13,13,10,,,,,674,,,',
',796,797,,,,801,,,,13,,10,10,13,,,,,13,,,10,,,,,,205,,,,,,,,,,,836,',
',,601,,,,,,,12,12,762,767,,,,10,,205,205,871,,12,,205,,854,,856,,,10',
'762,,762,,10,,,13,,,,,,687,,,307,,13,848,,10,,,205,,,,,,13,13,,10,12',
'284,,,,,,10,,,,284,,10,,,,,712,,,12,12,,,,,,,,,12,601,601,,,,,,,898',
',,,830,,,,834,205,,,,205,,,,205,,,13,13,,,,,12,,,,214,,,13,246,246,246',
',,,205,12,,,,,12,,,,300,301,302,,,,,,,,,,,12,,246,246,,,,,667,668,,',
'12,,13,,,,,,12,,,,,,12,,,683,,,,685,,13,13,,693,,,,,,,13,,,,,,,,,,,',
'762,,,,,,,,,,,307,,,,,,,,,,,,13,,,,868,,762,,,,205,,,,,13,,,,743,13',
',,,,,,,,,746,,,,,314,,13,,,,,755,756,,,,,,13,,,,,,,,13,,205,,,,13,402',
'246,410,246,,,425,,,,,,,,,,,,,,214,,437,438,439,440,441,442,443,444',
'445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461',
'462,,,,,,,,816,246,,246,,,,,246,,,,,,246,246,,,,,,,,246,,,,,,,,,,,,',
',,,,,,,,831,,,,,,,,,513,,,,403,407,,,,,,,841,842,,,,,,,,,,,,,,,,,,,',
',,289,289,,,,,,289,289,289,,,,,,,,,,,,,865,289,,468,,470,,,,289,471',
',,,,877,,,,,,,,,,,,,,,,,,,,,,887,,,,,,,246,,,,,896,,,,,,,,,,,,,,906',
',,,,,,246,,425,613,410,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,246,,246,,246,',
',,,,,,,,,,,,,,637,,,,,,,,,,,,,,246,,,,,,,,,658,659,660,,,,,,595,,,,246',
',289,246,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289',
'289,289,289,289,289,289,289,289,289,289,289,,,,,,,,,289,,289,,,,,289',
',,,,,,,,,,,622,,314,,625,,,,,,,289,,,,,,723,,246,638,728,730,,289,,',
'733,,,735,,,289,,,,,740,,,,,,,,246,,,,,,,,,622,,,314,246,,,,,,,,,,,',
',,,,,,,,,,289,,289,,,246,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,246,,,,,246,',
',,,,,,,724,,,289,,,,,,,,,,,,,,246,819,,,,,,,,,745,728,730,733,289,289',
'289,,,,,,,622,,,,,246,,,,,,,,,,,,,,,,,,,289,,289,764,289,,,,,,,,,,,',
',,,,,,,,,,,,,,,,289,,403,,246,,,,,,,289,289,289,,,819,,,,,,,289,,,289',
',,,,,,817,,,,,289,246,,,,,,,,,,,,,,,,,,,,,246,403,,,,,,,,,,,,,,,,,,',
',,,,246,,,,,,,,,,,,,289,,289,,,,,,,,,,,289,,,,,,859,,289,,,,,,,,289',
',,,,,,,,,,,,,,,,,,,,,,,289,876,,,,,,,,,289,,,,,,289,,,,,,876,,,,,,,',
',,,,,,,,,,,,,,,,,289,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,289,,,,,,,,,,,289',
'289,289,,,,,,,,,,,,,,,289,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,289,,,,,,,,,,,,289,,,,,,,,,,,,,289,,,,,,,,,,289,,,,,,,,',
',,,,,,,,,,,,289' ]
        racc_goto_table = arr = ::Array.new(2285, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'44,47,56,56,22,54,54,54,29,29,29,59,106,102,32,47,78,10,51,23,137,48',
'48,8,43,24,24,81,41,35,44,44,44,6,75,75,26,108,109,29,108,108,139,14',
'14,58,4,7,58,23,23,23,60,105,60,38,57,57,140,18,42,76,44,39,11,44,45',
'50,50,55,55,26,60,55,2,146,26,26,143,48,26,23,61,31,31,31,46,11,46,52',
'52,85,36,48,86,16,16,87,44,16,88,33,33,89,4,36,44,44,90,91,34,34,34',
'77,77,36,36,23,92,93,52,26,26,26,26,23,23,47,128,125,125,146,94,125',
'128,95,96,97,98,99,16,16,16,16,100,7,101,56,74,22,103,104,72,7,7,71',
'143,70,62,84,79,112,114,33,33,115,116,117,118,119,123,124,83,126,127',
'82,129,109,54,54,130,2,17,131,29,132,134,135,27,19,15,12,141,5,44,1',
',,,,,,45,,,48,,,,,,44,17,23,48,136,136,136,,,,26,26,60,78,,,43,,137',
'23,26,137,,,,18,18,18,,,,18,,,,,54,54,,29,29,,,80,,54,,,29,,,,,,51,',
'140,,,,,,,106,102,,44,,11,17,44,44,51,76,51,,,17,17,,41,,,44,105,23',
',20,,23,23,38,,6,44,,38,139,42,39,,80,23,,39,,4,81,57,,57,58,58,23,31',
'31,,20,109,33,33,,,31,,,,,52,,,,107,128,,,,77,,,44,52,44,,,,,136,136',
',136,,,26,26,35,137,,,23,35,23,,,,17,43,,56,,22,59,16,16,26,32,,108',
'10,4,108,108,17,,,20,53,,,53,,33,136,20,20,,,48,52,,52,48,33,56,21,29',
'53,,53,53,53,53,53,8,8,55,,,,14,,21,21,14,,,21,21,21,,,,48,57,21,21',
'21,56,57,22,60,,,50,,51,51,50,17,,,,,17,137,,21,21,56,,,21,21,,,21,21',
',75,,,107,,,29,,17,,,,44,20,24,41,,,44,34,,,,57,34,26,57,,,,20,23,,8',
'21,,48,23,21,21,21,21,21,21,75,,80,48,,44,44,,,,26,,44,33,33,7,,,,53',
',,78,,23,23,44,51,108,,44,23,52,34,,44,34,,,,,75,,,8,23,,,,23,106,102',
'20,107,23,107,,20,107,,,,56,26,59,,,,,,52,,,,,80,,,,33,20,8,,,,53,21',
'21,21,21,21,,,21,21,21,44,,,29,,,,21,21,,,44,,,,107,,,,23,18,18,,44',
'44,41,18,54,44,56,23,22,,47,,41,,107,44,,,,23,23,,,,23,,,,,,,17,9,,23',
'54,,21,21,,,57,,29,57,,21,,,,21,,,,21,21,,,,,,,,52,44,44,,21,17,17,48',
',26,52,,,,44,21,,26,,,23,23,,51,,48,17,,16,,17,54,23,23,,17,16,,,,,',
',,,,110,,,,110,,,53,,21,21,,44,,,21,18,21,,,,,,53,,,51,,57,57,21,23',
',44,44,48,,110,20,,33,,,44,,,,,,,17,,23,23,80,80,53,,,,,17,23,,,53,80',
',53,53,,,,17,17,20,20,,44,53,53,,44,,,,56,9,22,,,,53,44,21,,20,23,44',
',20,23,,,9,20,,26,,,,,23,,,44,,23,,,,,,29,,,16,44,,,,,,,23,44,,17,17',
',52,44,,,,,23,,,21,17,,,48,23,21,,,,,23,21,,21,,,20,,,,9,,,,,9,110,20',
'21,,,,,,,,,,,20,20,,21,21,17,,,,,21,,,,,80,80,,,,80,,,,21,,17,17,21',
',,,,21,,,17,,,,,,21,,,,,,,,,,,110,,,,53,,,,,,,20,20,53,53,,,,17,,21',
'21,17,,20,,21,,110,,110,,,17,53,,53,,17,,,21,,,,,,80,,,53,,21,80,,17',
',,21,,,,,,21,21,,17,20,21,,,,,,17,,,,21,,17,,,,,110,,,20,20,,,,,,,,',
'20,53,53,,,,,,,110,,,,53,,,,53,21,,,,21,,,,21,,,21,21,,,,,20,,,,28,',
',21,28,28,28,,,,21,20,,,,,20,,,,28,28,28,,,,,,,,,,,20,,28,28,,,,,9,9',
',,20,,21,,,,,,20,,,,,,20,,,9,,,,9,,21,21,,9,,,,,,,21,,,,,,,,,,,,53,',
',,,,,,,,,53,,,,,,,,,,,,21,,,,21,,53,,,,21,,,,,21,,,,9,21,,,,,,,,,,9',
',,,,25,,21,,,,,9,9,,,,,,21,,,,,,,,21,,21,,,,21,28,28,28,28,,,28,,,,',
',,,,,,,,,28,,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28',
'28,28,28,28,28,28,28,,,,,,,,9,28,,28,,,,,28,,,,,,28,28,,,,,,,,28,,,',
',,,,,,,,,,,,,,,,,9,,,,,,,,,28,,,,25,25,,,,,,,9,9,,,,,,,,,,,,,,,,,,,',
',,37,37,,,,,,37,37,37,,,,,,,,,,,,,9,37,,25,,25,,,,37,25,,,,,9,,,,,,',
',,,,,,,,,,,,,,,9,,,,,,,28,,,,,9,,,,,,,,,,,,,,9,,,,,,,28,,28,28,28,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,28,,28,,28,,,,,,,,,,,,,,,,28,,,,,,,,,,,',
',,28,,,,,,,,,28,28,28,,,,,,25,,,,28,,37,28,37,37,37,37,37,37,37,37,37',
'37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,,,,,,,,,37,,37,,',
',,37,,,,,,,,,,,,25,,25,,25,,,,,,,37,,,,,,28,,28,25,28,28,,37,,,28,,',
'28,,,37,,,,,28,,,,,,,,28,,,,,,,,,25,,,25,28,,,,,,,,,,,,,,,,,,,,,,37',
',37,,,28,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,28,,,,,28,,,,,,,,,25,,,37,,,',
',,,,,,,,,,28,28,,,,,,,,,25,28,28,28,37,37,37,,,,,,,25,,,,,28,,,,,,,',
',,,,,,,,,,,37,,37,25,37,,,,,,,,,,,,,,,,,,,,,,,,,,,,37,,25,,28,,,,,,',
'37,37,37,,,28,,,,,,,37,,,37,,,,,,,25,,,,,37,28,,,,,,,,,,,,,,,,,,,,,28',
'25,,,,,,,,,,,,,,,,,,,,,,,28,,,,,,,,,,,,,37,,37,,,,,,,,,,,37,,,,,,25',
',37,,,,,,,,37,,,,,,,,,,,,,,,,,,,,,,,,37,25,,,,,,,,,37,,,,,,37,,,,,,25',
',,,,,,,,,,,,,,,,,,,,,,,,37,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,37,,,,,,,,',
',,37,37,37,,,,,,,,,,,,,,,37,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,37,,,,,,,,,,,,37,,,,,,,,,,,,,37,,,,,,,,,,37,,,,,,,,,,',
',,,,,,,,,,37' ]
        racc_goto_check = arr = ::Array.new(2285, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_goto_pointer = [
   nil,   195,    74,   nil,    43,    95,    30,    47,  -282,   644,
  -498,  -598,  -570,   nil,    36,   182,    38,   182,    41,   127,
   298,   415,   -49,    19,  -170,  1225,    19,    80,  1113,   -14,
   nil,    61,  -250,   -98,    84,  -234,  -371,  1420,    25,    33,
   nil,    -3,    28,  -270,     0,  -496,  -265,   -64,    14,   nil,
    60,   -23,    58,   344,   -17,  -240,   -51,    30,  -427,  -238,
  -413,  -403,  -107,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    92,   101,    97,   nil,    92,  -309,  -622,  -441,  -332,  -406,
   251,  -542,   110,  -191,   108,    32,  -592,    37,  -590,  -457,
  -737,    46,  -583,  -233,  -665,    71,  -432,  -225,  -432,  -670,
    88,  -171,   -43,  -632,  -385,  -479,   -44,  -226,  -285,  -531,
   219,   nil,   -82,   nil,  -106,  -104,  -711,  -392,  -495,  -596,
   nil,   nil,   nil,    99,    98,    54,    96,  -200,  -240,    98,
  -538,  -394,  -393,   nil,  -522,  -615,  -495,  -314,   nil,  -494,
  -276,  -489,   nil,  -726,   nil,   nil,  -392 ]

racc_goto_default = [
   nil,   nil,   nil,     3,   nil,     4,   349,   275,   nil,   515,
   nil,   781,   nil,   274,   nil,   nil,   nil,   209,    16,    11,
   210,   299,   nil,   208,   nil,   252,    15,   nil,    19,    20,
    21,   nil,    25,   656,   nil,   nil,   nil,    26,    29,   nil,
    31,    34,    33,   nil,   206,   563,   nil,   115,   417,   114,
    69,   nil,    42,   533,   309,   nil,   249,   415,   603,   464,
   250,   nil,   nil,   265,    43,    44,    45,    46,    47,    48,
    49,   nil,   266,    55,   nil,   nil,   nil,   nil,   nil,   nil,
   550,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   322,   321,   672,   324,   nil,   325,
   326,   244,   nil,   421,   nil,   nil,   nil,   nil,   nil,   nil,
    68,    70,    71,    72,   nil,   nil,   nil,   nil,   580,   nil,
   nil,   nil,   nil,   380,   709,   711,   nil,   333,   328,   335,
   nil,   544,   545,   715,   338,   341,   257 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 139, :_reduce_1,
  2, 140, :_reduce_2,
  0, 141, :_reduce_3,
  1, 141, :_reduce_4,
  3, 141, :_reduce_5,
  1, 143, :_reduce_none,
  4, 143, :_reduce_7,
  4, 146, :_reduce_8,
  2, 147, :_reduce_9,
  0, 151, :_reduce_10,
  1, 151, :_reduce_11,
  3, 151, :_reduce_12,
  0, 165, :_reduce_13,
  4, 145, :_reduce_14,
  3, 145, :_reduce_15,
  3, 145, :_reduce_none,
  3, 145, :_reduce_17,
  2, 145, :_reduce_18,
  3, 145, :_reduce_19,
  3, 145, :_reduce_20,
  3, 145, :_reduce_21,
  3, 145, :_reduce_22,
  3, 145, :_reduce_23,
  4, 145, :_reduce_none,
  3, 145, :_reduce_25,
  3, 145, :_reduce_26,
  3, 145, :_reduce_27,
  6, 145, :_reduce_none,
  5, 145, :_reduce_29,
  5, 145, :_reduce_none,
  5, 145, :_reduce_none,
  3, 145, :_reduce_none,
  3, 145, :_reduce_33,
  3, 145, :_reduce_34,
  3, 145, :_reduce_35,
  1, 145, :_reduce_none,
  1, 164, :_reduce_none,
  3, 164, :_reduce_38,
  3, 164, :_reduce_39,
  2, 164, :_reduce_40,
  2, 164, :_reduce_41,
  1, 164, :_reduce_none,
  1, 154, :_reduce_none,
  1, 156, :_reduce_none,
  1, 156, :_reduce_none,
  2, 156, :_reduce_46,
  2, 156, :_reduce_47,
  2, 156, :_reduce_48,
  1, 168, :_reduce_none,
  4, 168, :_reduce_none,
  4, 168, :_reduce_none,
  4, 173, :_reduce_none,
  2, 167, :_reduce_53,
  3, 167, :_reduce_none,
  4, 167, :_reduce_55,
  5, 167, :_reduce_none,
  4, 167, :_reduce_57,
  5, 167, :_reduce_none,
  2, 167, :_reduce_59,
  2, 167, :_reduce_60,
  1, 157, :_reduce_61,
  3, 157, :_reduce_62,
  1, 177, :_reduce_63,
  3, 177, :_reduce_64,
  1, 176, :_reduce_65,
  2, 176, :_reduce_66,
  3, 176, :_reduce_67,
  5, 176, :_reduce_none,
  2, 176, :_reduce_69,
  4, 176, :_reduce_none,
  2, 176, :_reduce_71,
  1, 176, :_reduce_72,
  3, 176, :_reduce_none,
  1, 179, :_reduce_74,
  3, 179, :_reduce_75,
  2, 178, :_reduce_76,
  3, 178, :_reduce_77,
  1, 181, :_reduce_none,
  3, 181, :_reduce_none,
  1, 180, :_reduce_80,
  4, 180, :_reduce_81,
  3, 180, :_reduce_82,
  3, 180, :_reduce_none,
  3, 180, :_reduce_none,
  3, 180, :_reduce_none,
  2, 180, :_reduce_none,
  1, 180, :_reduce_none,
  1, 155, :_reduce_88,
  4, 155, :_reduce_89,
  3, 155, :_reduce_90,
  3, 155, :_reduce_91,
  3, 155, :_reduce_92,
  3, 155, :_reduce_93,
  2, 155, :_reduce_94,
  1, 155, :_reduce_none,
  1, 183, :_reduce_none,
  2, 184, :_reduce_97,
  1, 184, :_reduce_98,
  3, 184, :_reduce_99,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_103,
  1, 185, :_reduce_104,
  1, 152, :_reduce_105,
  1, 152, :_reduce_none,
  1, 153, :_reduce_107,
  3, 153, :_reduce_108,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  3, 166, :_reduce_183,
  5, 166, :_reduce_184,
  3, 166, :_reduce_185,
  6, 166, :_reduce_186,
  5, 166, :_reduce_187,
  5, 166, :_reduce_none,
  5, 166, :_reduce_none,
  5, 166, :_reduce_none,
  4, 166, :_reduce_none,
  3, 166, :_reduce_none,
  3, 166, :_reduce_193,
  3, 166, :_reduce_194,
  3, 166, :_reduce_195,
  3, 166, :_reduce_196,
  3, 166, :_reduce_197,
  3, 166, :_reduce_198,
  3, 166, :_reduce_199,
  3, 166, :_reduce_200,
  4, 166, :_reduce_none,
  4, 166, :_reduce_none,
  2, 166, :_reduce_203,
  2, 166, :_reduce_204,
  3, 166, :_reduce_205,
  3, 166, :_reduce_206,
  3, 166, :_reduce_207,
  3, 166, :_reduce_208,
  3, 166, :_reduce_209,
  3, 166, :_reduce_210,
  3, 166, :_reduce_211,
  3, 166, :_reduce_212,
  3, 166, :_reduce_213,
  3, 166, :_reduce_214,
  3, 166, :_reduce_215,
  3, 166, :_reduce_216,
  3, 166, :_reduce_217,
  2, 166, :_reduce_218,
  2, 166, :_reduce_219,
  3, 166, :_reduce_220,
  3, 166, :_reduce_221,
  3, 166, :_reduce_222,
  3, 166, :_reduce_223,
  3, 166, :_reduce_224,
  5, 166, :_reduce_225,
  1, 166, :_reduce_none,
  1, 163, :_reduce_none,
  1, 160, :_reduce_228,
  2, 160, :_reduce_229,
  2, 160, :_reduce_230,
  4, 160, :_reduce_231,
  2, 160, :_reduce_232,
  3, 195, :_reduce_233,
  4, 195, :_reduce_234,
  4, 195, :_reduce_none,
  6, 195, :_reduce_none,
  1, 196, :_reduce_none,
  1, 196, :_reduce_none,
  1, 169, :_reduce_239,
  2, 169, :_reduce_240,
  2, 169, :_reduce_241,
  4, 169, :_reduce_242,
  1, 169, :_reduce_243,
  4, 199, :_reduce_none,
  1, 199, :_reduce_none,
  0, 201, :_reduce_246,
  2, 172, :_reduce_247,
  1, 200, :_reduce_none,
  2, 200, :_reduce_249,
  3, 200, :_reduce_250,
  2, 198, :_reduce_251,
  2, 197, :_reduce_252,
  0, 197, :_reduce_253,
  1, 192, :_reduce_254,
  2, 192, :_reduce_255,
  3, 192, :_reduce_256,
  4, 192, :_reduce_257,
  3, 162, :_reduce_258,
  4, 162, :_reduce_none,
  2, 162, :_reduce_260,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  0, 222, :_reduce_270,
  4, 190, :_reduce_271,
  4, 190, :_reduce_272,
  3, 190, :_reduce_273,
  3, 190, :_reduce_274,
  2, 190, :_reduce_275,
  4, 190, :_reduce_276,
  3, 190, :_reduce_277,
  3, 190, :_reduce_278,
  1, 190, :_reduce_279,
  4, 190, :_reduce_280,
  3, 190, :_reduce_281,
  1, 190, :_reduce_282,
  5, 190, :_reduce_283,
  4, 190, :_reduce_284,
  3, 190, :_reduce_285,
  2, 190, :_reduce_286,
  1, 190, :_reduce_none,
  2, 190, :_reduce_288,
  2, 190, :_reduce_289,
  6, 190, :_reduce_290,
  6, 190, :_reduce_291,
  0, 223, :_reduce_292,
  0, 224, :_reduce_293,
  7, 190, :_reduce_294,
  0, 225, :_reduce_295,
  0, 226, :_reduce_296,
  7, 190, :_reduce_297,
  5, 190, :_reduce_298,
  4, 190, :_reduce_299,
  5, 190, :_reduce_300,
  0, 227, :_reduce_301,
  0, 228, :_reduce_302,
  9, 190, :_reduce_none,
  0, 229, :_reduce_304,
  0, 230, :_reduce_305,
  7, 190, :_reduce_306,
  0, 231, :_reduce_307,
  0, 232, :_reduce_308,
  8, 190, :_reduce_309,
  0, 233, :_reduce_310,
  0, 234, :_reduce_311,
  6, 190, :_reduce_312,
  0, 235, :_reduce_313,
  6, 190, :_reduce_314,
  0, 236, :_reduce_315,
  0, 237, :_reduce_316,
  9, 190, :_reduce_317,
  1, 190, :_reduce_318,
  1, 190, :_reduce_319,
  1, 190, :_reduce_320,
  1, 190, :_reduce_none,
  1, 159, :_reduce_none,
  1, 213, :_reduce_none,
  1, 213, :_reduce_none,
  1, 213, :_reduce_none,
  2, 213, :_reduce_none,
  1, 215, :_reduce_none,
  1, 215, :_reduce_none,
  1, 215, :_reduce_none,
  2, 212, :_reduce_330,
  3, 238, :_reduce_331,
  2, 238, :_reduce_332,
  1, 238, :_reduce_none,
  1, 238, :_reduce_none,
  3, 239, :_reduce_335,
  3, 239, :_reduce_336,
  1, 214, :_reduce_337,
  0, 241, :_reduce_338,
  6, 214, :_reduce_339,
  1, 149, :_reduce_none,
  2, 149, :_reduce_341,
  1, 242, :_reduce_342,
  3, 242, :_reduce_343,
  3, 243, :_reduce_344,
  1, 174, :_reduce_none,
  2, 174, :_reduce_346,
  1, 174, :_reduce_347,
  3, 174, :_reduce_348,
  1, 244, :_reduce_349,
  2, 246, :_reduce_350,
  1, 246, :_reduce_351,
  6, 240, :_reduce_352,
  4, 240, :_reduce_353,
  4, 240, :_reduce_354,
  2, 240, :_reduce_355,
  2, 240, :_reduce_356,
  4, 240, :_reduce_357,
  2, 240, :_reduce_358,
  2, 240, :_reduce_359,
  1, 240, :_reduce_360,
  0, 250, :_reduce_361,
  5, 249, :_reduce_362,
  2, 170, :_reduce_363,
  4, 170, :_reduce_none,
  4, 170, :_reduce_none,
  2, 211, :_reduce_366,
  4, 211, :_reduce_367,
  3, 211, :_reduce_368,
  4, 211, :_reduce_369,
  3, 211, :_reduce_370,
  2, 211, :_reduce_371,
  1, 211, :_reduce_372,
  0, 252, :_reduce_373,
  5, 210, :_reduce_374,
  0, 253, :_reduce_375,
  5, 210, :_reduce_376,
  0, 255, :_reduce_377,
  6, 216, :_reduce_378,
  1, 254, :_reduce_379,
  1, 254, :_reduce_none,
  6, 148, :_reduce_381,
  0, 148, :_reduce_382,
  1, 256, :_reduce_383,
  1, 256, :_reduce_none,
  1, 256, :_reduce_none,
  2, 257, :_reduce_386,
  1, 257, :_reduce_387,
  2, 150, :_reduce_388,
  1, 150, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 203, :_reduce_393,
  1, 260, :_reduce_none,
  2, 260, :_reduce_none,
  3, 261, :_reduce_396,
  1, 261, :_reduce_397,
  3, 204, :_reduce_398,
  3, 205, :_reduce_399,
  3, 206, :_reduce_400,
  3, 206, :_reduce_401,
  1, 264, :_reduce_402,
  3, 264, :_reduce_403,
  1, 265, :_reduce_404,
  2, 265, :_reduce_405,
  3, 207, :_reduce_406,
  3, 207, :_reduce_407,
  1, 267, :_reduce_408,
  3, 267, :_reduce_409,
  1, 262, :_reduce_410,
  2, 262, :_reduce_411,
  1, 263, :_reduce_412,
  2, 263, :_reduce_413,
  1, 266, :_reduce_414,
  0, 269, :_reduce_415,
  3, 266, :_reduce_416,
  0, 270, :_reduce_417,
  4, 266, :_reduce_418,
  1, 268, :_reduce_419,
  1, 268, :_reduce_420,
  1, 268, :_reduce_421,
  1, 268, :_reduce_none,
  2, 188, :_reduce_423,
  1, 188, :_reduce_424,
  1, 271, :_reduce_none,
  1, 271, :_reduce_none,
  1, 271, :_reduce_none,
  1, 271, :_reduce_none,
  3, 259, :_reduce_429,
  1, 258, :_reduce_430,
  1, 258, :_reduce_431,
  2, 258, :_reduce_none,
  2, 258, :_reduce_none,
  1, 182, :_reduce_434,
  1, 182, :_reduce_435,
  1, 182, :_reduce_436,
  1, 182, :_reduce_437,
  1, 182, :_reduce_438,
  1, 182, :_reduce_439,
  1, 182, :_reduce_440,
  1, 182, :_reduce_441,
  1, 182, :_reduce_442,
  1, 182, :_reduce_443,
  1, 182, :_reduce_444,
  1, 208, :_reduce_445,
  1, 158, :_reduce_446,
  1, 161, :_reduce_447,
  1, 161, :_reduce_none,
  1, 217, :_reduce_449,
  3, 217, :_reduce_450,
  2, 217, :_reduce_451,
  4, 219, :_reduce_452,
  2, 219, :_reduce_453,
  6, 272, :_reduce_454,
  4, 272, :_reduce_455,
  4, 272, :_reduce_456,
  2, 272, :_reduce_457,
  4, 272, :_reduce_458,
  2, 272, :_reduce_459,
  2, 272, :_reduce_460,
  1, 272, :_reduce_461,
  0, 272, :_reduce_462,
  1, 275, :_reduce_none,
  1, 275, :_reduce_464,
  1, 276, :_reduce_465,
  1, 276, :_reduce_466,
  1, 276, :_reduce_467,
  1, 276, :_reduce_468,
  1, 277, :_reduce_469,
  3, 277, :_reduce_470,
  1, 279, :_reduce_471,
  3, 279, :_reduce_none,
  1, 280, :_reduce_473,
  3, 280, :_reduce_474,
  1, 278, :_reduce_none,
  4, 278, :_reduce_none,
  3, 278, :_reduce_none,
  2, 278, :_reduce_none,
  1, 278, :_reduce_none,
  1, 247, :_reduce_480,
  3, 247, :_reduce_481,
  3, 281, :_reduce_482,
  1, 273, :_reduce_483,
  3, 273, :_reduce_484,
  1, 282, :_reduce_none,
  1, 282, :_reduce_none,
  2, 248, :_reduce_487,
  1, 248, :_reduce_488,
  1, 283, :_reduce_none,
  1, 283, :_reduce_none,
  2, 245, :_reduce_491,
  2, 274, :_reduce_492,
  0, 274, :_reduce_493,
  1, 220, :_reduce_494,
  4, 220, :_reduce_495,
  0, 209, :_reduce_496,
  2, 209, :_reduce_497,
  1, 194, :_reduce_498,
  3, 194, :_reduce_499,
  3, 284, :_reduce_500,
  2, 284, :_reduce_501,
  1, 175, :_reduce_none,
  1, 175, :_reduce_none,
  1, 175, :_reduce_none,
  1, 171, :_reduce_none,
  1, 171, :_reduce_none,
  1, 171, :_reduce_none,
  1, 171, :_reduce_none,
  1, 251, :_reduce_none,
  1, 251, :_reduce_none,
  1, 251, :_reduce_none,
  1, 221, :_reduce_none,
  1, 221, :_reduce_none,
  0, 142, :_reduce_none,
  1, 142, :_reduce_none,
  0, 189, :_reduce_none,
  1, 189, :_reduce_none,
  0, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 218, :_reduce_none,
  1, 218, :_reduce_none,
  1, 144, :_reduce_none,
  2, 144, :_reduce_none,
  0, 191, :_reduce_525 ]

racc_reduce_n = 526

racc_shift_n = 912

racc_token_table = {
  false => 0,
  :error => 1,
  :kCLASS => 2,
  :kMODULE => 3,
  :kDEF => 4,
  :kUNDEF => 5,
  :kBEGIN => 6,
  :kRESCUE => 7,
  :kENSURE => 8,
  :kEND => 9,
  :kIF => 10,
  :kUNLESS => 11,
  :kTHEN => 12,
  :kELSIF => 13,
  :kELSE => 14,
  :kCASE => 15,
  :kWHEN => 16,
  :kWHILE => 17,
  :kUNTIL => 18,
  :kFOR => 19,
  :kBREAK => 20,
  :kNEXT => 21,
  :kREDO => 22,
  :kRETRY => 23,
  :kIN => 24,
  :kDO => 25,
  :kDO_COND => 26,
  :kDO_BLOCK => 27,
  :kDO_LAMBDA => 28,
  :kRETURN => 29,
  :kYIELD => 30,
  :kSUPER => 31,
  :kSELF => 32,
  :kNIL => 33,
  :kTRUE => 34,
  :kFALSE => 35,
  :kAND => 36,
  :kOR => 37,
  :kNOT => 38,
  :kIF_MOD => 39,
  :kUNLESS_MOD => 40,
  :kWHILE_MOD => 41,
  :kUNTIL_MOD => 42,
  :kRESCUE_MOD => 43,
  :kALIAS => 44,
  :kDEFINED => 45,
  :klBEGIN => 46,
  :klEND => 47,
  :k__LINE__ => 48,
  :k__FILE__ => 49,
  :k__ENCODING__ => 50,
  :tIDENTIFIER => 51,
  :tFID => 52,
  :tGVAR => 53,
  :tIVAR => 54,
  :tCONSTANT => 55,
  :tLABEL => 56,
  :tCVAR => 57,
  :tNTH_REF => 58,
  :tBACK_REF => 59,
  :tSTRING_CONTENT => 60,
  :tINTEGER => 61,
  :tFLOAT => 62,
  :tREGEXP_END => 63,
  :tUPLUS => 64,
  :tUMINUS => 65,
  "-@NUM" => 66,
  :tPOW => 67,
  :tCMP => 68,
  :tEQ => 69,
  :tEQQ => 70,
  :tNEQ => 71,
  :tGEQ => 72,
  :tLEQ => 73,
  :tANDOP => 74,
  :tOROP => 75,
  :tMATCH => 76,
  :tNMATCH => 77,
  :tDOT => 78,
  :tDOT2 => 79,
  :tDOT3 => 80,
  :tAREF => 81,
  :tASET => 82,
  :tLSHFT => 83,
  :tRSHFT => 84,
  :tCOLON2 => 85,
  :tCOLON3 => 86,
  :tOP_ASGN => 87,
  :tASSOC => 88,
  :tLPAREN => 89,
  :tLPAREN2 => 90,
  :tRPAREN => 91,
  :tLPAREN_ARG => 92,
  :ARRAY_BEG => 93,
  :tRBRACK => 94,
  :tLBRACE => 95,
  :tLBRACE_ARG => 96,
  :tSTAR => 97,
  :tSTAR2 => 98,
  :tAMPER => 99,
  :tAMPER2 => 100,
  :tTILDE => 101,
  :tPERCENT => 102,
  :tDIVIDE => 103,
  :tPLUS => 104,
  :tMINUS => 105,
  :tLT => 106,
  :tGT => 107,
  :tPIPE => 108,
  :tBANG => 109,
  :tCARET => 110,
  :tLCURLY => 111,
  :tRCURLY => 112,
  :tBACK_REF2 => 113,
  :tSYMBEG => 114,
  :tSTRING_BEG => 115,
  :tXSTRING_BEG => 116,
  :tREGEXP_BEG => 117,
  :tWORDS_BEG => 118,
  :tAWORDS_BEG => 119,
  :tSTRING_DBEG => 120,
  :tSTRING_DVAR => 121,
  :tSTRING_END => 122,
  :tSTRING => 123,
  :tSYMBOL => 124,
  :tNL => 125,
  :tEH => 126,
  :tCOLON => 127,
  :tCOMMA => 128,
  :tSPACE => 129,
  :tSEMI => 130,
  :tLAMBDA => 131,
  :tLAMBEG => 132,
  :tLBRACK2 => 133,
  :tLBRACK => 134,
  :tEQL => 135,
  :tLOWEST => 136,
  "{" => 137 }

racc_nt_base = 138

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "kCLASS",
  "kMODULE",
  "kDEF",
  "kUNDEF",
  "kBEGIN",
  "kRESCUE",
  "kENSURE",
  "kEND",
  "kIF",
  "kUNLESS",
  "kTHEN",
  "kELSIF",
  "kELSE",
  "kCASE",
  "kWHEN",
  "kWHILE",
  "kUNTIL",
  "kFOR",
  "kBREAK",
  "kNEXT",
  "kREDO",
  "kRETRY",
  "kIN",
  "kDO",
  "kDO_COND",
  "kDO_BLOCK",
  "kDO_LAMBDA",
  "kRETURN",
  "kYIELD",
  "kSUPER",
  "kSELF",
  "kNIL",
  "kTRUE",
  "kFALSE",
  "kAND",
  "kOR",
  "kNOT",
  "kIF_MOD",
  "kUNLESS_MOD",
  "kWHILE_MOD",
  "kUNTIL_MOD",
  "kRESCUE_MOD",
  "kALIAS",
  "kDEFINED",
  "klBEGIN",
  "klEND",
  "k__LINE__",
  "k__FILE__",
  "k__ENCODING__",
  "tIDENTIFIER",
  "tFID",
  "tGVAR",
  "tIVAR",
  "tCONSTANT",
  "tLABEL",
  "tCVAR",
  "tNTH_REF",
  "tBACK_REF",
  "tSTRING_CONTENT",
  "tINTEGER",
  "tFLOAT",
  "tREGEXP_END",
  "tUPLUS",
  "tUMINUS",
  "\"-@NUM\"",
  "tPOW",
  "tCMP",
  "tEQ",
  "tEQQ",
  "tNEQ",
  "tGEQ",
  "tLEQ",
  "tANDOP",
  "tOROP",
  "tMATCH",
  "tNMATCH",
  "tDOT",
  "tDOT2",
  "tDOT3",
  "tAREF",
  "tASET",
  "tLSHFT",
  "tRSHFT",
  "tCOLON2",
  "tCOLON3",
  "tOP_ASGN",
  "tASSOC",
  "tLPAREN",
  "tLPAREN2",
  "tRPAREN",
  "tLPAREN_ARG",
  "ARRAY_BEG",
  "tRBRACK",
  "tLBRACE",
  "tLBRACE_ARG",
  "tSTAR",
  "tSTAR2",
  "tAMPER",
  "tAMPER2",
  "tTILDE",
  "tPERCENT",
  "tDIVIDE",
  "tPLUS",
  "tMINUS",
  "tLT",
  "tGT",
  "tPIPE",
  "tBANG",
  "tCARET",
  "tLCURLY",
  "tRCURLY",
  "tBACK_REF2",
  "tSYMBEG",
  "tSTRING_BEG",
  "tXSTRING_BEG",
  "tREGEXP_BEG",
  "tWORDS_BEG",
  "tAWORDS_BEG",
  "tSTRING_DBEG",
  "tSTRING_DVAR",
  "tSTRING_END",
  "tSTRING",
  "tSYMBOL",
  "tNL",
  "tEH",
  "tCOLON",
  "tCOMMA",
  "tSPACE",
  "tSEMI",
  "tLAMBDA",
  "tLAMBEG",
  "tLBRACK2",
  "tLBRACK",
  "tEQL",
  "tLOWEST",
  "\"{\"",
  "$start",
  "program",
  "top_compstmt",
  "top_stmts",
  "opt_terms",
  "top_stmt",
  "terms",
  "stmt",
  "bodystmt",
  "compstmt",
  "opt_rescue",
  "opt_else",
  "opt_ensure",
  "stmts",
  "fitem",
  "undef_list",
  "expr_value",
  "lhs",
  "command_call",
  "mlhs",
  "var_lhs",
  "primary_value",
  "aref_args",
  "backref",
  "mrhs",
  "arg_value",
  "expr",
  "@1",
  "arg",
  "command",
  "block_command",
  "call_args",
  "block_call",
  "operation2",
  "command_args",
  "cmd_brace_block",
  "opt_block_var",
  "operation",
  "mlhs_basic",
  "mlhs_entry",
  "mlhs_head",
  "mlhs_item",
  "mlhs_node",
  "mlhs_post",
  "variable",
  "cname",
  "cpath",
  "fname",
  "op",
  "reswords",
  "symbol",
  "opt_nl",
  "primary",
  "none",
  "args",
  "trailer",
  "assocs",
  "paren_args",
  "opt_paren_args",
  "opt_block_arg",
  "block_arg",
  "call_args2",
  "open_args",
  "@2",
  "literal",
  "strings",
  "xstring",
  "regexp",
  "words",
  "awords",
  "var_ref",
  "assoc_list",
  "brace_block",
  "method_call",
  "lambda",
  "then",
  "if_tail",
  "do",
  "case_body",
  "superclass",
  "term",
  "f_arglist",
  "singleton",
  "dot_or_colon",
  "@3",
  "@4",
  "@5",
  "@6",
  "@7",
  "@8",
  "@9",
  "@10",
  "@11",
  "@12",
  "@13",
  "@14",
  "@15",
  "@16",
  "@17",
  "@18",
  "f_larglist",
  "lambda_body",
  "block_param",
  "@19",
  "f_block_optarg",
  "f_block_opt",
  "block_args_tail",
  "f_block_arg",
  "opt_block_args_tail",
  "f_arg",
  "f_rest_arg",
  "do_block",
  "@20",
  "operation3",
  "@21",
  "@22",
  "cases",
  "@23",
  "exc_list",
  "exc_var",
  "numeric",
  "dsym",
  "string",
  "string1",
  "string_contents",
  "xstring_contents",
  "word_list",
  "word",
  "string_content",
  "qword_list",
  "string_dvar",
  "@24",
  "@25",
  "sym",
  "f_args",
  "f_optarg",
  "opt_f_block_arg",
  "f_norm_arg",
  "f_bad_arg",
  "f_arg_item",
  "f_margs",
  "f_marg",
  "f_marg_list",
  "f_opt",
  "restarg_mark",
  "blkarg_mark",
  "assoc" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

def _reduce_1(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_2(val, _values, result)
                      comp = new_compstmt val[0]
                      if comp and comp.type == :begin and comp.size == 2
                        result = comp[1]
                        result.line = comp.line
                      else
                        result = comp
                      end
                    
    result
end

def _reduce_3(val, _values, result)
                      result = new_block
                    
    result
end

def _reduce_4(val, _values, result)
                      result = new_block val[0]
                    
    result
end

def _reduce_5(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

# reduce 6 omitted

def _reduce_7(val, _values, result)
                      result = val[2]
                    
    result
end

def _reduce_8(val, _values, result)
                      result = new_body val[0], val[1], val[2], val[3]
                    
    result
end

def _reduce_9(val, _values, result)
                      comp = new_compstmt val[0]
                      if comp and comp.type == :begin and comp.size == 2
                        result = comp[1]
                        result.line = comp.line
                      else
                        result = comp
                      end
                    
    result
end

def _reduce_10(val, _values, result)
                      result = new_block
                    
    result
end

def _reduce_11(val, _values, result)
                      result = new_block val[0]
                    
    result
end

def _reduce_12(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_13(val, _values, result)
                      lexer.lex_state = :expr_fname
                    
    result
end

def _reduce_14(val, _values, result)
                      result = s(:alias, val[1], val[3])
                    
    result
end

def _reduce_15(val, _values, result)
                      result = s(:valias, val[1].intern, val[2].intern)
                    
    result
end

# reduce 16 omitted

def _reduce_17(val, _values, result)
                      result = s(:valias, val[1].intern, val[2].intern)
                    
    result
end

def _reduce_18(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_19(val, _values, result)
                      result = new_if val[2], val[0], nil
                    
    result
end

def _reduce_20(val, _values, result)
                      result = new_if val[2], nil, val[0]
                    
    result
end

def _reduce_21(val, _values, result)
                      result = s(:while, val[2], val[0], true)
                    
    result
end

def _reduce_22(val, _values, result)
                      result = s(:until, val[2], val[0], true)
                    
    result
end

def _reduce_23(val, _values, result)
                      result = s(:rescue_mod, val[0], val[2])
                    
    result
end

# reduce 24 omitted

def _reduce_25(val, _values, result)
                      result = new_assign val[0], val[2]
                    
    result
end

def _reduce_26(val, _values, result)
                      result = s(:masgn, val[0], s(:to_ary, val[2]))
                    
    result
end

def _reduce_27(val, _values, result)
                      result = new_op_asgn val[1].intern, val[0], val[2]
                    
    result
end

# reduce 28 omitted

def _reduce_29(val, _values, result)
                      result = s(:op_asgn2, val[0], "#{val[2]}=".intern, val[3].intern, val[4])
                    
    result
end

# reduce 30 omitted

# reduce 31 omitted

# reduce 32 omitted

def _reduce_33(val, _values, result)
                      result = new_assign val[0], s(:svalue, val[2])
                    
    result
end

def _reduce_34(val, _values, result)
                      result = s(:masgn, val[0], s(:to_ary, val[2]))
                    
    result
end

def _reduce_35(val, _values, result)
                      result = s(:masgn, val[0], val[2])
                    
    result
end

# reduce 36 omitted

# reduce 37 omitted

def _reduce_38(val, _values, result)
                      result = s(:and, val[0], val[2])
                      result.line = val[0].line
                    
    result
end

def _reduce_39(val, _values, result)
                      result = s(:or, val[0], val[2])
                      result.line = val[0].line
                    
    result
end

def _reduce_40(val, _values, result)
                      result = s(:not, val[1])
                      result.line = val[1].line
                    
    result
end

def _reduce_41(val, _values, result)
                      result = s(:not, val[1])
                    
    result
end

# reduce 42 omitted

# reduce 43 omitted

# reduce 44 omitted

# reduce 45 omitted

def _reduce_46(val, _values, result)
                      args = val[1]
                      args = args[1] if args.size == 2
                      result = s(:return, args)
                    
    result
end

def _reduce_47(val, _values, result)
                      args = val[1]
                      args = args[1] if args.size == 2
                      result = s(:break, args)
                    
    result
end

def _reduce_48(val, _values, result)
                      args = val[1]
                      args = args[1] if args.size == 2
                      result = s(:next, args)
                    
    result
end

# reduce 49 omitted

# reduce 50 omitted

# reduce 51 omitted

# reduce 52 omitted

def _reduce_53(val, _values, result)
                      result = new_call nil, val[0].intern, val[1]
                    
    result
end

# reduce 54 omitted

def _reduce_55(val, _values, result)
                      result = new_call val[0], val[2].intern, val[3]
                    
    result
end

# reduce 56 omitted

def _reduce_57(val, _values, result)
                    result = new_call val[0], val[2].intern, val[3]
                  
    result
end

# reduce 58 omitted

def _reduce_59(val, _values, result)
                      result = new_super val[1]
                    
    result
end

def _reduce_60(val, _values, result)
                      result = new_yield val[1]
                    
    result
end

def _reduce_61(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_62(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_63(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_64(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_65(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_66(val, _values, result)
                      result = val[0] << val[1]
                    
    result
end

def _reduce_67(val, _values, result)
                      result = val[0] << s(:splat, val[2])
                    
    result
end

# reduce 68 omitted

def _reduce_69(val, _values, result)
                      result = val[0] << s(:splat)
                    
    result
end

# reduce 70 omitted

def _reduce_71(val, _values, result)
                      result = s(:array, s(:splat, val[1]))
                    
    result
end

def _reduce_72(val, _values, result)
                      result = s(:array, s(:splat))
                    
    result
end

# reduce 73 omitted

def _reduce_74(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_75(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_76(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

def _reduce_77(val, _values, result)
                      result = val[0] << val[1]
                    
    result
end

# reduce 78 omitted

# reduce 79 omitted

def _reduce_80(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_81(val, _values, result)
                      args = val[2]
                      args.type = :arglist if args.type == :array
                      result = s(:attrasgn, val[0], :[]=, args)
                    
    result
end

def _reduce_82(val, _values, result)
                      result = new_call val[0], val[2].intern, s(:arglist)
                    
    result
end

# reduce 83 omitted

# reduce 84 omitted

# reduce 85 omitted

# reduce 86 omitted

# reduce 87 omitted

def _reduce_88(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_89(val, _values, result)
                      args = val[2]
                      args.type = :arglist if args.type == :array
                      result = s(:attrasgn, val[0], :[]=, args)
                    
    result
end

def _reduce_90(val, _values, result)
                      result = s(:attrasgn, val[0], "#{val[2]}=".intern, s(:arglist))
                    
    result
end

def _reduce_91(val, _values, result)
                      result = s(:attrasgn, val[0], "#{val[2]}=".intern, s(:arglist))
                    
    result
end

def _reduce_92(val, _values, result)
                      result = s(:attrasgn, val[0], "#{val[2]}=".intern, s(:arglist))
                    
    result
end

def _reduce_93(val, _values, result)
                      result = s(:colon2, val[0], val[2].intern)
                    
    result
end

def _reduce_94(val, _values, result)
                      result = s(:colon3, val[1].intern)
                    
    result
end

# reduce 95 omitted

# reduce 96 omitted

def _reduce_97(val, _values, result)
                      result = s(:colon3, val[1].intern)
                    
    result
end

def _reduce_98(val, _values, result)
                      result = val[0].intern
                    
    result
end

def _reduce_99(val, _values, result)
                      result = s(:colon2, val[0], val[2].intern)
                    
    result
end

# reduce 100 omitted

# reduce 101 omitted

# reduce 102 omitted

def _reduce_103(val, _values, result)
                      lexer.lex_state = :expr_end
                      result = val[0]
                    
    result
end

def _reduce_104(val, _values, result)
                      lexer.lex_state = :expr_end
                      result = val[0]
                    
    result
end

def _reduce_105(val, _values, result)
                      result = s(:sym, val[0].intern)
                    
    result
end

# reduce 106 omitted

def _reduce_107(val, _values, result)
                      result = s(:undef, val[0])
                    
    result
end

def _reduce_108(val, _values, result)
                      result = val[0] << val[2]
                    
    result
end

# reduce 109 omitted

# reduce 110 omitted

# reduce 111 omitted

# reduce 112 omitted

# reduce 113 omitted

# reduce 114 omitted

# reduce 115 omitted

# reduce 116 omitted

# reduce 117 omitted

# reduce 118 omitted

# reduce 119 omitted

# reduce 120 omitted

# reduce 121 omitted

# reduce 122 omitted

# reduce 123 omitted

# reduce 124 omitted

# reduce 125 omitted

# reduce 126 omitted

# reduce 127 omitted

# reduce 128 omitted

# reduce 129 omitted

# reduce 130 omitted

# reduce 131 omitted

# reduce 132 omitted

# reduce 133 omitted

# reduce 134 omitted

# reduce 135 omitted

# reduce 136 omitted

# reduce 137 omitted

# reduce 138 omitted

# reduce 139 omitted

# reduce 140 omitted

# reduce 141 omitted

# reduce 142 omitted

# reduce 143 omitted

# reduce 144 omitted

# reduce 145 omitted

# reduce 146 omitted

# reduce 147 omitted

# reduce 148 omitted

# reduce 149 omitted

# reduce 150 omitted

# reduce 151 omitted

# reduce 152 omitted

# reduce 153 omitted

# reduce 154 omitted

# reduce 155 omitted

# reduce 156 omitted

# reduce 157 omitted

# reduce 158 omitted

# reduce 159 omitted

# reduce 160 omitted

# reduce 161 omitted

# reduce 162 omitted

# reduce 163 omitted

# reduce 164 omitted

# reduce 165 omitted

# reduce 166 omitted

# reduce 167 omitted

# reduce 168 omitted

# reduce 169 omitted

# reduce 170 omitted

# reduce 171 omitted

# reduce 172 omitted

# reduce 173 omitted

# reduce 174 omitted

# reduce 175 omitted

# reduce 176 omitted

# reduce 177 omitted

# reduce 178 omitted

# reduce 179 omitted

# reduce 180 omitted

# reduce 181 omitted

# reduce 182 omitted

def _reduce_183(val, _values, result)
                      result = new_assign val[0], val[2]
                    
    result
end

def _reduce_184(val, _values, result)
                      result = new_assign val[0], s(:rescue_mod, val[2], val[4])
                    
    result
end

def _reduce_185(val, _values, result)
                      result = new_op_asgn val[1].intern, val[0], val[2]
                    
    result
end

def _reduce_186(val, _values, result)
                      args = val[2]
                      args.type = :arglist if args.type == :array
                      result = s(:op_asgn1, val[0], val[2], val[4].intern, val[5])
                      result.line = val[0].line
                    
    result
end

def _reduce_187(val, _values, result)
                      result = s(:op_asgn2, val[0], "#{val[2]}=".intern, val[3].intern, val[4])
                    
    result
end

# reduce 188 omitted

# reduce 189 omitted

# reduce 190 omitted

# reduce 191 omitted

# reduce 192 omitted

def _reduce_193(val, _values, result)
                      result = s(:irange, val[0], val[2])
                      result.line = val[0].line
                    
    result
end

def _reduce_194(val, _values, result)
                      result = s(:erange, val[0], val[2])
                      result.line = val[0].line
                    
    result
end

def _reduce_195(val, _values, result)
                      result = new_call val[0], :"+", s(:arglist, val[2])
                    
    result
end

def _reduce_196(val, _values, result)
                      result = new_call val[0], :"-", s(:arglist, val[2])
                    
    result
end

def _reduce_197(val, _values, result)
                      result = new_call val[0], :"*", s(:arglist, val[2])
                    
    result
end

def _reduce_198(val, _values, result)
                      result = new_call val[0], :"/", s(:arglist, val[2])
                    
    result
end

def _reduce_199(val, _values, result)
                      result = new_call val[0], :"%", s(:arglist, val[2])
                    
    result
end

def _reduce_200(val, _values, result)
                      result = new_call val[0], :"**", s(:arglist, val[2])
                    
    result
end

# reduce 201 omitted

# reduce 202 omitted

def _reduce_203(val, _values, result)
                      result = new_call val[1], :"+@", s(:arglist)
                      result = val[1] if [:int, :float].include? val[1].type
                    
    result
end

def _reduce_204(val, _values, result)
                      result = new_call val[1], :"-@", s(:arglist)
                      if val[1].type == :int
                        val[1][1] = -val[1][1]
                        result = val[1]
                      elsif val[1].type == :float
                        val[1][1] = -val[1][1].to_f
                        result = val[1]
                      end
                    
    result
end

def _reduce_205(val, _values, result)
                      result = new_call val[0], :"|", s(:arglist, val[2])
                    
    result
end

def _reduce_206(val, _values, result)
                      result = new_call val[0], :"^", s(:arglist, val[2])
                    
    result
end

def _reduce_207(val, _values, result)
                      result = new_call val[0], :"&", s(:arglist, val[2])
                    
    result
end

def _reduce_208(val, _values, result)
                      result = new_call val[0], :"<=>", s(:arglist, val[2])
                    
    result
end

def _reduce_209(val, _values, result)
                      result = new_call val[0], :">", s(:arglist, val[2])
                    
    result
end

def _reduce_210(val, _values, result)
                      result = new_call val[0], :">=", s(:arglist, val[2])
                    
    result
end

def _reduce_211(val, _values, result)
                      result = new_call val[0], :"<", s(:arglist, val[2])
                    
    result
end

def _reduce_212(val, _values, result)
                      result = new_call val[0], :"<=", s(:arglist, val[2])
                    
    result
end

def _reduce_213(val, _values, result)
                      result = new_call val[0], :"==", s(:arglist, val[2])
                    
    result
end

def _reduce_214(val, _values, result)
                      result = new_call val[0], :"===", s(:arglist, val[2])
                    
    result
end

def _reduce_215(val, _values, result)
                      result = s(:not, new_call(val[0], :"==", s(:arglist, val[2])))
                    
    result
end

def _reduce_216(val, _values, result)
                      result = new_call val[0], :"=~", s(:arglist, val[2])
                    
    result
end

def _reduce_217(val, _values, result)
                      result = s(:not, new_call(val[0], :"=~", s(:arglist, val[2])))
                    
    result
end

def _reduce_218(val, _values, result)
                      result = s(:not, val[1])
                    
    result
end

def _reduce_219(val, _values, result)
                      result = new_call val[1], :"~", s(:arglist)
                    
    result
end

def _reduce_220(val, _values, result)
                      result = new_call val[0], :"<<", s(:arglist, val[2])
                    
    result
end

def _reduce_221(val, _values, result)
                      result = new_call val[0], :">>", s(:arglist, val[2])
                    
    result
end

def _reduce_222(val, _values, result)
                      result = s(:and, val[0], val[2])
                      result.line = val[0].line
                    
    result
end

def _reduce_223(val, _values, result)
                      result = s(:or, val[0], val[2])
                      result.line = val[0].line
                    
    result
end

def _reduce_224(val, _values, result)
                      result = s(:defined, val[2])
                    
    result
end

def _reduce_225(val, _values, result)
                      result = s(:if, val[0], val[2], val[4])
                      result.line = val[0].line
                    
    result
end

# reduce 226 omitted

# reduce 227 omitted

def _reduce_228(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_229(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

def _reduce_230(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_231(val, _values, result)
                      val[0] << s(:hash, *val[2])
                      result = val[0]
                    
    result
end

def _reduce_232(val, _values, result)
                      result = s(:array, s(:hash, *val[0]))
                    
    result
end

def _reduce_233(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_234(val, _values, result)
                      result = val[1]
                    
    result
end

# reduce 235 omitted

# reduce 236 omitted

# reduce 237 omitted

# reduce 238 omitted

def _reduce_239(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

def _reduce_240(val, _values, result)
                      result = val[0]
                      add_block_pass val[0], val[1]
                    
    result
end

def _reduce_241(val, _values, result)
                      result = s(:arglist, s(:hash, *val[0]))
                      add_block_pass result, val[1]
                    
    result
end

def _reduce_242(val, _values, result)
                      result = val[0]
                      result << s(:hash, *val[2])
                    
    result
end

def _reduce_243(val, _values, result)
                      result = s(:arglist)
                      add_block_pass result, val[0]
                    
    result
end

# reduce 244 omitted

# reduce 245 omitted

def _reduce_246(val, _values, result)
                      lexer.cmdarg_push 1
                    
    result
end

def _reduce_247(val, _values, result)
                      lexer.cmdarg_pop
                      result = val[1]
                    
    result
end

# reduce 248 omitted

def _reduce_249(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_250(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_251(val, _values, result)
                      result = s(:block_pass, val[1])
                    
    result
end

def _reduce_252(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_253(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_254(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

def _reduce_255(val, _values, result)
                      result = s(:array, s(:splat, val[1]))
                    
    result
end

def _reduce_256(val, _values, result)
                      result = val[0] << val[2]
                    
    result
end

def _reduce_257(val, _values, result)
                      result  = val[0] << s(:splat, val[3])
                    
    result
end

def _reduce_258(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

# reduce 259 omitted

def _reduce_260(val, _values, result)
                      result = s(:splat, val[1])
                    
    result
end

# reduce 261 omitted

# reduce 262 omitted

# reduce 263 omitted

# reduce 264 omitted

# reduce 265 omitted

# reduce 266 omitted

# reduce 267 omitted

# reduce 268 omitted

# reduce 269 omitted

def _reduce_270(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_271(val, _values, result)
                      result = s(:begin, val[2])
                      result.line = val[1]
                    
    result
end

def _reduce_272(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_273(val, _values, result)
                      result = s(:paren, val[1] || s(:nil))
                    
    result
end

def _reduce_274(val, _values, result)
                      result = s(:colon2, val[0], val[2].intern)
                    
    result
end

def _reduce_275(val, _values, result)
                      result = s(:colon3, val[1])
                    
    result
end

def _reduce_276(val, _values, result)
                      result = new_call val[0], :[], val[2]
                    
    result
end

def _reduce_277(val, _values, result)
                      result = val[1] || s(:array)
                    
    result
end

def _reduce_278(val, _values, result)
                      result = s(:hash, *val[1])
                    
    result
end

def _reduce_279(val, _values, result)
                      result = s(:return)
                    
    result
end

def _reduce_280(val, _values, result)
                      result = new_yield val[2]
                    
    result
end

def _reduce_281(val, _values, result)
                      result = s(:yield)
                    
    result
end

def _reduce_282(val, _values, result)
                      result = s(:yield)
                    
    result
end

def _reduce_283(val, _values, result)
                      result = s(:defined, val[3])
                    
    result
end

def _reduce_284(val, _values, result)
                      result = s(:not, val[2])
                      result.line = val[2].line
                    
    result
end

def _reduce_285(val, _values, result)
                      result = s(:not, s(:nil))
                    
    result
end

def _reduce_286(val, _values, result)
                      result = new_call nil, val[0].intern, s(:arglist)
                      result << val[1]
                    
    result
end

# reduce 287 omitted

def _reduce_288(val, _values, result)
                      val[0] << val[1]
                      result = val[0]
                    
    result
end

def _reduce_289(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_290(val, _values, result)
                      result = new_if val[1], val[3], val[4]
                    
    result
end

def _reduce_291(val, _values, result)
                      result = new_if val[1], val[4], val[3]
                    
    result
end

def _reduce_292(val, _values, result)
                      lexer.cond_push 1
                      result = lexer.line
                    
    result
end

def _reduce_293(val, _values, result)
                      lexer.cond_pop
                    
    result
end

def _reduce_294(val, _values, result)
                      result = s(:while, val[2], val[5], true)
                      result.line = val[1]
                    
    result
end

def _reduce_295(val, _values, result)
                      lexer.cond_push 1
                      result = lexer.line
                    
    result
end

def _reduce_296(val, _values, result)
                      lexer.cond_pop
                    
    result
end

def _reduce_297(val, _values, result)
                      result = s(:until, val[2], val[5], true)
                      result.line = val[1]
                    
    result
end

def _reduce_298(val, _values, result)
                      result = s(:case, val[1], *val[3])
                      result.line = val[1].line
                    
    result
end

def _reduce_299(val, _values, result)
                      result = s(:case, nil, *val[2])
                      # result.line = val[2].line
                    
    result
end

def _reduce_300(val, _values, result)
                      result = s(:case, nil, val[3])
                      # result.line = val[3].line
                    
    result
end

def _reduce_301(val, _values, result)
                      # ...
                    
    result
end

def _reduce_302(val, _values, result)
                      # ...
                    
    result
end

# reduce 303 omitted

def _reduce_304(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_305(val, _values, result)
                      # ...
                    
    result
end

def _reduce_306(val, _values, result)
                      result = new_class val[2], val[3], val[5]
                      result.line = val[1]
                      result.end_line = lexer.line
                    
    result
end

def _reduce_307(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_308(val, _values, result)
                      # ...
                    
    result
end

def _reduce_309(val, _values, result)
                      result = new_sclass val[3], val[6]
                      result.line = val[2]
                    
    result
end

def _reduce_310(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_311(val, _values, result)
                      # ...
                    
    result
end

def _reduce_312(val, _values, result)
                      result = new_module val[2], val[4]
                      result.line = val[1]
                      result.end_line = lexer.line
                    
    result
end

def _reduce_313(val, _values, result)
                      result = lexer.scope_line
                      push_scope
                    
    result
end

def _reduce_314(val, _values, result)
                      result = new_def val[2], nil, val[1], val[3], val[4]
                      pop_scope
                    
    result
end

def _reduce_315(val, _values, result)
                       lexer.lex_state = :expr_fname
                    
    result
end

def _reduce_316(val, _values, result)
                      result = lexer.scope_line
                      push_scope
                    
    result
end

def _reduce_317(val, _values, result)
                      result = new_def val[5], val[1], val[4], val[6], val[7]
                      pop_scope
                    
    result
end

def _reduce_318(val, _values, result)
                      result = s(:break)
                    
    result
end

def _reduce_319(val, _values, result)
                      result = s(:next)
                    
    result
end

def _reduce_320(val, _values, result)
                      result = s(:redo)
                    
    result
end

# reduce 321 omitted

# reduce 322 omitted

# reduce 323 omitted

# reduce 324 omitted

# reduce 325 omitted

# reduce 326 omitted

# reduce 327 omitted

# reduce 328 omitted

# reduce 329 omitted

def _reduce_330(val, _values, result)
                      result = new_call nil, :lambda, s(:arglist)
                      result << new_iter(val[0], val[1])
                    
    result
end

def _reduce_331(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_332(val, _values, result)
                      result = nil
                    
    result
end

# reduce 333 omitted

# reduce 334 omitted

def _reduce_335(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_336(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_337(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_338(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_339(val, _values, result)
                      result = s(:if, val[2], val[4], val[5])
                      result.line = val[1]
                    
    result
end

# reduce 340 omitted

def _reduce_341(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_342(val, _values, result)
                      result = s(:block, val[0])
                    
    result
end

def _reduce_343(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_344(val, _values, result)
                      result = new_assign new_assignable(s(:identifier, val[0].intern)), val[2]
                    
    result
end

# reduce 345 omitted

def _reduce_346(val, _values, result)
                      result = 0
                    
    result
end

def _reduce_347(val, _values, result)
                      result = 0
                    
    result
end

def _reduce_348(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_349(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_350(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_351(val, _values, result)
                      nil
                    
    result
end

def _reduce_352(val, _values, result)
                      result = new_block_args val[0], val[2], val[4], val[5]
                    
    result
end

def _reduce_353(val, _values, result)
                      result = new_block_args val[0], val[2], nil, val[3]
                    
    result
end

def _reduce_354(val, _values, result)
                      result = new_block_args val[0], nil, val[2], val[3]
                    
    result
end

def _reduce_355(val, _values, result)
                      result = new_block_args val[0], nil, nil, nil
                    
    result
end

def _reduce_356(val, _values, result)
                      result = new_block_args val[0], nil, nil, val[1]
                    
    result
end

def _reduce_357(val, _values, result)
                      result = new_block_args nil, val[0], val[2], val[3]
                    
    result
end

def _reduce_358(val, _values, result)
                      result = new_block_args nil, val[0], nil, val[1]
                    
    result
end

def _reduce_359(val, _values, result)
                      result = new_block_args nil, nil, val[0], val[1]
                    
    result
end

def _reduce_360(val, _values, result)
                      result = new_block_args nil, nil, nil, val[0]
                    
    result
end

def _reduce_361(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_362(val, _values, result)
                      result = new_iter val[2], val[3]
                      result.line = val[1]
                      pop_scope
                    
    result
end

def _reduce_363(val, _values, result)
                      val[0] << val[1]
                      result = val[0]
                    
    result
end

# reduce 364 omitted

# reduce 365 omitted

def _reduce_366(val, _values, result)
                      result = new_call nil, val[0].intern, val[1]
                    
    result
end

def _reduce_367(val, _values, result)
                      result = new_call val[0], val[2].intern, val[3]
                    
    result
end

def _reduce_368(val, _values, result)
                      result = new_call val[0], :call, val[2]
                    
    result
end

def _reduce_369(val, _values, result)
                      result = new_call val[0], val[2].intern, val[3]
                    
    result
end

def _reduce_370(val, _values, result)
                      result = new_call val[0], val[2].intern, s(:arglist)
                    
    result
end

def _reduce_371(val, _values, result)
                      result = new_super val[1]
                    
    result
end

def _reduce_372(val, _values, result)
                      result = s(:super, nil)
                    
    result
end

def _reduce_373(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_374(val, _values, result)
                      result = new_iter val[2], val[3]
                      result.line = val[1]
                      pop_scope
                    
    result
end

def _reduce_375(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_376(val, _values, result)
                      result = new_iter val[2], val[3]
                      result.line = val[1]
                      pop_scope
                    
    result
end

def _reduce_377(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_378(val, _values, result)
                      part = s(:when, val[2], val[4])
                      part.line = val[2].line
                      result = [part]
                      result.push *val[5] if val[5]
                    
    result
end

def _reduce_379(val, _values, result)
                      result = [val[0]]
                    
    result
end

# reduce 380 omitted

def _reduce_381(val, _values, result)
                      exc = val[1] || s(:array)
                      exc << new_assign(val[2], s(:gvar, '$!'.intern)) if val[2]
                      result = [s(:resbody, exc, val[4])]
                      result.push val[5].first if val[5]
                    
    result
end

def _reduce_382(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_383(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

# reduce 384 omitted

# reduce 385 omitted

def _reduce_386(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_387(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_388(val, _values, result)
                      result = val[1].nil? ? s(:nil) : val[1]
                    
    result
end

# reduce 389 omitted

# reduce 390 omitted

# reduce 391 omitted

# reduce 392 omitted

def _reduce_393(val, _values, result)
                      result = new_str val[0]
                    
    result
end

# reduce 394 omitted

# reduce 395 omitted

def _reduce_396(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_397(val, _values, result)
                      result = s(:str, val[0])
                    
    result
end

def _reduce_398(val, _values, result)
                      result = new_xstr val[1]
                    
    result
end

def _reduce_399(val, _values, result)
                      result = new_regexp val[1], val[2]
                    
    result
end

def _reduce_400(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_401(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_402(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_403(val, _values, result)
                      part = val[1]
                      part = s(:dstr, "", val[1]) if part.type == :evstr
                      result = val[0] << part
                    
    result
end

def _reduce_404(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_405(val, _values, result)
                      result = val[0].concat([val[1]])
                    
    result
end

def _reduce_406(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_407(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_408(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_409(val, _values, result)
                      result = val[0] << s(:str, val[1])
                    
    result
end

def _reduce_410(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_411(val, _values, result)
                      result = str_append val[0], val[1]
                    
    result
end

def _reduce_412(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_413(val, _values, result)
                      result = str_append val[0], val[1]
                    
    result
end

def _reduce_414(val, _values, result)
                      result = s(:str, val[0])
                    
    result
end

def _reduce_415(val, _values, result)
                      result = lexer.strterm
                      lexer.strterm = nil
                    
    result
end

def _reduce_416(val, _values, result)
                      lexer.strterm = val[1]
                      result = s(:evstr, val[2])
                    
    result
end

def _reduce_417(val, _values, result)
                      lexer.cond_push 0
                      lexer.cmdarg_push 0
                      result = lexer.strterm
                      lexer.strterm = nil
                      lexer.lex_state = :expr_beg
                    
    result
end

def _reduce_418(val, _values, result)
                      lexer.strterm = val[1]
                      lexer.cond_lexpop
                      lexer.cmdarg_lexpop
                      result = s(:evstr, val[2])
                    
    result
end

def _reduce_419(val, _values, result)
                      result = s(:gvar, val[0].intern)
                    
    result
end

def _reduce_420(val, _values, result)
                      result = s(:ivar, val[0].intern)
                    
    result
end

def _reduce_421(val, _values, result)
                      result = s(:cvar, val[0].intern)
                    
    result
end

# reduce 422 omitted

def _reduce_423(val, _values, result)
                      result = s(:sym, val[1].intern)
                      lexer.lex_state = :expr_end
                    
    result
end

def _reduce_424(val, _values, result)
                      result = s(:sym, val[0].intern)
                    
    result
end

# reduce 425 omitted

# reduce 426 omitted

# reduce 427 omitted

# reduce 428 omitted

def _reduce_429(val, _values, result)
                      result = new_dsym val[1]
                    
    result
end

def _reduce_430(val, _values, result)
                      result = s(:int, val[0])
                    
    result
end

def _reduce_431(val, _values, result)
                      result = s(:float, val[0])
                    
    result
end

# reduce 432 omitted

# reduce 433 omitted

def _reduce_434(val, _values, result)
                      result = s(:identifier, val[0].intern)
                    
    result
end

def _reduce_435(val, _values, result)
                      result = s(:ivar, val[0].intern)
                    
    result
end

def _reduce_436(val, _values, result)
                      result = s(:gvar, val[0].intern)
                    
    result
end

def _reduce_437(val, _values, result)
                      result = s(:const, val[0].intern)
                    
    result
end

def _reduce_438(val, _values, result)
                      result = s(:cvar, val[0].intern)
                    
    result
end

def _reduce_439(val, _values, result)
                      result = s(:nil)
                    
    result
end

def _reduce_440(val, _values, result)
                      result = s(:self)
                    
    result
end

def _reduce_441(val, _values, result)
                      result = s(:true)
                    
    result
end

def _reduce_442(val, _values, result)
                      result = s(:false)
                    
    result
end

def _reduce_443(val, _values, result)
                      result = s(:str, self.file)
                    
    result
end

def _reduce_444(val, _values, result)
                      result = s(:int, lexer.line)
                    
    result
end

def _reduce_445(val, _values, result)
                      result = new_var_ref val[0]
                    
    result
end

def _reduce_446(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_447(val, _values, result)
                      result = s(:nth_ref, val[0])
                    
    result
end

# reduce 448 omitted

def _reduce_449(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_450(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_451(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_452(val, _values, result)
                      result = val[1]
                      lexer.lex_state = :expr_beg
                    
    result
end

def _reduce_453(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_454(val, _values, result)
                      result = new_args val[0], val[2], val[4], val[5]
                    
    result
end

def _reduce_455(val, _values, result)
                      result = new_args val[0], val[2], nil, val[3]
                    
    result
end

def _reduce_456(val, _values, result)
                      result = new_args val[0], nil, val[2], val[3]
                    
    result
end

def _reduce_457(val, _values, result)
                      result = new_args val[0], nil, nil, val[1]
                    
    result
end

def _reduce_458(val, _values, result)
                      result = new_args nil, val[0], val[2], val[3]
                    
    result
end

def _reduce_459(val, _values, result)
                      result = new_args nil, val[0], nil, val[1]
                    
    result
end

def _reduce_460(val, _values, result)
                      result = new_args nil, nil, val[0], val[1]
                    
    result
end

def _reduce_461(val, _values, result)
                      result = new_args nil, nil, nil, val[0]
                    
    result
end

def _reduce_462(val, _values, result)
                      result = s(:args)
                    
    result
end

# reduce 463 omitted

def _reduce_464(val, _values, result)
                      result = val[0].intern
                      scope.add_local result
                    
    result
end

def _reduce_465(val, _values, result)
                      raise 'formal argument cannot be a constant'
                    
    result
end

def _reduce_466(val, _values, result)
                      raise 'formal argument cannot be an instance variable'
                    
    result
end

def _reduce_467(val, _values, result)
                      raise 'formal argument cannot be a class variable'
                    
    result
end

def _reduce_468(val, _values, result)
                      raise 'formal argument cannot be a global variable'
                    
    result
end

def _reduce_469(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_470(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_471(val, _values, result)
                      result = s(:lasgn, val[0])
                    
    result
end

# reduce 472 omitted

def _reduce_473(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

def _reduce_474(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

# reduce 475 omitted

# reduce 476 omitted

# reduce 477 omitted

# reduce 478 omitted

# reduce 479 omitted

def _reduce_480(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_481(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_482(val, _values, result)
                      result = new_assign new_assignable(s(:identifier, val[0].intern)), val[2]
                    
    result
end

def _reduce_483(val, _values, result)
                      result = s(:block, val[0])
                    
    result
end

def _reduce_484(val, _values, result)
                      result = val[0]
                      val[0] << val[2]
                    
    result
end

# reduce 485 omitted

# reduce 486 omitted

def _reduce_487(val, _values, result)
                      result = "*#{val[1]}".intern
                    
    result
end

def _reduce_488(val, _values, result)
                      result = :"*"
                    
    result
end

# reduce 489 omitted

# reduce 490 omitted

def _reduce_491(val, _values, result)
                      result = "&#{val[1]}".intern
                    
    result
end

def _reduce_492(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_493(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_494(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_495(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_496(val, _values, result)
                      result = []
                    
    result
end

def _reduce_497(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_498(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_499(val, _values, result)
                      result = val[0].push *val[2]
                    
    result
end

def _reduce_500(val, _values, result)
                      result = [val[0], val[2]]
                    
    result
end

def _reduce_501(val, _values, result)
                      result = [s(:sym, val[0].intern), val[1]]
                    
    result
end

# reduce 502 omitted

# reduce 503 omitted

# reduce 504 omitted

# reduce 505 omitted

# reduce 506 omitted

# reduce 507 omitted

# reduce 508 omitted

# reduce 509 omitted

# reduce 510 omitted

# reduce 511 omitted

# reduce 512 omitted

# reduce 513 omitted

# reduce 514 omitted

# reduce 515 omitted

# reduce 516 omitted

# reduce 517 omitted

# reduce 518 omitted

# reduce 519 omitted

# reduce 520 omitted

# reduce 521 omitted

# reduce 522 omitted

# reduce 523 omitted

# reduce 524 omitted

def _reduce_525(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module Opal
