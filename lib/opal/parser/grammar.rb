#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'
module Opal
  class Parser < Racc::Parser


##### State transition tables begin ###

clist = [
'63,64,65,-95,51,-95,274,732,57,58,205,206,578,61,274,59,60,62,258,259',
'66,67,795,622,-100,205,206,257,292,296,90,89,91,92,73,610,219,794,884',
'-68,555,-85,74,293,656,815,94,93,84,50,86,85,87,-101,88,95,96,578,81',
'82,101,205,206,-91,-98,100,600,205,206,-99,-96,101,-98,605,-93,-80,100',
'655,269,817,606,578,269,357,621,578,30,-96,-95,52,273,54,578,32,612',
'611,-93,101,273,584,-101,585,100,776,101,-86,731,-85,-100,100,79,73',
'75,76,77,78,-95,-96,-95,74,80,-95,699,101,-98,577,-91,56,100,-91,53',
'63,64,65,-540,51,297,83,-450,57,58,-97,554,-85,61,-450,59,60,62,258',
'259,66,67,-85,309,-92,205,206,257,292,296,90,89,91,92,-91,-89,219,101',
'599,577,-90,-87,100,293,-91,-85,94,93,84,50,86,85,362,-97,88,95,96,101',
'81,82,722,101,100,577,908,101,100,577,656,820,100,585,101,227,577,656',
'-93,100,-93,652,-101,-93,-101,363,782,-101,214,-539,-100,52,-100,54',
'-99,-100,839,820,656,-96,732,-96,-90,655,-96,783,-98,227,-98,-88,655',
'-98,79,73,75,76,77,78,732,309,-539,74,80,-97,-87,-97,-86,-89,-97,56',
'-92,655,53,63,64,65,-95,51,297,83,547,57,58,549,205,206,61,-86,59,60',
'62,258,259,66,67,-94,-462,-88,820,455,257,292,296,90,89,91,92,-540,-90',
'219,274,-540,712,534,-539,-88,41,883,826,94,93,84,50,86,85,87,827,88',
'95,96,-87,81,82,-89,38,39,-92,101,610,731,547,615,100,549,-90,-99,-93',
'-99,760,-101,-99,-88,561,-86,-90,101,210,731,757,214,100,-88,52,-100',
'54,564,-87,-94,-453,-89,40,309,-92,-460,269,-453,-87,269,218,-89,-460',
'830,-92,79,73,75,76,77,78,-86,345,344,74,80,273,-459,923,612,611,-86',
'56,760,-459,53,63,64,65,-458,51,37,83,757,57,58,-458,610,831,61,610',
'59,60,62,258,259,66,67,547,758,760,546,564,257,292,296,90,89,91,92,757',
'610,219,342,341,345,344,610,534,41,302,303,94,93,84,50,86,85,87,-455',
'88,95,96,610,81,82,-455,38,39,413,529,530,345,344,415,414,612,611,608',
'612,611,613,758,265,266,205,206,-456,-91,210,-462,267,214,664,-456,52',
'547,54,-100,549,612,611,608,40,203,450,612,611,617,758,101,218,451,345',
'344,100,79,73,75,76,77,78,612,611,623,74,80,834,-457,923,-85,634,633',
'56,760,-457,53,63,64,65,-93,51,37,83,757,57,58,345,344,820,61,843,59',
'60,62,258,259,66,67,453,204,452,839,820,257,292,296,90,89,91,92,-89',
'-87,219,342,341,345,344,401,402,41,-98,-96,94,93,84,50,86,85,87,844',
'88,95,96,227,81,82,531,38,39,-92,846,227,526,537,707,526,523,706,705',
'-101,538,535,758,524,566,847,337,335,334,210,336,101,214,536,224,52',
'100,54,226,225,222,223,224,40,-290,-290,226,225,222,223,101,218,-290',
'227,699,100,79,73,75,76,77,78,-539,101,849,74,80,453,100,452,522,416',
'525,56,227,540,53,63,64,65,227,51,37,83,224,57,58,309,226,225,61,857',
'59,60,62,258,259,66,67,-290,403,-290,859,862,257,28,27,90,89,91,92,224',
'863,219,865,226,225,867,628,869,41,688,871,94,93,84,50,86,85,87,262',
'88,95,96,-269,81,82,686,38,39,227,231,236,237,238,233,235,243,244,239',
'240,392,389,220,221,-80,685,241,242,683,210,550,675,214,674,309,52,551',
'54,886,256,224,887,230,40,226,225,222,223,234,232,228,218,229,888,714',
'889,79,260,75,76,77,78,891,892,699,74,80,492,245,714,-236,894,558,56',
'-267,898,53,63,64,65,561,51,37,83,227,57,58,903,309,905,61,301,59,60',
'62,258,259,66,67,342,341,345,344,227,257,28,27,90,89,91,92,227,227,219',
'342,341,345,344,628,911,41,913,914,94,93,84,50,86,85,87,262,88,95,96',
'309,81,82,562,38,39,227,231,236,237,238,233,235,243,244,239,240,564',
'573,220,221,574,927,241,242,-270,210,300,405,214,269,246,52,930,54,632',
'256,224,973,230,40,226,225,222,223,234,232,228,218,229,-540,564,867',
'79,260,75,76,77,78,526,955,940,74,80,941,245,631,956,-267,198,56,946',
'862,53,-259,-259,-259,948,-259,37,83,867,-259,-259,867,869,630,-259',
'590,-259,-259,-259,-259,-259,-259,-259,103,104,105,106,107,-259,-259',
'-259,-259,-259,-259,-259,197,566,-259,337,335,334,954,336,589,-259,196',
'975,-259,-259,-259,-259,-259,-259,-259,-259,-259,-259,-259,627,-259',
'-259,957,-259,-259,227,231,236,237,238,233,235,243,244,239,240,976,195',
'220,221,108,963,241,242,591,-259,705,624,-259,269,620,-259,97,-259,616',
'-259,224,-259,230,-259,226,225,222,223,234,232,228,-259,229,592,499',
'499,-259,-259,-259,-259,-259,-259,499,499,-268,-259,-259,492,245,-67',
'-236,797,798,-259,778,516,-259,63,64,65,8,51,-259,-259,490,57,58,490',
'492,488,61,517,59,60,62,23,24,66,67,103,104,105,106,107,22,28,27,90',
'89,91,92,873,874,17,215,875,95,96,807,7,41,6,9,94,93,84,50,86,85,87',
'457,88,95,96,456,81,82,518,38,39,227,231,236,237,238,233,235,243,244',
'239,240,809,810,220,221,527,454,241,242,735,36,585,699,30,814,727,52',
'278,54,269,32,224,724,230,40,226,225,222,223,234,232,228,18,229,269',
',,79,73,75,76,77,78,203,201,,74,80,,245,799,202,,,56,,,53,63,64,65,',
'51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,103,104,105,106,107,257',
'28,27,90,89,91,92,,,219,,,,199,,200,41,,,94,93,84,50,86,85,87,262,88',
'95,96,,81,82,,38,39,227,231,236,237,238,233,235,243,244,239,240,,,220',
'221,,,241,242,,210,,,214,,,52,,54,,256,224,,230,40,226,225,222,223,234',
'232,228,218,229,,,,79,260,75,76,77,78,526,596,,74,80,,245,,829,,,56',
',,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28',
'27,90,89,91,92,,,17,,,,595,,525,41,,,94,93,84,50,86,85,87,,88,95,96',
',81,82,,38,39,227,231,236,237,238,233,235,243,244,239,240,,,220,221',
',,241,242,,210,,,214,,,52,,54,,,224,,230,40,226,225,222,223,234,232',
'228,18,229,,,,79,73,75,76,77,78,-335,-335,,74,80,,245,,-335,,,56,,,53',
'63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27',
'90,89,91,92,,,17,,,,-335,,-335,41,,,94,93,84,50,86,85,87,,88,95,96,',
'81,82,,38,39,227,231,236,237,238,233,235,243,244,239,240,,,220,221,',
',241,242,,210,,,214,,,52,,54,,,224,,230,40,226,225,222,223,234,232,228',
'18,229,,,,79,73,75,76,77,78,526,587,,74,80,,245,,588,,,56,,,53,-542',
'-542,-542,,-542,37,83,,-542,-542,,,,-542,,-542,-542,-542,-542,-542,-542',
'-542,,,,,,-542,-542,-542,-542,-542,-542,-542,,,-542,,,,586,,589,-542',
',,-542,-542,-542,-542,-542,-542,-542,-542,-542,-542,-542,,-542,-542',
',-542,-542,227,231,236,237,238,233,235,243,244,239,240,,,220,221,,,241',
'242,,-542,,,-542,-542,,-542,,-542,,-542,224,-542,230,-542,226,225,222',
'223,234,232,228,-542,229,,,,-542,-542,-542,-542,-542,-542,526,596,,-542',
'-542,,245,,594,,,-542,,,-542,-541,-541,-541,,-541,-542,-542,,-541,-541',
',,,-541,,-541,-541,-541,-541,-541,-541,-541,,,,,,-541,-541,-541,-541',
'-541,-541,-541,,,-541,,,,595,,525,-541,,,-541,-541,-541,-541,-541,-541',
'-541,-541,-541,-541,-541,,-541,-541,,-541,-541,227,231,236,237,238,233',
'235,243,244,239,240,,,220,221,,,241,242,,-541,,,-541,-541,,-541,,-541',
',-541,224,-541,230,-541,226,225,222,223,234,232,228,-541,229,,,,-541',
'-541,-541,-541,-541,-541,-288,-288,,-541,-541,,245,,-288,,,-541,,,-541',
'-259,-259,-259,,-259,-541,-541,,-259,-259,,,,-259,,-259,-259,-259,-259',
'-259,-259,-259,,,,,,-259,-259,-259,-259,-259,-259,-259,,,-259,,,,-288',
',-288,-259,,,-259,-259,-259,-259,-259,-259,-259,-259,-259,-259,-259',
',-259,-259,,-259,-259,227,231,236,237,238,233,235,243,244,239,240,,',
'220,221,,,241,242,,-259,,,-259,269,,-259,,-259,,-259,224,-259,230,-259',
'226,225,222,223,234,232,228,-259,229,,,,-259,-259,-259,-259,-259,-259',
'-287,-287,,-259,-259,,245,,-287,,,-259,,-540,-259,63,64,65,,51,-259',
'-259,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91',
'92,,,219,,,,-287,,-287,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,227,231,236,237,238,233,235,243,244,239,240,,,220,221,,,241,242,',
'210,,,214,,,52,,54,,,224,,230,40,226,225,222,223,234,232,228,218,229',
',,,79,73,75,76,77,78,,,,74,80,,245,,,,,56,,,53,63,64,65,8,51,37,83,',
'57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,',
',,7,41,,9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,227,231,236,237',
'238,233,235,243,244,239,240,,,220,221,,,241,242,,36,,,30,,,52,,54,,32',
'224,,230,40,226,225,222,223,234,232,228,18,229,,,,79,73,75,76,77,78',
',,,74,80,,245,,,,,56,,,53,63,64,65,8,51,37,83,,57,58,,,,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,227,231,236,237,238,233,235,243,244',
'239,240,,,220,221,,,241,242,,36,,,30,,,52,,54,,32,224,,230,40,226,225',
'222,223,234,232,228,18,229,,,,79,73,75,76,77,78,,,,74,80,,245,,,,,56',
',,53,63,64,65,8,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22',
'28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95,96,',
'81,82,,38,39,227,231,236,237,238,233,235,243,244,239,240,,,220,221,',
',241,242,,36,,,30,,,52,,54,,32,224,,230,40,226,225,222,223,234,232,228',
'18,229,,,,79,73,75,76,77,78,,,,74,80,,245,,,,,56,,,53,63,64,65,8,51',
'37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,',
',17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,227,231',
'236,237,238,233,235,243,244,239,240,,,220,221,,,241,242,,36,,,30,,,52',
',54,,32,224,,230,40,226,225,222,223,234,232,228,18,229,,,,79,73,75,76',
'77,78,,,,74,80,,245,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59',
'60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94',
'93,84,50,86,85,87,,88,95,96,,81,82,,38,39,227,231,236,237,238,233,235',
'243,244,239,240,,,220,221,,,241,242,,210,,,214,,,52,,54,,661,224,254',
'230,40,226,225,222,223,234,232,228,218,229,,,,79,73,75,76,77,78,,,,74',
'80,,245,,,,,56,,,53,63,64,65,8,51,37,83,,57,58,,,,61,,59,60,62,23,24',
'66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85',
'87,,88,95,96,,81,82,,38,39,227,231,236,237,238,233,235,243,244,239,240',
',,220,221,,,241,242,,36,,,30,,,52,,54,,32,224,,230,40,226,225,222,223',
'234,232,228,18,229,,,,79,73,75,76,77,78,,,,74,80,,245,,,,,56,,,53,63',
'64,65,8,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90',
'89,91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,227,231,236,237,238,233,235,243,244,239,240,,,220,221,,,241,242,',
'36,,,30,,,52,,54,,32,224,,230,40,226,225,222,223,234,232,228,18,229',
',,,79,73,75,76,77,78,,,,74,80,,245,,,,,56,,,53,63,64,65,,51,37,83,,57',
'58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219',
',,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,566,,337,335',
'334,,336,,,,,,,,,328,,337,335,334,210,336,,214,,,52,,54,,661,,,,40,',
',566,569,337,335,334,218,336,,572,,79,73,75,76,77,78,339,,,74,80,,,342',
'341,345,344,56,,,53,63,64,65,800,51,37,83,569,57,58,-537,,,61,572,59',
'60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,566,219,337,335,334',
',336,,293,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,-453,-453,,227,,',
',,-453,,,,569,-537,,,,,,836,241,242,935,,,214,,,52,,54,,,-537,224,,230',
',226,225,222,223,,,228,,229,,,79,73,75,76,77,78,-453,,-453,74,80,,,',
',,,56,,,53,63,64,65,,51,297,83,,57,58,,,,61,,59,60,62,23,24,66,67,,',
',,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,84,50,86,85,87,,88,95',
'96,227,81,82,,38,39,,,,,,,,,,,,241,242,,,328,,337,335,334,210,336,,214',
'215,224,52,230,54,226,225,222,223,,40,228,,229,,,,,18,,,,,79,73,75,76',
'77,78,339,323,,74,80,,,342,341,345,344,56,,,53,63,64,65,,51,37,83,,57',
'58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,219,,,,,',
',41,,,94,93,84,50,86,85,87,,88,95,96,227,81,82,,38,39,,,,,,,,,,,,241',
'242,,,328,,337,335,334,210,336,,214,,224,52,230,54,226,225,222,223,',
'40,228,,229,,,,,218,,,,,79,73,75,76,77,78,339,,557,74,80,,,342,341,345',
'344,56,,,53,63,64,65,8,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,',
',,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,328,,337,335,334,36,336,,30,,,52',
',54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,339,,,74,80,,,342,341',
'345,344,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66',
'67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87',
'262,88,95,96,,81,82,,38,39,227,-560,-560,-560,-560,233,235,,,-560,-560',
',,,,,,241,242,,210,,,214,,,52,,54,,,224,254,230,40,226,225,222,223,234',
'232,228,218,229,,,,79,260,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65',
',51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,28,27,90,89',
'91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,262,88,95,96,,81,82,,38',
'39,227,231,236,237,238,233,235,,,239,240,,,,,,,241,242,,210,,,214,,',
'52,,54,,256,224,254,230,40,226,225,222,223,234,232,228,218,229,,,,79',
'260,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,',
'61,,59,60,62,258,259,66,67,,,,,,257,28,27,90,89,91,92,,,219,,,,,,,41',
',,94,93,84,50,86,85,87,262,88,95,96,,81,82,,38,39,227,231,236,237,238',
'233,235,243,,239,240,,,,,,,241,242,,210,,,214,,,52,,54,,256,224,254',
'230,40,226,225,222,223,234,232,228,218,229,,,,79,260,75,76,77,78,,,',
'74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259',
'66,67,,,,,,257,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85',
'87,262,88,95,96,,81,82,,38,39,227,-560,-560,-560,-560,233,235,,,-560',
'-560,,,,,,,241,242,,210,,,214,,,52,,54,,256,224,254,230,40,226,225,222',
'223,234,232,228,218,229,,,,79,260,75,76,77,78,,,,74,80,,,,,,,56,,,53',
'63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292',
'296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81',
'82,,38,39,227,231,236,237,238,233,235,243,244,239,240,,,-560,-560,,',
'241,242,,210,,,214,,,52,,54,,,224,,230,40,226,225,222,223,234,232,228',
'218,229,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37',
'83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92',
',,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,227,231',
'236,237,238,233,235,243,244,239,240,,,-560,-560,,,241,242,,210,,,214',
',,52,,54,,,224,,230,40,226,225,222,223,234,232,228,218,229,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,-259,-259,-259,,-259,37,83,,-259',
'-259,,,,-259,,-259,-259,-259,-259,-259,-259,-259,,,,,,-259,-259,-259',
'-259,-259,-259,-259,,,-259,,,,,,,-259,,,-259,-259,-259,-259,-259,-259',
'-259,-259,-259,-259,-259,,-259,-259,,-259,-259,227,-560,-560,-560,-560',
'233,235,,,-560,-560,,,,,,,241,242,,-259,,,-259,269,,-259,,-259,,-259',
'224,-259,230,-259,226,225,222,223,234,232,228,-259,229,,,,-259,-259',
'-259,-259,-259,-259,,,,-259,-259,,,,,,,-259,,,-259,63,64,65,8,51,-259',
'-259,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,',
'17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,227,-560',
'-560,-560,-560,233,235,,,-560,-560,,,,,,,241,242,,36,,,282,,,52,,54',
',32,224,,230,40,226,225,222,223,234,232,228,18,229,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62',
'258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,293,,,94,93,84',
'50,86,85,87,,88,95,96,,81,82,,770,,337,335,334,760,336,,,,,,,,,757,',
',,,,,290,,,287,227,,52,,54,,286,,,,,,339,755,,,,241,242,342,341,345',
'344,79,73,75,76,77,78,,,224,74,80,,226,225,222,223,,56,,,53,63,64,65',
',51,297,83,,57,58,,,,61,758,59,60,62,258,259,66,67,,,,,,257,292,296',
'90,89,91,92,,,219,,,,,,,293,,,94,93,84,50,86,85,87,,88,95,96,227,81',
'82,,770,,337,335,334,760,336,,,,,,,241,242,757,,,,,,,290,,,214,,224',
'52,230,54,226,225,222,223,,,228,339,229,,,,,,342,341,345,344,79,73,75',
'76,77,78,,,,74,80,,,,299,,,56,,,53,63,64,65,,51,297,83,,57,58,,,,61',
'758,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,',
'41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,227,-560,-560,-560',
'-560,233,235,,,-560,-560,,,,,,,241,242,,210,,,214,,,52,,54,,,224,,230',
'40,226,225,222,223,234,232,228,218,229,,,,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67',
',,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,',
'88,95,96,,81,82,,38,39,227,-560,-560,-560,-560,233,235,,,-560,-560,',
',,,,,241,242,,210,,,214,,,52,,54,,,224,,230,40,226,225,222,223,234,232',
'228,218,229,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,8,51',
'37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,',
',17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,227,,',
',,,,,,,,,,,,,,241,242,,36,,,30,,,52,,54,,32,224,,230,40,226,225,222',
'223,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,8,51',
'37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,',
',17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,227,,',
',,,,,,,,,,,,,,241,242,,36,,,30,,,52,,54,,32,224,,230,40,226,225,222',
'223,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51',
'37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91',
'92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,',
',,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59',
'60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94',
'93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,',
'214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,',
',56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,',
',,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,',
',,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51',
'37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,',
',17,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,',
',,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,63,64,65,8,51,37,83,,57,58,,,,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,54',
',32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63',
'64,65,,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90',
'89,91,92,,,17,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,18,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59',
'60,62,258,259,66,67,,,,,,257,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93',
'84,50,86,85,87,262,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,',
'214,,,52,,54,,256,,,,40,,,,,,,,218,,,,,79,260,75,76,77,78,,,,74,80,',
',,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67',
',,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,262',
'88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40',
',,,,,,,218,,,,,79,260,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51',
'37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91',
'92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,',
',,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,256,,,,40,,,,,,,,218,,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,',
'59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,',
',94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210',
',,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,',
',,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,',
',,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,',
'18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,',
'57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,',
',,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,',
',,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74',
'80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,23,24,66',
'67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,',
',,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,101,,,,,100,56,,,53,63,64,65',
',51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91',
'92,,,17,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,',
',,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60',
'62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,293,,,94,93',
'84,50,86,85,362,,88,95,96,,81,82,,770,,337,335,334,760,336,,,,,,,,,757',
',,,368,,,363,,,214,,,52,,54,,,,,,,,339,755,,,,,,342,341,345,344,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,297,83,,57,58,,,,61',
'758,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,',
'41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,',
',,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74',
'80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66',
'67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87',
',88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,',
'40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65',
',51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91',
'92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,',
',,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59',
'60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,84',
'50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,',
'52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,',
'53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257',
'292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,',
'218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,8,51,37,83',
',57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,',
',,,7,41,,9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,',
',,,,,,,,36,,,30,,,52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,',
',,74,80,,,,,,,56,,,53,-536,-536,-536,,-536,37,83,,-536,-536,,,,-536',
',-536,-536,-536,-536,-536,-536,-536,,-536,,,,-536,-536,-536,-536,-536',
'-536,-536,,,-536,,,,,,,-536,,,-536,-536,-536,-536,-536,-536,-536,-536',
'-536,-536,-536,,-536,-536,,-536,-536,,,,,,,,,,,,,,,,,,,,,-536,,,-536',
'-536,,-536,,-536,,-536,,-536,,-536,,,,,,,,-536,,-536,,,-536,-536,-536',
'-536,-536,-536,,,,-536,-536,,,,,,,-536,,,-536,-537,-537,-537,,-537,-536',
'-536,,-537,-537,,,,-537,,-537,-537,-537,-537,-537,-537,-537,,-537,,',
',-537,-537,-537,-537,-537,-537,-537,,,-537,,,,,,,-537,,,-537,-537,-537',
'-537,-537,-537,-537,-537,-537,-537,-537,,-537,-537,,-537,-537,,,,,,',
',,,,,,,,,,,,,,-537,,,-537,-537,,-537,,-537,,-537,,-537,,-537,,,,,,,',
'-537,,-537,,,-537,-537,-537,-537,-537,-537,,,,-537,-537,,,,,,,-537,',
',-537,63,64,65,,51,-537,-537,,57,58,,,,61,,59,60,62,258,259,66,67,,',
',,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,',
',,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,8,51',
'37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,',
',17,,,,,,7,41,6,9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,',
',,,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,405,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59',
'60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,84',
'50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,',
'52,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
'63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27',
'90,89,91,92,,,17,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,18,,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,',
'59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93',
'84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214',
',,52,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,',
',53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28',
'27,90,89,91,92,,,17,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,18,,,,',
'79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,8,51,37,83,,57,58',
',,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41',
',9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,',
'36,,,30,,,52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,63,64,65,8,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67',
',,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,6,9,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,',
',,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,8,51',
'37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,',
',17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,',
',,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,63,64,65,8,51,37,83,,57,58,,,,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,54',
',32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63',
'64,65,8,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90',
'89,91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,,,,,,,,18,,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,8,51,37,83,,57,58,,,,61',
',59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94',
'93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30',
',,52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56',
',,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28',
'27,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,422,,,,40,,,,,,,,218',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57',
'58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,219,,,,,',
',41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,',
',,,210,,,214,,,52,,54,,422,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,',
',74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,23,24',
'66,67,,,,,,22,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87',
',88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,',
'40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65',
',51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,28,27,90,89',
'91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,262,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,256,,,,40,,,,,,,,218,,,,',
'79,260,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58',
',,,61,,59,60,62,258,259,66,67,,,,,,257,28,27,90,89,91,92,,,219,,,,,',
',41,,,94,93,84,50,86,85,87,262,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,',
',,,,,,210,,,214,,,52,,54,,256,,,,40,,,,,,,,218,,,,,79,260,75,76,77,78',
',,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,23',
'24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,84,50,86,85',
'87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,',
',,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65',
',51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89',
'91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,256,,,,40,,,,,,,,218,,,,,79',
'73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61',
',59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41',
',,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210',
',,214,,,52,,54,,422,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67',
',,,,,22,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,',
',,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51',
'37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,',
',17,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,',
',,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,84,50,86',
'85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54',
',,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64',
'65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90',
'89,91,92,,,219,,,,,,,293,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,770',
',337,335,334,760,336,,,,,,,,,757,,,,,,,290,,,287,,,52,,54,,,,,,,,339',
',,,,,,342,341,345,344,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64',
'65,,51,297,83,,57,58,,,,61,758,59,60,62,258,259,66,67,,,,,,257,292,296',
'90,89,91,92,,,219,,,,,,,293,,,94,93,84,50,86,85,87,,88,95,96,,81,82',
',,,,,,,,,,,,,,,,,,,,,,,290,,,287,,,52,,54,,,,,,,,,,,,,,,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,8,51,297,83,,57,58,,,,61,,59',
'60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93',
'84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,',
',52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56',
',,53,63,64,65,8,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22',
'28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95,96,',
'81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,,,,,,,,18',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57',
'58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219',
',,,,,,41,,,94,93,84,50,86,85,87,262,88,95,96,,81,82,,38,39,,,,,,,,,',
',,,,,,,,,,,210,,,214,,,52,,54,,,,254,,40,,,,,,,,218,,,,,79,260,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60',
'62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93',
'84,50,86,85,87,262,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,',
'214,,,52,,54,,661,,254,,40,,,,,,,,218,,,,,79,260,75,76,77,78,,,,74,80',
',,,,,,56,,,53,63,64,65,8,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67',
',,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,',
',,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37',
'83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17',
',,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,',
',,,,,,,,210,,,214,,459,52,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78',
',,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258',
'259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52',
',54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
'63,64,65,8,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27',
'90,89,91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95,96,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,,,,,,,,18,,,,',
'79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,',
',,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,',
',,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,',
',,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74',
'80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66',
'67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87',
',88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,',
'40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65',
',51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89',
'91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,',
'59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,',
',94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210',
',,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,',
',,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,',
',,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,',
',,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51',
'37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91',
'92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,',
',,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59',
'60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94',
'93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,',
'214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,',
',56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,',
',,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,',
',,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51',
'37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91',
'92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,',
',,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59',
'60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94',
'93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,',
'214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,',
',56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,',
',,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,',
',,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51',
'37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91',
'92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,',
',,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59',
'60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94',
'93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,',
'214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,',
',56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,',
',,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,',
',,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51',
'37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91',
'92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,',
',,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59',
'60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94',
'93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,',
'214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,',
',56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,',
',,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,',
',,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51',
'37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91',
'92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,',
',,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59',
'60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94',
'93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,',
'214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,',
',56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,',
',,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,',
',,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51',
'37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91',
'92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,',
',,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59',
'60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94',
'93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,',
'214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,',
',56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,',
',,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,',
',,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51',
'37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91',
'92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,',
',,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59',
'60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94',
'93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,',
'214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,',
',56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,',
',,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,',
',,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51',
'37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91',
'92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,',
',,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,8,51,37,83,,57,58,,,,61,,59',
'60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93',
'84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,',
',52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56',
',,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257',
'292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,',
'218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83',
',57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,',
'219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,',
',,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62',
'258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84',
'50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,',
'52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,',
'53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257',
'292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,',
'218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83',
',57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,219,',
',,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,',
',,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,',
',,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,23,24',
'66,67,,,,,,22,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87',
',88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,',
'40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65',
',51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,28,27,90,89',
'91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,262,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,256,,254,,40,,,,,,,,218,',
',,,79,260,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57',
'58,,,,61,,59,60,62,258,259,66,67,,,,,,257,28,27,90,89,91,92,,,219,,',
',,,,41,,,94,93,84,50,86,85,87,262,88,95,96,,81,82,,38,39,,,,,,,,,,,',
',,,,,,,,,210,,,214,,,508,,54,,256,,254,,40,,,,,,,,218,,,,,79,260,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59',
'60,62,258,259,66,67,,,,,,257,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93',
'84,50,86,85,87,262,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,',
'214,,512,52,,54,,256,,254,,40,,,,,,,,218,,,,,79,260,75,76,77,78,,,,74',
'80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,23,24,66',
'67,,,,,,22,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,',
'88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40',
',,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51',
'37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91',
'92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,',
',,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,781,,,,40,,,,,,,,218,,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,',
'59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,',
',94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210',
',,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,',
',,,56,,,53,63,64,65,8,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,',
',,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95',
'96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,282,,,52,,54,,32,,,,40,,,',
',,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37',
'83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17',
',,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,',
',,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,',
',,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,23,24',
'66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,84,50,86,85,87',
',88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,',
'40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,',
'51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,28,27,90,89,91',
'92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,262,88,95,96,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,256,,,,40,,,,,,,,218,,,,,79',
'260,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,',
'61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,',
'293,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,,,,,,,,,,,,,,,,,,,,,,,290',
',,214,,,52,,54,,,,,,,,,,,,,,,,,,,79,73,75,76,77,78,,,,74,80,,,,520,',
',56,,,53,63,64,65,8,51,297,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,',
',,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95',
'96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,282,,,52,,54,,32,,,,40,,,',
',,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37',
'83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,28,27,90,89,91,92,',
',219,,,,,,,41,,,94,93,84,50,86,85,87,262,88,95,96,,81,82,,38,39,,,,',
',,,,,,,,,,,,,,,,210,,,214,,,52,,54,,256,,,,40,,,,,,,,218,,,,,79,260',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,',
'59,60,62,258,259,66,67,,,,,,257,28,27,90,89,91,92,,,219,,,,,,,41,,,94',
'93,84,50,86,85,87,262,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210',
',,214,,,52,,54,,256,,,,40,,,,,,,,218,,,,,79,260,75,76,77,78,,,,74,80',
',,,,,,56,,,53,63,64,65,8,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67',
',,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,',
',,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,8,51',
'37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,',
',17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,',
',,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,63,64,65,8,51,37,83,,57,58,,,,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,54',
',32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63',
'64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296',
'90,89,91,92,,,219,,,,,,,293,,,94,93,84,50,86,85,87,,88,95,96,,81,82',
',,,,,,,,,,,,,,,,,,,,,,,718,,,214,,,52,,54,,,,,,,,,,,,,,,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,8,51,297,83,,57,58,,,,61,,59',
'60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93',
'84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,',
',52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56',
',,53,63,64,65,8,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22',
'28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95,96,',
'81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,,,,,,,,18',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57',
'58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219',
',,,,,,41,,,94,93,84,50,86,85,87,262,88,95,96,,81,82,,38,39,,,,,,,,,',
',,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,260,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62',
'258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84',
'50,86,85,87,262,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214',
',,52,,54,,661,,254,,40,,,,,,,,218,,,,,79,260,75,76,77,78,,,,74,80,,',
',,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67',
',,,,,257,292,296,90,89,91,92,,,219,,,,,,,293,,,94,93,84,50,86,85,87',
',88,95,96,,81,82,,,,,,,,,,,,,,,,,,,,,,,,290,,,287,,,52,,54,,,,,,,,,',
',,,,,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,297,83',
',57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,',
',,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,',
',,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,',
'74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259',
'66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85',
'87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,',
',,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64',
'65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90',
'89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79',
'73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61',
',59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41',
',,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210',
',,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,',
',,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,',
',,,,257,292,296,90,89,91,92,,,219,,,,,,,293,,,94,93,84,50,86,85,87,',
'88,95,96,,81,82,,,,,,,,,,,,,,,,,,,,,,,,290,,,287,,,52,,54,,,,,,,,,,',
',,,,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,297,83',
',57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,',
'219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,',
',,,,,,,,,,,,210,,,214,540,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,63,64,65,8,51,37,83,,57,58,,,,61,,59,60',
'62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,84',
'50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52',
',54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
'63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,28',
'27,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,262,88,95,96,,81',
'82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,256,,,,40,,,,,,,,218',
',,,,79,260,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57',
'58,,,,61,,59,60,62,258,259,66,67,,,,,,257,28,27,90,89,91,92,,,219,,',
',,,,41,,,94,93,84,50,86,85,87,262,88,95,96,,81,82,,38,39,,,,,,,,,,,',
',,,,,,,,,210,,,214,,,52,,54,,256,,,,40,,,,,,,,218,,,,,79,260,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62',
'258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,293,,,94,93,84',
'50,86,85,87,,88,95,96,,81,82,,,,,,,,,,,,,,,,,,,,,,,,290,,,287,,,52,',
'54,,,,,,,,,,,,,,,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64',
'65,8,51,297,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89',
'91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,405,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,',
'59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93',
'84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214',
',679,52,,54,,,,254,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,',
',,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,',
',,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,',
',,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51',
'37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91',
'92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,262,88,95,96,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,254,,40,,,,,,,,218,,,,,79',
'260,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,',
'61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,',
'41,,,94,93,84,50,86,85,87,262,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,',
',,,,,210,,,214,,,52,,54,,661,,254,,40,,,,,,,,218,,,,,79,260,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62',
'258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84',
'50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,',
'52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,-287,56',
',,53,,,-287,-287,-287,37,83,-287,-287,-287,,-287,,,,,,,,,,-287,-287',
',,,,,,,,-287,-287,,-287,-287,-287,-287,-287,,,,,,,,,,,,,,,,,,,,,,-287',
'-287,-287,-287,-287,-287,-287,-287,-287,-287,-287,-287,-287,-287,-287',
',,-287,-287,-287,,642,-287,,,-287,,-287,,-287,,-287,,-287,,-287,-287',
'-287,-287,-287,-287,-287,,-287,,-287,,,,,,,,,,,,,-287,-287,-287,-287',
',-287,,-287,-287,,-287,,,-99,-287,-287,-287,,,,-287,-287,,-287,,,,,',
',,,,,,,,,,,,,,-287,-287,,-287,-287,-287,-287,-287,,,,,,,,,,,,,,,,,,',
',,,-287,-287,-287,-287,-287,-287,-287,-287,-287,-287,-287,-287,-287',
'-287,-287,,,-287,-287,-287,,642,,,,-287,,,,,,-287,,-287,,-287,-287,-287',
'-287,-287,-287,-287,,-287,,-287,,,,,,,,,,,,,-287,-287,,-90,,-287,,-543',
'-287,,-287,,,-99,-543,-543,-543,,,-543,-543,-543,,-543,,,,,,,,,-543',
'-543,-543,,,,,,,,,-543,-543,,-543,-543,-543,-543,-543,,,,,,,,,,,,,,',
',,,,,,,-543,-543,-543,-543,-543,-543,-543,-543,-543,-543,-543,-543,-543',
'-543,-543,,,-543,-543,-543,,796,-543,,,-543,,-543,,-543,,-543,,-543',
',-543,-543,-543,-543,-543,-543,-543,,-543,-543,-543,,,,,,,,,,,,,-543',
'-543,-543,-543,,-543,,-543,-543,,-543,,,-97,-543,-543,-543,,,,-543,-543',
',-543,,,,,,,,,-543,,,,,,,,,,,-543,-543,,-543,-543,-543,-543,-543,,,',
',,,,,,,,,,,,,,,,,,-543,-543,-543,-543,-543,-543,-543,-543,-543,-543',
'-543,-543,-543,-543,-543,,,-543,-543,-543,,639,,,,-543,,,,,,-543,,-543',
',-543,-543,-543,-543,-543,-543,-543,,-543,-543,-543,,,,,,,,,,,,,-543',
'-543,,-88,,-543,,-282,-543,,-543,,,-97,-282,-282,-282,,,-282,-282,-282',
',-282,,,,,,,,,,-282,-282,-282,,,,,,,,-282,-282,,-282,-282,-282,-282',
'-282,,,,,,,,,,,,,,,,,,,,,,-282,-282,-282,-282,-282,-282,-282,-282,-282',
'-282,-282,-282,-282,-282,-282,,,-282,-282,-282,,,-282,,,-282,,-282,',
'-282,,-282,,-282,,-282,-282,-282,-282,-282,-282,-282,,-282,,-282,,,',
',,,,,,,,,-282,-282,-282,-282,-296,-282,,-282,-282,,-282,-296,-296,-296',
',,-296,-296,-296,,-296,,,,,,,,,,-296,-296,,,,,,,,,-296,-296,,-296,-296',
'-296,-296,-296,,,,,,,,,,,,,,,,,,,,,,-296,-296,-296,-296,-296,-296,-296',
'-296,-296,-296,-296,-296,-296,-296,-296,,,-296,-296,-296,,,-296,,278',
'-296,,-296,,-296,,-296,,-296,,-296,-296,-296,-296,-296,-296,-296,,-296',
',-296,,,,,,,,,,,,,-296,-296,-296,-296,-559,-296,,,-296,,-296,-559,-559',
'-559,,,-559,-559,-559,,-559,,,,,,,,,,-559,,,,,,,,,,-559,-559,,-559,-559',
'-559,-559,-559,,,,,,,,,,,,-559,,,,,,,-559,-559,-559,,,-559,-559,-559',
',-559,,,,,-559,-559,,,,-559,,,-559,,,,,269,-559,-559,-559,,-559,-559',
'-559,-559,-559,,,,,,,,,,,,-559,,,,,,,,,,,,,-559,,-559,,,-559,,,-559',
'-559,,-559,,,,,-559,,-559,-559,-559,269,-559,-559,-559,-559,,-559,,',
',,,,,,,-559,,,,,-559,,,,,-559,-559,,-559,-559,-559,-559,-559,-559,,-559',
',,-559,444,435,,,445,,,,,,,,,142,143,139,121,122,123,130,127,129,,,124',
'125,-559,-559,,,144,145,131,132,-559,,,,,269,-559,,,,,136,135,,120,141',
'138,137,133,134,128,126,118,140,119,,-559,146,,,,,,,,,,,,-559,,-559',
',,-559,156,167,157,180,153,173,163,162,188,191,178,161,160,155,181,189',
'190,165,154,168,172,174,166,159,,,,175,182,177,176,169,179,164,152,171',
'170,183,184,185,186,187,151,158,149,150,147,148,111,113,110,,112,,,',
',,,,,142,143,139,121,122,123,130,127,129,,,124,125,,,,,144,145,131,132',
',,,,,,,,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119,,,146',
'192,,,,,,,,,,80,156,167,157,180,153,173,163,162,188,191,178,161,160',
'155,181,189,190,165,154,168,172,174,166,159,,,,175,182,177,176,169,179',
'164,152,171,170,183,184,185,186,187,151,158,149,150,147,148,111,113',
',,112,,,,,,,,,142,143,139,121,122,123,130,127,129,,,124,125,,,,,144',
'145,131,132,,,,,,,,,,,,136,135,,120,141,138,137,133,134,128,126,118',
'140,119,,,146,192,,,,,,,,,,80,156,167,157,180,153,173,163,162,188,191',
'178,161,160,155,181,189,190,165,154,168,172,174,166,159,,,,175,182,177',
'176,169,179,164,152,171,170,183,184,185,186,187,151,158,149,150,147',
'148,111,113,,,112,,,,,,,,,142,143,139,121,122,123,130,127,129,,,124',
'125,,,,,144,145,131,132,,,,,,,,,,,,136,135,,120,141,138,137,133,134',
'128,126,118,140,119,,,146,192,,,,,,,,,,80,156,167,157,180,153,173,163',
'162,188,191,178,161,160,155,181,189,190,165,154,168,172,174,166,159',
',,,175,182,177,176,169,179,164,152,171,170,183,184,185,186,187,151,158',
'149,150,147,148,111,113,,,112,,,,,,,,,142,143,139,121,122,123,130,127',
'129,,,124,125,,,,,144,145,131,132,,,,,,,,,,,,136,135,,120,141,138,137',
'133,134,128,126,118,140,119,,,146,192,,,,,,,,,,80,156,167,157,180,153',
'173,163,162,188,191,178,161,160,155,181,189,190,165,154,168,172,174',
'166,159,,,,175,182,177,176,169,179,164,152,171,170,183,184,185,186,187',
'151,158,149,150,147,148,111,113,399,398,112,,400,,,,,,,142,143,139,121',
'122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,,,136,135',
',120,141,138,137,133,134,128,126,118,140,119,,,146,156,167,157,180,153',
'173,163,162,188,191,178,161,160,155,181,189,190,165,154,168,172,174',
'166,159,,,,175,182,177,176,169,179,164,152,171,170,183,184,185,186,187',
'151,158,149,150,147,148,111,113,399,398,112,,400,,,,,,,142,143,139,121',
'122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,,,136,135',
',120,141,138,137,133,134,128,126,118,140,119,,,146,156,167,157,180,153',
'173,163,162,188,191,178,161,160,155,181,189,190,165,154,168,172,174',
'166,159,,,,175,182,177,377,376,378,375,152,171,170,183,184,185,186,187',
'151,158,149,150,373,374,371,113,86,85,372,,88,,,,,,,142,143,139,121',
'122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,382,,,,,,136',
'135,,120,141,138,137,133,134,128,126,118,140,119,,,146,156,167,157,180',
'153,173,163,162,188,191,178,161,160,155,181,189,190,165,154,168,172',
'174,166,159,,,,175,182,177,176,169,179,164,152,171,170,183,184,185,186',
'187,151,158,149,150,147,148,111,113,,,112,,,,,,,,,142,143,139,121,122',
'123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,,,136,135,,120',
'141,138,137,133,134,128,126,118,140,119,444,435,146,,445,,,,,,,,,142',
'143,139,121,122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,269',
',,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119,437,441,146',
',439,,,,,,,,,142,143,139,121,122,123,130,127,129,,,124,125,,,,,144,145',
'131,132,,,,,,,,,,,,136,135,,120,141,138,137,133,134,128,126,118,140',
'119,444,435,146,,445,,,,,,,,,142,143,139,121,122,123,130,127,129,,,124',
'125,,,,,144,145,131,132,,,,,,,,,,,,136,135,,120,141,138,137,133,134',
'128,126,118,140,119,647,441,146,,648,,,,,,,,,142,143,139,121,122,123',
'130,127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,,,136,135,,120,141',
'138,137,133,134,128,126,118,140,119,741,441,146,,742,,,,,,,,,142,143',
'139,121,122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,',
',136,135,,120,141,138,137,133,134,128,126,118,140,119,739,435,146,,740',
',,,,,,,,142,143,139,121,122,123,130,127,129,,,124,125,,,,,144,145,131',
'132,,,,,,269,,,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119',
'645,435,146,,646,,,,,,,,,142,143,139,121,122,123,130,127,129,,,124,125',
',,,,144,145,131,132,,,,,,269,,,,,,136,135,,120,141,138,137,133,134,128',
'126,118,140,119,444,435,146,,445,,,,,,,,,142,143,139,121,122,123,130',
'127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,,,136,135,,120,141,138',
'137,133,134,128,126,118,140,119,690,435,146,,691,,,,,,,,,142,143,139',
'121,122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,269,,,,,',
'136,135,,120,141,138,137,133,134,128,126,118,140,119,747,441,146,,745',
',,,,,,,,142,143,139,121,122,123,130,127,129,,,124,125,,,,,144,145,131',
'132,,,,,,,,,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119',
'647,441,146,,648,,,,,,,,,142,143,139,121,122,123,130,127,129,,,124,125',
',,,,144,145,131,132,,,,,,,,,,,,136,135,,120,141,138,137,133,134,128',
'126,118,140,119,645,435,146,,646,,,,,,,,,142,143,139,121,122,123,130',
'127,129,,,124,125,,,,,144,145,131,132,,,,,,269,,,,,,136,135,,120,141',
'138,137,133,134,128,126,118,140,119,444,435,146,,445,,,,,,,,,142,143',
'139,121,122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,',
',136,135,,120,141,138,137,133,134,128,126,118,140,119,431,435,146,,432',
',,,,,,,,142,143,139,121,122,123,130,127,129,,,124,125,,,,,144,145,131',
'132,,,,,,269,,,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119',
'968,435,146,,969,,,,,,,,,142,143,139,121,122,123,130,127,129,,,124,125',
',,,,144,145,131,132,,,,,,269,,,,,,136,135,,120,141,138,137,133,134,128',
'126,118,140,119,444,435,146,,445,,,,,,,,,142,143,139,121,122,123,130',
'127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,,,136,135,,120,141,138',
'137,133,134,128,126,118,140,119,747,441,146,,900,,,,,,,,,142,143,139',
'121,122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,,,136',
'135,,120,141,138,137,133,134,128,126,118,140,119,970,441,146,,971,,',
',,,,,,142,143,139,121,122,123,130,127,129,,,124,125,,,,,144,145,131',
'132,,,,,,,,,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119',
'693,441,146,,694,,,,,,,,,142,143,139,121,122,123,130,127,129,,,124,125',
',,,,144,145,131,132,,,,,,,,,,,,136,135,,120,141,138,137,133,134,128',
'126,118,140,119,,,146' ]
        racc_action_table = arr = ::Array.new(25478, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'62,62,62,846,62,976,55,848,62,62,752,752,348,62,26,62,62,62,62,62,62',
'62,646,393,590,703,703,62,62,62,62,62,62,62,71,618,62,645,798,685,322',
'288,71,62,499,696,62,62,62,62,62,62,62,358,62,62,62,349,62,62,3,347',
'347,527,740,3,367,607,607,742,739,600,646,380,355,685,600,499,26,703',
'380,845,697,62,393,897,62,645,798,62,55,62,904,62,618,618,933,752,26',
'353,936,353,752,618,848,846,848,288,957,848,62,62,62,62,62,62,976,968',
'976,62,62,976,698,348,969,348,590,62,348,527,62,370,370,370,742,370',
'62,62,371,370,370,970,322,288,370,371,370,370,370,370,370,370,370,288',
'607,358,458,458,370,370,370,370,370,370,370,527,740,370,349,367,349',
'742,739,349,370,527,355,370,370,370,370,370,370,370,741,370,370,370',
'367,370,370,567,845,367,845,845,897,845,897,509,943,897,943,904,701',
'904,486,933,904,933,458,936,933,936,370,631,936,370,970,957,370,957',
'370,971,957,726,726,510,968,580,968,694,509,968,632,969,702,969,693',
'486,969,370,370,370,370,370,370,581,293,741,370,370,970,690,970,631',
'691,970,370,291,510,370,457,457,457,631,457,370,370,318,457,457,318',
'311,311,457,814,457,457,457,457,457,457,457,632,209,741,704,211,457',
'457,457,457,457,457,457,694,694,457,294,971,556,454,693,693,457,797',
'710,457,457,457,457,457,457,457,711,457,457,457,690,457,457,691,457',
'457,291,580,388,580,708,388,580,708,694,971,209,971,867,211,971,693',
'714,814,694,581,457,581,867,457,581,693,457,454,457,716,690,797,372',
'691,457,311,291,373,294,372,690,296,457,691,373,718,291,457,457,457',
'457,457,457,814,867,867,457,457,294,374,948,388,388,814,457,948,374',
'457,456,456,456,375,456,457,457,948,456,456,375,494,719,456,386,456',
'456,456,456,456,456,456,314,867,859,314,720,456,456,456,456,456,456',
'456,859,384,456,948,948,948,948,390,301,456,37,37,456,456,456,456,456',
'456,456,376,456,456,456,395,456,456,376,456,456,110,297,297,859,859',
'110,110,494,494,494,386,386,386,948,25,25,15,15,377,301,456,35,25,456',
'494,377,456,315,456,301,315,384,384,384,456,208,208,390,390,390,859',
'750,456,208,564,564,750,456,456,456,456,456,456,395,395,395,456,456',
'723,378,865,35,432,431,456,865,378,456,455,455,455,35,455,456,456,865',
'455,455,862,862,728,455,734,455,455,455,455,455,455,455,208,14,208,958',
'958,455,455,455,455,455,455,455,432,431,455,865,865,865,865,83,83,455',
'432,431,455,455,455,455,455,455,455,736,455,455,455,481,455,455,298',
'455,455,14,738,482,304,304,543,289,289,542,541,14,304,302,865,289,572',
'743,572,572,572,455,572,352,455,303,481,455,352,455,481,481,481,481',
'482,455,847,847,482,482,482,482,279,455,847,463,532,279,455,455,455',
'455,455,455,747,756,748,455,455,304,756,304,289,193,289,455,306,528',
'455,453,453,453,462,453,455,455,463,453,453,313,463,463,453,759,453',
'453,453,453,453,453,453,847,97,847,763,764,453,453,453,453,453,453,453',
'462,766,453,767,462,462,768,420,770,453,521,773,453,453,453,453,453',
'453,453,453,453,453,453,780,453,453,519,453,453,420,420,420,420,420',
'420,420,420,420,420,420,78,77,420,420,516,515,420,420,511,453,316,505',
'453,504,501,453,317,453,801,453,420,802,420,453,420,420,420,420,420',
'420,420,453,420,806,831,808,453,453,453,453,453,453,811,812,813,453',
'453,319,420,558,420,818,327,453,821,822,453,452,452,452,328,452,453',
'453,467,452,452,837,41,840,452,36,452,452,452,452,452,452,452,831,831',
'831,831,466,452,452,452,452,452,452,452,465,464,452,558,558,558,558',
'651,850,452,853,854,452,452,452,452,452,452,452,452,452,452,452,855',
'452,452,330,452,452,651,651,651,651,651,651,651,651,651,651,651,331',
'343,651,651,346,877,651,651,878,452,34,354,452,438,20,452,890,452,430',
'452,651,962,651,452,651,651,651,651,651,651,651,452,651,900,901,964',
'452,452,452,452,452,452,934,934,906,452,452,907,651,429,934,425,12,452',
'915,917,452,443,443,443,920,443,452,452,921,443,443,922,923,423,443',
'357,443,443,443,443,443,443,443,684,684,684,684,684,443,443,443,443',
'443,443,443,11,836,443,836,836,836,934,836,934,443,10,965,443,443,443',
'443,443,443,443,443,443,443,443,417,443,443,935,443,443,676,676,676',
'676,676,676,676,676,676,676,676,967,9,676,676,6,945,676,676,359,443',
'953,411,443,443,392,443,1,443,389,443,676,443,676,443,676,676,676,676',
'676,676,676,443,676,363,635,268,443,443,443,443,443,443,640,643,629',
'443,443,255,676,281,676,649,650,443,622,283,443,0,0,0,0,0,443,443,252',
'0,0,658,660,251,0,284,0,0,0,0,0,0,0,5,5,5,5,5,0,0,0,0,0,0,0,774,774',
'0,219,774,774,774,673,0,0,0,0,0,0,0,0,0,0,0,213,0,0,0,212,0,0,285,0',
'0,653,653,653,653,653,653,653,653,653,653,653,677,680,653,653,290,210',
'653,653,583,0,582,687,0,689,576,0,292,0,692,0,653,571,653,0,653,653',
'653,653,653,653,653,0,653,695,,,0,0,0,0,0,0,13,13,,0,0,,653,653,13,',
',0,,,0,954,954,954,,954,0,0,,954,954,,,,954,,954,954,954,954,954,954',
'954,280,280,280,280,280,954,954,954,954,954,954,954,,,954,,,,13,,13',
'954,,,954,954,954,954,954,954,954,954,954,954,954,,954,954,,954,954',
'428,428,428,428,428,428,428,428,428,428,428,,,428,428,,,428,428,,954',
',,954,,,954,,954,,954,428,,428,954,428,428,428,428,428,428,428,954,428',
',,,954,954,954,954,954,954,717,717,,954,954,,428,,717,,,954,,,954,350',
'350,350,,350,954,954,,350,350,,,,350,,350,350,350,350,350,350,350,,',
',,,350,350,350,350,350,350,350,,,350,,,,717,,717,350,,,350,350,350,350',
'350,350,350,,350,350,350,,350,350,,350,350,928,928,928,928,928,928,928',
'928,928,928,928,,,928,928,,,928,928,,350,,,350,,,350,,350,,,928,,928',
'350,928,928,928,928,928,928,928,350,928,,,,350,350,350,350,350,350,42',
'42,,350,350,,928,,42,,,350,,,350,351,351,351,,351,350,350,,351,351,',
',,351,,351,351,351,351,351,351,351,,,,,,351,351,351,351,351,351,351',
',,351,,,,42,,42,351,,,351,351,351,351,351,351,351,,351,351,351,,351',
'351,,351,351,19,19,19,19,19,19,19,19,19,19,19,,,19,19,,,19,19,,351,',
',351,,,351,,351,,,19,,19,351,19,19,19,19,19,19,19,351,19,,,,351,351',
'351,351,351,351,356,356,,351,351,,19,,356,,,351,,,351,442,442,442,,442',
'351,351,,442,442,,,,442,,442,442,442,442,442,442,442,,,,,,442,442,442',
'442,442,442,442,,,442,,,,356,,356,442,,,442,442,442,442,442,442,442',
'442,442,442,442,,442,442,,442,442,882,882,882,882,882,882,882,882,882',
'882,882,,,882,882,,,882,882,,442,,,442,442,,442,,442,,442,882,442,882',
'442,882,882,882,882,882,882,882,442,882,,,,442,442,442,442,442,442,365',
'365,,442,442,,882,,365,,,442,,,442,441,441,441,,441,442,442,,441,441',
',,,441,,441,441,441,441,441,441,441,,,,,,441,441,441,441,441,441,441',
',,441,,,,365,,365,441,,,441,441,441,441,441,441,441,441,441,441,441',
',441,441,,441,441,880,880,880,880,880,880,880,880,880,880,880,,,880',
'880,,,880,880,,441,,,441,441,,441,,441,,441,880,441,880,441,880,880',
'880,880,880,880,880,441,880,,,,441,441,441,441,441,441,592,592,,441',
'441,,880,,592,,,441,,,441,433,433,433,,433,441,441,,433,433,,,,433,',
'433,433,433,433,433,433,433,,,,,,433,433,433,433,433,433,433,,,433,',
',,592,,592,433,,,433,433,433,433,433,433,433,433,433,433,433,,433,433',
',433,433,447,447,447,447,447,447,447,447,447,447,447,,,447,447,,,447',
'447,,433,,,433,433,,433,,433,,433,447,433,447,433,447,447,447,447,447',
'447,447,433,447,,,,433,433,433,433,433,433,745,745,,433,433,,447,,745',
',,433,,745,433,422,422,422,,422,433,433,,422,422,,,,422,,422,422,422',
'422,422,422,422,,,,,,422,422,422,422,422,422,422,,,422,,,,745,,745,422',
',,422,422,422,422,422,422,422,,422,422,422,,422,422,,422,422,792,792',
'792,792,792,792,792,792,792,792,792,,,792,792,,,792,792,,422,,,422,',
',422,,422,,,792,,792,422,792,792,792,792,792,792,792,422,792,,,,422',
'422,422,422,422,422,,,,422,422,,792,,,,,422,,,422,952,952,952,952,952',
'422,422,,952,952,,,,952,,952,952,952,952,952,952,952,,,,,,952,952,952',
'952,952,952,952,,,952,,,,,,952,952,,952,952,952,952,952,952,952,952',
',952,952,952,,952,952,,952,952,790,790,790,790,790,790,790,790,790,790',
'790,,,790,790,,,790,790,,952,,,952,,,952,,952,,952,790,,790,952,790',
'790,790,790,790,790,790,952,790,,,,952,952,952,952,952,952,,,,952,952',
',790,,,,,952,,,952,944,944,944,944,944,952,952,,944,944,,,,944,,944',
'944,944,944,944,944,944,,,,,,944,944,944,944,944,944,944,,,944,,,,,',
'944,944,,944,944,944,944,944,944,944,944,,944,944,944,,944,944,,944',
'944,787,787,787,787,787,787,787,787,787,787,787,,,787,787,,,787,787',
',944,,,944,,,944,,944,,944,787,,787,944,787,787,787,787,787,787,787',
'944,787,,,,944,944,944,944,944,944,,,,944,944,,787,,,,,944,,,944,939',
'939,939,939,939,944,944,,939,939,,,,939,,939,939,939,939,939,939,939',
',,,,,939,939,939,939,939,939,939,,,939,,,,,,939,939,,939,939,939,939',
'939,939,939,939,,939,939,939,,939,939,,939,939,785,785,785,785,785,785',
'785,785,785,785,785,,,785,785,,,785,785,,939,,,939,,,939,,939,,939,785',
',785,939,785,785,785,785,785,785,785,939,785,,,,939,939,939,939,939',
'939,,,,939,939,,785,,,,,939,,,939,932,932,932,932,932,939,939,,932,932',
',,,932,,932,932,932,932,932,932,932,,,,,,932,932,932,932,932,932,932',
',,932,,,,,,932,932,,932,932,932,932,932,932,932,932,,932,932,932,,932',
'932,,932,932,779,779,779,779,779,779,779,779,779,779,779,,,779,779,',
',779,779,,932,,,932,,,932,,932,,932,779,,779,932,779,779,779,779,779',
'779,779,932,779,,,,932,932,932,932,932,932,,,,932,932,,779,,,,,932,',
',932,930,930,930,,930,932,932,,930,930,,,,930,,930,930,930,930,930,930',
'930,,,,,,930,930,930,930,930,930,930,,,930,,,,,,,930,,,930,930,930,930',
'930,930,930,,930,930,930,,930,930,,930,930,539,539,539,539,539,539,539',
'539,539,539,539,,,539,539,,,539,539,,930,,,930,,,930,,930,,930,539,930',
'539,930,539,539,539,539,539,539,539,930,539,,,,930,930,930,930,930,930',
',,,930,930,,539,,,,,930,,,930,912,912,912,912,912,930,930,,912,912,',
',,912,,912,912,912,912,912,912,912,,,,,,912,912,912,912,912,912,912',
',,912,,,,,,912,912,,912,912,912,912,912,912,912,912,,912,912,912,,912',
'912,,912,912,700,700,700,700,700,700,700,700,700,700,700,,,700,700,',
',700,700,,912,,,912,,,912,,912,,912,700,,700,912,700,700,700,700,700',
'700,700,912,700,,,,912,912,912,912,912,912,,,,912,912,,700,,,,,912,',
',912,909,909,909,909,909,912,912,,909,909,,,,909,,909,909,909,909,909',
'909,909,,,,,,909,909,909,909,909,909,909,,,909,,,,,,909,909,,909,909',
'909,909,909,909,909,909,,909,909,909,,909,909,,909,909,249,249,249,249',
'249,249,249,249,249,249,249,,,249,249,,,249,249,,909,,,909,,,909,,909',
',909,249,,249,909,249,249,249,249,249,249,249,909,249,,,,909,909,909',
'909,909,909,,,,909,909,,249,,,,,909,,,909,908,908,908,,908,909,909,',
'908,908,,,,908,,908,908,908,908,908,908,908,,,,,,908,908,908,908,908',
'908,908,,,908,,,,,,,908,,,908,908,908,908,908,908,908,,908,908,908,',
'908,908,,908,908,339,,339,339,339,,339,,,,,,,,,655,,655,655,655,908',
'655,,908,,,908,,908,,908,,,,908,,,569,339,569,569,569,908,569,,339,',
'908,908,908,908,908,908,655,,,908,908,,,655,655,655,655,908,,,908,898',
'898,898,655,898,908,908,569,898,898,362,,,898,569,898,898,898,898,898',
'898,898,,,,,,898,898,898,898,898,898,898,,724,898,724,724,724,,724,',
'898,,,898,898,898,898,898,898,898,,898,898,898,,898,898,,362,362,,474',
',,,,362,,,,724,362,,,,,,724,474,474,898,,,898,,,898,,898,,,362,474,',
'474,,474,474,474,474,,,474,,474,,,898,898,898,898,898,898,362,,362,898',
'898,,,,,,,898,,,898,17,17,17,,17,898,898,,17,17,,,,17,,17,17,17,17,17',
'17,17,,,,,,17,17,17,17,17,17,17,,,17,,,,,,,17,,,17,17,17,17,17,17,17',
',17,17,17,475,17,17,,17,17,,,,,,,,,,,,475,475,,,56,,56,56,56,17,56,',
'17,17,475,17,475,17,475,475,475,475,,17,475,,475,,,,,17,,,,,17,17,17',
'17,17,17,56,56,,17,17,,,56,56,56,56,17,,,17,18,18,18,,18,17,17,,18,18',
',,,18,,18,18,18,18,18,18,18,,,,,,18,18,18,18,18,18,18,,,18,,,,,,,18',
',,18,18,18,18,18,18,18,,18,18,18,472,18,18,,18,18,,,,,,,,,,,,472,472',
',,323,,323,323,323,18,323,,18,,472,18,472,18,472,472,472,472,,18,472',
',472,,,,,18,,,,,18,18,18,18,18,18,323,,323,18,18,,,323,323,323,323,18',
',,18,894,894,894,894,894,18,18,,894,894,,,,894,,894,894,894,894,894',
'894,894,,,,,,894,894,894,894,894,894,894,,,894,,,,,,894,894,,894,894',
'894,894,894,894,894,894,,894,894,894,,894,894,,894,894,,,,,,,,,,,,,',
',,562,,562,562,562,894,562,,894,,,894,,894,,894,,,,894,,,,,,,,894,,',
',,894,894,894,894,894,894,562,,,894,894,,,562,562,562,562,894,,,894',
'889,889,889,,889,894,894,,889,889,,,,889,,889,889,889,889,889,889,889',
',,,,,889,889,889,889,889,889,889,,,889,,,,,,,889,,,889,889,889,889,889',
'889,889,889,889,889,889,,889,889,,889,889,477,477,477,477,477,477,477',
',,477,477,,,,,,,477,477,,889,,,889,,,889,,889,,,477,889,477,889,477',
'477,477,477,477,477,477,889,477,,,,889,889,889,889,889,889,,,,889,889',
',,,,,,889,,,889,22,22,22,,22,889,889,,22,22,,,,22,,22,22,22,22,22,22',
'22,,,,,,22,22,22,22,22,22,22,,,22,,,,,,,22,,,22,22,22,22,22,22,22,22',
'22,22,22,,22,22,,22,22,483,483,483,483,483,483,483,,,483,483,,,,,,,483',
'483,,22,,,22,,,22,,22,,22,483,22,483,22,483,483,483,483,483,483,483',
'22,483,,,,22,22,22,22,22,22,,,,22,22,,,,,,,22,,,22,23,23,23,,23,22,22',
',23,23,,,,23,,23,23,23,23,23,23,23,,,,,,23,23,23,23,23,23,23,,,23,,',
',,,,23,,,23,23,23,23,23,23,23,23,23,23,23,,23,23,,23,23,484,484,484',
'484,484,484,484,484,,484,484,,,,,,,484,484,,23,,,23,,,23,,23,,23,484',
'23,484,23,484,484,484,484,484,484,484,23,484,,,,23,23,23,23,23,23,,',
',23,23,,,,,,,23,,,23,24,24,24,,24,23,23,,24,24,,,,24,,24,24,24,24,24',
'24,24,,,,,,24,24,24,24,24,24,24,,,24,,,,,,,24,,,24,24,24,24,24,24,24',
'24,24,24,24,,24,24,,24,24,480,480,480,480,480,480,480,,,480,480,,,,',
',,480,480,,24,,,24,,,24,,24,,24,480,24,480,24,480,480,480,480,480,480',
'480,24,480,,,,24,24,24,24,24,24,,,,24,24,,,,,,,24,,,24,885,885,885,',
'885,24,24,,885,885,,,,885,,885,885,885,885,885,885,885,,,,,,885,885',
'885,885,885,885,885,,,885,,,,,,,885,,,885,885,885,885,885,885,885,,885',
'885,885,,885,885,,885,885,461,461,461,461,461,461,461,461,461,461,461',
',,461,461,,,461,461,,885,,,885,,,885,,885,,,461,,461,885,461,461,461',
'461,461,461,461,885,461,,,,885,885,885,885,885,885,,,,885,885,,,,,,',
'885,,,885,884,884,884,,884,885,885,,884,884,,,,884,,884,884,884,884',
'884,884,884,,,,,,884,884,884,884,884,884,884,,,884,,,,,,,884,,,884,884',
'884,884,884,884,884,,884,884,884,,884,884,,884,884,460,460,460,460,460',
'460,460,460,460,460,460,,,460,460,,,460,460,,884,,,884,,,884,,884,,',
'460,,460,884,460,460,460,460,460,460,460,884,460,,,,884,884,884,884',
'884,884,,,,884,884,,,,,,,884,,,884,27,27,27,,27,884,884,,27,27,,,,27',
',27,27,27,27,27,27,27,,,,,,27,27,27,27,27,27,27,,,27,,,,,,,27,,,27,27',
'27,27,27,27,27,27,27,27,27,,27,27,,27,27,478,478,478,478,478,478,478',
',,478,478,,,,,,,478,478,,27,,,27,27,,27,,27,,27,478,27,478,27,478,478',
'478,478,478,478,478,27,478,,,,27,27,27,27,27,27,,,,27,27,,,,,,,27,,',
'27,30,30,30,30,30,27,27,,30,30,,,,30,,30,30,30,30,30,30,30,,,,,,30,30',
'30,30,30,30,30,,,30,,,,,,30,30,,30,30,30,30,30,30,30,30,,30,30,30,,30',
'30,,30,30,479,479,479,479,479,479,479,,,479,479,,,,,,,479,479,,30,,',
'30,,,30,,30,,30,479,,479,30,479,479,479,479,479,479,479,30,479,,,,30',
'30,30,30,30,30,,,,30,30,,,,,,,30,,,30,31,31,31,,31,30,30,,31,31,,,,31',
',31,31,31,31,31,31,31,,,,,,31,31,31,31,31,31,31,,,31,,,,,,,31,,,31,31',
'31,31,31,31,31,,31,31,31,,31,31,,926,,926,926,926,926,926,,,,,,,,,926',
',,,,,,31,,,31,470,,31,,31,,31,,,,,,926,926,,,,470,470,926,926,926,926',
'31,31,31,31,31,31,,,470,31,31,,470,470,470,470,,31,,,31,32,32,32,,32',
'31,31,,32,32,,,,32,926,32,32,32,32,32,32,32,,,,,,32,32,32,32,32,32,32',
',,32,,,,,,,32,,,32,32,32,32,32,32,32,,32,32,32,473,32,32,,755,,755,755',
'755,755,755,,,,,,,473,473,755,,,,,,,32,,,32,,473,32,473,32,473,473,473',
'473,,,473,755,473,,,,,,755,755,755,755,32,32,32,32,32,32,,,,32,32,,',
',32,,,32,,,32,883,883,883,,883,32,32,,883,883,,,,883,755,883,883,883',
'883,883,883,883,,,,,,883,883,883,883,883,883,883,,,883,,,,,,,883,,,883',
'883,883,883,883,883,883,,883,883,883,,883,883,,883,883,471,471,471,471',
'471,471,471,,,471,471,,,,,,,471,471,,883,,,883,,,883,,883,,,471,,471',
'883,471,471,471,471,471,471,471,883,471,,,,883,883,883,883,883,883,',
',,883,883,,,,,,,883,,,883,869,869,869,,869,883,883,,869,869,,,,869,',
'869,869,869,869,869,869,869,,,,,,869,869,869,869,869,869,869,,,869,',
',,,,,869,,,869,869,869,869,869,869,869,,869,869,869,,869,869,,869,869',
'476,476,476,476,476,476,476,,,476,476,,,,,,,476,476,,869,,,869,,,869',
',869,,,476,,476,869,476,476,476,476,476,476,476,869,476,,,,869,869,869',
'869,869,869,,,,869,869,,,,,,,869,,,869,842,842,842,842,842,869,869,',
'842,842,,,,842,,842,842,842,842,842,842,842,,,,,,842,842,842,842,842',
'842,842,,,842,,,,,,842,842,,842,842,842,842,842,842,842,842,,842,842',
'842,,842,842,,842,842,468,,,,,,,,,,,,,,,,,468,468,,842,,,842,,,842,',
'842,,842,468,,468,842,468,468,468,468,,,,842,,,,,842,842,842,842,842',
'842,,,,842,842,,,,,,,842,,,842,841,841,841,841,841,842,842,,841,841',
',,,841,,841,841,841,841,841,841,841,,,,,,841,841,841,841,841,841,841',
',,841,,,,,,841,841,,841,841,841,841,841,841,841,841,,841,841,841,,841',
'841,,841,841,469,,,,,,,,,,,,,,,,,469,469,,841,,,841,,,841,,841,,841',
'469,,469,841,469,469,469,469,,,,841,,,,,841,841,841,841,841,841,,,,841',
'841,,,,,,,841,,,841,38,38,38,,38,841,841,,38,38,,,,38,,38,38,38,38,38',
'38,38,,,,,,38,38,38,38,38,38,38,,,38,,,,,,,38,,,38,38,38,38,38,38,38',
',38,38,38,,38,38,,38,38,,,,,,,,,,,,,,,,,,,,,38,,,38,,,38,,38,,,,,,38',
',,,,,,,38,,,,,38,38,38,38,38,38,,,,38,38,,,,,,,38,,,38,39,39,39,,39',
'38,38,,39,39,,,,39,,39,39,39,39,39,39,39,,,,,,39,39,39,39,39,39,39,',
',39,,,,,,,39,,,39,39,39,39,39,39,39,,39,39,39,,39,39,,39,39,,,,,,,,',
',,,,,,,,,,,,39,,,39,,,39,,39,,,,,,39,,,,,,,,39,,,,,39,39,39,39,39,39',
',,,39,39,,,,,,,39,,,39,40,40,40,,40,39,39,,40,40,,,,40,,40,40,40,40',
'40,40,40,,,,,,40,40,40,40,40,40,40,,,40,,,,,,,40,,,40,40,40,40,40,40',
'40,,40,40,40,,40,40,,40,40,,,,,,,,,,,,,,,,,,,,,40,,,40,,,40,,40,,,,',
',40,,,,,,,,40,,,,,40,40,40,40,40,40,,,,40,40,,,,,,,40,,,40,839,839,839',
',839,40,40,,839,839,,,,839,,839,839,839,839,839,839,839,,,,,,839,839',
'839,839,839,839,839,,,839,,,,,,,839,,,839,839,839,839,839,839,839,,839',
'839,839,,839,839,,839,839,,,,,,,,,,,,,,,,,,,,,839,,,839,,,839,,839,',
',,,,839,,,,,,,,839,,,,,839,839,839,839,839,839,,,,839,839,,,,,,,839',
',,839,820,820,820,820,820,839,839,,820,820,,,,820,,820,820,820,820,820',
'820,820,,,,,,820,820,820,820,820,820,820,,,820,,,,,,820,820,,820,820',
'820,820,820,820,820,820,,820,820,820,,820,820,,820,820,,,,,,,,,,,,,',
',,,,,,,820,,,820,,,820,,820,,820,,,,820,,,,,,,,820,,,,,820,820,820,820',
'820,820,,,,820,820,,,,,,,820,,,820,52,52,52,,52,820,820,,52,52,,,,52',
',52,52,52,52,52,52,52,,,,,,52,52,52,52,52,52,52,,,52,,,,,,,52,,,52,52',
'52,52,52,52,52,,52,52,52,,52,52,,52,52,,,,,,,,,,,,,,,,,,,,,52,,,52,',
',52,,52,,,,,,52,,,,,,,,52,,,,,52,52,52,52,52,52,,,,52,52,,,,,,,52,,',
'52,53,53,53,,53,52,52,,53,53,,,,53,,53,53,53,53,53,53,53,,,,,,53,53',
'53,53,53,53,53,,,53,,,,,,,53,,,53,53,53,53,53,53,53,53,53,53,53,,53',
'53,,53,53,,,,,,,,,,,,,,,,,,,,,53,,,53,,,53,,53,,53,,,,53,,,,,,,,53,',
',,,53,53,53,53,53,53,,,,53,53,,,,,,,53,,,53,54,54,54,,54,53,53,,54,54',
',,,54,,54,54,54,54,54,54,54,,,,,,54,54,54,54,54,54,54,,,54,,,,,,,54',
',,54,54,54,54,54,54,54,54,54,54,54,,54,54,,54,54,,,,,,,,,,,,,,,,,,,',
',54,,,54,,,54,,54,,,,,,54,,,,,,,,54,,,,,54,54,54,54,54,54,,,,54,54,',
',,,,,54,,,54,809,809,809,,809,54,54,,809,809,,,,809,,809,809,809,809',
'809,809,809,,,,,,809,809,809,809,809,809,809,,,809,,,,,,,809,,,809,809',
'809,809,809,809,809,,809,809,809,,809,809,,809,809,,,,,,,,,,,,,,,,,',
',,,809,,,809,,,809,,809,,809,,,,809,,,,,,,,809,,,,,809,809,809,809,809',
'809,,,,809,809,,,,,,,809,,,809,796,796,796,,796,809,809,,796,796,,,',
'796,,796,796,796,796,796,796,796,,,,,,796,796,796,796,796,796,796,,',
'796,,,,,,,796,,,796,796,796,796,796,796,796,,796,796,796,,796,796,,796',
'796,,,,,,,,,,,,,,,,,,,,,796,,,796,,,796,,796,,,,,,796,,,,,,,,796,,,',
',796,796,796,796,796,796,,,,796,796,,,,,,,796,,,796,57,57,57,,57,796',
'796,,57,57,,,,57,,57,57,57,57,57,57,57,,,,,,57,57,57,57,57,57,57,,,57',
',,,,,,57,,,57,57,57,57,57,57,57,,57,57,57,,57,57,,57,57,,,,,,,,,,,,',
',,,,,,,,57,,,57,,,57,,57,,,,,,57,,,,,,,,57,,,,,57,57,57,57,57,57,,,',
'57,57,,,,,,,57,,,57,58,58,58,,58,57,57,,58,58,,,,58,,58,58,58,58,58',
'58,58,,,,,,58,58,58,58,58,58,58,,,58,,,,,,,58,,,58,58,58,58,58,58,58',
',58,58,58,,58,58,,58,58,,,,,,,,,,,,,,,,,,,,,58,,,58,,,58,,58,,,,,,58',
',,,,,,,58,,,,,58,58,58,58,58,58,,,,58,58,,,,,,,58,,,58,61,61,61,,61',
'58,58,,61,61,,,,61,,61,61,61,61,61,61,61,,,,,,61,61,61,61,61,61,61,',
',61,,,,,,,61,,,61,61,61,61,61,61,61,,61,61,61,,61,61,,61,61,,,,,,,,',
',,,,,,,,,,,,61,,,61,,,61,,61,,,,,,61,,,,,,,,61,,,,,61,61,61,61,61,61',
',,,61,61,61,,,,,61,61,,,61,382,382,382,,382,61,61,,382,382,,,,382,,382',
'382,382,382,382,382,382,,,,,,382,382,382,382,382,382,382,,,382,,,,,',
',382,,,382,382,382,382,382,382,382,,382,382,382,,382,382,,382,382,,',
',,,,,,,,,,,,,,,,,,382,,,382,,,382,,382,,,,,,382,,,,,,,,382,,,,,382,382',
'382,382,382,382,,,,382,382,,,,,,,382,,,382,63,63,63,,63,382,382,,63',
'63,,,,63,,63,63,63,63,63,63,63,,,,,,63,63,63,63,63,63,63,,,63,,,,,,',
'63,,,63,63,63,63,63,63,63,,63,63,63,,63,63,,603,,603,603,603,603,603',
',,,,,,,,603,,,,63,,,63,,,63,,,63,,63,,,,,,,,603,603,,,,,,603,603,603',
'603,63,63,63,63,63,63,,,,63,63,,,,,,,63,,,63,795,795,795,,795,63,63',
',795,795,,,,795,603,795,795,795,795,795,795,795,,,,,,795,795,795,795',
'795,795,795,,,795,,,,,,,795,,,795,795,795,795,795,795,795,,795,795,795',
',795,795,,795,795,,,,,,,,,,,,,,,,,,,,,795,,,795,,,795,,795,,,,,,795',
',,,,,,,795,,,,,795,795,795,795,795,795,,,,795,795,,,,,,,795,,,795,794',
'794,794,,794,795,795,,794,794,,,,794,,794,794,794,794,794,794,794,,',
',,,794,794,794,794,794,794,794,,,794,,,,,,,794,,,794,794,794,794,794',
'794,794,,794,794,794,,794,794,,794,794,,,,,,,,,,,,,,,,,,,,,794,,,794',
',,794,,794,,,,,,794,,,,,,,,794,,,,,794,794,794,794,794,794,,,,794,794',
',,,,,,794,,,794,783,783,783,,783,794,794,,783,783,,,,783,,783,783,783',
'783,783,783,783,,,,,,783,783,783,783,783,783,783,,,783,,,,,,,783,,,783',
'783,783,783,783,783,783,,783,783,783,,783,783,,783,783,,,,,,,,,,,,,',
',,,,,,,783,,,783,,,783,,783,,,,,,783,,,,,,,,783,,,,,783,783,783,783',
'783,783,,,,783,783,,,,,,,783,,,783,782,782,782,,782,783,783,,782,782',
',,,782,,782,782,782,782,782,782,782,,,,,,782,782,782,782,782,782,782',
',,782,,,,,,,782,,,782,782,782,782,782,782,782,,782,782,782,,782,782',
',782,782,,,,,,,,,,,,,,,,,,,,,782,,,782,,,782,,782,,,,,,782,,,,,,,,782',
',,,,782,782,782,782,782,782,,,,782,782,,,,,,,782,,,782,781,781,781,',
'781,782,782,,781,781,,,,781,,781,781,781,781,781,781,781,,,,,,781,781',
'781,781,781,781,781,,,781,,,,,,,781,,,781,781,781,781,781,781,781,,781',
'781,781,,781,781,,781,781,,,,,,,,,,,,,,,,,,,,,781,,,781,,,781,,781,',
',,,,781,,,,,,,,781,,,,,781,781,781,781,781,781,,,,781,781,,,,,,,781',
',,781,775,775,775,775,775,781,781,,775,775,,,,775,,775,775,775,775,775',
'775,775,,,,,,775,775,775,775,775,775,775,,,775,,,,,,775,775,,775,775',
'775,775,775,775,775,775,,775,775,775,,775,775,,775,775,,,,,,,,,,,,,',
',,,,,,,775,,,775,,,775,,775,,775,,,,775,,,,,,,,775,,,,,775,775,775,775',
'775,775,,,,775,775,,,,,,,775,,,775,84,84,84,,84,775,775,,84,84,,,,84',
',84,84,84,84,84,84,84,,84,,,,84,84,84,84,84,84,84,,,84,,,,,,,84,,,84',
'84,84,84,84,84,84,84,84,84,84,,84,84,,84,84,,,,,,,,,,,,,,,,,,,,,84,',
',84,84,,84,,84,,84,,84,,84,,,,,,,,84,,84,,,84,84,84,84,84,84,,,,84,84',
',,,,,,84,,,84,87,87,87,,87,84,84,,87,87,,,,87,,87,87,87,87,87,87,87',
',87,,,,87,87,87,87,87,87,87,,,87,,,,,,,87,,,87,87,87,87,87,87,87,87',
'87,87,87,,87,87,,87,87,,,,,,,,,,,,,,,,,,,,,87,,,87,87,,87,,87,,87,,87',
',87,,,,,,,,87,,87,,,87,87,87,87,87,87,,,,87,87,,,,,,,87,,,87,761,761',
'761,,761,87,87,,761,761,,,,761,,761,761,761,761,761,761,761,,,,,,761',
'761,761,761,761,761,761,,,761,,,,,,,761,,,761,761,761,761,761,761,761',
',761,761,761,,761,761,,761,761,,,,,,,,,,,,,,,,,,,,,761,,,761,,,761,',
'761,,,,,,761,,,,,,,,761,,,,,761,761,761,761,761,761,,,,761,761,,,,,',
',761,,,761,99,99,99,99,99,761,761,,99,99,,,,99,,99,99,99,99,99,99,99',
',,,,,99,99,99,99,99,99,99,,,99,,,,,,99,99,99,99,99,99,99,99,99,99,99',
',99,99,99,,99,99,,99,99,,,,,,,,,,,,,,,,,,,,,99,,,99,,,99,,99,,99,,,',
'99,,,,,,,,99,,,,,99,99,99,99,99,99,,,,99,99,,,,,,99,99,,,99,103,103',
'103,,103,99,99,,103,103,,,,103,,103,103,103,103,103,103,103,,,,,,103',
'103,103,103,103,103,103,,,103,,,,,,,103,,,103,103,103,103,103,103,103',
',103,103,103,,103,103,,103,103,,,,,,,,,,,,,,,,,,,,,103,,,103,,,103,',
'103,,,,,,103,,,,,,,,103,,,,,103,103,103,103,103,103,,,,103,103,,,,,',
',103,,,103,104,104,104,,104,103,103,,104,104,,,,104,,104,104,104,104',
'104,104,104,,,,,,104,104,104,104,104,104,104,,,104,,,,,,,104,,,104,104',
'104,104,104,104,104,,104,104,104,,104,104,,104,104,,,,,,,,,,,,,,,,,',
',,,104,,,104,,,104,,104,,,,,,104,,,,,,,,104,,,,,104,104,104,104,104',
'104,,,,104,104,,,,,,,104,,,104,105,105,105,,105,104,104,,105,105,,,',
'105,,105,105,105,105,105,105,105,,,,,,105,105,105,105,105,105,105,,',
'105,,,,,,,105,,,105,105,105,105,105,105,105,,105,105,105,,105,105,,105',
'105,,,,,,,,,,,,,,,,,,,,,105,,,105,,,105,,105,,,,,,105,,,,,,,,105,,,',
',105,105,105,105,105,105,,,,105,105,,,,,,,105,,,105,106,106,106,,106',
'105,105,,106,106,,,,106,,106,106,106,106,106,106,106,,,,,,106,106,106',
'106,106,106,106,,,106,,,,,,,106,,,106,106,106,106,106,106,106,,106,106',
'106,,106,106,,106,106,,,,,,,,,,,,,,,,,,,,,106,,,106,,,106,,106,,,,,',
'106,,,,,,,,106,,,,,106,106,106,106,106,106,,,,106,106,,,,,,,106,,,106',
'107,107,107,107,107,106,106,,107,107,,,,107,,107,107,107,107,107,107',
'107,,,,,,107,107,107,107,107,107,107,,,107,,,,,,107,107,,107,107,107',
'107,107,107,107,107,,107,107,107,,107,107,,107,107,,,,,,,,,,,,,,,,,',
',,,107,,,107,,,107,,107,,107,,,,107,,,,,,,,107,,,,,107,107,107,107,107',
'107,,,,107,107,,,,,,,107,,,107,108,108,108,108,108,107,107,,108,108',
',,,108,,108,108,108,108,108,108,108,,,,,,108,108,108,108,108,108,108',
',,108,,,,,,108,108,108,108,108,108,108,108,108,108,108,,108,108,108',
',108,108,,108,108,,,,,,,,,,,,,,,,,,,,,108,,,108,,,108,,108,,108,,,,108',
',,,,,,,108,,,,,108,108,108,108,108,108,,,,108,108,,,,,,,108,,,108,754',
'754,754,754,754,108,108,,754,754,,,,754,,754,754,754,754,754,754,754',
',,,,,754,754,754,754,754,754,754,,,754,,,,,,754,754,,754,754,754,754',
'754,754,754,754,,754,754,754,,754,754,,754,754,,,,,,,,,,,,,,,,,,,,,754',
',,754,,,754,,754,,754,,,,754,,,,,,,,754,,,,,754,754,754,754,754,754',
',,,754,754,,,,,,,754,,,754,753,753,753,753,753,754,754,,753,753,,,,753',
',753,753,753,753,753,753,753,,,,,,753,753,753,753,753,753,753,,,753',
',,,,,753,753,,753,753,753,753,753,753,753,753,,753,753,753,,753,753',
',753,753,,,,,,,,,,,,,,,,,,,,,753,,,753,,,753,,753,,753,,,,753,,,,,,',
',753,,,,,753,753,753,753,753,753,,,,753,753,,,,,,,753,,,753,749,749',
'749,749,749,753,753,,749,749,,,,749,,749,749,749,749,749,749,749,,,',
',,749,749,749,749,749,749,749,,,749,,,,,,749,749,,749,749,749,749,749',
'749,749,749,,749,749,749,,749,749,,749,749,,,,,,,,,,,,,,,,,,,,,749,',
',749,,,749,,749,,749,,,,749,,,,,,,,749,,,,,749,749,749,749,749,749,',
',,749,749,,,,,,,749,,,749,195,195,195,195,195,749,749,,195,195,,,,195',
',195,195,195,195,195,195,195,,,,,,195,195,195,195,195,195,195,,,195',
',,,,,195,195,,195,195,195,195,195,195,195,195,,195,195,195,,195,195',
',195,195,,,,,,,,,,,,,,,,,,,,,195,,,195,,,195,,195,,195,,,,195,,,,,,',
',195,,,,,195,195,195,195,195,195,,,,195,195,,,,,,,195,,,195,196,196',
'196,,196,195,195,,196,196,,,,196,,196,196,196,196,196,196,196,,,,,,196',
'196,196,196,196,196,196,,,196,,,,,,,196,,,196,196,196,196,196,196,196',
',196,196,196,,196,196,,196,196,,,,,,,,,,,,,,,,,,,,,196,,,196,,,196,',
'196,,196,,,,196,,,,,,,,196,,,,,196,196,196,196,196,196,,,,196,196,,',
',,,,196,,,196,197,197,197,,197,196,196,,197,197,,,,197,,197,197,197',
'197,197,197,197,,,,,,197,197,197,197,197,197,197,,,197,,,,,,,197,,,197',
'197,197,197,197,197,197,,197,197,197,,197,197,,197,197,,,,,,,,,,,,,',
',,,,,,,197,,,197,,,197,,197,,197,,,,197,,,,,,,,197,,,,,197,197,197,197',
'197,197,,,,197,197,,,,,,,197,,,197,198,198,198,,198,197,197,,198,198',
',,,198,,198,198,198,198,198,198,198,,,,,,198,198,198,198,198,198,198',
',,198,,,,,,,198,,,198,198,198,198,198,198,198,,198,198,198,,198,198',
',198,198,,,,,,,,,,,,,,,,,,,,,198,,,198,,,198,,198,,,,,,198,,,,,,,,198',
',,,,198,198,198,198,198,198,,,,198,198,,,,,,,198,,,198,199,199,199,',
'199,198,198,,199,199,,,,199,,199,199,199,199,199,199,199,,,,,,199,199',
'199,199,199,199,199,,,199,,,,,,,199,,,199,199,199,199,199,199,199,199',
'199,199,199,,199,199,,199,199,,,,,,,,,,,,,,,,,,,,,199,,,199,,,199,,199',
',199,,,,199,,,,,,,,199,,,,,199,199,199,199,199,199,,,,199,199,,,,,,',
'199,,,199,200,200,200,,200,199,199,,200,200,,,,200,,200,200,200,200',
'200,200,200,,,,,,200,200,200,200,200,200,200,,,200,,,,,,,200,,,200,200',
'200,200,200,200,200,200,200,200,200,,200,200,,200,200,,,,,,,,,,,,,,',
',,,,,,200,,,200,,,200,,200,,200,,,,200,,,,,,,,200,,,,,200,200,200,200',
'200,200,,,,200,200,,,,,,,200,,,200,744,744,744,,744,200,200,,744,744',
',,,744,,744,744,744,744,744,744,744,,,,,,744,744,744,744,744,744,744',
',,744,,,,,,,744,,,744,744,744,744,744,744,744,,744,744,744,,744,744',
',744,744,,,,,,,,,,,,,,,,,,,,,744,,,744,,,744,,744,,,,,,744,,,,,,,,744',
',,,,744,744,744,744,744,744,,,,744,744,,,,,,,744,,,744,737,737,737,',
'737,744,744,,737,737,,,,737,,737,737,737,737,737,737,737,,,,,,737,737',
'737,737,737,737,737,,,737,,,,,,,737,,,737,737,737,737,737,737,737,,737',
'737,737,,737,737,,737,737,,,,,,,,,,,,,,,,,,,,,737,,,737,,,737,,737,',
'737,,,,737,,,,,,,,737,,,,,737,737,737,737,737,737,,,,737,737,,,,,,,737',
',,737,705,705,705,,705,737,737,,705,705,,,,705,,705,705,705,705,705',
'705,705,,,,,,705,705,705,705,705,705,705,,,705,,,,,,,705,,,705,705,705',
'705,705,705,705,,705,705,705,,705,705,,705,705,,,,,,,,,,,,,,,,,,,,,705',
',,705,,,705,,705,,705,,,,705,,,,,,,,705,,,,,705,705,705,705,705,705',
',,,705,705,,,,,,,705,,,705,204,204,204,,204,705,705,,204,204,,,,204',
',204,204,204,204,204,204,204,,,,,,204,204,204,204,204,204,204,,,204',
',,,,,,204,,,204,204,204,204,204,204,204,,204,204,204,,204,204,,204,204',
',,,,,,,,,,,,,,,,,,,,204,,,204,,,204,,204,,,,,,204,,,,,,,,204,,,,,204',
'204,204,204,204,204,,,,204,204,,,,,,,204,,,204,205,205,205,,205,204',
'204,,205,205,,,,205,,205,205,205,205,205,205,205,,,,,,205,205,205,205',
'205,205,205,,,205,,,,,,,205,,,205,205,205,205,205,205,205,,205,205,205',
',205,205,,205,205,,,,,,,,,,,,,,,,,,,,,205,,,205,,,205,,205,,,,,,205',
',,,,,,,205,,,,,205,205,205,205,205,205,,,,205,205,,,,,,,205,,,205,206',
'206,206,,206,205,205,,206,206,,,,206,,206,206,206,206,206,206,206,,',
',,,206,206,206,206,206,206,206,,,206,,,,,,,206,,,206,206,206,206,206',
'206,206,,206,206,206,,206,206,,206,206,,,,,,,,,,,,,,,,,,,,,206,,,206',
',,206,,206,,,,,,206,,,,,,,,206,,,,,206,206,206,206,206,206,,,,206,206',
',,,,,,206,,,206,699,699,699,,699,206,206,,699,699,,,,699,,699,699,699',
'699,699,699,699,,,,,,699,699,699,699,699,699,699,,,699,,,,,,,699,,,699',
'699,699,699,699,699,699,,699,699,699,,699,699,,863,,863,863,863,863',
'863,,,,,,,,,863,,,,,,,699,,,699,,,699,,699,,,,,,,,863,,,,,,,863,863',
'863,863,699,699,699,699,699,699,,,,699,699,,,,,,,699,,,699,686,686,686',
',686,699,699,,686,686,,,,686,863,686,686,686,686,686,686,686,,,,,,686',
'686,686,686,686,686,686,,,686,,,,,,,686,,,686,686,686,686,686,686,686',
',686,686,686,,686,686,,,,,,,,,,,,,,,,,,,,,,,,686,,,686,,,686,,686,,',
',,,,,,,,,,,,,,,,686,686,686,686,686,686,,,,686,686,,,,,,,686,,,686,682',
'682,682,682,682,686,686,,682,682,,,,682,,682,682,682,682,682,682,682',
',,,,,682,682,682,682,682,682,682,,,682,,,,,,682,682,,682,682,682,682',
'682,682,682,682,,682,682,682,,682,682,,682,682,,,,,,,,,,,,,,,,,,,,,682',
',,682,,,682,,682,,682,,,,682,,,,,,,,682,,,,,682,682,682,682,682,682',
',,,682,682,,,,,,,682,,,682,681,681,681,681,681,682,682,,681,681,,,,681',
',681,681,681,681,681,681,681,,,,,,681,681,681,681,681,681,681,,,681',
',,,,,681,681,,681,681,681,681,681,681,681,681,,681,681,681,,681,681',
',681,681,,,,,,,,,,,,,,,,,,,,,681,,,681,,,681,,681,,681,,,,681,,,,,,',
',681,,,,,681,681,681,681,681,681,,,,681,681,,,,,,,681,,,681,675,675',
'675,,675,681,681,,675,675,,,,675,,675,675,675,675,675,675,675,,,,,,675',
'675,675,675,675,675,675,,,675,,,,,,,675,,,675,675,675,675,675,675,675',
'675,675,675,675,,675,675,,675,675,,,,,,,,,,,,,,,,,,,,,675,,,675,,,675',
',675,,,,675,,675,,,,,,,,675,,,,,675,675,675,675,675,675,,,,675,675,',
',,,,,675,,,675,674,674,674,,674,675,675,,674,674,,,,674,,674,674,674',
'674,674,674,674,,,,,,674,674,674,674,674,674,674,,,674,,,,,,,674,,,674',
'674,674,674,674,674,674,674,674,674,674,,674,674,,674,674,,,,,,,,,,',
',,,,,,,,,,674,,,674,,,674,,674,,674,,674,,674,,,,,,,,674,,,,,674,674',
'674,674,674,674,,,,674,674,,,,,,,674,,,674,214,214,214,214,214,674,674',
',214,214,,,,214,,214,214,214,214,214,214,214,,,,,,214,214,214,214,214',
'214,214,,,214,,,,,,214,214,,214,214,214,214,214,214,214,214,,214,214',
'214,,214,214,,214,214,,,,,,,,,,,,,,,,,,,,,214,,,214,,,214,,214,,214',
',,,214,,,,,,,,214,,,,,214,214,214,214,214,214,,,,214,214,,,,,,,214,',
',214,215,215,215,,215,214,214,,215,215,,,,215,,215,215,215,215,215,215',
'215,,,,,,215,215,215,215,215,215,215,,,215,,,,,,,215,,,215,215,215,215',
'215,215,215,,215,215,215,,215,215,,215,215,,,,,,,,,,,,,,,,,,,,,215,',
',215,,215,215,,215,,,,,,215,,,,,,,,215,,,,,215,215,215,215,215,215,',
',,215,215,,,,,,,215,,,215,218,218,218,,218,215,215,,218,218,,,,218,',
'218,218,218,218,218,218,218,,,,,,218,218,218,218,218,218,218,,,218,',
',,,,,218,,,218,218,218,218,218,218,218,,218,218,218,,218,218,,218,218',
',,,,,,,,,,,,,,,,,,,,218,,,218,,,218,,218,,,,,,218,,,,,,,,218,,,,,218',
'218,218,218,218,218,,,,218,218,,,,,,,218,,,218,671,671,671,671,671,218',
'218,,671,671,,,,671,,671,671,671,671,671,671,671,,,,,,671,671,671,671',
'671,671,671,,,671,,,,,,671,671,,671,671,671,671,671,671,671,671,,671',
'671,671,,671,671,,671,671,,,,,,,,,,,,,,,,,,,,,671,,,671,,,671,,671,',
'671,,,,671,,,,,,,,671,,,,,671,671,671,671,671,671,,,,671,671,,,,,,,671',
',,671,220,220,220,,220,671,671,,220,220,,,,220,,220,220,220,220,220',
'220,220,,,,,,220,220,220,220,220,220,220,,,220,,,,,,,220,,,220,220,220',
'220,220,220,220,,220,220,220,,220,220,,220,220,,,,,,,,,,,,,,,,,,,,,220',
',,220,,,220,,220,,,,,,220,,,,,,,,220,,,,,220,220,220,220,220,220,,,',
'220,220,,,,,,,220,,,220,221,221,221,,221,220,220,,221,221,,,,221,,221',
'221,221,221,221,221,221,,,,,,221,221,221,221,221,221,221,,,221,,,,,',
',221,,,221,221,221,221,221,221,221,,221,221,221,,221,221,,221,221,,',
',,,,,,,,,,,,,,,,,,221,,,221,,,221,,221,,,,,,221,,,,,,,,221,,,,,221,221',
'221,221,221,221,,,,221,221,,,,,,,221,,,221,222,222,222,,222,221,221',
',222,222,,,,222,,222,222,222,222,222,222,222,,,,,,222,222,222,222,222',
'222,222,,,222,,,,,,,222,,,222,222,222,222,222,222,222,,222,222,222,',
'222,222,,222,222,,,,,,,,,,,,,,,,,,,,,222,,,222,,,222,,222,,,,,,222,',
',,,,,,222,,,,,222,222,222,222,222,222,,,,222,222,,,,,,,222,,,222,223',
'223,223,,223,222,222,,223,223,,,,223,,223,223,223,223,223,223,223,,',
',,,223,223,223,223,223,223,223,,,223,,,,,,,223,,,223,223,223,223,223',
'223,223,,223,223,223,,223,223,,223,223,,,,,,,,,,,,,,,,,,,,,223,,,223',
',,223,,223,,,,,,223,,,,,,,,223,,,,,223,223,223,223,223,223,,,,223,223',
',,,,,,223,,,223,224,224,224,,224,223,223,,224,224,,,,224,,224,224,224',
'224,224,224,224,,,,,,224,224,224,224,224,224,224,,,224,,,,,,,224,,,224',
'224,224,224,224,224,224,,224,224,224,,224,224,,224,224,,,,,,,,,,,,,',
',,,,,,,224,,,224,,,224,,224,,,,,,224,,,,,,,,224,,,,,224,224,224,224',
'224,224,,,,224,224,,,,,,,224,,,224,225,225,225,,225,224,224,,225,225',
',,,225,,225,225,225,225,225,225,225,,,,,,225,225,225,225,225,225,225',
',,225,,,,,,,225,,,225,225,225,225,225,225,225,,225,225,225,,225,225',
',225,225,,,,,,,,,,,,,,,,,,,,,225,,,225,,,225,,225,,,,,,225,,,,,,,,225',
',,,,225,225,225,225,225,225,,,,225,225,,,,,,,225,,,225,226,226,226,',
'226,225,225,,226,226,,,,226,,226,226,226,226,226,226,226,,,,,,226,226',
'226,226,226,226,226,,,226,,,,,,,226,,,226,226,226,226,226,226,226,,226',
'226,226,,226,226,,226,226,,,,,,,,,,,,,,,,,,,,,226,,,226,,,226,,226,',
',,,,226,,,,,,,,226,,,,,226,226,226,226,226,226,,,,226,226,,,,,,,226',
',,226,227,227,227,,227,226,226,,227,227,,,,227,,227,227,227,227,227',
'227,227,,,,,,227,227,227,227,227,227,227,,,227,,,,,,,227,,,227,227,227',
'227,227,227,227,,227,227,227,,227,227,,227,227,,,,,,,,,,,,,,,,,,,,,227',
',,227,,,227,,227,,,,,,227,,,,,,,,227,,,,,227,227,227,227,227,227,,,',
'227,227,,,,,,,227,,,227,228,228,228,,228,227,227,,228,228,,,,228,,228',
'228,228,228,228,228,228,,,,,,228,228,228,228,228,228,228,,,228,,,,,',
',228,,,228,228,228,228,228,228,228,,228,228,228,,228,228,,228,228,,',
',,,,,,,,,,,,,,,,,,228,,,228,,,228,,228,,,,,,228,,,,,,,,228,,,,,228,228',
'228,228,228,228,,,,228,228,,,,,,,228,,,228,229,229,229,,229,228,228',
',229,229,,,,229,,229,229,229,229,229,229,229,,,,,,229,229,229,229,229',
'229,229,,,229,,,,,,,229,,,229,229,229,229,229,229,229,,229,229,229,',
'229,229,,229,229,,,,,,,,,,,,,,,,,,,,,229,,,229,,,229,,229,,,,,,229,',
',,,,,,229,,,,,229,229,229,229,229,229,,,,229,229,,,,,,,229,,,229,230',
'230,230,,230,229,229,,230,230,,,,230,,230,230,230,230,230,230,230,,',
',,,230,230,230,230,230,230,230,,,230,,,,,,,230,,,230,230,230,230,230',
'230,230,,230,230,230,,230,230,,230,230,,,,,,,,,,,,,,,,,,,,,230,,,230',
',,230,,230,,,,,,230,,,,,,,,230,,,,,230,230,230,230,230,230,,,,230,230',
',,,,,,230,,,230,231,231,231,,231,230,230,,231,231,,,,231,,231,231,231',
'231,231,231,231,,,,,,231,231,231,231,231,231,231,,,231,,,,,,,231,,,231',
'231,231,231,231,231,231,,231,231,231,,231,231,,231,231,,,,,,,,,,,,,',
',,,,,,,231,,,231,,,231,,231,,,,,,231,,,,,,,,231,,,,,231,231,231,231',
'231,231,,,,231,231,,,,,,,231,,,231,232,232,232,,232,231,231,,232,232',
',,,232,,232,232,232,232,232,232,232,,,,,,232,232,232,232,232,232,232',
',,232,,,,,,,232,,,232,232,232,232,232,232,232,,232,232,232,,232,232',
',232,232,,,,,,,,,,,,,,,,,,,,,232,,,232,,,232,,232,,,,,,232,,,,,,,,232',
',,,,232,232,232,232,232,232,,,,232,232,,,,,,,232,,,232,233,233,233,',
'233,232,232,,233,233,,,,233,,233,233,233,233,233,233,233,,,,,,233,233',
'233,233,233,233,233,,,233,,,,,,,233,,,233,233,233,233,233,233,233,,233',
'233,233,,233,233,,233,233,,,,,,,,,,,,,,,,,,,,,233,,,233,,,233,,233,',
',,,,233,,,,,,,,233,,,,,233,233,233,233,233,233,,,,233,233,,,,,,,233',
',,233,234,234,234,,234,233,233,,234,234,,,,234,,234,234,234,234,234',
'234,234,,,,,,234,234,234,234,234,234,234,,,234,,,,,,,234,,,234,234,234',
'234,234,234,234,,234,234,234,,234,234,,234,234,,,,,,,,,,,,,,,,,,,,,234',
',,234,,,234,,234,,,,,,234,,,,,,,,234,,,,,234,234,234,234,234,234,,,',
'234,234,,,,,,,234,,,234,235,235,235,,235,234,234,,235,235,,,,235,,235',
'235,235,235,235,235,235,,,,,,235,235,235,235,235,235,235,,,235,,,,,',
',235,,,235,235,235,235,235,235,235,,235,235,235,,235,235,,235,235,,',
',,,,,,,,,,,,,,,,,,235,,,235,,,235,,235,,,,,,235,,,,,,,,235,,,,,235,235',
'235,235,235,235,,,,235,235,,,,,,,235,,,235,236,236,236,,236,235,235',
',236,236,,,,236,,236,236,236,236,236,236,236,,,,,,236,236,236,236,236',
'236,236,,,236,,,,,,,236,,,236,236,236,236,236,236,236,,236,236,236,',
'236,236,,236,236,,,,,,,,,,,,,,,,,,,,,236,,,236,,,236,,236,,,,,,236,',
',,,,,,236,,,,,236,236,236,236,236,236,,,,236,236,,,,,,,236,,,236,237',
'237,237,,237,236,236,,237,237,,,,237,,237,237,237,237,237,237,237,,',
',,,237,237,237,237,237,237,237,,,237,,,,,,,237,,,237,237,237,237,237',
'237,237,,237,237,237,,237,237,,237,237,,,,,,,,,,,,,,,,,,,,,237,,,237',
',,237,,237,,,,,,237,,,,,,,,237,,,,,237,237,237,237,237,237,,,,237,237',
',,,,,,237,,,237,238,238,238,,238,237,237,,238,238,,,,238,,238,238,238',
'238,238,238,238,,,,,,238,238,238,238,238,238,238,,,238,,,,,,,238,,,238',
'238,238,238,238,238,238,,238,238,238,,238,238,,238,238,,,,,,,,,,,,,',
',,,,,,,238,,,238,,,238,,238,,,,,,238,,,,,,,,238,,,,,238,238,238,238',
'238,238,,,,238,238,,,,,,,238,,,238,239,239,239,,239,238,238,,239,239',
',,,239,,239,239,239,239,239,239,239,,,,,,239,239,239,239,239,239,239',
',,239,,,,,,,239,,,239,239,239,239,239,239,239,,239,239,239,,239,239',
',239,239,,,,,,,,,,,,,,,,,,,,,239,,,239,,,239,,239,,,,,,239,,,,,,,,239',
',,,,239,239,239,239,239,239,,,,239,239,,,,,,,239,,,239,240,240,240,',
'240,239,239,,240,240,,,,240,,240,240,240,240,240,240,240,,,,,,240,240',
'240,240,240,240,240,,,240,,,,,,,240,,,240,240,240,240,240,240,240,,240',
'240,240,,240,240,,240,240,,,,,,,,,,,,,,,,,,,,,240,,,240,,,240,,240,',
',,,,240,,,,,,,,240,,,,,240,240,240,240,240,240,,,,240,240,,,,,,,240',
',,240,241,241,241,,241,240,240,,241,241,,,,241,,241,241,241,241,241',
'241,241,,,,,,241,241,241,241,241,241,241,,,241,,,,,,,241,,,241,241,241',
'241,241,241,241,,241,241,241,,241,241,,241,241,,,,,,,,,,,,,,,,,,,,,241',
',,241,,,241,,241,,,,,,241,,,,,,,,241,,,,,241,241,241,241,241,241,,,',
'241,241,,,,,,,241,,,241,242,242,242,,242,241,241,,242,242,,,,242,,242',
'242,242,242,242,242,242,,,,,,242,242,242,242,242,242,242,,,242,,,,,',
',242,,,242,242,242,242,242,242,242,,242,242,242,,242,242,,242,242,,',
',,,,,,,,,,,,,,,,,,242,,,242,,,242,,242,,,,,,242,,,,,,,,242,,,,,242,242',
'242,242,242,242,,,,242,242,,,,,,,242,,,242,243,243,243,,243,242,242',
',243,243,,,,243,,243,243,243,243,243,243,243,,,,,,243,243,243,243,243',
'243,243,,,243,,,,,,,243,,,243,243,243,243,243,243,243,,243,243,243,',
'243,243,,243,243,,,,,,,,,,,,,,,,,,,,,243,,,243,,,243,,243,,,,,,243,',
',,,,,,243,,,,,243,243,243,243,243,243,,,,243,243,,,,,,,243,,,243,244',
'244,244,,244,243,243,,244,244,,,,244,,244,244,244,244,244,244,244,,',
',,,244,244,244,244,244,244,244,,,244,,,,,,,244,,,244,244,244,244,244',
'244,244,,244,244,244,,244,244,,244,244,,,,,,,,,,,,,,,,,,,,,244,,,244',
',,244,,244,,,,,,244,,,,,,,,244,,,,,244,244,244,244,244,244,,,,244,244',
',,,,,,244,,,244,664,664,664,,664,244,244,,664,664,,,,664,,664,664,664',
'664,664,664,664,,,,,,664,664,664,664,664,664,664,,,664,,,,,,,664,,,664',
'664,664,664,664,664,664,,664,664,664,,664,664,,664,664,,,,,,,,,,,,,',
',,,,,,,664,,,664,,,664,,664,,,,,,664,,,,,,,,664,,,,,664,664,664,664',
'664,664,,,,664,664,,,,,,,664,,,664,661,661,661,,661,664,664,,661,661',
',,,661,,661,661,661,661,661,661,661,,,,,,661,661,661,661,661,661,661',
',,661,,,,,,,661,,,661,661,661,661,661,661,661,,661,661,661,,661,661',
',661,661,,,,,,,,,,,,,,,,,,,,,661,,,661,,,661,,661,,,,,,661,,,,,,,,661',
',,,,661,661,661,661,661,661,,,,661,661,,,,,,,661,,,661,657,657,657,657',
'657,661,661,,657,657,,,,657,,657,657,657,657,657,657,657,,,,,,657,657',
'657,657,657,657,657,,,657,,,,,,657,657,,657,657,657,657,657,657,657',
'657,,657,657,657,,657,657,,657,657,,,,,,,,,,,,,,,,,,,,,657,,,657,,,657',
',657,,657,,,,657,,,,,,,,657,,,,,657,657,657,657,657,657,,,,657,657,',
',,,,,657,,,657,254,254,254,,254,657,657,,254,254,,,,254,,254,254,254',
'254,254,254,254,,,,,,254,254,254,254,254,254,254,,,254,,,,,,,254,,,254',
'254,254,254,254,254,254,,254,254,254,,254,254,,254,254,,,,,,,,,,,,,',
',,,,,,,254,,,254,,,254,,254,,,,,,254,,,,,,,,254,,,,,254,254,254,254',
'254,254,,,,254,254,,,,,,,254,,,254,256,256,256,,256,254,254,,256,256',
',,,256,,256,256,256,256,256,256,256,,,,,,256,256,256,256,256,256,256',
',,256,,,,,,,256,,,256,256,256,256,256,256,256,,256,256,256,,256,256',
',256,256,,,,,,,,,,,,,,,,,,,,,256,,,256,,,256,,256,,,,,,256,,,,,,,,256',
',,,,256,256,256,256,256,256,,,,256,256,,,,,,,256,,,256,262,262,262,',
'262,256,256,,262,262,,,,262,,262,262,262,262,262,262,262,,,,,,262,262',
'262,262,262,262,262,,,262,,,,,,,262,,,262,262,262,262,262,262,262,,262',
'262,262,,262,262,,262,262,,,,,,,,,,,,,,,,,,,,,262,,,262,,,262,,262,',
',,,,262,,,,,,,,262,,,,,262,262,262,262,262,262,,,,262,262,,,,,,,262',
',,262,642,642,642,,642,262,262,,642,642,,,,642,,642,642,642,642,642',
'642,642,,,,,,642,642,642,642,642,642,642,,,642,,,,,,,642,,,642,642,642',
'642,642,642,642,,642,642,642,,642,642,,642,642,,,,,,,,,,,,,,,,,,,,,642',
',,642,,,642,,642,,,,,,642,,,,,,,,642,,,,,642,642,642,642,642,642,,,',
'642,642,,,,,,,642,,,642,639,639,639,,639,642,642,,639,639,,,,639,,639',
'639,639,639,639,639,639,,,,,,639,639,639,639,639,639,639,,,639,,,,,',
',639,,,639,639,639,639,639,639,639,,639,639,639,,639,639,,639,639,,',
',,,,,,,,,,,,,,,,,,639,,,639,,,639,,639,,,,,,639,,,,,,,,639,,,,,639,639',
'639,639,639,639,,,,639,639,,,,,,,639,,,639,634,634,634,,634,639,639',
',634,634,,,,634,,634,634,634,634,634,634,634,,,,,,634,634,634,634,634',
'634,634,,,634,,,,,,,634,,,634,634,634,634,634,634,634,,634,634,634,',
'634,634,,634,634,,,,,,,,,,,,,,,,,,,,,634,,,634,,,634,,634,,,,,,634,',
',,,,,,634,,,,,634,634,634,634,634,634,,,,634,634,,,,,,,634,,,634,269',
'269,269,,269,634,634,,269,269,,,,269,,269,269,269,269,269,269,269,,',
',,,269,269,269,269,269,269,269,,,269,,,,,,,269,,,269,269,269,269,269',
'269,269,269,269,269,269,,269,269,,269,269,,,,,,,,,,,,,,,,,,,,,269,,',
'269,,,269,,269,,269,,269,,269,,,,,,,,269,,,,,269,269,269,269,269,269',
',,,269,269,,,,,,,269,,,269,270,270,270,,270,269,269,,270,270,,,,270',
',270,270,270,270,270,270,270,,,,,,270,270,270,270,270,270,270,,,270',
',,,,,,270,,,270,270,270,270,270,270,270,270,270,270,270,,270,270,,270',
'270,,,,,,,,,,,,,,,,,,,,,270,,,270,,,270,,270,,270,,270,,270,,,,,,,,270',
',,,,270,270,270,270,270,270,,,,270,270,,,,,,,270,,,270,278,278,278,',
'278,270,270,,278,278,,,,278,,278,278,278,278,278,278,278,,,,,,278,278',
'278,278,278,278,278,,,278,,,,,,,278,,,278,278,278,278,278,278,278,278',
'278,278,278,,278,278,,278,278,,,,,,,,,,,,,,,,,,,,,278,,,278,,278,278',
',278,,278,,278,,278,,,,,,,,278,,,,,278,278,278,278,278,278,,,,278,278',
',,,,,,278,,,278,633,633,633,,633,278,278,,633,633,,,,633,,633,633,633',
'633,633,633,633,,,,,,633,633,633,633,633,633,633,,,633,,,,,,,633,,,633',
'633,633,633,633,633,633,,633,633,633,,633,633,,633,633,,,,,,,,,,,,,',
',,,,,,,633,,,633,,,633,,633,,,,,,633,,,,,,,,633,,,,,633,633,633,633',
'633,633,,,,633,633,,,,,,,633,,,633,630,630,630,,630,633,633,,630,630',
',,,630,,630,630,630,630,630,630,630,,,,,,630,630,630,630,630,630,630',
',,630,,,,,,,630,,,630,630,630,630,630,630,630,,630,630,630,,630,630',
',630,630,,,,,,,,,,,,,,,,,,,,,630,,,630,,,630,,630,,630,,,,630,,,,,,',
',630,,,,,630,630,630,630,630,630,,,,630,630,,,,,,,630,,,630,628,628',
'628,,628,630,630,,628,628,,,,628,,628,628,628,628,628,628,628,,,,,,628',
'628,628,628,628,628,628,,,628,,,,,,,628,,,628,628,628,628,628,628,628',
',628,628,628,,628,628,,628,628,,,,,,,,,,,,,,,,,,,,,628,,,628,,,628,',
'628,,,,,,628,,,,,,,,628,,,,,628,628,628,628,628,628,,,,628,628,,,,,',
',628,,,628,282,282,282,282,282,628,628,,282,282,,,,282,,282,282,282',
'282,282,282,282,,,,,,282,282,282,282,282,282,282,,,282,,,,,,282,282',
',282,282,282,282,282,282,282,282,,282,282,282,,282,282,,282,282,,,,',
',,,,,,,,,,,,,,,,282,,,282,,,282,,282,,282,,,,282,,,,,,,,282,,,,,282',
'282,282,282,282,282,,,,282,282,,,,,,,282,,,282,601,601,601,,601,282',
'282,,601,601,,,,601,,601,601,601,601,601,601,601,,,,,,601,601,601,601',
'601,601,601,,,601,,,,,,,601,,,601,601,601,601,601,601,601,,601,601,601',
',601,601,,601,601,,,,,,,,,,,,,,,,,,,,,601,,,601,,,601,,601,,,,,,601',
',,,,,,,601,,,,,601,601,601,601,601,601,,,,601,601,,,,,,,601,,,601,599',
'599,599,,599,601,601,,599,599,,,,599,,599,599,599,599,599,599,599,,',
',,,599,599,599,599,599,599,599,,,599,,,,,,,599,,,599,599,599,599,599',
'599,599,,599,599,599,,599,599,,599,599,,,,,,,,,,,,,,,,,,,,,599,,,599',
',,599,,599,,,,,,599,,,,,,,,599,,,,,599,599,599,599,599,599,,,,599,599',
',,,,,,599,,,599,595,595,595,,595,599,599,,595,595,,,,595,,595,595,595',
'595,595,595,595,,,,,,595,595,595,595,595,595,595,,,595,,,,,,,595,,,595',
'595,595,595,595,595,595,595,595,595,595,,595,595,,595,595,,,,,,,,,,',
',,,,,,,,,,595,,,595,,,595,,595,,595,,,,595,,,,,,,,595,,,,,595,595,595',
'595,595,595,,,,595,595,,,,,,,595,,,595,286,286,286,,286,595,595,,286',
'286,,,,286,,286,286,286,286,286,286,286,,,,,,286,286,286,286,286,286',
'286,,,286,,,,,,,286,,,286,286,286,286,286,286,286,,286,286,286,,286',
'286,,,,,,,,,,,,,,,,,,,,,,,,286,,,286,,,286,,286,,,,,,,,,,,,,,,,,,,286',
'286,286,286,286,286,,,,286,286,,,,286,,,286,,,286,287,287,287,287,287',
'286,286,,287,287,,,,287,,287,287,287,287,287,287,287,,,,,,287,287,287',
'287,287,287,287,,,287,,,,,,287,287,,287,287,287,287,287,287,287,287',
',287,287,287,,287,287,,287,287,,,,,,,,,,,,,,,,,,,,,287,,,287,,,287,',
'287,,287,,,,287,,,,,,,,287,,,,,287,287,287,287,287,287,,,,287,287,,',
',,,,287,,,287,589,589,589,,589,287,287,,589,589,,,,589,,589,589,589',
'589,589,589,589,,,,,,589,589,589,589,589,589,589,,,589,,,,,,,589,,,589',
'589,589,589,589,589,589,589,589,589,589,,589,589,,589,589,,,,,,,,,,',
',,,,,,,,,,589,,,589,,,589,,589,,589,,,,589,,,,,,,,589,,,,,589,589,589',
'589,589,589,,,,589,589,,,,,,,589,,,589,586,586,586,,586,589,589,,586',
'586,,,,586,,586,586,586,586,586,586,586,,,,,,586,586,586,586,586,586',
'586,,,586,,,,,,,586,,,586,586,586,586,586,586,586,586,586,586,586,,586',
'586,,586,586,,,,,,,,,,,,,,,,,,,,,586,,,586,,,586,,586,,586,,,,586,,',
',,,,,586,,,,,586,586,586,586,586,586,,,,586,586,,,,,,,586,,,586,584',
'584,584,584,584,586,586,,584,584,,,,584,,584,584,584,584,584,584,584',
',,,,,584,584,584,584,584,584,584,,,584,,,,,,584,584,,584,584,584,584',
'584,584,584,584,,584,584,584,,584,584,,584,584,,,,,,,,,,,,,,,,,,,,,584',
',,584,,,584,,584,,584,,,,584,,,,,,,,584,,,,,584,584,584,584,584,584',
',,,584,584,,,,,,,584,,,584,579,579,579,579,579,584,584,,579,579,,,,579',
',579,579,579,579,579,579,579,,,,,,579,579,579,579,579,579,579,,,579',
',,,,,579,579,,579,579,579,579,579,579,579,579,,579,579,579,,579,579',
',579,579,,,,,,,,,,,,,,,,,,,,,579,,,579,,,579,,579,,579,,,,579,,,,,,',
',579,,,,,579,579,579,579,579,579,,,,579,579,,,,,,,579,,,579,575,575',
'575,575,575,579,579,,575,575,,,,575,,575,575,575,575,575,575,575,,,',
',,575,575,575,575,575,575,575,,,575,,,,,,575,575,,575,575,575,575,575',
'575,575,575,,575,575,575,,575,575,,575,575,,,,,,,,,,,,,,,,,,,,,575,',
',575,,,575,,575,,575,,,,575,,,,,,,,575,,,,,575,575,575,575,575,575,',
',,575,575,,,,,,,575,,,575,561,561,561,,561,575,575,,561,561,,,,561,',
'561,561,561,561,561,561,561,,,,,,561,561,561,561,561,561,561,,,561,',
',,,,,561,,,561,561,561,561,561,561,561,,561,561,561,,561,561,,,,,,,',
',,,,,,,,,,,,,,,,561,,,561,,,561,,561,,,,,,,,,,,,,,,,,,,561,561,561,561',
'561,561,,,,561,561,,,,,,,561,,,561,555,555,555,555,555,561,561,,555',
'555,,,,555,,555,555,555,555,555,555,555,,,,,,555,555,555,555,555,555',
'555,,,555,,,,,,555,555,,555,555,555,555,555,555,555,555,,555,555,555',
',555,555,,555,555,,,,,,,,,,,,,,,,,,,,,555,,,555,,,555,,555,,555,,,,555',
',,,,,,,555,,,,,555,555,555,555,555,555,,,,555,555,,,,,,,555,,,555,554',
'554,554,554,554,555,555,,554,554,,,,554,,554,554,554,554,554,554,554',
',,,,,554,554,554,554,554,554,554,,,554,,,,,,554,554,,554,554,554,554',
'554,554,554,554,,554,554,554,,554,554,,554,554,,,,,,,,,,,,,,,,,,,,,554',
',,554,,,554,,554,,554,,,,554,,,,,,,,554,,,,,554,554,554,554,554,554',
',,,554,554,,,,,,,554,,,554,549,549,549,,549,554,554,,549,549,,,,549',
',549,549,549,549,549,549,549,,,,,,549,549,549,549,549,549,549,,,549',
',,,,,,549,,,549,549,549,549,549,549,549,549,549,549,549,,549,549,,549',
'549,,,,,,,,,,,,,,,,,,,,,549,,,549,,,549,,549,,,,,,549,,,,,,,,549,,,',
',549,549,549,549,549,549,,,,549,549,,,,,,,549,,,549,546,546,546,,546',
'549,549,,546,546,,,,546,,546,546,546,546,546,546,546,,,,,,546,546,546',
'546,546,546,546,,,546,,,,,,,546,,,546,546,546,546,546,546,546,546,546',
'546,546,,546,546,,546,546,,,,,,,,,,,,,,,,,,,,,546,,,546,,,546,,546,',
'546,,546,,546,,,,,,,,546,,,,,546,546,546,546,546,546,,,,546,546,,,,',
',,546,,,546,299,299,299,,299,546,546,,299,299,,,,299,,299,299,299,299',
'299,299,299,,,,,,299,299,299,299,299,299,299,,,299,,,,,,,299,,,299,299',
'299,299,299,299,299,,299,299,299,,299,299,,,,,,,,,,,,,,,,,,,,,,,,299',
',,299,,,299,,299,,,,,,,,,,,,,,,,,,,299,299,299,299,299,299,,,,299,299',
',,,,,,299,,,299,540,540,540,,540,299,299,,540,540,,,,540,,540,540,540',
'540,540,540,540,,,,,,540,540,540,540,540,540,540,,,540,,,,,,,540,,,540',
'540,540,540,540,540,540,,540,540,540,,540,540,,540,540,,,,,,,,,,,,,',
',,,,,,,540,,,540,,,540,,540,,,,,,540,,,,,,,,540,,,,,540,540,540,540',
'540,540,,,,540,540,,,,,,,540,,,540,536,536,536,,536,540,540,,536,536',
',,,536,,536,536,536,536,536,536,536,,,,,,536,536,536,536,536,536,536',
',,536,,,,,,,536,,,536,536,536,536,536,536,536,,536,536,536,,536,536',
',536,536,,,,,,,,,,,,,,,,,,,,,536,,,536,,,536,,536,,,,,,536,,,,,,,,536',
',,,,536,536,536,536,536,536,,,,536,536,,,,,,,536,,,536,535,535,535,',
'535,536,536,,535,535,,,,535,,535,535,535,535,535,535,535,,,,,,535,535',
'535,535,535,535,535,,,535,,,,,,,535,,,535,535,535,535,535,535,535,,535',
'535,535,,535,535,,535,535,,,,,,,,,,,,,,,,,,,,,535,,,535,,,535,,535,',
',,,,535,,,,,,,,535,,,,,535,535,535,535,535,535,,,,535,535,,,,,,,535',
',,535,534,534,534,,534,535,535,,534,534,,,,534,,534,534,534,534,534',
'534,534,,,,,,534,534,534,534,534,534,534,,,534,,,,,,,534,,,534,534,534',
'534,534,534,534,,534,534,534,,534,534,,534,534,,,,,,,,,,,,,,,,,,,,,534',
',,534,,,534,,534,,,,,,534,,,,,,,,534,,,,,534,534,534,534,534,534,,,',
'534,534,,,,,,,534,,,534,531,531,531,,531,534,534,,531,531,,,,531,,531',
'531,531,531,531,531,531,,,,,,531,531,531,531,531,531,531,,,531,,,,,',
',531,,,531,531,531,531,531,531,531,,531,531,531,,531,531,,,,,,,,,,,',
',,,,,,,,,,,,531,,,531,,,531,,531,,,,,,,,,,,,,,,,,,,531,531,531,531,531',
'531,,,,531,531,,,,,,,531,,,531,308,308,308,,308,531,531,,308,308,,,',
'308,,308,308,308,308,308,308,308,,,,,,308,308,308,308,308,308,308,,',
'308,,,,,,,308,,,308,308,308,308,308,308,308,,308,308,308,,308,308,,308',
'308,,,,,,,,,,,,,,,,,,,,,308,,,308,308,,308,,308,,,,,,308,,,,,,,,308',
',,,,308,308,308,308,308,308,,,,308,308,,,,,,,308,,,308,310,310,310,310',
'310,308,308,,310,310,,,,310,,310,310,310,310,310,310,310,,,,,,310,310',
'310,310,310,310,310,,,310,,,,,,310,310,,310,310,310,310,310,310,310',
'310,,310,310,310,,310,310,,310,310,,,,,,,,,,,,,,,,,,,,,310,,,310,,,310',
',310,,310,,,,310,,,,,,,,310,,,,,310,310,310,310,310,310,,,,310,310,',
',,,,,310,,,310,525,525,525,,525,310,310,,525,525,,,,525,,525,525,525',
'525,525,525,525,,,,,,525,525,525,525,525,525,525,,,525,,,,,,,525,,,525',
'525,525,525,525,525,525,525,525,525,525,,525,525,,525,525,,,,,,,,,,',
',,,,,,,,,,525,,,525,,,525,,525,,525,,,,525,,,,,,,,525,,,,,525,525,525',
'525,525,525,,,,525,525,,,,,,,525,,,525,522,522,522,,522,525,525,,522',
'522,,,,522,,522,522,522,522,522,522,522,,,,,,522,522,522,522,522,522',
'522,,,522,,,,,,,522,,,522,522,522,522,522,522,522,522,522,522,522,,522',
'522,,522,522,,,,,,,,,,,,,,,,,,,,,522,,,522,,,522,,522,,522,,,,522,,',
',,,,,522,,,,,522,522,522,522,522,522,,,,522,522,,,,,,,522,,,522,520',
'520,520,,520,522,522,,520,520,,,,520,,520,520,520,520,520,520,520,,',
',,,520,520,520,520,520,520,520,,,520,,,,,,,520,,,520,520,520,520,520',
'520,520,,520,520,520,,520,520,,,,,,,,,,,,,,,,,,,,,,,,520,,,520,,,520',
',520,,,,,,,,,,,,,,,,,,,520,520,520,520,520,520,,,,520,520,,,,,,,520',
',,520,514,514,514,514,514,520,520,,514,514,,,,514,,514,514,514,514,514',
'514,514,,,,,,514,514,514,514,514,514,514,,,514,,,,,,514,514,,514,514',
'514,514,514,514,514,514,,514,514,514,,514,514,,514,514,,,,,,,,,,,,,',
',,,,,,,514,,,514,,,514,,514,,514,,,,514,,,,,,,,514,,,,,514,514,514,514',
'514,514,,,,514,514,,,,,,514,514,,,514,508,508,508,,508,514,514,,508',
'508,,,,508,,508,508,508,508,508,508,508,,,,,,508,508,508,508,508,508',
'508,,,508,,,,,,,508,,,508,508,508,508,508,508,508,,508,508,508,,508',
'508,,508,508,,,,,,,,,,,,,,,,,,,,,508,,,508,,508,508,,508,,,,508,,508',
',,,,,,,508,,,,,508,508,508,508,508,508,,,,508,508,,,,,,,508,,,508,492',
'492,492,,492,508,508,,492,492,,,,492,,492,492,492,492,492,492,492,,',
',,,492,492,492,492,492,492,492,,,492,,,,,,,492,,,492,492,492,492,492',
'492,492,,492,492,492,,492,492,,492,492,,,,,,,,,,,,,,,,,,,,,492,,,492',
',,492,,492,,,,,,492,,,,,,,,492,,,,,492,492,492,492,492,492,,,,492,492',
',,,,,,492,,,492,490,490,490,,490,492,492,,490,490,,,,490,,490,490,490',
'490,490,490,490,,,,,,490,490,490,490,490,490,490,,,490,,,,,,,490,,,490',
'490,490,490,490,490,490,490,490,490,490,,490,490,,490,490,,,,,,,,,,',
',,,,,,,,,,490,,,490,,,490,,490,,,,490,,490,,,,,,,,490,,,,,490,490,490',
'490,490,490,,,,490,490,,,,,,,490,,,490,488,488,488,,488,490,490,,488',
'488,,,,488,,488,488,488,488,488,488,488,,,,,,488,488,488,488,488,488',
'488,,,488,,,,,,,488,,,488,488,488,488,488,488,488,488,488,488,488,,488',
'488,,488,488,,,,,,,,,,,,,,,,,,,,,488,,,488,,,488,,488,,488,,488,,488',
',,,,,,,488,,,,,488,488,488,488,488,488,,,,488,488,,,,,,,488,,,488,485',
'485,485,,485,488,488,,485,485,,,,485,,485,485,485,485,485,485,485,,',
',,,485,485,485,485,485,485,485,,,485,,,,,,,485,,,485,485,485,485,485',
'485,485,,485,485,485,,485,485,,485,485,,,,,,,,,,,,,,,,,,,,,485,,,485',
',,485,,485,,,,,,485,,,,,,,,485,,,,,485,485,485,485,485,485,,,,485,485',
',,,,,648,485,,,485,,,648,648,648,485,485,648,648,648,,648,,,,,,,,,,648',
'648,,,,,,,,,648,648,,648,648,648,648,648,,,,,,,,,,,,,,,,,,,,,,648,648',
'648,648,648,648,648,648,648,648,648,648,648,648,648,,,648,648,648,,648',
'648,,,648,,648,,648,,648,,648,,648,648,648,648,648,648,648,,648,,648',
',,,,,,,,,,,,648,648,648,648,,648,,439,648,,648,,,648,439,439,439,,,',
'439,439,,439,,,,,,,,,,,,,,,,,,,,439,439,,439,439,439,439,439,,,,,,,',
',,,,,,,,,,,,,,439,439,439,439,439,439,439,439,439,439,439,439,439,439',
'439,,,439,439,439,,439,,,,439,,,,,,439,,439,,439,439,439,439,439,439',
'439,,439,,439,,,,,,,,,,,,,439,439,,439,,439,,647,439,,439,,,439,647',
'647,647,,,647,647,647,,647,,,,,,,,,647,647,647,,,,,,,,,647,647,,647',
'647,647,647,647,,,,,,,,,,,,,,,,,,,,,,647,647,647,647,647,647,647,647',
'647,647,647,647,647,647,647,,,647,647,647,,647,647,,,647,,647,,647,',
'647,,647,,647,647,647,647,647,647,647,,647,647,647,,,,,,,,,,,,,647,647',
'647,647,,647,,437,647,,647,,,647,437,437,437,,,,437,437,,437,,,,,,,',
',437,,,,,,,,,,,437,437,,437,437,437,437,437,,,,,,,,,,,,,,,,,,,,,,437',
'437,437,437,437,437,437,437,437,437,437,437,437,437,437,,,437,437,437',
',437,,,,437,,,,,,437,,437,,437,437,437,437,437,437,437,,437,437,437',
',,,,,,,,,,,,437,437,,437,,437,,50,437,,437,,,437,50,50,50,,,50,50,50',
',50,,,,,,,,,,50,50,50,,,,,,,,50,50,,50,50,50,50,50,,,,,,,,,,,,,,,,,',
',,,,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,,,50,50,50,,,50,,,50',
',50,,50,,50,,50,,50,50,50,50,50,50,50,,50,,50,,,,,,,,,,,,,50,50,50,50',
'28,50,,50,50,,50,28,28,28,,,28,28,28,,28,,,,,,,,,,28,28,,,,,,,,,28,28',
',28,28,28,28,28,,,,,,,,,,,,,,,,,,,,,,28,28,28,28,28,28,28,28,28,28,28',
'28,28,28,28,,,28,28,28,,,28,,28,28,,28,,28,,28,,28,,28,28,28,28,28,28',
'28,,28,,28,,,,,,,,,,,,,28,28,28,28,498,28,,,28,,28,498,498,498,,,498',
'498,498,,498,,,,,,,,,,498,,,,,,,,,,498,498,,498,498,498,498,498,,,,',
',,,,,,,496,,,,,,,496,496,496,,,496,496,496,,496,,,,,498,498,,,,496,',
',498,,,,,498,498,496,496,,496,496,496,496,496,,,,,,,,,,,,498,,,,,,,',
',,,,,498,,498,,,498,,,496,496,,497,,,,,496,,497,497,497,496,496,497',
'497,497,,497,,,,,,,,,,497,,,,,496,,,,,497,497,,497,497,497,497,497,496',
',496,,,496,203,203,,,203,,,,,,,,,203,203,203,203,203,203,203,203,203',
',,203,203,497,497,,,203,203,203,203,497,,,,,497,497,,,,,203,203,,203',
'203,203,203,203,203,203,203,203,203,203,,497,203,,,,,,,,,,,,497,,497',
',,497,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,,,,7,7,7,7,7,7',
'7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,,7,,,,,,,,,7,7,7,7,7,7,7,7,7,,,7',
'7,,,,,7,7,7,7,,,,,,,,,,,,7,7,,7,7,7,7,7,7,7,7,7,7,7,,,7,7,,,,,,,,,,7',
'416,416,416,416,416,416,416,416,416,416,416,416,416,416,416,416,416',
'416,416,416,416,416,416,416,,,,416,416,416,416,416,416,416,416,416,416',
'416,416,416,416,416,416,416,416,416,416,416,416,416,,,416,,,,,,,,,416',
'416,416,416,416,416,416,416,416,,,416,416,,,,,416,416,416,416,,,,,,',
',,,,,416,416,,416,416,416,416,416,416,416,416,416,416,416,,,416,416',
',,,,,,,,,416,412,412,412,412,412,412,412,412,412,412,412,412,412,412',
'412,412,412,412,412,412,412,412,412,412,,,,412,412,412,412,412,412,412',
'412,412,412,412,412,412,412,412,412,412,412,412,412,412,412,412,,,412',
',,,,,,,,412,412,412,412,412,412,412,412,412,,,412,412,,,,,412,412,412',
'412,,,,,,,,,,,,412,412,,412,412,412,412,412,412,412,412,412,412,412',
',,412,412,,,,,,,,,,412,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8',
'8,,,,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,,,8,,,,,,,,,8,8,8',
'8,8,8,8,8,8,,,8,8,,,,,8,8,8,8,,,,,,,,,,,,8,8,,8,8,8,8,8,8,8,8,8,8,8',
',,8,8,,,,,,,,,,8,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79',
'79,79,79,79,79,79,79,,,,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79',
'79,79,79,79,79,79,79,79,79,79,79,,79,,,,,,,79,79,79,79,79,79,79,79,79',
',,79,79,,,,,79,79,79,79,,,,,,,,,,,,79,79,,79,79,79,79,79,79,79,79,79',
'79,79,,,79,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192',
'192,192,192,192,192,192,192,192,192,,,,192,192,192,192,192,192,192,192',
'192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192',
'192,,192,,,,,,,192,192,192,192,192,192,192,192,192,,,192,192,,,,,192',
'192,192,192,,,,,,,,,,,,192,192,,192,192,192,192,192,192,192,192,192',
'192,192,,,192,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65',
'65,65,65,65,65,65,,,,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65',
'65,65,65,65,65,65,65,65,65,65,,65,,,,,,,65,65,65,65,65,65,65,65,65,',
',65,65,,,,,65,65,65,65,,,,,,65,,,,,,65,65,,65,65,65,65,65,65,65,65,65',
'65,65,,,65,772,772,772,772,772,772,772,772,772,772,772,772,772,772,772',
'772,772,772,772,772,772,772,772,772,,,,772,772,772,772,772,772,772,772',
'772,772,772,772,772,772,772,772,772,772,772,772,772,772,772,,,772,,',
',,,,,,772,772,772,772,772,772,772,772,772,,,772,772,,,,,772,772,772',
'772,,,,,,,,,,,,772,772,,772,772,772,772,772,772,772,772,772,772,772',
'596,596,772,,596,,,,,,,,,596,596,596,596,596,596,596,596,596,,,596,596',
',,,,596,596,596,596,,,,,,596,,,,,,596,596,,596,596,596,596,596,596,596',
'596,596,596,596,202,202,596,,202,,,,,,,,,202,202,202,202,202,202,202',
'202,202,,,202,202,,,,,202,202,202,202,,,,,,,,,,,,202,202,,202,202,202',
'202,202,202,202,202,202,202,202,267,267,202,,267,,,,,,,,,267,267,267',
'267,267,267,267,267,267,,,267,267,,,,,267,267,267,267,,,,,,,,,,,,267',
'267,,267,267,267,267,267,267,267,267,267,267,267,451,451,267,,451,,',
',,,,,,451,451,451,451,451,451,451,451,451,,,451,451,,,,,451,451,451',
'451,,,,,,,,,,,,451,451,,451,451,451,451,451,451,451,451,451,451,451',
'588,588,451,,588,,,,,,,,,588,588,588,588,588,588,588,588,588,,,588,588',
',,,,588,588,588,588,,,,,,,,,,,,588,588,,588,588,588,588,588,588,588',
'588,588,588,588,587,587,588,,587,,,,,,,,,587,587,587,587,587,587,587',
'587,587,,,587,587,,,,,587,587,587,587,,,,,,587,,,,,,587,587,,587,587',
'587,587,587,587,587,587,587,587,587,450,450,587,,450,,,,,,,,,450,450',
'450,450,450,450,450,450,450,,,450,450,,,,,450,450,450,450,,,,,,450,',
',,,,450,450,,450,450,450,450,450,450,450,450,450,450,450,266,266,450',
',266,,,,,,,,,266,266,266,266,266,266,266,266,266,,,266,266,,,,,266,266',
'266,266,,,,,,,,,,,,266,266,,266,266,266,266,266,266,266,266,266,266',
'266,523,523,266,,523,,,,,,,,,523,523,523,523,523,523,523,523,523,,,523',
'523,,,,,523,523,523,523,,,,,,523,,,,,,523,523,,523,523,523,523,523,523',
'523,523,523,523,523,594,594,523,,594,,,,,,,,,594,594,594,594,594,594',
'594,594,594,,,594,594,,,,,594,594,594,594,,,,,,,,,,,,594,594,,594,594',
'594,594,594,594,594,594,594,594,594,538,538,594,,538,,,,,,,,,538,538',
'538,538,538,538,538,538,538,,,538,538,,,,,538,538,538,538,,,,,,,,,,',
',538,538,,538,538,538,538,538,538,538,538,538,538,538,537,537,538,,537',
',,,,,,,,537,537,537,537,537,537,537,537,537,,,537,537,,,,,537,537,537',
'537,,,,,,537,,,,,,537,537,,537,537,537,537,537,537,537,537,537,537,537',
'265,265,537,,265,,,,,,,,,265,265,265,265,265,265,265,265,265,,,265,265',
',,,,265,265,265,265,,,,,,,,,,,,265,265,,265,265,265,265,265,265,265',
'265,265,265,265,201,201,265,,201,,,,,,,,,201,201,201,201,201,201,201',
'201,201,,,201,201,,,,,201,201,201,201,,,,,,201,,,,,,201,201,,201,201',
'201,201,201,201,201,201,201,201,201,955,955,201,,955,,,,,,,,,955,955',
'955,955,955,955,955,955,955,,,955,955,,,,,955,955,955,955,,,,,,955,',
',,,,955,955,,955,955,955,955,955,955,955,955,955,955,955,526,526,955',
',526,,,,,,,,,526,526,526,526,526,526,526,526,526,,,526,526,,,,,526,526',
'526,526,,,,,,,,,,,,526,526,,526,526,526,526,526,526,526,526,526,526',
'526,829,829,526,,829,,,,,,,,,829,829,829,829,829,829,829,829,829,,,829',
'829,,,,,829,829,829,829,,,,,,,,,,,,829,829,,829,829,829,829,829,829',
'829,829,829,829,829,956,956,829,,956,,,,,,,,,956,956,956,956,956,956',
'956,956,956,,,956,956,,,,,956,956,956,956,,,,,,,,,,,,956,956,,956,956',
'956,956,956,956,956,956,956,956,956,524,524,956,,524,,,,,,,,,524,524',
'524,524,524,524,524,524,524,,,524,524,,,,,524,524,524,524,,,,,,,,,,',
',524,524,,524,524,524,524,524,524,524,524,524,524,524,,,524' ]
        racc_action_check = arr = ::Array.new(25478, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_action_pointer = [
  1046,  1007,   nil,   -63,   nil,  1031,   886, 23431, 23794,   883,
   825,   815,   826,  1088,   461,   436,   nil,  3273,  3404,  1439,
   847,   nil,  3797,  3928,  4059,   394,   -11,  4452, 23043,   nil,
  4583,  4714,  4845,   nil,   744,   391,   746,   377,  5500,  5631,
  5762,   674,  1350,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
 22916,   nil,  6155,  6286,  6417,   -19,  3303,  6810,  6941,   nil,
   nil,  7072,    -2,  7334,   nil, 24135,   nil,   nil,   nil,   nil,
   nil,   -79,   nil,   nil,   nil,   nil,   nil,   603,   602, 23915,
   nil,   nil,   nil,   505,  8251,   nil,   nil,  8382,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   678,   nil,  8644,
   nil,   nil,   nil,  8775,  8906,  9037,  9168,  9299,  9430,   nil,
   404,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil, 24025,   523,   nil,  9954, 10085, 10216, 10347, 10478,
 10609, 25071, 24363, 23304, 11133, 11264, 11395,   nil,   415,   199,
  1073,   202,   969,  1015, 12312, 12443,   nil,   nil, 12574,   996,
 12836, 12967, 13098, 13229, 13360, 13491, 13622, 13753, 13884, 14015,
 14146, 14277, 14408, 14539, 14670, 14801, 14932, 15063, 15194, 15325,
 15456, 15587, 15718, 15849, 15980,   nil,   nil,   nil,   nil,  2880,
   nil,   934,   929,   nil, 16504,   951, 16635,   nil,   nil,   nil,
   nil,   nil, 16766,   nil,   nil, 25012, 24717, 24422,   932, 17290,
 17421,   nil,   nil,   nil,   nil,   nil,   nil,   nil, 17552,   505,
  1162,   950, 18076,   956,   972,   982, 18600, 18731,    17,   517,
  1072,   235,  1049,   125,   274,   nil,   277,   397,   458, 20172,
   nil,   349,   534,   546,   514,   nil,   587,   nil, 20958,   nil,
 21089,   237,   nil,   542,   292,   360,   647,   635,   146,   689,
   nil,   nil,    12,  3434,   nil,   nil,   nil,   655,   653,   nil,
   720,   734,   nil,   nil,   nil,   nil,   nil,   nil,   nil,  3026,
   nil,   nil,   nil,   811,   nil,   nil,   814,    25,     0,    45,
  1308,  1439,   486,    85,   743,    50,  1481,   877,    29,   975,
   nil,   nil,  3129,   970,   nil,  1612,   nil,    65,   nil,   nil,
   129,    61,   280,   285,   307,   319,   369,   397,   438,   nil,
    -4,   nil,  7203,   nil,   369,   nil,   348,   nil,   268,   889,
   375,   nil,   885,   -36,   nil,   391,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   892, 23673,   nil,   nil,   nil, 23552,   864,   nil,   nil,
   653,   nil,  1963,   803,   nil,   785,   nil,   nil,  1177,   817,
   786,   433,   432,  1832,   nil,   nil,   nil, 22786,   784, 22526,
   nil,  1701,  1570,   915,   nil,   nil,   nil,  1832,   nil,   nil,
 24658, 24481,   784,   653,   216,   522,   391,   260,   120,   nil,
  4321,  4190,   593,   566,   756,   755,   747,   728,  5238,  5369,
  4738,  4976,  3398,  4839,  3143,  3267,  5107,  3666,  4452,  4583,
  4059,   516,   524,  3797,  3928, 22268,   133,   nil, 22137,   nil,
 22006,   nil, 21875,   nil,   345,   nil, 23225, 23304, 23170,   -29,
   nil,   620,   nil,   nil,   616,   614,   nil,   nil, 21744,   126,
   154,   647,   nil,   nil, 21613,   644,   607,   nil,   nil,   589,
 21482,   609, 21351, 24776, 25366, 21220, 25189,    39,   564,   nil,
   nil, 20827,   506,   nil, 20696, 20565, 20434, 24953, 24894,  2618,
 20303,   589,   586,   502,   nil,   nil, 20041,   nil,   nil, 19910,
   nil,   nil,   nil,   nil, 19779, 19648,   211,   nil,   728,   nil,
   nil, 19517,  3565,   nil,   403,   nil,   nil,   101,   nil,  3063,
   nil,  1017,   552,   nil,   nil, 19386,  1124,   nil,   nil, 19255,
   203,   221,  1116,  1121, 19124,   nil, 18993, 24599, 24540, 18862,
     0,   nil,  1743,   nil, 24835, 18469, 24304,   nil,   nil, 18338,
   -52, 18207,   nil,  7347,   nil,   nil,   nil,    31,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   -24,   nil,
   nil,   nil,   918,   nil,   nil,   nil,   nil,   nil, 17945,   909,
 17814,   129,   148, 17683, 17159,   931,   nil,   nil,   nil, 17028,
   939,   nil, 16897,   940,   nil,   -49,   -64, 22656, 22396,   950,
   951,   784,   nil,  1046,   nil,  3041,   nil, 16373,   932,   nil,
   972, 16242,   nil,   nil, 16111,   nil,   nil,   nil,   nil,   nil,
   nil, 12705,   nil,   999, 12181, 12050,   915,   996,   nil,   nil,
  1033, 11919, 11788,   nil,   900,   -51, 11657,  1007,   nil,  1043,
   229,   232,  1051,   214,   207,  1066,   -47,    -7,    -4, 11526,
  2749,   139,   171,   -11,   273, 11002,   nil,   nil,   206,   nil,
   197,   306,   nil,   nil,   205,   nil,   228,  1219,   316,   279,
   293,   nil,   nil,   424,  3129,   nil,   212,   nil,   522,   nil,
   nil,   nil,   nil,   nil,   529,   nil,   568, 10871,   496,    46,
    40,   160,    45,   511, 10740,  1874,   nil,   551,   550,  9823,
   374,   nil,   -26,  9692,  9561,  4858,   518,   nil,   nil,   619,
   nil,  8513,   nil,   554,   555,   nil,   564,   566,   569,   nil,
   561,   nil, 24245,   610,  1030,  8120,   nil,   nil,   nil,  2487,
   586,  7989,  7858,  7727,   nil,  2356,   nil,  2225,   nil,   nil,
  2094,   nil,  1963,   nil,  7596,  7465,  6679,   220,   -48,   nil,
   nil,   641,   741,   nil,   nil,   nil,   652,   nil,   638,  6548,
   nil,   661,   763,   647,   252,   nil,   nil,   nil,   772,   nil,
  6024,   657,   697,   nil,   nil,   nil,   nil,   nil,   nil, 25248,
   nil,   713,   nil,   nil,   nil,   nil,   902,   787,   nil,  5893,
   789,  5369,  5238,   nil,   nil,    69,   -21,   546,   -19,   nil,
   819,   nil,   nil,   821,   822,   720,   nil,   nil,   nil,   362,
   nil,   nil,   437, 11539,   nil,   466,   nil,   282,   nil,  5107,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   755,   742,   nil,
  1701,   nil,  1570,  4976,  4321,  4190,   nil,   nil,   nil,  3666,
   750,   nil,   nil,   nil,  3535,   nil,   nil,    73,  3142,   nil,
   804,   768,   nil,   nil,    80,   nil,   895,   898,  3011,  2880,
   nil,   nil,  2749,   nil,   nil,   824,   nil,   789,   nil,   nil,
   794,   798,   801,   792,   nil,   nil,  4727,   nil,  1308,   nil,
  2618,   nil,  2487,    84,   826,   923,    88,   nil,   nil,  2356,
   nil,   nil,   nil,   186,  2225,   987,   nil,   nil,   335,   nil,
   nil,   nil,  2094,   994,  1177, 25130, 25307,    96,   536,   nil,
   nil,   nil,   872,   nil,   769,   953,   nil,   899,   105,   112,
   129,   211,   nil,   nil,   nil,   nil,    -7 ]

racc_action_default = [
    -3,  -560,    -1,  -548,    -4,    -6,  -560,  -560,  -560,  -560,
  -560,  -560,  -560,  -560,  -281,   -37,   -38,  -560,  -560,   -43,
   -45,   -46,  -293,  -331,  -332,   -50,  -259,  -386,  -259,   -65,
   -10,   -69,   -77,   -79,  -560,  -461,  -560,  -560,  -560,  -560,
  -560,  -550,  -235,  -274,  -275,  -276,  -277,  -278,  -279,  -280,
  -538,  -283,  -560,  -559,  -529,  -301,  -559,  -560,  -560,  -306,
  -309,  -548,  -560,  -560,  -323,  -560,  -333,  -334,  -404,  -405,
  -406,  -407,  -408,  -559,  -411,  -559,  -559,  -559,  -559,  -559,
  -438,  -444,  -445,  -560,  -450,  -451,  -452,  -453,  -454,  -455,
  -456,  -457,  -458,  -459,  -460,  -463,  -464,  -560,    -2,  -549,
  -555,  -556,  -557,  -560,  -560,  -560,  -560,  -560,    -3,   -13,
  -560,  -106,  -107,  -108,  -109,  -110,  -111,  -112,  -115,  -116,
  -117,  -118,  -119,  -120,  -121,  -122,  -123,  -124,  -125,  -126,
  -127,  -128,  -129,  -130,  -131,  -132,  -133,  -134,  -135,  -136,
  -137,  -138,  -139,  -140,  -141,  -142,  -143,  -144,  -145,  -146,
  -147,  -148,  -149,  -150,  -151,  -152,  -153,  -154,  -155,  -156,
  -157,  -158,  -159,  -160,  -161,  -162,  -163,  -164,  -165,  -166,
  -167,  -168,  -169,  -170,  -171,  -172,  -173,  -174,  -175,  -176,
  -177,  -178,  -179,  -180,  -181,  -182,  -183,  -184,  -185,  -186,
  -187,  -188,  -560,   -18,  -113,   -10,  -560,  -560,  -560,  -559,
  -559,  -560,  -560,  -560,  -560,  -560,  -560,   -41,  -560,  -461,
  -560,  -281,  -560,  -560,   -10,  -560,   -42,  -225,  -560,  -560,
  -560,  -560,  -560,  -560,  -560,  -560,  -560,  -560,  -560,  -560,
  -560,  -560,  -560,  -560,  -560,  -560,  -560,  -560,  -560,  -560,
  -560,  -560,  -560,  -560,  -560,  -232,  -373,  -375,   -47,  -236,
  -252,  -266,  -266,  -256,  -560,  -267,  -560,  -293,  -331,  -332,
  -559,  -531,  -560,   -48,   -49,  -560,  -560,  -560,   -55,  -559,
  -560,  -300,  -379,  -387,  -389,   -63,  -385,   -64,  -560,  -548,
   -11,   -65,   -10,  -560,  -560,   -70,   -73,   -10,  -461,  -560,
  -560,  -281,  -296,  -550,  -560,  -335,  -386,  -560,   -75,  -560,
   -81,  -288,  -446,  -447,  -560,  -210,  -211,  -226,  -560,  -551,
   -10,  -550,  -237,  -550,  -552,  -552,  -560,  -560,  -552,  -560,
  -302,  -303,  -560,  -560,  -346,  -347,  -354,  -559,  -495,  -361,
  -559,  -559,  -372,  -494,  -496,  -497,  -498,  -499,  -500,  -560,
  -513,  -518,  -519,  -521,  -522,  -523,  -560,   -44,  -560,  -560,
  -560,  -560,  -548,  -560,  -549,  -461,  -560,  -560,  -281,  -560,
  -502,  -503,  -102,  -560,  -104,  -560,  -281,  -560,  -320,  -461,
  -560,  -106,  -107,  -144,  -145,  -161,  -166,  -173,  -176,  -326,
  -560,  -527,  -560,  -409,  -560,  -424,  -560,  -426,  -560,  -560,
  -560,  -416,  -560,  -560,  -422,  -560,  -437,  -439,  -440,  -441,
  -442,  -448,  -449,   977,    -5,  -558,   -19,   -20,   -21,   -22,
   -23,  -560,  -560,   -15,   -16,   -17,  -560,  -560,   -25,   -34,
  -189,  -267,  -560,  -560,   -26,   -35,   -36,   -27,  -191,  -560,
  -560,  -539,  -540,  -559,  -382,  -541,  -542,  -539,  -259,  -540,
  -384,  -544,  -545,  -559,  -539,  -540,   -33,  -199,   -39,   -40,
  -560,  -560,  -559,  -559,  -288,  -560,  -560,  -560,  -560,  -299,
  -200,  -201,  -202,  -203,  -204,  -205,  -206,  -207,  -212,  -213,
  -214,  -215,  -216,  -217,  -218,  -219,  -220,  -221,  -222,  -223,
  -224,  -227,  -228,  -229,  -230,  -560,  -559,  -253,  -560,  -254,
  -560,  -264,  -560,  -268,  -560,  -534,  -259,  -259,  -259,  -559,
   -56,  -550,  -247,  -248,  -266,  -266,  -260,  -261,  -560,  -559,
  -559,  -560,  -295,    -9,  -549,  -560,   -66,  -286,   -82,   -71,
  -560,  -560,  -559,  -560,  -560,  -559,  -560,  -288,  -560,  -446,
  -447,  -560,   -78,   -83,  -560,  -560,  -560,  -560,  -560,  -231,
  -560,  -396,  -560,  -560,  -238,  -239,  -554,  -553,  -241,  -554,
  -291,  -292,  -530,  -343,   -10,   -10,  -560,  -345,  -560,  -363,
  -370,  -560,  -367,  -368,  -560,  -371,  -495,  -560,  -504,  -560,
  -506,  -508,  -512,  -520,  -524,   -10,  -336,  -337,  -338,   -10,
  -560,  -560,  -560,  -560,   -10,  -391,  -559,  -560,  -560,  -559,
  -288,  -315,  -102,  -103,  -560,  -559,  -560,  -318,  -465,  -560,
  -560,  -560,  -324,  -493,  -328,  -546,  -547,  -550,  -410,  -425,
  -428,  -429,  -431,  -412,  -427,  -413,  -414,  -415,  -560,  -418,
  -420,  -421,  -560,  -443,    -7,   -14,  -114,   -24,  -560,  -273,
  -560,  -289,  -290,  -560,  -560,   -59,  -245,  -246,  -380,  -560,
   -61,  -383,  -560,   -57,  -381,  -539,  -540,  -539,  -540,  -560,
  -560,  -189,  -298,  -560,  -357,  -560,  -359,   -10,  -266,  -265,
  -269,  -560,  -532,  -533,  -560,   -51,  -376,   -52,  -377,   -53,
  -378,   -10,  -243,  -560,  -249,  -251,   -43,  -560,  -258,  -262,
  -560,   -10,   -10,  -294,   -12,   -66,  -560,   -74,   -80,  -560,
  -539,  -540,  -559,  -543,  -287,  -560,  -560,  -559,   -76,  -560,
  -198,  -208,  -209,  -560,  -559,  -559,  -284,  -285,  -552,  -242,
  -560,  -560,  -344,  -355,  -560,  -362,  -559,  -356,  -560,  -559,
  -559,  -514,  -501,  -560,  -560,  -511,  -559,  -339,  -559,  -307,
  -340,  -341,  -342,  -310,  -560,  -313,  -560,  -560,  -560,  -539,
  -540,  -543,  -287,  -560,  -560,  -102,  -105,  -543,  -560,   -10,
  -560,  -467,  -560,   -10,   -10,  -493,  -560,  -470,  -471,  -473,
  -474,  -476,  -477,  -526,  -526,  -482,  -484,  -484,  -484,  -492,
  -495,  -516,  -560,  -560,  -560,   -10,  -417,  -419,  -423,  -190,
  -271,  -560,  -560,  -560,   -30,  -194,   -31,  -195,   -60,   -32,
  -196,   -62,  -197,   -58,  -560,  -560,  -560,  -290,  -289,  -233,
  -358,  -560,  -560,  -255,  -270,  -535,  -560,  -244,  -266,  -560,
  -263,  -560,  -560,   -72,  -289,  -290,   -84,  -297,  -559,  -352,
   -10,  -397,  -559,  -398,  -399,  -240,  -348,  -349,  -369,  -560,
  -288,  -560,  -365,  -366,  -505,  -507,  -510,  -560,  -350,  -560,
  -560,   -10,   -10,  -312,  -314,  -560,  -289,   -94,  -560,  -289,
  -560,  -466,  -321,  -560,  -560,  -550,  -469,  -472,  -475,  -560,
  -480,  -481,  -560,  -560,  -488,  -560,  -490,  -560,  -491,  -560,
  -329,  -528,  -430,  -433,  -434,  -435,  -436,  -560,  -272,   -28,
  -192,   -29,  -193,  -560,  -560,  -560,  -360,  -374,   -54,  -250,
  -266,  -388,  -390,    -8,   -10,  -403,  -353,  -560,  -560,  -401,
  -287,  -559,  -509,  -304,  -560,  -305,  -560,  -560,  -560,   -10,
  -316,  -319,   -10,  -325,  -327,  -560,  -478,  -526,  -525,  -483,
  -484,  -484,  -484,  -560,  -517,  -515,  -493,  -432,  -234,  -257,
  -560,  -402,   -10,  -461,  -560,  -560,  -281,  -400,  -364,   -10,
  -308,  -311,  -269,  -559,   -10,  -560,  -468,  -479,  -560,  -486,
  -487,  -489,   -10,  -396,  -559,  -560,  -560,  -288,  -559,  -392,
  -393,  -394,  -560,  -322,  -484,  -560,  -395,  -560,  -539,  -540,
  -543,  -287,  -351,  -317,  -485,  -330,  -289 ]

clist = [
'13,308,316,575,579,379,114,114,251,251,251,704,754,489,98,568,542,208',
'208,397,419,426,208,208,208,769,367,102,324,332,13,289,289,532,348,349',
'10,662,352,5,721,713,766,285,99,583,250,250,250,117,117,298,208,208',
'216,500,281,208,208,109,194,208,356,365,114,837,10,593,252,252,252,659',
'353,659,729,733,567,313,114,207,406,407,408,409,2,102,560,283,384,563',
'565,678,380,818,272,276,662,924,360,13,318,604,644,208,208,208,208,13',
'13,433,438,443,386,388,311,609,395,840,657,347,347,619,14,347,545,548',
'860,861,552,709,310,671,397,350,841,10,351,842,5,744,944,681,682,10',
'10,749,410,5,429,430,601,912,14,291,291,666,668,670,248,263,264,370',
'753,603,772,347,347,347,347,926,322,553,672,496,497,498,719,769,295',
'295,924,501,423,423,358,366,885,485,412,247,486,114,411,509,766,13,208',
'208,208,208,208,442,510,959,208,208,208,321,822,295,295,897,383,284',
'13,208,390,618,361,393,872,14,662,313,313,609,774,775,855,14,14,10,418',
'424,427,917,916,193,920,893,446,404,835,737,320,568,1,317,725,381,10',
'359,597,528,687,504,251,659,659,506,680,,,,251,698,489,448,449,208,208',
'543,,544,734,494,,458,208,,947,,13,864,866,868,289,13,,,513,,,250,250',
'556,332,972,746,289,,,250,102,,519,723,,281,,13,533,,281,713,505,252',
'14,10,,514,,,10,252,,,580,581,268,275,277,960,602,,952,14,,,515,,721',
'910,,521,,10,,769,777,208,208,,,,,644,,433,438,,,272,582,276,766,,,',
',365,,,,,,102,,417,,,765,208,716,,,35,720,,,,598,,,,,,284,,,568,649',
'650,,14,503,507,,291,14,,114,347,347,511,114,35,288,288,803,813,291',
'788,966,,,,791,768,,793,692,14,295,697,,662,949,950,951,,,,,607,692',
'295,,355,369,442,369,208,208,117,850,,,117,853,854,673,,,625,284,,,626',
',284,689,659,,696,828,313,313,832,833,,974,,,,35,,,,,,,366,35,35,692',
',,,,909,637,,,692,,641,,208,,,637,902,659,13,12,,295,825,,289,,208,442',
',208,,,,823,,289,533,765,658,738,,442,743,,208,,,533,748,12,313,,,313',
'10,,932,684,13,13,,,,939,,717,,,637,637,637,773,,803,311,,,,,13,750',
',,13,768,35,,,13,,208,442,,208,10,10,708,442,,208,,,,208,35,208,703',
',730,730,,,,,313,10,,313,12,10,,,945,313,10,,12,12,751,,,801,332,,,',
',208,208,961,14,918,,208,918,765,291,765,,765,,,,,,929,,291,,,901,13',
'965,,938,347,,752,,,,295,35,784,786,13,288,35,,789,14,14,295,,,13,13',
'366,,288,289,,921,,922,423,,10,,,35,14,533,289,,14,,,765,,14,10,295',
',12,816,870,,,,,10,10,,808,848,,845,,,765,,,12,,,,,,,635,710,711,,,640',
',,208,,643,,,13,,768,,13,13,,369,,726,,637,,728,641,,637,,736,,,,114',
',964,851,13,852,,,14,856,,208,208,,10,,,,10,10,,,14,,890,,12,,665,667',
'669,12,14,14,,347,,291,,,10,,,,915,904,,879,881,13,291,,,,12,,,442,',
',,,295,,,,,,208,802,13,13,,,,295,,,,,,,,806,,10,,,,,,,692,811,812,,',
',,,14,730,,,14,14,10,10,,,,,,,,,,,,,,,,13,,876,14,934,,35,347,,967,',
',288,,,13,,,13,,,,,288,,,,,,,,,,,,,10,,13,,937,,,,,13,35,35,14,,13,10',
',369,10,,,,13,,208,442,,,877,,,35,,14,14,35,,,10,,35,,,,,10,,,313,,10',
',,,,,,,10,,,,,,,,,,,,,,,896,,,,,,,,,,,,,14,,,,936,,,,906,907,,,,12,',
'14,,,14,,,,,,,,,35,,295,,,,,,,,,14,,,35,,,,14,,,,,14,35,35,12,12,,288',
',14,,,931,,,,,,,,288,,325,,,12,,943,,12,,,,,12,,,,,385,,387,387,391',
'394,387,,,,,953,,,,,,,958,,,,,962,,,,,,,,35,,,,35,35,,,,,,,,,,,,,,,',
',,,,,35,,217,,,,249,249,249,,,12,,,,,,,,,,,305,306,307,12,,,,,,,,,,12',
'12,249,249,,,,,,,35,,,,,,,,,,,,,,,,,,,,,35,35,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,12,,,,12,12,,,,,,,,,,,35,,,,933,,,,,,12,385,,,,35,,,35',
',502,,,,,,,,,,,,,,,,,,35,,,,,,,35,,,,,35,,,,,12,,,35,,,420,249,428,249',
'249,,,,447,,,,,,,12,12,559,,,559,559,217,,460,461,462,463,464,465,466',
'467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483',
'484,,,,,,,,,,249,,249,,,,,,249,,12,,,,,249,249,,,,,,,,249,12,,,12,,',
',,,,,,,,,,,,,,,,,12,,,,,,539,12,,,,,12,,,,,636,,,12,,,,,,,636,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,654,,,,,,,,,,636,636,636,654,,,',
',,,,,,654,654,,,,,,,,,,,,,,,,,,,,,,,,,,249,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,249,249,,447,651,428,319,,,,,,,,,,,,,,,,,,,,,,,,,,,653,,,249,,249',
',249,,,,,,,,,,,,,,,,676,,,,,,,,,,,,294,294,249,,,249,,294,294,294,,',
',,700,701,702,,,,,,,294,,,249,,,249,,294,294,,,,,,,,,,,,,,,,,,,,,,,',
',,636,,,,,636,,,249,,,249,819,824,,,,249,,,,,421,425,559,,,559,559,',
',,,,819,,819,,,,,,,,,,,,,,779,,249,,,785,787,,,,,790,,,792,,,,,,,,,',
',,,,,,491,,493,249,,,249,,495,,,,,,,,249,249,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,895,249,,294,899,294,294,294,294,294,294,294,294,294,294,294,294',
'294,294,294,294,294,294,294,294,294,294,294,294,294,,,,249,,,,,,294',
',294,,,,,,294,,,,,,,,,,249,,,,,,,,,,,,,,294,,,,,,249,880,882,,,,559',
'294,,,,,,785,787,790,294,,,,,,,,,,,,249,,,,,,,,,,,,,,,,,629,,,819,,',
',,,,,,,,,,,,819,,,,,,,,,,,,,,,294,,,,,,,,,,249,,,,,,,,,,,,,,882,880',
'928,,,,249,,,660,,319,,663,,,,,,,,,,,,249,,,294,677,,,,,,,,,,,,,,,,',
',249,,,,,,,,,,,,,,294,294,294,,,,660,,,319,249,,,,,,,,,,,,,,,,,,,,294',
',,294,,294,,294,,,,,,,,,,,,,,,,,,,,,,,,,,,,294,,,,,,,,,,,294,,,294,294',
'294,,,,,,,,,780,294,,,294,,,,,,,,,,,,294,,,,,,,,,,,,,,,804,,,805,,,',
',,,,,,660,319,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,821,,,,,,,,294,,294,,,,,',
',,,,,,294,,,,,,,,,,421,,,,,,,,,294,,,294,,,,,,,,,,294,294,858,,,,,,',
',,,294,,,,,,,,,,878,,,294,,,,,,294,,,,,,,,,,,,,,,,,,,421,,,,,,,,,,,',
',294,,,,,,,,,,,,,,,,,,,,,,,,294,,,,,,,,,,,,,,,,,,,,294,,,925,,,,,,,',
',,294,294,294,,,,,,,,319,,,,,294,,,,,,,,,,,,,,942,,,,,,,,,,,,,,,,,,',
',,,942,,,,,,,,,,,,,,,,,,,,,,,,294,,,,,,,,,,,,,,294,294,294,,,,294,,',
',,,,,,294,,,,,,,,,,294,,,,,,,,,,,,,,,,,,,,,,294' ]
        racc_goto_table = arr = ::Array.new(2565, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'21,51,22,79,79,47,48,48,56,56,56,10,86,64,4,147,8,21,21,47,24,24,21',
'21,21,143,46,85,106,109,21,21,21,43,16,16,17,156,16,7,149,108,112,41',
'6,82,29,29,29,50,50,42,21,21,18,35,38,21,21,14,14,21,21,21,48,80,17',
'45,58,58,58,59,4,59,81,81,150,29,48,26,16,16,16,16,2,85,111,39,127,111',
'111,59,87,11,60,60,156,153,17,21,58,88,63,21,21,21,21,21,21,33,33,33',
'128,128,26,131,128,11,36,26,26,131,23,26,57,57,144,144,57,59,89,36,47',
'90,91,17,92,93,7,94,95,36,36,17,17,96,7,7,22,22,97,98,23,23,23,63,63',
'63,31,31,31,99,100,101,102,26,26,26,26,103,104,105,62,33,33,33,107,143',
'52,52,153,61,56,56,23,23,54,53,27,114,115,48,2,117,112,21,21,21,21,21',
'21,48,118,119,21,21,21,78,121,52,52,122,126,9,21,21,129,130,19,132,133',
'23,156,29,29,131,134,135,137,23,23,17,18,18,18,139,141,15,146,12,18',
'5,151,120,76,147,1,75,147,74,17,83,84,51,43,56,56,59,59,66,65,,,,56',
'43,64,26,26,21,21,51,,51,82,127,,26,21,,144,,21,145,145,145,21,21,,',
'4,,,29,29,106,109,80,45,21,,,29,85,,42,150,,38,,21,41,,38,108,58,58',
'23,17,,6,,,17,58,,,16,16,34,34,34,11,46,,86,23,,,39,,149,81,,39,,17',
',143,131,21,21,,,,,63,,33,33,,,60,4,60,112,,,,,21,,,,,,85,,9,,,110,21',
'113,,,44,113,,,,85,,,,,,9,,,147,22,22,,23,31,31,,23,23,,48,26,26,31',
'48,44,44,44,64,43,23,35,10,,,,35,113,,35,33,23,52,33,,156,145,145,145',
',,,,26,33,52,,44,44,48,44,21,21,50,8,,,50,8,8,51,,,14,9,,,14,,9,22,59',
',22,111,29,29,111,111,,145,,,,44,,,,,,,23,44,44,33,,,,,79,60,,,33,,60',
',21,,,60,147,59,21,20,,52,57,,21,,21,48,,21,,,,24,,21,41,110,58,22,',
'48,22,,21,,,41,22,20,29,,,29,17,,79,7,21,21,,,,79,,21,,,60,60,60,51',
',64,26,,,,,21,16,,,21,113,44,,,21,,21,48,,21,17,17,58,48,,21,,,,21,44',
'21,26,,85,85,,,,,29,17,,29,20,17,,,8,29,17,,20,20,85,,,106,109,,,,,21',
'21,82,23,110,,21,110,110,23,110,,110,,,,,,64,,23,,,113,21,8,,111,26',
',26,,,,52,44,18,18,21,44,44,,18,23,23,52,,,21,21,23,,44,21,,113,,113',
'56,,17,,,44,23,41,21,,23,,,110,,23,17,52,,20,41,47,,,,,17,17,,58,16',
',56,,,110,,,20,,,,,,,34,9,9,,,34,,,21,,34,,,21,,113,,21,21,,44,,9,,60',
',9,60,,60,,9,,,,48,,113,85,21,85,,,23,85,,21,21,,17,,,,17,17,,,23,,56',
',20,,34,34,34,20,23,23,,26,,23,,,17,,,,51,16,,18,18,21,23,,,,20,,,48',
',,,,52,,,,,,21,9,21,21,,,,52,,,,,,,,9,,17,,,,,,,33,9,9,,,,,,23,85,,',
'23,23,17,17,,,,,,,,,,,,,,,,21,,23,23,21,,44,26,,22,,,44,,,21,,,21,,',
',,44,,,,,,,,,,,,,17,,21,,17,,,,,21,44,44,23,,21,17,,44,17,,,,21,,21',
'48,,,9,,,44,,23,23,44,,,17,,44,,,,,17,,,29,,17,,,,,,,,17,,,,,,,,,,,',
',,,9,,,,,,,,,,,,,23,,,,23,,,,9,9,,,,20,,23,,,23,,,,,,,,,44,,52,,,,,',
',,,23,,,44,,,,23,,,,,23,44,44,20,20,,44,,23,,,9,,,,,,,,44,,55,,,20,',
'9,,20,,,,,20,,,,,55,,55,55,55,55,55,,,,,9,,,,,,,9,,,,,9,,,,,,,,44,,',
',44,44,,,,,,,,,,,,,,,,,,,,,44,,28,,,,28,28,28,,,20,,,,,,,,,,,28,28,28',
'20,,,,,,,,,,20,20,28,28,,,,,,,44,,,,,,,,,,,,,,,,,,,,,44,44,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,20,,,,20,20,,,,,,,,,,,44,,,,44,,,,,,20,55',
',,,44,,,44,,55,,,,,,,,,,,,,,,,,,44,,,,,,,44,,,,,44,,,,,20,,,44,,,28',
'28,28,28,28,,,,28,,,,,,,20,20,55,,,55,55,28,,28,28,28,28,28,28,28,28',
'28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,,,,,,,,,,28,,28,',
',,,,28,,20,,,,,28,28,,,,,,,,28,20,,,20,,,,,,,,,,,,,,,,,,,,20,,,,,,28',
'20,,,,,20,,,,,55,,,20,,,,,,,55,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,55,,,,,,,,,,55,55,55,55,,,,,,,,,,55,55,,,,,,,,,,,,,,,,,,,,,,,,',
',28,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,28,28,,28,28,28,25,,,,,,,,,,,,,,,,',
',,,,,,,,,,28,,,28,,28,,28,,,,,,,,,,,,,,,,28,,,,,,,,,,,,37,37,28,,,28',
',37,37,37,,,,,28,28,28,,,,,,,37,,,28,,,28,,37,37,,,,,,,,,,,,,,,,,,,',
',,,,,,55,,,,,55,,,28,,,28,55,55,,,,28,,,,,25,25,55,,,55,55,,,,,,55,',
'55,,,,,,,,,,,,,,28,,28,,,28,28,,,,,28,,,28,,,,,,,,,,,,,,,,25,,25,28',
',,28,,25,,,,,,,,28,28,,,,,,,,,,,,,,,,,,,,,,,,,,,,,55,28,,37,55,37,37',
'37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37',
',,,28,,,,,,37,,37,,,,,,37,,,,,,,,,,28,,,,,,,,,,,,,,37,,,,,,28,28,28',
',,,55,37,,,,,,28,28,28,37,,,,,,,,,,,,28,,,,,,,,,,,,,,,,,25,,,55,,,,',
',,,,,,,,,,55,,,,,,,,,,,,,,,37,,,,,,,,,,28,,,,,,,,,,,,,,28,28,28,,,,28',
',,25,,25,,25,,,,,,,,,,,,28,,,37,25,,,,,,,,,,,,,,,,,,28,,,,,,,,,,,,,',
'37,37,37,,,,25,,,25,28,,,,,,,,,,,,,,,,,,,,37,,,37,,37,,37,,,,,,,,,,',
',,,,,,,,,,,,,,,,,37,,,,,,,,,,,37,,,37,37,37,,,,,,,,,25,37,,,37,,,,,',
',,,,,,37,,,,,,,,,,,,,,,25,,,25,,,,,,,,,,25,25,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,25,,,,,,,,37,,37,,,,,,,,,,,,37,,,,,,,,,,25,,,,,,,,,37,,,37,,',
',,,,,,,37,37,25,,,,,,,,,,37,,,,,,,,,,25,,,37,,,,,,37,,,,,,,,,,,,,,,',
',,,25,,,,,,,,,,,,,37,,,,,,,,,,,,,,,,,,,,,,,,37,,,,,,,,,,,,,,,,,,,,37',
',,25,,,,,,,,,,37,37,37,,,,,,,,25,,,,,37,,,,,,,,,,,,,,25,,,,,,,,,,,,',
',,,,,,,,,25,,,,,,,,,,,,,,,,,,,,,,,,37,,,,,,,,,,,,,,37,37,37,,,,37,,',
',,,,,,37,,,,,,,,,,37,,,,,,,,,,,,,,,,,,,,,,37' ]
        racc_goto_check = arr = ::Array.new(2565, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_goto_pointer = [
   nil,   246,    84,   nil,    11,   142,    41,    39,  -294,   183,
  -530,  -611,  -579,   nil,    52,   229,   -23,    36,    36,   156,
   515,     0,   -51,   122,  -176,  1549,    62,    79,  1145,    24,
   nil,   136,   nil,   -92,   303,  -213,  -368,  1634,    26,    57,
   nil,    12,    19,  -266,   386,  -296,   -37,   -60,    -1,   nil,
    42,   -40,   147,   -58,  -613,  1031,   -14,  -190,    46,  -417,
    68,   -88,  -329,  -341,  -239,  -248,   -11,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   184,   193,   189,   nil,   151,  -345,
  -661,  -506,  -308,   189,  -115,    24,  -591,    27,  -279,    79,
    74,  -595,    76,  -596,  -452,  -770,  -452,  -218,  -701,    97,
  -440,  -216,  -440,  -701,   114,  -151,   -28,  -386,  -517,   -27,
  -222,  -241,  -561,  -175,   169,   -56,   nil,   -80,   -72,  -740,
  -342,  -497,  -611,   nil,   nil,   nil,   141,    15,    37,   139,
  -173,  -269,   141,  -554,  -385,  -385,   nil,  -527,   nil,  -624,
   nil,  -623,   nil,  -578,  -637,  -483,  -625,  -324,   nil,  -522,
  -263,  -482,   nil,  -768,   nil,   nil,  -453 ]

racc_goto_default = [
   nil,   nil,   nil,     3,   nil,     4,   354,   280,   nil,   541,
   nil,   838,   nil,   279,   nil,   nil,   nil,   212,    16,    11,
   213,   304,   nil,   211,   nil,   255,    15,   nil,    19,    20,
    21,   nil,    25,   695,   nil,   nil,   nil,    26,    29,   nil,
    31,    34,    33,   nil,   209,   364,   nil,   116,   436,   115,
    69,   nil,    42,   nil,   nil,   312,   314,   nil,   315,   253,
   434,   nil,   nil,   638,   487,   nil,   nil,   270,    43,    44,
    45,    46,    47,    48,    49,   nil,   271,    55,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   576,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   327,   326,   715,
   329,   nil,   330,   331,   nil,   nil,   440,   nil,   nil,   nil,
   nil,   nil,   nil,    68,    70,    71,    72,   nil,   nil,   nil,
   nil,   614,   nil,   nil,   nil,   nil,   396,   756,   759,   764,
   761,   762,   763,   919,   nil,   nil,   767,   338,   333,   340,
   nil,   570,   571,   771,   343,   346,   261 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 141, :_reduce_none,
  2, 142, :_reduce_2,
  0, 143, :_reduce_3,
  1, 143, :_reduce_4,
  3, 143, :_reduce_5,
  1, 145, :_reduce_none,
  4, 145, :_reduce_7,
  4, 148, :_reduce_8,
  2, 149, :_reduce_9,
  0, 153, :_reduce_10,
  1, 153, :_reduce_11,
  3, 153, :_reduce_12,
  0, 167, :_reduce_13,
  4, 147, :_reduce_14,
  3, 147, :_reduce_15,
  3, 147, :_reduce_none,
  3, 147, :_reduce_17,
  2, 147, :_reduce_18,
  3, 147, :_reduce_19,
  3, 147, :_reduce_20,
  3, 147, :_reduce_21,
  3, 147, :_reduce_22,
  3, 147, :_reduce_23,
  4, 147, :_reduce_none,
  3, 147, :_reduce_25,
  3, 147, :_reduce_26,
  3, 147, :_reduce_27,
  6, 147, :_reduce_none,
  6, 147, :_reduce_none,
  5, 147, :_reduce_30,
  5, 147, :_reduce_none,
  5, 147, :_reduce_none,
  3, 147, :_reduce_none,
  3, 147, :_reduce_34,
  3, 147, :_reduce_35,
  3, 147, :_reduce_36,
  1, 147, :_reduce_none,
  1, 166, :_reduce_none,
  3, 166, :_reduce_39,
  3, 166, :_reduce_40,
  2, 166, :_reduce_41,
  2, 166, :_reduce_42,
  1, 166, :_reduce_none,
  1, 156, :_reduce_none,
  1, 158, :_reduce_none,
  1, 158, :_reduce_none,
  2, 158, :_reduce_47,
  2, 158, :_reduce_48,
  2, 158, :_reduce_49,
  1, 170, :_reduce_none,
  4, 170, :_reduce_none,
  4, 170, :_reduce_none,
  4, 170, :_reduce_none,
  4, 175, :_reduce_none,
  2, 169, :_reduce_55,
  3, 169, :_reduce_none,
  4, 169, :_reduce_57,
  5, 169, :_reduce_none,
  4, 169, :_reduce_59,
  5, 169, :_reduce_none,
  4, 169, :_reduce_61,
  5, 169, :_reduce_none,
  2, 169, :_reduce_63,
  2, 169, :_reduce_64,
  1, 159, :_reduce_65,
  3, 159, :_reduce_66,
  1, 179, :_reduce_67,
  3, 179, :_reduce_68,
  1, 178, :_reduce_69,
  2, 178, :_reduce_70,
  3, 178, :_reduce_71,
  5, 178, :_reduce_72,
  2, 178, :_reduce_73,
  4, 178, :_reduce_74,
  2, 178, :_reduce_75,
  4, 178, :_reduce_76,
  1, 178, :_reduce_77,
  3, 178, :_reduce_78,
  1, 181, :_reduce_79,
  3, 181, :_reduce_80,
  2, 180, :_reduce_81,
  3, 180, :_reduce_82,
  1, 183, :_reduce_83,
  3, 183, :_reduce_84,
  1, 182, :_reduce_85,
  4, 182, :_reduce_86,
  3, 182, :_reduce_87,
  3, 182, :_reduce_none,
  3, 182, :_reduce_none,
  3, 182, :_reduce_none,
  2, 182, :_reduce_none,
  1, 182, :_reduce_none,
  1, 157, :_reduce_93,
  4, 157, :_reduce_94,
  4, 157, :_reduce_95,
  3, 157, :_reduce_96,
  3, 157, :_reduce_97,
  3, 157, :_reduce_98,
  3, 157, :_reduce_99,
  2, 157, :_reduce_100,
  1, 157, :_reduce_none,
  1, 185, :_reduce_none,
  2, 186, :_reduce_103,
  1, 186, :_reduce_104,
  3, 186, :_reduce_105,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_109,
  1, 187, :_reduce_110,
  1, 154, :_reduce_111,
  1, 154, :_reduce_none,
  1, 155, :_reduce_113,
  3, 155, :_reduce_114,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  3, 168, :_reduce_189,
  5, 168, :_reduce_190,
  3, 168, :_reduce_191,
  6, 168, :_reduce_192,
  6, 168, :_reduce_193,
  5, 168, :_reduce_194,
  5, 168, :_reduce_none,
  5, 168, :_reduce_none,
  5, 168, :_reduce_none,
  4, 168, :_reduce_none,
  3, 168, :_reduce_none,
  3, 168, :_reduce_200,
  3, 168, :_reduce_201,
  3, 168, :_reduce_202,
  3, 168, :_reduce_203,
  3, 168, :_reduce_204,
  3, 168, :_reduce_205,
  3, 168, :_reduce_206,
  3, 168, :_reduce_207,
  4, 168, :_reduce_208,
  4, 168, :_reduce_209,
  2, 168, :_reduce_210,
  2, 168, :_reduce_211,
  3, 168, :_reduce_212,
  3, 168, :_reduce_213,
  3, 168, :_reduce_214,
  3, 168, :_reduce_215,
  3, 168, :_reduce_216,
  3, 168, :_reduce_217,
  3, 168, :_reduce_218,
  3, 168, :_reduce_219,
  3, 168, :_reduce_220,
  3, 168, :_reduce_221,
  3, 168, :_reduce_222,
  3, 168, :_reduce_223,
  3, 168, :_reduce_224,
  2, 168, :_reduce_225,
  2, 168, :_reduce_226,
  3, 168, :_reduce_227,
  3, 168, :_reduce_228,
  3, 168, :_reduce_229,
  3, 168, :_reduce_230,
  3, 168, :_reduce_231,
  0, 193, :_reduce_232,
  0, 194, :_reduce_233,
  7, 168, :_reduce_234,
  1, 168, :_reduce_none,
  1, 165, :_reduce_none,
  1, 162, :_reduce_237,
  2, 162, :_reduce_238,
  2, 162, :_reduce_239,
  4, 162, :_reduce_240,
  2, 162, :_reduce_241,
  3, 162, :_reduce_242,
  3, 200, :_reduce_243,
  2, 202, :_reduce_none,
  1, 203, :_reduce_245,
  1, 203, :_reduce_none,
  1, 201, :_reduce_247,
  1, 201, :_reduce_none,
  2, 201, :_reduce_249,
  4, 201, :_reduce_250,
  2, 201, :_reduce_251,
  1, 171, :_reduce_252,
  2, 171, :_reduce_253,
  2, 171, :_reduce_254,
  4, 171, :_reduce_255,
  1, 171, :_reduce_256,
  4, 205, :_reduce_none,
  1, 205, :_reduce_none,
  0, 207, :_reduce_259,
  2, 174, :_reduce_260,
  1, 206, :_reduce_none,
  2, 206, :_reduce_262,
  3, 206, :_reduce_263,
  2, 199, :_reduce_264,
  2, 204, :_reduce_265,
  0, 204, :_reduce_266,
  1, 196, :_reduce_267,
  2, 196, :_reduce_268,
  3, 196, :_reduce_269,
  4, 196, :_reduce_270,
  3, 164, :_reduce_271,
  4, 164, :_reduce_272,
  2, 164, :_reduce_273,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  0, 229, :_reduce_283,
  4, 192, :_reduce_284,
  4, 192, :_reduce_285,
  3, 192, :_reduce_286,
  3, 192, :_reduce_287,
  2, 192, :_reduce_288,
  4, 192, :_reduce_289,
  4, 192, :_reduce_290,
  3, 192, :_reduce_291,
  3, 192, :_reduce_292,
  1, 192, :_reduce_293,
  4, 192, :_reduce_294,
  3, 192, :_reduce_295,
  1, 192, :_reduce_296,
  5, 192, :_reduce_297,
  4, 192, :_reduce_298,
  3, 192, :_reduce_299,
  2, 192, :_reduce_300,
  1, 192, :_reduce_none,
  2, 192, :_reduce_302,
  2, 192, :_reduce_303,
  6, 192, :_reduce_304,
  6, 192, :_reduce_305,
  0, 230, :_reduce_306,
  0, 231, :_reduce_307,
  7, 192, :_reduce_308,
  0, 232, :_reduce_309,
  0, 233, :_reduce_310,
  7, 192, :_reduce_311,
  5, 192, :_reduce_312,
  4, 192, :_reduce_313,
  5, 192, :_reduce_314,
  0, 234, :_reduce_315,
  0, 235, :_reduce_316,
  9, 192, :_reduce_317,
  0, 236, :_reduce_318,
  6, 192, :_reduce_319,
  0, 237, :_reduce_320,
  0, 238, :_reduce_321,
  8, 192, :_reduce_322,
  0, 239, :_reduce_323,
  0, 240, :_reduce_324,
  6, 192, :_reduce_325,
  0, 241, :_reduce_326,
  6, 192, :_reduce_327,
  0, 242, :_reduce_328,
  0, 243, :_reduce_329,
  9, 192, :_reduce_330,
  1, 192, :_reduce_331,
  1, 192, :_reduce_332,
  1, 192, :_reduce_333,
  1, 192, :_reduce_none,
  1, 161, :_reduce_none,
  1, 219, :_reduce_none,
  1, 219, :_reduce_none,
  1, 219, :_reduce_none,
  2, 219, :_reduce_none,
  1, 221, :_reduce_none,
  1, 221, :_reduce_none,
  1, 221, :_reduce_none,
  2, 218, :_reduce_343,
  3, 244, :_reduce_344,
  2, 244, :_reduce_345,
  1, 244, :_reduce_none,
  1, 244, :_reduce_none,
  3, 245, :_reduce_348,
  3, 245, :_reduce_349,
  1, 220, :_reduce_350,
  5, 220, :_reduce_351,
  1, 151, :_reduce_none,
  2, 151, :_reduce_353,
  1, 247, :_reduce_354,
  3, 247, :_reduce_355,
  3, 248, :_reduce_356,
  1, 176, :_reduce_none,
  2, 176, :_reduce_358,
  1, 176, :_reduce_359,
  3, 176, :_reduce_360,
  1, 249, :_reduce_361,
  2, 251, :_reduce_362,
  1, 251, :_reduce_363,
  6, 246, :_reduce_364,
  4, 246, :_reduce_365,
  4, 246, :_reduce_366,
  2, 246, :_reduce_367,
  2, 246, :_reduce_368,
  4, 246, :_reduce_369,
  2, 246, :_reduce_370,
  2, 246, :_reduce_371,
  1, 246, :_reduce_372,
  0, 255, :_reduce_373,
  5, 254, :_reduce_374,
  2, 172, :_reduce_375,
  4, 172, :_reduce_none,
  4, 172, :_reduce_none,
  4, 172, :_reduce_none,
  2, 217, :_reduce_379,
  4, 217, :_reduce_380,
  4, 217, :_reduce_381,
  3, 217, :_reduce_382,
  4, 217, :_reduce_383,
  3, 217, :_reduce_384,
  2, 217, :_reduce_385,
  1, 217, :_reduce_386,
  0, 257, :_reduce_387,
  5, 216, :_reduce_388,
  0, 258, :_reduce_389,
  5, 216, :_reduce_390,
  0, 260, :_reduce_391,
  6, 222, :_reduce_392,
  1, 259, :_reduce_393,
  1, 259, :_reduce_none,
  6, 150, :_reduce_395,
  0, 150, :_reduce_396,
  1, 261, :_reduce_397,
  1, 261, :_reduce_none,
  1, 261, :_reduce_none,
  2, 262, :_reduce_400,
  1, 262, :_reduce_401,
  2, 152, :_reduce_402,
  1, 152, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 209, :_reduce_407,
  1, 265, :_reduce_none,
  2, 265, :_reduce_409,
  3, 266, :_reduce_410,
  1, 266, :_reduce_411,
  3, 210, :_reduce_412,
  3, 211, :_reduce_413,
  3, 212, :_reduce_414,
  3, 212, :_reduce_415,
  1, 269, :_reduce_416,
  3, 269, :_reduce_417,
  1, 270, :_reduce_418,
  2, 270, :_reduce_419,
  3, 213, :_reduce_420,
  3, 213, :_reduce_421,
  1, 272, :_reduce_422,
  3, 272, :_reduce_423,
  1, 267, :_reduce_424,
  2, 267, :_reduce_425,
  1, 268, :_reduce_426,
  2, 268, :_reduce_427,
  1, 271, :_reduce_428,
  0, 274, :_reduce_429,
  3, 271, :_reduce_430,
  0, 275, :_reduce_431,
  4, 271, :_reduce_432,
  1, 273, :_reduce_433,
  1, 273, :_reduce_434,
  1, 273, :_reduce_435,
  1, 273, :_reduce_none,
  2, 190, :_reduce_437,
  1, 190, :_reduce_438,
  1, 276, :_reduce_none,
  1, 276, :_reduce_none,
  1, 276, :_reduce_none,
  1, 276, :_reduce_none,
  3, 264, :_reduce_443,
  1, 263, :_reduce_444,
  1, 263, :_reduce_445,
  2, 263, :_reduce_446,
  2, 263, :_reduce_447,
  2, 263, :_reduce_448,
  2, 263, :_reduce_449,
  1, 184, :_reduce_450,
  1, 184, :_reduce_451,
  1, 184, :_reduce_452,
  1, 184, :_reduce_453,
  1, 184, :_reduce_454,
  1, 184, :_reduce_455,
  1, 184, :_reduce_456,
  1, 184, :_reduce_457,
  1, 184, :_reduce_458,
  1, 184, :_reduce_459,
  1, 184, :_reduce_460,
  1, 214, :_reduce_461,
  1, 160, :_reduce_462,
  1, 163, :_reduce_463,
  1, 163, :_reduce_none,
  1, 224, :_reduce_465,
  3, 224, :_reduce_466,
  2, 224, :_reduce_467,
  4, 226, :_reduce_468,
  2, 226, :_reduce_469,
  1, 278, :_reduce_none,
  1, 278, :_reduce_none,
  2, 279, :_reduce_472,
  1, 279, :_reduce_473,
  1, 280, :_reduce_474,
  2, 281, :_reduce_475,
  1, 281, :_reduce_476,
  1, 282, :_reduce_477,
  3, 282, :_reduce_478,
  4, 283, :_reduce_479,
  2, 283, :_reduce_480,
  2, 283, :_reduce_481,
  1, 283, :_reduce_482,
  2, 285, :_reduce_483,
  0, 285, :_reduce_484,
  6, 277, :_reduce_485,
  4, 277, :_reduce_486,
  4, 277, :_reduce_487,
  2, 277, :_reduce_488,
  4, 277, :_reduce_489,
  2, 277, :_reduce_490,
  2, 277, :_reduce_491,
  1, 277, :_reduce_492,
  0, 277, :_reduce_493,
  1, 287, :_reduce_none,
  1, 287, :_reduce_495,
  1, 288, :_reduce_496,
  1, 288, :_reduce_497,
  1, 288, :_reduce_498,
  1, 288, :_reduce_499,
  1, 289, :_reduce_500,
  3, 289, :_reduce_501,
  1, 223, :_reduce_none,
  1, 223, :_reduce_none,
  1, 291, :_reduce_504,
  3, 291, :_reduce_none,
  1, 292, :_reduce_506,
  3, 292, :_reduce_507,
  1, 290, :_reduce_none,
  4, 290, :_reduce_none,
  3, 290, :_reduce_none,
  2, 290, :_reduce_none,
  1, 290, :_reduce_none,
  1, 252, :_reduce_513,
  3, 252, :_reduce_514,
  3, 293, :_reduce_515,
  1, 286, :_reduce_516,
  3, 286, :_reduce_517,
  1, 294, :_reduce_none,
  1, 294, :_reduce_none,
  2, 253, :_reduce_520,
  1, 253, :_reduce_521,
  1, 295, :_reduce_none,
  1, 295, :_reduce_none,
  2, 250, :_reduce_524,
  2, 284, :_reduce_525,
  0, 284, :_reduce_526,
  1, 227, :_reduce_527,
  4, 227, :_reduce_528,
  0, 215, :_reduce_529,
  2, 215, :_reduce_530,
  1, 198, :_reduce_531,
  3, 198, :_reduce_532,
  3, 296, :_reduce_533,
  2, 296, :_reduce_534,
  4, 296, :_reduce_535,
  1, 177, :_reduce_none,
  1, 177, :_reduce_none,
  1, 177, :_reduce_none,
  1, 173, :_reduce_none,
  1, 173, :_reduce_none,
  1, 173, :_reduce_none,
  1, 173, :_reduce_none,
  1, 256, :_reduce_none,
  1, 256, :_reduce_none,
  1, 256, :_reduce_none,
  1, 228, :_reduce_none,
  1, 228, :_reduce_none,
  0, 144, :_reduce_none,
  1, 144, :_reduce_none,
  0, 191, :_reduce_none,
  1, 191, :_reduce_none,
  0, 197, :_reduce_none,
  1, 197, :_reduce_none,
  1, 197, :_reduce_none,
  1, 225, :_reduce_none,
  1, 225, :_reduce_none,
  1, 146, :_reduce_none,
  2, 146, :_reduce_none,
  0, 195, :_reduce_559 ]

racc_reduce_n = 560

racc_shift_n = 977

racc_token_table = {
  false => 0,
  :error => 1,
  :kCLASS => 2,
  :kMODULE => 3,
  :kDEF => 4,
  :kUNDEF => 5,
  :kBEGIN => 6,
  :kRESCUE => 7,
  :kENSURE => 8,
  :kEND => 9,
  :kIF => 10,
  :kUNLESS => 11,
  :kTHEN => 12,
  :kELSIF => 13,
  :kELSE => 14,
  :kCASE => 15,
  :kWHEN => 16,
  :kWHILE => 17,
  :kUNTIL => 18,
  :kFOR => 19,
  :kBREAK => 20,
  :kNEXT => 21,
  :kREDO => 22,
  :kRETRY => 23,
  :kIN => 24,
  :kDO => 25,
  :kDO_COND => 26,
  :kDO_BLOCK => 27,
  :kDO_LAMBDA => 28,
  :kRETURN => 29,
  :kYIELD => 30,
  :kSUPER => 31,
  :kSELF => 32,
  :kNIL => 33,
  :kTRUE => 34,
  :kFALSE => 35,
  :kAND => 36,
  :kOR => 37,
  :kNOT => 38,
  :kIF_MOD => 39,
  :kUNLESS_MOD => 40,
  :kWHILE_MOD => 41,
  :kUNTIL_MOD => 42,
  :kRESCUE_MOD => 43,
  :kALIAS => 44,
  :kDEFINED => 45,
  :klBEGIN => 46,
  :klEND => 47,
  :k__LINE__ => 48,
  :k__FILE__ => 49,
  :tIDENTIFIER => 50,
  :tFID => 51,
  :tGVAR => 52,
  :tIVAR => 53,
  :tCONSTANT => 54,
  :tLABEL => 55,
  :tCVAR => 56,
  :tNTH_REF => 57,
  :tBACK_REF => 58,
  :tSTRING_CONTENT => 59,
  :tINTEGER => 60,
  :tFLOAT => 61,
  :tREGEXP_END => 62,
  :tUPLUS => 63,
  :tUMINUS => 64,
  :tPOW => 65,
  :tCMP => 66,
  :tEQ => 67,
  :tEQQ => 68,
  :tNEQ => 69,
  :tGEQ => 70,
  :tLEQ => 71,
  :tANDOP => 72,
  :tOROP => 73,
  :tMATCH => 74,
  :tNMATCH => 75,
  :tJSDOT => 76,
  :tDOT => 77,
  :tDOT2 => 78,
  :tDOT3 => 79,
  :tAREF => 80,
  :tASET => 81,
  :tLSHFT => 82,
  :tRSHFT => 83,
  :tCOLON2 => 84,
  :tCOLON3 => 85,
  :tOP_ASGN => 86,
  :tASSOC => 87,
  :tLPAREN => 88,
  :tLPAREN2 => 89,
  :tRPAREN => 90,
  :tLPAREN_ARG => 91,
  :tRBRACK => 92,
  :tLBRACE => 93,
  :tLBRACE_ARG => 94,
  :tSTAR => 95,
  :tSTAR2 => 96,
  :tAMPER => 97,
  :tAMPER2 => 98,
  :tTILDE => 99,
  :tPERCENT => 100,
  :tDIVIDE => 101,
  :tPLUS => 102,
  :tMINUS => 103,
  :tLT => 104,
  :tGT => 105,
  :tPIPE => 106,
  :tBANG => 107,
  :tCARET => 108,
  :tLCURLY => 109,
  :tRCURLY => 110,
  :tBACK_REF2 => 111,
  :tSYMBEG => 112,
  :tSTRING_BEG => 113,
  :tXSTRING_BEG => 114,
  :tREGEXP_BEG => 115,
  :tWORDS_BEG => 116,
  :tAWORDS_BEG => 117,
  :tSTRING_DBEG => 118,
  :tSTRING_DVAR => 119,
  :tSTRING_END => 120,
  :tSTRING => 121,
  :tSYMBOL => 122,
  :tNL => 123,
  :tEH => 124,
  :tCOLON => 125,
  :tCOMMA => 126,
  :tSPACE => 127,
  :tSEMI => 128,
  :tLAMBDA => 129,
  :tLAMBEG => 130,
  :tLBRACK2 => 131,
  :tLBRACK => 132,
  :tJSLBRACK => 133,
  :tDSTAR => 134,
  :tLABEL_END => 135,
  :tEQL => 136,
  :tLOWEST => 137,
  "-@NUM" => 138,
  "+@NUM" => 139 }

racc_nt_base = 140

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "kCLASS",
  "kMODULE",
  "kDEF",
  "kUNDEF",
  "kBEGIN",
  "kRESCUE",
  "kENSURE",
  "kEND",
  "kIF",
  "kUNLESS",
  "kTHEN",
  "kELSIF",
  "kELSE",
  "kCASE",
  "kWHEN",
  "kWHILE",
  "kUNTIL",
  "kFOR",
  "kBREAK",
  "kNEXT",
  "kREDO",
  "kRETRY",
  "kIN",
  "kDO",
  "kDO_COND",
  "kDO_BLOCK",
  "kDO_LAMBDA",
  "kRETURN",
  "kYIELD",
  "kSUPER",
  "kSELF",
  "kNIL",
  "kTRUE",
  "kFALSE",
  "kAND",
  "kOR",
  "kNOT",
  "kIF_MOD",
  "kUNLESS_MOD",
  "kWHILE_MOD",
  "kUNTIL_MOD",
  "kRESCUE_MOD",
  "kALIAS",
  "kDEFINED",
  "klBEGIN",
  "klEND",
  "k__LINE__",
  "k__FILE__",
  "tIDENTIFIER",
  "tFID",
  "tGVAR",
  "tIVAR",
  "tCONSTANT",
  "tLABEL",
  "tCVAR",
  "tNTH_REF",
  "tBACK_REF",
  "tSTRING_CONTENT",
  "tINTEGER",
  "tFLOAT",
  "tREGEXP_END",
  "tUPLUS",
  "tUMINUS",
  "tPOW",
  "tCMP",
  "tEQ",
  "tEQQ",
  "tNEQ",
  "tGEQ",
  "tLEQ",
  "tANDOP",
  "tOROP",
  "tMATCH",
  "tNMATCH",
  "tJSDOT",
  "tDOT",
  "tDOT2",
  "tDOT3",
  "tAREF",
  "tASET",
  "tLSHFT",
  "tRSHFT",
  "tCOLON2",
  "tCOLON3",
  "tOP_ASGN",
  "tASSOC",
  "tLPAREN",
  "tLPAREN2",
  "tRPAREN",
  "tLPAREN_ARG",
  "tRBRACK",
  "tLBRACE",
  "tLBRACE_ARG",
  "tSTAR",
  "tSTAR2",
  "tAMPER",
  "tAMPER2",
  "tTILDE",
  "tPERCENT",
  "tDIVIDE",
  "tPLUS",
  "tMINUS",
  "tLT",
  "tGT",
  "tPIPE",
  "tBANG",
  "tCARET",
  "tLCURLY",
  "tRCURLY",
  "tBACK_REF2",
  "tSYMBEG",
  "tSTRING_BEG",
  "tXSTRING_BEG",
  "tREGEXP_BEG",
  "tWORDS_BEG",
  "tAWORDS_BEG",
  "tSTRING_DBEG",
  "tSTRING_DVAR",
  "tSTRING_END",
  "tSTRING",
  "tSYMBOL",
  "tNL",
  "tEH",
  "tCOLON",
  "tCOMMA",
  "tSPACE",
  "tSEMI",
  "tLAMBDA",
  "tLAMBEG",
  "tLBRACK2",
  "tLBRACK",
  "tJSLBRACK",
  "tDSTAR",
  "tLABEL_END",
  "tEQL",
  "tLOWEST",
  "\"-@NUM\"",
  "\"+@NUM\"",
  "$start",
  "program",
  "top_compstmt",
  "top_stmts",
  "opt_terms",
  "top_stmt",
  "terms",
  "stmt",
  "bodystmt",
  "compstmt",
  "opt_rescue",
  "opt_else",
  "opt_ensure",
  "stmts",
  "fitem",
  "undef_list",
  "expr_value",
  "lhs",
  "command_call",
  "mlhs",
  "var_lhs",
  "primary_value",
  "aref_args",
  "backref",
  "mrhs",
  "arg_value",
  "expr",
  "@1",
  "arg",
  "command",
  "block_command",
  "call_args",
  "block_call",
  "operation2",
  "command_args",
  "cmd_brace_block",
  "opt_block_var",
  "operation",
  "mlhs_basic",
  "mlhs_entry",
  "mlhs_head",
  "mlhs_item",
  "mlhs_node",
  "mlhs_post",
  "variable",
  "cname",
  "cpath",
  "fname",
  "op",
  "reswords",
  "symbol",
  "opt_nl",
  "primary",
  "@2",
  "@3",
  "none",
  "args",
  "trailer",
  "assocs",
  "block_arg",
  "paren_args",
  "opt_call_args",
  "rparen",
  "opt_paren_args",
  "opt_block_arg",
  "call_args2",
  "open_args",
  "@4",
  "literal",
  "strings",
  "xstring",
  "regexp",
  "words",
  "awords",
  "var_ref",
  "assoc_list",
  "brace_block",
  "method_call",
  "lambda",
  "then",
  "if_tail",
  "do",
  "case_body",
  "for_var",
  "superclass",
  "term",
  "f_arglist",
  "singleton",
  "dot_or_colon",
  "@5",
  "@6",
  "@7",
  "@8",
  "@9",
  "@10",
  "@11",
  "@12",
  "@13",
  "@14",
  "@15",
  "@16",
  "@17",
  "@18",
  "@19",
  "f_larglist",
  "lambda_body",
  "block_param",
  "f_block_optarg",
  "f_block_opt",
  "block_args_tail",
  "f_block_arg",
  "opt_block_args_tail",
  "f_arg",
  "f_rest_arg",
  "do_block",
  "@20",
  "operation3",
  "@21",
  "@22",
  "cases",
  "@23",
  "exc_list",
  "exc_var",
  "numeric",
  "dsym",
  "string",
  "string1",
  "string_contents",
  "xstring_contents",
  "word_list",
  "word",
  "string_content",
  "qword_list",
  "string_dvar",
  "@24",
  "@25",
  "sym",
  "f_args",
  "kwrest_mark",
  "f_kwrest",
  "f_label",
  "f_kw",
  "f_kwarg",
  "args_tail",
  "opt_f_block_arg",
  "opt_args_tail",
  "f_optarg",
  "f_norm_arg",
  "f_bad_arg",
  "f_arg_item",
  "f_margs",
  "f_marg",
  "f_marg_list",
  "f_opt",
  "restarg_mark",
  "blkarg_mark",
  "assoc" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

def _reduce_2(val, _values, result)
                      result = new_compstmt val[0]
                    
    result
end

def _reduce_3(val, _values, result)
                      result = new_block
                    
    result
end

def _reduce_4(val, _values, result)
                      result = new_block val[0]
                    
    result
end

def _reduce_5(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

# reduce 6 omitted

def _reduce_7(val, _values, result)
                      result = val[2]
                    
    result
end

def _reduce_8(val, _values, result)
                      result = new_body(val[0], val[1], val[2], val[3])
                    
    result
end

def _reduce_9(val, _values, result)
                      result = new_compstmt val[0]
                    
    result
end

def _reduce_10(val, _values, result)
                      result = new_block
                    
    result
end

def _reduce_11(val, _values, result)
                      result = new_block val[0]
                    
    result
end

def _reduce_12(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_13(val, _values, result)
                      lexer.lex_state = :expr_fname
                    
    result
end

def _reduce_14(val, _values, result)
                      result = new_alias(val[0], val[1], val[3])
                    
    result
end

def _reduce_15(val, _values, result)
                      result = s(:valias, value(val[1]).to_sym, value(val[2]).to_sym)
                    
    result
end

# reduce 16 omitted

def _reduce_17(val, _values, result)
                      result = s(:valias, value(val[1]).to_sym, value(val[2]).to_sym)
                    
    result
end

def _reduce_18(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_19(val, _values, result)
                      result = new_if(val[1], val[2], val[0], nil)
                    
    result
end

def _reduce_20(val, _values, result)
                      result = new_if(val[1], val[2], nil, val[0])
                    
    result
end

def _reduce_21(val, _values, result)
                      result = new_while(val[1], val[2], val[0])
                    
    result
end

def _reduce_22(val, _values, result)
                      result = new_until(val[1], val[2], val[0])
                    
    result
end

def _reduce_23(val, _values, result)
                      result = new_rescue_mod(val[1], val[0], val[2])
                    
    result
end

# reduce 24 omitted

def _reduce_25(val, _values, result)
                      result = new_assign(val[0], val[1], val[2])
                    
    result
end

def _reduce_26(val, _values, result)
                      result = s(:masgn, val[0], s(:to_ary, val[2]))
                    
    result
end

def _reduce_27(val, _values, result)
                      result = new_op_asgn val[1], val[0], val[2]
                    
    result
end

# reduce 28 omitted

# reduce 29 omitted

def _reduce_30(val, _values, result)
                      result = s(:op_asgn2, val[0], op_to_setter(val[2]), value(val[3]).to_sym, val[4])
                    
    result
end

# reduce 31 omitted

# reduce 32 omitted

# reduce 33 omitted

def _reduce_34(val, _values, result)
                      result = new_assign val[0], val[1], s(:svalue, val[2])
                    
    result
end

def _reduce_35(val, _values, result)
                      result = s(:masgn, val[0], s(:to_ary, val[2]))
                    
    result
end

def _reduce_36(val, _values, result)
                      result = s(:masgn, val[0], val[2])
                    
    result
end

# reduce 37 omitted

# reduce 38 omitted

def _reduce_39(val, _values, result)
                      result = s(:and, val[0], val[2])
                    
    result
end

def _reduce_40(val, _values, result)
                      result = s(:or, val[0], val[2])
                    
    result
end

def _reduce_41(val, _values, result)
                      result = new_unary_call(['!', []], val[1])
                    
    result
end

def _reduce_42(val, _values, result)
                      result = new_unary_call(val[0], val[1])
                    
    result
end

# reduce 43 omitted

# reduce 44 omitted

# reduce 45 omitted

# reduce 46 omitted

def _reduce_47(val, _values, result)
                      result = new_return(val[0], val[1])
                    
    result
end

def _reduce_48(val, _values, result)
                      result = new_break(val[0], val[1])
                    
    result
end

def _reduce_49(val, _values, result)
                      result = new_next(val[0], val[1])
                    
    result
end

# reduce 50 omitted

# reduce 51 omitted

# reduce 52 omitted

# reduce 53 omitted

# reduce 54 omitted

def _reduce_55(val, _values, result)
                      result = new_call(nil, val[0], val[1])
                    
    result
end

# reduce 56 omitted

def _reduce_57(val, _values, result)
                      result = new_js_call(val[0], val[2], val[3])
                    
    result
end

# reduce 58 omitted

def _reduce_59(val, _values, result)
                      result = new_call(val[0], val[2], val[3])
                    
    result
end

# reduce 60 omitted

def _reduce_61(val, _values, result)
                    result = new_call(val[0], val[2], val[3])
                  
    result
end

# reduce 62 omitted

def _reduce_63(val, _values, result)
                      result = new_super(val[0], val[1])
                    
    result
end

def _reduce_64(val, _values, result)
                      result = new_yield val[1]
                    
    result
end

def _reduce_65(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_66(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_67(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_68(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_69(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_70(val, _values, result)
                      result = val[0] << val[1]
                    
    result
end

def _reduce_71(val, _values, result)
                      result = val[0] << s(:splat, val[2])
                    
    result
end

def _reduce_72(val, _values, result)
                     result = (val[0] << s(:splat, val[2])).concat(val[4].children)
                   
    result
end

def _reduce_73(val, _values, result)
                      result = val[0] << s(:splat)
                    
    result
end

def _reduce_74(val, _values, result)
                      result = (val[0] << s(:splat)).concat(val[3].children)
                    
    result
end

def _reduce_75(val, _values, result)
                      result = s(:array, s(:splat, val[1]))
                    
    result
end

def _reduce_76(val, _values, result)
                      result = s(:array, s(:splat, val[1])).concat(val[3].children)
                    
    result
end

def _reduce_77(val, _values, result)
                      result = s(:array, s(:splat))
                    
    result
end

def _reduce_78(val, _values, result)
                      result = s(:array, s(:splat)).concat(val[2].children)
                    
    result
end

def _reduce_79(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_80(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_81(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

def _reduce_82(val, _values, result)
                      result = val[0] << val[1]
                    
    result
end

def _reduce_83(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

def _reduce_84(val, _values, result)
                      result = val[0] << val[2]
                    
    result
end

def _reduce_85(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_86(val, _values, result)
                      args = val[2] ? val[2] : []
                      result = s(:attrasgn, val[0], :[]=, s(:arglist, *args))
                    
    result
end

def _reduce_87(val, _values, result)
                      result = new_call val[0], val[2], []
                    
    result
end

# reduce 88 omitted

# reduce 89 omitted

# reduce 90 omitted

# reduce 91 omitted

# reduce 92 omitted

def _reduce_93(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_94(val, _values, result)
                      result = new_js_attrasgn(val[0], val[2])
                    
    result
end

def _reduce_95(val, _values, result)
                      result = new_attrasgn(val[0], :[]=, val[2])
                    
    result
end

def _reduce_96(val, _values, result)
                      result = new_attrasgn(val[0], op_to_setter(val[2]))
                    
    result
end

def _reduce_97(val, _values, result)
                      result = new_attrasgn(val[0], op_to_setter(val[2]))
                    
    result
end

def _reduce_98(val, _values, result)
                      result = new_attrasgn(val[0], op_to_setter(val[2]))
                    
    result
end

def _reduce_99(val, _values, result)
                      result = new_colon2(val[0], val[1], val[2])
                    
    result
end

def _reduce_100(val, _values, result)
                      result = new_colon3(val[0], val[1])
                    
    result
end

# reduce 101 omitted

# reduce 102 omitted

def _reduce_103(val, _values, result)
                      result = new_colon3(val[0], val[1])
                    
    result
end

def _reduce_104(val, _values, result)
                      result = new_const(val[0])
                    
    result
end

def _reduce_105(val, _values, result)
                      result = new_colon2(val[0], val[1], val[2])
                    
    result
end

# reduce 106 omitted

# reduce 107 omitted

# reduce 108 omitted

def _reduce_109(val, _values, result)
                      lexer.lex_state = :expr_end
                      result = val[0]
                    
    result
end

def _reduce_110(val, _values, result)
                      lexer.lex_state = :expr_end
                      result = val[0]
                    
    result
end

def _reduce_111(val, _values, result)
                      result = new_sym(val[0])
                    
    result
end

# reduce 112 omitted

def _reduce_113(val, _values, result)
                      result = s(:undef, val[0])
                    
    result
end

def _reduce_114(val, _values, result)
                      result = val[0] << val[2]
                    
    result
end

# reduce 115 omitted

# reduce 116 omitted

# reduce 117 omitted

# reduce 118 omitted

# reduce 119 omitted

# reduce 120 omitted

# reduce 121 omitted

# reduce 122 omitted

# reduce 123 omitted

# reduce 124 omitted

# reduce 125 omitted

# reduce 126 omitted

# reduce 127 omitted

# reduce 128 omitted

# reduce 129 omitted

# reduce 130 omitted

# reduce 131 omitted

# reduce 132 omitted

# reduce 133 omitted

# reduce 134 omitted

# reduce 135 omitted

# reduce 136 omitted

# reduce 137 omitted

# reduce 138 omitted

# reduce 139 omitted

# reduce 140 omitted

# reduce 141 omitted

# reduce 142 omitted

# reduce 143 omitted

# reduce 144 omitted

# reduce 145 omitted

# reduce 146 omitted

# reduce 147 omitted

# reduce 148 omitted

# reduce 149 omitted

# reduce 150 omitted

# reduce 151 omitted

# reduce 152 omitted

# reduce 153 omitted

# reduce 154 omitted

# reduce 155 omitted

# reduce 156 omitted

# reduce 157 omitted

# reduce 158 omitted

# reduce 159 omitted

# reduce 160 omitted

# reduce 161 omitted

# reduce 162 omitted

# reduce 163 omitted

# reduce 164 omitted

# reduce 165 omitted

# reduce 166 omitted

# reduce 167 omitted

# reduce 168 omitted

# reduce 169 omitted

# reduce 170 omitted

# reduce 171 omitted

# reduce 172 omitted

# reduce 173 omitted

# reduce 174 omitted

# reduce 175 omitted

# reduce 176 omitted

# reduce 177 omitted

# reduce 178 omitted

# reduce 179 omitted

# reduce 180 omitted

# reduce 181 omitted

# reduce 182 omitted

# reduce 183 omitted

# reduce 184 omitted

# reduce 185 omitted

# reduce 186 omitted

# reduce 187 omitted

# reduce 188 omitted

def _reduce_189(val, _values, result)
                      result = new_assign(val[0], val[1], val[2])
                    
    result
end

def _reduce_190(val, _values, result)
                      result = new_assign val[0], val[1], s(:rescue_mod, val[2], val[4])
                    
    result
end

def _reduce_191(val, _values, result)
                      result = new_op_asgn val[1], val[0], val[2]
                    
    result
end

def _reduce_192(val, _values, result)
                      result = new_op_asgn1(val[0], val[2], val[4], val[5])
                    
    result
end

def _reduce_193(val, _values, result)
                      raise ".JS[...] #{val[4]} is not supported"
                    
    result
end

def _reduce_194(val, _values, result)
                      result = s(:op_asgn2, val[0], op_to_setter(val[2]), value(val[3]).to_sym, val[4])
                    
    result
end

# reduce 195 omitted

# reduce 196 omitted

# reduce 197 omitted

# reduce 198 omitted

# reduce 199 omitted

def _reduce_200(val, _values, result)
                      result = new_irange(val[0], val[1], val[2])
                    
    result
end

def _reduce_201(val, _values, result)
                      result = new_erange(val[0], val[1], val[2])
                    
    result
end

def _reduce_202(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_203(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_204(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_205(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_206(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_207(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_208(val, _values, result)
                      result = new_call new_binary_call(new_int(val[1]), val[2], val[3]), [:"-@", []], []
                    
    result
end

def _reduce_209(val, _values, result)
                      result = new_call new_binary_call(new_float(val[1]), val[2], val[3]), [:"-@", []], []
                    
    result
end

def _reduce_210(val, _values, result)
                      result = new_call val[1], [:"+@", []], []
                      if [:int, :float].include? val[1].type
                        result = val[1]
                      end
                    
    result
end

def _reduce_211(val, _values, result)
                      result = new_call val[1], [:"-@", []], []
                      if val[1].type == :int
                        val[1][1] = -val[1][1]
                        result = val[1]
                      elsif val[1].type == :float
                        val[1][1] = -val[1][1].to_f
                        result = val[1]
                      end
                    
    result
end

def _reduce_212(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_213(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_214(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_215(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_216(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_217(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_218(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_219(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_220(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_221(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_222(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_223(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_224(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_225(val, _values, result)
                      result = new_unary_call(val[0], val[1])
                    
    result
end

def _reduce_226(val, _values, result)
                      result = new_unary_call(val[0], val[1])
                    
    result
end

def _reduce_227(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_228(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_229(val, _values, result)
                      result = new_and(val[0], val[1], val[2])
                    
    result
end

def _reduce_230(val, _values, result)
                      result = new_or(val[0], val[1], val[2])
                    
    result
end

def _reduce_231(val, _values, result)
                      result = s(:defined, val[2])
                    
    result
end

def _reduce_232(val, _values, result)
 lexer.cond_push 1 
    result
end

def _reduce_233(val, _values, result)
 lexer.cond_pop 
    result
end

def _reduce_234(val, _values, result)
                      result = new_if(val[1], val[0], val[3], val[6])
                    
    result
end

# reduce 235 omitted

# reduce 236 omitted

def _reduce_237(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_238(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_239(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_240(val, _values, result)
                      val[0] << s(:hash, *val[2])
                      result = val[0]
                    
    result
end

def _reduce_241(val, _values, result)
                      result = [s(:hash, *val[0])]
                    
    result
end

def _reduce_242(val, _values, result)
                      result = val[0] << val[2]
                    
    result
end

def _reduce_243(val, _values, result)
                      result = val[1]
                    
    result
end

# reduce 244 omitted

def _reduce_245(val, _values, result)
                      result = []
                    
    result
end

# reduce 246 omitted

def _reduce_247(val, _values, result)
                      result = []
                    
    result
end

# reduce 248 omitted

def _reduce_249(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_250(val, _values, result)
                      result = val[0]
                      result << new_hash(nil, val[2], nil)
                    
    result
end

def _reduce_251(val, _values, result)
                      result = [new_hash(nil, val[0], nil)]
                    
    result
end

def _reduce_252(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_253(val, _values, result)
                      result = val[0]
                      add_block_pass val[0], val[1]
                    
    result
end

def _reduce_254(val, _values, result)
                      result = [new_hash(nil, val[0], nil)]
                      add_block_pass result, val[1]
                    
    result
end

def _reduce_255(val, _values, result)
                      result = val[0]
                      result << new_hash(nil, val[2], nil)
                      result << val[3] if val[3]
                    
    result
end

def _reduce_256(val, _values, result)
                      result = []
                      add_block_pass result, val[0]
                    
    result
end

# reduce 257 omitted

# reduce 258 omitted

def _reduce_259(val, _values, result)
                      lexer.cmdarg_push 1
                    
    result
end

def _reduce_260(val, _values, result)
                      lexer.cmdarg_pop
                      result = val[1]
                    
    result
end

# reduce 261 omitted

def _reduce_262(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_263(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_264(val, _values, result)
                      result = new_block_pass(val[0], val[1])
                    
    result
end

def _reduce_265(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_266(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_267(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_268(val, _values, result)
                      result = [new_splat(val[0], val[1])]
                    
    result
end

def _reduce_269(val, _values, result)
                      result = val[0] << val[2]
                    
    result
end

def _reduce_270(val, _values, result)
                      result  = val[0] << new_splat(val[2], val[3])
                    
    result
end

def _reduce_271(val, _values, result)
                      val[0] << val[2]
                      result = s(:array, *val[0])
                    
    result
end

def _reduce_272(val, _values, result)
                      val[0] << s(:splat, val[3])
                      result = s(:array, *val[0])
                    
    result
end

def _reduce_273(val, _values, result)
                      result = s(:splat, val[1])
                    
    result
end

# reduce 274 omitted

# reduce 275 omitted

# reduce 276 omitted

# reduce 277 omitted

# reduce 278 omitted

# reduce 279 omitted

# reduce 280 omitted

# reduce 281 omitted

# reduce 282 omitted

def _reduce_283(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_284(val, _values, result)
                      result = s(:begin, val[2])
                    
    result
end

def _reduce_285(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_286(val, _values, result)
                      result = new_paren(val[0], val[1], val[2])
                    
    result
end

def _reduce_287(val, _values, result)
                      result = new_colon2(val[0], val[1], val[2])
                    
    result
end

def _reduce_288(val, _values, result)
                      result = new_colon3(val[0], val[1])
                    
    result
end

def _reduce_289(val, _values, result)
                      result = new_call val[0], [:[], []], val[2]
                    
    result
end

def _reduce_290(val, _values, result)
                      result = new_js_call val[0], [:[], []], val[2]
                    
    result
end

def _reduce_291(val, _values, result)
                      result = new_array(val[0], val[1], val[2])
                    
    result
end

def _reduce_292(val, _values, result)
                      result = new_hash(val[0], val[1], val[2])
                    
    result
end

def _reduce_293(val, _values, result)
                      result = new_return(val[0])
                    
    result
end

def _reduce_294(val, _values, result)
                      result = new_yield val[2]
                    
    result
end

def _reduce_295(val, _values, result)
                      result = s(:yield)
                    
    result
end

def _reduce_296(val, _values, result)
                      result = s(:yield)
                    
    result
end

def _reduce_297(val, _values, result)
                      result = s(:defined, val[3])
                    
    result
end

def _reduce_298(val, _values, result)
                      result = new_unary_call(['!', []], val[2])
                    
    result
end

def _reduce_299(val, _values, result)
                      result = new_unary_call(['!', []], new_nil(val[0]))
                    
    result
end

def _reduce_300(val, _values, result)
                      result = new_call(nil, val[0], [])
                      result << val[1]
                    
    result
end

# reduce 301 omitted

def _reduce_302(val, _values, result)
                      val[0] << val[1]
                      result = val[0]
                    
    result
end

def _reduce_303(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_304(val, _values, result)
                      result = new_if(val[0], val[1], val[3], val[4])
                    
    result
end

def _reduce_305(val, _values, result)
                      result = new_if(val[0], val[1], val[4], val[3])
                    
    result
end

def _reduce_306(val, _values, result)
                      lexer.cond_push 1
                      result = lexer.line
                    
    result
end

def _reduce_307(val, _values, result)
                      lexer.cond_pop
                    
    result
end

def _reduce_308(val, _values, result)
                      result = s(:while, val[2], val[5])
                    
    result
end

def _reduce_309(val, _values, result)
                      lexer.cond_push 1
                      result = lexer.line
                    
    result
end

def _reduce_310(val, _values, result)
                      lexer.cond_pop
                    
    result
end

def _reduce_311(val, _values, result)
                      result = s(:until, val[2], val[5])
                    
    result
end

def _reduce_312(val, _values, result)
                      result = s(:case, val[1], *val[3])
                    
    result
end

def _reduce_313(val, _values, result)
                      result = s(:case, nil, *val[2])
                    
    result
end

def _reduce_314(val, _values, result)
                      result = s(:case, nil, val[3])
                    
    result
end

def _reduce_315(val, _values, result)
                      lexer.cond_push 1
                      result = lexer.line
                    
    result
end

def _reduce_316(val, _values, result)
                      lexer.cond_pop
                    
    result
end

def _reduce_317(val, _values, result)
                      result = s(:for, val[4], val[1], val[7])
                    
    result
end

def _reduce_318(val, _values, result)
                      # ...
                    
    result
end

def _reduce_319(val, _values, result)
                      result = new_class val[0], val[1], val[2], val[4], val[5]
                    
    result
end

def _reduce_320(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_321(val, _values, result)
                      # ...
                    
    result
end

def _reduce_322(val, _values, result)
                      result = new_sclass(val[0], val[3], val[6], val[7])
                    
    result
end

def _reduce_323(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_324(val, _values, result)
                      # ...
                    
    result
end

def _reduce_325(val, _values, result)
                      result = new_module(val[0], val[2], val[4], val[5])
                    
    result
end

def _reduce_326(val, _values, result)
                      push_scope
                      lexer.lex_state = :expr_endfn
                    
    result
end

def _reduce_327(val, _values, result)
                      result = new_def(val[0], nil, val[1], val[3], val[4], val[5])
                      pop_scope
                    
    result
end

def _reduce_328(val, _values, result)
                       lexer.lex_state = :expr_fname
                    
    result
end

def _reduce_329(val, _values, result)
                      push_scope
                      lexer.lex_state = :expr_endfn
                    
    result
end

def _reduce_330(val, _values, result)
                      result = new_def(val[0], val[1], val[4], val[6], val[7], val[8])
                      pop_scope
                    
    result
end

def _reduce_331(val, _values, result)
                      result = new_break(val[0])
                    
    result
end

def _reduce_332(val, _values, result)
                      result = s(:next)
                    
    result
end

def _reduce_333(val, _values, result)
                      result = s(:redo)
                    
    result
end

# reduce 334 omitted

# reduce 335 omitted

# reduce 336 omitted

# reduce 337 omitted

# reduce 338 omitted

# reduce 339 omitted

# reduce 340 omitted

# reduce 341 omitted

# reduce 342 omitted

def _reduce_343(val, _values, result)
                      result = new_call nil, [:lambda, []], []
                      result << new_iter(val[0], val[1])
                    
    result
end

def _reduce_344(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_345(val, _values, result)
                      result = nil
                    
    result
end

# reduce 346 omitted

# reduce 347 omitted

def _reduce_348(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_349(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_350(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_351(val, _values, result)
                      result = new_if(val[0], val[1], val[3], val[4])
                    
    result
end

# reduce 352 omitted

def _reduce_353(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_354(val, _values, result)
                      result = s(:block, val[0])
                    
    result
end

def _reduce_355(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_356(val, _values, result)
                      result = new_assign(new_assignable(new_ident(
                                  val[0])), val[1], val[2])
                    
    result
end

# reduce 357 omitted

def _reduce_358(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_359(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_360(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_361(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_362(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_363(val, _values, result)
                      nil
                    
    result
end

def _reduce_364(val, _values, result)
                      result = new_block_args(val[0], val[2], val[4], val[5])
                    
    result
end

def _reduce_365(val, _values, result)
                      result = new_block_args(val[0], val[2], nil, val[3])
                    
    result
end

def _reduce_366(val, _values, result)
                      result = new_block_args(val[0], nil, val[2], val[3])
                    
    result
end

def _reduce_367(val, _values, result)
                      result = new_block_args(val[0], nil, nil, nil)
                    
    result
end

def _reduce_368(val, _values, result)
                      result = new_block_args(val[0], nil, nil, val[1])
                    
    result
end

def _reduce_369(val, _values, result)
                      result = new_block_args(nil, val[0], val[2], val[3])
                    
    result
end

def _reduce_370(val, _values, result)
                      result = new_block_args(nil, val[0], nil, val[1])
                    
    result
end

def _reduce_371(val, _values, result)
                      result = new_block_args(nil, nil, val[0], val[1])
                    
    result
end

def _reduce_372(val, _values, result)
                      result = new_block_args(nil, nil, nil, val[0])
                    
    result
end

def _reduce_373(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_374(val, _values, result)
                      result = new_iter val[2], val[3]
                      pop_scope
                    
    result
end

def _reduce_375(val, _values, result)
                      val[0] << val[1]
                      result = val[0]
                    
    result
end

# reduce 376 omitted

# reduce 377 omitted

# reduce 378 omitted

def _reduce_379(val, _values, result)
                      result = new_call(nil, val[0], val[1])
                    
    result
end

def _reduce_380(val, _values, result)
                      result = new_call(val[0], val[2], val[3])
                    
    result
end

def _reduce_381(val, _values, result)
                      result = new_js_call(val[0], val[2], val[3])
                    
    result
end

def _reduce_382(val, _values, result)
                      result = new_call(val[0], [:call, []], val[2])
                    
    result
end

def _reduce_383(val, _values, result)
                      result = new_call(val[0], val[2], val[3])
                    
    result
end

def _reduce_384(val, _values, result)
                      result = new_call(val[0], val[2])
                    
    result
end

def _reduce_385(val, _values, result)
                      result = new_super(val[0], val[1])
                    
    result
end

def _reduce_386(val, _values, result)
                      result = new_super(val[0], nil)
                    
    result
end

def _reduce_387(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_388(val, _values, result)
                      result = new_iter val[2], val[3]
                      pop_scope
                    
    result
end

def _reduce_389(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_390(val, _values, result)
                      result = new_iter val[2], val[3]
                      pop_scope
                    
    result
end

def _reduce_391(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_392(val, _values, result)
                      part = s(:when, s(:array, *val[2]), val[4])
                      result = [part]
                      result.push(*val[5]) if val[5]
                    
    result
end

def _reduce_393(val, _values, result)
                      result = [val[0]]
                    
    result
end

# reduce 394 omitted

def _reduce_395(val, _values, result)
                      exc = val[1] || s(:array)
                      exc << new_assign(val[2], val[2], s(:gvar, '$!'.intern)) if val[2]
                      result = [s(:resbody, exc, val[4])]
                      result.concat val[5] if val[5]
                    
    result
end

def _reduce_396(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_397(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

# reduce 398 omitted

# reduce 399 omitted

def _reduce_400(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_401(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_402(val, _values, result)
                      result = val[1].nil? ? s(:nil) : val[1]
                    
    result
end

# reduce 403 omitted

# reduce 404 omitted

# reduce 405 omitted

# reduce 406 omitted

def _reduce_407(val, _values, result)
                      result = new_str val[0]
                    
    result
end

# reduce 408 omitted

def _reduce_409(val, _values, result)
                    result = str_append val[0], val[1]
                  
    result
end

def _reduce_410(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_411(val, _values, result)
                      result = s(:str, value(val[0]))
                    
    result
end

def _reduce_412(val, _values, result)
                      result = new_xstr(val[0], val[1], val[2])
                    
    result
end

def _reduce_413(val, _values, result)
                      result = new_regexp val[1], val[2]
                    
    result
end

def _reduce_414(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_415(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_416(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_417(val, _values, result)
                      part = val[1]
                      part = s(:dstr, "", val[1]) if part.type == :evstr
                      result = val[0] << part
                    
    result
end

def _reduce_418(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_419(val, _values, result)
                      result = val[0].concat([val[1]])
                    
    result
end

def _reduce_420(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_421(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_422(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_423(val, _values, result)
                      result = val[0] << s(:str, value(val[1]))
                    
    result
end

def _reduce_424(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_425(val, _values, result)
                      result = str_append val[0], val[1]
                    
    result
end

def _reduce_426(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_427(val, _values, result)
                      result = str_append val[0], val[1]
                    
    result
end

def _reduce_428(val, _values, result)
                      result = new_str_content(val[0])
                    
    result
end

def _reduce_429(val, _values, result)
                      result = lexer.strterm
                      lexer.strterm = nil
                    
    result
end

def _reduce_430(val, _values, result)
                      lexer.strterm = val[1]
                      result = new_evstr(val[2])
                    
    result
end

def _reduce_431(val, _values, result)
                      lexer.cond_push 0
                      lexer.cmdarg_push 0
                      result = lexer.strterm
                      lexer.strterm = nil
                      lexer.lex_state = :expr_beg
                    
    result
end

def _reduce_432(val, _values, result)
                      lexer.strterm = val[1]
                      lexer.cond_lexpop
                      lexer.cmdarg_lexpop
                      result = new_evstr(val[2])
                    
    result
end

def _reduce_433(val, _values, result)
                      result = new_gvar(val[0])
                    
    result
end

def _reduce_434(val, _values, result)
                      result = new_ivar(val[0])
                    
    result
end

def _reduce_435(val, _values, result)
                      result = new_cvar(val[0])
                    
    result
end

# reduce 436 omitted

def _reduce_437(val, _values, result)
                      result = new_sym(val[1])
                      lexer.lex_state = :expr_end
                    
    result
end

def _reduce_438(val, _values, result)
                      result = new_sym(val[0])
                    
    result
end

# reduce 439 omitted

# reduce 440 omitted

# reduce 441 omitted

# reduce 442 omitted

def _reduce_443(val, _values, result)
                      result = new_dsym val[1]
                    
    result
end

def _reduce_444(val, _values, result)
                      result = new_int(val[0])
                    
    result
end

def _reduce_445(val, _values, result)
                      result = new_float(val[0])
                    
    result
end

def _reduce_446(val, _values, result)
                    result = negate_num(new_int(val[1]))
                  
    result
end

def _reduce_447(val, _values, result)
                    result = negate_num(new_float(val[1]))
                  
    result
end

def _reduce_448(val, _values, result)
                    result = new_int(val[1])
                  
    result
end

def _reduce_449(val, _values, result)
                    result = new_float(val[1])
                  
    result
end

def _reduce_450(val, _values, result)
                      result = new_ident(val[0])
                    
    result
end

def _reduce_451(val, _values, result)
                      result = new_ivar(val[0])
                    
    result
end

def _reduce_452(val, _values, result)
                      result = new_gvar(val[0])
                    
    result
end

def _reduce_453(val, _values, result)
                      result = new_const(val[0])
                    
    result
end

def _reduce_454(val, _values, result)
                      result = new_cvar(val[0])
                    
    result
end

def _reduce_455(val, _values, result)
                      result = new_nil(val[0])
                    
    result
end

def _reduce_456(val, _values, result)
                      result = new_self(val[0])
                    
    result
end

def _reduce_457(val, _values, result)
                      result = new_true(val[0])
                    
    result
end

def _reduce_458(val, _values, result)
                      result = new_false(val[0])
                    
    result
end

def _reduce_459(val, _values, result)
                      result = new___FILE__(val[0])
                    
    result
end

def _reduce_460(val, _values, result)
                      result = new___LINE__(val[0])
                    
    result
end

def _reduce_461(val, _values, result)
                      result = new_var_ref(val[0])
                    
    result
end

def _reduce_462(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_463(val, _values, result)
                      result = s(:nth_ref, value(val[0]))
                    
    result
end

# reduce 464 omitted

def _reduce_465(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_466(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_467(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_468(val, _values, result)
                      result = val[1]
                      lexer.lex_state = :expr_beg
                    
    result
end

def _reduce_469(val, _values, result)
                      result = val[0]
                      lexer.lex_state = :expr_beg
                    
    result
end

# reduce 470 omitted

# reduce 471 omitted

def _reduce_472(val, _values, result)
                      result = new_kwrestarg(val[1])
                    
    result
end

def _reduce_473(val, _values, result)
                      result = new_kwrestarg()
                    
    result
end

def _reduce_474(val, _values, result)
                      result = new_sym(val[0])
                    
    result
end

def _reduce_475(val, _values, result)
                      result = new_kwoptarg(val[0], val[1])
                    
    result
end

def _reduce_476(val, _values, result)
                      result = new_kwarg(val[0])
                    
    result
end

def _reduce_477(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_478(val, _values, result)
                      result = val[0]
                      result << val[2]
                    
    result
end

def _reduce_479(val, _values, result)
                      result = new_args_tail(val[0], val[2], val[3])
                    
    result
end

def _reduce_480(val, _values, result)
                      result = new_args_tail(val[0], nil, val[1])
                    
    result
end

def _reduce_481(val, _values, result)
                      result = new_args_tail(nil, val[0], val[1])
                    
    result
end

def _reduce_482(val, _values, result)
                      result = new_args_tail(nil, nil, val[0])
                    
    result
end

def _reduce_483(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_484(val, _values, result)
                      result = new_args_tail(nil, nil, nil)
                    
    result
end

def _reduce_485(val, _values, result)
                      result = new_args(val[0], val[2], val[4], val[5])
                    
    result
end

def _reduce_486(val, _values, result)
                      result = new_args(val[0], val[2], nil, val[3])
                    
    result
end

def _reduce_487(val, _values, result)
                      result = new_args(val[0], nil, val[2], val[3])
                    
    result
end

def _reduce_488(val, _values, result)
                      result = new_args(val[0], nil, nil, val[1])
                    
    result
end

def _reduce_489(val, _values, result)
                      result = new_args(nil, val[0], val[2], val[3])
                    
    result
end

def _reduce_490(val, _values, result)
                      result = new_args(nil, val[0], nil, val[1])
                    
    result
end

def _reduce_491(val, _values, result)
                      result = new_args(nil, nil, val[0], val[1])
                    
    result
end

def _reduce_492(val, _values, result)
                      result = new_args(nil, nil, nil, val[0])
                    
    result
end

def _reduce_493(val, _values, result)
                      result = new_args(nil, nil, nil, nil)
                    
    result
end

# reduce 494 omitted

def _reduce_495(val, _values, result)
                      result = value(val[0]).to_sym
                      scope.add_local result
                    
    result
end

def _reduce_496(val, _values, result)
                      raise 'formal argument cannot be a constant'
                    
    result
end

def _reduce_497(val, _values, result)
                      raise 'formal argument cannot be an instance variable'
                    
    result
end

def _reduce_498(val, _values, result)
                      raise 'formal argument cannot be a class variable'
                    
    result
end

def _reduce_499(val, _values, result)
                      raise 'formal argument cannot be a global variable'
                    
    result
end

def _reduce_500(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_501(val, _values, result)
                      result = val[1]
                    
    result
end

# reduce 502 omitted

# reduce 503 omitted

def _reduce_504(val, _values, result)
                      result = s(:lasgn, val[0])
                    
    result
end

# reduce 505 omitted

def _reduce_506(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

def _reduce_507(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

# reduce 508 omitted

# reduce 509 omitted

# reduce 510 omitted

# reduce 511 omitted

# reduce 512 omitted

def _reduce_513(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_514(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_515(val, _values, result)
                      result = new_assign(new_assignable(new_ident(val[0])), val[1], val[2])
                    
    result
end

def _reduce_516(val, _values, result)
                      result = s(:block, val[0])
                    
    result
end

def _reduce_517(val, _values, result)
                      result = val[0]
                      val[0] << val[2]
                    
    result
end

# reduce 518 omitted

# reduce 519 omitted

def _reduce_520(val, _values, result)
                      result = "*#{value(val[1])}".to_sym
                    
    result
end

def _reduce_521(val, _values, result)
                      result = :"*"
                    
    result
end

# reduce 522 omitted

# reduce 523 omitted

def _reduce_524(val, _values, result)
                      result = "&#{value(val[1])}".to_sym
                    
    result
end

def _reduce_525(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_526(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_527(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_528(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_529(val, _values, result)
                      result = []
                    
    result
end

def _reduce_530(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_531(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_532(val, _values, result)
                      result = val[0].push(*val[2])
                    
    result
end

def _reduce_533(val, _values, result)
                      result = [val[0], val[2]]
                    
    result
end

def _reduce_534(val, _values, result)
                      result = [new_sym(val[0]), val[1]]
                    
    result
end

def _reduce_535(val, _values, result)
                      result = [s(:sym, source(val[1]).to_sym), val[3]]
                    
    result
end

# reduce 536 omitted

# reduce 537 omitted

# reduce 538 omitted

# reduce 539 omitted

# reduce 540 omitted

# reduce 541 omitted

# reduce 542 omitted

# reduce 543 omitted

# reduce 544 omitted

# reduce 545 omitted

# reduce 546 omitted

# reduce 547 omitted

# reduce 548 omitted

# reduce 549 omitted

# reduce 550 omitted

# reduce 551 omitted

# reduce 552 omitted

# reduce 553 omitted

# reduce 554 omitted

# reduce 555 omitted

# reduce 556 omitted

# reduce 557 omitted

# reduce 558 omitted

def _reduce_559(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module Opal
