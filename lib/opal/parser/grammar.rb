#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.10
# from Racc grammer file "".
#

require 'racc/parser.rb'
module Opal
  class Parser < Racc::Parser


##### State transition tables begin ###

clist = [
'63,64,65,7,51,550,574,688,57,58,201,202,806,61,586,59,60,62,23,24,66',
'67,616,-497,268,616,22,28,27,89,88,90,91,574,703,17,579,655,201,202',
'429,6,41,8,9,93,92,83,50,85,84,86,87,94,95,615,81,82,615,38,39,37,268',
'-59,73,688,576,575,572,201,202,-428,74,-431,550,-87,585,556,-428,557',
'-431,36,550,-86,30,-497,263,52,-90,550,757,569,32,576,575,550,40,100',
'570,504,-70,-85,99,100,18,687,-497,267,99,79,73,75,76,77,78,100,-79',
'549,74,80,99,-435,63,64,65,301,51,56,-435,688,57,58,-431,53,54,61,702',
'59,60,62,254,255,66,67,616,267,268,-89,253,284,288,89,88,90,91,100,301',
'215,-499,-77,99,100,517,687,41,519,99,93,92,83,50,85,84,86,87,94,95',
'615,81,82,-79,38,39,37,100,-87,549,-87,467,99,-87,819,100,-86,549,-86',
'-440,99,-86,100,465,549,842,206,99,100,210,549,263,52,99,-85,-269,-85',
'735,-434,-85,-79,40,-269,-78,574,-434,-77,-79,100,214,687,616,267,99',
'79,73,75,76,77,78,574,-519,-84,74,80,201,202,-83,-519,-519,-519,725',
'56,-519,-519,-519,504,-519,53,54,526,527,-437,-77,615,-85,-519,-519',
'-519,-437,-77,699,201,202,-269,263,-519,-519,771,-519,-519,-519,-519',
'-519,576,575,-499,-78,-270,736,462,574,-76,719,574,-270,-436,-81,759',
'-84,576,575,587,-436,-89,-519,-519,-519,-519,-519,-519,-519,-519,-519',
'-519,-519,-519,-519,-519,753,-316,-519,-519,-519,-78,612,-519,-316,263',
'-519,698,-78,-519,-440,-519,263,-519,-87,-519,752,-519,-519,-519,-519',
'-519,-519,-519,-270,-519,-519,-519,576,575,577,576,575,581,100,517,223',
'-268,516,99,-519,-519,-519,-519,-268,-519,-503,500,501,-500,496,-75',
'-519,-503,-503,-503,-316,497,-83,-503,-503,633,-503,223,100,-433,-268',
'-431,634,99,-262,-503,-433,-268,-431,100,198,-262,-500,223,99,-503,-503',
'199,-503,-503,-503,-503,-503,517,781,762,519,699,260,633,-268,507,-439',
'425,697,261,634,-58,508,-439,426,762,301,495,-503,-503,-503,-503,-503',
'-503,-503,-503,-503,-503,-503,-503,-503,-503,-268,-268,-503,-503,-503',
'-262,602,-268,-268,-268,-503,197,211,-268,-268,100,-268,-503,301,-503',
'99,-503,-503,-503,-503,-503,-503,-503,698,-503,-503,-503,427,-439,427',
'-268,-268,597,-268,-268,-268,-268,-268,-438,-503,-503,670,-78,596,-503',
'-438,887,-262,-269,-86,-269,-503,747,888,-262,-269,762,-269,557,-268',
'-268,-268,-268,-268,-268,-268,-268,-268,-268,-268,-268,-268,-268,-79',
'768,-268,-268,-268,517,605,-87,519,517,-268,-77,521,334,333,337,336',
'-268,-85,-268,769,-268,-268,-268,-268,-268,-268,-268,-268,-268,-439',
'-268,886,-262,-269,-268,-269,-439,811,812,-500,813,94,95,-268,-268,533',
'-80,536,-268,-270,-501,-501,-501,-88,-501,-268,-270,100,-501,-501,337',
'336,99,-501,223,-501,-501,-501,-501,-501,-501,-501,337,336,294,295,-501',
'-501,-501,-501,-501,-501,-501,201,202,-501,-268,772,-439,773,592,536',
'-501,856,776,-501,-501,-501,-501,-501,-501,-501,-501,-501,-501,746,-501',
'-501,-270,-501,-501,-501,223,227,232,233,234,229,231,239,240,235,236',
'489,216,217,200,762,237,238,785,-501,781,762,-501,-501,786,-501,334',
'333,337,336,-501,220,-501,226,-501,222,221,218,219,230,228,224,-501',
'225,201,202,431,-501,-501,-501,-501,-501,-501,430,223,-82,-501,-501',
'223,241,467,-221,-90,490,-501,-501,63,64,65,7,51,-501,-501,391,57,58',
'428,393,392,61,467,59,60,62,23,24,66,67,465,491,738,498,22,28,27,89',
'88,90,91,474,538,17,329,327,326,328,592,6,41,8,9,93,92,83,50,85,84,86',
'87,94,95,223,81,82,801,38,39,37,223,227,232,233,234,229,231,239,240',
'235,236,803,216,217,806,807,237,238,272,36,809,474,30,301,220,52,384',
'-250,222,221,32,220,394,226,40,222,221,218,219,230,228,224,18,225,263',
'558,-249,79,73,75,76,77,78,670,721,505,74,80,382,241,63,64,65,373,51',
'56,370,695,57,58,506,53,54,61,820,59,60,62,254,255,66,67,821,822,263',
'263,253,28,27,89,88,90,91,691,242,215,557,825,334,333,337,336,41,856',
'826,93,92,83,50,85,84,86,87,94,95,655,81,82,223,38,39,37,223,227,232',
'233,234,229,231,239,240,235,236,828,216,217,349,-248,237,238,832,206',
'263,683,210,680,837,52,334,333,337,336,252,220,839,226,40,222,221,218',
'219,230,228,224,214,225,678,301,668,79,73,75,76,77,78,520,523,-499,74',
'80,845,241,301,-221,663,849,257,56,63,64,65,7,51,53,54,850,57,58,301',
'662,661,61,546,59,60,62,23,24,66,67,545,860,-251,595,22,28,27,89,88',
'90,91,293,538,17,329,327,326,328,861,6,41,8,9,93,92,83,50,85,84,86,87',
'94,95,223,81,82,863,38,39,37,223,227,232,233,234,229,231,239,240,235',
'236,530,216,217,292,-248,237,238,-500,36,536,655,30,873,220,52,874,242',
'222,221,32,220,594,226,40,222,221,218,219,230,228,224,18,225,877,510',
'879,79,73,75,76,77,78,880,474,806,74,80,807,241,63,64,65,7,51,56,630',
'533,57,58,647,53,54,61,591,59,60,62,23,24,66,67,590,889,534,196,22,28',
'27,89,88,90,91,645,195,17,102,103,104,105,106,6,41,8,9,93,92,83,50,85',
'84,86,87,94,95,895,81,82,-70,38,39,37,223,227,232,233,234,229,231,239',
'240,235,236,194,216,217,661,193,237,238,644,36,643,584,30,192,905,52',
'806,907,908,536,32,220,242,226,40,222,221,218,219,230,228,224,18,225',
'96,580,635,79,73,75,76,77,78,301,,,74,80,,241,-502,-502,-502,223,-502',
'56,,,-502,-502,,53,54,-502,,-502,-502,-502,-502,-502,-502,-502,,,,,-502',
'-502,-502,-502,-502,-502,-502,,220,-502,,,222,221,218,219,-502,,,-502',
'-502,-502,-502,-502,-502,-502,-502,-502,-502,,-502,-502,,-502,-502,-502',
'223,227,232,233,234,229,231,239,240,235,236,,216,217,,,237,238,,-502',
',,-502,-502,,-502,,,,,-502,220,-502,226,-502,222,221,218,219,230,228',
'224,-502,225,,,,-502,-502,-502,-502,-502,-502,,,,-502,-502,,241,613',
',,,-502,-502,63,64,65,7,51,-502,-502,,57,58,,,,61,,59,60,62,23,24,66',
'67,,,,,22,28,27,89,88,90,91,,,17,102,103,104,105,106,6,41,8,9,93,92',
'83,50,85,84,86,87,94,95,,81,82,,38,39,37,223,227,232,233,234,229,231',
'239,240,235,236,,216,217,,,237,238,,36,,,30,,,52,,,,,32,220,,226,40',
'222,221,218,219,230,228,224,18,225,,,,79,73,75,76,77,78,,,,74,80,,241',
'63,64,65,223,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253',
'284,288,89,88,90,91,,220,215,,,222,221,218,219,41,,,93,92,83,50,85,84',
'86,87,94,95,,81,82,,38,39,37,223,227,232,233,234,229,231,239,240,235',
'236,,216,217,,,237,238,,206,,,210,,,52,,,,,621,220,250,226,40,222,221',
'218,219,230,228,224,214,225,,,,79,73,75,76,77,78,,,,74,80,,241,63,64',
'65,7,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88',
'90,91,,,17,,,,,,6,41,8,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39',
'37,223,227,232,233,234,229,231,239,240,235,236,,216,217,,,237,238,,36',
',,30,,,52,,,,,32,220,,226,40,222,221,218,219,230,228,224,18,225,,,,79',
'73,75,76,77,78,,,,74,80,,241,63,64,65,,51,56,,,57,58,,53,54,61,,59,60',
'62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,83,50',
'85,84,86,87,94,95,,81,82,,38,39,37,223,227,232,233,234,229,231,239,240',
'235,236,,216,217,,,237,238,,206,,,210,211,,52,,,,,,220,,226,40,222,221',
'218,219,230,228,224,18,225,,,,79,73,75,76,77,78,,,,74,80,,241,63,64',
'65,,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88',
'90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37',
'223,227,232,233,234,229,231,239,240,235,236,,216,217,,,237,238,,206',
',,210,,,52,,,,,,220,,226,40,222,221,218,219,230,228,224,214,225,,,,79',
'73,75,76,77,78,,,,74,80,,241,63,64,65,7,51,56,,,57,58,,53,54,61,,59',
'60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,6,41,8,9,93,92',
'83,50,85,84,86,87,94,95,,81,82,,38,39,37,223,227,232,233,234,229,231',
'239,240,235,236,,216,217,,,237,238,,36,,,30,,,52,,,,,32,220,,226,40',
'222,221,218,219,230,228,224,18,225,,,,79,73,75,76,77,78,,,,74,80,,241',
'63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253,284',
'288,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82',
',38,39,37,223,227,232,233,234,229,231,239,240,235,236,,216,217,,,237',
'238,,206,,,210,,,52,,,,,621,220,,226,40,222,221,218,219,230,228,224',
'214,225,,,,79,73,75,76,77,78,,,,74,80,,241,63,64,65,,51,56,,,57,58,',
'53,54,61,,59,60,62,254,255,66,67,,,,,253,28,27,89,88,90,91,,,215,,,',
',,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,223,227,232,233',
'234,229,231,239,240,235,236,,216,217,,,237,238,,206,,,210,,538,52,329',
'327,326,328,252,220,250,226,40,222,221,218,219,230,228,224,214,225,',
',,79,73,75,76,77,78,,,,74,80,,241,,541,,,257,56,63,64,65,544,51,53,54',
',57,58,,,,61,,59,60,62,254,255,66,67,,,,,253,28,27,89,88,90,91,,,215',
',,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,223,227,232',
'233,234,229,231,239,240,235,236,,216,217,,,237,238,,206,,,210,,538,52',
'329,327,326,328,252,220,250,226,40,222,221,218,219,230,228,224,214,225',
',,,79,73,75,76,77,78,,,,74,80,,241,,541,,,257,56,63,64,65,544,51,53',
'54,,57,58,,,,61,,59,60,62,254,255,66,67,,,,,253,28,27,89,88,90,91,,',
'215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,223,227',
'232,233,234,229,231,239,240,235,236,,216,217,,,237,238,,206,,,210,,538',
'52,329,327,326,328,252,220,250,226,40,222,221,218,219,230,228,224,214',
'225,,,,79,73,75,76,77,78,,,,74,80,,241,,541,,,257,56,63,64,65,778,51',
'53,54,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,',
'17,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,223,227',
'232,233,234,229,231,239,240,235,236,,216,217,,,237,238,,206,,,210,,',
'52,,,,,,220,,226,40,222,221,218,219,230,228,224,18,225,,,,79,73,75,76',
'77,78,,,,74,80,,241,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254',
'255,66,67,,,,,253,284,288,89,88,90,91,,,215,,,,,,,285,,,93,92,83,50',
'85,84,86,87,94,95,,81,82,223,,,289,,,,,,,,,,,,,237,238,,,,,,868,,,210',
',,52,,220,-366,,,222,221,218,219,-366,-366,-366,,,-366,-366,-366,223',
'-366,,,79,73,75,76,77,78,-366,-366,-366,74,80,,237,238,,,-366,-366,56',
'-366,-366,-366,-366,-366,53,54,,220,,226,,222,221,218,219,,,224,,225',
',,,,,-366,-366,-366,-366,-366,-366,-366,-366,-366,-366,-366,-366,-366',
'-366,,,-366,-366,-366,,,-366,,263,-366,,,-366,,-366,,-366,,-366,,-366',
'-366,-366,-366,-366,-366,-366,,-366,-366,-366,,713,,329,327,326,328',
',,,,,-366,-366,-366,-366,,-366,-276,,,,,,-366,-276,-276,-276,,,-276',
'-276,-276,,-276,223,,,331,707,,,,,-276,-276,334,333,337,336,,237,238',
'-276,-276,,-276,-276,-276,-276,-276,,,,,,220,,226,,222,221,218,219,',
',224,,225,,,,-276,-276,-276,-276,-276,-276,-276,-276,-276,-276,-276',
'-276,-276,-276,,,-276,-276,-276,,,-276,,272,-276,,,-276,,-276,,-276',
',-276,,-276,-276,-276,-276,-276,-276,-276,,-276,,-276,,,,,,,,,,,,,-276',
'-276,-276,-276,,-276,63,64,65,7,51,,-276,,57,58,,,,61,,59,60,62,23,24',
'66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,6,41,8,9,93,92,83,50,85,84',
'86,87,94,95,,81,82,,38,39,37,223,-521,-521,-521,-521,229,231,,,-521',
'-521,,,,,,237,238,,36,,,274,,,52,,,,,32,220,,226,40,222,221,218,219',
'230,228,224,18,225,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,',
',57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253,284,288,89,88,90,91',
',,215,,,,,,,285,,,93,92,83,50,85,84,86,87,94,95,,81,82,223,,321,289',
'329,327,326,328,,,,,,,,,237,238,,,,,,282,,,279,,,52,,220,,226,278,222',
'221,218,219,331,,713,,329,327,326,328,334,333,337,336,79,73,75,76,77',
'78,,740,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,331,59,60,62,254',
'255,66,67,334,333,337,336,253,284,288,89,88,90,91,,,215,,,,,,,285,,',
'93,92,83,50,85,84,86,87,94,95,,81,82,223,,321,289,329,327,326,328,,',
',,,,,,237,238,,,,,,282,,,210,,,52,,220,,226,,222,221,218,219,331,316',
'224,,225,,,,334,333,337,336,79,73,75,76,77,78,,,,74,80,,,,291,,,,56',
'63,64,65,,51,53,54,,57,58,,,,61,,59,60,62,254,255,66,67,,,,,253,28,27',
'89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38',
'39,37,223,-521,-521,-521,-521,229,231,,,-521,-521,,,,,,237,238,,206',
',,210,,,52,,,,,252,220,,226,40,222,221,218,219,230,228,224,214,225,',
',,79,73,75,76,77,78,,,,74,80,,,,,,,257,56,63,64,65,7,51,53,54,,57,58',
',,,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,6,41',
'8,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,223,-521,-521,-521',
'-521,229,231,,,-521,-521,,,,,,237,238,,36,,,30,,,52,,,,,32,220,,226',
'40,222,221,218,219,230,228,224,18,225,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253',
'284,288,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,223,227,232,233,234,229,231,239,240,235,236,,-521,-521',
',,237,238,,206,,,210,,,52,,,,,,220,,226,40,222,221,218,219,230,228,224',
'214,225,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53',
'54,61,,59,60,62,254,255,66,67,,,,,253,284,288,89,88,90,91,,,215,,,,',
',,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,223,-521,-521',
'-521,-521,229,231,,,-521,-521,,,,,,237,238,,206,,,210,,,52,,,,,,220',
',226,40,222,221,218,219,230,228,224,214,225,,,,79,73,75,76,77,78,,,',
'74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,',
',,253,284,288,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94',
'95,,81,82,,38,39,37,223,,,,,,,,,,,,,,,,237,238,,206,,,210,,,52,,,,,',
'220,,226,40,222,221,218,219,,,224,214,225,,,,79,73,75,76,77,78,,,,74',
'80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253',
'284,288,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,223,227,232,233,234,229,231,239,240,235,236,,-521,-521',
',,237,238,,206,,,210,,,52,,,,,,220,,226,40,222,221,218,219,230,228,224',
'214,225,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53',
'54,61,,59,60,62,254,255,66,67,,,,,253,284,288,89,88,90,91,,,215,,,,',
',,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,223,227,232,233',
'234,229,231,,,235,236,,,,,,237,238,,206,,,210,,,52,,,,,,220,,226,40',
'222,221,218,219,230,228,224,214,225,,,,79,73,75,76,77,78,,,,74,80,,',
'63,64,65,7,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27',
'89,88,90,91,,,17,,,,,,6,41,8,9,93,92,83,50,85,84,86,87,94,95,,81,82',
',38,39,37,223,227,232,233,234,229,231,239,,235,236,,,,,,237,238,,36',
',,30,,,52,,,,,32,220,,226,40,222,221,218,219,230,228,224,18,225,,,,79',
'73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62',
'254,255,66,67,,,,,253,284,288,89,88,90,91,,,215,,,,,,,285,,,93,92,83',
'50,85,84,559,87,94,95,,81,82,223,,,289,,,,,,,,,,,,,237,238,,,,,,560',
',,210,,,52,,220,-263,226,,222,221,218,219,-263,-263,-263,,,-263,-263',
'-263,,-263,,,79,73,75,76,77,78,,-263,-263,74,80,,,,,,-263,-263,56,-263',
'-263,-263,-263,-263,53,54,,,,,,,,,,,,,,,,,,,,-263,-263,-263,-263,-263',
'-263,-263,-263,-263,-263,-263,-263,-263,-263,,,-263,-263,-263,,,-263',
',,-263,,,-263,,-263,,-263,,-263,,-263,-263,-263,-263,-263,-263,-263',
',-263,,-263,,,321,,329,327,326,328,,,,,-263,-263,-263,-263,,-263,,,-263',
'-263,,,-263,63,64,65,,51,,,,57,58,,,,61,331,59,60,62,23,24,66,67,334',
'333,337,336,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,83,50,85,84,86',
'87,94,95,,81,82,,38,39,37,223,-521,-521,-521,-521,229,231,,,-521,-521',
',,,,,237,238,,206,,,210,,,52,,,,,,220,,226,40,222,221,218,219,230,228',
'224,18,225,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,',
'53,54,61,,59,60,62,254,255,66,67,,,,,253,28,27,89,88,90,91,,,215,,,',
',,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,223,-521,-521',
'-521,-521,229,231,,,-521,-521,,,,,,237,238,,206,,,210,,,52,,,,,252,220',
',226,40,222,221,218,219,230,228,224,214,225,,,,79,73,75,76,77,78,,,',
'74,80,,,,,,,257,56,63,64,65,,51,53,54,,57,58,,,,61,,59,60,62,254,255',
'66,67,,,,,253,284,288,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84',
'86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,252',
',,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,257,56,63,64,65',
'7,51,53,54,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90',
'91,,,17,,,,,,6,41,8,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37',
',,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75',
'76,77,78,,,,74,80,,,63,64,65,7,51,56,,,57,58,,53,54,61,,59,60,62,23',
'24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,6,41,8,9,93,92,83,50,85',
'84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,',
'32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56',
',,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17',
',,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,',
',,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,',
',,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,',
',,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95',
',81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,',
',18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93',
'92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,',
',210,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,100,,63',
'64,65,99,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253,284',
'288,89,88,90,91,,,215,,,,,,,285,,,93,92,83,50,85,84,86,87,94,95,,81',
'82,,,713,289,329,327,326,328,,,,,,,,,,,,,,,,282,,,30,,,52,,,,,32,,,',
',331,,,,,,,,334,333,337,336,79,73,75,76,77,78,,,,74,80,,,63,64,65,7',
'51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90',
'91,,,17,,,,,,6,41,8,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37',
',,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75',
'76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254',
'255,66,67,,,,,253,284,288,89,88,90,91,,,215,,,,,,,285,,,93,92,83,50',
'85,84,559,87,94,95,,81,82,,,713,289,329,327,326,328,,,,,,,,,,,,,,,,560',
',,210,,,52,,,,,,,,,,331,707,,,,,,,334,333,337,336,79,73,75,76,77,78',
',,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67',
',,,,253,284,288,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87',
'94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,252,,,',
'40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57',
'58,,53,54,61,,59,60,62,254,255,66,67,,,,,253,284,288,89,88,90,91,,,215',
',,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,',
',,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78',
',,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67',
',,,,253,284,288,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87',
'94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40',
',,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58',
',53,54,61,,59,60,62,254,255,66,67,,,,,253,284,288,89,88,90,91,,,215',
',,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,',
',,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78',
',,,74,80,,,-496,-496,-496,,-496,56,,,-496,-496,,53,54,-496,,-496,-496',
'-496,-496,-496,-496,-496,,-496,,,-496,-496,-496,-496,-496,-496,-496',
',,-496,,,,,,,-496,,,-496,-496,-496,-496,-496,-496,-496,-496,-496,-496',
',-496,-496,,-496,-496,-496,,,,,,,,,,,,,,,,,,,,-496,,,-496,-496,,-496',
',,,,-496,,-496,,-496,,,,,,,,-496,,-496,,,-496,-496,-496,-496,-496,-496',
',,,-496,-496,,,,,,,-496,-496,-497,-497,-497,,-497,-496,-496,,-497,-497',
',,,-497,,-497,-497,-497,-497,-497,-497,-497,,-497,,,-497,-497,-497,-497',
'-497,-497,-497,,,-497,,,,,,,-497,,,-497,-497,-497,-497,-497,-497,-497',
'-497,-497,-497,,-497,-497,,-497,-497,-497,,,,,,,,,,,,,,,,,,,,-497,,',
'-497,-497,,-497,,,,,-497,,-497,,-497,,,,,,,,-497,,-497,,,-497,-497,-497',
'-497,-497,-497,,,,-497,-497,,,,,,,-497,-497,63,64,65,,51,-497,-497,',
'57,58,,,,61,,59,60,62,254,255,66,67,,,,,253,284,288,89,88,90,91,,,215',
',,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,',
',,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78',
',,,74,80,,,63,64,65,7,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67',
',,,,22,28,27,89,88,90,91,,,17,,,,,,6,41,8,9,93,92,83,50,85,84,86,87',
'94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40',
',,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,384,51,56,,,57,58',
',53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,',
'41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,',
',,,206,,,210,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28',
'27,89,88,90,91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82',
',38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,18,,,',
',79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59',
'60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,83',
'50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,',
',52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,',
'51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90',
'91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,',
',,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76',
'77,78,,,,74,80,,,63,64,65,7,51,56,,,57,58,,53,54,61,,59,60,62,23,24',
'66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,6,41,8,9,93,92,83,50,85,84',
'86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32',
',,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57',
'58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,215,,',
',,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,',
',,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,',
',74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,',
',22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95',
',81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,',
',18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,254,255,66,67,,,,,253,284,288,89,88,90,91,,,215,,,,,,,41',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,',
'206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,7,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28',
'27,89,88,90,91,,,17,,,,,,6,41,8,9,93,92,83,50,85,84,86,87,94,95,,81',
'82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18',
',,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,7,51,56,,,57,58,,53,54,61',
',59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,6,41,8,9,93',
'92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,',
'30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64',
'65,,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88',
'90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37',
',,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,401,,,,40,,,,,,,,214,,,,,79,73',
'75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,23',
'24,66,67,,,,,22,28,27,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84',
'86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,401',
',,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,',
'57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,215',
',,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,',
',,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78',
',,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67',
',,,,253,28,27,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94',
'95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,252,,,,40',
',,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,257,56,63,64,65,7,51',
'53,54,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,',
'17,,,,,,6,41,8,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,',
',,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77',
'78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66',
'67,,,,,253,284,288,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86',
'87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,',
'40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57',
'58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,215,,',
',,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,',
',,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,',
',74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,',
',22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95',
',81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,',
',18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93',
'92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,',
',210,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64',
'65,7,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88',
'90,91,,,17,,,,,,6,41,8,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39',
'37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73',
'75,76,77,78,,,,74,80,,,63,64,65,7,51,56,,,57,58,,53,54,61,,59,60,62',
'23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,6,41,8,9,93,92,83,50',
'85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,',
',,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51',
'56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91',
',,17,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,',
',,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77',
'78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66',
'67,,,,,253,28,27,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87',
'94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,252,,,',
'40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,257,56,63,64,65,',
'51,53,54,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91',
',,17,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,',
',,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77',
'78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66',
'67,,,,,253,284,288,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86',
'87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,252',
',,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,7,51,56,',
',57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17',
',,,,,6,41,8,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,',
',,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78',
',,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,',
',,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95',
',81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,433,52,,,,,,,,,40,,,',
',,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53',
'54,61,,59,60,62,254,255,66,67,,,,,253,284,288,89,88,90,91,,,215,,,,',
',,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,',
',,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74',
'80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253',
'284,288,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,401,,,,40,,,,',
',,,214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53',
'54,61,,59,60,62,254,255,66,67,,,,,253,284,288,89,88,90,91,,,215,,,,',
',,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,',
',,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74',
'80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253',
'284,288,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,',
'214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,254,255,66,67,,,,,253,284,288,89,88,90,91,,,215,,,,,,,41',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,',
'206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253',
'284,288,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,',
'214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,254,255,66,67,,,,,253,284,288,89,88,90,91,,,215,,,,,,,41',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,',
'206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253',
'284,288,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,',
'214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,254,255,66,67,,,,,253,284,288,89,88,90,91,,,215,,,,,,,41',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,',
'206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253',
'284,288,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,',
'214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,254,255,66,67,,,,,253,284,288,89,88,90,91,,,215,,,,,,,41',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,',
'206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253',
'284,288,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,',
'214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,254,255,66,67,,,,,253,284,288,89,88,90,91,,,215,,,,,,,41',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,',
'206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253',
'284,288,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,',
'214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,254,255,66,67,,,,,253,284,288,89,88,90,91,,,215,,,,,,,41',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,',
'206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253',
'284,288,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,',
'214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,254,255,66,67,,,,,253,284,288,89,88,90,91,,,215,,,,,,,41',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,',
'206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253',
'284,288,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,',
'214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,254,255,66,67,,,,,253,284,288,89,88,90,91,,,215,,,,,,,41',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,',
'206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253',
'284,288,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,',
'214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,254,255,66,67,,,,,253,284,288,89,88,90,91,,,215,,,,,,,41',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,',
'206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253',
'284,288,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,',
'214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,254,255,66,67,,,,,253,284,288,89,88,90,91,,,215,,,,,,,41',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,',
'206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253',
'284,288,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,',
'214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,254,255,66,67,,,,,253,284,288,89,88,90,91,,,215,,,,,,,41',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,',
'206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253',
'284,288,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,',
'214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,254,255,66,67,,,,,253,284,288,89,88,90,91,,,215,,,,,,,41',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,',
'206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253',
'284,288,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,',
'214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,254,255,66,67,,,,,253,284,288,89,88,90,91,,,215,,,,,,,285',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,,321,289,329,327,326,328,,,',
',,,,,,,,,,,,282,,,279,,,52,,,,,,,,,,331,,529,,,,,,334,333,337,336,79',
'73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62',
'254,255,66,67,,,,,253,284,288,89,88,90,91,,,215,,,,,,,41,,,93,92,83',
'50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,',
',52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65',
',51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253,284,288,89',
'88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39',
'37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,621,,250,,40,,,,,,,,214,,,',
',79,73,75,76,77,78,,,,74,80,,,,,,,257,56,63,64,65,,51,53,54,,57,58,',
',,61,,59,60,62,254,255,66,67,,,,,253,284,288,89,88,90,91,,,215,,,,,',
',41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,',
',,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74',
'80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22',
'28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81',
'82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,18',
',,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,',
'59,60,62,254,255,66,67,,,,,253,284,288,89,88,90,91,,,215,,,,,,,41,,',
'93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206',
',,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,,,63',
'64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253,284,288',
'89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38',
'39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79',
'73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62',
'254,255,66,67,,,,,253,284,288,89,88,90,91,,,215,,,,,,,285,,,93,92,83',
'50,85,84,86,87,94,95,,81,82,,,,289,,,,,,,,,,,,,,,,,,,,282,,,279,,,52',
',,,,,,,,,,,,,,,,,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,7,51,56,',
',57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17',
',,,,,6,41,8,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,',
',,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78',
',,,74,80,,,63,64,65,7,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67',
',,,,22,28,27,89,88,90,91,,,17,,,,,,6,41,8,9,93,92,83,50,85,84,86,87',
'94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40',
',,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,',
'53,54,61,,59,60,62,254,255,66,67,,,,,253,28,27,89,88,90,91,,,215,,,',
',,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,',
',,,,,,206,,,210,,,52,,,,,252,,250,,40,,,,,,,,214,,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,257,56,63,64,65,,51,53,54,,57,58,,,,61,,59,60,62,254',
'255,66,67,,,,,253,28,27,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85',
'84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,483,',
',,,252,,250,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,257',
'56,63,64,65,,51,53,54,,57,58,,,,61,,59,60,62,254,255,66,67,,,,,253,28',
'27,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82',
',38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,487,52,,,,,252,,250,,40,,,,',
',,,214,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,257,56,63,64,65,,51,53,54',
',57,58,,,,61,,59,60,62,254,255,66,67,,,,,253,28,27,89,88,90,91,,,215',
',,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,',
',,,,,,,,,206,,,210,,,52,,,,,621,,250,,40,,,,,,,,214,,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,257,56,63,64,65,7,51,53,54,,57,58,,,,61,,59,60',
'62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,6,41,8,9,93,92,83',
'50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,274,,',
'52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65',
'7,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90',
'91,,,17,,,,,,6,41,8,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37',
',,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75',
'76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254',
'255,66,67,,,,,253,284,288,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85',
'84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,',
',,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,7,51,56',
',,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17',
',,,,,6,41,8,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,',
',,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78',
',,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67',
',,,,253,284,288,89,88,90,91,,,215,,,,,,,285,,,93,92,83,50,85,84,86,87',
'94,95,,81,82,,,,289,,,,,,,,,,,,,,,,,,,,282,,,210,,,52,,,,,,,,,,,,,,',
',,,,,,,79,73,75,76,77,78,,,,74,80,,,,493,,,,56,63,64,65,7,51,53,54,',
'57,58,,,,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,',
',6,41,8,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,',
',,,,,,,,36,,,274,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,',
',,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67',
',,,,253,284,288,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87',
'94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40',
',,,,,,,214,,,,,79,73,75,76,77,78,,-268,,74,80,,,,-268,-268,-268,,56',
'-268,-268,-268,,-268,53,54,,,,,,,,-268,-268,,,,,,,,-268,-268,,-268,-268',
'-268,-268,-268,,,,,,,,,,,,,,,,,,,,,,-268,-268,-268,-268,-268,-268,-268',
'-268,-268,-268,-268,-268,-268,-268,,,-268,-268,-268,,605,-268,,,-268',
',,-268,,-268,,-268,,-268,,-268,-268,-268,-268,-268,-268,-268,,-268,',
'-268,,,,,,,,,,,,,-268,-268,-268,-268,,-268,-503,,,,-88,,-268,-503,-503',
'-503,,,-503,-503,-503,,-503,,,,,,,,,-503,-503,-503,,,,,,,,-503,-503',
',-503,-503,-503,-503,-503,,,,,,,,,,,,,,,,,,,,,,-503,-503,-503,-503,-503',
'-503,-503,-503,-503,-503,-503,-503,-503,-503,,,-503,-503,-503,,737,-503',
',,-503,,,-503,,-503,,-503,,-503,,-503,-503,-503,-503,-503,-503,-503',
',-503,-503,-503,,,,,,,,,,,,,-503,-503,-503,-503,,-503,,63,64,65,-86',
'51,-503,,,57,58,,,,61,,59,60,62,254,255,66,67,,,,,253,284,288,89,88',
'90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37',
',,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75',
'76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,23,24',
'66,67,,,,,22,28,27,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86',
'87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,',
'40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57',
'58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,215,,',
',,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,',
',,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,',
',74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,',
',22,28,27,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95',
',81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,',
',214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,254,255,66,67,,,,,253,284,288,89,88,90,91,,,215,,,,,,,41',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,',
'206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253',
'284,288,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,',
'214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,254,255,66,67,,,,,253,284,288,89,88,90,91,,,215,,,,,,,285',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,,,289,,,,,,,,,,,,,,,,,,,,282',
',,279,,,52,,,,,,,,,,,,,,,,,,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65',
',51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90',
'91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,',
',,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76',
'77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66',
'67,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87',
'94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40',
',,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,',
'53,54,61,,59,60,62,254,255,66,67,,,,,253,284,288,89,88,90,91,,,215,',
',,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,',
',,,,,,,,206,,,210,,,52,,,,,,,250,,40,,,,,,,,214,,,,,79,73,75,76,77,78',
',,,74,80,,,,,,,257,56,63,64,65,7,51,53,54,,57,58,,,,61,,59,60,62,23',
'24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,6,41,8,9,93,92,83,50,85',
'84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,',
'32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,7,51,56',
',,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17',
',,,,,6,41,8,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,',
',,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78',
',,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67',
',,,,253,284,288,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87',
'94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,510,,52,,,,,,,,',
'40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,7,51,56,,,57',
'58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,',
',,6,41,8,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,',
',,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,',
',,74,80,,,63,64,65,7,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,',
',,,22,28,27,89,88,90,91,,,17,,,,,,6,41,8,9,93,92,83,50,85,84,86,87,94',
'95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,',
',,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53',
'54,61,,59,60,62,254,255,66,67,,,,,253,284,288,89,88,90,91,,,215,,,,',
',,285,,,93,92,83,50,85,84,86,87,94,95,,81,82,,,,289,,,,,,,,,,,,,,,,',
',,,674,,,210,,,52,,,,,,,,,,,,,,,,,,,,,,79,73,75,76,77,78,,,,74,80,,',
'63,64,65,7,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27',
'89,88,90,91,,,17,,,,,,6,41,8,9,93,92,83,50,85,84,86,87,94,95,,81,82',
',38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,',
',79,73,75,76,77,78,,,,74,80,,,63,64,65,7,51,56,,,57,58,,53,54,61,,59',
'60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,6,41,8,9,93,92',
'83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30',
',,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65',
',51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253,284,288,89',
'88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39',
'37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,621,,,,40,,,,,,,,214,,,,,79',
'73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62',
'254,255,66,67,,,,,253,284,288,89,88,90,91,,,215,,,,,,,41,,,93,92,83',
'50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,',
',52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,257,56',
'63,64,65,,51,53,54,,57,58,,,,61,,59,60,62,254,255,66,67,,,,,253,284',
'288,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82',
',38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,621,,,,40,,,,,,,,214',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,,257,56,63,64,65,,51,53,54,,57,58',
',,,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,',
',93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206',
',,210,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63',
'64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253,284,288',
'89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38',
'39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79',
'73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62',
'254,255,66,67,,,,,253,284,288,89,88,90,91,,,215,,,,,,,41,,,93,92,83',
'50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,',
',52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65',
',51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253,284,288,89',
'88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39',
'37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73',
'75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254',
'255,66,67,,,,,253,28,27,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85',
'84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,',
',,252,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,257,56,63',
'64,65,,51,53,54,,57,58,,,,61,,59,60,62,254,255,66,67,,,,,253,284,288',
'89,88,90,91,,,215,,,,,,,285,,,93,92,83,50,85,84,86,87,94,95,,81,82,',
',,289,,,,,,,,,,,,,,,,,,,,282,,,279,,,52,,,,,,,,,,,,,,,,,,,,,,79,73,75',
'76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,23,24',
'66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,83,50,85,84,86',
'87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,639,52,,,,,',
',250,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56',
',,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253,284,288,89,88,90,91',
',,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,',
',,,,,,,,,,,,,,,206,,,210,,,52,,,,,724,,,,40,,,,,,,,214,,,,,79,73,75',
'76,77,78,,-519,,74,80,,,,-519,-519,-519,,56,-519,-519,-519,,-519,53',
'54,,,,,,,,-519,,,,,,,,,-519,-519,,-519,-519,-519,-519,-519,,,,,,,,,',
',,-519,,,,,,,-519,-519,-519,,,-519,-519,-519,,-519,,,,,-519,,,,,-519',
',-519,,,,,263,-519,-519,-519,,-519,-519,-519,-519,-519,,,,,,,,,,,,,-519',
',,,,,,,,,,,,-519,,-519,,,-519,,-519,,,,,,,-519,,,,,263,-519,,,,,,,,',
',,,,,,,,,,,,-519,,,,,,,,,,,,,-519,,-519,,,-519,153,164,154,177,150,170',
'160,159,185,188,175,158,157,152,178,186,187,162,151,165,169,171,163',
'156,,,172,179,174,173,166,176,161,149,168,167,180,181,182,183,184,148',
'155,146,147,144,145,109,111,,,110,,,,,,,,137,138,,135,119,120,121,143',
'124,126,,,122,,,,,139,140,127,128,,,,,,,,,,,,,132,131,,118,136,134,133',
'129,130,125,123,116,142,117,,,141,189,,,,,,,,,,80,153,164,154,177,150',
'170,160,159,185,188,175,158,157,152,178,186,187,162,151,165,169,171',
'163,156,,,172,179,174,173,166,176,161,149,168,167,180,181,182,183,184',
'148,155,146,147,144,145,109,111,,,110,,,,,,,,137,138,,135,119,120,121',
'143,124,126,,,122,,,,,139,140,127,128,,,,,,,,,,,,,132,131,,118,136,134',
'133,129,130,125,123,116,142,117,,,141,189,,,,,,,,,,80,153,164,154,177',
'150,170,160,159,185,188,175,158,157,152,178,186,187,162,151,165,169',
'171,163,156,,,172,179,174,173,166,176,161,149,168,167,180,181,182,183',
'184,148,155,146,147,144,145,109,111,108,,110,,,,,,,,137,138,,135,119',
'120,121,143,124,126,,,122,,,,,139,140,127,128,,,,,,,,,,,,,132,131,,118',
'136,134,133,129,130,125,123,116,142,117,,,141,189,,,,,,,,,,80,153,164',
'154,177,150,170,160,159,185,188,175,158,157,152,178,186,187,162,151',
'165,169,171,163,156,,,172,179,174,173,166,176,161,149,168,167,180,181',
'182,183,184,148,155,146,147,144,145,109,111,,,110,,,,,,,,137,138,,135',
'119,120,121,143,124,126,,,122,,,,,139,140,127,128,,,,,,,,,,,,,132,131',
',118,136,134,133,129,130,125,123,116,142,117,,,141,189,,,,,,,,,,80,153',
'164,154,177,150,170,160,159,185,188,175,158,157,152,178,186,187,162',
'151,165,169,171,163,156,,,172,179,174,173,166,176,161,149,168,167,180',
'181,182,183,184,148,155,146,147,144,145,109,111,380,379,110,381,,,,',
',,137,138,,135,119,120,121,143,124,126,,,122,,,,,139,140,127,128,,,',
',,,,,,,,,132,131,,118,136,134,133,129,130,125,123,116,142,117,,,141',
'153,164,154,177,150,170,160,159,185,188,175,158,157,152,178,186,187',
'162,151,165,169,171,163,156,,,172,179,174,173,166,176,161,149,168,167',
'180,181,182,183,184,148,155,146,147,144,145,109,111,,,110,,,,,,,,137',
'138,,135,119,120,121,143,124,126,,,122,,,,,139,140,127,128,,,,,,,,,',
',,,132,131,,118,136,134,133,129,130,125,123,116,142,117,,,141,153,164',
'154,177,150,170,160,159,185,188,175,158,157,152,178,186,187,162,151',
'165,169,171,163,156,,,172,179,174,357,356,358,355,149,168,167,180,181',
'182,183,184,148,155,146,147,353,354,351,111,85,84,352,87,,,,,,,137,138',
',135,119,120,121,143,124,126,,,122,,,,,139,140,127,128,,,,,,363,,,,',
',,132,131,,118,136,134,133,129,130,125,123,116,142,117,,,141,153,164',
'154,177,150,170,160,159,185,188,175,158,157,152,178,186,187,162,151',
'165,169,171,163,156,,,172,179,174,173,166,176,161,149,168,167,180,181',
'182,183,184,148,155,146,147,144,145,109,111,380,379,110,381,,,,,,,137',
'138,,135,119,120,121,143,124,126,,,122,,,,,139,140,127,128,,,,,,,,,',
',,,132,131,,118,136,134,133,129,130,125,123,116,142,117,471,413,141',
',472,,,,,,,,137,138,,135,119,120,121,143,124,126,,,122,,,,,139,140,127',
'128,,,,,,,,,,,,,132,131,,118,136,134,133,129,130,125,123,116,142,117',
'608,419,141,,609,,,,,,,,137,138,,135,119,120,121,143,124,126,,,122,',
',,,139,140,127,128,,,,,,,,,,,,,132,131,,118,136,134,133,129,130,125',
'123,116,142,117,415,419,141,,417,,,,,,,,137,138,,135,119,120,121,143',
'124,126,,,122,,,,,139,140,127,128,,,,,,,,,,,,,132,131,,118,136,134,133',
'129,130,125,123,116,142,117,606,413,141,,607,,,,,,,,137,138,,135,119',
'120,121,143,124,126,,,122,,,,,139,140,127,128,,,,,,263,,,,,,,132,131',
',118,136,134,133,129,130,125,123,116,142,117,471,413,141,,472,,,,,,',
',137,138,,135,119,120,121,143,124,126,,,122,,,,,139,140,127,128,,,,',
',,,,,,,,132,131,,118,136,134,133,129,130,125,123,116,142,117,791,419',
'141,,834,,,,,,,,137,138,,135,119,120,121,143,124,126,,,122,,,,,139,140',
'127,128,,,,,,,,,,,,,132,131,,118,136,134,133,129,130,125,123,116,142',
'117,900,413,141,,901,,,,,,,,137,138,,135,119,120,121,143,124,126,,,122',
',,,,139,140,127,128,,,,,,263,,,,,,,132,131,,118,136,134,133,129,130',
'125,123,116,142,117,471,413,141,,472,,,,,,,,137,138,,135,119,120,121',
'143,124,126,,,122,,,,,139,140,127,128,,,,,,,,,,,,,132,131,,118,136,134',
'133,129,130,125,123,116,142,117,471,413,141,,472,,,,,,,,137,138,,135',
'119,120,121,143,124,126,,,122,,,,,139,140,127,128,,,,,,,,,,,,,132,131',
',118,136,134,133,129,130,125,123,116,142,117,606,413,141,,607,,,,,,',
',137,138,,135,119,120,121,143,124,126,,,122,,,,,139,140,127,128,,,,',
',263,,,,,,,132,131,,118,136,134,133,129,130,125,123,116,142,117,608',
'419,141,,609,,,,,,,,137,138,,135,119,120,121,143,124,126,,,122,,,,,139',
'140,127,128,,,,,,,,,,,,,132,131,,118,136,134,133,129,130,125,123,116',
'142,117,791,419,141,,789,,,,,,,,137,138,,135,119,120,121,143,124,126',
',,122,,,,,139,140,127,128,,,,,,,,,,,,,132,131,,118,136,134,133,129,130',
'125,123,116,142,117,649,413,141,,650,,,,,,,,137,138,,135,119,120,121',
'143,124,126,,,122,,,,,139,140,127,128,,,,,,263,,,,,,,132,131,,118,136',
'134,133,129,130,125,123,116,142,117,471,413,141,,472,,,,,,,,137,138',
',135,119,120,121,143,124,126,,,122,,,,,139,140,127,128,,,,,,263,,,,',
',,132,131,,118,136,134,133,129,130,125,123,116,142,117,902,419,141,',
'903,,,,,,,,137,138,,135,119,120,121,143,124,126,,,122,,,,,139,140,127',
'128,,,,,,,,,,,,,132,131,,118,136,134,133,129,130,125,123,116,142,117',
'409,413,141,,410,,,,,,,,137,138,,135,119,120,121,143,124,126,,,122,',
',,,139,140,127,128,,,,,,263,,,,,,,132,131,,118,136,134,133,129,130,125',
'123,116,142,117,652,419,141,,653,,,,,,,,137,138,,135,119,120,121,143',
'124,126,,,122,,,,,139,140,127,128,,,,,,,,,,,,,132,131,,118,136,134,133',
'129,130,125,123,116,142,117,,,141' ]
        racc_action_table = arr = ::Array.new(22178, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'0,0,0,0,0,872,365,552,0,0,704,704,853,0,374,0,0,0,0,0,0,0,474,559,26',
'460,0,0,0,0,0,0,0,369,564,0,369,646,571,571,207,0,0,0,0,0,0,0,0,0,0',
'0,0,0,0,474,0,0,460,0,0,0,55,644,71,788,365,365,365,303,303,351,71,559',
'341,901,374,345,351,345,559,0,340,902,0,559,26,0,207,787,648,360,0,369',
'369,831,0,704,360,428,644,900,704,552,0,552,559,26,552,0,0,0,0,0,0,872',
'650,872,0,0,872,358,401,401,401,571,401,0,358,553,401,401,559,0,0,401',
'564,401,401,401,401,401,401,401,485,55,286,428,401,401,401,401,401,401',
'401,564,303,401,902,649,564,788,664,788,401,664,788,401,401,401,401',
'401,401,401,401,401,401,485,401,401,650,401,401,401,341,901,341,901',
'251,341,901,738,340,902,340,902,205,340,902,787,248,787,787,401,787',
'831,401,831,286,401,831,900,695,900,606,357,900,650,401,695,652,582',
'357,649,650,553,401,553,484,286,553,401,401,401,401,401,401,376,411',
'738,401,401,659,659,205,411,411,411,595,401,411,411,411,293,411,401',
'401,315,315,354,649,484,606,411,411,411,354,649,673,432,432,695,651',
'411,411,673,411,411,411,411,411,582,582,652,652,757,607,247,367,595',
'582,371,757,355,293,659,595,376,376,376,355,293,411,411,411,411,411',
'411,411,411,411,411,411,411,411,411,640,42,411,411,411,652,432,411,42',
'411,411,673,652,411,35,411,654,411,607,411,637,411,411,411,411,411,411',
'411,757,411,411,411,367,367,367,371,371,371,708,306,441,653,306,708',
'411,411,411,411,653,411,415,289,289,653,281,35,411,415,415,415,42,281',
'35,415,415,478,415,657,3,356,789,352,478,3,283,415,356,789,352,344,13',
'283,789,658,344,415,415,13,415,415,415,415,415,307,682,682,307,562,25',
'750,653,296,866,204,562,25,750,273,296,866,204,660,478,281,415,415,415',
'415,415,415,415,415,415,415,415,415,415,415,417,789,415,415,415,283',
'415,417,417,417,415,13,215,417,417,794,417,415,750,415,794,415,415,415',
'415,415,415,415,562,415,415,415,296,866,204,417,417,410,417,417,417',
'417,417,353,415,415,773,415,409,415,353,867,869,889,415,498,415,632',
'867,869,889,875,498,875,417,417,417,417,417,417,417,417,417,417,417',
'417,417,417,410,666,417,417,417,312,417,410,312,309,417,409,309,773',
'773,773,773,417,409,417,667,417,417,417,417,417,417,417,903,417,280',
'417,867,869,889,903,498,280,717,717,903,717,717,717,417,417,670,417',
'672,417,908,419,419,419,417,419,417,908,703,419,419,536,536,703,419',
'440,419,419,419,419,419,419,419,806,806,37,37,419,419,419,419,419,419',
'419,15,15,419,903,674,280,675,399,676,419,880,679,419,419,419,419,419',
'419,419,419,419,419,631,419,419,908,419,419,419,399,399,399,399,399',
'399,399,399,399,399,399,275,399,399,14,684,399,399,690,419,904,904,419',
'419,692,419,880,880,880,880,419,399,419,399,419,399,399,399,399,399',
'399,399,419,399,339,339,209,419,419,419,419,419,419,208,439,14,419,419',
'438,399,623,399,14,276,419,419,890,890,890,890,890,419,419,108,890,890',
'206,108,108,890,620,890,890,890,890,890,890,890,618,277,610,282,890',
'890,890,890,890,890,890,603,544,890,544,544,544,544,611,890,890,890',
'890,890,890,890,890,890,890,890,890,890,890,437,890,890,709,890,890',
'890,611,611,611,611,611,611,611,611,611,611,611,710,611,611,711,713',
'611,611,284,890,716,598,890,285,437,890,346,723,437,437,890,611,190',
'611,890,611,611,611,611,611,611,611,890,611,288,347,593,890,890,890',
'890,890,890,530,586,294,890,890,96,611,886,886,886,78,886,890,77,560',
'886,886,295,890,890,886,741,886,886,886,886,886,886,886,742,745,748',
'749,886,886,886,886,886,886,886,555,751,886,554,754,530,530,530,530',
'886,803,755,886,886,886,886,886,886,886,886,886,886,756,886,886,298',
'886,886,886,636,636,636,636,636,636,636,636,636,636,636,760,636,636',
'63,763,636,636,764,886,416,548,886,543,779,886,803,803,803,803,886,636',
'782,636,886,636,636,636,636,636,636,636,886,636,539,305,528,886,886',
'886,886,886,886,308,310,791,886,886,792,636,41,636,513,797,886,886,884',
'884,884,884,884,886,886,798,884,884,799,512,511,884,338,884,884,884',
'884,884,884,884,335,815,816,408,884,884,884,884,884,884,884,36,778,884',
'778,778,778,778,823,884,884,884,884,884,884,884,884,884,884,884,884',
'884,884,436,884,884,824,884,884,884,818,818,818,818,818,818,818,818',
'818,818,818,320,818,818,34,404,818,818,834,884,835,502,884,840,436,884',
'841,20,436,436,884,818,402,818,884,818,818,818,818,818,818,818,884,818',
'846,499,851,884,884,884,884,884,884,852,262,855,884,884,856,818,876',
'876,876,876,876,884,476,321,876,876,494,884,884,876,396,876,876,876',
'876,876,876,876,395,868,323,12,876,876,876,876,876,876,876,492,11,876',
'5,5,5,5,5,876,876,876,876,876,876,876,876,876,876,876,876,876,876,878',
'876,876,489,876,876,876,727,727,727,727,727,727,727,727,727,727,727',
'10,727,727,885,9,727,727,488,876,486,373,876,8,894,876,896,897,899,324',
'876,727,480,727,876,727,727,727,727,727,727,727,876,727,1,370,479,876',
'876,876,876,876,876,477,,,876,876,,727,420,420,420,456,420,876,,,420',
'420,,876,876,420,,420,420,420,420,420,420,420,,,,,420,420,420,420,420',
'420,420,,456,420,,,456,456,456,456,420,,,420,420,420,420,420,420,420',
'420,420,420,,420,420,,420,420,420,459,459,459,459,459,459,459,459,459',
'459,459,,459,459,,,459,459,,420,,,420,420,,420,,,,,420,459,420,459,420',
'459,459,459,459,459,459,459,420,459,,,,420,420,420,420,420,420,,,,420',
'420,,459,459,,,,420,420,865,865,865,865,865,420,420,,865,865,,,,865',
',865,865,865,865,865,865,865,,,,,865,865,865,865,865,865,865,,,865,383',
'383,383,383,383,865,865,865,865,865,865,865,865,865,865,865,865,865',
'865,,865,865,,865,865,865,729,729,729,729,729,729,729,729,729,729,729',
',729,729,,,729,729,,865,,,865,,,865,,,,,865,729,,729,865,729,729,729',
'729,729,729,729,865,729,,,,865,865,865,865,865,865,,,,865,865,,729,863',
'863,863,455,863,865,,,863,863,,865,865,863,,863,863,863,863,863,863',
'863,,,,,863,863,863,863,863,863,863,,455,863,,,455,455,455,455,863,',
',863,863,863,863,863,863,863,863,863,863,,863,863,,863,863,863,732,732',
'732,732,732,732,732,732,732,732,732,,732,732,,,732,732,,863,,,863,,',
'863,,,,,863,732,863,732,863,732,732,732,732,732,732,732,863,732,,,,863',
'863,863,863,863,863,,,,863,863,,732,848,848,848,848,848,863,,,848,848',
',863,863,848,,848,848,848,848,848,848,848,,,,,848,848,848,848,848,848',
'848,,,848,,,,,,848,848,848,848,848,848,848,848,848,848,848,848,848,848',
',848,848,,848,848,848,656,656,656,656,656,656,656,656,656,656,656,,656',
'656,,,656,656,,848,,,848,,,848,,,,,848,656,,656,848,656,656,656,656',
'656,656,656,848,656,,,,848,848,848,848,848,848,,,,848,848,,656,17,17',
'17,,17,848,,,17,17,,848,848,17,,17,17,17,17,17,17,17,,,,,17,17,17,17',
'17,17,17,,,17,,,,,,,17,,,17,17,17,17,17,17,17,17,17,17,,17,17,,17,17',
'17,245,245,245,245,245,245,245,245,245,245,245,,245,245,,,245,245,,17',
',,17,17,,17,,,,,,245,,245,17,245,245,245,245,245,245,245,17,245,,,,17',
'17,17,17,17,17,,,,17,17,,245,18,18,18,,18,17,,,18,18,,17,17,18,,18,18',
'18,18,18,18,18,,,,,18,18,18,18,18,18,18,,,18,,,,,,,18,,,18,18,18,18',
'18,18,18,18,18,18,,18,18,,18,18,18,422,422,422,422,422,422,422,422,422',
'422,422,,422,422,,,422,422,,18,,,18,,,18,,,,,,422,,422,18,422,422,422',
'422,422,422,422,18,422,,,,18,18,18,18,18,18,,,,18,18,,422,843,843,843',
'843,843,18,,,843,843,,18,18,843,,843,843,843,843,843,843,843,,,,,843',
'843,843,843,843,843,843,,,843,,,,,,843,843,843,843,843,843,843,843,843',
'843,843,843,843,843,,843,843,,843,843,843,734,734,734,734,734,734,734',
'734,734,734,734,,734,734,,,734,734,,843,,,843,,,843,,,,,843,734,,734',
'843,734,734,734,734,734,734,734,843,734,,,,843,843,843,843,843,843,',
',,843,843,,734,842,842,842,,842,843,,,842,842,,843,843,842,,842,842',
'842,842,842,842,842,,,,,842,842,842,842,842,842,842,,,842,,,,,,,842',
',,842,842,842,842,842,842,842,842,842,842,,842,842,,842,842,842,739',
'739,739,739,739,739,739,739,739,739,739,,739,739,,,739,739,,842,,,842',
',,842,,,,,842,739,,739,842,739,739,739,739,739,739,739,842,739,,,,842',
'842,842,842,842,842,,,,842,842,,739,22,22,22,,22,842,,,22,22,,842,842',
'22,,22,22,22,22,22,22,22,,,,,22,22,22,22,22,22,22,,,22,,,,,,,22,,,22',
'22,22,22,22,22,22,22,22,22,,22,22,,22,22,22,722,722,722,722,722,722',
'722,722,722,722,722,,722,722,,,722,722,,22,,,22,,331,22,331,331,331',
'331,22,722,22,722,22,722,722,722,722,722,722,722,22,722,,,,22,22,22',
'22,22,22,,,,22,22,,722,,331,,,22,22,23,23,23,331,23,22,22,,23,23,,,',
'23,,23,23,23,23,23,23,23,,,,,23,23,23,23,23,23,23,,,23,,,,,,,23,,,23',
'23,23,23,23,23,23,23,23,23,,23,23,,23,23,23,407,407,407,407,407,407',
'407,407,407,407,407,,407,407,,,407,407,,23,,,23,,541,23,541,541,541',
'541,23,407,23,407,23,407,407,407,407,407,407,407,23,407,,,,23,23,23',
'23,23,23,,,,23,23,,407,,541,,,23,23,24,24,24,541,24,23,23,,24,24,,,',
'24,,24,24,24,24,24,24,24,,,,,24,24,24,24,24,24,24,,,24,,,,,,,24,,,24',
'24,24,24,24,24,24,24,24,24,,24,24,,24,24,24,19,19,19,19,19,19,19,19',
'19,19,19,,19,19,,,19,19,,24,,,24,,680,24,680,680,680,680,24,19,24,19',
'24,19,19,19,19,19,19,19,24,19,,,,24,24,24,24,24,24,,,,24,24,,19,,680',
',,24,24,838,838,838,680,838,24,24,,838,838,,,,838,,838,838,838,838,838',
'838,838,,,,,838,838,838,838,838,838,838,,,838,,,,,,,838,,,838,838,838',
'838,838,838,838,838,838,838,,838,838,,838,838,838,509,509,509,509,509',
'509,509,509,509,509,509,,509,509,,,509,509,,838,,,838,,,838,,,,,,509',
',509,838,509,509,509,509,509,509,509,838,509,,,,838,838,838,838,838',
'838,,,,838,838,,509,832,832,832,,832,838,,,832,832,,838,838,832,,832',
'832,832,832,832,832,832,,,,,832,832,832,832,832,832,832,,,832,,,,,,',
'832,,,832,832,832,832,832,832,832,832,832,832,,832,832,444,,,832,,,',
',,,,,,,,,444,444,,,,,,832,,,832,,,832,,444,27,,,444,444,444,444,27,27',
'27,,,27,27,27,446,27,,,832,832,832,832,832,832,27,27,27,832,832,,446',
'446,,,27,27,832,27,27,27,27,27,832,832,,446,,446,,446,446,446,446,,',
'446,,446,,,,,,27,27,27,27,27,27,27,27,27,27,27,27,27,27,,,27,27,27,',
',27,,27,27,,,27,,27,,27,,27,,27,27,27,27,27,27,27,,27,27,27,,567,,567',
'567,567,567,,,,,,27,27,27,27,,27,28,,,,,,27,28,28,28,,,28,28,28,,28',
'448,,,567,567,,,,,28,28,567,567,567,567,,448,448,28,28,,28,28,28,28',
'28,,,,,,448,,448,,448,448,448,448,,,448,,448,,,,28,28,28,28,28,28,28',
'28,28,28,28,28,28,28,,,28,28,28,,,28,,28,28,,,28,,28,,28,,28,,28,28',
'28,28,28,28,28,,28,,28,,,,,,,,,,,,,28,28,28,28,,28,30,30,30,30,30,,28',
',30,30,,,,30,,30,30,30,30,30,30,30,,,,,30,30,30,30,30,30,30,,,30,,,',
',,30,30,30,30,30,30,30,30,30,30,30,30,30,30,,30,30,,30,30,30,452,452',
'452,452,452,452,452,,,452,452,,,,,,452,452,,30,,,30,,,30,,,,,30,452',
',452,30,452,452,452,452,452,452,452,30,452,,,,30,30,30,30,30,30,,,,30',
'30,,,31,31,31,,31,30,,,31,31,,30,30,31,,31,31,31,31,31,31,31,,,,,31',
'31,31,31,31,31,31,,,31,,,,,,,31,,,31,31,31,31,31,31,31,31,31,31,,31',
'31,443,,615,31,615,615,615,615,,,,,,,,,443,443,,,,,,31,,,31,,,31,,443',
',443,31,443,443,443,443,615,,707,,707,707,707,707,615,615,615,615,31',
'31,31,31,31,31,,615,,31,31,,,32,32,32,,32,31,,,32,32,,31,31,32,707,32',
'32,32,32,32,32,32,707,707,707,707,32,32,32,32,32,32,32,,,32,,,,,,,32',
',,32,32,32,32,32,32,32,32,32,32,,32,32,447,,56,32,56,56,56,56,,,,,,',
',,447,447,,,,,,32,,,32,,,32,,447,,447,,447,447,447,447,56,56,447,,447',
',,,56,56,56,56,32,32,32,32,32,32,,,,32,32,,,,32,,,,32,427,427,427,,427',
'32,32,,427,427,,,,427,,427,427,427,427,427,427,427,,,,,427,427,427,427',
'427,427,427,,,427,,,,,,,427,,,427,427,427,427,427,427,427,427,427,427',
',427,427,,427,427,427,451,451,451,451,451,451,451,,,451,451,,,,,,451',
'451,,427,,,427,,,427,,,,,427,451,,451,427,451,451,451,451,451,451,451',
'427,451,,,,427,427,427,427,427,427,,,,427,427,,,,,,,427,427,828,828',
'828,828,828,427,427,,828,828,,,,828,,828,828,828,828,828,828,828,,,',
',828,828,828,828,828,828,828,,,828,,,,,,828,828,828,828,828,828,828',
'828,828,828,828,828,828,828,,828,828,,828,828,828,453,453,453,453,453',
'453,453,,,453,453,,,,,,453,453,,828,,,828,,,828,,,,,828,453,,453,828',
'453,453,453,453,453,453,453,828,453,,,,828,828,828,828,828,828,,,,828',
'828,,,819,819,819,,819,828,,,819,819,,828,828,819,,819,819,819,819,819',
'819,819,,,,,819,819,819,819,819,819,819,,,819,,,,,,,819,,,819,819,819',
'819,819,819,819,819,819,819,,819,819,,819,819,819,435,435,435,435,435',
'435,435,435,435,435,435,,435,435,,,435,435,,819,,,819,,,819,,,,,,435',
',435,819,435,435,435,435,435,435,435,819,435,,,,819,819,819,819,819',
'819,,,,819,819,,,807,807,807,,807,819,,,807,807,,819,819,807,,807,807',
'807,807,807,807,807,,,,,807,807,807,807,807,807,807,,,807,,,,,,,807',
',,807,807,807,807,807,807,807,807,807,807,,807,807,,807,807,807,450',
'450,450,450,450,450,450,,,450,450,,,,,,450,450,,807,,,807,,,807,,,,',
',450,,450,807,450,450,450,450,450,450,450,807,450,,,,807,807,807,807',
'807,807,,,,807,807,,,38,38,38,,38,807,,,38,38,,807,807,38,,38,38,38',
'38,38,38,38,,,,,38,38,38,38,38,38,38,,,38,,,,,,,38,,,38,38,38,38,38',
'38,38,38,38,38,,38,38,,38,38,38,449,,,,,,,,,,,,,,,,449,449,,38,,,38',
',,38,,,,,,449,,449,38,449,449,449,449,,,449,38,449,,,,38,38,38,38,38',
'38,,,,38,38,,,39,39,39,,39,38,,,39,39,,38,38,39,,39,39,39,39,39,39,39',
',,,,39,39,39,39,39,39,39,,,39,,,,,,,39,,,39,39,39,39,39,39,39,39,39',
'39,,39,39,,39,39,39,434,434,434,434,434,434,434,434,434,434,434,,434',
'434,,,434,434,,39,,,39,,,39,,,,,,434,,434,39,434,434,434,434,434,434',
'434,39,434,,,,39,39,39,39,39,39,,,,39,39,,,40,40,40,,40,39,,,40,40,',
'39,39,40,,40,40,40,40,40,40,40,,,,,40,40,40,40,40,40,40,,,40,,,,,,,40',
',,40,40,40,40,40,40,40,40,40,40,,40,40,,40,40,40,457,457,457,457,457',
'457,457,,,457,457,,,,,,457,457,,40,,,40,,,40,,,,,,457,,457,40,457,457',
'457,457,457,457,457,40,457,,,,40,40,40,40,40,40,,,,40,40,,,793,793,793',
'793,793,40,,,793,793,,40,40,793,,793,793,793,793,793,793,793,,,,,793',
'793,793,793,793,793,793,,,793,,,,,,793,793,793,793,793,793,793,793,793',
'793,793,793,793,793,,793,793,,793,793,793,458,458,458,458,458,458,458',
'458,,458,458,,,,,,458,458,,793,,,793,,,793,,,,,793,458,,458,793,458',
'458,458,458,458,458,458,793,458,,,,793,793,793,793,793,793,,,,793,793',
',,350,350,350,,350,793,,,350,350,,793,793,350,,350,350,350,350,350,350',
'350,,,,,350,350,350,350,350,350,350,,,350,,,,,,,350,,,350,350,350,350',
'350,350,350,350,350,350,,350,350,442,,,350,,,,,,,,,,,,,442,442,,,,,',
'350,,,350,,,350,,442,50,442,,442,442,442,442,50,50,50,,,50,50,50,,50',
',,350,350,350,350,350,350,,50,50,350,350,,,,,,50,50,350,50,50,50,50',
'50,350,350,,,,,,,,,,,,,,,,,,,,50,50,50,50,50,50,50,50,50,50,50,50,50',
'50,,,50,50,50,,,50,,,50,,,50,,50,,50,,50,,50,50,50,50,50,50,50,,50,',
'50,,,534,,534,534,534,534,,,,,50,50,50,50,,50,,,50,50,,,50,52,52,52',
',52,,,,52,52,,,,52,534,52,52,52,52,52,52,52,534,534,534,534,52,52,52',
'52,52,52,52,,,52,,,,,,,52,,,52,52,52,52,52,52,52,52,52,52,,52,52,,52',
'52,52,445,445,445,445,445,445,445,,,445,445,,,,,,445,445,,52,,,52,,',
'52,,,,,,445,,445,52,445,445,445,445,445,445,445,52,445,,,,52,52,52,52',
'52,52,,,,52,52,,,53,53,53,,53,52,,,53,53,,52,52,53,,53,53,53,53,53,53',
'53,,,,,53,53,53,53,53,53,53,,,53,,,,,,,53,,,53,53,53,53,53,53,53,53',
'53,53,,53,53,,53,53,53,454,454,454,454,454,454,454,,,454,454,,,,,,454',
'454,,53,,,53,,,53,,,,,53,454,,454,53,454,454,454,454,454,454,454,53',
'454,,,,53,53,53,53,53,53,,,,53,53,,,,,,,53,53,54,54,54,,54,53,53,,54',
'54,,,,54,,54,54,54,54,54,54,54,,,,,54,54,54,54,54,54,54,,,54,,,,,,,54',
',,54,54,54,54,54,54,54,54,54,54,,54,54,,54,54,54,,,,,,,,,,,,,,,,,,,',
'54,,,54,,,54,,,,,54,,,,54,,,,,,,,54,,,,,54,54,54,54,54,54,,,,54,54,',
',,,,,54,54,784,784,784,784,784,54,54,,784,784,,,,784,,784,784,784,784',
'784,784,784,,,,,784,784,784,784,784,784,784,,,784,,,,,,784,784,784,784',
'784,784,784,784,784,784,784,784,784,784,,784,784,,784,784,784,,,,,,',
',,,,,,,,,,,,,784,,,784,,,784,,,,,784,,,,784,,,,,,,,784,,,,,784,784,784',
'784,784,784,,,,784,784,,,783,783,783,783,783,784,,,783,783,,784,784',
'783,,783,783,783,783,783,783,783,,,,,783,783,783,783,783,783,783,,,783',
',,,,,783,783,783,783,783,783,783,783,783,783,783,783,783,783,,783,783',
',783,783,783,,,,,,,,,,,,,,,,,,,,783,,,783,,,783,,,,,783,,,,783,,,,,',
',,783,,,,,783,783,783,783,783,783,,,,783,783,,,57,57,57,,57,783,,,57',
'57,,783,783,57,,57,57,57,57,57,57,57,,,,,57,57,57,57,57,57,57,,,57,',
',,,,,57,,,57,57,57,57,57,57,57,57,57,57,,57,57,,57,57,57,,,,,,,,,,,',
',,,,,,,,57,,,57,,,57,,,,,,,,,57,,,,,,,,57,,,,,57,57,57,57,57,57,,,,57',
'57,,,58,58,58,,58,57,,,58,58,,57,57,58,,58,58,58,58,58,58,58,,,,,58',
'58,58,58,58,58,58,,,58,,,,,,,58,,,58,58,58,58,58,58,58,58,58,58,,58',
'58,,58,58,58,,,,,,,,,,,,,,,,,,,,58,,,58,,,58,,,,,,,,,58,,,,,,,,58,,',
',,58,58,58,58,58,58,,,,58,58,,,61,61,61,,61,58,,,61,61,,58,58,61,,61',
'61,61,61,61,61,61,,,,,61,61,61,61,61,61,61,,,61,,,,,,,61,,,61,61,61',
'61,61,61,61,61,61,61,,61,61,,61,61,61,,,,,,,,,,,,,,,,,,,,61,,,61,,,61',
',,,,,,,,61,,,,,,,,61,,,,,61,61,61,61,61,61,,,,61,61,61,,62,62,62,61',
'62,61,,,62,62,,61,61,62,,62,62,62,62,62,62,62,,,,,62,62,62,62,62,62',
'62,,,62,,,,,,,62,,,62,62,62,62,62,62,62,62,62,62,,62,62,,,801,62,801',
'801,801,801,,,,,,,,,,,,,,,,62,,,62,,,62,,,,,62,,,,,801,,,,,,,,801,801',
'801,801,62,62,62,62,62,62,,,,62,62,,,762,762,762,762,762,62,,,762,762',
',62,62,762,,762,762,762,762,762,762,762,,,,,762,762,762,762,762,762',
'762,,,762,,,,,,762,762,762,762,762,762,762,762,762,762,762,762,762,762',
',762,762,,762,762,762,,,,,,,,,,,,,,,,,,,,762,,,762,,,762,,,,,762,,,',
'762,,,,,,,,762,,,,,762,762,762,762,762,762,,,,762,762,,,348,348,348',
',348,762,,,348,348,,762,762,348,,348,348,348,348,348,348,348,,,,,348',
'348,348,348,348,348,348,,,348,,,,,,,348,,,348,348,348,348,348,348,348',
'348,348,348,,348,348,,,859,348,859,859,859,859,,,,,,,,,,,,,,,,348,,',
'348,,,348,,,,,,,,,,859,859,,,,,,,859,859,859,859,348,348,348,348,348',
'348,,,,348,348,,,752,752,752,,752,348,,,752,752,,348,348,752,,752,752',
'752,752,752,752,752,,,,,752,752,752,752,752,752,752,,,752,,,,,,,752',
',,752,752,752,752,752,752,752,752,752,752,,752,752,,752,752,752,,,,',
',,,,,,,,,,,,,,,752,,,752,,,752,,,,,752,,,,752,,,,,,,,752,,,,,752,752',
'752,752,752,752,,,,752,752,,,737,737,737,,737,752,,,737,737,,752,752',
'737,,737,737,737,737,737,737,737,,,,,737,737,737,737,737,737,737,,,737',
',,,,,,737,,,737,737,737,737,737,737,737,737,737,737,,737,737,,737,737',
'737,,,,,,,,,,,,,,,,,,,,737,,,737,,,737,,,,,,,,,737,,,,,,,,737,,,,,737',
'737,737,737,737,737,,,,737,737,,,736,736,736,,736,737,,,736,736,,737',
'737,736,,736,736,736,736,736,736,736,,,,,736,736,736,736,736,736,736',
',,736,,,,,,,736,,,736,736,736,736,736,736,736,736,736,736,,736,736,',
'736,736,736,,,,,,,,,,,,,,,,,,,,736,,,736,,,736,,,,,,,,,736,,,,,,,,736',
',,,,736,736,736,736,736,736,,,,736,736,,,429,429,429,,429,736,,,429',
'429,,736,736,429,,429,429,429,429,429,429,429,,,,,429,429,429,429,429',
'429,429,,,429,,,,,,,429,,,429,429,429,429,429,429,429,429,429,429,,429',
'429,,429,429,429,,,,,,,,,,,,,,,,,,,,429,,,429,,,429,,,,,,,,,429,,,,',
',,,429,,,,,429,429,429,429,429,429,,,,429,429,,,83,83,83,,83,429,,,83',
'83,,429,429,83,,83,83,83,83,83,83,83,,83,,,83,83,83,83,83,83,83,,,83',
',,,,,,83,,,83,83,83,83,83,83,83,83,83,83,,83,83,,83,83,83,,,,,,,,,,',
',,,,,,,,,83,,,83,83,,83,,,,,83,,83,,83,,,,,,,,83,,83,,,83,83,83,83,83',
'83,,,,83,83,,,,,,,83,83,86,86,86,,86,83,83,,86,86,,,,86,,86,86,86,86',
'86,86,86,,86,,,86,86,86,86,86,86,86,,,86,,,,,,,86,,,86,86,86,86,86,86',
'86,86,86,86,,86,86,,86,86,86,,,,,,,,,,,,,,,,,,,,86,,,86,86,,86,,,,,86',
',86,,86,,,,,,,,86,,86,,,86,86,86,86,86,86,,,,86,86,,,,,,,86,86,735,735',
'735,,735,86,86,,735,735,,,,735,,735,735,735,735,735,735,735,,,,,735',
'735,735,735,735,735,735,,,735,,,,,,,735,,,735,735,735,735,735,735,735',
'735,735,735,,735,735,,735,735,735,,,,,,,,,,,,,,,,,,,,735,,,735,,,735',
',,,,,,,,735,,,,,,,,735,,,,,735,735,735,735,735,735,,,,735,735,,,98,98',
'98,98,98,735,,,98,98,,735,735,98,,98,98,98,98,98,98,98,,,,,98,98,98',
'98,98,98,98,,,98,,,,,,98,98,98,98,98,98,98,98,98,98,98,98,98,98,,98',
'98,,98,98,98,,,,,,,,,,,,,,,,,,,,98,,,98,,,98,,,,,98,,,,98,,,,,,,,98',
',,,,98,98,98,98,98,98,,,,98,98,,,102,102,102,98,102,98,,,102,102,,98',
'98,102,,102,102,102,102,102,102,102,,,,,102,102,102,102,102,102,102',
',,102,,,,,,,102,,,102,102,102,102,102,102,102,102,102,102,,102,102,',
'102,102,102,,,,,,,,,,,,,,,,,,,,102,,,102,,,102,,,,,,,,,102,,,,,,,,102',
',,,,102,102,102,102,102,102,,,,102,102,,,103,103,103,,103,102,,,103',
'103,,102,102,103,,103,103,103,103,103,103,103,,,,,103,103,103,103,103',
'103,103,,,103,,,,,,,103,,,103,103,103,103,103,103,103,103,103,103,,103',
'103,,103,103,103,,,,,,,,,,,,,,,,,,,,103,,,103,,,103,,,,,,,,,103,,,,',
',,,103,,,,,103,103,103,103,103,103,,,,103,103,,,104,104,104,,104,103',
',,104,104,,103,103,104,,104,104,104,104,104,104,104,,,,,104,104,104',
'104,104,104,104,,,104,,,,,,,104,,,104,104,104,104,104,104,104,104,104',
'104,,104,104,,104,104,104,,,,,,,,,,,,,,,,,,,,104,,,104,,,104,,,,,,,',
',104,,,,,,,,104,,,,,104,104,104,104,104,104,,,,104,104,,,105,105,105',
',105,104,,,105,105,,104,104,105,,105,105,105,105,105,105,105,,,,,105',
'105,105,105,105,105,105,,,105,,,,,,,105,,,105,105,105,105,105,105,105',
'105,105,105,,105,105,,105,105,105,,,,,,,,,,,,,,,,,,,,105,,,105,,,105',
',,,,,,,,105,,,,,,,,105,,,,,105,105,105,105,105,105,,,,105,105,,,106',
'106,106,106,106,105,,,106,106,,105,105,106,,106,106,106,106,106,106',
'106,,,,,106,106,106,106,106,106,106,,,106,,,,,,106,106,106,106,106,106',
'106,106,106,106,106,106,106,106,,106,106,,106,106,106,,,,,,,,,,,,,,',
',,,,,106,,,106,,,106,,,,,106,,,,106,,,,,,,,106,,,,,106,106,106,106,106',
'106,,,,106,106,,,725,725,725,,725,106,,,725,725,,106,106,725,,725,725',
'725,725,725,725,725,,,,,725,725,725,725,725,725,725,,,725,,,,,,,725',
',,725,725,725,725,725,725,725,725,725,725,,725,725,,725,725,725,,,,',
',,,,,,,,,,,,,,,725,,,725,,,725,,,,,,,,,725,,,,,,,,725,,,,,725,725,725',
'725,725,725,,,,725,725,,,363,363,363,,363,725,,,363,363,,725,725,363',
',363,363,363,363,363,363,363,,,,,363,363,363,363,363,363,363,,,363,',
',,,,,363,,,363,363,363,363,363,363,363,363,363,363,,363,363,,363,363',
'363,,,,,,,,,,,,,,,,,,,,363,,,363,,,363,,,,,,,,,363,,,,,,,,363,,,,,363',
'363,363,363,363,363,,,,363,363,,,724,724,724,,724,363,,,724,724,,363',
'363,724,,724,724,724,724,724,724,724,,,,,724,724,724,724,724,724,724',
',,724,,,,,,,724,,,724,724,724,724,724,724,724,724,724,724,,724,724,',
'724,724,724,,,,,,,,,,,,,,,,,,,,724,,,724,,,724,,,,,,,,,724,,,,,,,,724',
',,,,724,724,724,724,724,724,,,,724,724,,,192,192,192,192,192,724,,,192',
'192,,724,724,192,,192,192,192,192,192,192,192,,,,,192,192,192,192,192',
'192,192,,,192,,,,,,192,192,192,192,192,192,192,192,192,192,192,192,192',
'192,,192,192,,192,192,192,,,,,,,,,,,,,,,,,,,,192,,,192,,,192,,,,,192',
',,,192,,,,,,,,192,,,,,192,192,192,192,192,192,,,,192,192,,,193,193,193',
'193,193,192,,,193,193,,192,192,193,,193,193,193,193,193,193,193,,,,',
'193,193,193,193,193,193,193,,,193,,,,,,193,193,193,193,193,193,193,193',
'193,193,193,193,193,193,,193,193,,193,193,193,,,,,,,,,,,,,,,,,,,,193',
',,193,,,193,,,,,193,,,,193,,,,,,,,193,,,,,193,193,193,193,193,193,,',
',193,193,,,194,194,194,,194,193,,,194,194,,193,193,194,,194,194,194',
'194,194,194,194,,,,,194,194,194,194,194,194,194,,,194,,,,,,,194,,,194',
'194,194,194,194,194,194,194,194,194,,194,194,,194,194,194,,,,,,,,,,',
',,,,,,,,,194,,,194,,,194,,,,,194,,,,194,,,,,,,,194,,,,,194,194,194,194',
'194,194,,,,194,194,,,195,195,195,,195,194,,,195,195,,194,194,195,,195',
'195,195,195,195,195,195,,,,,195,195,195,195,195,195,195,,,195,,,,,,',
'195,,,195,195,195,195,195,195,195,195,195,195,,195,195,,195,195,195',
',,,,,,,,,,,,,,,,,,,195,,,195,,,195,,,,,195,,,,195,,,,,,,,195,,,,,195',
'195,195,195,195,195,,,,195,195,,,196,196,196,,196,195,,,196,196,,195',
'195,196,,196,196,196,196,196,196,196,,,,,196,196,196,196,196,196,196',
',,196,,,,,,,196,,,196,196,196,196,196,196,196,196,196,196,,196,196,',
'196,196,196,,,,,,,,,,,,,,,,,,,,196,,,196,,,196,,,,,,,,,196,,,,,,,,196',
',,,,196,196,196,196,196,196,,,,196,196,,,197,197,197,,197,196,,,197',
'197,,196,196,197,,197,197,197,197,197,197,197,,,,,197,197,197,197,197',
'197,197,,,197,,,,,,,197,,,197,197,197,197,197,197,197,197,197,197,,197',
'197,,197,197,197,,,,,,,,,,,,,,,,,,,,197,,,197,,,197,,,,,197,,,,197,',
',,,,,,197,,,,,197,197,197,197,197,197,,,,197,197,,,,,,,197,197,718,718',
'718,718,718,197,197,,718,718,,,,718,,718,718,718,718,718,718,718,,,',
',718,718,718,718,718,718,718,,,718,,,,,,718,718,718,718,718,718,718',
'718,718,718,718,718,718,718,,718,718,,718,718,718,,,,,,,,,,,,,,,,,,',
',718,,,718,,,718,,,,,718,,,,718,,,,,,,,718,,,,,718,718,718,718,718,718',
',,,718,718,,,430,430,430,,430,718,,,430,430,,718,718,430,,430,430,430',
'430,430,430,430,,,,,430,430,430,430,430,430,430,,,430,,,,,,,430,,,430',
'430,430,430,430,430,430,430,430,430,,430,430,,430,430,430,,,,,,,,,,',
',,,,,,,,,430,,,430,,,430,,,,,,,,,430,,,,,,,,430,,,,,430,430,430,430',
'430,430,,,,430,430,,,200,200,200,,200,430,,,200,200,,430,430,200,,200',
'200,200,200,200,200,200,,,,,200,200,200,200,200,200,200,,,200,,,,,,',
'200,,,200,200,200,200,200,200,200,200,200,200,,200,200,,200,200,200',
',,,,,,,,,,,,,,,,,,,200,,,200,,,200,,,,,,,,,200,,,,,,,,200,,,,,200,200',
'200,200,200,200,,,,200,200,,,201,201,201,,201,200,,,201,201,,200,200',
'201,,201,201,201,201,201,201,201,,,,,201,201,201,201,201,201,201,,,201',
',,,,,,201,,,201,201,201,201,201,201,201,201,201,201,,201,201,,201,201',
'201,,,,,,,,,,,,,,,,,,,,201,,,201,,,201,,,,,,,,,201,,,,,,,,201,,,,,201',
'201,201,201,201,201,,,,201,201,,,202,202,202,,202,201,,,202,202,,201',
'201,202,,202,202,202,202,202,202,202,,,,,202,202,202,202,202,202,202',
',,202,,,,,,,202,,,202,202,202,202,202,202,202,202,202,202,,202,202,',
'202,202,202,,,,,,,,,,,,,,,,,,,,202,,,202,,,202,,,,,,,,,202,,,,,,,,202',
',,,,202,202,202,202,202,202,,,,202,202,,,706,706,706,706,706,202,,,706',
'706,,202,202,706,,706,706,706,706,706,706,706,,,,,706,706,706,706,706',
'706,706,,,706,,,,,,706,706,706,706,706,706,706,706,706,706,706,706,706',
'706,,706,706,,706,706,706,,,,,,,,,,,,,,,,,,,,706,,,706,,,706,,,,,706',
',,,706,,,,,,,,706,,,,,706,706,706,706,706,706,,,,706,706,,,705,705,705',
'705,705,706,,,705,705,,706,706,705,,705,705,705,705,705,705,705,,,,',
'705,705,705,705,705,705,705,,,705,,,,,,705,705,705,705,705,705,705,705',
'705,705,705,705,705,705,,705,705,,705,705,705,,,,,,,,,,,,,,,,,,,,705',
',,705,,,705,,,,,705,,,,705,,,,,,,,705,,,,,705,705,705,705,705,705,,',
',705,705,,,702,702,702,,702,705,,,702,702,,705,705,702,,702,702,702',
'702,702,702,702,,,,,702,702,702,702,702,702,702,,,702,,,,,,,702,,,702',
'702,702,702,702,702,702,702,702,702,,702,702,,702,702,702,,,,,,,,,,',
',,,,,,,,,702,,,702,,,702,,,,,,,,,702,,,,,,,,702,,,,,702,702,702,702',
'702,702,,,,702,702,,,698,698,698,,698,702,,,698,698,,702,702,698,,698',
'698,698,698,698,698,698,,,,,698,698,698,698,698,698,698,,,698,,,,,,',
'698,,,698,698,698,698,698,698,698,698,698,698,,698,698,,698,698,698',
',,,,,,,,,,,,,,,,,,,698,,,698,,,698,,,,,698,,,,698,,,,,,,,698,,,,,698',
'698,698,698,698,698,,,,698,698,,,,,,,698,698,694,694,694,,694,698,698',
',694,694,,,,694,,694,694,694,694,694,694,694,,,,,694,694,694,694,694',
'694,694,,,694,,,,,,,694,,,694,694,694,694,694,694,694,694,694,694,,694',
'694,,694,694,694,,,,,,,,,,,,,,,,,,,,694,,,694,,,694,,,,,,,,,694,,,,',
',,,694,,,,,694,694,694,694,694,694,,,,694,694,,,693,693,693,,693,694',
',,693,693,,694,694,693,,693,693,693,693,693,693,693,,,,,693,693,693',
'693,693,693,693,,,693,,,,,,,693,,,693,693,693,693,693,693,693,693,693',
'693,,693,693,,693,693,693,,,,,,,,,,,,,,,,,,,,693,,,693,,,693,,,,,693',
',,,693,,,,,,,,693,,,,,693,693,693,693,693,693,,,,693,693,,,210,210,210',
'210,210,693,,,210,210,,693,693,210,,210,210,210,210,210,210,210,,,,',
'210,210,210,210,210,210,210,,,210,,,,,,210,210,210,210,210,210,210,210',
'210,210,210,210,210,210,,210,210,,210,210,210,,,,,,,,,,,,,,,,,,,,210',
',,210,,,210,,,,,210,,,,210,,,,,,,,210,,,,,210,210,210,210,210,210,,',
',210,210,,,211,211,211,,211,210,,,211,211,,210,210,211,,211,211,211',
'211,211,211,211,,,,,211,211,211,211,211,211,211,,,211,,,,,,,211,,,211',
'211,211,211,211,211,211,211,211,211,,211,211,,211,211,211,,,,,,,,,,',
',,,,,,,,,211,,,211,,211,211,,,,,,,,,211,,,,,,,,211,,,,,211,211,211,211',
'211,211,,,,211,211,,,214,214,214,,214,211,,,214,214,,211,211,214,,214',
'214,214,214,214,214,214,,,,,214,214,214,214,214,214,214,,,214,,,,,,',
'214,,,214,214,214,214,214,214,214,214,214,214,,214,214,,214,214,214',
',,,,,,,,,,,,,,,,,,,214,,,214,,,214,,,,,,,,,214,,,,,,,,214,,,,,214,214',
'214,214,214,214,,,,214,214,,,661,661,661,,661,214,,,661,661,,214,214',
'661,,661,661,661,661,661,661,661,,,,,661,661,661,661,661,661,661,,,661',
',,,,,,661,,,661,661,661,661,661,661,661,661,661,661,,661,661,,661,661',
'661,,,,,,,,,,,,,,,,,,,,661,,,661,,,661,,,,,661,,,,661,,,,,,,,661,,,',
',661,661,661,661,661,661,,,,661,661,,,216,216,216,,216,661,,,216,216',
',661,661,216,,216,216,216,216,216,216,216,,,,,216,216,216,216,216,216',
'216,,,216,,,,,,,216,,,216,216,216,216,216,216,216,216,216,216,,216,216',
',216,216,216,,,,,,,,,,,,,,,,,,,,216,,,216,,,216,,,,,,,,,216,,,,,,,,216',
',,,,216,216,216,216,216,216,,,,216,216,,,217,217,217,,217,216,,,217',
'217,,216,216,217,,217,217,217,217,217,217,217,,,,,217,217,217,217,217',
'217,217,,,217,,,,,,,217,,,217,217,217,217,217,217,217,217,217,217,,217',
'217,,217,217,217,,,,,,,,,,,,,,,,,,,,217,,,217,,,217,,,,,,,,,217,,,,',
',,,217,,,,,217,217,217,217,217,217,,,,217,217,,,218,218,218,,218,217',
',,218,218,,217,217,218,,218,218,218,218,218,218,218,,,,,218,218,218',
'218,218,218,218,,,218,,,,,,,218,,,218,218,218,218,218,218,218,218,218',
'218,,218,218,,218,218,218,,,,,,,,,,,,,,,,,,,,218,,,218,,,218,,,,,,,',
',218,,,,,,,,218,,,,,218,218,218,218,218,218,,,,218,218,,,219,219,219',
',219,218,,,219,219,,218,218,219,,219,219,219,219,219,219,219,,,,,219',
'219,219,219,219,219,219,,,219,,,,,,,219,,,219,219,219,219,219,219,219',
'219,219,219,,219,219,,219,219,219,,,,,,,,,,,,,,,,,,,,219,,,219,,,219',
',,,,,,,,219,,,,,,,,219,,,,,219,219,219,219,219,219,,,,219,219,,,220',
'220,220,,220,219,,,220,220,,219,219,220,,220,220,220,220,220,220,220',
',,,,220,220,220,220,220,220,220,,,220,,,,,,,220,,,220,220,220,220,220',
'220,220,220,220,220,,220,220,,220,220,220,,,,,,,,,,,,,,,,,,,,220,,,220',
',,220,,,,,,,,,220,,,,,,,,220,,,,,220,220,220,220,220,220,,,,220,220',
',,221,221,221,,221,220,,,221,221,,220,220,221,,221,221,221,221,221,221',
'221,,,,,221,221,221,221,221,221,221,,,221,,,,,,,221,,,221,221,221,221',
'221,221,221,221,221,221,,221,221,,221,221,221,,,,,,,,,,,,,,,,,,,,221',
',,221,,,221,,,,,,,,,221,,,,,,,,221,,,,,221,221,221,221,221,221,,,,221',
'221,,,222,222,222,,222,221,,,222,222,,221,221,222,,222,222,222,222,222',
'222,222,,,,,222,222,222,222,222,222,222,,,222,,,,,,,222,,,222,222,222',
'222,222,222,222,222,222,222,,222,222,,222,222,222,,,,,,,,,,,,,,,,,,',
',222,,,222,,,222,,,,,,,,,222,,,,,,,,222,,,,,222,222,222,222,222,222',
',,,222,222,,,223,223,223,,223,222,,,223,223,,222,222,223,,223,223,223',
'223,223,223,223,,,,,223,223,223,223,223,223,223,,,223,,,,,,,223,,,223',
'223,223,223,223,223,223,223,223,223,,223,223,,223,223,223,,,,,,,,,,',
',,,,,,,,,223,,,223,,,223,,,,,,,,,223,,,,,,,,223,,,,,223,223,223,223',
'223,223,,,,223,223,,,224,224,224,,224,223,,,224,224,,223,223,224,,224',
'224,224,224,224,224,224,,,,,224,224,224,224,224,224,224,,,224,,,,,,',
'224,,,224,224,224,224,224,224,224,224,224,224,,224,224,,224,224,224',
',,,,,,,,,,,,,,,,,,,224,,,224,,,224,,,,,,,,,224,,,,,,,,224,,,,,224,224',
'224,224,224,224,,,,224,224,,,225,225,225,,225,224,,,225,225,,224,224',
'225,,225,225,225,225,225,225,225,,,,,225,225,225,225,225,225,225,,,225',
',,,,,,225,,,225,225,225,225,225,225,225,225,225,225,,225,225,,225,225',
'225,,,,,,,,,,,,,,,,,,,,225,,,225,,,225,,,,,,,,,225,,,,,,,,225,,,,,225',
'225,225,225,225,225,,,,225,225,,,226,226,226,,226,225,,,226,226,,225',
'225,226,,226,226,226,226,226,226,226,,,,,226,226,226,226,226,226,226',
',,226,,,,,,,226,,,226,226,226,226,226,226,226,226,226,226,,226,226,',
'226,226,226,,,,,,,,,,,,,,,,,,,,226,,,226,,,226,,,,,,,,,226,,,,,,,,226',
',,,,226,226,226,226,226,226,,,,226,226,,,227,227,227,,227,226,,,227',
'227,,226,226,227,,227,227,227,227,227,227,227,,,,,227,227,227,227,227',
'227,227,,,227,,,,,,,227,,,227,227,227,227,227,227,227,227,227,227,,227',
'227,,227,227,227,,,,,,,,,,,,,,,,,,,,227,,,227,,,227,,,,,,,,,227,,,,',
',,,227,,,,,227,227,227,227,227,227,,,,227,227,,,228,228,228,,228,227',
',,228,228,,227,227,228,,228,228,228,228,228,228,228,,,,,228,228,228',
'228,228,228,228,,,228,,,,,,,228,,,228,228,228,228,228,228,228,228,228',
'228,,228,228,,228,228,228,,,,,,,,,,,,,,,,,,,,228,,,228,,,228,,,,,,,',
',228,,,,,,,,228,,,,,228,228,228,228,228,228,,,,228,228,,,229,229,229',
',229,228,,,229,229,,228,228,229,,229,229,229,229,229,229,229,,,,,229',
'229,229,229,229,229,229,,,229,,,,,,,229,,,229,229,229,229,229,229,229',
'229,229,229,,229,229,,229,229,229,,,,,,,,,,,,,,,,,,,,229,,,229,,,229',
',,,,,,,,229,,,,,,,,229,,,,,229,229,229,229,229,229,,,,229,229,,,230',
'230,230,,230,229,,,230,230,,229,229,230,,230,230,230,230,230,230,230',
',,,,230,230,230,230,230,230,230,,,230,,,,,,,230,,,230,230,230,230,230',
'230,230,230,230,230,,230,230,,230,230,230,,,,,,,,,,,,,,,,,,,,230,,,230',
',,230,,,,,,,,,230,,,,,,,,230,,,,,230,230,230,230,230,230,,,,230,230',
',,231,231,231,,231,230,,,231,231,,230,230,231,,231,231,231,231,231,231',
'231,,,,,231,231,231,231,231,231,231,,,231,,,,,,,231,,,231,231,231,231',
'231,231,231,231,231,231,,231,231,,231,231,231,,,,,,,,,,,,,,,,,,,,231',
',,231,,,231,,,,,,,,,231,,,,,,,,231,,,,,231,231,231,231,231,231,,,,231',
'231,,,232,232,232,,232,231,,,232,232,,231,231,232,,232,232,232,232,232',
'232,232,,,,,232,232,232,232,232,232,232,,,232,,,,,,,232,,,232,232,232',
'232,232,232,232,232,232,232,,232,232,,232,232,232,,,,,,,,,,,,,,,,,,',
',232,,,232,,,232,,,,,,,,,232,,,,,,,,232,,,,,232,232,232,232,232,232',
',,,232,232,,,233,233,233,,233,232,,,233,233,,232,232,233,,233,233,233',
'233,233,233,233,,,,,233,233,233,233,233,233,233,,,233,,,,,,,233,,,233',
'233,233,233,233,233,233,233,233,233,,233,233,,233,233,233,,,,,,,,,,',
',,,,,,,,,233,,,233,,,233,,,,,,,,,233,,,,,,,,233,,,,,233,233,233,233',
'233,233,,,,233,233,,,234,234,234,,234,233,,,234,234,,233,233,234,,234',
'234,234,234,234,234,234,,,,,234,234,234,234,234,234,234,,,234,,,,,,',
'234,,,234,234,234,234,234,234,234,234,234,234,,234,234,,234,234,234',
',,,,,,,,,,,,,,,,,,,234,,,234,,,234,,,,,,,,,234,,,,,,,,234,,,,,234,234',
'234,234,234,234,,,,234,234,,,235,235,235,,235,234,,,235,235,,234,234',
'235,,235,235,235,235,235,235,235,,,,,235,235,235,235,235,235,235,,,235',
',,,,,,235,,,235,235,235,235,235,235,235,235,235,235,,235,235,,235,235',
'235,,,,,,,,,,,,,,,,,,,,235,,,235,,,235,,,,,,,,,235,,,,,,,,235,,,,,235',
'235,235,235,235,235,,,,235,235,,,236,236,236,,236,235,,,236,236,,235',
'235,236,,236,236,236,236,236,236,236,,,,,236,236,236,236,236,236,236',
',,236,,,,,,,236,,,236,236,236,236,236,236,236,236,236,236,,236,236,',
'236,236,236,,,,,,,,,,,,,,,,,,,,236,,,236,,,236,,,,,,,,,236,,,,,,,,236',
',,,,236,236,236,236,236,236,,,,236,236,,,237,237,237,,237,236,,,237',
'237,,236,236,237,,237,237,237,237,237,237,237,,,,,237,237,237,237,237',
'237,237,,,237,,,,,,,237,,,237,237,237,237,237,237,237,237,237,237,,237',
'237,,237,237,237,,,,,,,,,,,,,,,,,,,,237,,,237,,,237,,,,,,,,,237,,,,',
',,,237,,,,,237,237,237,237,237,237,,,,237,237,,,238,238,238,,238,237',
',,238,238,,237,237,238,,238,238,238,238,238,238,238,,,,,238,238,238',
'238,238,238,238,,,238,,,,,,,238,,,238,238,238,238,238,238,238,238,238',
'238,,238,238,,238,238,238,,,,,,,,,,,,,,,,,,,,238,,,238,,,238,,,,,,,',
',238,,,,,,,,238,,,,,238,238,238,238,238,238,,,,238,238,,,239,239,239',
',239,238,,,239,239,,238,238,239,,239,239,239,239,239,239,239,,,,,239',
'239,239,239,239,239,239,,,239,,,,,,,239,,,239,239,239,239,239,239,239',
'239,239,239,,239,239,,239,239,239,,,,,,,,,,,,,,,,,,,,239,,,239,,,239',
',,,,,,,,239,,,,,,,,239,,,,,239,239,239,239,239,239,,,,239,239,,,240',
'240,240,,240,239,,,240,240,,239,239,240,,240,240,240,240,240,240,240',
',,,,240,240,240,240,240,240,240,,,240,,,,,,,240,,,240,240,240,240,240',
'240,240,240,240,240,,240,240,,240,240,240,,,,,,,,,,,,,,,,,,,,240,,,240',
',,240,,,,,,,,,240,,,,,,,,240,,,,,240,240,240,240,240,240,,,,240,240',
',,241,241,241,,241,240,,,241,241,,240,240,241,,241,241,241,241,241,241',
'241,,,,,241,241,241,241,241,241,241,,,241,,,,,,,241,,,241,241,241,241',
'241,241,241,241,241,241,,241,241,,241,241,241,,,,,,,,,,,,,,,,,,,,241',
',,241,,,241,,,,,,,,,241,,,,,,,,241,,,,,241,241,241,241,241,241,,,,241',
'241,,,655,655,655,,655,241,,,655,655,,241,241,655,,655,655,655,655,655',
'655,655,,,,,655,655,655,655,655,655,655,,,655,,,,,,,655,,,655,655,655',
'655,655,655,655,655,655,655,,655,655,,,316,655,316,316,316,316,,,,,',
',,,,,,,,,,655,,,655,,,655,,,,,,,,,,316,,316,,,,,,316,316,316,316,655',
'655,655,655,655,655,,,,655,655,,,431,431,431,,431,655,,,431,431,,655',
'655,431,,431,431,431,431,431,431,431,,,,,431,431,431,431,431,431,431',
',,431,,,,,,,431,,,431,431,431,431,431,431,431,431,431,431,,431,431,',
'431,431,431,,,,,,,,,,,,,,,,,,,,431,,,431,,,431,,,,,,,,,431,,,,,,,,431',
',,,,431,431,431,431,431,431,,,,431,431,,,462,462,462,,462,431,,,462',
'462,,431,431,462,,462,462,462,462,462,462,462,,,,,462,462,462,462,462',
'462,462,,,462,,,,,,,462,,,462,462,462,462,462,462,462,462,462,462,,462',
'462,,462,462,462,,,,,,,,,,,,,,,,,,,,462,,,462,,,462,,,,,462,,462,,462',
',,,,,,,462,,,,,462,462,462,462,462,462,,,,462,462,,,,,,,462,462,250',
'250,250,,250,462,462,,250,250,,,,250,,250,250,250,250,250,250,250,,',
',,250,250,250,250,250,250,250,,,250,,,,,,,250,,,250,250,250,250,250',
'250,250,250,250,250,,250,250,,250,250,250,,,,,,,,,,,,,,,,,,,,250,,,250',
',,250,,,,,,,,,250,,,,,,,,250,,,,,250,250,250,250,250,250,,,,250,250',
',,343,343,343,,343,250,,,343,343,,250,250,343,,343,343,343,343,343,343',
'343,,,,,343,343,343,343,343,343,343,,,343,,,,,,,343,,,343,343,343,343',
'343,343,343,343,343,343,,343,343,,343,343,343,,,,,,,,,,,,,,,,,,,,343',
',,343,,,343,,,,,,,,,343,,,,,,,,343,,,,,343,343,343,343,343,343,,,,343',
'343,,,252,252,252,,252,343,,,252,252,,343,343,252,,252,252,252,252,252',
'252,252,,,,,252,252,252,252,252,252,252,,,252,,,,,,,252,,,252,252,252',
'252,252,252,252,252,252,252,,252,252,,252,252,252,,,,,,,,,,,,,,,,,,',
',252,,,252,,,252,,,,,,,,,252,,,,,,,,252,,,,,252,252,252,252,252,252',
',,,252,252,,,257,257,257,,257,252,,,257,257,,252,252,257,,257,257,257',
'257,257,257,257,,,,,257,257,257,257,257,257,257,,,257,,,,,,,257,,,257',
'257,257,257,257,257,257,257,257,257,,257,257,,257,257,257,,,,,,,,,,',
',,,,,,,,,257,,,257,,,257,,,,,,,,,257,,,,,,,,257,,,,,257,257,257,257',
'257,257,,,,257,257,,,645,645,645,,645,257,,,645,645,,257,257,645,,645',
'645,645,645,645,645,645,,,,,645,645,645,645,645,645,645,,,645,,,,,,',
'645,,,645,645,645,645,645,645,645,645,645,645,,645,645,,,,645,,,,,,',
',,,,,,,,,,,,,645,,,645,,,645,,,,,,,,,,,,,,,,,,,,,,645,645,645,645,645',
'645,,,,645,645,,,642,642,642,642,642,645,,,642,642,,645,645,642,,642',
'642,642,642,642,642,642,,,,,642,642,642,642,642,642,642,,,642,,,,,,642',
'642,642,642,642,642,642,642,642,642,642,642,642,642,,642,642,,642,642',
'642,,,,,,,,,,,,,,,,,,,,642,,,642,,,642,,,,,642,,,,642,,,,,,,,642,,,',
',642,642,642,642,642,642,,,,642,642,,,641,641,641,641,641,642,,,641',
'641,,642,642,641,,641,641,641,641,641,641,641,,,,,641,641,641,641,641',
'641,641,,,641,,,,,,641,641,641,641,641,641,641,641,641,641,641,641,641',
'641,,641,641,,641,641,641,,,,,,,,,,,,,,,,,,,,641,,,641,,,641,,,,,641',
',,,641,,,,,,,,641,,,,,641,641,641,641,641,641,,,,641,641,,,263,263,263',
',263,641,,,263,263,,641,641,263,,263,263,263,263,263,263,263,,,,,263',
'263,263,263,263,263,263,,,263,,,,,,,263,,,263,263,263,263,263,263,263',
'263,263,263,,263,263,,263,263,263,,,,,,,,,,,,,,,,,,,,263,,,263,,,263',
',,,,263,,263,,263,,,,,,,,263,,,,,263,263,263,263,263,263,,,,263,263',
',,,,,,263,263,264,264,264,,264,263,263,,264,264,,,,264,,264,264,264',
'264,264,264,264,,,,,264,264,264,264,264,264,264,,,264,,,,,,,264,,,264',
'264,264,264,264,264,264,264,264,264,,264,264,,264,264,264,,,,,,,,,,',
',,,,,,,,,264,,,264,,,264,,,,,264,,264,,264,,,,,,,,264,,,,,264,264,264',
'264,264,264,,,,264,264,,,,,,,264,264,272,272,272,,272,264,264,,272,272',
',,,272,,272,272,272,272,272,272,272,,,,,272,272,272,272,272,272,272',
',,272,,,,,,,272,,,272,272,272,272,272,272,272,272,272,272,,272,272,',
'272,272,272,,,,,,,,,,,,,,,,,,,,272,,,272,,272,272,,,,,272,,272,,272',
',,,,,,,272,,,,,272,272,272,272,272,272,,,,272,272,,,,,,,272,272,635',
'635,635,,635,272,272,,635,635,,,,635,,635,635,635,635,635,635,635,,',
',,635,635,635,635,635,635,635,,,635,,,,,,,635,,,635,635,635,635,635',
'635,635,635,635,635,,635,635,,635,635,635,,,,,,,,,,,,,,,,,,,,635,,,635',
',,635,,,,,635,,635,,635,,,,,,,,635,,,,,635,635,635,635,635,635,,,,635',
'635,,,,,,,635,635,274,274,274,274,274,635,635,,274,274,,,,274,,274,274',
'274,274,274,274,274,,,,,274,274,274,274,274,274,274,,,274,,,,,,274,274',
'274,274,274,274,274,274,274,274,274,274,274,274,,274,274,,274,274,274',
',,,,,,,,,,,,,,,,,,,274,,,274,,,274,,,,,274,,,,274,,,,,,,,274,,,,,274',
'274,274,274,274,274,,,,274,274,,,629,629,629,629,629,274,,,629,629,',
'274,274,629,,629,629,629,629,629,629,629,,,,,629,629,629,629,629,629',
'629,,,629,,,,,,629,629,629,629,629,629,629,629,629,629,629,629,629,629',
',629,629,,629,629,629,,,,,,,,,,,,,,,,,,,,629,,,629,,,629,,,,,629,,,',
'629,,,,,,,,629,,,,,629,629,629,629,629,629,,,,629,629,,,621,621,621',
',621,629,,,621,621,,629,629,621,,621,621,621,621,621,621,621,,,,,621',
'621,621,621,621,621,621,,,621,,,,,,,621,,,621,621,621,621,621,621,621',
'621,621,621,,621,621,,621,621,621,,,,,,,,,,,,,,,,,,,,621,,,621,,,621',
',,,,,,,,621,,,,,,,,621,,,,,621,621,621,621,621,621,,,,621,621,,,617',
'617,617,617,617,621,,,617,617,,621,621,617,,617,617,617,617,617,617',
'617,,,,,617,617,617,617,617,617,617,,,617,,,,,,617,617,617,617,617,617',
'617,617,617,617,617,617,617,617,,617,617,,617,617,617,,,,,,,,,,,,,,',
',,,,,617,,,617,,,617,,,,,617,,,,617,,,,,,,,617,,,,,617,617,617,617,617',
'617,,,,617,617,,,278,278,278,,278,617,,,278,278,,617,617,278,,278,278',
'278,278,278,278,278,,,,,278,278,278,278,278,278,278,,,278,,,,,,,278',
',,278,278,278,278,278,278,278,278,278,278,,278,278,,,,278,,,,,,,,,,',
',,,,,,,,,278,,,278,,,278,,,,,,,,,,,,,,,,,,,,,,278,278,278,278,278,278',
',,,278,278,,,,278,,,,278,279,279,279,279,279,278,278,,279,279,,,,279',
',279,279,279,279,279,279,279,,,,,279,279,279,279,279,279,279,,,279,',
',,,,279,279,279,279,279,279,279,279,279,279,279,279,279,279,,279,279',
',279,279,279,,,,,,,,,,,,,,,,,,,,279,,,279,,,279,,,,,279,,,,279,,,,,',
',,279,,,,,279,279,279,279,279,279,,,,279,279,,,613,613,613,,613,279',
',,613,613,,279,279,613,,613,613,613,613,613,613,613,,,,,613,613,613',
'613,613,613,613,,,613,,,,,,,613,,,613,613,613,613,613,613,613,613,613',
'613,,613,613,,613,613,613,,,,,,,,,,,,,,,,,,,,613,,,613,,,613,,,,,,,',
',613,,,,,,,,613,,,,,613,613,613,613,613,613,,609,,613,613,,,,609,609',
'609,,613,609,609,609,,609,613,613,,,,,,,,609,609,,,,,,,,609,609,,609',
'609,609,609,609,,,,,,,,,,,,,,,,,,,,,,609,609,609,609,609,609,609,609',
'609,609,609,609,609,609,,,609,609,609,,609,609,,,609,,,609,,609,,609',
',609,,609,609,609,609,609,609,609,,609,,609,,,,,,,,,,,,,609,609,609',
'609,,609,608,,,,609,,609,608,608,608,,,608,608,608,,608,,,,,,,,,608',
'608,608,,,,,,,,608,608,,608,608,608,608,608,,,,,,,,,,,,,,,,,,,,,,608',
'608,608,608,608,608,608,608,608,608,608,608,608,608,,,608,608,608,,608',
'608,,,608,,,608,,608,,608,,608,,608,608,608,608,608,608,608,,608,608',
'608,,,,,,,,,,,,,608,608,608,608,,608,,605,605,605,608,605,608,,,605',
'605,,,,605,,605,605,605,605,605,605,605,,,,,605,605,605,605,605,605',
'605,,,605,,,,,,,605,,,605,605,605,605,605,605,605,605,605,605,,605,605',
',605,605,605,,,,,,,,,,,,,,,,,,,,605,,,605,,,605,,,,,,,,,605,,,,,,,,605',
',,,,605,605,605,605,605,605,,,,605,605,,,602,602,602,,602,605,,,602',
'602,,605,605,602,,602,602,602,602,602,602,602,,,,,602,602,602,602,602',
'602,602,,,602,,,,,,,602,,,602,602,602,602,602,602,602,602,602,602,,602',
'602,,602,602,602,,,,,,,,,,,,,,,,,,,,602,,,602,,,602,,,,,,,,,602,,,,',
',,,602,,,,,602,602,602,602,602,602,,,,602,602,,,597,597,597,,597,602',
',,597,597,,602,602,597,,597,597,597,597,597,597,597,,,,,597,597,597',
'597,597,597,597,,,597,,,,,,,597,,,597,597,597,597,597,597,597,597,597',
'597,,597,597,,597,597,597,,,,,,,,,,,,,,,,,,,,597,,,597,,,597,,,,,,,',
',597,,,,,,,,597,,,,,597,597,597,597,597,597,,,,597,597,,,596,596,596',
',596,597,,,596,596,,597,597,596,,596,596,596,596,596,596,596,,,,,596',
'596,596,596,596,596,596,,,596,,,,,,,596,,,596,596,596,596,596,596,596',
'596,596,596,,596,596,,596,596,596,,,,,,,,,,,,,,,,,,,,596,,,596,,,596',
',,,,,,,,596,,,,,,,,596,,,,,596,596,596,596,596,596,,,,596,596,,,467',
'467,467,,467,596,,,467,467,,596,596,467,,467,467,467,467,467,467,467',
',,,,467,467,467,467,467,467,467,,,467,,,,,,,467,,,467,467,467,467,467',
'467,467,467,467,467,,467,467,,467,467,467,,,,,,,,,,,,,,,,,,,,467,,,467',
',,467,,,,,,,,,467,,,,,,,,467,,,,,467,467,467,467,467,467,,,,467,467',
',,592,592,592,,592,467,,,592,592,,467,467,592,,592,592,592,592,592,592',
'592,,,,,592,592,592,592,592,592,592,,,592,,,,,,,592,,,592,592,592,592',
'592,592,592,592,592,592,,592,592,,592,592,592,,,,,,,,,,,,,,,,,,,,592',
',,592,,,592,,,,,,,,,592,,,,,,,,592,,,,,592,592,592,592,592,592,,,,592',
'592,,,291,291,291,,291,592,,,291,291,,592,592,291,,291,291,291,291,291',
'291,291,,,,,291,291,291,291,291,291,291,,,291,,,,,,,291,,,291,291,291',
'291,291,291,291,291,291,291,,291,291,,,,291,,,,,,,,,,,,,,,,,,,,291,',
',291,,,291,,,,,,,,,,,,,,,,,,,,,,291,291,291,291,291,291,,,,291,291,',
',565,565,565,,565,291,,,565,565,,291,291,565,,565,565,565,565,565,565',
'565,,,,,565,565,565,565,565,565,565,,,565,,,,,,,565,,,565,565,565,565',
'565,565,565,565,565,565,,565,565,,565,565,565,,,,,,,,,,,,,,,,,,,,565',
',,565,,,565,,,,,,,,,565,,,,,,,,565,,,,,565,565,565,565,565,565,,,,565',
'565,,,342,342,342,,342,565,,,342,342,,565,565,342,,342,342,342,342,342',
'342,342,,,,,342,342,342,342,342,342,342,,,342,,,,,,,342,,,342,342,342',
'342,342,342,342,342,342,342,,342,342,,342,342,342,,,,,,,,,,,,,,,,,,',
',342,,,342,,,342,,,,,,,,,342,,,,,,,,342,,,,,342,342,342,342,342,342',
',,,342,342,,,465,465,465,,465,342,,,465,465,,342,342,465,,465,465,465',
'465,465,465,465,,,,,465,465,465,465,465,465,465,,,465,,,,,,,465,,,465',
'465,465,465,465,465,465,465,465,465,,465,465,,465,465,465,,,,,,,,,,',
',,,,,,,,,465,,,465,,,465,,,,,,,465,,465,,,,,,,,465,,,,,465,465,465,465',
'465,465,,,,465,465,,,,,,,465,465,556,556,556,556,556,465,465,,556,556',
',,,556,,556,556,556,556,556,556,556,,,,,556,556,556,556,556,556,556',
',,556,,,,,,556,556,556,556,556,556,556,556,556,556,556,556,556,556,',
'556,556,,556,556,556,,,,,,,,,,,,,,,,,,,,556,,,556,,,556,,,,,556,,,,556',
',,,,,,,556,,,,,556,556,556,556,556,556,,,,556,556,,,551,551,551,551',
'551,556,,,551,551,,556,556,551,,551,551,551,551,551,551,551,,,,,551',
'551,551,551,551,551,551,,,551,,,,,,551,551,551,551,551,551,551,551,551',
'551,551,551,551,551,,551,551,,551,551,551,,,,,,,,,,,,,,,,,,,,551,,,551',
',,551,,,,,551,,,,551,,,,,,,,551,,,,,551,551,551,551,551,551,,,,551,551',
',,300,300,300,,300,551,,,300,300,,551,551,300,,300,300,300,300,300,300',
'300,,,,,300,300,300,300,300,300,300,,,300,,,,,,,300,,,300,300,300,300',
'300,300,300,300,300,300,,300,300,,300,300,300,,,,,,,,,,,,,,,,,,,,300',
',,300,300,,300,,,,,,,,,300,,,,,,,,300,,,,,300,300,300,300,300,300,,',
',300,300,,,302,302,302,302,302,300,,,302,302,,300,300,302,,302,302,302',
'302,302,302,302,,,,,302,302,302,302,302,302,302,,,302,,,,,,302,302,302',
'302,302,302,302,302,302,302,302,302,302,302,,302,302,,302,302,302,,',
',,,,,,,,,,,,,,,,,302,,,302,,,302,,,,,302,,,,302,,,,,,,,302,,,,,302,302',
'302,302,302,302,,,,302,302,,,547,547,547,547,547,302,,,547,547,,302',
'302,547,,547,547,547,547,547,547,547,,,,,547,547,547,547,547,547,547',
',,547,,,,,,547,547,547,547,547,547,547,547,547,547,547,547,547,547,',
'547,547,,547,547,547,,,,,,,,,,,,,,,,,,,,547,,,547,,,547,,,,,547,,,,547',
',,,,,,,547,,,,,547,547,547,547,547,547,,,,547,547,,,533,533,533,,533',
'547,,,533,533,,547,547,533,,533,533,533,533,533,533,533,,,,,533,533',
'533,533,533,533,533,,,533,,,,,,,533,,,533,533,533,533,533,533,533,533',
'533,533,,533,533,,,,533,,,,,,,,,,,,,,,,,,,,533,,,533,,,533,,,,,,,,,',
',,,,,,,,,,,,533,533,533,533,533,533,,,,533,533,,,527,527,527,527,527',
'533,,,527,527,,533,533,527,,527,527,527,527,527,527,527,,,,,527,527',
'527,527,527,527,527,,,527,,,,,,527,527,527,527,527,527,527,527,527,527',
'527,527,527,527,,527,527,,527,527,527,,,,,,,,,,,,,,,,,,,,527,,,527,',
',527,,,,,527,,,,527,,,,,,,,527,,,,,527,527,527,527,527,527,,,,527,527',
',,526,526,526,526,526,527,,,526,526,,527,527,526,,526,526,526,526,526',
'526,526,,,,,526,526,526,526,526,526,526,,,526,,,,,,526,526,526,526,526',
'526,526,526,526,526,526,526,526,526,,526,526,,526,526,526,,,,,,,,,,',
',,,,,,,,,526,,,526,,,526,,,,,526,,,,526,,,,,,,,526,,,,,526,526,526,526',
'526,526,,,,526,526,,,521,521,521,,521,526,,,521,521,,526,526,521,,521',
'521,521,521,521,521,521,,,,,521,521,521,521,521,521,521,,,521,,,,,,',
'521,,,521,521,521,521,521,521,521,521,521,521,,521,521,,521,521,521',
',,,,,,,,,,,,,,,,,,,521,,,521,,,521,,,,,521,,,,521,,,,,,,,521,,,,,521',
'521,521,521,521,521,,,,521,521,,,519,519,519,,519,521,,,519,519,,521',
'521,519,,519,519,519,519,519,519,519,,,,,519,519,519,519,519,519,519',
',,519,,,,,,,519,,,519,519,519,519,519,519,519,519,519,519,,519,519,',
'519,519,519,,,,,,,,,,,,,,,,,,,,519,,,519,,,519,,,,,,,,,519,,,,,,,,519',
',,,,519,519,519,519,519,519,,,,519,519,,,,,,,519,519,516,516,516,,516',
'519,519,,516,516,,,,516,,516,516,516,516,516,516,516,,,,,516,516,516',
'516,516,516,516,,,516,,,,,,,516,,,516,516,516,516,516,516,516,516,516',
'516,,516,516,,516,516,516,,,,,,,,,,,,,,,,,,,,516,,,516,,,516,,,,,516',
',,,516,,,,,,,,516,,,,,516,516,516,516,516,516,,,,516,516,,,,,,,516,516',
'510,510,510,,510,516,516,,510,510,,,,510,,510,510,510,510,510,510,510',
',,,,510,510,510,510,510,510,510,,,510,,,,,,,510,,,510,510,510,510,510',
'510,510,510,510,510,,510,510,,510,510,510,,,,,,,,,,,,,,,,,,,,510,,,510',
',,510,,,,,,,,,510,,,,,,,,510,,,,,510,510,510,510,510,510,,,,510,510',
',,506,506,506,,506,510,,,506,506,,510,510,506,,506,506,506,506,506,506',
'506,,,,,506,506,506,506,506,506,506,,,506,,,,,,,506,,,506,506,506,506',
'506,506,506,506,506,506,,506,506,,506,506,506,,,,,,,,,,,,,,,,,,,,506',
',,506,,,506,,,,,,,,,506,,,,,,,,506,,,,,506,506,506,506,506,506,,,,506',
'506,,,505,505,505,,505,506,,,505,505,,506,506,505,,505,505,505,505,505',
'505,505,,,,,505,505,505,505,505,505,505,,,505,,,,,,,505,,,505,505,505',
'505,505,505,505,505,505,505,,505,505,,505,505,505,,,,,,,,,,,,,,,,,,',
',505,,,505,,,505,,,,,,,,,505,,,,,,,,505,,,,,505,505,505,505,505,505',
',,,505,505,,,504,504,504,,504,505,,,504,504,,505,505,504,,504,504,504',
'504,504,504,504,,,,,504,504,504,504,504,504,504,,,504,,,,,,,504,,,504',
'504,504,504,504,504,504,504,504,504,,504,504,,504,504,504,,,,,,,,,,',
',,,,,,,,,504,,,504,,,504,,,,,,,,,504,,,,,,,,504,,,,,504,504,504,504',
'504,504,,,,504,504,,,495,495,495,,495,504,,,495,495,,504,504,495,,495',
'495,495,495,495,495,495,,,,,495,495,495,495,495,495,495,,,495,,,,,,',
'495,,,495,495,495,495,495,495,495,495,495,495,,495,495,,495,495,495',
',,,,,,,,,,,,,,,,,,,495,,,495,,,495,,,,,495,,,,495,,,,,,,,495,,,,,495',
'495,495,495,495,495,,,,495,495,,,,,,,495,495,493,493,493,,493,495,495',
',493,493,,,,493,,493,493,493,493,493,493,493,,,,,493,493,493,493,493',
'493,493,,,493,,,,,,,493,,,493,493,493,493,493,493,493,493,493,493,,493',
'493,,,,493,,,,,,,,,,,,,,,,,,,,493,,,493,,,493,,,,,,,,,,,,,,,,,,,,,,493',
'493,493,493,493,493,,,,493,493,,,483,483,483,,483,493,,,483,483,,493',
'493,483,,483,483,483,483,483,483,483,,,,,483,483,483,483,483,483,483',
',,483,,,,,,,483,,,483,483,483,483,483,483,483,483,483,483,,483,483,',
'483,483,483,,,,,,,,,,,,,,,,,,,,483,,,483,,483,483,,,,,,,483,,483,,,',
',,,,483,,,,,483,483,483,483,483,483,,,,483,483,,,594,594,594,,594,483',
',,594,594,,483,483,594,,594,594,594,594,594,594,594,,,,,594,594,594',
'594,594,594,594,,,594,,,,,,,594,,,594,594,594,594,594,594,594,594,594',
'594,,594,594,,594,594,594,,,,,,,,,,,,,,,,,,,,594,,,594,,,594,,,,,594',
',,,594,,,,,,,,594,,,,,594,594,594,594,594,594,,470,,594,594,,,,470,470',
'470,,594,470,470,470,,470,594,594,,,,,,,,470,,,,,,,,,470,470,,470,470',
'470,470,470,,,,,,,,,,,,473,,,,,,,473,473,473,,,473,473,473,,473,,,,',
'470,,,,,473,,470,,,,,470,470,473,473,,473,473,473,473,473,,,,,,,,,,',
',,470,,,,,,,,,,,,,470,,470,,,470,,473,,,,,,,473,,,,,473,473,,,,,,,,',
',,,,,,,,,,,,473,,,,,,,,,,,,,473,,473,,,473,394,394,394,394,394,394,394',
'394,394,394,394,394,394,394,394,394,394,394,394,394,394,394,394,394',
',,394,394,394,394,394,394,394,394,394,394,394,394,394,394,394,394,394',
'394,394,394,394,394,394,,,394,,,,,,,,394,394,,394,394,394,394,394,394',
'394,,,394,,,,,394,394,394,394,,,,,,,,,,,,,394,394,,394,394,394,394,394',
'394,394,394,394,394,394,,,394,394,,,,,,,,,,394,7,7,7,7,7,7,7,7,7,7,7',
'7,7,7,7,7,7,7,7,7,7,7,7,7,,,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7',
'7,7,7,,,7,,,,,,,,7,7,,7,7,7,7,7,7,7,,,7,,,,,7,7,7,7,,,,,,,,,,,,,7,7',
',7,7,7,7,7,7,7,7,7,7,7,,,7,7,,,,,,,,,,7,6,6,6,6,6,6,6,6,6,6,6,6,6,6',
'6,6,6,6,6,6,6,6,6,6,,,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6',
'6,,6,,,,,,,,6,6,,6,6,6,6,6,6,6,,,6,,,,,6,6,6,6,,,,,,,,,,,,,6,6,,6,6',
'6,6,6,6,6,6,6,6,6,,,6,6,,,,,,,,,,6,390,390,390,390,390,390,390,390,390',
'390,390,390,390,390,390,390,390,390,390,390,390,390,390,390,,,390,390',
'390,390,390,390,390,390,390,390,390,390,390,390,390,390,390,390,390',
'390,390,390,390,,,390,,,,,,,,390,390,,390,390,390,390,390,390,390,,',
'390,,,,,390,390,390,390,,,,,,,,,,,,,390,390,,390,390,390,390,390,390',
'390,390,390,390,390,,,390,390,,,,,,,,,,390,79,79,79,79,79,79,79,79,79',
'79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,,,79,79,79,79,79,79,79',
'79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,,,,,,,79',
'79,,79,79,79,79,79,79,79,,,79,,,,,79,79,79,79,,,,,,,,,,,,,79,79,,79',
'79,79,79,79,79,79,79,79,79,79,,,79,715,715,715,715,715,715,715,715,715',
'715,715,715,715,715,715,715,715,715,715,715,715,715,715,715,,,715,715',
'715,715,715,715,715,715,715,715,715,715,715,715,715,715,715,715,715',
'715,715,715,715,,,715,,,,,,,,715,715,,715,715,715,715,715,715,715,,',
'715,,,,,715,715,715,715,,,,,,,,,,,,,715,715,,715,715,715,715,715,715',
'715,715,715,715,715,,,715,65,65,65,65,65,65,65,65,65,65,65,65,65,65',
'65,65,65,65,65,65,65,65,65,65,,,65,65,65,65,65,65,65,65,65,65,65,65',
'65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,,,,,,,65,65,,65,65,65,65',
'65,65,65,,,65,,,,,65,65,65,65,,,,,,65,,,,,,,65,65,,65,65,65,65,65,65',
'65,65,65,65,65,,,65,189,189,189,189,189,189,189,189,189,189,189,189',
'189,189,189,189,189,189,189,189,189,189,189,189,,,189,189,189,189,189',
'189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189',
'189,189,189,189,189,,,,,,,189,189,,189,189,189,189,189,189,189,,,189',
',,,,189,189,189,189,,,,,,,,,,,,,189,189,,189,189,189,189,189,189,189',
'189,189,189,189,634,634,189,,634,,,,,,,,634,634,,634,634,634,634,634',
'634,634,,,634,,,,,634,634,634,634,,,,,,,,,,,,,634,634,,634,634,634,634',
'634,634,634,634,634,634,634,508,508,634,,508,,,,,,,,508,508,,508,508',
'508,508,508,508,508,,,508,,,,,508,508,508,508,,,,,,,,,,,,,508,508,,508',
'508,508,508,508,508,508,508,508,508,508,199,199,508,,199,,,,,,,,199',
'199,,199,199,199,199,199,199,199,,,199,,,,,199,199,199,199,,,,,,,,,',
',,,199,199,,199,199,199,199,199,199,199,199,199,199,199,507,507,199',
',507,,,,,,,,507,507,,507,507,507,507,507,507,507,,,507,,,,,507,507,507',
'507,,,,,,507,,,,,,,507,507,,507,507,507,507,507,507,507,507,507,507',
'507,633,633,507,,633,,,,,,,,633,633,,633,633,633,633,633,633,633,,,633',
',,,,633,633,633,633,,,,,,,,,,,,,633,633,,633,633,633,633,633,633,633',
'633,633,633,633,771,771,633,,771,,,,,,,,771,771,,771,771,771,771,771',
'771,771,,,771,,,,,771,771,771,771,,,,,,,,,,,,,771,771,,771,771,771,771',
'771,771,771,771,771,771,771,887,887,771,,887,,,,,,,,887,887,,887,887',
'887,887,887,887,887,,,887,,,,,887,887,887,887,,,,,,887,,,,,,,887,887',
',887,887,887,887,887,887,887,887,887,887,887,261,261,887,,261,,,,,,',
',261,261,,261,261,261,261,261,261,261,,,261,,,,,261,261,261,261,,,,',
',,,,,,,,261,261,,261,261,261,261,261,261,261,261,261,261,261,260,260',
'261,,260,,,,,,,,260,260,,260,260,260,260,260,260,260,,,260,,,,,260,260',
'260,260,,,,,,,,,,,,,260,260,,260,260,260,260,260,260,260,260,260,260',
'260,425,425,260,,425,,,,,,,,425,425,,425,425,425,425,425,425,425,,,425',
',,,,425,425,425,425,,,,,,425,,,,,,,425,425,,425,425,425,425,425,425',
'425,425,425,425,425,426,426,425,,426,,,,,,,,426,426,,426,426,426,426',
'426,426,426,,,426,,,,,426,426,426,426,,,,,,,,,,,,,426,426,,426,426,426',
'426,426,426,426,426,426,426,426,697,697,426,,697,,,,,,,,697,697,,697',
'697,697,697,697,697,697,,,697,,,,,697,697,697,697,,,,,,,,,,,,,697,697',
',697,697,697,697,697,697,697,697,697,697,697,496,496,697,,496,,,,,,',
',496,496,,496,496,496,496,496,496,496,,,496,,,,,496,496,496,496,,,,',
',496,,,,,,,496,496,,496,496,496,496,496,496,496,496,496,496,496,699',
'699,496,,699,,,,,,,,699,699,,699,699,699,699,699,699,699,,,699,,,,,699',
'699,699,699,,,,,,699,,,,,,,699,699,,699,699,699,699,699,699,699,699',
'699,699,699,888,888,699,,888,,,,,,,,888,888,,888,888,888,888,888,888',
'888,,,888,,,,,888,888,888,888,,,,,,,,,,,,,888,888,,888,888,888,888,888',
'888,888,888,888,888,888,198,198,888,,198,,,,,,,,198,198,,198,198,198',
'198,198,198,198,,,198,,,,,198,198,198,198,,,,,,198,,,,,,,198,198,,198',
'198,198,198,198,198,198,198,198,198,198,497,497,198,,497,,,,,,,,497',
'497,,497,497,497,497,497,497,497,,,497,,,,,497,497,497,497,,,,,,,,,',
',,,497,497,,497,497,497,497,497,497,497,497,497,497,497,,,497' ]
        racc_action_check = arr = ::Array.new(22178, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_action_pointer = [
    -2,  1179,   nil,   262,   nil,  1071, 20497, 20377,  1050,  1042,
  1014,   975,  1014,   321,   565,   571,   nil,  1687,  1809,  2431,
  1013,   nil,  2175,  2303,  2431,   339,    -1,  2773,  2901,   nil,
  3027,  3149,  3271,   nil,   902,   246,   931,   539,  3893,  4015,
  4137,   823,   242,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
  4473,   nil,  4606,  4728,  4856,    37,  3284,  5228,  5350,   nil,
   nil,  5472,  5594,   819,   nil, 20955,   nil,   nil,   nil,   nil,
   nil,   -48,   nil,   nil,   nil,   nil,   nil,   703,   700, 20737,
   nil,   nil,   nil,  6448,   nil,   nil,  6576,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   821,   nil,  6826,   nil,
   nil,   nil,  6948,  7070,  7192,  7314,  7436,   nil,   657,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil, 21064,
   670,   nil,  7924,  8046,  8168,  8290,  8412,  8534, 22008, 21241,
  8906,  9028,  9150,   nil,   344,   112,   658,   -44,   556,   597,
 10010, 10132,   nil,   nil, 10254,   369, 10498, 10620, 10742, 10864,
 10986, 11108, 11230, 11352, 11474, 11596, 11718, 11840, 11962, 12084,
 12206, 12328, 12450, 12572, 12694, 12816, 12938, 13060, 13182, 13304,
 13426, 13548,   nil,   nil,   nil,  1687,   nil,   162,    75,   nil,
 14042,   103, 14286,   nil,   nil,   nil,   nil, 14408,   nil,   nil,
 21595, 21536,   974, 14896, 15024,   nil,   nil,   nil,   nil,   nil,
   nil,   nil, 15152,   335, 15408,   558,   610,   599, 15896, 16024,
   477,   295,   673,   315,   694,   664,   121,   nil,   720,   309,
   nil, 17251,   nil,   169,   754,   769,   342,   nil,   817,   nil,
 17989,   nil, 18111,    34,   nil,   808,   233,   287,   847,   409,
   830,   nil,   405,   nil,   nil,   127, 13683,   nil,   nil,   nil,
   899,   948,   nil,   972,  1039,   nil,   nil,   nil,   nil,   nil,
   nil,  2214,   nil,   nil,   nil,   924,   nil,   nil,   916,   644,
    70,    62, 17495, 14164,   273,    63,   662,   784,  5838,   nil,
  4381,    -4,   312,   412,   184,   218,   310,   140,    46,   nil,
    16,   nil,   nil,  7680,   nil,   -51,   nil,   231,   nil,   -24,
  1061,   234,   nil,  1037,   -43,   nil,   180,   nil,   nil,   nil,
   nil,   nil,   nil,  1321,   nil,   nil,   nil,   nil,   nil,   nil,
 20617,   nil,   nil,   nil, 20257,   986,   978,   nil,   nil,   571,
   nil,   120,   920,   nil,   903,   nil,   nil,  2303,   885,   408,
   397,   238,   nil,   nil,   nil,   366,   818,   444,   nil,   571,
  1193,   nil,  1809,   nil,   nil, 21654, 21713,  3399,    15,  6326,
  8784, 13792,   234,   nil,  4015,  3649,   942,   692,   629,   625,
   523,   292,  4377,  3145,  2677,  4606,  2724,  3267,  2854,  3893,
  3771,  3399,  3027,  3527,  4728,  1384,  1134,  4137,  4259,  1193,
   -47,   nil, 13914,   nil,   nil, 17617,   nil, 17007,   nil,   nil,
 20077,   nil,   nil, 20131,   -50,   nil,   991,  1066,   306,  1056,
  1140,   nil,   nil, 19837,   156,    72,  1067,   nil,  1065,  1006,
   nil,   nil,   981, 19715,   995, 19587, 21831, 22067,   424,   971,
   nil,   nil,   909,   nil, 19465, 19343, 19221, 21300, 21182,  2559,
 19099,   956,   953,   859,   nil,   nil, 18971,   nil,   nil, 18843,
   nil, 18721,   nil,   nil,   nil,   nil, 18599, 18477,   843,   nil,
   767,   nil,   nil, 18355,  4536,   nil,   487,   nil,   nil,   841,
   nil,  2342,   nil,   783,   686,   nil,   nil, 18233,   894,   nil,
   nil, 17867,   -19,   103,   843,   847, 17745,   nil,   nil,    -2,
   777,   nil,   338,   nil,    33, 17373,   nil,  2835,   nil,   nil,
   nil,     3,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   164,   nil,   nil,   nil,   691,   nil,   nil,   nil,
   nil,   nil, 17129,   684, 19959,   164, 16885, 16763,   691,   nil,
   nil,   nil, 16641,   641,   nil, 16519,   130,   202, 16392, 16264,
   634,   699,   nil, 16146,   nil,  3162,   nil, 15774,   598,   nil,
   630, 15652,   nil,   610,   nil,   nil,   nil,   nil,   nil, 15530,
   nil,   540,   413, 21359, 21123, 15280,   821,   211,   nil,   nil,
   228, 14774, 14652,   nil,   -25, 14530,   -88,   nil,    -1,   135,
    92,   185,   196,   282,   245, 13670,  1565,   319,   335,   207,
   413, 10376,   nil,   nil,    40,   nil,   414,   533,   nil,   nil,
   436,   nil,   445,   193,   557,   487,   489,   nil,   nil,   529,
  2470,   nil,   397,   nil,   636,   nil,   nil,   nil,   nil,   nil,
   644,   nil,   650,  9888,  9766,   137,   nil, 21772,  9638, 21890,
   nil,   nil,  9516,   458,   -25,  9394,  9272,  3201,   232,   634,
   649,   652,   nil,   646,   nil, 20846,   695,   509,  8662,   nil,
   nil,   nil,  2175,   665,  7802,  7558,   nil,  1071,   nil,  1321,
   nil,   nil,  1443,   nil,  1931,  6704,  6204,  6082,   107,  2053,
   nil,   732,   836,   nil,   nil,   737,   nil,   nil,   760,   761,
   340,   830,  5960,   nil,   751,   858,   753,   210,   nil,   nil,
   888,   nil,  5716,   775,   818,   nil,   nil,   nil,   nil,   nil,
   nil, 21418,   nil,   441,   nil,   nil,   nil,   nil,   936,   900,
   nil,   nil,   908,  5106,  4984,   nil,   nil,    77,    39,   311,
   nil,   853,   852,  4259,   337,   nil,   nil,   939,   949,   839,
   nil,  5607,   nil,   817,   nil,   nil,   499,  3771,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   865,   850,   nil,   949,  3649,
   nil,   nil,   nil,   903,   884,   nil,   nil,   nil,  3527,   nil,
   nil,    83,  2681,   nil,   944,   908,   nil,   nil,  2559,   nil,
  1027,  1030,  2053,  1931,   nil,   nil,  1048,   nil,  1565,   nil,
   nil,   971,   941,  -113,   nil,   943,   939,   nil,   nil,  5851,
   nil,   nil,   nil,  1443,   nil,  1321,   343,   420,  1043,   421,
   nil,   nil,    -7,   nil,   nil,   491,  1071,   nil,  1119,   nil,
   567,   nil,   nil,   nil,   949,  1142,   821, 21477, 21949,   422,
   699,   nil,   nil,   nil,  1150,   nil,  1036,  1153,   nil,  1072,
    89,    63,    71,   475,   642,   nil,   nil,   nil,   497,   nil ]

racc_action_default = [
  -519,  -521,    -1,  -508,    -4,    -5,  -521,  -521,  -521,  -521,
  -521,  -521,  -521,  -521,  -262,   -31,   -32,  -521,  -521,   -37,
   -39,   -40,  -273,  -312,  -313,   -44,  -240,  -240,  -240,   -56,
  -519,   -60,   -67,   -69,  -521,  -439,  -521,  -521,  -521,  -521,
  -521,  -510,  -220,  -255,  -256,  -257,  -258,  -259,  -260,  -261,
  -498,  -264,  -521,  -519,  -519,  -281,  -519,  -521,  -521,  -286,
  -289,  -508,  -521,  -298,  -304,  -521,  -314,  -315,  -384,  -385,
  -386,  -387,  -388,  -519,  -391,  -519,  -519,  -519,  -519,  -519,
  -418,  -424,  -425,  -428,  -429,  -430,  -431,  -432,  -433,  -434,
  -435,  -436,  -437,  -438,  -441,  -442,  -521,    -3,  -509,  -515,
  -516,  -517,  -521,  -521,  -521,  -521,  -521,    -7,  -521,   -95,
   -96,   -97,   -98,   -99,  -100,  -101,  -104,  -105,  -106,  -107,
  -108,  -109,  -110,  -111,  -112,  -113,  -114,  -115,  -116,  -117,
  -118,  -119,  -120,  -121,  -122,  -123,  -124,  -125,  -126,  -127,
  -128,  -129,  -130,  -131,  -132,  -133,  -134,  -135,  -136,  -137,
  -138,  -139,  -140,  -141,  -142,  -143,  -144,  -145,  -146,  -147,
  -148,  -149,  -150,  -151,  -152,  -153,  -154,  -155,  -156,  -157,
  -158,  -159,  -160,  -161,  -162,  -163,  -164,  -165,  -166,  -167,
  -168,  -169,  -170,  -171,  -172,  -173,  -174,  -175,  -176,  -521,
   -12,  -102,  -519,  -519,  -521,  -521,  -521,  -519,  -521,  -521,
  -521,  -521,  -521,   -35,  -521,  -439,  -521,  -262,  -521,  -521,
  -519,  -521,   -36,  -212,  -521,  -521,  -521,  -521,  -521,  -521,
  -521,  -521,  -521,  -521,  -521,  -521,  -521,  -521,  -521,  -521,
  -521,  -521,  -521,  -521,  -521,  -521,  -521,  -521,  -521,  -521,
  -521,  -521,  -355,  -357,   -41,  -221,  -233,  -520,  -520,  -237,
  -521,  -248,  -521,  -273,  -312,  -313,  -492,  -521,   -42,   -43,
  -521,  -521,   -48,  -519,  -521,  -280,  -360,  -367,  -369,   -54,
  -365,   -55,  -521,   -56,  -519,  -521,  -521,   -61,   -64,  -519,
   -75,  -521,  -521,   -82,  -276,  -510,  -521,  -316,  -366,  -521,
   -66,  -521,   -71,  -269,  -426,  -427,  -521,  -197,  -198,  -213,
  -521,  -511,  -519,  -510,  -222,  -510,  -512,  -512,  -521,  -512,
  -521,  -489,  -512,  -282,  -283,  -521,  -521,  -327,  -328,  -336,
  -519,  -461,  -343,  -519,  -519,  -354,  -457,  -458,  -459,  -460,
  -462,  -521,  -473,  -478,  -479,  -481,  -482,  -483,  -521,   -38,
  -521,  -521,  -521,  -521,  -508,  -521,  -509,  -521,  -521,  -301,
  -521,   -95,   -96,  -132,  -133,  -149,  -154,  -161,  -164,  -307,
  -521,  -439,  -487,  -521,  -389,  -521,  -404,  -521,  -406,  -521,
  -521,  -521,  -396,  -521,  -521,  -402,  -521,  -417,  -419,  -420,
  -421,  -422,   910,    -6,  -518,   -13,   -14,   -15,   -16,   -17,
  -521,    -9,   -10,   -11,  -521,  -521,  -521,   -20,   -28,  -177,
  -248,  -521,  -521,   -21,   -29,   -30,   -22,  -179,  -521,  -499,
  -500,  -240,  -362,  -501,  -502,  -499,  -240,  -500,  -364,  -504,
  -505,   -27,  -186,   -33,   -34,  -521,  -521,  -519,  -269,  -521,
  -521,  -521,  -521,  -279,  -187,  -188,  -189,  -190,  -191,  -192,
  -193,  -194,  -199,  -200,  -201,  -202,  -203,  -204,  -205,  -206,
  -207,  -208,  -209,  -210,  -211,  -214,  -215,  -216,  -217,  -521,
  -519,  -234,  -521,  -247,  -235,  -521,  -245,  -521,  -249,  -495,
  -240,  -499,  -500,  -240,  -519,   -49,  -521,  -510,  -510,  -520,
  -233,  -241,  -242,  -521,  -519,  -519,  -521,  -275,  -521,   -57,
  -267,   -72,   -62,  -521,  -521,  -519,  -521,  -521,   -81,  -521,
  -426,  -427,   -68,   -73,  -521,  -521,  -521,  -521,  -521,  -218,
  -521,  -376,  -521,  -521,  -223,  -224,  -514,  -513,  -226,  -514,
  -271,  -514,  -491,  -272,  -490,  -324,  -519,  -519,  -521,  -326,
  -521,  -345,  -352,  -521,  -349,  -350,  -521,  -353,  -461,  -521,
  -464,  -521,  -466,  -468,  -472,  -480,  -484,  -519,  -317,  -318,
  -319,  -519,  -521,  -521,  -521,  -521,  -519,  -371,  -295,   -91,
  -521,   -93,  -521,  -262,  -521,  -521,  -305,  -456,  -309,  -506,
  -507,  -510,  -390,  -405,  -408,  -409,  -411,  -392,  -407,  -393,
  -394,  -395,  -521,  -398,  -400,  -401,  -521,  -423,    -8,  -103,
   -18,   -19,  -521,  -254,  -521,  -270,  -521,  -521,   -50,  -231,
  -232,  -361,  -521,   -52,  -363,  -521,  -499,  -500,  -499,  -500,
  -521,  -177,  -278,  -521,  -339,  -521,  -341,  -519,  -520,  -246,
  -250,  -521,  -493,  -521,  -494,   -45,  -358,   -46,  -359,  -519,
  -227,  -521,  -521,  -521,  -521,  -521,   -37,  -521,  -239,  -243,
  -521,  -519,  -519,  -274,   -57,  -521,   -65,   -70,  -521,  -499,
  -500,  -519,  -503,   -80,  -521,  -521,  -185,  -195,  -196,  -521,
  -519,  -519,  -265,  -266,  -512,  -250,  -521,  -521,  -325,  -337,
  -521,  -344,  -519,  -338,  -521,  -519,  -519,  -474,  -463,  -521,
  -521,  -471,  -519,  -320,  -519,  -287,  -321,  -322,  -323,  -290,
  -521,  -293,  -521,  -521,  -521,   -91,   -92,  -521,  -519,  -521,
  -299,  -443,  -521,  -521,  -521,  -519,  -519,  -456,  -521,  -486,
  -486,  -486,  -455,  -461,  -476,  -521,  -521,  -521,  -519,  -397,
  -399,  -403,  -178,  -252,  -521,  -521,   -24,  -181,   -25,  -182,
   -51,   -26,  -183,   -53,  -184,  -521,  -521,  -521,  -270,  -219,
  -340,  -521,  -521,  -236,  -251,  -521,  -228,  -229,  -519,  -519,
  -510,  -521,  -521,  -244,  -521,  -521,   -63,   -76,   -74,  -277,
  -519,  -334,  -519,  -377,  -519,  -378,  -379,  -225,  -329,  -330,
  -351,  -521,  -269,  -521,  -347,  -348,  -465,  -467,  -470,  -521,
  -331,  -332,  -521,  -519,  -519,  -292,  -294,  -521,  -521,   -91,
   -94,  -503,  -521,  -519,  -521,  -445,  -302,  -521,  -521,  -510,
  -447,  -521,  -451,  -521,  -453,  -454,  -521,  -521,  -310,  -488,
  -410,  -413,  -414,  -415,  -416,  -521,  -253,   -23,  -180,  -521,
  -342,  -356,   -47,  -521,  -520,  -368,  -370,    -2,  -519,  -383,
  -335,  -521,  -521,  -381,  -268,  -519,  -469,  -284,  -521,  -285,
  -521,  -521,  -521,  -519,  -296,  -270,  -521,  -444,  -519,  -306,
  -308,  -521,  -486,  -486,  -485,  -486,  -521,  -477,  -475,  -456,
  -412,  -230,  -238,  -521,  -382,  -519,   -83,  -521,  -521,   -90,
  -380,  -346,  -521,  -288,  -291,  -519,  -519,  -300,  -521,  -446,
  -521,  -449,  -450,  -452,  -519,  -376,  -519,  -521,  -521,   -89,
  -519,  -372,  -373,  -374,  -521,  -303,  -486,  -521,  -375,  -521,
  -499,  -500,  -503,   -88,  -519,  -297,  -448,  -311,   -84,  -333 ]

clist = [
'12,502,2,475,325,246,246,246,359,212,540,340,341,300,464,344,308,478',
'512,97,307,312,378,287,287,317,660,547,551,275,12,277,276,398,405,539',
'305,706,626,709,555,628,290,107,191,262,269,271,112,112,115,115,619',
'696,287,619,385,386,387,388,669,857,532,685,689,535,537,779,677,760',
'573,622,617,638,640,101,583,345,247,247,247,515,518,564,522,566,629',
'524,273,342,783,672,383,782,343,676,641,642,12,784,389,367,369,694,876',
'376,12,112,348,793,309,565,848,13,350,244,258,259,266,270,705,112,567',
'715,859,622,315,525,711,313,204,204,378,101,838,204,204,204,857,675',
'310,362,481,13,281,281,302,700,568,460,484,485,891,693,764,831,364,365',
'360,371,408,582,390,374,307,204,204,810,717,718,204,204,799,852,204',
'281,347,190,98,709,305,314,777,827,1,397,403,406,,,790,421,12,12,395',
'396,,,411,416,,,,646,,,,,,712,12,13,276,,,204,204,204,204,13,540,,,681',
',619,,,,,,112,,,,,,,,,,420,,,,679,480,246,,690,402,402,,,,246,,499,',
',470,473,,,325,802,804,805,711,,287,,,488,12,513,276,514,494,12,,276',
',287,892,528,203,720,492,909,,503,,,,10,552,553,,844,,,12,669,,13,13',
'204,204,204,204,,,204,204,204,626,628,,479,247,303,,13,204,10,339,339',
'247,884,339,709,273,,835,677,,273,,730,287,,287,,733,,,,,712,,,,,,756',
'477,482,,540,554,,853,,855,486,,,,,,339,339,339,339,35,204,204,266,',
'270,,,,743,204,,13,,750,610,281,13,10,307,,,,,,898,10,,,281,35,280,280',
'881,882,305,883,,,770,13,101,774,775,,711,797,798,,,411,416,588,,618',
'598,589,112,,115,603,112,280,115,767,361,896,,854,,854,,,854,631,632',
',906,619,,204,204,836,648,,,562,307,562,,,,,420,,423,424,,35,843,,204',
',305,,432,35,,664,,287,,10,10,625,,,627,503,,,651,,,,765,712,,600,,10',
',651,604,846,,,,,,,,,865,,,,854,,,287,12,12,666,667,,,,,,,,,,420,204',
',,716,,,,12,,682,420,12,,684,,,12,,692,890,,,600,325,878,600,,35,35',
'10,893,,,,10,,,871,,,,,,,741,35,,726,728,,862,,,731,,,204,10,,,897,',
'618,,,,281,,204,,,339,339,,,,,12,751,742,,,,204,686,686,,,,12,,745,571',
'748,749,,701,287,,13,13,12,12,754,755,503,673,287,788,35,,,,280,35,758',
'794,,808,,13,792,,,13,307,280,,,13,,,,,,,,35,204,,,305,,,,,,,,,,,,,',
',,,,651,,,,,,12,12,,,204,204,,,,,204,817,402,12,,815,,823,361,,361,',
',,,13,,,,,,,,,420,,,13,600,,,604,,204,787,,,303,,13,13,,112,281,,,,12',
',830,14,,,281,,,851,,,,795,796,,,659,800,,,12,12,840,841,,,,,,872,12',
',14,283,283,,,,,,,,,,204,824,,,204,,420,,204,,,13,13,,10,10,,287,,,283',
'12,,864,13,,,704,,,,204,,600,600,10,12,,875,10,,12,899,,10,,307,,,,',
',,686,,,14,,12,847,885,280,305,,14,,,,13,12,,894,,,,,,12,,,651,,,12',
',904,,,,13,13,,,,35,35,,,,13,,361,,,,10,,,,,,,,,,35,,10,,35,,,,420,35',
',,,,10,10,,,,13,,,,867,,,,,,204,,,,,13,14,14,,,13,,339,,,,,,,,339,,',
',14,,,13,,,,,,,,,,,13,,,35,,,,,13,,204,10,10,,13,35,,,,,,,,,10,,,35',
'35,,,280,,,,,,,,,,280,,,,,,,,,14,,,,283,14,,,,,,,,,,,,283,10,,,,,,,',
',,14,,,,,,,,,,,10,10,35,35,,,,,,,10,,,,,35,,,,,,,,,,,,,,339,,,,,,563',
',563,,,,,,,,10,,,,870,,,,,,,,,,35,10,,,213,,10,,245,245,245,,,,,,,,',
',,35,35,10,297,298,299,,,,,35,,,10,,,,,245,245,,10,,,,,,10,,,,,,,,,',
',,,,,,,,35,400,404,,866,,,,,,,,,,,35,,,,,35,,,,,,,,,,,,,,,,,35,,,,,',
',,,,,35,,,,,,,283,35,466,,468,,,35,,469,,,,,,,,,,,,,,,,,,,,,,,,14,14',
',,,,,563,,,,,,,,304,311,,318,,,14,,,,14,399,245,407,245,14,,422,,,366',
',368,368,372,375,368,,,,,213,,434,435,436,437,438,439,440,441,442,443',
'444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,,,,',
',,,,245,,245,,,,,245,,14,,,,245,245,,,,,,,14,245,,,,,,,,,,,14,14,,,283',
'593,,,,,,,,,283,,,509,,,,,,,,,,,,,,,,,,,,,,,,,,,304,,,,,,,,,,,,,,,,',
',,,14,14,620,,,623,,624,,,,,814,14,,,,,,,,,,637,,,,,,,,,,,,,,,,,,,,',
',,476,,,,,,,,245,,620,14,,623,,665,,,,,,,,,,,,,,,,,14,14,245,,422,611',
'407,,,,14,,,,,,,,,,,,,,,531,,,531,531,,,,,,,,245,,,245,,245,,,14,,,',
'869,,,,,,,723,,636,,14,,,,,14,,,,,245,,,,,,,,,656,657,658,14,744,,,',
',,,,245,,14,245,,245,620,,,,14,,,,,,14,,,,,,,,,599,,,,,,,763,,,,,,,',
',304,,,,,,,,,,,,,,,,,,,,,,,400,,,,,,,,,,614,,722,,245,,727,729,,,599',
',732,599,614,734,,,,,,816,,739,614,614,,,,,,245,,,,304,,,,,,,,,,245',
',,,400,,,,,,,,,,,,,,,,,,,,,,245,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,245,858',
',,,245,,,,,,,,,,,,286,286,,,,,,286,286,286,,,,,245,818,,,,665,,,,286',
',727,729,732,,,,286,,,,,,,,,665,,245,,,,,,,,,,,,,,,,,,,,,,,,,,,,,599',
',,,,,,,,761,766,,,,,,,,,,,531,,,531,531,245,,,,,761,,761,,,,,818,,,',
',,,,,304,,,,,,,,,,,,,,245,,,,,,,,,,,,,,,,,,,,,245,,,,,,,,,,,,,,,599',
'599,,,,,,,245,,,,829,,,286,833,286,286,286,286,286,286,286,286,286,286',
'286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,,,,',
',,,,286,,286,,,,,286,,,,,,,,,,,,,,,,,,,,,286,,,,,,,,531,,,,,286,,,,',
',,,,286,,,,,,,,,,,,,,,,,,,,,,,,,,761,,,,,,,,,,,304,,,,,,,,,,,286,,286',
',,,,761,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,286,,,,,,,,,,,',
',,,,,,,,,,,,,,,,286,286,286,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,286,,,286',
',286,,,,,,,,,,,,,,,,,,,,,,,,,,286,,,,,,,,,,,286,286,286,,,,,,,,,,286',
',,286,,286,,,,,,,,,,,,286,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,286,,286,,,,,,,,,,,286,,,,,,,,286,,,,,,,,286,,,,,,,',
',,,,,,,,,,,,,,,,286,,,,,,,,,,286,,,,,,286,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,286,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,286,,,,,,,,,,,286,286,286,,,',
',,,,,,,,,,,286,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',286,,,,,,,,,,,,286,,,,,,,,,,,,,286,,,,,,,,,,286,,,,,,,,,,,,,,,,,,,',
',286' ]
        racc_goto_table = arr = ::Array.new(2666, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'18,41,2,33,104,27,27,27,45,16,135,14,14,49,56,14,20,30,3,8,53,53,45',
'50,50,100,4,73,73,37,18,39,2,22,22,137,27,79,55,107,76,55,40,12,12,32',
'32,32,46,46,48,48,57,43,50,57,14,14,14,14,103,140,106,75,75,106,106',
'74,136,5,126,143,34,57,58,78,126,8,51,51,51,52,52,44,52,44,34,52,36',
'83,84,108,10,5,85,108,34,34,18,86,10,123,123,87,88,123,18,46,89,90,51',
'91,92,19,93,29,29,29,54,54,94,46,95,96,97,143,98,99,108,70,19,19,45',
'78,101,19,19,19,140,102,69,68,59,19,19,19,82,77,81,110,112,113,114,115',
'116,117,121,122,80,124,20,125,25,127,53,19,19,128,129,130,19,19,132',
'133,19,19,17,13,11,107,27,72,138,6,1,16,16,16,,,43,16,18,18,2,2,,,31',
'31,,,,41,,,,,,105,18,19,2,,,19,19,19,19,19,135,,,135,,57,,,,,,46,,,',
',,,,,,46,,,,137,27,27,,76,51,51,,,,27,,49,,,31,31,,,104,134,134,134',
'108,,50,,,37,18,49,2,49,37,18,,2,,50,5,100,24,126,40,74,,39,,,,15,14',
'14,,75,,,18,103,,19,19,19,19,19,19,,,19,19,19,55,55,,51,51,24,,19,19',
'15,24,24,51,79,24,107,36,,108,136,,36,,33,50,,50,,33,,,,,105,,,,,,41',
'29,29,,135,8,,108,,108,29,,,,,,24,24,24,24,42,19,19,54,,54,,,,56,19',
',19,,30,20,19,19,15,53,,,,,,4,15,,,19,42,42,42,134,134,27,134,,,106',
'19,78,106,106,,108,3,3,,,31,31,12,,53,32,12,46,,48,32,46,42,48,52,42',
'108,,105,,105,,,105,49,49,,134,57,,19,19,135,20,,,19,53,19,,,,,46,,24',
'24,,42,73,,19,,27,,24,42,,53,,50,,15,15,32,,,32,39,,,31,,,,22,105,,54',
',15,,31,54,3,,,,,,,,,73,,,,105,,,50,18,18,2,2,,,,,,,,,,46,19,,,49,,',
',18,,2,46,18,,2,,,18,,2,73,,,54,104,3,54,,42,42,15,76,,,,15,,,106,,',
',,,,100,42,,16,16,,56,,,16,,,19,15,,,3,,53,,,,19,,19,,,24,24,,,,,18',
'27,2,,,,19,78,78,,,,18,,2,24,31,31,,78,50,,19,19,18,18,2,2,39,19,50',
'14,42,,,,42,42,39,14,,45,,19,20,,,19,53,42,,,19,,,,,,,,42,19,,,27,,',
',,,,,,,,,,,,,,,31,,,,,,18,18,,,19,19,,,,,19,16,51,18,,2,,49,42,,42,',
',,,19,,,,,,,,,46,,,19,54,,,54,,19,51,,,24,,19,19,,46,19,,,,18,,2,21',
',,19,,,49,,,,78,78,,,24,78,,,18,18,2,2,,,,,,14,18,,21,21,21,,,,,,,,',
',19,51,,,19,,46,,19,,,19,19,,15,15,,50,,,21,18,,2,19,,,24,,,,19,,54',
'54,15,18,,2,15,,18,20,,15,,53,,,,,,,78,,,21,,18,78,2,42,27,,21,,,,19',
'18,,2,,,,,,18,,,31,,,18,,2,,,,19,19,,,,42,42,,,,19,,42,,,,15,,,,,,,',
',,42,,15,,42,,,,46,42,,,,,15,15,,,,19,,,,19,,,,,,19,,,,,19,21,21,,,19',
',24,,,,,,,,24,,,,21,,,19,,,,,,,,,,,19,,,42,,,,,19,,19,15,15,,19,42,',
',,,,,,,15,,,42,42,,,42,,,,,,,,,,42,,,,,,,,,21,,,,21,21,,,,,,,,,,,,21',
'15,,,,,,,,,,21,,,,,,,,,,,15,15,42,42,,,,,,,15,,,,,42,,,,,,,,,,,,,,24',
',,,,,21,,21,,,,,,,,15,,,,15,,,,,,,,,,42,15,,,26,,15,,26,26,26,,,,,,',
',,,,42,42,15,26,26,26,,,,,42,,,15,,,,,26,26,,15,,,,,,15,,,,,,,,,,,,',
',,,,,42,23,23,,42,,,,,,,,,,,42,,,,,42,,,,,,,,,,,,,,,,,42,,,,,,,,,,,42',
',,,,,,21,42,23,,23,,,42,,23,,,,,,,,,,,,,,,,,,,,,,,,21,21,,,,,,21,,,',
',,,,9,9,,9,,,21,,,,21,26,26,26,26,21,,26,,,9,,9,9,9,9,9,,,,,26,,26,26',
'26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26',
'26,,,,,,,,,26,,26,,,,,26,,21,,,,26,26,,,,,,,21,26,,,,,,,,,,,21,21,,',
'21,23,,,,,,,,,21,,,26,,,,,,,,,,,,,,,,,,,,,,,,,,,9,,,,,,,,,,,,,,,,,,',
',21,21,23,,,23,,23,,,,,21,21,,,,,,,,,,23,,,,,,,,,,,,,,,,,,,,,,,9,,,',
',,,,26,,23,21,,23,,23,,,,,,,,,,,,,,,,,21,21,26,,26,26,26,,,,21,,,,,',
',,,,,,,,,9,,,9,9,,,,,,,,26,,,26,,26,,,21,,,,21,,,,,,,23,,26,,21,,,,',
'21,,,,,26,,,,,,,,,26,26,26,21,23,,,,,,,,26,,21,26,,26,23,,,,21,,,,,',
'21,,,,,,,,,9,,,,,,,23,,,,,,,,,9,,,,,,,,,,,,,,,,,,,,,,,23,,,,,,,,,,9',
',26,,26,,26,26,,,9,,26,9,9,26,,,,,,23,,26,9,9,,,,,,26,,,,9,,,,,,,,,',
'26,,,,23,,,,,,,,,,,,,,,,,,,,,,26,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,26,23',
',,,26,,,,,,,,,,,,35,35,,,,,,35,35,35,,,,,26,26,,,,23,,,,35,,26,26,26',
',,,35,,,,,,,,,23,,26,,,,,,,,,,,,,,,,,,,,,,,,,,,,,9,,,,,,,,,9,9,,,,,',
',,,,,9,,,9,9,26,,,,,9,,9,,,,,26,,,,,,,,,9,,,,,,,,,,,,,,26,,,,,,,,,,',
',,,,,,,,,,26,,,,,,,,,,,,,,,9,9,,,,,,,26,,,,9,,,35,9,35,35,35,35,35,35',
'35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,,,,,,,,',
'35,,35,,,,,35,,,,,,,,,,,,,,,,,,,,,35,,,,,,,,9,,,,,35,,,,,,,,,35,,,,',
',,,,,,,,,,,,,,,,,,,,,9,,,,,,,,,,,9,,,,,,,,,,,35,,35,,,,,9,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,35,,,,,,,,,,,,,,,,,,,,,,,,,,,,35',
'35,35,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,35,,,35,,35,,,,,,,,,,,,,,,,,,,,',
',,,,,35,,,,,,,,,,,35,35,35,,,,,,,,,,35,,,35,,35,,,,,,,,,,,,35,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,35,,35,,,,,,,,,',
',35,,,,,,,,35,,,,,,,,35,,,,,,,,,,,,,,,,,,,,,,,,35,,,,,,,,,,35,,,,,,35',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,35,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,35,',
',,,,,,,,,35,35,35,,,,,,,,,,,,,,,35,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,35,,,,,,,,,,,,35,,,,,,,,,,,,,35,,,,,,,,,,35,,,',
',,,,,,,,,,,,,,,,,35' ]
        racc_goto_check = arr = ::Array.new(2666, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_goto_pointer = [
   nil,   184,     2,  -284,  -485,  -591,  -577,   nil,    16,  1253,
    -6,   175,    37,   170,   -46,   295,    -9,   114,     0,   113,
   -37,   765,  -161,  1010,   269,    55,  1123,   -17,   nil,    93,
  -246,     0,    19,  -259,  -388,  1802,    58,    -1,   nil,     0,
    10,  -290,   375,  -507,  -265,   -57,    42,   nil,    44,   -28,
    -8,    56,  -225,   -33,    92,  -432,  -234,  -410,  -409,  -122,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    76,    86,
    74,   nil,   125,  -313,  -615,  -489,  -305,  -417,    72,  -530,
    93,  -212,    95,    30,  -595,    34,  -590,  -455,  -740,    45,
  -591,  -238,  -684,    50,  -446,  -237,  -445,  -684,    70,  -188,
   -31,  -647,  -395,  -470,   -52,  -358,  -258,  -528,  -439,   nil,
   -93,   nil,  -117,  -117,  -723,  -404,  -507,  -609,   nil,   nil,
   nil,    85,    84,    26,    82,  -210,  -295,    85,  -550,  -407,
  -407,   nil,  -535,  -628,  -444,  -321,  -466,  -296,  -498,   nil,
  -742,   nil,   nil,  -394 ]

racc_goto_default = [
   nil,   nil,   511,   nil,   nil,   780,   nil,     3,   nil,     4,
     5,   346,   nil,   nil,   nil,   208,    16,    11,   209,   296,
   nil,   207,   nil,   251,    15,   nil,    19,    20,    21,   nil,
    25,   654,   nil,   nil,   nil,    26,    29,   nil,    31,    34,
    33,   nil,   205,   561,   nil,   114,   414,   113,    69,   nil,
    42,   306,   nil,   248,   412,   601,   461,   249,   nil,   nil,
   264,   463,    43,    44,    45,    46,    47,    48,    49,   nil,
   265,    55,   nil,   nil,   nil,   nil,   nil,   nil,   548,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   320,   319,   671,   322,   nil,   323,   324,   243,
   nil,   418,   nil,   nil,   nil,   nil,   nil,   nil,    68,    70,
    71,    72,   nil,   nil,   nil,   nil,   578,   nil,   nil,   nil,
   nil,   377,   708,   710,   nil,   330,   332,   nil,   542,   543,
   714,   335,   338,   256 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 138, :_reduce_1,
  4, 140, :_reduce_2,
  2, 139, :_reduce_3,
  1, 144, :_reduce_4,
  1, 144, :_reduce_5,
  3, 144, :_reduce_6,
  0, 162, :_reduce_7,
  4, 147, :_reduce_8,
  3, 147, :_reduce_9,
  3, 147, :_reduce_none,
  3, 147, :_reduce_11,
  2, 147, :_reduce_12,
  3, 147, :_reduce_13,
  3, 147, :_reduce_14,
  3, 147, :_reduce_15,
  3, 147, :_reduce_16,
  3, 147, :_reduce_17,
  4, 147, :_reduce_none,
  4, 147, :_reduce_none,
  3, 147, :_reduce_20,
  3, 147, :_reduce_21,
  3, 147, :_reduce_22,
  6, 147, :_reduce_none,
  5, 147, :_reduce_24,
  5, 147, :_reduce_none,
  5, 147, :_reduce_none,
  3, 147, :_reduce_none,
  3, 147, :_reduce_28,
  3, 147, :_reduce_29,
  3, 147, :_reduce_30,
  1, 147, :_reduce_none,
  1, 161, :_reduce_none,
  3, 161, :_reduce_33,
  3, 161, :_reduce_34,
  2, 161, :_reduce_35,
  2, 161, :_reduce_36,
  1, 161, :_reduce_none,
  1, 151, :_reduce_none,
  1, 153, :_reduce_none,
  1, 153, :_reduce_none,
  2, 153, :_reduce_41,
  2, 153, :_reduce_42,
  2, 153, :_reduce_43,
  1, 165, :_reduce_none,
  4, 165, :_reduce_none,
  4, 165, :_reduce_none,
  4, 170, :_reduce_none,
  2, 164, :_reduce_48,
  3, 164, :_reduce_none,
  4, 164, :_reduce_50,
  5, 164, :_reduce_none,
  4, 164, :_reduce_52,
  5, 164, :_reduce_none,
  2, 164, :_reduce_54,
  2, 164, :_reduce_55,
  1, 154, :_reduce_56,
  3, 154, :_reduce_57,
  1, 174, :_reduce_58,
  3, 174, :_reduce_59,
  1, 173, :_reduce_60,
  2, 173, :_reduce_61,
  3, 173, :_reduce_62,
  5, 173, :_reduce_none,
  2, 173, :_reduce_64,
  4, 173, :_reduce_none,
  2, 173, :_reduce_66,
  1, 173, :_reduce_67,
  3, 173, :_reduce_none,
  1, 176, :_reduce_69,
  3, 176, :_reduce_70,
  2, 175, :_reduce_71,
  3, 175, :_reduce_72,
  1, 178, :_reduce_none,
  3, 178, :_reduce_none,
  1, 177, :_reduce_75,
  4, 177, :_reduce_76,
  3, 177, :_reduce_77,
  3, 177, :_reduce_none,
  3, 177, :_reduce_none,
  3, 177, :_reduce_none,
  2, 177, :_reduce_none,
  1, 177, :_reduce_none,
  1, 152, :_reduce_83,
  4, 152, :_reduce_84,
  3, 152, :_reduce_85,
  3, 152, :_reduce_86,
  3, 152, :_reduce_87,
  3, 152, :_reduce_88,
  2, 152, :_reduce_89,
  1, 152, :_reduce_none,
  1, 180, :_reduce_none,
  2, 181, :_reduce_92,
  1, 181, :_reduce_93,
  3, 181, :_reduce_94,
  1, 182, :_reduce_none,
  1, 182, :_reduce_none,
  1, 182, :_reduce_none,
  1, 182, :_reduce_98,
  1, 182, :_reduce_99,
  1, 149, :_reduce_100,
  1, 149, :_reduce_none,
  1, 150, :_reduce_102,
  3, 150, :_reduce_103,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  3, 163, :_reduce_177,
  5, 163, :_reduce_178,
  3, 163, :_reduce_179,
  6, 163, :_reduce_180,
  5, 163, :_reduce_181,
  5, 163, :_reduce_none,
  5, 163, :_reduce_none,
  5, 163, :_reduce_none,
  4, 163, :_reduce_none,
  3, 163, :_reduce_none,
  3, 163, :_reduce_187,
  3, 163, :_reduce_188,
  3, 163, :_reduce_189,
  3, 163, :_reduce_190,
  3, 163, :_reduce_191,
  3, 163, :_reduce_192,
  3, 163, :_reduce_193,
  3, 163, :_reduce_194,
  4, 163, :_reduce_none,
  4, 163, :_reduce_none,
  2, 163, :_reduce_197,
  2, 163, :_reduce_198,
  3, 163, :_reduce_199,
  3, 163, :_reduce_200,
  3, 163, :_reduce_201,
  3, 163, :_reduce_202,
  3, 163, :_reduce_203,
  3, 163, :_reduce_204,
  3, 163, :_reduce_205,
  3, 163, :_reduce_206,
  3, 163, :_reduce_207,
  3, 163, :_reduce_208,
  3, 163, :_reduce_209,
  3, 163, :_reduce_210,
  3, 163, :_reduce_211,
  2, 163, :_reduce_212,
  2, 163, :_reduce_213,
  3, 163, :_reduce_214,
  3, 163, :_reduce_215,
  3, 163, :_reduce_216,
  3, 163, :_reduce_217,
  3, 163, :_reduce_218,
  5, 163, :_reduce_219,
  1, 163, :_reduce_none,
  1, 160, :_reduce_none,
  1, 157, :_reduce_222,
  2, 157, :_reduce_223,
  2, 157, :_reduce_224,
  4, 157, :_reduce_225,
  2, 157, :_reduce_226,
  3, 191, :_reduce_227,
  4, 191, :_reduce_228,
  4, 191, :_reduce_none,
  6, 191, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 166, :_reduce_233,
  2, 166, :_reduce_234,
  2, 166, :_reduce_235,
  4, 166, :_reduce_236,
  1, 166, :_reduce_237,
  4, 195, :_reduce_none,
  1, 195, :_reduce_none,
  0, 197, :_reduce_240,
  2, 169, :_reduce_241,
  1, 196, :_reduce_none,
  2, 196, :_reduce_243,
  3, 196, :_reduce_244,
  2, 194, :_reduce_245,
  2, 193, :_reduce_246,
  1, 193, :_reduce_247,
  1, 188, :_reduce_248,
  2, 188, :_reduce_249,
  3, 188, :_reduce_250,
  4, 188, :_reduce_251,
  3, 159, :_reduce_252,
  4, 159, :_reduce_none,
  2, 159, :_reduce_254,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  0, 219, :_reduce_264,
  4, 187, :_reduce_265,
  4, 187, :_reduce_266,
  3, 187, :_reduce_267,
  3, 187, :_reduce_268,
  2, 187, :_reduce_269,
  4, 187, :_reduce_270,
  3, 187, :_reduce_271,
  3, 187, :_reduce_272,
  1, 187, :_reduce_273,
  4, 187, :_reduce_274,
  3, 187, :_reduce_275,
  1, 187, :_reduce_276,
  5, 187, :_reduce_277,
  4, 187, :_reduce_278,
  3, 187, :_reduce_279,
  2, 187, :_reduce_280,
  1, 187, :_reduce_none,
  2, 187, :_reduce_282,
  2, 187, :_reduce_283,
  6, 187, :_reduce_284,
  6, 187, :_reduce_285,
  0, 220, :_reduce_286,
  0, 221, :_reduce_287,
  7, 187, :_reduce_288,
  0, 222, :_reduce_289,
  0, 223, :_reduce_290,
  7, 187, :_reduce_291,
  5, 187, :_reduce_292,
  4, 187, :_reduce_293,
  5, 187, :_reduce_294,
  0, 224, :_reduce_295,
  0, 225, :_reduce_296,
  9, 187, :_reduce_none,
  0, 226, :_reduce_298,
  0, 227, :_reduce_299,
  7, 187, :_reduce_300,
  0, 228, :_reduce_301,
  0, 229, :_reduce_302,
  8, 187, :_reduce_303,
  0, 230, :_reduce_304,
  0, 231, :_reduce_305,
  6, 187, :_reduce_306,
  0, 232, :_reduce_307,
  6, 187, :_reduce_308,
  0, 233, :_reduce_309,
  0, 234, :_reduce_310,
  9, 187, :_reduce_311,
  1, 187, :_reduce_312,
  1, 187, :_reduce_313,
  1, 187, :_reduce_314,
  1, 187, :_reduce_none,
  1, 156, :_reduce_none,
  1, 210, :_reduce_none,
  1, 210, :_reduce_none,
  1, 210, :_reduce_none,
  2, 210, :_reduce_none,
  1, 212, :_reduce_none,
  1, 212, :_reduce_none,
  1, 212, :_reduce_none,
  2, 209, :_reduce_324,
  3, 235, :_reduce_325,
  2, 235, :_reduce_326,
  1, 235, :_reduce_none,
  1, 235, :_reduce_none,
  3, 236, :_reduce_329,
  3, 236, :_reduce_330,
  1, 211, :_reduce_331,
  0, 238, :_reduce_332,
  6, 211, :_reduce_333,
  1, 142, :_reduce_none,
  2, 142, :_reduce_335,
  1, 239, :_reduce_336,
  3, 239, :_reduce_337,
  3, 240, :_reduce_338,
  1, 171, :_reduce_none,
  2, 171, :_reduce_340,
  1, 171, :_reduce_341,
  3, 171, :_reduce_342,
  1, 241, :_reduce_343,
  2, 243, :_reduce_344,
  1, 243, :_reduce_345,
  6, 237, :_reduce_346,
  4, 237, :_reduce_347,
  4, 237, :_reduce_348,
  2, 237, :_reduce_349,
  2, 237, :_reduce_350,
  4, 237, :_reduce_351,
  2, 237, :_reduce_352,
  2, 237, :_reduce_353,
  1, 237, :_reduce_354,
  0, 247, :_reduce_355,
  5, 246, :_reduce_356,
  2, 167, :_reduce_357,
  4, 167, :_reduce_none,
  4, 167, :_reduce_none,
  2, 208, :_reduce_360,
  4, 208, :_reduce_361,
  3, 208, :_reduce_362,
  4, 208, :_reduce_363,
  3, 208, :_reduce_364,
  2, 208, :_reduce_365,
  1, 208, :_reduce_366,
  0, 249, :_reduce_367,
  5, 207, :_reduce_368,
  0, 250, :_reduce_369,
  5, 207, :_reduce_370,
  0, 252, :_reduce_371,
  6, 213, :_reduce_372,
  1, 251, :_reduce_373,
  1, 251, :_reduce_none,
  6, 141, :_reduce_375,
  0, 141, :_reduce_376,
  1, 253, :_reduce_377,
  1, 253, :_reduce_none,
  1, 253, :_reduce_none,
  2, 254, :_reduce_380,
  1, 254, :_reduce_381,
  2, 143, :_reduce_382,
  1, 143, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 200, :_reduce_387,
  1, 257, :_reduce_none,
  2, 257, :_reduce_none,
  3, 258, :_reduce_390,
  1, 258, :_reduce_391,
  3, 201, :_reduce_392,
  3, 202, :_reduce_393,
  3, 203, :_reduce_394,
  3, 203, :_reduce_395,
  1, 261, :_reduce_396,
  3, 261, :_reduce_397,
  1, 262, :_reduce_398,
  2, 262, :_reduce_399,
  3, 204, :_reduce_400,
  3, 204, :_reduce_401,
  1, 264, :_reduce_402,
  3, 264, :_reduce_403,
  1, 259, :_reduce_404,
  2, 259, :_reduce_405,
  1, 260, :_reduce_406,
  2, 260, :_reduce_407,
  1, 263, :_reduce_408,
  0, 266, :_reduce_409,
  3, 263, :_reduce_410,
  0, 267, :_reduce_411,
  4, 263, :_reduce_412,
  1, 265, :_reduce_413,
  1, 265, :_reduce_414,
  1, 265, :_reduce_415,
  1, 265, :_reduce_none,
  2, 185, :_reduce_417,
  1, 185, :_reduce_418,
  1, 268, :_reduce_none,
  1, 268, :_reduce_none,
  1, 268, :_reduce_none,
  1, 268, :_reduce_none,
  3, 256, :_reduce_423,
  1, 255, :_reduce_424,
  1, 255, :_reduce_425,
  2, 255, :_reduce_none,
  2, 255, :_reduce_none,
  1, 179, :_reduce_428,
  1, 179, :_reduce_429,
  1, 179, :_reduce_430,
  1, 179, :_reduce_431,
  1, 179, :_reduce_432,
  1, 179, :_reduce_433,
  1, 179, :_reduce_434,
  1, 179, :_reduce_435,
  1, 179, :_reduce_436,
  1, 179, :_reduce_437,
  1, 179, :_reduce_438,
  1, 205, :_reduce_439,
  1, 155, :_reduce_440,
  1, 158, :_reduce_441,
  1, 158, :_reduce_none,
  1, 214, :_reduce_443,
  3, 214, :_reduce_444,
  2, 214, :_reduce_445,
  4, 216, :_reduce_446,
  2, 216, :_reduce_447,
  6, 269, :_reduce_448,
  4, 269, :_reduce_449,
  4, 269, :_reduce_450,
  2, 269, :_reduce_451,
  4, 269, :_reduce_452,
  2, 269, :_reduce_453,
  2, 269, :_reduce_454,
  1, 269, :_reduce_455,
  0, 269, :_reduce_456,
  1, 272, :_reduce_457,
  1, 272, :_reduce_458,
  1, 272, :_reduce_459,
  1, 272, :_reduce_460,
  1, 272, :_reduce_461,
  1, 273, :_reduce_462,
  3, 273, :_reduce_463,
  1, 275, :_reduce_464,
  3, 275, :_reduce_none,
  1, 276, :_reduce_466,
  3, 276, :_reduce_467,
  1, 274, :_reduce_none,
  4, 274, :_reduce_none,
  3, 274, :_reduce_none,
  2, 274, :_reduce_none,
  1, 274, :_reduce_none,
  1, 244, :_reduce_473,
  3, 244, :_reduce_474,
  3, 277, :_reduce_475,
  1, 270, :_reduce_476,
  3, 270, :_reduce_477,
  1, 278, :_reduce_none,
  1, 278, :_reduce_none,
  2, 245, :_reduce_480,
  1, 245, :_reduce_481,
  1, 279, :_reduce_none,
  1, 279, :_reduce_none,
  2, 242, :_reduce_484,
  2, 271, :_reduce_485,
  0, 271, :_reduce_486,
  1, 217, :_reduce_487,
  4, 217, :_reduce_488,
  1, 206, :_reduce_489,
  2, 206, :_reduce_490,
  2, 206, :_reduce_491,
  1, 190, :_reduce_492,
  3, 190, :_reduce_493,
  3, 280, :_reduce_494,
  2, 280, :_reduce_495,
  1, 172, :_reduce_none,
  1, 172, :_reduce_none,
  1, 172, :_reduce_none,
  1, 168, :_reduce_none,
  1, 168, :_reduce_none,
  1, 168, :_reduce_none,
  1, 168, :_reduce_none,
  1, 248, :_reduce_none,
  1, 248, :_reduce_none,
  1, 248, :_reduce_none,
  1, 218, :_reduce_none,
  1, 218, :_reduce_none,
  0, 145, :_reduce_none,
  1, 145, :_reduce_none,
  0, 186, :_reduce_none,
  1, 186, :_reduce_none,
  0, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 215, :_reduce_none,
  1, 215, :_reduce_none,
  1, 148, :_reduce_none,
  2, 148, :_reduce_none,
  0, 146, :_reduce_none,
  0, 198, :_reduce_none ]

racc_reduce_n = 521

racc_shift_n = 910

racc_token_table = {
  false => 0,
  :error => 1,
  :CLASS => 2,
  :MODULE => 3,
  :DEF => 4,
  :UNDEF => 5,
  :BEGIN => 6,
  :RESCUE => 7,
  :ENSURE => 8,
  :END => 9,
  :IF => 10,
  :UNLESS => 11,
  :THEN => 12,
  :ELSIF => 13,
  :ELSE => 14,
  :CASE => 15,
  :WHEN => 16,
  :WHILE => 17,
  :UNTIL => 18,
  :FOR => 19,
  :BREAK => 20,
  :NEXT => 21,
  :REDO => 22,
  :RETRY => 23,
  :IN => 24,
  :DO => 25,
  :DO_COND => 26,
  :DO_BLOCK => 27,
  :RETURN => 28,
  :YIELD => 29,
  :SUPER => 30,
  :SELF => 31,
  :NIL => 32,
  :TRUE => 33,
  :FALSE => 34,
  :AND => 35,
  :OR => 36,
  :NOT => 37,
  :IF_MOD => 38,
  :UNLESS_MOD => 39,
  :WHILE_MOD => 40,
  :UNTIL_MOD => 41,
  :RESCUE_MOD => 42,
  :ALIAS => 43,
  :DEFINED => 44,
  :klBEGIN => 45,
  :klEND => 46,
  :LINE => 47,
  :FILE => 48,
  :IDENTIFIER => 49,
  :FID => 50,
  :GVAR => 51,
  :IVAR => 52,
  :CONSTANT => 53,
  :CVAR => 54,
  :NTH_REF => 55,
  :BACK_REF => 56,
  :STRING_CONTENT => 57,
  :INTEGER => 58,
  :FLOAT => 59,
  :REGEXP_END => 60,
  "+@" => 61,
  "-@" => 62,
  "-@NUM" => 63,
  "**" => 64,
  "<=>" => 65,
  "==" => 66,
  "===" => 67,
  "!=" => 68,
  ">=" => 69,
  "<=" => 70,
  "&&" => 71,
  "||" => 72,
  "=~" => 73,
  "!~" => 74,
  "." => 75,
  ".." => 76,
  "..." => 77,
  "[]" => 78,
  "[]=" => 79,
  "<<" => 80,
  ">>" => 81,
  "::" => 82,
  "::@" => 83,
  :OP_ASGN => 84,
  "=>" => 85,
  :PAREN_BEG => 86,
  "(" => 87,
  ")" => 88,
  :tLPAREN_ARG => 89,
  :ARRAY_BEG => 90,
  "]" => 91,
  :tLBRACE => 92,
  :tLBRACE_ARG => 93,
  :SPLAT => 94,
  "*" => 95,
  "&@" => 96,
  "&" => 97,
  "~" => 98,
  "%" => 99,
  "/" => 100,
  "+" => 101,
  "-" => 102,
  "<" => 103,
  ">" => 104,
  "|" => 105,
  "!" => 106,
  "^" => 107,
  :LCURLY => 108,
  "}" => 109,
  :BACK_REF2 => 110,
  :SYMBOL_BEG => 111,
  :STRING_BEG => 112,
  :XSTRING_BEG => 113,
  :REGEXP_BEG => 114,
  :WORDS_BEG => 115,
  :AWORDS_BEG => 116,
  :STRING_DBEG => 117,
  :STRING_DVAR => 118,
  :STRING_END => 119,
  :STRING => 120,
  :SYMBOL => 121,
  "\\n" => 122,
  "?" => 123,
  ":" => 124,
  "," => 125,
  :SPACE => 126,
  ";" => 127,
  :LABEL => 128,
  :LAMBDA => 129,
  :LAMBEG => 130,
  :DO_LAMBDA => 131,
  "=" => 132,
  :LOWEST => 133,
  "[@" => 134,
  "[" => 135,
  "{" => 136 }

racc_nt_base = 137

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "CLASS",
  "MODULE",
  "DEF",
  "UNDEF",
  "BEGIN",
  "RESCUE",
  "ENSURE",
  "END",
  "IF",
  "UNLESS",
  "THEN",
  "ELSIF",
  "ELSE",
  "CASE",
  "WHEN",
  "WHILE",
  "UNTIL",
  "FOR",
  "BREAK",
  "NEXT",
  "REDO",
  "RETRY",
  "IN",
  "DO",
  "DO_COND",
  "DO_BLOCK",
  "RETURN",
  "YIELD",
  "SUPER",
  "SELF",
  "NIL",
  "TRUE",
  "FALSE",
  "AND",
  "OR",
  "NOT",
  "IF_MOD",
  "UNLESS_MOD",
  "WHILE_MOD",
  "UNTIL_MOD",
  "RESCUE_MOD",
  "ALIAS",
  "DEFINED",
  "klBEGIN",
  "klEND",
  "LINE",
  "FILE",
  "IDENTIFIER",
  "FID",
  "GVAR",
  "IVAR",
  "CONSTANT",
  "CVAR",
  "NTH_REF",
  "BACK_REF",
  "STRING_CONTENT",
  "INTEGER",
  "FLOAT",
  "REGEXP_END",
  "\"+@\"",
  "\"-@\"",
  "\"-@NUM\"",
  "\"**\"",
  "\"<=>\"",
  "\"==\"",
  "\"===\"",
  "\"!=\"",
  "\">=\"",
  "\"<=\"",
  "\"&&\"",
  "\"||\"",
  "\"=~\"",
  "\"!~\"",
  "\".\"",
  "\"..\"",
  "\"...\"",
  "\"[]\"",
  "\"[]=\"",
  "\"<<\"",
  "\">>\"",
  "\"::\"",
  "\"::@\"",
  "OP_ASGN",
  "\"=>\"",
  "PAREN_BEG",
  "\"(\"",
  "\")\"",
  "tLPAREN_ARG",
  "ARRAY_BEG",
  "\"]\"",
  "tLBRACE",
  "tLBRACE_ARG",
  "SPLAT",
  "\"*\"",
  "\"&@\"",
  "\"&\"",
  "\"~\"",
  "\"%\"",
  "\"/\"",
  "\"+\"",
  "\"-\"",
  "\"<\"",
  "\">\"",
  "\"|\"",
  "\"!\"",
  "\"^\"",
  "LCURLY",
  "\"}\"",
  "BACK_REF2",
  "SYMBOL_BEG",
  "STRING_BEG",
  "XSTRING_BEG",
  "REGEXP_BEG",
  "WORDS_BEG",
  "AWORDS_BEG",
  "STRING_DBEG",
  "STRING_DVAR",
  "STRING_END",
  "STRING",
  "SYMBOL",
  "\"\\\\n\"",
  "\"?\"",
  "\":\"",
  "\",\"",
  "SPACE",
  "\";\"",
  "LABEL",
  "LAMBDA",
  "LAMBEG",
  "DO_LAMBDA",
  "\"=\"",
  "LOWEST",
  "\"[@\"",
  "\"[\"",
  "\"{\"",
  "$start",
  "target",
  "compstmt",
  "bodystmt",
  "opt_rescue",
  "opt_else",
  "opt_ensure",
  "stmts",
  "opt_terms",
  "none",
  "stmt",
  "terms",
  "fitem",
  "undef_list",
  "expr_value",
  "lhs",
  "command_call",
  "mlhs",
  "var_lhs",
  "primary_value",
  "aref_args",
  "backref",
  "mrhs",
  "arg_value",
  "expr",
  "@1",
  "arg",
  "command",
  "block_command",
  "call_args",
  "block_call",
  "operation2",
  "command_args",
  "cmd_brace_block",
  "opt_block_var",
  "operation",
  "mlhs_basic",
  "mlhs_entry",
  "mlhs_head",
  "mlhs_item",
  "mlhs_node",
  "mlhs_post",
  "variable",
  "cname",
  "cpath",
  "fname",
  "op",
  "reswords",
  "symbol",
  "opt_nl",
  "primary",
  "args",
  "trailer",
  "assocs",
  "paren_args",
  "opt_paren_args",
  "opt_block_arg",
  "block_arg",
  "call_args2",
  "open_args",
  "@2",
  "none_block_pass",
  "literal",
  "strings",
  "xstring",
  "regexp",
  "words",
  "awords",
  "var_ref",
  "assoc_list",
  "brace_block",
  "method_call",
  "lambda",
  "then",
  "if_tail",
  "do",
  "case_body",
  "superclass",
  "term",
  "f_arglist",
  "singleton",
  "dot_or_colon",
  "@3",
  "@4",
  "@5",
  "@6",
  "@7",
  "@8",
  "@9",
  "@10",
  "@11",
  "@12",
  "@13",
  "@14",
  "@15",
  "@16",
  "@17",
  "@18",
  "f_larglist",
  "lambda_body",
  "block_param",
  "@19",
  "f_block_optarg",
  "f_block_opt",
  "block_args_tail",
  "f_block_arg",
  "opt_block_args_tail",
  "f_arg",
  "f_rest_arg",
  "do_block",
  "@20",
  "operation3",
  "@21",
  "@22",
  "cases",
  "@23",
  "exc_list",
  "exc_var",
  "numeric",
  "dsym",
  "string",
  "string1",
  "string_contents",
  "xstring_contents",
  "word_list",
  "word",
  "string_content",
  "qword_list",
  "string_dvar",
  "@24",
  "@25",
  "sym",
  "f_args",
  "f_optarg",
  "opt_f_block_arg",
  "f_norm_arg",
  "f_arg_item",
  "f_margs",
  "f_marg",
  "f_marg_list",
  "f_opt",
  "restarg_mark",
  "blkarg_mark",
  "assoc" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

def _reduce_1(val, _values, result)
      result = val[0]
    
    result
end

def _reduce_2(val, _values, result)
      result = new_body val[0], val[1], val[2], val[3]
    
    result
end

def _reduce_3(val, _values, result)
      comp = new_compstmt val[0]
      if comp and comp.type == :begin and comp.size == 2
        result = comp[1]
        result.line = comp.line
      else
        result = comp
      end
    
    result
end

def _reduce_4(val, _values, result)
      result = new_block
    
    result
end

def _reduce_5(val, _values, result)
      result = new_block val[0]
    
    result
end

def _reduce_6(val, _values, result)
      val[0] << val[2]
      result = val[0]
    
    result
end

def _reduce_7(val, _values, result)
      lexer.lex_state = :expr_fname
    
    result
end

def _reduce_8(val, _values, result)
      result = s(:alias, val[1], val[3])
    
    result
end

def _reduce_9(val, _values, result)
      result = s(:valias, val[1].intern, val[2].intern)
    
    result
end

# reduce 10 omitted

def _reduce_11(val, _values, result)
      result = s(:valias, val[1].intern, val[2].intern)
    
    result
end

def _reduce_12(val, _values, result)
      result = val[1]
    
    result
end

def _reduce_13(val, _values, result)
      result = new_if val[2], val[0], nil
    
    result
end

def _reduce_14(val, _values, result)
      result = new_if val[2], nil, val[0]
    
    result
end

def _reduce_15(val, _values, result)
      result = s(:while, val[2], val[0], true)
    
    result
end

def _reduce_16(val, _values, result)
      result = s(:until, val[2], val[0], true)
    
    result
end

def _reduce_17(val, _values, result)
      result = s(:rescue_mod, val[0], val[2])
    
    result
end

# reduce 18 omitted

# reduce 19 omitted

def _reduce_20(val, _values, result)
      result = new_assign val[0], val[2]
    
    result
end

def _reduce_21(val, _values, result)
      result = s(:masgn, val[0], s(:to_ary, val[2]))
    
    result
end

def _reduce_22(val, _values, result)
      result = new_op_asgn val[1].intern, val[0], val[2]
    
    result
end

# reduce 23 omitted

def _reduce_24(val, _values, result)
      result = s(:op_asgn2, val[0], "#{val[2]}=".intern, val[3].intern, val[4])
    
    result
end

# reduce 25 omitted

# reduce 26 omitted

# reduce 27 omitted

def _reduce_28(val, _values, result)
      result = new_assign val[0], s(:svalue, val[2])
    
    result
end

def _reduce_29(val, _values, result)
      result = s(:masgn, val[0], s(:to_ary, val[2]))
    
    result
end

def _reduce_30(val, _values, result)
      result = s(:masgn, val[0], val[2])
    
    result
end

# reduce 31 omitted

# reduce 32 omitted

def _reduce_33(val, _values, result)
      result = s(:and, val[0], val[2])
      result.line = val[0].line
    
    result
end

def _reduce_34(val, _values, result)
      result = s(:or, val[0], val[2])
      result.line = val[0].line
    
    result
end

def _reduce_35(val, _values, result)
      result = s(:not, val[1])
      result.line = val[1].line
    
    result
end

def _reduce_36(val, _values, result)
      result = s(:not, val[1])
    
    result
end

# reduce 37 omitted

# reduce 38 omitted

# reduce 39 omitted

# reduce 40 omitted

def _reduce_41(val, _values, result)
      args = val[1]
      args = args[1] if args.size == 2
      result = s(:return, args)
    
    result
end

def _reduce_42(val, _values, result)
      args = val[1]
      args = args[1] if args.size == 2
      result = s(:break, args)
    
    result
end

def _reduce_43(val, _values, result)
      args = val[1]
      args = args[1] if args.size == 2
      result = s(:next, args)
    
    result
end

# reduce 44 omitted

# reduce 45 omitted

# reduce 46 omitted

# reduce 47 omitted

def _reduce_48(val, _values, result)
      result = new_call nil, val[0].intern, val[1]
    
    result
end

# reduce 49 omitted

def _reduce_50(val, _values, result)
      result = new_call val[0], val[2].intern, val[3]
    
    result
end

# reduce 51 omitted

def _reduce_52(val, _values, result)
      result = new_call val[0], val[2].intern, val[3]
    
    result
end

# reduce 53 omitted

def _reduce_54(val, _values, result)
      result = new_super val[1]
    
    result
end

def _reduce_55(val, _values, result)
      result = new_yield val[1]
    
    result
end

def _reduce_56(val, _values, result)
      result = val[0]
    
    result
end

def _reduce_57(val, _values, result)
      result = val[1]
    
    result
end

def _reduce_58(val, _values, result)
      result = val[0]
    
    result
end

def _reduce_59(val, _values, result)
      result = val[1]
    
    result
end

def _reduce_60(val, _values, result)
      result = val[0]
    
    result
end

def _reduce_61(val, _values, result)
      result = val[0] << val[1]
    
    result
end

def _reduce_62(val, _values, result)
      result = val[0] << s(:splat, val[2])
    
    result
end

# reduce 63 omitted

def _reduce_64(val, _values, result)
      result = val[0] << s(:splat)
    
    result
end

# reduce 65 omitted

def _reduce_66(val, _values, result)
      result = s(:array, s(:splat, val[1]))
    
    result
end

def _reduce_67(val, _values, result)
      result = s(:array, s(:splat))
    
    result
end

# reduce 68 omitted

def _reduce_69(val, _values, result)
      result = val[0]
    
    result
end

def _reduce_70(val, _values, result)
      result = val[1]
    
    result
end

def _reduce_71(val, _values, result)
      result = s(:array, val[0])
    
    result
end

def _reduce_72(val, _values, result)
      result = val[0] << val[1]
    
    result
end

# reduce 73 omitted

# reduce 74 omitted

def _reduce_75(val, _values, result)
      result = new_assignable val[0]
    
    result
end

def _reduce_76(val, _values, result)
      args = val[2]
      args.type = :arglist if args.type == :array
      result = s(:attrasgn, val[0], :[]=, args)
    
    result
end

def _reduce_77(val, _values, result)
      result = new_call val[0], val[2].intern, s(:arglist)
    
    result
end

# reduce 78 omitted

# reduce 79 omitted

# reduce 80 omitted

# reduce 81 omitted

# reduce 82 omitted

def _reduce_83(val, _values, result)
      result = new_assignable val[0]
    
    result
end

def _reduce_84(val, _values, result)
      args = val[2]
      args.type = :arglist if args.type == :array
      result = s(:attrasgn, val[0], :[]=, args)
    
    result
end

def _reduce_85(val, _values, result)
      result = s(:attrasgn, val[0], "#{val[2]}=".intern, s(:arglist))
    
    result
end

def _reduce_86(val, _values, result)
      result = s(:attrasgn, val[0], "#{val[2]}=".intern, s(:arglist))
    
    result
end

def _reduce_87(val, _values, result)
      result = s(:attrasgn, val[0], "#{val[2]}=".intern, s(:arglist))
    
    result
end

def _reduce_88(val, _values, result)
      result = s(:colon2, val[0], val[2].intern)
    
    result
end

def _reduce_89(val, _values, result)
      result = s(:colon3, val[1].intern)
    
    result
end

# reduce 90 omitted

# reduce 91 omitted

def _reduce_92(val, _values, result)
      result = s(:colon3, val[1].intern)
    
    result
end

def _reduce_93(val, _values, result)
      result = val[0].intern
    
    result
end

def _reduce_94(val, _values, result)
      result = s(:colon2, val[0], val[2].intern)
    
    result
end

# reduce 95 omitted

# reduce 96 omitted

# reduce 97 omitted

def _reduce_98(val, _values, result)
      lexer.lex_state = :expr_end
      result = val[0]
    
    result
end

def _reduce_99(val, _values, result)
      lexer.lex_state = :expr_end
      result = val[0]
    
    result
end

def _reduce_100(val, _values, result)
      result = s(:sym, val[0].intern)
    
    result
end

# reduce 101 omitted

def _reduce_102(val, _values, result)
      result = s(:undef, val[0])
    
    result
end

def _reduce_103(val, _values, result)
      result = val[0] << val[2]
    
    result
end

# reduce 104 omitted

# reduce 105 omitted

# reduce 106 omitted

# reduce 107 omitted

# reduce 108 omitted

# reduce 109 omitted

# reduce 110 omitted

# reduce 111 omitted

# reduce 112 omitted

# reduce 113 omitted

# reduce 114 omitted

# reduce 115 omitted

# reduce 116 omitted

# reduce 117 omitted

# reduce 118 omitted

# reduce 119 omitted

# reduce 120 omitted

# reduce 121 omitted

# reduce 122 omitted

# reduce 123 omitted

# reduce 124 omitted

# reduce 125 omitted

# reduce 126 omitted

# reduce 127 omitted

# reduce 128 omitted

# reduce 129 omitted

# reduce 130 omitted

# reduce 131 omitted

# reduce 132 omitted

# reduce 133 omitted

# reduce 134 omitted

# reduce 135 omitted

# reduce 136 omitted

# reduce 137 omitted

# reduce 138 omitted

# reduce 139 omitted

# reduce 140 omitted

# reduce 141 omitted

# reduce 142 omitted

# reduce 143 omitted

# reduce 144 omitted

# reduce 145 omitted

# reduce 146 omitted

# reduce 147 omitted

# reduce 148 omitted

# reduce 149 omitted

# reduce 150 omitted

# reduce 151 omitted

# reduce 152 omitted

# reduce 153 omitted

# reduce 154 omitted

# reduce 155 omitted

# reduce 156 omitted

# reduce 157 omitted

# reduce 158 omitted

# reduce 159 omitted

# reduce 160 omitted

# reduce 161 omitted

# reduce 162 omitted

# reduce 163 omitted

# reduce 164 omitted

# reduce 165 omitted

# reduce 166 omitted

# reduce 167 omitted

# reduce 168 omitted

# reduce 169 omitted

# reduce 170 omitted

# reduce 171 omitted

# reduce 172 omitted

# reduce 173 omitted

# reduce 174 omitted

# reduce 175 omitted

# reduce 176 omitted

def _reduce_177(val, _values, result)
      result = new_assign val[0], val[2]
    
    result
end

def _reduce_178(val, _values, result)
      result = new_assign val[0], s(:rescue_mod, val[2], val[4])
    
    result
end

def _reduce_179(val, _values, result)
      result = new_op_asgn val[1].intern, val[0], val[2]
    
    result
end

def _reduce_180(val, _values, result)
      args = val[2]
      args.type = :arglist if args.type == :array
      result = s(:op_asgn1, val[0], val[2], val[4].intern, val[5])
      result.line = val[0].line
    
    result
end

def _reduce_181(val, _values, result)
      result = s(:op_asgn2, val[0], "#{val[2]}=".intern, val[3].intern, val[4])
    
    result
end

# reduce 182 omitted

# reduce 183 omitted

# reduce 184 omitted

# reduce 185 omitted

# reduce 186 omitted

def _reduce_187(val, _values, result)
      result = s(:dot2, val[0], val[2])
      result.line = val[0].line
    
    result
end

def _reduce_188(val, _values, result)
      result = s(:dot3, val[0], val[2])
      result.line = val[0].line
    
    result
end

def _reduce_189(val, _values, result)
      result = new_call val[0], :"+", s(:arglist, val[2])
    
    result
end

def _reduce_190(val, _values, result)
      result = new_call val[0], :"-", s(:arglist, val[2])
    
    result
end

def _reduce_191(val, _values, result)
      result = new_call val[0], :"*", s(:arglist, val[2])
    
    result
end

def _reduce_192(val, _values, result)
      result = new_call val[0], :"/", s(:arglist, val[2])
    
    result
end

def _reduce_193(val, _values, result)
      result = new_call val[0], :"%", s(:arglist, val[2])
    
    result
end

def _reduce_194(val, _values, result)
      result = new_call val[0], :"**", s(:arglist, val[2])
    
    result
end

# reduce 195 omitted

# reduce 196 omitted

def _reduce_197(val, _values, result)
      result = new_call val[1], :"+@", s(:arglist)
      result = val[1] if [:int, :float].include? val[1].type
    
    result
end

def _reduce_198(val, _values, result)
      result = new_call val[1], :"-@", s(:arglist)
      if val[1].type == :int
        val[1][1] = -val[1][1]
        result = val[1]
      elsif val[1].type == :float
        val[1][1] = -val[1][1].to_f
        result = val[1]
      end
    
    result
end

def _reduce_199(val, _values, result)
      result = new_call val[0], :"|", s(:arglist, val[2])
    
    result
end

def _reduce_200(val, _values, result)
      result = new_call val[0], :"^", s(:arglist, val[2])
    
    result
end

def _reduce_201(val, _values, result)
      result = new_call val[0], :"&", s(:arglist, val[2])
    
    result
end

def _reduce_202(val, _values, result)
      result = new_call val[0], :"<=>", s(:arglist, val[2])
    
    result
end

def _reduce_203(val, _values, result)
      result = new_call val[0], :">", s(:arglist, val[2])
    
    result
end

def _reduce_204(val, _values, result)
      result = new_call val[0], :">=", s(:arglist, val[2])
    
    result
end

def _reduce_205(val, _values, result)
      result = new_call val[0], :"<", s(:arglist, val[2])
    
    result
end

def _reduce_206(val, _values, result)
      result = new_call val[0], :"<=", s(:arglist, val[2])
    
    result
end

def _reduce_207(val, _values, result)
      result = new_call val[0], :"==", s(:arglist, val[2])
    
    result
end

def _reduce_208(val, _values, result)
      result = new_call val[0], :"===", s(:arglist, val[2])
    
    result
end

def _reduce_209(val, _values, result)
      result = s(:not, new_call(val[0], :"==", s(:arglist, val[2])))
    
    result
end

def _reduce_210(val, _values, result)
      result = new_call val[0], :"=~", s(:arglist, val[2])
    
    result
end

def _reduce_211(val, _values, result)
      result = s(:not, new_call(val[0], :"=~", s(:arglist, val[2])))
    
    result
end

def _reduce_212(val, _values, result)
      result = s(:not, val[1])
    
    result
end

def _reduce_213(val, _values, result)
      result = new_call val[1], :"~", s(:arglist)
    
    result
end

def _reduce_214(val, _values, result)
      result = new_call val[0], :"<<", s(:arglist, val[2])
    
    result
end

def _reduce_215(val, _values, result)
      result = new_call val[0], :">>", s(:arglist, val[2])
    
    result
end

def _reduce_216(val, _values, result)
      result = s(:and, val[0], val[2])
      result.line = val[0].line
    
    result
end

def _reduce_217(val, _values, result)
      result = s(:or, val[0], val[2])
      result.line = val[0].line
    
    result
end

def _reduce_218(val, _values, result)
      result = s(:defined, val[2])
    
    result
end

def _reduce_219(val, _values, result)
      result = s(:if, val[0], val[2], val[4])
      result.line = val[0].line
    
    result
end

# reduce 220 omitted

# reduce 221 omitted

def _reduce_222(val, _values, result)
      result = nil
    
    result
end

def _reduce_223(val, _values, result)
      result = s(:array, val[0])
    
    result
end

def _reduce_224(val, _values, result)
      result = val[0]
    
    result
end

def _reduce_225(val, _values, result)
      val[0] << s(:hash, *val[2])
      result = val[0]
    
    result
end

def _reduce_226(val, _values, result)
      result = s(:array, s(:hash, *val[0]))
    
    result
end

def _reduce_227(val, _values, result)
      result = nil
    
    result
end

def _reduce_228(val, _values, result)
      result = val[1]
    
    result
end

# reduce 229 omitted

# reduce 230 omitted

# reduce 231 omitted

# reduce 232 omitted

def _reduce_233(val, _values, result)
      result = s(:array, val[0])
    
    result
end

def _reduce_234(val, _values, result)
      result = val[0]
      add_block_pass val[0], val[1]
    
    result
end

def _reduce_235(val, _values, result)
      result = s(:arglist, s(:hash, *val[0]))
      add_block_pass result, val[1]
    
    result
end

def _reduce_236(val, _values, result)
      result = val[0]
      result << s(:hash, *val[2])
    
    result
end

def _reduce_237(val, _values, result)
      result = s(:arglist)
      add_block_pass result, val[0]
    
    result
end

# reduce 238 omitted

# reduce 239 omitted

def _reduce_240(val, _values, result)
      lexer.cmdarg_push 1
    
    result
end

def _reduce_241(val, _values, result)
      lexer.cmdarg_pop
      result = val[1]
    
    result
end

# reduce 242 omitted

def _reduce_243(val, _values, result)
      result = nil
    
    result
end

def _reduce_244(val, _values, result)
      result = val[1]
    
    result
end

def _reduce_245(val, _values, result)
      result = s(:block_pass, val[1])
    
    result
end

def _reduce_246(val, _values, result)
      result = val[1]
    
    result
end

def _reduce_247(val, _values, result)
      result = nil
    
    result
end

def _reduce_248(val, _values, result)
      result = s(:array, val[0])
    
    result
end

def _reduce_249(val, _values, result)
      result = s(:array, s(:splat, val[1]))
    
    result
end

def _reduce_250(val, _values, result)
      result = val[0] << val[2]
    
    result
end

def _reduce_251(val, _values, result)
      result  = val[0] << s(:splat, val[3])
    
    result
end

def _reduce_252(val, _values, result)
      val[0] << val[2]
      result = val[0]
    
    result
end

# reduce 253 omitted

def _reduce_254(val, _values, result)
      result = s(:splat, val[1])
    
    result
end

# reduce 255 omitted

# reduce 256 omitted

# reduce 257 omitted

# reduce 258 omitted

# reduce 259 omitted

# reduce 260 omitted

# reduce 261 omitted

# reduce 262 omitted

# reduce 263 omitted

def _reduce_264(val, _values, result)
      result = lexer.line
    
    result
end

def _reduce_265(val, _values, result)
      result = s(:begin, val[2])
      result.line = val[1]
    
    result
end

def _reduce_266(val, _values, result)
      result = val[1]
    
    result
end

def _reduce_267(val, _values, result)
      result = s(:paren, val[1] || s(:nil))
    
    result
end

def _reduce_268(val, _values, result)
      result = s(:colon2, val[0], val[2].intern)
    
    result
end

def _reduce_269(val, _values, result)
      result = s(:colon3, val[1])
    
    result
end

def _reduce_270(val, _values, result)
      result = new_call val[0], :[], val[2]
    
    result
end

def _reduce_271(val, _values, result)
      result = val[1] || s(:array)
    
    result
end

def _reduce_272(val, _values, result)
      result = s(:hash, *val[1])
    
    result
end

def _reduce_273(val, _values, result)
      result = s(:return)
    
    result
end

def _reduce_274(val, _values, result)
      result = new_yield val[2]
    
    result
end

def _reduce_275(val, _values, result)
      result = s(:yield)
    
    result
end

def _reduce_276(val, _values, result)
      result = s(:yield)
    
    result
end

def _reduce_277(val, _values, result)
      result = s(:defined, val[3])
    
    result
end

def _reduce_278(val, _values, result)
      result = s(:not, val[2])
      result.line = val[2].line
    
    result
end

def _reduce_279(val, _values, result)
      result = s(:not, s(:nil))
    
    result
end

def _reduce_280(val, _values, result)
      result = new_call nil, val[0].intern, s(:arglist)
      result << val[1]
    
    result
end

# reduce 281 omitted

def _reduce_282(val, _values, result)
      val[0] << val[1]
      result = val[0]
    
    result
end

def _reduce_283(val, _values, result)
      result = val[1]
    
    result
end

def _reduce_284(val, _values, result)
      result = new_if val[1], val[3], val[4]
    
    result
end

def _reduce_285(val, _values, result)
      result = new_if val[1], val[4], val[3]
    
    result
end

def _reduce_286(val, _values, result)
      lexer.cond_push 1
      result = lexer.line
    
    result
end

def _reduce_287(val, _values, result)
      lexer.cond_pop
    
    result
end

def _reduce_288(val, _values, result)
      result = s(:while, val[2], val[5], true)
      result.line = val[1]
    
    result
end

def _reduce_289(val, _values, result)
      lexer.cond_push 1
      result = lexer.line
    
    result
end

def _reduce_290(val, _values, result)
      lexer.cond_pop
    
    result
end

def _reduce_291(val, _values, result)
      result = s(:until, val[2], val[5], true)
      result.line = val[1]
    
    result
end

def _reduce_292(val, _values, result)
      result = s(:case, val[1], *val[3])
      result.line = val[1].line
    
    result
end

def _reduce_293(val, _values, result)
      result = s(:case, nil, *val[2])
      # result.line = val[2].line
    
    result
end

def _reduce_294(val, _values, result)
      result = s(:case, nil, val[3])
      # result.line = val[3].line
    
    result
end

def _reduce_295(val, _values, result)
      result = "this.cond_push(1);"
    
    result
end

def _reduce_296(val, _values, result)
      result = "this.cond_pop();"
    
    result
end

# reduce 297 omitted

def _reduce_298(val, _values, result)
      result = lexer.line
    
    result
end

def _reduce_299(val, _values, result)
      # ...
    
    result
end

def _reduce_300(val, _values, result)
      result = new_class val[2], val[3], val[5]
      result.line = val[1]
      result.end_line = lexer.line
    
    result
end

def _reduce_301(val, _values, result)
      result = lexer.line
    
    result
end

def _reduce_302(val, _values, result)
      # ...
    
    result
end

def _reduce_303(val, _values, result)
      result = new_sclass val[3], val[6]
      result.line = val[2]
    
    result
end

def _reduce_304(val, _values, result)
      result = lexer.line
    
    result
end

def _reduce_305(val, _values, result)
      # ...
    
    result
end

def _reduce_306(val, _values, result)
      result = new_module val[2], val[4]
      result.line = val[1]
      result.end_line = lexer.line
    
    result
end

def _reduce_307(val, _values, result)
      result = lexer.scope_line
      push_scope
    
    result
end

def _reduce_308(val, _values, result)
      result = new_def val[2], nil, val[1], val[3], val[4]
      pop_scope
    
    result
end

def _reduce_309(val, _values, result)
       lexer.lex_state = :expr_fname
    
    result
end

def _reduce_310(val, _values, result)
      result = lexer.scope_line
      push_scope
    
    result
end

def _reduce_311(val, _values, result)
      result = new_def val[5], val[1], val[4], val[6], val[7]
      pop_scope
    
    result
end

def _reduce_312(val, _values, result)
      result = s(:break)
    
    result
end

def _reduce_313(val, _values, result)
      result = s(:next)
    
    result
end

def _reduce_314(val, _values, result)
      result = s(:redo)
    
    result
end

# reduce 315 omitted

# reduce 316 omitted

# reduce 317 omitted

# reduce 318 omitted

# reduce 319 omitted

# reduce 320 omitted

# reduce 321 omitted

# reduce 322 omitted

# reduce 323 omitted

def _reduce_324(val, _values, result)
      result = new_call nil, :lambda, s(:arglist)
      result << new_iter(val[0], val[1])
    
    result
end

def _reduce_325(val, _values, result)
      result = val[1]
    
    result
end

def _reduce_326(val, _values, result)
      result = nil
    
    result
end

# reduce 327 omitted

# reduce 328 omitted

def _reduce_329(val, _values, result)
      result = val[1]
    
    result
end

def _reduce_330(val, _values, result)
      result = val[1]
    
    result
end

def _reduce_331(val, _values, result)
      result = val[0]
    
    result
end

def _reduce_332(val, _values, result)
      result = lexer.line
    
    result
end

def _reduce_333(val, _values, result)
      result = s(:if, val[2], val[4], val[5])
      result.line = val[1]
    
    result
end

# reduce 334 omitted

def _reduce_335(val, _values, result)
      result = val[1]
    
    result
end

def _reduce_336(val, _values, result)
      result = s(:block, val[0])
    
    result
end

def _reduce_337(val, _values, result)
      val[0] << val[2]
      result = val[0]
    
    result
end

def _reduce_338(val, _values, result)
      result = new_assign new_assignable(s(:identifier, val[0].intern)), val[2]
    
    result
end

# reduce 339 omitted

def _reduce_340(val, _values, result)
      result = 0
    
    result
end

def _reduce_341(val, _values, result)
      result = 0
    
    result
end

def _reduce_342(val, _values, result)
      result = val[1]
    
    result
end

def _reduce_343(val, _values, result)
       result = val[0]
     
    result
end

def _reduce_344(val, _values, result)
      result = val[1]
    
    result
end

def _reduce_345(val, _values, result)
      nil
    
    result
end

def _reduce_346(val, _values, result)
      result = new_block_args val[0], val[2], val[4], val[5]
    
    result
end

def _reduce_347(val, _values, result)
      result = new_block_args val[0], val[2], nil, val[3]
    
    result
end

def _reduce_348(val, _values, result)
      result = new_block_args val[0], nil, val[2], val[3]
    
    result
end

def _reduce_349(val, _values, result)
      result = new_block_args val[0], nil, nil, nil
    
    result
end

def _reduce_350(val, _values, result)
      result = new_block_args val[0], nil, nil, val[1]
    
    result
end

def _reduce_351(val, _values, result)
      result = new_block_args nil, val[0], val[2], val[3]
    
    result
end

def _reduce_352(val, _values, result)
      result = new_block_args nil, val[0], nil, val[1]
    
    result
end

def _reduce_353(val, _values, result)
      result = new_block_args nil, nil, val[0], val[1]
    
    result
end

def _reduce_354(val, _values, result)
      result = new_block_args nil, nil, nil, val[0]
    
    result
end

def _reduce_355(val, _values, result)
      push_scope :block
      result = lexer.line
    
    result
end

def _reduce_356(val, _values, result)
      result = new_iter val[2], val[3]
      result.line = val[1]
      pop_scope
    
    result
end

def _reduce_357(val, _values, result)
      val[0] << val[1]
      result = val[0]
    
    result
end

# reduce 358 omitted

# reduce 359 omitted

def _reduce_360(val, _values, result)
      result = new_call nil, val[0].intern, val[1]
    
    result
end

def _reduce_361(val, _values, result)
      result = new_call val[0], val[2].intern, val[3]
    
    result
end

def _reduce_362(val, _values, result)
      result = new_call val[0], :call, val[2]
    
    result
end

def _reduce_363(val, _values, result)
      result = new_call val[0], val[2].intern, val[3]
    
    result
end

def _reduce_364(val, _values, result)
      result = new_call val[0], val[2].intern, s(:arglist)
    
    result
end

def _reduce_365(val, _values, result)
      result = new_super val[1]
    
    result
end

def _reduce_366(val, _values, result)
      result = s(:super, nil)
    
    result
end

def _reduce_367(val, _values, result)
      push_scope :block
      result = lexer.line
    
    result
end

def _reduce_368(val, _values, result)
      result = new_iter val[2], val[3]
      result.line = val[1]
      pop_scope
    
    result
end

def _reduce_369(val, _values, result)
      push_scope :block
      result = lexer.line
    
    result
end

def _reduce_370(val, _values, result)
      result = new_iter val[2], val[3]
      result.line = val[1]
      pop_scope
    
    result
end

def _reduce_371(val, _values, result)
      result = lexer.line
    
    result
end

def _reduce_372(val, _values, result)
      part = s(:when, val[2], val[4])
      part.line = val[2].line
      result = [part]
      result.push *val[5] if val[5]
    
    result
end

def _reduce_373(val, _values, result)
      result = [val[0]]
    
    result
end

# reduce 374 omitted

def _reduce_375(val, _values, result)
      exc = val[1] || s(:array)
      exc << new_assign(val[2], s(:gvar, '$!'.intern)) if val[2]
      result = [s(:resbody, exc, val[4])]
      result.push val[5].first if val[5]
    
    result
end

def _reduce_376(val, _values, result)
      result = nil
    
    result
end

def _reduce_377(val, _values, result)
      result = s(:array, val[0])
    
    result
end

# reduce 378 omitted

# reduce 379 omitted

def _reduce_380(val, _values, result)
      result = val[1]
    
    result
end

def _reduce_381(val, _values, result)
      result = nil
    
    result
end

def _reduce_382(val, _values, result)
      result = val[1].nil? ? s(:nil) : val[1]
    
    result
end

# reduce 383 omitted

# reduce 384 omitted

# reduce 385 omitted

# reduce 386 omitted

def _reduce_387(val, _values, result)
      result = new_str val[0]
    
    result
end

# reduce 388 omitted

# reduce 389 omitted

def _reduce_390(val, _values, result)
      result = val[1]
    
    result
end

def _reduce_391(val, _values, result)
      result = s(:str, val[0])
    
    result
end

def _reduce_392(val, _values, result)
      result = new_xstr val[1]
    
    result
end

def _reduce_393(val, _values, result)
      result = new_regexp val[1], val[2]
    
    result
end

def _reduce_394(val, _values, result)
      result = s(:array)
    
    result
end

def _reduce_395(val, _values, result)
      result = val[1]
    
    result
end

def _reduce_396(val, _values, result)
      result = s(:array)
    
    result
end

def _reduce_397(val, _values, result)
      part = val[1]
      part = s(:dstr, "", val[1]) if part.type == :evstr
      result = val[0] << part
    
    result
end

def _reduce_398(val, _values, result)
      result = val[0]
    
    result
end

def _reduce_399(val, _values, result)
      result = val[0].concat([val[1]])
    
    result
end

def _reduce_400(val, _values, result)
      result = s(:array)
    
    result
end

def _reduce_401(val, _values, result)
      result = val[1]
    
    result
end

def _reduce_402(val, _values, result)
      result = s(:array)
    
    result
end

def _reduce_403(val, _values, result)
      result = val[0] << s(:str, val[1])
    
    result
end

def _reduce_404(val, _values, result)
      result = nil
    
    result
end

def _reduce_405(val, _values, result)
      result = str_append val[0], val[1]
    
    result
end

def _reduce_406(val, _values, result)
      result = nil
    
    result
end

def _reduce_407(val, _values, result)
      result = str_append val[0], val[1]
    
    result
end

def _reduce_408(val, _values, result)
      result = s(:str, val[0])
    
    result
end

def _reduce_409(val, _values, result)
      result = lexer.strterm
      lexer.strterm = nil
    
    result
end

def _reduce_410(val, _values, result)
      lexer.strterm = val[1]
      result = s(:evstr, val[2])
    
    result
end

def _reduce_411(val, _values, result)
      lexer.cond_push 0
      lexer.cmdarg_push 0
      result = lexer.strterm
      lexer.strterm = nil
      lexer.lex_state = :expr_beg
    
    result
end

def _reduce_412(val, _values, result)
      lexer.strterm = val[1]
      lexer.cond_lexpop
      lexer.cmdarg_lexpop
      result = s(:evstr, val[2])
    
    result
end

def _reduce_413(val, _values, result)
      result = s(:gvar, val[0].intern)
    
    result
end

def _reduce_414(val, _values, result)
      result = s(:ivar, val[0].intern)
    
    result
end

def _reduce_415(val, _values, result)
      result = s(:cvar, val[0].intern)
    
    result
end

# reduce 416 omitted

def _reduce_417(val, _values, result)
      result = s(:sym, val[1].intern)
      lexer.lex_state = :expr_end
    
    result
end

def _reduce_418(val, _values, result)
      result = s(:sym, val[0].intern)
    
    result
end

# reduce 419 omitted

# reduce 420 omitted

# reduce 421 omitted

# reduce 422 omitted

def _reduce_423(val, _values, result)
      result = new_dsym val[1]
    
    result
end

def _reduce_424(val, _values, result)
      result = s(:int, val[0])
    
    result
end

def _reduce_425(val, _values, result)
      result = s(:float, val[0])
    
    result
end

# reduce 426 omitted

# reduce 427 omitted

def _reduce_428(val, _values, result)
      result = s(:identifier, val[0].intern)
    
    result
end

def _reduce_429(val, _values, result)
      result = s(:ivar, val[0].intern)
    
    result
end

def _reduce_430(val, _values, result)
      result = s(:gvar, val[0].intern)
    
    result
end

def _reduce_431(val, _values, result)
      result = s(:const, val[0].intern)
    
    result
end

def _reduce_432(val, _values, result)
      result = s(:cvar, val[0].intern)
    
    result
end

def _reduce_433(val, _values, result)
      result = s(:nil)
    
    result
end

def _reduce_434(val, _values, result)
      result = s(:self)
    
    result
end

def _reduce_435(val, _values, result)
      result = s(:true)
    
    result
end

def _reduce_436(val, _values, result)
      result = s(:false)
    
    result
end

def _reduce_437(val, _values, result)
      result = s(:str, self.file)
    
    result
end

def _reduce_438(val, _values, result)
      result = s(:int, lexer.line)
    
    result
end

def _reduce_439(val, _values, result)
      result = new_var_ref val[0]
    
    result
end

def _reduce_440(val, _values, result)
      result = new_assignable val[0]
    
    result
end

def _reduce_441(val, _values, result)
      result = s(:nth_ref, val[0])
    
    result
end

# reduce 442 omitted

def _reduce_443(val, _values, result)
      result = nil
    
    result
end

def _reduce_444(val, _values, result)
      result = val[1]
    
    result
end

def _reduce_445(val, _values, result)
      result = nil
    
    result
end

def _reduce_446(val, _values, result)
      result = val[1]
      lexer.lex_state = :expr_beg
    
    result
end

def _reduce_447(val, _values, result)
      result = val[0]
    
    result
end

def _reduce_448(val, _values, result)
      result = new_args val[0], val[2], val[4], val[5]
    
    result
end

def _reduce_449(val, _values, result)
      result = new_args val[0], val[2], nil, val[3]
    
    result
end

def _reduce_450(val, _values, result)
      result = new_args val[0], nil, val[2], val[3]
    
    result
end

def _reduce_451(val, _values, result)
      result = new_args val[0], nil, nil, val[1]
    
    result
end

def _reduce_452(val, _values, result)
      result = new_args nil, val[0], val[2], val[3]
    
    result
end

def _reduce_453(val, _values, result)
      result = new_args nil, val[0], nil, val[1]
    
    result
end

def _reduce_454(val, _values, result)
      result = new_args nil, nil, val[0], val[1]
    
    result
end

def _reduce_455(val, _values, result)
      result = new_args nil, nil, nil, val[0]
    
    result
end

def _reduce_456(val, _values, result)
      result = s(:args)
    
    result
end

def _reduce_457(val, _values, result)
      raise 'formal argument cannot be a constant'
    
    result
end

def _reduce_458(val, _values, result)
      raise 'formal argument cannot be an instance variable'
    
    result
end

def _reduce_459(val, _values, result)
      raise 'formal argument cannot be a class variable'
    
    result
end

def _reduce_460(val, _values, result)
      raise 'formal argument cannot be a global variable'
    
    result
end

def _reduce_461(val, _values, result)
      result = val[0].intern
      scope.add_local result
    
    result
end

def _reduce_462(val, _values, result)
      result = val[0]
    
    result
end

def _reduce_463(val, _values, result)
      result = val[1]
    
    result
end

def _reduce_464(val, _values, result)
      result = s(:lasgn, val[0])
    
    result
end

# reduce 465 omitted

def _reduce_466(val, _values, result)
      result = s(:array, val[0])
    
    result
end

def _reduce_467(val, _values, result)
      val[0] << val[2]
      result = val[0]
    
    result
end

# reduce 468 omitted

# reduce 469 omitted

# reduce 470 omitted

# reduce 471 omitted

# reduce 472 omitted

def _reduce_473(val, _values, result)
      result = [val[0]]
    
    result
end

def _reduce_474(val, _values, result)
      val[0] << val[2]
      result = val[0]
    
    result
end

def _reduce_475(val, _values, result)
      result = new_assign new_assignable(s(:identifier, val[0].intern)), val[2]
    
    result
end

def _reduce_476(val, _values, result)
      result = s(:block, val[0])
    
    result
end

def _reduce_477(val, _values, result)
      result = val[0]
      val[0] << val[2]
    
    result
end

# reduce 478 omitted

# reduce 479 omitted

def _reduce_480(val, _values, result)
      result = "*#{val[1]}".intern
    
    result
end

def _reduce_481(val, _values, result)
      result = :"*"
    
    result
end

# reduce 482 omitted

# reduce 483 omitted

def _reduce_484(val, _values, result)
      result = "&#{val[1]}".intern
    
    result
end

def _reduce_485(val, _values, result)
      result = val[1]
    
    result
end

def _reduce_486(val, _values, result)
      result = nil
    
    result
end

def _reduce_487(val, _values, result)
      result = val[0]
    
    result
end

def _reduce_488(val, _values, result)
      result = val[1]
    
    result
end

def _reduce_489(val, _values, result)
      result = []
    
    result
end

def _reduce_490(val, _values, result)
      result = val[0]
    
    result
end

def _reduce_491(val, _values, result)
      raise "unsupported assoc list type (#@line_number)"
    
    result
end

def _reduce_492(val, _values, result)
      result = val[0]
    
    result
end

def _reduce_493(val, _values, result)
      result = val[0].push *val[2]
    
    result
end

def _reduce_494(val, _values, result)
      result = [val[0], val[2]]
    
    result
end

def _reduce_495(val, _values, result)
      result = [s(:sym, val[0].intern), val[1]]
    
    result
end

# reduce 496 omitted

# reduce 497 omitted

# reduce 498 omitted

# reduce 499 omitted

# reduce 500 omitted

# reduce 501 omitted

# reduce 502 omitted

# reduce 503 omitted

# reduce 504 omitted

# reduce 505 omitted

# reduce 506 omitted

# reduce 507 omitted

# reduce 508 omitted

# reduce 509 omitted

# reduce 510 omitted

# reduce 511 omitted

# reduce 512 omitted

# reduce 513 omitted

# reduce 514 omitted

# reduce 515 omitted

# reduce 516 omitted

# reduce 517 omitted

# reduce 518 omitted

# reduce 519 omitted

# reduce 520 omitted

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module Opal
