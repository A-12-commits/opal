#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.12
# from Racc grammer file "".
#

require 'racc/parser.rb'
module Opal
  class Parser < Racc::Parser


##### State transition tables begin ###

clist = [
'63,64,65,8,51,570,-93,-92,57,58,272,205,206,61,613,59,60,62,23,24,66',
'67,900,539,205,206,538,22,28,27,90,89,91,92,205,206,17,601,272,272,645',
'645,7,41,6,9,94,93,570,84,50,86,85,87,717,88,95,96,645,81,82,-94,38',
'39,-90,539,591,576,541,577,-88,205,206,-529,644,644,547,612,570,-90',
'793,205,206,-89,856,36,-94,570,30,601,641,52,644,577,54,-92,32,271,603',
'602,40,307,-95,-80,267,267,-91,757,18,267,-88,-85,-84,79,73,75,76,77',
'78,101,570,569,74,80,100,271,271,63,64,65,56,51,-95,53,-89,57,58,709',
'37,83,61,527,59,60,62,23,24,66,67,774,603,602,614,267,22,28,27,90,89',
'91,92,307,101,17,569,539,-86,100,541,-82,41,-80,590,94,93,-80,84,50',
'86,85,87,546,88,95,96,-528,81,82,-81,38,39,101,101,-90,569,-90,100,100',
'-90,-92,-94,101,-94,569,879,-94,100,-87,-80,-92,-93,-92,210,-91,-92',
'214,-89,-80,52,645,-91,54,-91,-86,-88,-91,-88,40,-452,-88,-448,714,601',
'215,101,18,569,-448,714,100,79,73,75,76,77,78,-95,-82,-95,74,80,-95',
'-87,644,63,64,65,56,51,-84,53,-64,57,58,682,37,83,61,73,59,60,62,258',
'259,66,67,74,741,-88,227,-528,257,290,294,90,89,91,92,738,-529,219,-86',
'227,603,602,608,706,41,-75,526,94,93,796,84,50,86,85,87,454,88,95,96',
'-445,81,82,-82,38,39,-83,-445,-87,343,342,796,-93,577,-93,-84,-86,-93',
'-89,101,-89,713,267,-89,100,-86,101,210,713,452,214,100,601,52,714,-81',
'54,-94,802,-85,-82,-83,40,205,206,-87,739,803,101,-82,218,553,-84,100',
'-87,79,73,75,76,77,78,-84,556,204,74,80,704,-446,806,-249,-249,-249',
'56,-249,-446,53,-449,-249,-249,-95,37,83,-249,-449,-249,-249,-249,-249',
'-249,-249,-249,773,807,603,602,604,-249,-249,-249,-249,-249,-249,-249',
'-81,-87,-249,-529,-85,-528,-83,601,227,-249,-95,601,-249,-249,606,-249',
'-249,-249,-249,-249,-249,-249,-249,-249,556,-249,-249,-450,-249,-249',
'101,101,810,713,-450,100,100,-81,-90,227,224,-85,-447,-83,226,225,-81',
'741,101,-447,-85,-249,-83,100,-249,267,596,-249,738,485,-249,487,-249',
'597,-249,796,-249,819,603,602,599,224,603,602,-249,226,225,203,925,-249',
'-249,-249,-249,-249,-249,926,820,539,-249,-249,541,343,342,-530,-530',
'-530,-249,-530,101,-249,-443,-530,-530,100,-249,-249,-530,-443,-530',
'-530,-530,-530,-530,-530,-530,103,104,105,106,107,-530,-530,-530,-530',
'-530,-530,-530,101,739,-530,203,200,100,924,619,202,-530,453,201,-530',
'-530,822,-530,-530,-530,-530,-530,-530,-530,-530,-530,528,-530,-530',
'694,-530,-530,227,227,231,236,237,238,233,235,243,244,239,240,203,579',
'220,221,264,101,241,242,580,-530,100,265,-530,-530,307,-530,690,199',
'-530,202,-530,224,-530,230,-530,226,225,222,223,234,232,228,-530,229',
'689,203,587,-530,-530,-530,-530,-530,-530,585,-528,763,-530,-530,824',
'245,451,-531,-531,-531,-530,-531,578,-530,202,-531,-531,787,-530,-530',
'-531,688,-531,-531,-531,-531,-531,-531,-531,103,104,105,106,107,-531',
'-531,-531,-531,-531,-531,-531,-440,-81,-531,-278,-278,786,586,-440,202',
'-531,-89,-278,-531,-531,307,-531,-531,-531,-531,-531,-531,-531,-531',
'-531,542,-531,-531,489,-531,-531,832,227,231,236,237,238,233,235,243',
'244,239,240,203,518,220,221,543,411,241,242,519,-531,413,412,-531,-531',
'834,-531,837,-278,-531,-278,-531,224,-531,230,-531,226,225,222,223,234',
'232,228,-531,229,838,-325,-325,-531,-531,-531,-531,-531,-531,-325,840',
'-452,-531,-531,842,245,642,63,64,65,-531,51,517,-531,202,57,58,844,-531',
'-531,61,682,59,60,62,258,259,66,67,846,-526,343,342,784,257,28,27,90',
'89,91,92,101,-80,219,203,448,100,-325,532,-325,41,-88,449,94,93,276',
'84,50,86,85,87,261,88,95,96,-259,81,82,674,38,39,414,227,231,236,237',
'238,233,235,243,244,239,240,-443,-443,220,221,300,301,241,242,-443,210',
'815,796,214,-526,489,52,672,450,54,202,256,224,-75,230,40,226,225,222',
'223,234,232,228,218,229,-526,-277,-277,79,73,75,76,77,78,-277,671,526',
'74,80,-529,245,669,63,64,65,56,51,-443,53,-443,57,58,494,37,83,61,401',
'59,60,62,258,259,66,67,103,104,105,106,107,257,290,294,90,89,91,92,661',
'-86,219,203,587,623,-277,660,-277,41,-94,805,94,93,857,84,50,86,85,87',
'858,88,95,96,859,81,82,860,38,39,489,227,231,236,237,238,233,235,243',
'244,239,240,203,529,220,221,-82,862,241,242,530,210,343,342,214,-90',
'863,52,682,586,54,202,307,224,865,230,40,226,225,222,223,234,232,228',
'218,229,550,624,-257,79,73,75,76,77,78,205,206,869,74,80,553,245,554',
'63,64,65,56,51,450,53,202,57,58,487,37,83,61,874,59,60,62,258,259,66',
'67,815,796,390,-84,876,257,28,27,90,89,91,92,-92,387,219,522,523,399',
'400,619,556,41,565,227,94,93,227,84,50,86,85,87,261,88,95,96,882,81',
'82,884,38,39,885,227,231,236,237,238,233,235,243,244,239,240,307,227',
'220,221,759,227,241,242,566,210,513,-258,214,898,-260,52,776,267,54',
'633,256,224,791,230,40,226,225,222,223,234,232,228,218,229,307,-63,299',
'79,73,75,76,77,78,403,556,267,74,80,910,245,911,-227,298,581,56,894',
'622,53,916,837,741,918,37,83,63,64,65,8,51,842,842,738,57,58,844,-257',
'246,61,621,59,60,62,23,24,66,67,696,511,582,927,696,22,28,27,90,89,91',
'92,618,583,17,520,340,339,343,342,7,41,198,9,94,93,933,84,50,86,85,87',
'615,88,95,96,197,81,82,688,38,39,196,227,611,607,195,340,339,343,342',
'340,339,343,342,739,494,894,943,842,241,242,741,36,945,946,30,108,512',
'52,494,97,54,738,32,224,-529,230,40,226,225,222,223,,,228,18,229,,,',
'79,73,75,76,77,78,,,,74,80,,,340,339,343,342,56,848,849,53,,850,95,96',
'37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,739,,22',
'28,27,90,89,91,92,,558,17,335,333,332,,334,7,41,,9,94,93,,84,50,86,85',
'87,,88,95,96,,81,82,,38,39,,227,231,236,237,238,233,235,243,244,239',
'240,,,220,221,,,241,242,,36,,,30,,,52,,,54,,32,224,,230,40,226,225,222',
'223,234,232,228,18,229,,,,79,73,75,76,77,78,,,,74,80,,245,,-227,,,56',
',,53,,,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,',
',,,22,28,27,90,89,91,92,,558,17,335,333,332,,334,7,41,,9,94,93,,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,,227,231,236,237,238,233,235,243,244',
'239,240,,,220,221,,,241,242,,36,,,30,,,52,,,54,,32,224,,230,40,226,225',
'222,223,234,232,228,18,229,,,,79,73,75,76,77,78,,,,74,80,,245,,63,64',
'65,56,51,,53,,57,58,,37,83,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90',
'89,91,92,,,17,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,,227,231,236,237,238,233,235,243,244,239,240,,,220,221,,,241,242',
',210,,,214,,,52,,,54,,,224,,230,40,226,225,222,223,234,232,228,18,229',
',,,79,73,75,76,77,78,,,,74,80,,245,,63,64,65,56,51,,53,,57,58,,37,83',
'61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94',
'93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,227,231,236,237,238,233',
'235,243,244,239,240,,,220,221,,,241,242,,210,,,214,,,52,,,54,,,224,',
'230,40,226,225,222,223,234,232,228,18,229,,,,79,73,75,76,77,78,,,,74',
'80,,245,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,23,24,66,67,',
',,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95',
'96,,81,82,,38,39,,227,231,236,237,238,233,235,243,244,239,240,,,220',
'221,,,241,242,,210,,,214,215,,52,,,54,,,224,,230,40,226,225,222,223',
'234,232,228,18,229,,,,79,73,75,76,77,78,,,,74,80,,245,,63,64,65,56,51',
',53,,57,58,,37,83,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92',
',,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,227',
'231,236,237,238,233,235,243,244,239,240,,,220,221,,,241,242,,210,,,214',
',,52,,,54,,,224,,230,40,226,225,222,223,234,232,228,218,229,,,,79,73',
'75,76,77,78,,,,74,80,,245,,,,,56,,,53,,,,,37,83,63,64,65,8,51,,,,57',
'58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7',
'41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,227,231,236,237',
'238,233,235,243,244,239,240,,,220,221,,,241,242,,36,,,30,,,52,,,54,',
'32,224,,230,40,226,225,222,223,234,232,228,18,229,,,,79,73,75,76,77',
'78,,,,74,80,,245,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258',
'259,66,67,,,,,,257,290,294,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,,227,231,236,237,238,233,235,243,244',
'239,240,,,220,221,,,241,242,,210,,,214,,,52,,,54,,650,224,254,230,40',
'226,225,222,223,234,232,228,218,229,,,,79,73,75,76,77,78,,,,74,80,,245',
',63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257',
'28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,261,88,95,96',
',81,82,,38,39,,227,231,236,237,238,233,235,243,244,239,240,,,220,221',
',,241,242,,210,,,214,,,52,,,54,,256,224,254,230,40,226,225,222,223,234',
'232,228,218,229,,,,79,73,75,76,77,78,,,,74,80,,245,,63,64,65,56,51,',
'53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,28,27,90,89,91',
'92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,261,88,95,96,,81,82,,38,39',
',227,231,236,237,238,233,235,243,244,239,240,,,220,221,,,241,242,,210',
',,214,,,52,,,54,,256,224,254,230,40,226,225,222,223,234,232,228,218',
'229,,,,79,73,75,76,77,78,,,,74,80,,245,,63,64,65,56,51,,53,,57,58,,37',
'83,61,,59,60,62,258,259,66,67,,,,,,257,28,27,90,89,91,92,,,219,,,,,',
',41,,,94,93,,84,50,86,85,87,261,88,95,96,,81,82,,38,39,,227,231,236',
'237,238,233,235,243,244,239,240,,,220,221,,,241,242,,210,,,214,,,52',
',,54,,256,224,254,230,40,226,225,222,223,234,232,228,218,229,,,,79,73',
'75,76,77,78,,,,74,80,,245,,,,,56,,,53,,,,,37,83,63,64,65,8,51,,,,57',
'58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7',
'41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,227,231,236,237',
'238,233,235,243,244,239,240,,,220,221,,,241,242,,36,,,30,,,52,,,54,',
'32,224,,230,40,226,225,222,223,234,232,228,18,229,,,,79,73,75,76,77',
'78,,,,74,80,,245,,,,,56,,,53,,,,,37,83,63,64,65,8,51,,,,57,58,,,,61',
',59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,558,17,335,333,332',
',334,7,41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,558,,335',
'333,332,,334,,,558,561,335,333,332,,334,,,812,,,36,,,30,,,52,,,54,,32',
',,,40,,,561,,,,,18,,,564,561,79,73,75,76,77,78,,564,,74,80,,,,-249,-249',
'-249,56,-249,,53,,-249,-249,,37,83,-249,,-249,-249,-249,-249,-249,-249',
'-249,,,,,,-249,-249,-249,-249,-249,-249,-249,,,-249,,,,227,,,-249,,',
'-249,-249,,-249,-249,-249,-249,-249,-249,-249,-249,-249,,-249,-249,',
'-249,-249,,227,-549,-549,-549,-549,233,235,224,,-549,-549,226,225,222',
'223,,,241,242,,-249,,,-249,267,,-249,,,-249,,-249,224,-249,230,-249',
'226,225,222,223,234,232,228,-249,229,,,,-249,-249,-249,-249,-249,-249',
',,,-249,-249,,,,63,64,65,-249,51,,-249,,57,58,,-249,-249,61,,59,60,62',
'258,259,66,67,,,,,,257,290,294,90,89,91,92,227,,219,,,,,,,41,,,94,93',
',84,50,86,85,87,,88,95,96,,81,82,,38,39,,227,224,,,,226,225,222,223',
',,,,,,,,241,242,,210,,,214,,,52,,,54,,,224,,230,40,226,225,222,223,',
',228,218,229,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,,37,83,63',
'64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89',
'91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39',
',227,,,,,,,,,,,,,,,,,241,242,,36,,,280,,,52,,,54,,32,224,,230,40,226',
'225,222,223,,,228,18,229,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56',
'51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,290,294,90',
'89,91,92,,,219,,,,,,,291,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,326',
',335,333,332,227,334,,,,,,,,,,,,,,,,241,242,288,,,285,,,52,,,54,,284',
',224,,337,,226,225,222,223,,,340,339,343,342,,79,73,75,76,77,78,778',
',,74,80,,,,63,64,65,56,51,,53,,57,58,,295,83,61,,59,60,62,258,259,66',
'67,,,,,,257,290,294,90,89,91,92,,,219,,,,,,,291,,,94,93,,84,50,86,85',
'87,,88,95,96,,81,82,751,,335,333,332,741,334,,,,,,,,,,738,,,,,,,,288',
',,214,,,52,,,54,,,,,,337,736,,,,,,,340,339,343,342,,79,73,75,76,77,78',
',,,74,80,,,,297,,,56,,,53,,,,,295,83,63,64,65,,51,,,739,57,58,,,,61',
',59,60,62,258,259,66,67,,,,,,257,290,294,90,89,91,92,,,219,,,,,,,41',
',,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,227,-549,-549,-549',
'-549,233,235,,,-549,-549,,,,,,,241,242,,210,,,214,,,52,,,54,,650,224',
',230,40,226,225,222,223,234,232,228,218,229,,,,79,73,75,76,77,78,,,',
'74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67',
',,,,,257,290,294,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87',
',88,95,96,,81,82,,38,39,,227,231,236,237,238,233,235,243,244,239,240',
',,-549,-549,,,241,242,,210,,,214,,,52,,,54,,,224,,230,40,226,225,222',
'223,234,232,228,218,229,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56',
'51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,290,294,90',
'89,91,92,,,219,,,,,,,291,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,326',
',335,333,332,,334,,,,,,,,,,,,,,,,,,905,,,214,,,52,,,54,,,,,,337,321',
',,,,,,340,339,343,342,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51',
',53,,57,58,,295,83,61,,59,60,62,258,259,66,67,,,,,,257,290,294,90,89',
'91,92,,,219,,,,,,,291,,,94,93,,84,50,86,85,360,,88,95,96,,81,82,326',
',335,333,332,,334,,,,,,,,,,,,,,,,,,361,,,214,,,52,,,54,,,,,,337,,549',
',,,,,340,339,343,342,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,',
'53,,57,58,,295,83,61,,59,60,62,258,259,66,67,,,,,,257,290,294,90,89',
'91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39',
',227,-549,-549,-549,-549,233,235,,,-549,-549,,,,,,,241,242,,210,,,214',
',,52,,,54,,,224,,230,40,226,225,222,223,234,232,228,218,229,,,,79,73',
'75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62',
'258,259,66,67,,,,,,257,290,294,90,89,91,92,,,219,,,,,,,41,,,94,93,,84',
'50,86,85,87,,88,95,96,,81,82,,38,39,,227,-549,-549,-549,-549,233,235',
',,-549,-549,,,,,,,241,242,,210,,,214,,,52,,,54,,,224,,230,40,226,225',
'222,223,234,232,228,218,229,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65',
'56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,290,294',
'90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82',
',38,39,,227,-549,-549,-549,-549,233,235,,,-549,-549,,,,,,,241,242,,210',
',,214,,,52,,,54,,,224,,230,40,226,225,222,223,234,232,228,218,229,,',
',79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,,37,83,63,64,65,8,51,,',
',57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,',
',,,7,41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,227,-549,-549',
'-549,-549,233,235,,,-549,-549,,,,,,,241,242,,36,,,30,,,52,,,54,,32,224',
',230,40,226,225,222,223,234,232,228,18,229,,,,79,73,75,76,77,78,,,,74',
'80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,',
',,,257,290,294,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,261',
'88,95,96,,81,82,,38,39,,227,231,236,237,238,233,235,,,239,240,,,,,,',
'241,242,,210,,,214,,,52,,,54,,,224,254,230,40,226,225,222,223,234,232',
'228,218,229,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57',
'58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,290,294,90,89,91,92,,',
'219,,,,,,,41,,,94,93,,84,50,86,85,87,261,88,95,96,,81,82,,38,39,,227',
'231,236,237,238,233,235,243,,239,240,,,,,,,241,242,,210,,,214,,,52,',
',54,,650,224,254,230,40,226,225,222,223,234,232,228,218,229,,,,79,73',
'75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,,84,50,86',
'85,87,,88,95,96,,81,82,,38,39,,227,231,236,237,238,233,235,243,244,239',
'240,,,-549,-549,,,241,242,,210,,,214,,,52,,,54,,,224,,230,40,226,225',
'222,223,234,232,228,18,229,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65',
'56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,28,27,90',
'89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,261,88,95,96,,81,82',
',38,39,,227,,,,,,,,,,,,,,,,,241,242,,210,,,214,,,52,,,54,,256,224,,230',
'40,226,225,222,223,,,228,218,229,,,,79,73,75,76,77,78,,,,74,80,,,,63',
'64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,290',
'294,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,261,88,95,96',
',81,82,,38,39,,227,,,,,,,,,,,,,,,,,241,242,,210,,,214,,,52,,,54,,,224',
',230,40,226,225,222,223,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63',
'64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,290',
'294,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81',
'82,,38,39,,227,,,,,,,,,,,,,,,,,241,242,,210,,,214,,,52,,,54,,,224,,230',
'40,226,225,222,223,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65',
'56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,290,294',
'90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,',
',,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61',
',59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93',
',84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214',
',,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64',
'65,56,51,,53,,57,58,,37,83,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90',
'89,91,92,,,17,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79',
'73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60',
'62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52',
',,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,101,,,,,100,56',
',,53,,,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,258,259,66,67,',
',,,,257,290,294,90,89,91,92,,,219,,,,,,,291,,,94,93,,84,50,86,85,87',
',88,95,96,,81,82,326,,335,333,332,,334,,,,,,,,,,,,,,,,,,355,,,30,,,52',
',,54,,32,,,,337,,,,,,,,340,339,343,342,,79,73,75,76,77,78,,,,74,80,',
',,63,64,65,56,51,,53,,57,58,,295,83,61,,59,60,62,258,259,66,67,,,,,',
'257,290,294,90,89,91,92,,,219,,,,,,,291,,,94,93,,84,50,86,85,360,,88',
'95,96,,81,82,,,,,,,,,,,,,,,,,,,,,,366,,,361,,,214,,,52,,,54,,,,,,,,',
',,,,,,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,295',
'83,61,,59,60,62,258,259,66,67,,,,,,257,290,294,90,89,91,92,,,219,,,',
',,,41,,,94,93,,84,50,86,85,87,261,88,95,96,,81,82,,38,39,,,,,,,,,,,',
',,,,,,,,,,210,,,214,,,52,,,54,,,,254,,40,,,,,,,,218,,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,,,,,37,83,63,64,65,8,51,,,,57,58,,,,61',
',59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94',
'93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,36,',
',30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,',
',,,56,,,53,,,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66',
'67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87',
',88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,',
',,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53',
',57,58,,37,83,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17',
',,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,',
',,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78',
',,,74,80,,,,,,,56,,,53,,,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60',
'62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84',
'50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52',
',,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65',
'56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,290,294',
'90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,256,,,,40,,,,,,,,218',
',,,,79,73,75,76,77,78,,,,74,80,,,,-525,-525,-525,56,-525,,53,,-525,-525',
',37,83,-525,,-525,-525,-525,-525,-525,-525,-525,,-525,,,,-525,-525,-525',
'-525,-525,-525,-525,,,-525,,,,,,,-525,,,-525,-525,,-525,-525,-525,-525',
'-525,-525,-525,-525,-525,,-525,-525,,-525,-525,,,,,,,,,,,,,,,,,,,,,',
'-525,,,-525,-525,,-525,,,-525,,-525,,-525,,-525,,,,,,,,-525,,-525,,',
'-525,-525,-525,-525,-525,-525,,,,-525,-525,,,,-526,-526,-526,-525,-526',
',-525,,-526,-526,,-525,-525,-526,,-526,-526,-526,-526,-526,-526,-526',
',-526,,,,-526,-526,-526,-526,-526,-526,-526,,,-526,,,,,,,-526,,,-526',
'-526,,-526,-526,-526,-526,-526,-526,-526,-526,-526,,-526,-526,,-526',
'-526,,,,,,,,,,,,,,,,,,,,,,-526,,,-526,-526,,-526,,,-526,,-526,,-526',
',-526,,,,,,,,-526,,-526,,,-526,-526,-526,-526,-526,-526,,,,-526,-526',
',,,63,64,65,-526,51,,-526,,57,58,,-526,-526,61,,59,60,62,258,259,66',
'67,,,,,,257,290,294,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85',
'87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54',
',,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,',
'37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28',
'27,90,89,91,92,,,17,,,,,,7,41,6,9,94,93,,84,50,86,85,87,,88,95,96,,81',
'82,,38,39,,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,403,56,,,53,,,,,37,83,63,64,65,',
'51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,',
'17,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,',
',,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77',
'78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,23,24,66',
'67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,,84,50,86,85,87,',
'88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,',
',40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,',
'57,58,,37,83,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17',
',,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,',
',,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78',
',,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,23,24,66,67',
',,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40',
',,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,,37,83,63',
'64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89',
'91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,,37,83,63,64,65,8,51,,,,57,58',
',,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41',
'6,9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,',
',,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74',
'80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,',
',,,257,290,294,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40',
',,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57',
'58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,290,294,90,89,91,92,,',
'219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,',
',,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76',
'77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,23,24',
'66,67,,,,,,22,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85',
'87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54',
',,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,',
'37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28',
'27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88,95,96,,81',
'82,,38,39,,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18',
',,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61',
',59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,219,,,,,,,41,,,94',
'93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210',
',,214,,,52,,,54,,420,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80',
',,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,23,24,66,67,,,,,,22',
'28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,',
'81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,420,,,,40,,,',
',,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58',
',37,83,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,219,,,,',
',,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,',
',,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,',
',,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66',
'67,,,,,,257,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87',
'261,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54',
',256,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56',
'51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,290,294,90',
'89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79',
'73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,,37,83,63,64,65,8,51,,,,57',
'58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7',
'41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,',
',,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,',
'74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67',
',,,,,257,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,261',
'88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,256',
',,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53',
',57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,290,294,90,89,91,92',
',,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,',
',,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79,73,75',
'76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,23',
'24,66,67,,,,,,22,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86',
'85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,',
'54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56',
'51,,53,,57,58,,37,83,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91',
'92,,,17,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,',
',,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75',
'76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,23',
'24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,,84,50,86,85',
'87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54',
',,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,,37',
'83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27',
'90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,',
',,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,,37,83,63,64,65,8,51,',
',,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,',
',,,,7,41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,',
',,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,,,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59',
'60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93',
',84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,36,,,30',
',,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64',
'65,56,51,,53,,57,58,,37,83,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90',
'89,91,92,,,17,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79',
'73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60',
'62,258,259,66,67,,,,,,257,290,294,90,89,91,92,,,219,,,,,,,41,,,94,93',
',84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214',
',,52,,,54,,256,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63',
'64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,290',
'294,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81',
'82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,420,,,,40,,,,,,',
',218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,,37,83,63,64,65',
'8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92',
',,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,',
',,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75',
'76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,23',
'24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,,84,50,86,85',
'87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,456,52,,',
'54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51',
',53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,290,294,90,89',
'91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79,73',
'75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62',
'258,259,66,67,,,,,,257,290,294,90,89,91,92,,,219,,,,,,,291,,,94,93,',
'84,50,86,85,87,,88,95,96,,81,82,,,,,,,,,,,,,,,,,,,,,,,,,288,,,285,,',
'52,,,54,,,,,,,,,,,,,,,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56',
'51,,53,,57,58,,295,83,61,,59,60,62,258,259,66,67,,,,,,257,290,294,90',
'89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79',
'73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60',
'62,258,259,66,67,,,,,,257,290,294,90,89,91,92,,,219,,,,,,,41,,,94,93',
',84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214',
',,52,,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64',
'65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,290,294',
'90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,',
',,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61',
',59,60,62,258,259,66,67,,,,,,257,290,294,90,89,91,92,,,219,,,,,,,41',
',,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,',
',210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74',
'80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,',
',,,257,290,294,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40',
',,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57',
'58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,290,294,90,89,91,92,,',
'219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,',
',,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76',
'77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258',
'259,66,67,,,,,,257,290,294,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52',
',,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56',
'51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,290,294,90',
'89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79',
'73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60',
'62,258,259,66,67,,,,,,257,290,294,90,89,91,92,,,219,,,,,,,41,,,94,93',
',84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214',
',,52,,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64',
'65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,290,294',
'90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,',
',,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61',
',59,60,62,258,259,66,67,,,,,,257,290,294,90,89,91,92,,,219,,,,,,,41',
',,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,',
',210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74',
'80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,',
',,,257,290,294,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40',
',,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57',
'58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,290,294,90,89,91,92,,',
'219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,',
',,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76',
'77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258',
'259,66,67,,,,,,257,290,294,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52',
',,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56',
'51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,290,294,90',
'89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79',
'73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60',
'62,258,259,66,67,,,,,,257,290,294,90,89,91,92,,,219,,,,,,,41,,,94,93',
',84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214',
',,52,,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64',
'65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,290,294',
'90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,',
',,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61',
',59,60,62,258,259,66,67,,,,,,257,290,294,90,89,91,92,,,219,,,,,,,41',
',,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,',
',210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74',
'80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,',
',,,257,290,294,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40',
',,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57',
'58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,290,294,90,89,91,92,,',
'219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,',
',,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76',
'77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258',
'259,66,67,,,,,,257,290,294,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52',
',,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56',
'51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,290,294,90',
'89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79',
'73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60',
'62,258,259,66,67,,,,,,257,290,294,90,89,91,92,,,219,,,,,,,41,,,94,93',
',84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214',
',,52,,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64',
'65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,290,294',
'90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,',
',,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61',
',59,60,62,258,259,66,67,,,,,,257,290,294,90,89,91,92,,,219,,,,,,,41',
',,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,',
',210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74',
'80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,',
',,,257,290,294,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40',
',,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57',
'58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,290,294,90,89,91,92,,',
'219,,,,,,,291,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,751,,335,333',
'332,741,334,,,,,,,,,,738,,,,,,,,288,,,285,,,52,,,54,,,,,,337,,,,,,,',
'340,339,343,342,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,,295,83',
'63,64,65,8,51,,,739,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27',
'90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,',
',,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,,37,83,63,64,65,8,51,',
',,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,',
',,,,7,41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,',
',,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77',
'78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259',
'66,67,,,,,,257,290,294,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86',
'85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,',
'54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56',
'51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,290,294,90',
'89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,261,88,95,96,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,254,,40,,,,,,,,218',
',,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61',
',59,60,62,258,259,66,67,,,,,,257,290,294,90,89,91,92,,,219,,,,,,,41',
',,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,',
',210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74',
'80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,',
',,,257,290,294,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40',
',,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57',
'58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,290,294,90,89,91,92,,',
'219,,,,,,,41,,,94,93,,84,50,86,85,87,261,88,95,96,,81,82,,38,39,,,,',
',,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,650,,254,,40,,,,,,,,218,,,,,79',
'73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,,37,83,63,64,65,8,51,,,,57',
'58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7',
'41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,',
',,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,',
'74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67',
',,,,,257,290,294,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87',
',88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,',
',,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53',
',57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,28,27,90,89,91,92',
',,219,,,,,,,41,,,94,93,,84,50,86,85,87,261,88,95,96,,81,82,,38,39,,',
',,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,256,,254,,40,,,,,,,,218,,,,',
'79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59',
'60,62,258,259,66,67,,,,,,257,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93',
',84,50,86,85,87,261,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210',
',,214,,,503,,,54,,256,,254,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74',
'80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,',
',,,257,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,261',
'88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,507,52,,,54,',
'256,,254,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
',,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22',
'28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88,95,96',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,',
',,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37',
'83,61,,59,60,62,258,259,66,67,,,,,,257,290,294,90,89,91,92,,,219,,,',
',,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,',
',,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78',
',,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66',
'67,,,,,,257,290,294,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85',
'87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54',
',,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,',
'37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28',
'27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88,95,96,,81',
'82,,38,39,,,,,,,,,,,,,,,,,,,,,,36,,,280,,,52,,,54,,32,,,,40,,,,,,,,18',
',,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61',
',59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93',
',84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214',
',665,52,,,54,,,,254,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,',
'63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257',
'290,294,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,',
',,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37',
'83,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,219,,,,,,,41',
',,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,',
',210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74',
'80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,',
',,,257,290,294,90,89,91,92,,,219,,,,,,,291,,,94,93,,84,50,86,85,87,',
'88,95,96,,81,82,751,,335,333,332,741,334,,,,,,,,,,738,,,,,,,,288,,,214',
',,52,,,54,,,,,,337,,,,,,,,340,339,343,342,,79,73,75,76,77,78,,,,74,80',
',,,515,,,56,,,53,,,,,295,83,63,64,65,8,51,,,739,57,58,,,,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,36,,,280,,,52',
',,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65',
'56,51,,53,,57,58,,37,83,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89',
'91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79,73',
'75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52',
',,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56',
'51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,290,294,90',
'89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,762,,,,40,,,,,,,,218,,',
',,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61',
',59,60,62,258,259,66,67,,,,,,257,290,294,90,89,91,92,,,219,,,,,,,41',
',,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,',
',210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74',
'80,,,,,,,56,,,53,,,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23',
'24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86',
'85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54',
',32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,403,56,,,53',
',,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22',
'28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81',
'82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,18',
',,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61',
',59,60,62,258,259,66,67,,,,,,257,28,27,90,89,91,92,,,219,,,,,,,41,,',
'94,93,,84,50,86,85,87,261,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,',
',,210,,,214,,,52,,,54,,256,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,',
',74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67',
',,,,,257,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,261',
'88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,256',
',,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,,37',
'83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27',
'90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,',
',,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61',
',59,60,62,258,259,66,67,,,,,,257,290,294,90,89,91,92,,,219,,,,,,,291',
',,94,93,,84,50,86,85,87,,88,95,96,,81,82,751,,335,333,332,741,334,,',
',,,,,,,738,,,,,,,,288,,,285,,,52,,,54,,,,,,337,736,,,,,,,340,339,343',
'342,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,,295,83,63,64,65,8',
'51,,,739,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92',
',,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,',
',,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,,,,,37,83,63,64,65,8,51,,,,57,58,,,',
'61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9',
'94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,36',
',,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,',
',63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257',
'290,294,90,89,91,92,,,219,,,,,,,291,,,94,93,,84,50,86,85,87,,88,95,96',
',81,82,,,,,,,,,,,,,,,,,,,,,,,,,700,,,214,,,52,,,54,,,,,,,,,,,,,,,,,',
',79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,,295,83,63,64,65,8,51,',
',,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,',
',,,,7,41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,',
',,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,,,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59',
'60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93',
',84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,36,,,30',
',,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64',
'65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,290,294',
'90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,532,,52,,,54,,,,,,40,,,,,,,,218',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,,37,83,63,64,65,8,51',
',,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17',
',,,,,7,41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,',
',,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77',
'78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259',
'66,67,,,,,,257,290,294,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86',
'85,87,261,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52',
',,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56',
'51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,290,294,90',
'89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,261,88,95,96,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,650,,,,40,,,,,,,,218',
',,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61',
',59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93',
',84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214',
',,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64',
'65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,290,294',
'90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,',
',,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61',
',59,60,62,258,259,66,67,,,,,,257,290,294,90,89,91,92,,,219,,,,,,,41',
',,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,',
',210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74',
'80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,',
',,,257,290,294,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40',
',,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57',
'58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,28,27,90,89,91,92,,,219',
',,,,,,41,,,94,93,,84,50,86,85,87,261,88,95,96,,81,82,,38,39,,,,,,,,',
',,,,,,,,,,,,,210,,,214,,,52,,,54,,256,,,,40,,,,,,,,218,,,,,79,73,75',
'76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258',
'259,66,67,,,,,,257,290,294,90,89,91,92,,,219,,,,,,,291,,,94,93,,84,50',
'86,85,87,,88,95,96,,81,82,,,,,,,,,,,,,,,,,,,,,,,,,288,,,285,,,52,,,54',
',,,,,,,,,,,,,,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,',
'57,58,,295,83,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17',
',,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,',
',,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78',
',,,74,80,,,,,-532,,56,,,53,,-532,-532,-532,37,83,-532,-532,-532,,-532',
',,,,,,,,-532,-532,-532,,,,,,,,,-532,-532,,-532,-532,-532,-532,-532,',
',,,,,,,,,,,,,,,,,,,,,,-532,-532,-532,-532,-532,-532,-532,-532,-532,-532',
'-532,-532,-532,-532,-532,,,-532,-532,-532,,775,-532,,,-532,,,-532,,-532',
',-532,,-532,,-532,-532,-532,-532,-532,-532,-532,,-532,-532,-532,,,,',
',,,,,,,,-532,-532,-532,-532,,-532,-277,,-532,,-532,,-91,-277,-277,-277',
',,,-277,-277,,-277,,,,,,,,,,,,,,,,,,,,-277,-277,,-277,-277,-277,-277',
'-277,,,,,,,,,,,,,,,,,,,,,,,,-277,-277,-277,-277,-277,-277,-277,-277',
'-277,-277,-277,-277,-277,-277,-277,,,-277,-277,-277,,632,,,,-277,,,',
',,,-277,,-277,,-277,-277,-277,-277,-277,-277,-277,,-277,,-277,,,,,,',
',,,,,,-277,-277,,-85,,-277,-277,,-277,,-277,,-93,-277,-277,-277,,,-277',
'-277,-277,,-277,,,,,,,,,,-277,-277,,,,,,,,,-277,-277,,-277,-277,-277',
'-277,-277,,,,,,,,,,,,,,,,,,,,,,,,-277,-277,-277,-277,-277,-277,-277',
'-277,-277,-277,-277,-277,-277,-277,-277,,,-277,-277,-277,,632,-277,',
',-277,,,-277,,-277,,-277,,-277,,-277,-277,-277,-277,-277,-277,-277,',
'-277,,-277,,,,,,,,,,,,,-277,-277,-277,-277,,-277,-532,,-277,,-277,,-93',
'-532,-532,-532,,,,-532,-532,,-532,,,,,,,,,-532,,,,,,,,,,,-532,-532,',
'-532,-532,-532,-532,-532,,,,,,,,,,,,,,,,,,,,,,,,-532,-532,-532,-532',
'-532,-532,-532,-532,-532,-532,-532,-532,-532,-532,-532,,,-532,-532,-532',
',629,,,,-532,,,,,,,-532,,-532,,-532,-532,-532,-532,-532,-532,-532,,-532',
'-532,-532,,,,,,,,,,,,,-532,-532,,-83,,-532,-286,,-532,,-532,,-91,-286',
'-286,-286,,,-286,-286,-286,,-286,,,,,,,,,,-286,-286,,,,,,,,,-286,-286',
',-286,-286,-286,-286,-286,,,,,,,,,,,,,,,,,,,,,,,,-286,-286,-286,-286',
'-286,-286,-286,-286,-286,-286,-286,-286,-286,-286,-286,,,-286,-286,-286',
',,-286,,276,-286,,,-286,,-286,,-286,,-286,,-286,-286,-286,-286,-286',
'-286,-286,,-286,,-286,,,,,,,,,,,,,-286,-286,-286,-286,-272,-286,,,-286',
',-286,-272,-272,-272,,,-272,-272,-272,,-272,,,,,,,,,,-272,-272,-272',
',,,,,,,-272,-272,,-272,-272,-272,-272,-272,,,,,,,,,,,,,,,,,,,,,,,,-272',
'-272,-272,-272,-272,-272,-272,-272,-272,-272,-272,-272,-272,-272,-272',
',,-272,-272,-272,,,-272,,,-272,,,-272,,-272,,-272,,-272,,-272,-272,-272',
'-272,-272,-272,-272,,-272,,-272,,,,,,,,,,,,,-272,-272,-272,-272,-548',
'-272,,-272,-272,,-272,-548,-548,-548,,,-548,-548,-548,,-548,,,,,,,,',
',-548,,,,,,,,,,-548,-548,,-548,-548,-548,-548,-548,,,,,,,,,,,,,,-548',
',,,,,,-548,-548,-548,,,-548,-548,-548,,-548,,,,,,-548,,,,-548,,,-548',
',,,,267,-548,-548,-548,,-548,-548,-548,-548,-548,,,,,,,,,,,,,-548,,',
',,,,,,,,,,-548,,-548,,,-548,,,,,-548,,,,,,,-548,,,,,267,-548,,,,,,,',
',,,,,,,,,,,,,-548,,,,,,,,,,,,,-548,,-548,,,-548,156,167,157,180,153',
'173,163,162,188,191,178,161,160,155,181,189,190,165,154,168,172,174',
'166,159,,,,175,182,177,176,169,179,164,152,171,170,183,184,185,186,187',
'151,158,149,150,147,148,,111,113,,,112,,,,,,,,,142,143,,139,121,122',
'123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,,,,136,135,,120',
'141,138,137,133,134,128,126,118,140,119,,,146,192,,,,,,,,,,80,156,167',
'157,180,153,173,163,162,188,191,178,161,160,155,181,189,190,165,154',
'168,172,174,166,159,,,,175,182,177,176,169,179,164,152,171,170,183,184',
'185,186,187,151,158,149,150,147,148,,111,113,,,112,,,,,,,,,142,143,',
'139,121,122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,',
',,136,135,,120,141,138,137,133,134,128,126,118,140,119,,,146,192,,,',
',,,,,,80,156,167,157,180,153,173,163,162,188,191,178,161,160,155,181',
'189,190,165,154,168,172,174,166,159,,,,175,182,177,176,169,179,164,152',
'171,170,183,184,185,186,187,151,158,149,150,147,148,,111,113,,,112,',
',,,,,,,142,143,,139,121,122,123,130,127,129,,,124,125,,,,,144,145,131',
'132,,,,,,,,,,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119',
',,146,192,,,,,,,,,,80,156,167,157,180,153,173,163,162,188,191,178,161',
'160,155,181,189,190,165,154,168,172,174,166,159,,,,175,182,177,176,169',
'179,164,152,171,170,183,184,185,186,187,151,158,149,150,147,148,,111',
'113,110,,112,,,,,,,,,142,143,,139,121,122,123,130,127,129,,,124,125',
',,,,144,145,131,132,,,,,,,,,,,,,136,135,,120,141,138,137,133,134,128',
'126,118,140,119,,,146,192,,,,,,,,,,80,156,167,157,180,153,173,163,162',
'188,191,178,161,160,155,181,189,190,165,154,168,172,174,166,159,,,,175',
'182,177,375,374,376,373,152,171,170,183,184,185,186,187,151,158,149',
'150,371,372,,369,113,86,85,370,,88,,,,,,,142,143,,139,121,122,123,130',
'127,129,,,124,125,,,,,144,145,131,132,,,,,,380,,,,,,,136,135,,120,141',
'138,137,133,134,128,126,118,140,119,,,146,156,167,157,180,153,173,163',
'162,188,191,178,161,160,155,181,189,190,165,154,168,172,174,166,159',
',,,175,182,177,176,169,179,164,152,171,170,183,184,185,186,187,151,158',
'149,150,147,148,,111,113,397,396,112,,398,,,,,,,142,143,,139,121,122',
'123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,,,,136,135,,120',
'141,138,137,133,134,128,126,118,140,119,,,146,156,167,157,180,153,173',
'163,162,188,191,178,161,160,155,181,189,190,165,154,168,172,174,166',
'159,,,,175,182,177,176,169,179,164,152,171,170,183,184,185,186,187,151',
'158,149,150,147,148,,111,113,,,112,,,,,,,,,142,143,,139,121,122,123',
'130,127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,,,,136,135,,120,141',
'138,137,133,134,128,126,118,140,119,,,146,156,167,157,180,153,173,163',
'162,188,191,178,161,160,155,181,189,190,165,154,168,172,174,166,159',
',,,175,182,177,176,169,179,164,152,171,170,183,184,185,186,187,151,158',
'149,150,147,148,,111,113,397,396,112,,398,,,,,,,142,143,,139,121,122',
'123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,,,,136,135,,120',
'141,138,137,133,134,128,126,118,140,119,723,438,146,,724,,,,,,,,,142',
'143,,139,121,122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,',
',,,,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119,637,438',
'146,,638,,,,,,,,,142,143,,139,121,122,123,130,127,129,,,124,125,,,,',
'144,145,131,132,,,,,,,,,,,,,136,135,,120,141,138,137,133,134,128,126',
'118,140,119,635,432,146,,636,,,,,,,,,142,143,,139,121,122,123,130,127',
'129,,,124,125,,,,,144,145,131,132,,,,,,267,,,,,,,136,135,,120,141,138',
'137,133,134,128,126,118,140,119,721,432,146,,722,,,,,,,,,142,143,,139',
'121,122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,267,,,,,',
',136,135,,120,141,138,137,133,134,128,126,118,140,119,940,438,146,,941',
',,,,,,,,142,143,,139,121,122,123,130,127,129,,,124,125,,,,,144,145,131',
'132,,,,,,,,,,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119',
'679,438,146,,680,,,,,,,,,142,143,,139,121,122,123,130,127,129,,,124',
'125,,,,,144,145,131,132,,,,,,,,,,,,,136,135,,120,141,138,137,133,134',
'128,126,118,140,119,442,432,146,,443,,,,,,,,,142,143,,139,121,122,123',
'130,127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,,,,136,135,,120,141',
'138,137,133,134,128,126,118,140,119,938,432,146,,939,,,,,,,,,142,143',
',139,121,122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,267',
',,,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119,676,432,146',
',677,,,,,,,,,142,143,,139,121,122,123,130,127,129,,,124,125,,,,,144',
'145,131,132,,,,,,267,,,,,,,136,135,,120,141,138,137,133,134,128,126',
'118,140,119,442,432,146,,443,,,,,,,,,142,143,,139,121,122,123,130,127',
'129,,,124,125,,,,,144,145,131,132,,,,,,,,,,,,,136,135,,120,141,138,137',
'133,134,128,126,118,140,119,442,432,146,,443,,,,,,,,,142,143,,139,121',
'122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,,,,136,135',
',120,141,138,137,133,134,128,126,118,140,119,442,432,146,,443,,,,,,',
',,142,143,,139,121,122,123,130,127,129,,,124,125,,,,,144,145,131,132',
',,,,,267,,,,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119',
'728,438,146,,871,,,,,,,,,142,143,,139,121,122,123,130,127,129,,,124',
'125,,,,,144,145,131,132,,,,,,,,,,,,,136,135,,120,141,138,137,133,134',
'128,126,118,140,119,635,432,146,,636,,,,,,,,,142,143,,139,121,122,123',
'130,127,129,,,124,125,,,,,144,145,131,132,,,,,,267,,,,,,,136,135,,120',
'141,138,137,133,134,128,126,118,140,119,434,438,146,,436,,,,,,,,,142',
'143,,139,121,122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,',
',,,,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119,428,432',
'146,,429,,,,,,,,,142,143,,139,121,122,123,130,127,129,,,124,125,,,,',
'144,145,131,132,,,,,,267,,,,,,,136,135,,120,141,138,137,133,134,128',
'126,118,140,119,728,438,146,,726,,,,,,,,,142,143,,139,121,122,123,130',
'127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,,,,136,135,,120,141,138',
'137,133,134,128,126,118,140,119,637,438,146,,638,,,,,,,,,142,143,,139',
'121,122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,,,,136',
'135,,120,141,138,137,133,134,128,126,118,140,119,,,146' ]
        racc_action_table = arr = ::Array.new(24206, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'0,0,0,0,0,868,724,722,0,0,55,309,309,0,391,0,0,0,0,0,0,0,861,312,686',
'686,312,0,0,0,0,0,0,0,455,455,0,609,26,292,505,483,0,0,0,0,0,0,346,0',
'0,0,0,0,575,0,0,0,494,0,0,581,0,0,721,691,365,351,691,351,353,598,598',
'724,505,483,320,391,875,938,686,345,345,822,776,0,927,821,0,393,455',
'0,494,574,0,939,0,55,609,609,0,309,356,286,26,292,940,609,0,678,903',
'724,722,0,0,0,0,0,0,868,347,868,0,0,868,26,292,380,380,380,0,380,906',
'0,776,380,380,568,0,0,380,300,380,380,380,380,380,380,380,636,393,393',
'393,681,380,380,380,380,380,380,380,598,346,380,346,313,581,346,313',
'721,380,286,365,380,380,353,380,380,380,380,380,320,380,380,380,940',
'380,380,822,380,380,365,875,938,875,938,365,875,938,636,927,821,927',
'821,821,927,821,356,286,939,941,939,380,723,939,380,946,286,380,504',
'940,380,940,520,903,940,903,380,209,903,373,823,388,219,347,380,347',
'373,572,347,380,380,380,380,380,380,906,676,906,380,380,906,289,504',
'420,420,420,380,420,677,380,671,420,420,673,380,380,420,71,420,420,420',
'420,420,420,420,71,834,209,684,723,420,420,420,420,420,420,420,834,941',
'420,520,685,388,388,388,563,420,671,451,420,420,687,420,420,420,420',
'420,213,420,420,420,374,420,420,676,420,420,723,374,289,834,834,913',
'941,913,941,677,520,941,946,823,946,823,294,946,823,520,572,420,572',
'211,420,572,384,420,573,791,420,451,692,680,676,679,420,733,733,289',
'834,693,3,676,420,696,677,3,289,420,420,420,420,420,420,677,698,14,420',
'420,559,375,700,430,430,430,420,430,375,420,372,430,430,211,420,420',
'430,372,430,430,430,430,430,430,430,635,701,384,384,384,430,430,430',
'430,430,430,430,791,14,430,680,680,679,679,382,460,430,14,386,430,430',
'386,430,430,430,430,430,430,430,430,430,702,430,430,371,430,430,733',
'573,705,573,371,733,573,791,635,459,460,680,376,679,460,460,791,842',
'277,376,680,430,679,277,430,430,378,430,842,251,430,252,430,378,430',
'710,430,716,382,382,382,459,386,386,430,459,459,904,904,430,430,430',
'430,430,430,904,718,316,430,430,316,842,842,438,438,438,430,438,731',
'430,370,438,438,731,430,430,438,370,438,438,438,438,438,438,438,5,5',
'5,5,5,438,438,438,438,438,438,438,737,842,438,13,13,737,904,640,904',
'438,212,13,438,438,720,438,438,438,438,438,438,438,438,438,301,438,438',
'548,438,438,304,640,640,640,640,640,640,640,640,640,640,640,354,354',
'640,640,25,591,640,640,354,438,591,25,438,438,311,438,535,13,438,13',
'438,640,438,640,438,640,640,640,640,640,640,640,438,640,534,363,363',
'438,438,438,438,438,438,363,728,622,438,438,729,640,210,439,439,439',
'438,439,354,438,354,439,439,666,438,438,439,533,439,439,439,439,439',
'439,439,670,670,670,670,670,439,439,439,439,439,439,439,369,622,439',
'583,583,663,363,369,363,439,622,583,439,439,291,439,439,439,439,439',
'439,439,439,439,314,439,439,255,439,439,740,482,482,482,482,482,482',
'482,482,482,482,482,287,287,482,482,315,110,482,482,287,439,110,110',
'439,439,744,439,745,583,439,583,439,482,439,482,439,482,482,482,482',
'482,482,482,439,482,747,42,42,439,439,439,439,439,439,42,748,35,439',
'439,749,482,482,450,450,450,439,450,287,439,287,450,450,751,439,439',
'450,524,450,450,450,450,450,450,450,754,360,837,837,659,450,450,450',
'450,450,450,450,350,35,450,208,208,350,42,521,42,450,35,208,450,450',
'290,450,450,450,450,450,450,450,450,450,761,450,450,516,450,450,193',
'765,765,765,765,765,765,765,765,765,765,765,360,360,765,765,37,37,765',
'765,360,450,708,708,450,360,317,450,514,208,450,208,450,765,511,765',
'450,765,765,765,765,765,765,765,450,765,360,726,726,450,450,450,450',
'450,450,726,510,299,450,450,726,765,506,452,452,452,450,452,360,450',
'360,452,452,266,450,450,452,97,452,452,452,452,452,452,452,278,278,278',
'278,278,452,452,452,452,452,452,452,500,299,452,699,699,428,726,499',
'726,452,299,699,452,452,779,452,452,452,452,452,780,452,452,452,783',
'452,452,785,452,452,649,249,249,249,249,249,249,249,249,249,249,249',
'302,302,249,249,428,788,249,249,302,452,556,556,452,428,789,452,790',
'699,452,699,496,249,794,249,452,249,249,249,249,249,249,249,452,249',
'325,429,797,452,452,452,452,452,452,15,15,798,452,452,326,249,328,924',
'924,924,452,924,302,452,302,924,924,647,452,452,924,813,924,924,924',
'924,924,924,924,928,928,78,429,816,924,924,924,924,924,924,924,429,77',
'924,295,295,83,83,418,329,924,341,464,924,924,463,924,924,924,924,924',
'924,924,924,924,825,924,924,828,924,924,829,418,418,418,418,418,418',
'418,418,418,418,418,830,462,418,418,613,461,418,418,344,924,283,620',
'924,852,853,924,639,441,924,440,924,418,675,418,924,418,418,418,418',
'418,418,418,924,418,41,279,36,924,924,924,924,924,924,352,872,435,924',
'924,877,418,878,418,34,355,924,918,427,924,886,888,918,891,924,924,922',
'922,922,922,922,892,893,918,922,922,894,423,20,922,421,922,922,922,922',
'922,922,922,807,281,357,905,550,922,922,922,922,922,922,922,415,361',
'922,288,918,918,918,918,922,922,12,922,922,922,915,922,922,922,922,922',
'409,922,922,922,11,922,922,923,922,922,10,471,390,387,9,807,807,807',
'807,550,550,550,550,918,625,840,932,934,471,471,840,922,935,937,922',
'6,282,922,630,1,922,840,922,471,871,471,922,471,471,471,471,,,471,922',
'471,,,,922,922,922,922,922,922,,,,922,922,,,840,840,840,840,922,755',
'755,922,,755,755,755,922,922,914,914,914,914,914,,,,914,914,,,,914,',
'914,914,914,914,914,914,914,,,,840,,914,914,914,914,914,914,914,,564',
'914,564,564,564,,564,914,914,,914,914,914,,914,914,914,914,914,,914',
'914,914,,914,914,,914,914,,662,662,662,662,662,662,662,662,662,662,662',
',,662,662,,,662,662,,914,,,914,,,914,,,914,,914,662,,662,914,662,662',
'662,662,662,662,662,914,662,,,,914,914,914,914,914,914,,,,914,914,,662',
',662,,,914,,,914,,,,,914,914,909,909,909,909,909,,,,909,909,,,,909,',
'909,909,909,909,909,909,909,,,,,,909,909,909,909,909,909,909,,812,909',
'812,812,812,,812,909,909,,909,909,909,,909,909,909,909,909,,909,909',
'909,,909,909,,909,909,,855,855,855,855,855,855,855,855,855,855,855,',
',855,855,,,855,855,,909,,,909,,,909,,,909,,909,855,,855,909,855,855',
'855,855,855,855,855,909,855,,,,909,909,909,909,909,909,,,,909,909,,855',
',349,349,349,909,349,,909,,349,349,,909,909,349,,349,349,349,349,349',
'349,349,,,,,,349,349,349,349,349,349,349,,,349,,,,,,,349,,,349,349,',
'349,349,349,349,349,,349,349,349,,349,349,,349,349,,770,770,770,770',
'770,770,770,770,770,770,770,,,770,770,,,770,770,,349,,,349,,,349,,,349',
',,770,,770,349,770,770,770,770,770,770,770,349,770,,,,349,349,349,349',
'349,349,,,,349,349,,770,,348,348,348,349,348,,349,,348,348,,349,349',
'348,,348,348,348,348,348,348,348,,,,,,348,348,348,348,348,348,348,,',
'348,,,,,,,348,,,348,348,,348,348,348,348,348,,348,348,348,,348,348,',
'348,348,,531,531,531,531,531,531,531,531,531,531,531,,,531,531,,,531',
'531,,348,,,348,,,348,,,348,,,531,,531,348,531,531,531,531,531,531,531',
'348,531,,,,348,348,348,348,348,348,,,,348,348,,531,,17,17,17,348,17',
',348,,17,17,,348,348,17,,17,17,17,17,17,17,17,,,,,,17,17,17,17,17,17',
'17,,,17,,,,,,,17,,,17,17,,17,17,17,17,17,,17,17,17,,17,17,,17,17,,445',
'445,445,445,445,445,445,445,445,445,445,,,445,445,,,445,445,,17,,,17',
'17,,17,,,17,,,445,,445,17,445,445,445,445,445,445,445,17,445,,,,17,17',
'17,17,17,17,,,,17,17,,445,,18,18,18,17,18,,17,,18,18,,17,17,18,,18,18',
'18,18,18,18,18,,,,,,18,18,18,18,18,18,18,,,18,,,,,,,18,,,18,18,,18,18',
'18,18,18,,18,18,18,,18,18,,18,18,,772,772,772,772,772,772,772,772,772',
'772,772,,,772,772,,,772,772,,18,,,18,,,18,,,18,,,772,,772,18,772,772',
'772,772,772,772,772,18,772,,,,18,18,18,18,18,18,,,,18,18,,772,,,,,18',
',,18,,,,,18,18,902,902,902,902,902,,,,902,902,,,,902,,902,902,902,902',
'902,902,902,,,,,,902,902,902,902,902,902,902,,,902,,,,,,902,902,,902',
'902,902,,902,902,902,902,902,,902,902,902,,902,902,,902,902,,760,760',
'760,760,760,760,760,760,760,760,760,,,760,760,,,760,760,,902,,,902,',
',902,,,902,,902,760,,760,902,760,760,760,760,760,760,760,902,760,,,',
'902,902,902,902,902,902,,,,902,902,,760,,900,900,900,902,900,,902,,900',
'900,,902,902,900,,900,900,900,900,900,900,900,,,,,,900,900,900,900,900',
'900,900,,,900,,,,,,,900,,,900,900,,900,900,900,900,900,,900,900,900',
',900,900,,900,900,,683,683,683,683,683,683,683,683,683,683,683,,,683',
'683,,,683,683,,900,,,900,,,900,,,900,,900,683,900,683,900,683,683,683',
'683,683,683,683,900,683,,,,900,900,900,900,900,900,,,,900,900,,683,',
'22,22,22,900,22,,900,,22,22,,900,900,22,,22,22,22,22,22,22,22,,,,,,22',
'22,22,22,22,22,22,,,22,,,,,,,22,,,22,22,,22,22,22,22,22,22,22,22,22',
',22,22,,22,22,,767,767,767,767,767,767,767,767,767,767,767,,,767,767',
',,767,767,,22,,,22,,,22,,,22,,22,767,22,767,22,767,767,767,767,767,767',
'767,22,767,,,,22,22,22,22,22,22,,,,22,22,,767,,23,23,23,22,23,,22,,23',
'23,,22,22,23,,23,23,23,23,23,23,23,,,,,,23,23,23,23,23,23,23,,,23,,',
',,,,23,,,23,23,,23,23,23,23,23,23,23,23,23,,23,23,,23,23,,777,777,777',
'777,777,777,777,777,777,777,777,,,777,777,,,777,777,,23,,,23,,,23,,',
'23,,23,777,23,777,23,777,777,777,777,777,777,777,23,777,,,,23,23,23',
'23,23,23,,,,23,23,,777,,24,24,24,23,24,,23,,24,24,,23,23,24,,24,24,24',
'24,24,24,24,,,,,,24,24,24,24,24,24,24,,,24,,,,,,,24,,,24,24,,24,24,24',
'24,24,24,24,24,24,,24,24,,24,24,,19,19,19,19,19,19,19,19,19,19,19,,',
'19,19,,,19,19,,24,,,24,,,24,,,24,,24,19,24,19,24,19,19,19,19,19,19,19',
'24,19,,,,24,24,24,24,24,24,,,,24,24,,19,,,,,24,,,24,,,,,24,24,883,883',
'883,883,883,,,,883,883,,,,883,,883,883,883,883,883,883,883,,,,,,883',
'883,883,883,883,883,883,,,883,,,,,,883,883,,883,883,883,,883,883,883',
'883,883,,883,883,883,,883,883,,883,883,,426,426,426,426,426,426,426',
'426,426,426,426,,,426,426,,,426,426,,883,,,883,,,883,,,883,,883,426',
',426,883,426,426,426,426,426,426,426,883,426,,,,883,883,883,883,883',
'883,,,,883,883,,426,,,,,883,,,883,,,,,883,883,880,880,880,880,880,,',
',880,880,,,,880,,880,880,880,880,880,880,880,,,,,,880,880,880,880,880',
'880,880,,706,880,706,706,706,,706,880,880,,880,880,880,,880,880,880',
'880,880,,880,880,880,,880,880,,880,880,561,,561,561,561,,561,,,337,706',
'337,337,337,,337,,,706,,,880,,,880,,,880,,,880,,880,,,,880,,,561,,,',
',880,,,561,337,880,880,880,880,880,880,,337,,880,880,,,,27,27,27,880',
'27,,880,,27,27,,880,880,27,,27,27,27,27,27,27,27,,,,,,27,27,27,27,27',
'27,27,,,27,,,,479,,,27,,,27,27,,27,27,27,27,27,27,27,27,27,,27,27,,27',
'27,,474,474,474,474,474,474,474,479,,474,474,479,479,479,479,,,474,474',
',27,,,27,27,,27,,,27,,27,474,27,474,27,474,474,474,474,474,474,474,27',
'474,,,,27,27,27,27,27,27,,,,27,27,,,,453,453,453,27,453,,27,,453,453',
',27,27,453,,453,453,453,453,453,453,453,,,,,,453,453,453,453,453,453',
'453,478,,453,,,,,,,453,,,453,453,,453,453,453,453,453,,453,453,453,',
'453,453,,453,453,,472,478,,,,478,478,478,478,,,,,,,,,472,472,,453,,',
'453,,,453,,,453,,,472,,472,453,472,472,472,472,,,472,453,472,,,,453',
'453,453,453,453,453,,,,453,453,,,,,,,453,,,453,,,,,453,453,30,30,30',
'30,30,,,,30,30,,,,30,,30,30,30,30,30,30,30,,,,,,30,30,30,30,30,30,30',
',,30,,,,,,30,30,,30,30,30,,30,30,30,30,30,,30,30,30,,30,30,,30,30,,469',
',,,,,,,,,,,,,,,,469,469,,30,,,30,,,30,,,30,,30,469,,469,30,469,469,469',
'469,,,469,30,469,,,,30,30,30,30,30,30,,,,30,30,,,,31,31,31,30,31,,30',
',31,31,,30,30,31,,31,31,31,31,31,31,31,,,,,,31,31,31,31,31,31,31,,,31',
',,,,,,31,,,31,31,,31,31,31,31,31,,31,31,31,,31,31,644,,644,644,644,467',
'644,,,,,,,,,,,,,,,,467,467,31,,,31,,,31,,,31,,31,,467,,644,,467,467',
'467,467,,,644,644,644,644,,31,31,31,31,31,31,644,,,31,31,,,,32,32,32',
'31,32,,31,,32,32,,31,31,32,,32,32,32,32,32,32,32,,,,,,32,32,32,32,32',
'32,32,,,32,,,,,,,32,,,32,32,,32,32,32,32,32,,32,32,32,,32,32,897,,897',
'897,897,897,897,,,,,,,,,,897,,,,,,,,32,,,32,,,32,,,32,,,,,,897,897,',
',,,,,897,897,897,897,,32,32,32,32,32,32,,,,32,32,,,,32,,,32,,,32,,,',
',32,32,879,879,879,,879,,,897,879,879,,,,879,,879,879,879,879,879,879',
'879,,,,,,879,879,879,879,879,879,879,,,879,,,,,,,879,,,879,879,,879',
'879,879,879,879,,879,879,879,,879,879,,879,879,,473,473,473,473,473',
'473,473,,,473,473,,,,,,,473,473,,879,,,879,,,879,,,879,,879,473,,473',
'879,473,473,473,473,473,473,473,879,473,,,,879,879,879,879,879,879,',
',,879,879,,,,454,454,454,879,454,,879,,454,454,,879,879,454,,454,454',
'454,454,454,454,454,,,,,,454,454,454,454,454,454,454,,,454,,,,,,,454',
',,454,454,,454,454,454,454,454,,454,454,454,,454,454,,454,454,,458,458',
'458,458,458,458,458,458,458,458,458,,,458,458,,,458,458,,454,,,454,',
',454,,,454,,,458,,458,454,458,458,458,458,458,458,458,454,458,,,,454',
'454,454,454,454,454,,,,454,454,,,,869,869,869,454,869,,454,,869,869',
',454,454,869,,869,869,869,869,869,869,869,,,,,,869,869,869,869,869,869',
'869,,,869,,,,,,,869,,,869,869,,869,869,869,869,869,,869,869,869,,869',
'869,56,,56,56,56,,56,,,,,,,,,,,,,,,,,,869,,,869,,,869,,,869,,,,,,56',
'56,,,,,,,56,56,56,56,,869,869,869,869,869,869,,,,869,869,,,,368,368',
'368,869,368,,869,,368,368,,869,869,368,,368,368,368,368,368,368,368',
',,,,,368,368,368,368,368,368,368,,,368,,,,,,,368,,,368,368,,368,368',
'368,368,368,,368,368,368,,368,368,321,,321,321,321,,321,,,,,,,,,,,,',
',,,,,368,,,368,,,368,,,368,,,,,,321,,321,,,,,,321,321,321,321,,368,368',
'368,368,368,368,,,,368,368,,,,38,38,38,368,38,,368,,38,38,,368,368,38',
',38,38,38,38,38,38,38,,,,,,38,38,38,38,38,38,38,,,38,,,,,,,38,,,38,38',
',38,38,38,38,38,,38,38,38,,38,38,,38,38,,468,468,468,468,468,468,468',
',,468,468,,,,,,,468,468,,38,,,38,,,38,,,38,,,468,,468,38,468,468,468',
'468,468,468,468,38,468,,,,38,38,38,38,38,38,,,,38,38,,,,39,39,39,38',
'39,,38,,39,39,,38,38,39,,39,39,39,39,39,39,39,,,,,,39,39,39,39,39,39',
'39,,,39,,,,,,,39,,,39,39,,39,39,39,39,39,,39,39,39,,39,39,,39,39,,475',
'475,475,475,475,475,475,,,475,475,,,,,,,475,475,,39,,,39,,,39,,,39,',
',475,,475,39,475,475,475,475,475,475,475,39,475,,,,39,39,39,39,39,39',
',,,39,39,,,,40,40,40,39,40,,39,,40,40,,39,39,40,,40,40,40,40,40,40,40',
',,,,,40,40,40,40,40,40,40,,,40,,,,,,,40,,,40,40,,40,40,40,40,40,,40',
'40,40,,40,40,,40,40,,476,476,476,476,476,476,476,,,476,476,,,,,,,476',
'476,,40,,,40,,,40,,,40,,,476,,476,40,476,476,476,476,476,476,476,40',
'476,,,,40,40,40,40,40,40,,,,40,40,,,,,,,40,,,40,,,,,40,40,865,865,865',
'865,865,,,,865,865,,,,865,,865,865,865,865,865,865,865,,,,,,865,865',
'865,865,865,865,865,,,865,,,,,,865,865,,865,865,865,,865,865,865,865',
'865,,865,865,865,,865,865,,865,865,,477,477,477,477,477,477,477,,,477',
'477,,,,,,,477,477,,865,,,865,,,865,,,865,,865,477,,477,865,477,477,477',
'477,477,477,477,865,477,,,,865,865,865,865,865,865,,,,865,865,,,,860',
'860,860,865,860,,865,,860,860,,865,865,860,,860,860,860,860,860,860',
'860,,,,,,860,860,860,860,860,860,860,,,860,,,,,,,860,,,860,860,,860',
'860,860,860,860,860,860,860,860,,860,860,,860,860,,480,480,480,480,480',
'480,480,,,480,480,,,,,,,480,480,,860,,,860,,,860,,,860,,,480,860,480',
'860,480,480,480,480,480,480,480,860,480,,,,860,860,860,860,860,860,',
',,860,860,,,,485,485,485,860,485,,860,,485,485,,860,860,485,,485,485',
'485,485,485,485,485,,,,,,485,485,485,485,485,485,485,,,485,,,,,,,485',
',,485,485,,485,485,485,485,485,485,485,485,485,,485,485,,485,485,,481',
'481,481,481,481,481,481,481,,481,481,,,,,,,481,481,,485,,,485,,,485',
',,485,,485,481,485,481,485,481,481,481,481,481,481,481,485,481,,,,485',
'485,485,485,485,485,,,,485,485,,,,52,52,52,485,52,,485,,52,52,,485,485',
'52,,52,52,52,52,52,52,52,,,,,,52,52,52,52,52,52,52,,,52,,,,,,,52,,,52',
'52,,52,52,52,52,52,,52,52,52,,52,52,,52,52,,457,457,457,457,457,457',
'457,457,457,457,457,,,457,457,,,457,457,,52,,,52,,,52,,,52,,,457,,457',
'52,457,457,457,457,457,457,457,52,457,,,,52,52,52,52,52,52,,,,52,52',
',,,53,53,53,52,53,,52,,53,53,,52,52,53,,53,53,53,53,53,53,53,,,,,,53',
'53,53,53,53,53,53,,,53,,,,,,,53,,,53,53,,53,53,53,53,53,53,53,53,53',
',53,53,,53,53,,470,,,,,,,,,,,,,,,,,470,470,,53,,,53,,,53,,,53,,53,470',
',470,53,470,470,470,470,,,470,53,470,,,,53,53,53,53,53,53,,,,53,53,',
',,54,54,54,53,54,,53,,54,54,,53,53,54,,54,54,54,54,54,54,54,,,,,,54',
'54,54,54,54,54,54,,,54,,,,,,,54,,,54,54,,54,54,54,54,54,54,54,54,54',
',54,54,,54,54,,465,,,,,,,,,,,,,,,,,465,465,,54,,,54,,,54,,,54,,,465',
',465,54,465,465,465,465,,,,54,,,,,54,54,54,54,54,54,,,,54,54,,,,856',
'856,856,54,856,,54,,856,856,,54,54,856,,856,856,856,856,856,856,856',
',,,,,856,856,856,856,856,856,856,,,856,,,,,,,856,,,856,856,,856,856',
'856,856,856,,856,856,856,,856,856,,856,856,,466,,,,,,,,,,,,,,,,,466',
'466,,856,,,856,,,856,,,856,,,466,,466,856,466,466,466,466,,,,856,,,',
',856,856,856,856,856,856,,,,856,856,,,,844,844,844,856,844,,856,,844',
'844,,856,856,844,,844,844,844,844,844,844,844,,,,,,844,844,844,844,844',
'844,844,,,844,,,,,,,844,,,844,844,,844,844,844,844,844,,844,844,844',
',844,844,,844,844,,,,,,,,,,,,,,,,,,,,,,844,,,844,,,844,,,844,,,,,,844',
',,,,,,,844,,,,,844,844,844,844,844,844,,,,844,844,,,,57,57,57,844,57',
',844,,57,57,,844,844,57,,57,57,57,57,57,57,57,,,,,,57,57,57,57,57,57',
'57,,,57,,,,,,,57,,,57,57,,57,57,57,57,57,,57,57,57,,57,57,,57,57,,,',
',,,,,,,,,,,,,,,,,,57,,,57,,,57,,,57,,,,,,57,,,,,,,,57,,,,,57,57,57,57',
'57,57,,,,57,57,,,,58,58,58,57,58,,57,,58,58,,57,57,58,,58,58,58,58,58',
'58,58,,,,,,58,58,58,58,58,58,58,,,58,,,,,,,58,,,58,58,,58,58,58,58,58',
',58,58,58,,58,58,,58,58,,,,,,,,,,,,,,,,,,,,,,58,,,58,,,58,,,58,,,,,',
'58,,,,,,,,58,,,,,58,58,58,58,58,58,,,,58,58,,,,61,61,61,58,61,,58,,61',
'61,,58,58,61,,61,61,61,61,61,61,61,,,,,,61,61,61,61,61,61,61,,,61,,',
',,,,61,,,61,61,,61,61,61,61,61,,61,61,61,,61,61,,61,61,,,,,,,,,,,,,',
',,,,,,,,61,,,61,,,61,,,61,,,,,,61,,,,,,,,61,,,,,61,61,61,61,61,61,,',
',61,61,61,,,,,61,61,,,61,,,,,61,61,62,62,62,,62,,,,62,62,,,,62,,62,62',
'62,62,62,62,62,,,,,,62,62,62,62,62,62,62,,,62,,,,,,,62,,,62,62,,62,62',
'62,62,62,,62,62,62,,62,62,554,,554,554,554,,554,,,,,,,,,,,,,,,,,,62',
',,62,,,62,,,62,,62,,,,554,,,,,,,,554,554,554,554,,62,62,62,62,62,62',
',,,62,62,,,,63,63,63,62,63,,62,,63,63,,62,62,63,,63,63,63,63,63,63,63',
',,,,,63,63,63,63,63,63,63,,,63,,,,,,,63,,,63,63,,63,63,63,63,63,,63',
'63,63,,63,63,,,,,,,,,,,,,,,,,,,,,,63,,,63,,,63,,,63,,,63,,,,,,,,,,,',
',,,,,,,63,63,63,63,63,63,,,,63,63,,,,487,487,487,63,487,,63,,487,487',
',63,63,487,,487,487,487,487,487,487,487,,,,,,487,487,487,487,487,487',
'487,,,487,,,,,,,487,,,487,487,,487,487,487,487,487,487,487,487,487,',
'487,487,,487,487,,,,,,,,,,,,,,,,,,,,,,487,,,487,,,487,,,487,,,,487,',
'487,,,,,,,,487,,,,,487,487,487,487,487,487,,,,487,487,,,,,,,487,,,487',
',,,,487,487,818,818,818,818,818,,,,818,818,,,,818,,818,818,818,818,818',
'818,818,,,,,,818,818,818,818,818,818,818,,,818,,,,,,818,818,,818,818',
'818,,818,818,818,818,818,,818,818,818,,818,818,,818,818,,,,,,,,,,,,',
',,,,,,,,,818,,,818,,,818,,,818,,818,,,,818,,,,,,,,818,,,,,818,818,818',
'818,818,818,,,,818,818,,,,,,,818,,,818,,,,,818,818,817,817,817,817,817',
',,,817,817,,,,817,,817,817,817,817,817,817,817,,,,,,817,817,817,817',
'817,817,817,,,817,,,,,,817,817,,817,817,817,,817,817,817,817,817,,817',
'817,817,,817,817,,817,817,,,,,,,,,,,,,,,,,,,,,,817,,,817,,,817,,,817',
',817,,,,817,,,,,,,,817,,,,,817,817,817,817,817,817,,,,817,817,,,,815',
'815,815,817,815,,817,,815,815,,817,817,815,,815,815,815,815,815,815',
'815,,,,,,815,815,815,815,815,815,815,,,815,,,,,,,815,,,815,815,,815',
'815,815,815,815,,815,815,815,,815,815,,815,815,,,,,,,,,,,,,,,,,,,,,',
'815,,,815,,,815,,,815,,,,,,815,,,,,,,,815,,,,,815,815,815,815,815,815',
',,,815,815,,,,,,,815,,,815,,,,,815,815,796,796,796,796,796,,,,796,796',
',,,796,,796,796,796,796,796,796,796,,,,,,796,796,796,796,796,796,796',
',,796,,,,,,796,796,,796,796,796,,796,796,796,796,796,,796,796,796,,796',
'796,,796,796,,,,,,,,,,,,,,,,,,,,,,796,,,796,,,796,,,796,,796,,,,796',
',,,,,,,796,,,,,796,796,796,796,796,796,,,,796,796,,,,786,786,786,796',
'786,,796,,786,786,,796,796,786,,786,786,786,786,786,786,786,,,,,,786',
'786,786,786,786,786,786,,,786,,,,,,,786,,,786,786,,786,786,786,786,786',
',786,786,786,,786,786,,786,786,,,,,,,,,,,,,,,,,,,,,,786,,,786,,,786',
',,786,,786,,,,786,,,,,,,,786,,,,,786,786,786,786,786,786,,,,786,786',
',,,84,84,84,786,84,,786,,84,84,,786,786,84,,84,84,84,84,84,84,84,,84',
',,,84,84,84,84,84,84,84,,,84,,,,,,,84,,,84,84,,84,84,84,84,84,84,84',
'84,84,,84,84,,84,84,,,,,,,,,,,,,,,,,,,,,,84,,,84,84,,84,,,84,,84,,84',
',84,,,,,,,,84,,84,,,84,84,84,84,84,84,,,,84,84,,,,87,87,87,84,87,,84',
',87,87,,84,84,87,,87,87,87,87,87,87,87,,87,,,,87,87,87,87,87,87,87,',
',87,,,,,,,87,,,87,87,,87,87,87,87,87,87,87,87,87,,87,87,,87,87,,,,,',
',,,,,,,,,,,,,,,,87,,,87,87,,87,,,87,,87,,87,,87,,,,,,,,87,,87,,,87,87',
'87,87,87,87,,,,87,87,,,,775,775,775,87,775,,87,,775,775,,87,87,775,',
'775,775,775,775,775,775,775,,,,,,775,775,775,775,775,775,775,,,775,',
',,,,,775,,,775,775,,775,775,775,775,775,,775,775,775,,775,775,,775,775',
',,,,,,,,,,,,,,,,,,,,,775,,,775,,,775,,,775,,,,,,775,,,,,,,,775,,,,,775',
'775,775,775,775,775,,,,775,775,,,,,,,775,,,775,,,,,775,775,99,99,99',
'99,99,,,,99,99,,,,99,,99,99,99,99,99,99,99,,,,,,99,99,99,99,99,99,99',
',,99,,,,,,99,99,99,99,99,99,,99,99,99,99,99,,99,99,99,,99,99,,99,99',
',,,,,,,,,,,,,,,,,,,,,99,,,99,,,99,,,99,,99,,,,99,,,,,,,,99,,,,,99,99',
'99,99,99,99,,,,99,99,,,,,,99,99,,,99,,,,,99,99,103,103,103,,103,,,,103',
'103,,,,103,,103,103,103,103,103,103,103,,,,,,103,103,103,103,103,103',
'103,,,103,,,,,,,103,,,103,103,,103,103,103,103,103,,103,103,103,,103',
'103,,103,103,,,,,,,,,,,,,,,,,,,,,,103,,,103,,,103,,,103,,,,,,103,,,',
',,,,103,,,,,103,103,103,103,103,103,,,,103,103,,,,104,104,104,103,104',
',103,,104,104,,103,103,104,,104,104,104,104,104,104,104,,,,,,104,104',
'104,104,104,104,104,,,104,,,,,,,104,,,104,104,,104,104,104,104,104,',
'104,104,104,,104,104,,104,104,,,,,,,,,,,,,,,,,,,,,,104,,,104,,,104,',
',104,,,,,,104,,,,,,,,104,,,,,104,104,104,104,104,104,,,,104,104,,,,105',
'105,105,104,105,,104,,105,105,,104,104,105,,105,105,105,105,105,105',
'105,,,,,,105,105,105,105,105,105,105,,,105,,,,,,,105,,,105,105,,105',
'105,105,105,105,,105,105,105,,105,105,,105,105,,,,,,,,,,,,,,,,,,,,,',
'105,,,105,,,105,,,105,,,,,,105,,,,,,,,105,,,,,105,105,105,105,105,105',
',,,105,105,,,,106,106,106,105,106,,105,,106,106,,105,105,106,,106,106',
'106,106,106,106,106,,,,,,106,106,106,106,106,106,106,,,106,,,,,,,106',
',,106,106,,106,106,106,106,106,,106,106,106,,106,106,,106,106,,,,,,',
',,,,,,,,,,,,,,,106,,,106,,,106,,,106,,,,,,106,,,,,,,,106,,,,,106,106',
'106,106,106,106,,,,106,106,,,,,,,106,,,106,,,,,106,106,107,107,107,107',
'107,,,,107,107,,,,107,,107,107,107,107,107,107,107,,,,,,107,107,107',
'107,107,107,107,,,107,,,,,,107,107,,107,107,107,,107,107,107,107,107',
',107,107,107,,107,107,,107,107,,,,,,,,,,,,,,,,,,,,,,107,,,107,,,107',
',,107,,107,,,,107,,,,,,,,107,,,,,107,107,107,107,107,107,,,,107,107',
',,,,,,107,,,107,,,,,107,107,108,108,108,108,108,,,,108,108,,,,108,,108',
'108,108,108,108,108,108,,,,,,108,108,108,108,108,108,108,,,108,,,,,',
'108,108,108,108,108,108,,108,108,108,108,108,,108,108,108,,108,108,',
'108,108,,,,,,,,,,,,,,,,,,,,,,108,,,108,,,108,,,108,,108,,,,108,,,,,',
',,108,,,,,108,108,108,108,108,108,,,,108,108,,,,774,774,774,108,774',
',108,,774,774,,108,108,774,,774,774,774,774,774,774,774,,,,,,774,774',
'774,774,774,774,774,,,774,,,,,,,774,,,774,774,,774,774,774,774,774,',
'774,774,774,,774,774,,774,774,,,,,,,,,,,,,,,,,,,,,,774,,,774,,,774,',
',774,,,,,,774,,,,,,,,774,,,,,774,774,774,774,774,774,,,,774,774,,,,773',
'773,773,774,773,,774,,773,773,,774,774,773,,773,773,773,773,773,773',
'773,,,,,,773,773,773,773,773,773,773,,,773,,,,,,,773,,,773,773,,773',
'773,773,773,773,,773,773,773,,773,773,,773,773,,,,,,,,,,,,,,,,,,,,,',
'773,,,773,,,773,,,773,,,,,,773,,,,,,,,773,,,,,773,773,773,773,773,773',
',,,773,773,,,,763,763,763,773,763,,773,,763,763,,773,773,763,,763,763',
'763,763,763,763,763,,,,,,763,763,763,763,763,763,763,,,763,,,,,,,763',
',,763,763,,763,763,763,763,763,,763,763,763,,763,763,,763,763,,,,,,',
',,,,,,,,,,,,,,,763,,,763,,,763,,,763,,,,,,763,,,,,,,,763,,,,,763,763',
'763,763,763,763,,,,763,763,,,,,,,763,,,763,,,,,763,763,195,195,195,195',
'195,,,,195,195,,,,195,,195,195,195,195,195,195,195,,,,,,195,195,195',
'195,195,195,195,,,195,,,,,,195,195,,195,195,195,,195,195,195,195,195',
',195,195,195,,195,195,,195,195,,,,,,,,,,,,,,,,,,,,,,195,,,195,,,195',
',,195,,195,,,,195,,,,,,,,195,,,,,195,195,195,195,195,195,,,,195,195',
',,,196,196,196,195,196,,195,,196,196,,195,195,196,,196,196,196,196,196',
'196,196,,,,,,196,196,196,196,196,196,196,,,196,,,,,,,196,,,196,196,',
'196,196,196,196,196,,196,196,196,,196,196,,196,196,,,,,,,,,,,,,,,,,',
',,,,196,,,196,,,196,,,196,,196,,,,196,,,,,,,,196,,,,,196,196,196,196',
'196,196,,,,196,196,,,,197,197,197,196,197,,196,,197,197,,196,196,197',
',197,197,197,197,197,197,197,,,,,,197,197,197,197,197,197,197,,,197',
',,,,,,197,,,197,197,,197,197,197,197,197,,197,197,197,,197,197,,197',
'197,,,,,,,,,,,,,,,,,,,,,,197,,,197,,,197,,,197,,197,,,,197,,,,,,,,197',
',,,,197,197,197,197,197,197,,,,197,197,,,,198,198,198,197,198,,197,',
'198,198,,197,197,198,,198,198,198,198,198,198,198,,,,,,198,198,198,198',
'198,198,198,,,198,,,,,,,198,,,198,198,,198,198,198,198,198,,198,198',
'198,,198,198,,198,198,,,,,,,,,,,,,,,,,,,,,,198,,,198,,,198,,,198,,,',
',,198,,,,,,,,198,,,,,198,198,198,198,198,198,,,,198,198,,,,199,199,199',
'198,199,,198,,199,199,,198,198,199,,199,199,199,199,199,199,199,,,,',
',199,199,199,199,199,199,199,,,199,,,,,,,199,,,199,199,,199,199,199',
'199,199,199,199,199,199,,199,199,,199,199,,,,,,,,,,,,,,,,,,,,,,199,',
',199,,,199,,,199,,199,,,,199,,,,,,,,199,,,,,199,199,199,199,199,199',
',,,199,199,,,,762,762,762,199,762,,199,,762,762,,199,199,762,,762,762',
'762,762,762,762,762,,,,,,762,762,762,762,762,762,762,,,762,,,,,,,762',
',,762,762,,762,762,762,762,762,,762,762,762,,762,762,,762,762,,,,,,',
',,,,,,,,,,,,,,,762,,,762,,,762,,,762,,,,,,762,,,,,,,,762,,,,,762,762',
'762,762,762,762,,,,762,762,,,,,,,762,,,762,,,,,762,762,756,756,756,756',
'756,,,,756,756,,,,756,,756,756,756,756,756,756,756,,,,,,756,756,756',
'756,756,756,756,,,756,,,,,,756,756,,756,756,756,,756,756,756,756,756',
',756,756,756,,756,756,,756,756,,,,,,,,,,,,,,,,,,,,,,756,,,756,,,756',
',,756,,756,,,,756,,,,,,,,756,,,,,756,756,756,756,756,756,,,,756,756',
',,,202,202,202,756,202,,756,,202,202,,756,756,202,,202,202,202,202,202',
'202,202,,,,,,202,202,202,202,202,202,202,,,202,,,,,,,202,,,202,202,',
'202,202,202,202,202,202,202,202,202,,202,202,,202,202,,,,,,,,,,,,,,',
',,,,,,,202,,,202,,,202,,,202,,202,,,,202,,,,,,,,202,,,,,202,202,202',
'202,202,202,,,,202,202,,,,742,742,742,202,742,,202,,742,742,,202,202',
'742,,742,742,742,742,742,742,742,,,,,,742,742,742,742,742,742,742,,',
'742,,,,,,,742,,,742,742,,742,742,742,742,742,,742,742,742,,742,742,',
'742,742,,,,,,,,,,,,,,,,,,,,,,742,,,742,,,742,,,742,,,,,,742,,,,,,,,742',
',,,,742,742,742,742,742,742,,,,742,742,,,,204,204,204,742,204,,742,',
'204,204,,742,742,204,,204,204,204,204,204,204,204,,,,,,204,204,204,204',
'204,204,204,,,204,,,,,,,204,,,204,204,,204,204,204,204,204,,204,204',
'204,,204,204,,204,204,,,,,,,,,,,,,,,,,,,,,,204,,,204,,,204,,,204,,,',
',,204,,,,,,,,204,,,,,204,204,204,204,204,204,,,,204,204,,,,205,205,205',
'204,205,,204,,205,205,,204,204,205,,205,205,205,205,205,205,205,,,,',
',205,205,205,205,205,205,205,,,205,,,,,,,205,,,205,205,,205,205,205',
'205,205,,205,205,205,,205,205,,205,205,,,,,,,,,,,,,,,,,,,,,,205,,,205',
',,205,,,205,,,,,,205,,,,,,,,205,,,,,205,205,205,205,205,205,,,,205,205',
',,,206,206,206,205,206,,205,,206,206,,205,205,206,,206,206,206,206,206',
'206,206,,,,,,206,206,206,206,206,206,206,,,206,,,,,,,206,,,206,206,',
'206,206,206,206,206,,206,206,206,,206,206,,206,206,,,,,,,,,,,,,,,,,',
',,,,206,,,206,,,206,,,206,,,,,,206,,,,,,,,206,,,,,206,206,206,206,206',
'206,,,,206,206,,,,,,,206,,,206,,,,,206,206,735,735,735,735,735,,,,735',
'735,,,,735,,735,735,735,735,735,735,735,,,,,,735,735,735,735,735,735',
'735,,,735,,,,,,735,735,,735,735,735,,735,735,735,735,735,,735,735,735',
',735,735,,735,735,,,,,,,,,,,,,,,,,,,,,,735,,,735,,,735,,,735,,735,,',
',735,,,,,,,,735,,,,,735,735,735,735,735,735,,,,735,735,,,,,,,735,,,735',
',,,,735,735,734,734,734,734,734,,,,734,734,,,,734,,734,734,734,734,734',
'734,734,,,,,,734,734,734,734,734,734,734,,,734,,,,,,734,734,,734,734',
'734,,734,734,734,734,734,,734,734,734,,734,734,,734,734,,,,,,,,,,,,',
',,,,,,,,,734,,,734,,,734,,,734,,734,,,,734,,,,,,,,734,,,,,734,734,734',
'734,734,734,,,,734,734,,,,,,,734,,,734,,,,,734,734,730,730,730,730,730',
',,,730,730,,,,730,,730,730,730,730,730,730,730,,,,,,730,730,730,730',
'730,730,730,,,730,,,,,,730,730,,730,730,730,,730,730,730,730,730,,730',
'730,730,,730,730,,730,730,,,,,,,,,,,,,,,,,,,,,,730,,,730,,,730,,,730',
',730,,,,730,,,,,,,,730,,,,,730,730,730,730,730,730,,,,730,730,,,,725',
'725,725,730,725,,730,,725,725,,730,730,725,,725,725,725,725,725,725',
'725,,,,,,725,725,725,725,725,725,725,,,725,,,,,,,725,,,725,725,,725',
'725,725,725,725,,725,725,725,,725,725,,725,725,,,,,,,,,,,,,,,,,,,,,',
'725,,,725,,,725,,,725,,,,,,725,,,,,,,,725,,,,,725,725,725,725,725,725',
',,,725,725,,,,719,719,719,725,719,,725,,719,719,,725,725,719,,719,719',
'719,719,719,719,719,,,,,,719,719,719,719,719,719,719,,,719,,,,,,,719',
',,719,719,,719,719,719,719,719,,719,719,719,,719,719,,719,719,,,,,,',
',,,,,,,,,,,,,,,719,,,719,,,719,,,719,,719,,,,719,,,,,,,,719,,,,,719',
'719,719,719,719,719,,,,719,719,,,,688,688,688,719,688,,719,,688,688',
',719,719,688,,688,688,688,688,688,688,688,,,,,,688,688,688,688,688,688',
'688,,,688,,,,,,,688,,,688,688,,688,688,688,688,688,,688,688,688,,688',
'688,,688,688,,,,,,,,,,,,,,,,,,,,,,688,,,688,,,688,,,688,,688,,,,688',
',,,,,,,688,,,,,688,688,688,688,688,688,,,,688,688,,,,,,,688,,,688,,',
',,688,688,214,214,214,214,214,,,,214,214,,,,214,,214,214,214,214,214',
'214,214,,,,,,214,214,214,214,214,214,214,,,214,,,,,,214,214,,214,214',
'214,,214,214,214,214,214,,214,214,214,,214,214,,214,214,,,,,,,,,,,,',
',,,,,,,,,214,,,214,,,214,,,214,,214,,,,214,,,,,,,,214,,,,,214,214,214',
'214,214,214,,,,214,214,,,,215,215,215,214,215,,214,,215,215,,214,214',
'215,,215,215,215,215,215,215,215,,,,,,215,215,215,215,215,215,215,,',
'215,,,,,,,215,,,215,215,,215,215,215,215,215,,215,215,215,,215,215,',
'215,215,,,,,,,,,,,,,,,,,,,,,,215,,,215,,215,215,,,215,,,,,,215,,,,,',
',,215,,,,,215,215,215,215,215,215,,,,215,215,,,,218,218,218,215,218',
',215,,218,218,,215,215,218,,218,218,218,218,218,218,218,,,,,,218,218',
'218,218,218,218,218,,,218,,,,,,,218,,,218,218,,218,218,218,218,218,',
'218,218,218,,218,218,,218,218,,,,,,,,,,,,,,,,,,,,,,218,,,218,,,218,',
',218,,,,,,218,,,,,,,,218,,,,,218,218,218,218,218,218,,,,218,218,,,,682',
'682,682,218,682,,218,,682,682,,218,218,682,,682,682,682,682,682,682',
'682,,,,,,682,682,682,682,682,682,682,,,682,,,,,,,682,,,682,682,,682',
'682,682,682,682,,682,682,682,,682,682,,,,,,,,,,,,,,,,,,,,,,,,,682,,',
'682,,,682,,,682,,,,,,,,,,,,,,,,,,,682,682,682,682,682,682,,,,682,682',
',,,220,220,220,682,220,,682,,220,220,,682,682,220,,220,220,220,220,220',
'220,220,,,,,,220,220,220,220,220,220,220,,,220,,,,,,,220,,,220,220,',
'220,220,220,220,220,,220,220,220,,220,220,,220,220,,,,,,,,,,,,,,,,,',
',,,,220,,,220,,,220,,,220,,,,,,220,,,,,,,,220,,,,,220,220,220,220,220',
'220,,,,220,220,,,,221,221,221,220,221,,220,,221,221,,220,220,221,,221',
'221,221,221,221,221,221,,,,,,221,221,221,221,221,221,221,,,221,,,,,',
',221,,,221,221,,221,221,221,221,221,,221,221,221,,221,221,,221,221,',
',,,,,,,,,,,,,,,,,,,,221,,,221,,,221,,,221,,,,,,221,,,,,,,,221,,,,,221',
'221,221,221,221,221,,,,221,221,,,,222,222,222,221,222,,221,,222,222',
',221,221,222,,222,222,222,222,222,222,222,,,,,,222,222,222,222,222,222',
'222,,,222,,,,,,,222,,,222,222,,222,222,222,222,222,,222,222,222,,222',
'222,,222,222,,,,,,,,,,,,,,,,,,,,,,222,,,222,,,222,,,222,,,,,,222,,,',
',,,,222,,,,,222,222,222,222,222,222,,,,222,222,,,,223,223,223,222,223',
',222,,223,223,,222,222,223,,223,223,223,223,223,223,223,,,,,,223,223',
'223,223,223,223,223,,,223,,,,,,,223,,,223,223,,223,223,223,223,223,',
'223,223,223,,223,223,,223,223,,,,,,,,,,,,,,,,,,,,,,223,,,223,,,223,',
',223,,,,,,223,,,,,,,,223,,,,,223,223,223,223,223,223,,,,223,223,,,,224',
'224,224,223,224,,223,,224,224,,223,223,224,,224,224,224,224,224,224',
'224,,,,,,224,224,224,224,224,224,224,,,224,,,,,,,224,,,224,224,,224',
'224,224,224,224,,224,224,224,,224,224,,224,224,,,,,,,,,,,,,,,,,,,,,',
'224,,,224,,,224,,,224,,,,,,224,,,,,,,,224,,,,,224,224,224,224,224,224',
',,,224,224,,,,225,225,225,224,225,,224,,225,225,,224,224,225,,225,225',
'225,225,225,225,225,,,,,,225,225,225,225,225,225,225,,,225,,,,,,,225',
',,225,225,,225,225,225,225,225,,225,225,225,,225,225,,225,225,,,,,,',
',,,,,,,,,,,,,,,225,,,225,,,225,,,225,,,,,,225,,,,,,,,225,,,,,225,225',
'225,225,225,225,,,,225,225,,,,226,226,226,225,226,,225,,226,226,,225',
'225,226,,226,226,226,226,226,226,226,,,,,,226,226,226,226,226,226,226',
',,226,,,,,,,226,,,226,226,,226,226,226,226,226,,226,226,226,,226,226',
',226,226,,,,,,,,,,,,,,,,,,,,,,226,,,226,,,226,,,226,,,,,,226,,,,,,,',
'226,,,,,226,226,226,226,226,226,,,,226,226,,,,227,227,227,226,227,,226',
',227,227,,226,226,227,,227,227,227,227,227,227,227,,,,,,227,227,227',
'227,227,227,227,,,227,,,,,,,227,,,227,227,,227,227,227,227,227,,227',
'227,227,,227,227,,227,227,,,,,,,,,,,,,,,,,,,,,,227,,,227,,,227,,,227',
',,,,,227,,,,,,,,227,,,,,227,227,227,227,227,227,,,,227,227,,,,228,228',
'228,227,228,,227,,228,228,,227,227,228,,228,228,228,228,228,228,228',
',,,,,228,228,228,228,228,228,228,,,228,,,,,,,228,,,228,228,,228,228',
'228,228,228,,228,228,228,,228,228,,228,228,,,,,,,,,,,,,,,,,,,,,,228',
',,228,,,228,,,228,,,,,,228,,,,,,,,228,,,,,228,228,228,228,228,228,,',
',228,228,,,,229,229,229,228,229,,228,,229,229,,228,228,229,,229,229',
'229,229,229,229,229,,,,,,229,229,229,229,229,229,229,,,229,,,,,,,229',
',,229,229,,229,229,229,229,229,,229,229,229,,229,229,,229,229,,,,,,',
',,,,,,,,,,,,,,,229,,,229,,,229,,,229,,,,,,229,,,,,,,,229,,,,,229,229',
'229,229,229,229,,,,229,229,,,,230,230,230,229,230,,229,,230,230,,229',
'229,230,,230,230,230,230,230,230,230,,,,,,230,230,230,230,230,230,230',
',,230,,,,,,,230,,,230,230,,230,230,230,230,230,,230,230,230,,230,230',
',230,230,,,,,,,,,,,,,,,,,,,,,,230,,,230,,,230,,,230,,,,,,230,,,,,,,',
'230,,,,,230,230,230,230,230,230,,,,230,230,,,,231,231,231,230,231,,230',
',231,231,,230,230,231,,231,231,231,231,231,231,231,,,,,,231,231,231',
'231,231,231,231,,,231,,,,,,,231,,,231,231,,231,231,231,231,231,,231',
'231,231,,231,231,,231,231,,,,,,,,,,,,,,,,,,,,,,231,,,231,,,231,,,231',
',,,,,231,,,,,,,,231,,,,,231,231,231,231,231,231,,,,231,231,,,,232,232',
'232,231,232,,231,,232,232,,231,231,232,,232,232,232,232,232,232,232',
',,,,,232,232,232,232,232,232,232,,,232,,,,,,,232,,,232,232,,232,232',
'232,232,232,,232,232,232,,232,232,,232,232,,,,,,,,,,,,,,,,,,,,,,232',
',,232,,,232,,,232,,,,,,232,,,,,,,,232,,,,,232,232,232,232,232,232,,',
',232,232,,,,233,233,233,232,233,,232,,233,233,,232,232,233,,233,233',
'233,233,233,233,233,,,,,,233,233,233,233,233,233,233,,,233,,,,,,,233',
',,233,233,,233,233,233,233,233,,233,233,233,,233,233,,233,233,,,,,,',
',,,,,,,,,,,,,,,233,,,233,,,233,,,233,,,,,,233,,,,,,,,233,,,,,233,233',
'233,233,233,233,,,,233,233,,,,234,234,234,233,234,,233,,234,234,,233',
'233,234,,234,234,234,234,234,234,234,,,,,,234,234,234,234,234,234,234',
',,234,,,,,,,234,,,234,234,,234,234,234,234,234,,234,234,234,,234,234',
',234,234,,,,,,,,,,,,,,,,,,,,,,234,,,234,,,234,,,234,,,,,,234,,,,,,,',
'234,,,,,234,234,234,234,234,234,,,,234,234,,,,235,235,235,234,235,,234',
',235,235,,234,234,235,,235,235,235,235,235,235,235,,,,,,235,235,235',
'235,235,235,235,,,235,,,,,,,235,,,235,235,,235,235,235,235,235,,235',
'235,235,,235,235,,235,235,,,,,,,,,,,,,,,,,,,,,,235,,,235,,,235,,,235',
',,,,,235,,,,,,,,235,,,,,235,235,235,235,235,235,,,,235,235,,,,236,236',
'236,235,236,,235,,236,236,,235,235,236,,236,236,236,236,236,236,236',
',,,,,236,236,236,236,236,236,236,,,236,,,,,,,236,,,236,236,,236,236',
'236,236,236,,236,236,236,,236,236,,236,236,,,,,,,,,,,,,,,,,,,,,,236',
',,236,,,236,,,236,,,,,,236,,,,,,,,236,,,,,236,236,236,236,236,236,,',
',236,236,,,,237,237,237,236,237,,236,,237,237,,236,236,237,,237,237',
'237,237,237,237,237,,,,,,237,237,237,237,237,237,237,,,237,,,,,,,237',
',,237,237,,237,237,237,237,237,,237,237,237,,237,237,,237,237,,,,,,',
',,,,,,,,,,,,,,,237,,,237,,,237,,,237,,,,,,237,,,,,,,,237,,,,,237,237',
'237,237,237,237,,,,237,237,,,,238,238,238,237,238,,237,,238,238,,237',
'237,238,,238,238,238,238,238,238,238,,,,,,238,238,238,238,238,238,238',
',,238,,,,,,,238,,,238,238,,238,238,238,238,238,,238,238,238,,238,238',
',238,238,,,,,,,,,,,,,,,,,,,,,,238,,,238,,,238,,,238,,,,,,238,,,,,,,',
'238,,,,,238,238,238,238,238,238,,,,238,238,,,,239,239,239,238,239,,238',
',239,239,,238,238,239,,239,239,239,239,239,239,239,,,,,,239,239,239',
'239,239,239,239,,,239,,,,,,,239,,,239,239,,239,239,239,239,239,,239',
'239,239,,239,239,,239,239,,,,,,,,,,,,,,,,,,,,,,239,,,239,,,239,,,239',
',,,,,239,,,,,,,,239,,,,,239,239,239,239,239,239,,,,239,239,,,,240,240',
'240,239,240,,239,,240,240,,239,239,240,,240,240,240,240,240,240,240',
',,,,,240,240,240,240,240,240,240,,,240,,,,,,,240,,,240,240,,240,240',
'240,240,240,,240,240,240,,240,240,,240,240,,,,,,,,,,,,,,,,,,,,,,240',
',,240,,,240,,,240,,,,,,240,,,,,,,,240,,,,,240,240,240,240,240,240,,',
',240,240,,,,241,241,241,240,241,,240,,241,241,,240,240,241,,241,241',
'241,241,241,241,241,,,,,,241,241,241,241,241,241,241,,,241,,,,,,,241',
',,241,241,,241,241,241,241,241,,241,241,241,,241,241,,241,241,,,,,,',
',,,,,,,,,,,,,,,241,,,241,,,241,,,241,,,,,,241,,,,,,,,241,,,,,241,241',
'241,241,241,241,,,,241,241,,,,242,242,242,241,242,,241,,242,242,,241',
'241,242,,242,242,242,242,242,242,242,,,,,,242,242,242,242,242,242,242',
',,242,,,,,,,242,,,242,242,,242,242,242,242,242,,242,242,242,,242,242',
',242,242,,,,,,,,,,,,,,,,,,,,,,242,,,242,,,242,,,242,,,,,,242,,,,,,,',
'242,,,,,242,242,242,242,242,242,,,,242,242,,,,243,243,243,242,243,,242',
',243,243,,242,242,243,,243,243,243,243,243,243,243,,,,,,243,243,243',
'243,243,243,243,,,243,,,,,,,243,,,243,243,,243,243,243,243,243,,243',
'243,243,,243,243,,243,243,,,,,,,,,,,,,,,,,,,,,,243,,,243,,,243,,,243',
',,,,,243,,,,,,,,243,,,,,243,243,243,243,243,243,,,,243,243,,,,244,244',
'244,243,244,,243,,244,244,,243,243,244,,244,244,244,244,244,244,244',
',,,,,244,244,244,244,244,244,244,,,244,,,,,,,244,,,244,244,,244,244',
'244,244,244,,244,244,244,,244,244,,244,244,,,,,,,,,,,,,,,,,,,,,,244',
',,244,,,244,,,244,,,,,,244,,,,,,,,244,,,,,244,244,244,244,244,244,,',
',244,244,,,,245,245,245,244,245,,244,,245,245,,244,244,245,,245,245',
'245,245,245,245,245,,,,,,245,245,245,245,245,245,245,,,245,,,,,,,245',
',,245,245,,245,245,245,245,245,,245,245,245,,245,245,,245,245,,,,,,',
',,,,,,,,,,,,,,,245,,,245,,,245,,,245,,,,,,245,,,,,,,,245,,,,,245,245',
'245,245,245,245,,,,245,245,,,,672,672,672,245,672,,245,,672,672,,245',
'245,672,,672,672,672,672,672,672,672,,,,,,672,672,672,672,672,672,672',
',,672,,,,,,,672,,,672,672,,672,672,672,672,672,,672,672,672,,672,672',
'838,,838,838,838,838,838,,,,,,,,,,838,,,,,,,,672,,,672,,,672,,,672,',
',,,,838,,,,,,,,838,838,838,838,,672,672,672,672,672,672,,,,672,672,',
',,,,,672,,,672,,,,,672,672,668,668,668,668,668,,,838,668,668,,,,668',
',668,668,668,668,668,668,668,,,,,,668,668,668,668,668,668,668,,,668',
',,,,,668,668,,668,668,668,,668,668,668,668,668,,668,668,668,,668,668',
',668,668,,,,,,,,,,,,,,,,,,,,,,668,,,668,,,668,,,668,,668,,,,668,,,,',
',,,668,,,,,668,668,668,668,668,668,,,,668,668,,,,,,,668,,,668,,,,,668',
'668,667,667,667,667,667,,,,667,667,,,,667,,667,667,667,667,667,667,667',
',,,,,667,667,667,667,667,667,667,,,667,,,,,,667,667,,667,667,667,,667',
'667,667,667,667,,667,667,667,,667,667,,667,667,,,,,,,,,,,,,,,,,,,,,',
'667,,,667,,,667,,,667,,667,,,,667,,,,,,,,667,,,,,667,667,667,667,667',
'667,,,,667,667,,,,254,254,254,667,254,,667,,254,254,,667,667,254,,254',
'254,254,254,254,254,254,,,,,,254,254,254,254,254,254,254,,,254,,,,,',
',254,,,254,254,,254,254,254,254,254,,254,254,254,,254,254,,254,254,',
',,,,,,,,,,,,,,,,,,,,254,,,254,,,254,,,254,,,,,,254,,,,,,,,254,,,,,254',
'254,254,254,254,254,,,,254,254,,,,661,661,661,254,661,,254,,661,661',
',254,254,661,,661,661,661,661,661,661,661,,,,,,661,661,661,661,661,661',
'661,,,661,,,,,,,661,,,661,661,,661,661,661,661,661,661,661,661,661,',
'661,661,,661,661,,,,,,,,,,,,,,,,,,,,,,661,,,661,,,661,,,661,,,,661,',
'661,,,,,,,,661,,,,,661,661,661,661,661,661,,,,661,661,,,,256,256,256',
'661,256,,661,,256,256,,661,661,256,,256,256,256,256,256,256,256,,,,',
',256,256,256,256,256,256,256,,,256,,,,,,,256,,,256,256,,256,256,256',
'256,256,,256,256,256,,256,256,,256,256,,,,,,,,,,,,,,,,,,,,,,256,,,256',
',,256,,,256,,,,,,256,,,,,,,,256,,,,,256,256,256,256,256,256,,,,256,256',
',,,261,261,261,256,261,,256,,261,261,,256,256,261,,261,261,261,261,261',
'261,261,,,,,,261,261,261,261,261,261,261,,,261,,,,,,,261,,,261,261,',
'261,261,261,261,261,,261,261,261,,261,261,,261,261,,,,,,,,,,,,,,,,,',
',,,,261,,,261,,,261,,,261,,,,,,261,,,,,,,,261,,,,,261,261,261,261,261',
'261,,,,261,261,,,,660,660,660,261,660,,261,,660,660,,261,261,660,,660',
'660,660,660,660,660,660,,,,,,660,660,660,660,660,660,660,,,660,,,,,',
',660,,,660,660,,660,660,660,660,660,660,660,660,660,,660,660,,660,660',
',,,,,,,,,,,,,,,,,,,,,660,,,660,,,660,,,660,,660,,660,,660,,,,,,,,660',
',,,,660,660,660,660,660,660,,,,660,660,,,,,,,660,,,660,,,,,660,660,657',
'657,657,657,657,,,,657,657,,,,657,,657,657,657,657,657,657,657,,,,,',
'657,657,657,657,657,657,657,,,657,,,,,,657,657,,657,657,657,,657,657',
'657,657,657,,657,657,657,,657,657,,657,657,,,,,,,,,,,,,,,,,,,,,,657',
',,657,,,657,,,657,,657,,,,657,,,,,,,,657,,,,,657,657,657,657,657,657',
',,,657,657,,,,650,650,650,657,650,,657,,650,650,,657,657,650,,650,650',
'650,650,650,650,650,,,,,,650,650,650,650,650,650,650,,,650,,,,,,,650',
',,650,650,,650,650,650,650,650,,650,650,650,,650,650,,650,650,,,,,,',
',,,,,,,,,,,,,,,650,,,650,,,650,,,650,,,,,,650,,,,,,,,650,,,,,650,650',
'650,650,650,650,,,,650,650,,,,267,267,267,650,267,,650,,267,267,,650',
'650,267,,267,267,267,267,267,267,267,,,,,,267,267,267,267,267,267,267',
',,267,,,,,,,267,,,267,267,,267,267,267,267,267,267,267,267,267,,267',
'267,,267,267,,,,,,,,,,,,,,,,,,,,,,267,,,267,,,267,,,267,,267,,267,,267',
',,,,,,,267,,,,,267,267,267,267,267,267,,,,267,267,,,,268,268,268,267',
'268,,267,,268,268,,267,267,268,,268,268,268,268,268,268,268,,,,,,268',
'268,268,268,268,268,268,,,268,,,,,,,268,,,268,268,,268,268,268,268,268',
'268,268,268,268,,268,268,,268,268,,,,,,,,,,,,,,,,,,,,,,268,,,268,,,268',
',,268,,268,,268,,268,,,,,,,,268,,,,,268,268,268,268,268,268,,,,268,268',
',,,276,276,276,268,276,,268,,276,276,,268,268,276,,276,276,276,276,276',
'276,276,,,,,,276,276,276,276,276,276,276,,,276,,,,,,,276,,,276,276,',
'276,276,276,276,276,276,276,276,276,,276,276,,276,276,,,,,,,,,,,,,,',
',,,,,,,276,,,276,,276,276,,,276,,276,,276,,276,,,,,,,,276,,,,,276,276',
'276,276,276,276,,,,276,276,,,,,,,276,,,276,,,,,276,276,646,646,646,646',
'646,,,,646,646,,,,646,,646,646,646,646,646,646,646,,,,,,646,646,646',
'646,646,646,646,,,646,,,,,,646,646,,646,646,646,,646,646,646,646,646',
',646,646,646,,646,646,,646,646,,,,,,,,,,,,,,,,,,,,,,646,,,646,,,646',
',,646,,646,,,,646,,,,,,,,646,,,,,646,646,646,646,646,646,,,,646,646',
',,,642,642,642,646,642,,646,,642,642,,646,646,642,,642,642,642,642,642',
'642,642,,,,,,642,642,642,642,642,642,642,,,642,,,,,,,642,,,642,642,',
'642,642,642,642,642,,642,642,642,,642,642,,642,642,,,,,,,,,,,,,,,,,',
',,,,642,,,642,,,642,,,642,,,,,,642,,,,,,,,642,,,,,642,642,642,642,642',
'642,,,,642,642,,,,489,489,489,642,489,,642,,489,489,,642,642,489,,489',
'489,489,489,489,489,489,,,,,,489,489,489,489,489,489,489,,,489,,,,,',
',489,,,489,489,,489,489,489,489,489,,489,489,489,,489,489,,489,489,',
',,,,,,,,,,,,,,,,,,,,489,,,489,,,489,,,489,,,,,,489,,,,,,,,489,,,,,489',
'489,489,489,489,489,,,,489,489,,,,,,,489,,,489,,,,,489,489,280,280,280',
'280,280,,,,280,280,,,,280,,280,280,280,280,280,280,280,,,,,,280,280',
'280,280,280,280,280,,,280,,,,,,280,280,,280,280,280,,280,280,280,280',
'280,,280,280,280,,280,280,,280,280,,,,,,,,,,,,,,,,,,,,,,280,,,280,,',
'280,,,280,,280,,,,280,,,,,,,,280,,,,,280,280,280,280,280,280,,,,280',
'280,,,,503,503,503,280,503,,280,,503,503,,280,280,503,,503,503,503,503',
'503,503,503,,,,,,503,503,503,503,503,503,503,,,503,,,,,,,503,,,503,503',
',503,503,503,503,503,,503,503,503,,503,503,,503,503,,,,,,,,,,,,,,,,',
',,,,,503,,,503,,503,503,,,503,,,,503,,503,,,,,,,,503,,,,,503,503,503',
'503,503,503,,,,503,503,,,,632,632,632,503,632,,503,,632,632,,503,503',
'632,,632,632,632,632,632,632,632,,,,,,632,632,632,632,632,632,632,,',
'632,,,,,,,632,,,632,632,,632,632,632,632,632,,632,632,632,,632,632,',
'632,632,,,,,,,,,,,,,,,,,,,,,,632,,,632,,,632,,,632,,,,,,632,,,,,,,,632',
',,,,632,632,632,632,632,632,,,,632,632,,,,629,629,629,632,629,,632,',
'629,629,,632,632,629,,629,629,629,629,629,629,629,,,,,,629,629,629,629',
'629,629,629,,,629,,,,,,,629,,,629,629,,629,629,629,629,629,,629,629',
'629,,629,629,,629,629,,,,,,,,,,,,,,,,,,,,,,629,,,629,,,629,,,629,,,',
',,629,,,,,,,,629,,,,,629,629,629,629,629,629,,,,629,629,,,,284,284,284',
'629,284,,629,,284,284,,629,629,284,,284,284,284,284,284,284,284,,,,',
',284,284,284,284,284,284,284,,,284,,,,,,,284,,,284,284,,284,284,284',
'284,284,,284,284,284,,284,284,736,,736,736,736,736,736,,,,,,,,,,736',
',,,,,,,284,,,284,,,284,,,284,,,,,,736,,,,,,,,736,736,736,736,,284,284',
'284,284,284,284,,,,284,284,,,,284,,,284,,,284,,,,,284,284,285,285,285',
'285,285,,,736,285,285,,,,285,,285,285,285,285,285,285,285,,,,,,285,285',
'285,285,285,285,285,,,285,,,,,,285,285,,285,285,285,,285,285,285,285',
'285,,285,285,285,,285,285,,285,285,,,,,,,,,,,,,,,,,,,,,,285,,,285,,',
'285,,,285,,285,,,,285,,,,,,,,285,,,,,285,285,285,285,285,285,,,,285',
'285,,,,624,624,624,285,624,,285,,624,624,,285,285,624,,624,624,624,624',
'624,624,624,,,,,,624,624,624,624,624,624,624,,,624,,,,,,,624,,,624,624',
',624,624,624,624,624,,624,624,624,,624,624,,624,624,,,,,,,,,,,,,,,,',
',,,,,624,,,624,,,624,,,624,,,,,,624,,,,,,,,624,,,,,624,624,624,624,624',
'624,,,,624,624,,,,623,623,623,624,623,,624,,623,623,,624,624,623,,623',
'623,623,623,623,623,623,,,,,,623,623,623,623,623,623,623,,,623,,,,,',
',623,,,623,623,,623,623,623,623,623,,623,623,623,,623,623,,623,623,',
',,,,,,,,,,,,,,,,,,,,623,,,623,,,623,,,623,,,,,,623,,,,,,,,623,,,,,623',
'623,623,623,623,623,,,,623,623,,,,621,621,621,623,621,,623,,621,621',
',623,623,621,,621,621,621,621,621,621,621,,,,,,621,621,621,621,621,621',
'621,,,621,,,,,,,621,,,621,621,,621,621,621,621,621,,621,621,621,,621',
'621,,621,621,,,,,,,,,,,,,,,,,,,,,,621,,,621,,,621,,,621,,621,,,,621',
',,,,,,,621,,,,,621,621,621,621,621,621,,,,621,621,,,,619,619,619,621',
'619,,621,,619,619,,621,621,619,,619,619,619,619,619,619,619,,,,,,619',
'619,619,619,619,619,619,,,619,,,,,,,619,,,619,619,,619,619,619,619,619',
',619,619,619,,619,619,,619,619,,,,,,,,,,,,,,,,,,,,,,619,,,619,,,619',
',,619,,,,,,619,,,,,,,,619,,,,,619,619,619,619,619,619,,,,619,619,,,',
',,,619,,,619,,,,,619,619,509,509,509,509,509,,,,509,509,,,,509,,509',
'509,509,509,509,509,509,,,,,,509,509,509,509,509,509,509,,,509,,,,,',
'509,509,,509,509,509,,509,509,509,509,509,,509,509,509,,509,509,,509',
'509,,,,,,,,,,,,,,,,,,,,,,509,,,509,,,509,,,509,,509,,,,509,,,,,,,,509',
',,,,509,509,509,509,509,509,,,,509,509,,,,,,509,509,,,509,,,,,509,509',
'590,590,590,,590,,,,590,590,,,,590,,590,590,590,590,590,590,590,,,,',
',590,590,590,590,590,590,590,,,590,,,,,,,590,,,590,590,,590,590,590',
'590,590,,590,590,590,,590,590,,590,590,,,,,,,,,,,,,,,,,,,,,,590,,,590',
',,590,,,590,,,,,,590,,,,,,,,590,,,,,590,590,590,590,590,590,,,,590,590',
',,,586,586,586,590,586,,590,,586,586,,590,590,586,,586,586,586,586,586',
'586,586,,,,,,586,586,586,586,586,586,586,,,586,,,,,,,586,,,586,586,',
'586,586,586,586,586,586,586,586,586,,586,586,,586,586,,,,,,,,,,,,,,',
',,,,,,,586,,,586,,,586,,,586,,586,,,,586,,,,,,,,586,,,,,586,586,586',
'586,586,586,,,,586,586,,,,578,578,578,586,578,,586,,578,578,,586,586',
'578,,578,578,578,578,578,578,578,,,,,,578,578,578,578,578,578,578,,',
'578,,,,,,,578,,,578,578,,578,578,578,578,578,578,578,578,578,,578,578',
',578,578,,,,,,,,,,,,,,,,,,,,,,578,,,578,,,578,,,578,,578,,,,578,,,,',
',,,578,,,,,578,578,578,578,578,578,,,,578,578,,,,,,,578,,,578,,,,,578',
'578,576,576,576,576,576,,,,576,576,,,,576,,576,576,576,576,576,576,576',
',,,,,576,576,576,576,576,576,576,,,576,,,,,,576,576,,576,576,576,,576',
'576,576,576,576,,576,576,576,,576,576,,576,576,,,,,,,,,,,,,,,,,,,,,',
'576,,,576,,,576,,,576,,576,,,,576,,,,,,,,576,,,,,576,576,576,576,576',
'576,,,,576,576,,,,297,297,297,576,297,,576,,297,297,,576,576,297,,297',
'297,297,297,297,297,297,,,,,,297,297,297,297,297,297,297,,,297,,,,,',
',297,,,297,297,,297,297,297,297,297,,297,297,297,,297,297,594,,594,594',
'594,594,594,,,,,,,,,,594,,,,,,,,297,,,297,,,297,,,297,,,,,,594,594,',
',,,,,594,594,594,594,,297,297,297,297,297,297,,,,297,297,,,,,,,297,',
',297,,,,,297,297,571,571,571,571,571,,,594,571,571,,,,571,,571,571,571',
'571,571,571,571,,,,,,571,571,571,571,571,571,571,,,571,,,,,,571,571',
',571,571,571,,571,571,571,571,571,,571,571,571,,571,571,,571,571,,,',
',,,,,,,,,,,,,,,,,,571,,,571,,,571,,,571,,571,,,,571,,,,,,,,571,,,,,571',
'571,571,571,571,571,,,,571,571,,,,,,,571,,,571,,,,,571,571,567,567,567',
'567,567,,,,567,567,,,,567,,567,567,567,567,567,567,567,,,,,,567,567',
'567,567,567,567,567,,,567,,,,,,567,567,,567,567,567,,567,567,567,567',
'567,,567,567,567,,567,567,,567,567,,,,,,,,,,,,,,,,,,,,,,567,,,567,,',
'567,,,567,,567,,,,567,,,,,,,,567,,,,,567,567,567,567,567,567,,,,567',
'567,,,,553,553,553,567,553,,567,,553,553,,567,567,553,,553,553,553,553',
'553,553,553,,,,,,553,553,553,553,553,553,553,,,553,,,,,,,553,,,553,553',
',553,553,553,553,553,,553,553,553,,553,553,,,,,,,,,,,,,,,,,,,,,,,,,553',
',,553,,,553,,,553,,,,,,,,,,,,,,,,,,,553,553,553,553,553,553,,,,553,553',
',,,,,,553,,,553,,,,,553,553,547,547,547,547,547,,,,547,547,,,,547,,547',
'547,547,547,547,547,547,,,,,,547,547,547,547,547,547,547,,,547,,,,,',
'547,547,,547,547,547,,547,547,547,547,547,,547,547,547,,547,547,,547',
'547,,,,,,,,,,,,,,,,,,,,,,547,,,547,,,547,,,547,,547,,,,547,,,,,,,,547',
',,,,547,547,547,547,547,547,,,,547,547,,,,,,,547,,,547,,,,,547,547,546',
'546,546,546,546,,,,546,546,,,,546,,546,546,546,546,546,546,546,,,,,',
'546,546,546,546,546,546,546,,,546,,,,,,546,546,,546,546,546,,546,546',
'546,546,546,,546,546,546,,546,546,,546,546,,,,,,,,,,,,,,,,,,,,,,546',
',,546,,,546,,,546,,546,,,,546,,,,,,,,546,,,,,546,546,546,546,546,546',
',,,546,546,,,,306,306,306,546,306,,546,,306,306,,546,546,306,,306,306',
'306,306,306,306,306,,,,,,306,306,306,306,306,306,306,,,306,,,,,,,306',
',,306,306,,306,306,306,306,306,,306,306,306,,306,306,,306,306,,,,,,',
',,,,,,,,,,,,,,,306,,,306,306,,306,,,306,,,,,,306,,,,,,,,306,,,,,306',
'306,306,306,306,306,,,,306,306,,,,,,,306,,,306,,,,,306,306,308,308,308',
'308,308,,,,308,308,,,,308,,308,308,308,308,308,308,308,,,,,,308,308',
'308,308,308,308,308,,,308,,,,,,308,308,,308,308,308,,308,308,308,308',
'308,,308,308,308,,308,308,,308,308,,,,,,,,,,,,,,,,,,,,,,308,,,308,,',
'308,,,308,,308,,,,308,,,,,,,,308,,,,,308,308,308,308,308,308,,,,308',
'308,,,,541,541,541,308,541,,308,,541,541,,308,308,541,,541,541,541,541',
'541,541,541,,,,,,541,541,541,541,541,541,541,,,541,,,,,,,541,,,541,541',
',541,541,541,541,541,541,541,541,541,,541,541,,541,541,,,,,,,,,,,,,',
',,,,,,,,541,,,541,,,541,,,541,,,,,,541,,,,,,,,541,,,,,541,541,541,541',
'541,541,,,,541,541,,,,538,538,538,541,538,,541,,538,538,,541,541,538',
',538,538,538,538,538,538,538,,,,,,538,538,538,538,538,538,538,,,538',
',,,,,,538,,,538,538,,538,538,538,538,538,538,538,538,538,,538,538,,538',
'538,,,,,,,,,,,,,,,,,,,,,,538,,,538,,,538,,,538,,538,,,,538,,,,,,,,538',
',,,,538,538,538,538,538,538,,,,538,538,,,,532,532,532,538,532,,538,',
'532,532,,538,538,532,,532,532,532,532,532,532,532,,,,,,532,532,532,532',
'532,532,532,,,532,,,,,,,532,,,532,532,,532,532,532,532,532,,532,532',
'532,,532,532,,532,532,,,,,,,,,,,,,,,,,,,,,,532,,,532,,,532,,,532,,,',
',,532,,,,,,,,532,,,,,532,532,532,532,532,532,,,,532,532,,,,528,528,528',
'532,528,,532,,528,528,,532,532,528,,528,528,528,528,528,528,528,,,,',
',528,528,528,528,528,528,528,,,528,,,,,,,528,,,528,528,,528,528,528',
'528,528,,528,528,528,,528,528,,528,528,,,,,,,,,,,,,,,,,,,,,,528,,,528',
',,528,,,528,,,,,,528,,,,,,,,528,,,,,528,528,528,528,528,528,,,,528,528',
',,,527,527,527,528,527,,528,,527,527,,528,528,527,,527,527,527,527,527',
'527,527,,,,,,527,527,527,527,527,527,527,,,527,,,,,,,527,,,527,527,',
'527,527,527,527,527,,527,527,527,,527,527,,527,527,,,,,,,,,,,,,,,,,',
',,,,527,,,527,,,527,,,527,,,,,,527,,,,,,,,527,,,,,527,527,527,527,527',
'527,,,,527,527,,,,526,526,526,527,526,,527,,526,526,,527,527,526,,526',
'526,526,526,526,526,526,,,,,,526,526,526,526,526,526,526,,,526,,,,,',
',526,,,526,526,,526,526,526,526,526,,526,526,526,,526,526,,526,526,',
',,,,,,,,,,,,,,,,,,,,526,,,526,,,526,,,526,,,,,,526,,,,,,,,526,,,,,526',
'526,526,526,526,526,,,,526,526,,,,517,517,517,526,517,,526,,517,517',
',526,526,517,,517,517,517,517,517,517,517,,,,,,517,517,517,517,517,517',
'517,,,517,,,,,,,517,,,517,517,,517,517,517,517,517,517,517,517,517,',
'517,517,,517,517,,,,,,,,,,,,,,,,,,,,,,517,,,517,,,517,,,517,,517,,,',
'517,,,,,,,,517,,,,,517,517,517,517,517,517,,,,517,517,,,,515,515,515',
'517,515,,517,,515,515,,517,517,515,,515,515,515,515,515,515,515,,,,',
',515,515,515,515,515,515,515,,,515,,,,,,,515,,,515,515,,515,515,515',
'515,515,,515,515,515,,515,515,,,,,,,,,,,,,,,,,,,,,,,,,515,,,515,,,515',
',,515,,,,,,,,,,,,,,,,,,,515,515,515,515,515,515,,,,515,515,,,,592,592',
'592,515,592,,515,,592,592,,515,515,592,,592,592,592,592,592,592,592',
',,,,,592,592,592,592,592,592,592,,,592,,,,,,,592,,,592,592,,592,592',
'592,592,592,,592,592,592,,592,592,,592,592,,,,,,,,,,,,,,,,,,,,,,592',
',,592,,,592,,,592,,,,,,592,,,,,,,,592,,,,,592,592,592,592,592,592,,',
',592,592,,,,,637,,592,,,592,,637,637,637,592,592,637,637,637,,637,,',
',,,,,,637,637,637,,,,,,,,,637,637,,637,637,637,637,637,,,,,,,,,,,,,',
',,,,,,,,,,637,637,637,637,637,637,637,637,637,637,637,637,637,637,637',
',,637,637,637,,637,637,,,637,,,637,,637,,637,,637,,637,637,637,637,637',
'637,637,,637,637,637,,,,,,,,,,,,,637,637,637,637,,637,436,,637,,637',
',637,436,436,436,,,,436,436,,436,,,,,,,,,,,,,,,,,,,,436,436,,436,436',
'436,436,436,,,,,,,,,,,,,,,,,,,,,,,,436,436,436,436,436,436,436,436,436',
'436,436,436,436,436,436,,,436,436,436,,436,,,,436,,,,,,,436,,436,,436',
'436,436,436,436,436,436,,436,,436,,,,,,,,,,,,,436,436,,436,,436,638',
',436,,436,,436,638,638,638,,,638,638,638,,638,,,,,,,,,,638,638,,,,,',
',,,638,638,,638,638,638,638,638,,,,,,,,,,,,,,,,,,,,,,,,638,638,638,638',
'638,638,638,638,638,638,638,638,638,638,638,,,638,638,638,,638,638,',
',638,,,638,,638,,638,,638,,638,638,638,638,638,638,638,,638,,638,,,',
',,,,,,,,,638,638,638,638,,638,434,,638,,638,,638,434,434,434,,,,434',
'434,,434,,,,,,,,,434,,,,,,,,,,,434,434,,434,434,434,434,434,,,,,,,,',
',,,,,,,,,,,,,,,434,434,434,434,434,434,434,434,434,434,434,434,434,434',
'434,,,434,434,434,,434,,,,434,,,,,,,434,,434,,434,434,434,434,434,434',
'434,,434,434,434,,,,,,,,,,,,,434,434,,434,,434,28,,434,,434,,434,28',
'28,28,,,28,28,28,,28,,,,,,,,,,28,28,,,,,,,,,28,28,,28,28,28,28,28,,',
',,,,,,,,,,,,,,,,,,,,,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,,',
'28,28,28,,,28,,28,28,,,28,,28,,28,,28,,28,28,28,28,28,28,28,,28,,28',
',,,,,,,,,,,,28,28,28,28,50,28,,,28,,28,50,50,50,,,50,50,50,,50,,,,,',
',,,,50,50,50,,,,,,,,50,50,,50,50,50,50,50,,,,,,,,,,,,,,,,,,,,,,,,50',
'50,50,50,50,50,50,50,50,50,50,50,50,50,50,,,50,50,50,,,50,,,50,,,50',
',50,,50,,50,,50,50,50,50,50,50,50,,50,,50,,,,,,,,,,,,,50,50,50,50,493',
'50,,50,50,,50,493,493,493,,,493,493,493,,493,,,,,,,,,,493,,,,,,,,,,493',
'493,,493,493,493,493,493,,,,,,,,,,,,,,492,,,,,,,492,492,492,,,492,492',
'492,,492,,,,,,493,,,,492,,,493,,,,,493,493,492,492,,492,492,492,492',
'492,,,,,,,,,,,,,493,,,,,,,,,,,,,493,,493,,,493,,,,,492,,,,,,,492,,,',
',492,492,,,,,,,,,,,,,,,,,,,,,492,,,,,,,,,,,,,492,,492,,,492,8,8,8,8',
'8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,,,,8,8,8,8,8,8,8,8,8,8,8,8,8',
'8,8,8,8,8,8,8,8,,8,8,,,8,,,,,,,,,8,8,,8,8,8,8,8,8,8,,,8,8,,,,,8,8,8',
'8,,,,,,,,,,,,,8,8,,8,8,8,8,8,8,8,8,8,8,8,,,8,8,,,,,,,,,,8,410,410,410',
'410,410,410,410,410,410,410,410,410,410,410,410,410,410,410,410,410',
'410,410,410,410,,,,410,410,410,410,410,410,410,410,410,410,410,410,410',
'410,410,410,410,410,410,410,410,,410,410,,,410,,,,,,,,,410,410,,410',
'410,410,410,410,410,410,,,410,410,,,,,410,410,410,410,,,,,,,,,,,,,410',
'410,,410,410,410,410,410,410,410,410,410,410,410,,,410,410,,,,,,,,,',
'410,414,414,414,414,414,414,414,414,414,414,414,414,414,414,414,414',
'414,414,414,414,414,414,414,414,,,,414,414,414,414,414,414,414,414,414',
'414,414,414,414,414,414,414,414,414,414,414,414,,414,414,,,414,,,,,',
',,,414,414,,414,414,414,414,414,414,414,,,414,414,,,,,414,414,414,414',
',,,,,,,,,,,,414,414,,414,414,414,414,414,414,414,414,414,414,414,,,414',
'414,,,,,,,,,,414,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,,,',
'7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,,7,7,7,,7,,,,,,,,,7,7,,7,7',
'7,7,7,7,7,,,7,7,,,,,7,7,7,7,,,,,,,,,,,,,7,7,,7,7,7,7,7,7,7,7,7,7,7,',
',7,7,,,,,,,,,,7,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65',
'65,65,65,65,65,65,,,,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65',
'65,65,65,65,65,,65,65,65,65,65,,65,,,,,,,65,65,,65,65,65,65,65,65,65',
',,65,65,,,,,65,65,65,65,,,,,,65,,,,,,,65,65,,65,65,65,65,65,65,65,65',
'65,65,65,,,65,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79',
'79,79,79,79,79,79,,,,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79',
'79,79,79,79,79,,79,79,79,79,79,,79,,,,,,,79,79,,79,79,79,79,79,79,79',
',,79,79,,,,,79,79,79,79,,,,,,,,,,,,,79,79,,79,79,79,79,79,79,79,79,79',
'79,79,,,79,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753',
'753,753,753,753,753,753,753,753,753,,,,753,753,753,753,753,753,753,753',
'753,753,753,753,753,753,753,753,753,753,753,753,753,,753,753,,,753,',
',,,,,,,753,753,,753,753,753,753,753,753,753,,,753,753,,,,,753,753,753',
'753,,,,,,,,,,,,,753,753,,753,753,753,753,753,753,753,753,753,753,753',
',,753,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192',
'192,192,192,192,192,192,192,192,,,,192,192,192,192,192,192,192,192,192',
'192,192,192,192,192,192,192,192,192,192,192,192,,192,192,192,192,192',
',192,,,,,,,192,192,,192,192,192,192,192,192,192,,,192,192,,,,,192,192',
'192,192,,,,,,,,,,,,,192,192,,192,192,192,192,192,192,192,192,192,192',
'192,580,580,192,,580,,,,,,,,,580,580,,580,580,580,580,580,580,580,,',
'580,580,,,,,580,580,580,580,,,,,,,,,,,,,580,580,,580,580,580,580,580',
'580,580,580,580,580,580,449,449,580,,449,,,,,,,,,449,449,,449,449,449',
'449,449,449,449,,,449,449,,,,,449,449,449,449,,,,,,,,,,,,,449,449,,449',
'449,449,449,449,449,449,449,449,449,449,448,448,449,,448,,,,,,,,,448',
'448,,448,448,448,448,448,448,448,,,448,448,,,,,448,448,448,448,,,,,',
'448,,,,,,,448,448,,448,448,448,448,448,448,448,448,448,448,448,579,579',
'448,,579,,,,,,,,,579,579,,579,579,579,579,579,579,579,,,579,579,,,,',
'579,579,579,579,,,,,,579,,,,,,,579,579,,579,579,579,579,579,579,579',
'579,579,579,579,926,926,579,,926,,,,,,,,,926,926,,926,926,926,926,926',
'926,926,,,926,926,,,,,926,926,926,926,,,,,,,,,,,,,926,926,,926,926,926',
'926,926,926,926,926,926,926,926,519,519,926,,519,,,,,,,,,519,519,,519',
'519,519,519,519,519,519,,,519,519,,,,,519,519,519,519,,,,,,,,,,,,,519',
'519,,519,519,519,519,519,519,519,519,519,519,519,203,203,519,,203,,',
',,,,,,203,203,,203,203,203,203,203,203,203,,,203,203,,,,,203,203,203',
'203,,,,,,,,,,,,,203,203,,203,203,203,203,203,203,203,203,203,203,203',
'925,925,203,,925,,,,,,,,,925,925,,925,925,925,925,925,925,925,,,925',
'925,,,,,925,925,925,925,,,,,,925,,,,,,,925,925,,925,925,925,925,925',
'925,925,925,925,925,925,518,518,925,,518,,,,,,,,,518,518,,518,518,518',
'518,518,518,518,,,518,518,,,,,518,518,518,518,,,,,,518,,,,,,,518,518',
',518,518,518,518,518,518,518,518,518,518,518,265,265,518,,265,,,,,,',
',,265,265,,265,265,265,265,265,265,265,,,265,265,,,,,265,265,265,265',
',,,,,,,,,,,,265,265,,265,265,265,265,265,265,265,265,265,265,265,264',
'264,265,,264,,,,,,,,,264,264,,264,264,264,264,264,264,264,,,264,264',
',,,,264,264,264,264,,,,,,,,,,,,,264,264,,264,264,264,264,264,264,264',
'264,264,264,264,587,587,264,,587,,,,,,,,,587,587,,587,587,587,587,587',
'587,587,,,587,587,,,,,587,587,587,587,,,,,,587,,,,,,,587,587,,587,587',
'587,587,587,587,587,587,587,587,587,805,805,587,,805,,,,,,,,,805,805',
',805,805,805,805,805,805,805,,,805,805,,,,,805,805,805,805,,,,,,,,,',
',,,805,805,,805,805,805,805,805,805,805,805,805,805,805,529,529,805',
',529,,,,,,,,,529,529,,529,529,529,529,529,529,529,,,529,529,,,,,529',
'529,529,529,,,,,,529,,,,,,,529,529,,529,529,529,529,529,529,529,529',
'529,529,529,201,201,529,,201,,,,,,,,,201,201,,201,201,201,201,201,201',
'201,,,201,201,,,,,201,201,201,201,,,,,,,,,,,,,201,201,,201,201,201,201',
'201,201,201,201,201,201,201,200,200,201,,200,,,,,,,,,200,200,,200,200',
'200,200,200,200,200,,,200,200,,,,,200,200,200,200,,,,,,200,,,,,,,200',
'200,,200,200,200,200,200,200,200,200,200,200,200,585,585,200,,585,,',
',,,,,,585,585,,585,585,585,585,585,585,585,,,585,585,,,,,585,585,585',
'585,,,,,,,,,,,,,585,585,,585,585,585,585,585,585,585,585,585,585,585',
'530,530,585,,530,,,,,,,,,530,530,,530,530,530,530,530,530,530,,,530',
'530,,,,,530,530,530,530,,,,,,,,,,,,,530,530,,530,530,530,530,530,530',
'530,530,530,530,530,,,530' ]
        racc_action_check = arr = ::Array.new(24206, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_action_pointer = [
    -2,  1249,   nil,   234,   nil,   491,  1133, 22530, 22158,  1112,
  1082,  1076,  1112,   467,   287,   972,   nil,  1815,  1942,  2590,
  1141,   nil,  2336,  2463,  2590,   509,    13,  2997, 21711,   nil,
  3264,  3391,  3518,   nil,  1015,   668,  1073,   781,  4166,  4293,
  4420,  1000,   668,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
 21841,   nil,  4941,  5068,  5195,   -15,  3924,  5576,  5703,   nil,
   nil,  5830,  5970,  6097,   nil, 22654,   nil,   nil,   nil,   nil,
   nil,   152,   nil,   nil,   nil,   nil,   nil,   921,   910, 22767,
   nil,   nil,   nil,   994,  7025,   nil,   nil,  7152,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   903,   nil,  7419,
   nil,   nil,   nil,  7559,  7686,  7813,  7940,  8080,  8220,   nil,
   663,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil, 22993,   697,   nil,  8741,  8868,  8995,  9122,  9249,
 23969, 23908,  9643, 23420,  9897, 10024, 10151,   nil,   721,   140,
   579,   253,   414,   220, 11092, 11219,   nil,   nil, 11346,   142,
 11600, 11727, 11854, 11981, 12108, 12235, 12362, 12489, 12616, 12743,
 12870, 12997, 13124, 13251, 13378, 13505, 13632, 13759, 13886, 14013,
 14140, 14267, 14394, 14521, 14648, 14775,   nil,   nil,   nil,   887,
   nil,   345,   347,   nil, 15309,   607, 15563,   nil,   nil,   nil,
   nil, 15690,   nil,   nil, 23664, 23603,   802, 16211, 16338,   nil,
   nil,   nil,   nil,   nil,   nil,   nil, 16465,   337,   872,  1035,
 16999,  1087,  1154,   973, 17507, 17647,    79,   633,  1138,   228,
   719,   557,    14,   nil,   243,   992,   nil, 18956,   nil,   795,
    74,   499,   887,   nil,   505,   nil, 19770,   nil, 19910,   -25,
   nil,   472,  -103,    39,   598,   602,   376,   763,   nil,   nil,
    48,  4051,   nil,   nil,   nil,   870,   875,   nil,   886,   929,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,  2894,   nil,   nil,
   nil,  1009,   nil,   nil,  1049,    45,    36,   108,  1688,  1561,
   670,    53,  1004,    46,   506,  1090,    78,  1156,   nil,   nil,
   760,  1136,   nil,   541,   nil,    65,   nil,   nil,  4039,   590,
   436,   363,   309,   151,   233,   300,   378,   nil,   392,   nil,
   125,   nil,   362,   nil,   284,   nil,   366,  1100,   172,   nil,
  1099,   -46,   nil,    29,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,  1097,
 22282,   nil,   nil,   nil, 22406,  1077,   nil,   nil,  1014,   nil,
   252,  1041,   nil,  1038,   nil,   nil,  2730,  1053,   840,   912,
   379,   nil,   nil,   nil, 21579,  1046, 21315,   nil,   506,   633,
  1016,  1018,   nil,   nil,   nil,  1815,   nil,   nil, 23176, 23115,
   760,   211,   887,  3124,  3785,    -2,   nil,  4941,  3785,   387,
   356,  1030,  1026,   997,   994,  5195,  5322,  3392,  4166,  3264,
  5068,  1154,  3124,  3658,  2997,  4293,  4420,  4560,  3093,  2972,
  4687,  4814,   633,   -34,   nil,  4814,   nil,  6224,   nil, 16859,
   nil,   nil, 22028, 21971,   -17,   nil,   859,   nil,   nil,   801,
   794,   nil,   nil, 17126,   144,   -35,   796,   nil,   nil, 18295,
   790,   731,   nil,   nil,   725, 20926,   731, 20799, 23542, 23359,
   199,   712,   nil,   nil,   647,   nil, 20672, 20545, 20418, 23847,
 24091,  1688, 20291,   642,   609,   508,   nil,   nil, 20164,   nil,
   nil, 20037,   nil,   nil,   nil,   nil, 19643, 19503,   477,   nil,
  1131,   nil,   nil, 19363,  5982,   nil,   875,   nil,   nil,   286,
   nil,  2885,   nil,   167,  1280,   nil,   nil, 19236,   125,   nil,
   nil, 19096,   212,   320,    77,    45, 18829,   nil, 18689, 23237,
 23054,    37,   nil,   594,   nil, 24030, 18562, 23725,   nil,   nil,
 18435,   463, 21053,   nil, 18968,   nil,   nil,   nil,    35,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   -23,
   nil,   nil,   nil,   966,   nil,   nil,   nil,   nil,   nil, 18155,
   974, 18028,   541, 17901, 17774,  1137,   nil,   nil,   nil, 17380,
  1151,   nil, 17253,   nil,   nil,   315,    61, 21183, 21447,  1013,
   506,   nil, 16732,   nil,  3403,   nil, 16605,   897,   nil,   864,
 16084,   nil,   nil,   nil,   nil,   nil,   nil, 15957,   nil,   696,
 15817, 15436,  1294,   545,   nil,   nil,   553, 15182, 15042,   nil,
   618,   169, 14902,   135,   nil,  1019,   223,   235,    18,   329,
   327,    62, 11473,  2209,   212,   225,   -12,   288, 10952,   nil,
   nil,   -61,   237,   350,   nil,   nil,   225,   nil,   245,   848,
   325,   275,   310,   nil,   nil,   355,  2856,   nil,   835,   nil,
   466,   nil,   nil,   nil,   nil,   nil,   473,   nil,   492, 10825,
   461,    40,   -17,   189,   -18, 10698,   795,   nil,   537,   537,
 10571,   387,   nil,   319, 10431, 10291, 17519,   416,   nil,   nil,
   648,   nil,  9770,   nil,   596,   598,   nil,   616,   626,   630,
   nil,   634,   nil, 22880,   692,  1234,  9516,   nil,   nil,   nil,
  2082,   691,  9376,  8601,   nil,   760,   nil,  2336,   nil,   nil,
  1561,   nil,  1942,  8474,  8347,  7279,    -4,  2463,   nil,   828,
   934,   nil,   nil,   834,   nil,   821,  6898,   nil,   857,   970,
   852,   323,   nil,   nil,   979,   nil,  6771,   872,   921,   nil,
   nil,   nil,   nil,   nil,   nil, 23786,   nil,  1127,   nil,   nil,
   nil,   nil,  1420,  1021,   nil,  6631,  1033,  6504,  6364,   nil,
   nil,    75,    59,   205,   nil,  1065,   nil,   nil,  1068,  1071,
   966,   nil,   nil,   nil,   221,   nil,   nil,   686, 14914,   nil,
  1184,   nil,   406,   nil,  5449,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   992,   977,   nil,  1434,  5322,   nil,   nil,   nil,
  4687,  -107,   nil,   nil,   nil,  4560,   nil,   nil,    -7,  3912,
   nil,  1163,  1007,   nil,   nil,    66,   nil,  1131,  1133,  3658,
  2870,   nil,   nil,  2730,   nil,   nil,  1058,   nil,  1022,   nil,
   nil,  1024,  1032,  1033,  1028,   nil,   nil,  3530,   nil,   nil,
  2209,   nil,  2082,    98,   414,  1126,   120,   nil,   nil,  1434,
   nil,   nil,   nil,   309,  1294,  1195,   nil,   nil,  1096,   nil,
   nil,   nil,  1154,  1210,  1014, 23481, 23298,    74,  1025,   nil,
   nil,   nil,  1227,   nil,  1108,  1233,   nil,  1148,    67,    83,
    94,   198,   nil,   nil,   nil,   nil,   204 ]

racc_action_default = [
    -3,  -549,    -1,  -537,    -4,    -6,  -549,  -549,  -549,  -549,
  -549,  -549,  -549,  -549,  -271,   -36,   -37,  -549,  -549,   -42,
   -44,   -45,  -283,  -321,  -322,   -49,  -249,  -376,  -249,   -61,
   -10,   -65,   -72,   -74,  -549,  -451,  -549,  -549,  -549,  -549,
  -549,  -539,  -226,  -264,  -265,  -266,  -267,  -268,  -269,  -270,
  -527,  -273,  -549,  -548,  -519,  -291,  -548,  -549,  -549,  -296,
  -299,  -537,  -549,  -549,  -313,  -549,  -323,  -324,  -394,  -395,
  -396,  -397,  -398,  -548,  -401,  -548,  -548,  -548,  -548,  -548,
  -428,  -434,  -435,  -549,  -440,  -441,  -442,  -443,  -444,  -445,
  -446,  -447,  -448,  -449,  -450,  -453,  -454,  -549,    -2,  -538,
  -544,  -545,  -546,  -549,  -549,  -549,  -549,  -549,    -3,   -13,
  -549,  -100,  -101,  -102,  -103,  -104,  -105,  -106,  -109,  -110,
  -111,  -112,  -113,  -114,  -115,  -116,  -117,  -118,  -119,  -120,
  -121,  -122,  -123,  -124,  -125,  -126,  -127,  -128,  -129,  -130,
  -131,  -132,  -133,  -134,  -135,  -136,  -137,  -138,  -139,  -140,
  -141,  -142,  -143,  -144,  -145,  -146,  -147,  -148,  -149,  -150,
  -151,  -152,  -153,  -154,  -155,  -156,  -157,  -158,  -159,  -160,
  -161,  -162,  -163,  -164,  -165,  -166,  -167,  -168,  -169,  -170,
  -171,  -172,  -173,  -174,  -175,  -176,  -177,  -178,  -179,  -180,
  -181,  -182,  -549,   -18,  -107,   -10,  -549,  -549,  -549,  -548,
  -549,  -549,  -548,  -549,  -549,  -549,  -549,   -40,  -549,  -451,
  -549,  -271,  -549,  -549,   -10,  -549,   -41,  -218,  -549,  -549,
  -549,  -549,  -549,  -549,  -549,  -549,  -549,  -549,  -549,  -549,
  -549,  -549,  -549,  -549,  -549,  -549,  -549,  -549,  -549,  -549,
  -549,  -549,  -549,  -549,  -549,  -549,  -363,  -365,   -46,  -227,
  -242,  -256,  -256,  -246,  -549,  -257,  -549,  -283,  -321,  -322,
  -521,  -549,   -47,   -48,  -549,  -549,   -53,  -548,  -549,  -290,
  -368,  -377,  -379,   -59,  -375,   -60,  -549,  -537,   -11,   -61,
   -10,  -549,  -549,   -66,   -69,   -10,  -451,  -549,  -549,  -271,
  -286,  -539,  -549,  -325,  -376,  -549,   -71,  -549,   -76,  -278,
  -436,  -437,  -549,  -203,  -204,  -219,  -549,  -540,   -10,  -539,
  -228,  -539,  -541,  -541,  -549,  -549,  -541,  -549,  -292,  -293,
  -549,  -549,  -336,  -337,  -344,  -548,  -485,  -351,  -548,  -548,
  -362,  -484,  -486,  -487,  -488,  -489,  -490,  -549,  -503,  -508,
  -509,  -511,  -512,  -513,  -549,   -43,  -549,  -549,  -549,  -549,
  -537,  -549,  -538,  -451,  -549,  -549,  -271,  -549,  -492,  -493,
   -96,  -549,   -98,  -549,  -271,  -549,  -310,  -451,  -549,  -100,
  -101,  -138,  -139,  -155,  -160,  -167,  -170,  -316,  -549,  -517,
  -549,  -399,  -549,  -414,  -549,  -416,  -549,  -549,  -549,  -406,
  -549,  -549,  -412,  -549,  -427,  -429,  -430,  -431,  -432,  -438,
  -439,   947,    -5,  -547,   -19,   -20,   -21,   -22,   -23,  -549,
  -549,   -15,   -16,   -17,  -549,  -549,   -25,   -33,  -183,  -257,
  -549,  -549,   -26,   -34,   -35,   -27,  -185,  -549,  -528,  -529,
  -548,  -372,  -530,  -531,  -528,  -249,  -529,  -374,  -533,  -534,
  -549,  -371,  -528,  -529,   -32,  -192,   -38,   -39,  -549,  -549,
  -548,  -278,  -549,  -549,  -549,  -549,  -289,  -193,  -194,  -195,
  -196,  -197,  -198,  -199,  -200,  -205,  -206,  -207,  -208,  -209,
  -210,  -211,  -212,  -213,  -214,  -215,  -216,  -217,  -220,  -221,
  -222,  -223,  -549,  -548,  -243,  -549,  -244,  -549,  -254,  -549,
  -258,  -524,  -249,  -249,  -548,   -54,  -539,  -237,  -238,  -256,
  -256,  -250,  -251,  -549,  -548,  -548,  -549,  -285,    -9,  -538,
  -549,   -62,  -276,   -77,   -67,  -549,  -549,  -548,  -549,  -549,
  -278,  -549,  -436,  -437,   -73,   -78,  -549,  -549,  -549,  -549,
  -549,  -224,  -549,  -386,  -549,  -549,  -229,  -230,  -543,  -542,
  -232,  -543,  -281,  -282,  -520,  -333,   -10,   -10,  -549,  -335,
  -549,  -353,  -360,  -549,  -357,  -358,  -549,  -361,  -485,  -549,
  -494,  -549,  -496,  -498,  -502,  -510,  -514,   -10,  -326,  -327,
  -328,   -10,  -549,  -549,  -549,  -549,   -10,  -381,  -548,  -549,
  -549,  -278,  -305,   -96,   -97,  -549,  -548,  -549,  -308,  -455,
  -549,  -549,  -549,  -314,  -483,  -318,  -535,  -536,  -539,  -400,
  -415,  -418,  -419,  -421,  -402,  -417,  -403,  -404,  -405,  -549,
  -408,  -410,  -411,  -549,  -433,    -7,   -14,  -108,   -24,  -549,
  -263,  -549,  -279,  -549,  -549,   -55,  -235,  -236,  -369,  -549,
   -57,  -373,  -549,  -280,  -370,  -528,  -529,  -528,  -529,  -549,
  -183,  -288,  -549,  -347,  -549,  -349,   -10,  -256,  -255,  -259,
  -549,  -522,  -523,   -50,  -366,   -51,  -367,   -10,  -233,  -549,
  -239,  -241,   -42,  -549,  -248,  -252,  -549,   -10,   -10,  -284,
   -12,   -62,  -549,   -70,   -75,  -549,  -528,  -529,  -548,  -532,
  -277,  -549,  -549,  -191,  -201,  -202,  -549,  -548,  -548,  -274,
  -275,  -541,  -549,  -549,  -334,  -345,  -549,  -352,  -548,  -346,
  -549,  -548,  -548,  -504,  -491,  -549,  -549,  -501,  -548,  -329,
  -548,  -297,  -330,  -331,  -332,  -300,  -549,  -303,  -549,  -549,
  -549,  -528,  -529,  -532,  -277,  -549,   -96,   -99,  -532,  -549,
   -10,  -549,  -457,  -549,   -10,   -10,  -483,  -549,  -460,  -461,
  -463,  -464,  -466,  -467,  -516,  -516,  -472,  -474,  -474,  -474,
  -482,  -485,  -506,  -549,  -549,  -549,   -10,  -407,  -409,  -413,
  -184,  -261,  -549,  -549,   -29,  -187,   -30,  -188,   -56,   -31,
  -189,   -58,  -190,  -549,  -549,  -549,  -279,  -225,  -348,  -549,
  -549,  -245,  -260,  -549,  -234,  -256,  -549,  -253,  -549,  -549,
   -68,  -279,   -79,  -287,  -548,  -342,   -10,  -387,  -548,  -388,
  -389,  -231,  -338,  -339,  -359,  -549,  -278,  -549,  -355,  -356,
  -495,  -497,  -500,  -549,  -340,  -549,  -549,   -10,   -10,  -302,
  -304,  -549,  -279,  -549,  -279,  -549,  -456,  -311,  -549,  -549,
  -539,  -459,  -462,  -465,  -549,  -470,  -471,  -549,  -549,  -478,
  -549,  -480,  -549,  -481,  -549,  -319,  -518,  -420,  -423,  -424,
  -425,  -426,  -549,  -262,   -28,  -186,  -549,  -350,  -364,   -52,
  -240,  -256,  -378,  -380,    -8,   -10,  -393,  -343,  -549,  -549,
  -391,  -277,  -548,  -499,  -294,  -549,  -295,  -549,  -549,  -549,
   -10,  -306,  -309,   -10,  -315,  -317,  -549,  -468,  -516,  -515,
  -473,  -474,  -474,  -474,  -549,  -507,  -505,  -483,  -422,  -247,
  -549,  -392,   -10,  -451,  -549,  -549,  -271,  -390,  -354,   -10,
  -298,  -301,  -259,  -548,   -10,  -549,  -458,  -469,  -549,  -476,
  -477,  -479,   -10,  -386,  -548,  -549,  -549,  -278,  -548,  -382,
  -383,  -384,  -549,  -312,  -474,  -549,  -385,  -549,  -528,  -529,
  -532,  -277,  -341,  -307,  -475,  -320,  -279 ]

clist = [
'26,306,567,571,365,377,114,114,314,250,250,250,283,293,293,575,534,26',
'26,395,560,5,26,26,26,270,274,330,687,486,26,322,102,417,424,524,251',
'251,251,735,311,750,651,495,293,293,109,194,117,117,216,747,26,26,266',
'273,275,26,26,552,296,26,555,557,114,252,252,252,537,540,695,703,544',
'98,559,600,346,347,114,99,350,610,2,430,435,281,441,794,835,836,102',
'279,711,715,897,895,651,316,648,26,648,308,584,26,26,26,26,26,26,813',
'816,248,262,263,384,386,664,348,393,13,5,817,404,405,406,407,654,656',
'408,5,746,351,395,349,646,818,208,208,725,914,730,208,208,208,592,657',
'883,492,493,13,287,287,368,734,427,667,668,440,594,753,595,320,545,378',
'701,864,588,357,402,193,359,208,208,895,247,483,208,208,504,505,208',
'354,363,750,929,719,311,798,868,311,409,114,381,747,382,26,26,26,26',
'26,439,319,26,388,26,26,26,609,318,391,421,421,847,755,26,26,651,756',
'13,830,888,887,208,208,208,208,13,13,416,422,425,12,917,315,379,501',
'444,891,716,666,410,658,811,496,560,1,,707,,,,521,,673,250,250,,,,,',
'12,,250,,,293,26,26,535,,536,746,648,648,,26,486,525,293,26,499,251',
',,26,,,,,251,270,330,274,,,548,,705,,,,758,,,,102,,26,593,500,252,514',
'930,13,208,208,208,208,252,,208,,208,208,208,727,695,,942,12,430,435',
'13,208,510,,,12,12,516,279,922,881,750,,279,508,26,26,293,,,509,747',
'703,498,502,,,,839,841,843,,506,,572,573,,889,,,889,746,,746,,746,102',
'26,,,,,,208,208,,560,,,,,589,208,,,,13,,678,768,287,13,639,,771,,114',
'790,,678,114,,651,287,,936,,574,,,,781,,12,13,,627,,,804,746,631,808',
'809,311,825,,634,,828,829,,12,,801,439,616,26,117,,617,746,117,659,',
'625,,,,678,630,,,,208,208,,678,,675,648,,,,880,,,,,,,,,,363,,,,627,627',
',,873,525,293,,208,,,,26,311,919,920,921,,26,,12,,648,,,12,26,439,,653',
'655,,,902,799,,,647,439,670,909,26,720,,293,,,,12,,729,,,,,26,26,944',
',,,,,,,,,754,,,,781,,,311,,26,,208,,26,,311,,,26,931,26,439,,691,,,439',
',26,,,,26,915,26,,,,,,,,,712,712,,,,908,,,731,,14,,,,330,,,,779,732',
',208,26,26,,,,13,26,935,,,,287,,208,,899,,317,14,289,289,,,26,,,,,208',
',525,293,764,766,26,,,,769,,792,293,13,13,26,26,,,,699,356,364,,282',
'627,,,631,,,698,,,13,702,,,13,,,845,,13,,208,,,,,421,785,,208,35,,,208',
'14,208,,,,,,,14,14,,,,,,26,,749,,,26,,,821,26,26,35,286,286,,12,,208',
'208,823,,,,208,10,,,114,,,,26,,,,826,,827,26,,13,831,,353,367,,367,',
',,,13,12,12,10,,,419,423,,,13,13,,,886,287,,,,854,26,,12,,861,287,12',
',439,35,14,12,678,,,358,,35,35,26,,26,26,,,,,,,14,,,,,,,,,875,,,,,,488',
'415,490,,208,,,491,10,13,,293,712,13,13,,10,10,,,282,,,,,26,,,,749,',
',,,,13,,12,,937,26,,208,26,,,,,12,,,14,,,,289,14,,12,12,,35,26,,,,,',
'289,26,,311,,,26,13,,,,14,35,,26,,26,439,282,,,,,282,,,208,,13,13,,',
'872,,,,10,,,,,,,,,,,,,,,,,12,,10,,12,12,,,,,892,,893,,,,,,364,,,,,13',
',35,12,904,,286,35,,,,,,,,13,,,13,286,,,620,,,,,,,,35,,,,,,,13,,,,,',
'12,13,10,749,,,13,10,,,,,,,13,,208,,,,,12,12,207,934,,,,,,10,,,,,,,',
',,,,,,649,,317,367,652,,,,,,,,,,309,,,,663,345,345,,,345,,12,,,,,,,',
',,,,,,,12,,,12,,,,,,14,,,,649,,289,317,,,,,,12,,,345,345,345,345,12',
',,,,12,,,,,,,,12,323,,,14,14,,,,,,364,,,,,,,383,,385,385,389,392,385',
'14,,,,14,,,,,14,,,,,692,693,,,,,,,,,,,,,,761,,,,,,708,,35,,710,,,,286',
'718,,,,,,,,,,,,,,782,,446,447,,,,,,,649,317,455,,,,35,35,,,,14,10,367',
',,,,,,,,14,,,,,35,797,,,35,14,14,,,35,289,,,,,,,,,780,289,,10,10,,,',
',,,783,,419,,,,,,,,788,789,,10,,,,10,,,,,10,,,833,,,,,,,,,,,,,14,,,',
'14,14,,853,,,,35,,,,,,,,,,,35,,497,851,14,,,,,419,35,35,,,,286,,,345',
'345,,,,,,286,,,,,,,10,,,,,,,852,,,,10,14,,,,,,598,,,10,10,,,,,,551,',
',551,551,14,14,896,,,,,,35,,,,35,35,867,,,,317,,,,,,,,,,,,,,,,35,877',
'878,912,,,,,,,,,,,14,,,10,906,,,10,10,,912,,,,,14,,,14,217,,,,249,249',
'249,35,,,10,,,,,,901,,14,,303,304,305,,,14,,,35,35,14,913,,626,,249',
'249,,14,,,309,,,,,,,,,10,,,923,,,,,,,928,,,,,932,,,,,686,10,10,,,,35',
',,,903,,,,,,643,,,,,35,,,35,626,626,643,,,,,,,,,,643,643,,,,,35,,,,',
',10,35,,,907,,35,,,345,,733,,,35,10,,,10,,,,,,,,,,,,,,,,,,,10,,,,,,',
'10,,,,,10,,,,,,,,10,,418,249,426,249,,,249,,445,,,,,,,,,,,,,,217,,457',
'458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474',
'475,476,477,478,479,480,481,482,,,,,,,,,249,,249,,,,,249,,,,,,249,249',
',,,,,,,249,,,,,345,,,,,,,,,,,,,,,,,,626,,,,,,,531,,795,800,,,,,,,,,',
'551,,,551,551,,,,,,795,,795,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,345',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,866,,,,870,249,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,249,,445,640,426,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,249',
',249,,249,,,,551,,,,,,,,,,662,,,,,,,,,,,,,,249,,,,,,,,,683,684,685,',
',,,,795,,,,249,,,249,,,,,,,,795,,,,,,,,,,,,,,,,,,,,,,,,,,,,,249,,,,',
',,,249,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,760,,249,,765,767,,,,,770,,,772',
',,,,,,,,,777,,,,,,,,249,,,,,,,,,,249,249,,,,,,,,,,,,,,,,,,,,,,,,,,,249',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,249,,,,,,,,,,,,,,,,,,,,,,,249,,,,,,,,',
',,,,,,,,,,,249,855,,,,,,,,,,765,767,770,,,,,,,,,,,249,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,249,,,,,,,,,,,,855,,,,249',
',,,,,,,,,,,,,,,,,,249,,,,,,,,,,,,,,,,,,,,,249,,,,,,,,,,,,,,,,,,,,,,',
',249' ]
        racc_goto_table = arr = ::Array.new(2402, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'37,51,77,77,46,47,48,48,22,29,29,29,41,52,52,80,8,37,37,47,145,7,37',
'37,37,57,57,107,10,61,37,104,83,24,24,43,54,54,54,84,29,141,154,35,52',
'52,14,14,50,50,18,110,37,37,34,34,34,37,37,109,42,37,109,109,48,56,56',
'56,55,55,106,147,55,4,148,129,16,16,48,6,16,129,2,33,33,39,33,11,142',
'142,83,38,79,79,101,151,154,56,62,37,62,87,45,37,37,37,37,37,37,78,11',
'31,31,31,126,126,62,88,126,21,7,89,16,16,16,16,60,60,7,7,108,4,47,90',
'36,91,21,21,92,93,94,21,21,21,95,36,96,33,33,21,21,21,97,98,22,36,36',
'22,99,100,86,102,103,85,105,12,82,81,5,15,19,21,21,151,112,113,21,21',
'115,116,21,21,21,141,117,118,29,119,120,29,2,48,124,110,125,37,37,37',
'37,37,48,76,37,127,37,37,37,128,74,130,54,54,131,132,37,37,154,133,21',
'135,137,139,21,21,21,21,21,21,18,18,18,20,142,73,72,64,18,144,80,63',
'27,59,149,58,145,1,,145,,,,51,,43,29,29,,,,,,20,,29,,,52,37,37,51,,51',
'108,62,62,,37,61,41,52,37,54,54,,,37,,,,,54,57,107,57,,,104,,148,,,',
'129,,,,83,,37,46,56,56,42,11,21,21,21,21,21,56,,21,,21,21,21,45,106',
',78,20,33,33,21,21,39,,,20,20,39,38,84,79,141,,38,4,37,37,52,,,6,110',
'147,31,31,,,,143,143,143,,31,,16,16,,108,,,108,108,,108,,108,83,37,',
',,,,21,21,,145,,,,,83,21,,,,21,,33,35,21,21,22,,35,,48,43,,33,48,,154',
'21,,10,,4,,,,61,,20,21,,57,,,109,108,57,109,109,29,8,,57,,8,8,,20,,55',
'48,14,37,50,,14,108,50,51,,34,,,,33,34,,,,21,21,,33,,22,62,,,,77,,,',
',,,,,,21,,,,57,57,,,145,41,52,,21,,,,37,29,143,143,143,,37,,20,,62,',
',20,37,48,,34,34,,,77,24,,,56,48,7,77,37,22,,52,,,,20,,22,,,,,37,37',
'143,,,,,,,,,,51,,,,61,,,29,,37,,21,,37,,29,,,37,80,37,48,,56,,,48,,37',
',,,37,8,37,,,,,,,,,83,83,,,,109,,,16,,23,,,,107,,,,104,83,,21,37,37',
',,,21,37,8,,,,21,,21,,61,,25,23,23,23,,,37,,,,,21,,41,52,18,18,37,,',
',18,,41,52,21,21,37,37,,,,21,23,23,,9,57,,,57,,,111,,,21,111,,,21,,',
'47,,21,,21,,,,,54,56,,21,44,,,21,23,21,,,,,,,23,23,,,,,,37,,111,,,37',
',,54,37,37,44,44,44,,20,,21,21,16,,,,21,17,,,48,,,,37,,,,83,,83,37,',
'21,83,,44,44,,44,,,,,21,20,20,17,,,25,25,,,21,21,,,51,21,,,,18,37,,20',
',54,21,20,,48,44,23,20,33,,,17,,44,44,37,,37,37,,,,,,,23,,,,,,,,,16',
',,,,,25,9,25,,21,,,25,17,21,,52,83,21,21,,17,17,,,9,,,,,37,,,,111,,',
',,,21,,20,,22,37,,21,37,,,,,20,,,23,,,,23,23,,20,20,,44,37,,,,,,23,37',
',29,,,37,21,,,,23,44,,37,,37,48,9,,,,,9,,,21,,21,21,,,111,,,,17,,,,',
',,,,,,,,,,,,20,,17,,20,20,,,,,111,,111,,,,,,23,,,,,21,,44,20,21,,44',
'44,,,,,,,,21,,,21,44,,,25,,,,,,,,44,,,,,,,21,,,,,,20,21,17,111,,,21',
'17,,,,,,,21,,21,,,,,20,20,26,111,,,,,,17,,,,,,,,,,,,,,25,,25,44,25,',
',,,,,,,,26,,,,25,26,26,,,26,,20,,,,,,,,,,,,,,,20,,,20,,,,,,23,,,,25',
',23,25,,,,,,20,,,26,26,26,26,20,,,,,20,,,,,,,,20,53,,,23,23,,,,,,23',
',,,,,,53,,53,53,53,53,53,23,,,,23,,,,,23,,,,,9,9,,,,,,,,,,,,,,25,,,',
',,9,,44,,9,,,,44,9,,,,,,,,,,,,,,25,,26,26,,,,,,,25,25,26,,,,44,44,,',
',23,17,44,,,,,,,,,23,,,,,44,25,,,44,23,23,,,44,23,,,,,,,,,9,23,,17,17',
',,,,,,9,,25,,,,,,,,9,9,,17,,,,17,,,,,17,,,25,,,,,,,,,,,,,23,,,,23,23',
',25,,,,44,,,,,,,,,,,44,,53,23,23,,,,,25,44,44,,,,44,,,26,26,,,,,,44',
',,,,,,17,,,,,,,9,,,,17,23,,,,,,26,,,17,17,,,,,,53,,,53,53,23,23,25,',
',,,,44,,,,44,44,9,,,,25,,,,,,,,,,,,,,,,44,9,9,25,,,,,,,,,,,23,,,17,23',
',,17,17,,25,,,,,23,,,23,28,,,,28,28,28,44,,,17,,,,,,9,,23,,28,28,28',
',,23,,,44,44,23,9,,53,,28,28,,23,,,26,,,,,,,,,17,,,9,,,,,,,9,,,,,9,',
',,,26,17,17,,,,44,,,,44,,,,,,53,,,,,44,,,44,53,53,53,,,,,,,,,,53,53',
',,,,44,,,,,,17,44,,,17,,44,,,26,,26,,,44,17,,,17,,,,,,,,,,,,,,,,,,,17',
',,,,,,17,,,,,17,,,,,,,,17,,28,28,28,28,,,28,,28,,,,,,,,,,,,,,28,,28',
'28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28',
'28,28,,,,,,,,,28,,28,,,,,28,,,,,,28,28,,,,,,,,28,,,,,26,,,,,,,,,,,,',
',,,,,53,,,,,,,28,,53,53,,,,,,,,,,53,,,53,53,,,,,,53,,53,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,26,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,53,,,,53,28,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,28,,28,28,28,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,28,,28,,28,,,,53,,,,,,,,,,28,,,,,,,,,,,,,,28,,',
',,,,,,28,28,28,,,,,,53,,,,28,,,28,,,,,,,,53,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,28,,,,,,,,28,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,28,,28,,28,28,,,,,28',
',,28,,,,,,,,,,28,,,,,,,,28,,,,,,,,,,28,28,,,,,,,,,,,,,,,,,,,,,,,,,,',
'28,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,28,,,,,,,,,,,,,,,,,,,,,,,28,,,,,,,',
',,,,,,,,,,,,28,28,,,,,,,,,,28,28,28,,,,,,,,,,,28,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,28,,,,,,,,,,,,28,,,,28,,,,,,,',
',,,,,,,,,,,28,,,,,,,,,,,,,,,,,,,,,28,,,,,,,,,,,,,,,,,,,,,,,,28' ]
        racc_goto_check = arr = ::Array.new(2402, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_goto_pointer = [
   nil,   245,    82,   nil,    70,    69,    76,    21,  -292,   646,
  -505,  -600,  -629,   nil,    39,   161,    19,   749,    32,   108,
   231,   119,   -45,   611,  -163,   586,  1033,   131,  1477,   -13,
   nil,    89,   nil,  -117,    28,  -223,  -349,     0,    61,    55,
   nil,   -19,    28,  -262,   706,  -259,   -59,   -60,    -1,   nil,
    41,   -40,   -18,  1098,    14,  -244,    43,    -1,   -24,  -255,
  -366,  -223,  -387,  -264,   -33,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   169,   179,   153,   nil,   145,  -344,  -599,  -480,
  -336,   105,  -199,    29,  -555,    98,  -218,    50,    58,  -590,
    73,  -580,  -444,  -742,  -448,  -222,  -681,    88,  -440,  -219,
  -436,  -751,   105,  -158,   -25,  -390,  -480,   -29,  -464,  -266,
  -543,   133,   154,   -71,   nil,   -93,   -93,  -729,  -392,  -501,
  -610,   nil,   nil,   nil,   121,   121,    39,   126,  -181,  -307,
   131,  -543,  -389,  -386,   nil,  -517,   nil,  -614,   nil,  -613,
   nil,  -553,  -656,  -386,  -601,  -317,   nil,  -483,  -263,  -464,
   nil,  -745,   nil,   nil,  -445 ]

racc_goto_default = [
   nil,   nil,   nil,     3,   nil,     4,   352,   278,   nil,   533,
   nil,   814,   nil,   277,   nil,   nil,   nil,   212,    16,    11,
   213,   302,   nil,   211,   nil,   255,    15,   nil,    19,    20,
    21,   nil,    25,   681,   nil,   nil,   nil,   292,    29,   nil,
    31,    34,    33,   nil,   209,   362,   nil,   116,   433,   115,
    69,   nil,    42,   310,   312,   nil,   313,   431,   nil,   nil,
   628,   484,   253,   nil,   nil,   268,    43,    44,    45,    46,
    47,    48,    49,   nil,   269,    55,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   568,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   325,   324,   697,   327,   nil,
   328,   329,   nil,   nil,   437,   nil,   nil,   nil,   nil,   nil,
   nil,    68,    70,    71,    72,   nil,   nil,   nil,   nil,   605,
   nil,   nil,   nil,   nil,   394,   737,   740,   745,   742,   743,
   744,   890,   nil,   nil,   748,   336,   331,   338,   nil,   562,
   563,   752,   341,   344,   260 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 143, :_reduce_none,
  2, 144, :_reduce_2,
  0, 145, :_reduce_3,
  1, 145, :_reduce_4,
  3, 145, :_reduce_5,
  1, 147, :_reduce_none,
  4, 147, :_reduce_7,
  4, 150, :_reduce_8,
  2, 151, :_reduce_9,
  0, 155, :_reduce_10,
  1, 155, :_reduce_11,
  3, 155, :_reduce_12,
  0, 169, :_reduce_13,
  4, 149, :_reduce_14,
  3, 149, :_reduce_15,
  3, 149, :_reduce_none,
  3, 149, :_reduce_17,
  2, 149, :_reduce_18,
  3, 149, :_reduce_19,
  3, 149, :_reduce_20,
  3, 149, :_reduce_21,
  3, 149, :_reduce_22,
  3, 149, :_reduce_23,
  4, 149, :_reduce_none,
  3, 149, :_reduce_25,
  3, 149, :_reduce_26,
  3, 149, :_reduce_27,
  6, 149, :_reduce_none,
  5, 149, :_reduce_29,
  5, 149, :_reduce_none,
  5, 149, :_reduce_none,
  3, 149, :_reduce_none,
  3, 149, :_reduce_33,
  3, 149, :_reduce_34,
  3, 149, :_reduce_35,
  1, 149, :_reduce_none,
  1, 168, :_reduce_none,
  3, 168, :_reduce_38,
  3, 168, :_reduce_39,
  2, 168, :_reduce_40,
  2, 168, :_reduce_41,
  1, 168, :_reduce_none,
  1, 158, :_reduce_none,
  1, 160, :_reduce_none,
  1, 160, :_reduce_none,
  2, 160, :_reduce_46,
  2, 160, :_reduce_47,
  2, 160, :_reduce_48,
  1, 172, :_reduce_none,
  4, 172, :_reduce_none,
  4, 172, :_reduce_none,
  4, 177, :_reduce_none,
  2, 171, :_reduce_53,
  3, 171, :_reduce_none,
  4, 171, :_reduce_55,
  5, 171, :_reduce_none,
  4, 171, :_reduce_57,
  5, 171, :_reduce_none,
  2, 171, :_reduce_59,
  2, 171, :_reduce_60,
  1, 161, :_reduce_61,
  3, 161, :_reduce_62,
  1, 181, :_reduce_63,
  3, 181, :_reduce_64,
  1, 180, :_reduce_65,
  2, 180, :_reduce_66,
  3, 180, :_reduce_67,
  5, 180, :_reduce_none,
  2, 180, :_reduce_69,
  4, 180, :_reduce_none,
  2, 180, :_reduce_71,
  1, 180, :_reduce_72,
  3, 180, :_reduce_none,
  1, 183, :_reduce_74,
  3, 183, :_reduce_75,
  2, 182, :_reduce_76,
  3, 182, :_reduce_77,
  1, 185, :_reduce_none,
  3, 185, :_reduce_none,
  1, 184, :_reduce_80,
  4, 184, :_reduce_81,
  3, 184, :_reduce_82,
  3, 184, :_reduce_none,
  3, 184, :_reduce_none,
  3, 184, :_reduce_none,
  2, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 159, :_reduce_88,
  4, 159, :_reduce_89,
  3, 159, :_reduce_90,
  3, 159, :_reduce_91,
  3, 159, :_reduce_92,
  3, 159, :_reduce_93,
  2, 159, :_reduce_94,
  1, 159, :_reduce_none,
  1, 187, :_reduce_none,
  2, 188, :_reduce_97,
  1, 188, :_reduce_98,
  3, 188, :_reduce_99,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_103,
  1, 189, :_reduce_104,
  1, 156, :_reduce_105,
  1, 156, :_reduce_none,
  1, 157, :_reduce_107,
  3, 157, :_reduce_108,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  3, 170, :_reduce_183,
  5, 170, :_reduce_184,
  3, 170, :_reduce_185,
  6, 170, :_reduce_186,
  5, 170, :_reduce_187,
  5, 170, :_reduce_none,
  5, 170, :_reduce_none,
  5, 170, :_reduce_none,
  4, 170, :_reduce_none,
  3, 170, :_reduce_none,
  3, 170, :_reduce_193,
  3, 170, :_reduce_194,
  3, 170, :_reduce_195,
  3, 170, :_reduce_196,
  3, 170, :_reduce_197,
  3, 170, :_reduce_198,
  3, 170, :_reduce_199,
  3, 170, :_reduce_200,
  4, 170, :_reduce_201,
  4, 170, :_reduce_202,
  2, 170, :_reduce_203,
  2, 170, :_reduce_204,
  3, 170, :_reduce_205,
  3, 170, :_reduce_206,
  3, 170, :_reduce_207,
  3, 170, :_reduce_208,
  3, 170, :_reduce_209,
  3, 170, :_reduce_210,
  3, 170, :_reduce_211,
  3, 170, :_reduce_212,
  3, 170, :_reduce_213,
  3, 170, :_reduce_214,
  3, 170, :_reduce_215,
  3, 170, :_reduce_216,
  3, 170, :_reduce_217,
  2, 170, :_reduce_218,
  2, 170, :_reduce_219,
  3, 170, :_reduce_220,
  3, 170, :_reduce_221,
  3, 170, :_reduce_222,
  3, 170, :_reduce_223,
  3, 170, :_reduce_224,
  5, 170, :_reduce_225,
  1, 170, :_reduce_none,
  1, 167, :_reduce_none,
  1, 164, :_reduce_228,
  2, 164, :_reduce_229,
  2, 164, :_reduce_230,
  4, 164, :_reduce_231,
  2, 164, :_reduce_232,
  3, 199, :_reduce_233,
  2, 201, :_reduce_none,
  1, 202, :_reduce_235,
  1, 202, :_reduce_none,
  1, 200, :_reduce_237,
  1, 200, :_reduce_none,
  2, 200, :_reduce_239,
  4, 200, :_reduce_240,
  2, 200, :_reduce_241,
  1, 173, :_reduce_242,
  2, 173, :_reduce_243,
  2, 173, :_reduce_244,
  4, 173, :_reduce_245,
  1, 173, :_reduce_246,
  4, 205, :_reduce_none,
  1, 205, :_reduce_none,
  0, 207, :_reduce_249,
  2, 176, :_reduce_250,
  1, 206, :_reduce_none,
  2, 206, :_reduce_252,
  3, 206, :_reduce_253,
  2, 204, :_reduce_254,
  2, 203, :_reduce_255,
  0, 203, :_reduce_256,
  1, 196, :_reduce_257,
  2, 196, :_reduce_258,
  3, 196, :_reduce_259,
  4, 196, :_reduce_260,
  3, 166, :_reduce_261,
  4, 166, :_reduce_262,
  2, 166, :_reduce_263,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  0, 229, :_reduce_273,
  4, 194, :_reduce_274,
  4, 194, :_reduce_275,
  3, 194, :_reduce_276,
  3, 194, :_reduce_277,
  2, 194, :_reduce_278,
  4, 194, :_reduce_279,
  4, 194, :_reduce_280,
  3, 194, :_reduce_281,
  3, 194, :_reduce_282,
  1, 194, :_reduce_283,
  4, 194, :_reduce_284,
  3, 194, :_reduce_285,
  1, 194, :_reduce_286,
  5, 194, :_reduce_287,
  4, 194, :_reduce_288,
  3, 194, :_reduce_289,
  2, 194, :_reduce_290,
  1, 194, :_reduce_none,
  2, 194, :_reduce_292,
  2, 194, :_reduce_293,
  6, 194, :_reduce_294,
  6, 194, :_reduce_295,
  0, 230, :_reduce_296,
  0, 231, :_reduce_297,
  7, 194, :_reduce_298,
  0, 232, :_reduce_299,
  0, 233, :_reduce_300,
  7, 194, :_reduce_301,
  5, 194, :_reduce_302,
  4, 194, :_reduce_303,
  5, 194, :_reduce_304,
  0, 234, :_reduce_305,
  0, 235, :_reduce_306,
  9, 194, :_reduce_307,
  0, 236, :_reduce_308,
  6, 194, :_reduce_309,
  0, 237, :_reduce_310,
  0, 238, :_reduce_311,
  8, 194, :_reduce_312,
  0, 239, :_reduce_313,
  0, 240, :_reduce_314,
  6, 194, :_reduce_315,
  0, 241, :_reduce_316,
  6, 194, :_reduce_317,
  0, 242, :_reduce_318,
  0, 243, :_reduce_319,
  9, 194, :_reduce_320,
  1, 194, :_reduce_321,
  1, 194, :_reduce_322,
  1, 194, :_reduce_323,
  1, 194, :_reduce_none,
  1, 163, :_reduce_none,
  1, 219, :_reduce_none,
  1, 219, :_reduce_none,
  1, 219, :_reduce_none,
  2, 219, :_reduce_none,
  1, 221, :_reduce_none,
  1, 221, :_reduce_none,
  1, 221, :_reduce_none,
  2, 218, :_reduce_333,
  3, 244, :_reduce_334,
  2, 244, :_reduce_335,
  1, 244, :_reduce_none,
  1, 244, :_reduce_none,
  3, 245, :_reduce_338,
  3, 245, :_reduce_339,
  1, 220, :_reduce_340,
  5, 220, :_reduce_341,
  1, 153, :_reduce_none,
  2, 153, :_reduce_343,
  1, 247, :_reduce_344,
  3, 247, :_reduce_345,
  3, 248, :_reduce_346,
  1, 178, :_reduce_none,
  2, 178, :_reduce_348,
  1, 178, :_reduce_349,
  3, 178, :_reduce_350,
  1, 249, :_reduce_351,
  2, 251, :_reduce_352,
  1, 251, :_reduce_353,
  6, 246, :_reduce_354,
  4, 246, :_reduce_355,
  4, 246, :_reduce_356,
  2, 246, :_reduce_357,
  2, 246, :_reduce_358,
  4, 246, :_reduce_359,
  2, 246, :_reduce_360,
  2, 246, :_reduce_361,
  1, 246, :_reduce_362,
  0, 255, :_reduce_363,
  5, 254, :_reduce_364,
  2, 174, :_reduce_365,
  4, 174, :_reduce_none,
  4, 174, :_reduce_none,
  2, 217, :_reduce_368,
  4, 217, :_reduce_369,
  4, 217, :_reduce_370,
  3, 217, :_reduce_371,
  3, 217, :_reduce_372,
  4, 217, :_reduce_373,
  3, 217, :_reduce_374,
  2, 217, :_reduce_375,
  1, 217, :_reduce_376,
  0, 257, :_reduce_377,
  5, 216, :_reduce_378,
  0, 258, :_reduce_379,
  5, 216, :_reduce_380,
  0, 260, :_reduce_381,
  6, 222, :_reduce_382,
  1, 259, :_reduce_383,
  1, 259, :_reduce_none,
  6, 152, :_reduce_385,
  0, 152, :_reduce_386,
  1, 261, :_reduce_387,
  1, 261, :_reduce_none,
  1, 261, :_reduce_none,
  2, 262, :_reduce_390,
  1, 262, :_reduce_391,
  2, 154, :_reduce_392,
  1, 154, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 209, :_reduce_397,
  1, 265, :_reduce_none,
  2, 265, :_reduce_399,
  3, 266, :_reduce_400,
  1, 266, :_reduce_401,
  3, 210, :_reduce_402,
  3, 211, :_reduce_403,
  3, 212, :_reduce_404,
  3, 212, :_reduce_405,
  1, 269, :_reduce_406,
  3, 269, :_reduce_407,
  1, 270, :_reduce_408,
  2, 270, :_reduce_409,
  3, 213, :_reduce_410,
  3, 213, :_reduce_411,
  1, 272, :_reduce_412,
  3, 272, :_reduce_413,
  1, 267, :_reduce_414,
  2, 267, :_reduce_415,
  1, 268, :_reduce_416,
  2, 268, :_reduce_417,
  1, 271, :_reduce_418,
  0, 274, :_reduce_419,
  3, 271, :_reduce_420,
  0, 275, :_reduce_421,
  4, 271, :_reduce_422,
  1, 273, :_reduce_423,
  1, 273, :_reduce_424,
  1, 273, :_reduce_425,
  1, 273, :_reduce_none,
  2, 192, :_reduce_427,
  1, 192, :_reduce_428,
  1, 276, :_reduce_none,
  1, 276, :_reduce_none,
  1, 276, :_reduce_none,
  1, 276, :_reduce_none,
  3, 264, :_reduce_433,
  1, 263, :_reduce_434,
  1, 263, :_reduce_435,
  2, 263, :_reduce_436,
  2, 263, :_reduce_437,
  2, 263, :_reduce_438,
  2, 263, :_reduce_439,
  1, 186, :_reduce_440,
  1, 186, :_reduce_441,
  1, 186, :_reduce_442,
  1, 186, :_reduce_443,
  1, 186, :_reduce_444,
  1, 186, :_reduce_445,
  1, 186, :_reduce_446,
  1, 186, :_reduce_447,
  1, 186, :_reduce_448,
  1, 186, :_reduce_449,
  1, 186, :_reduce_450,
  1, 214, :_reduce_451,
  1, 162, :_reduce_452,
  1, 165, :_reduce_453,
  1, 165, :_reduce_none,
  1, 224, :_reduce_455,
  3, 224, :_reduce_456,
  2, 224, :_reduce_457,
  4, 226, :_reduce_458,
  2, 226, :_reduce_459,
  1, 278, :_reduce_none,
  1, 278, :_reduce_none,
  2, 279, :_reduce_462,
  1, 279, :_reduce_463,
  1, 280, :_reduce_464,
  2, 281, :_reduce_465,
  1, 281, :_reduce_466,
  1, 282, :_reduce_467,
  3, 282, :_reduce_468,
  4, 283, :_reduce_469,
  2, 283, :_reduce_470,
  2, 283, :_reduce_471,
  1, 283, :_reduce_472,
  2, 285, :_reduce_473,
  0, 285, :_reduce_474,
  6, 277, :_reduce_475,
  4, 277, :_reduce_476,
  4, 277, :_reduce_477,
  2, 277, :_reduce_478,
  4, 277, :_reduce_479,
  2, 277, :_reduce_480,
  2, 277, :_reduce_481,
  1, 277, :_reduce_482,
  0, 277, :_reduce_483,
  1, 287, :_reduce_none,
  1, 287, :_reduce_485,
  1, 288, :_reduce_486,
  1, 288, :_reduce_487,
  1, 288, :_reduce_488,
  1, 288, :_reduce_489,
  1, 289, :_reduce_490,
  3, 289, :_reduce_491,
  1, 223, :_reduce_none,
  1, 223, :_reduce_none,
  1, 291, :_reduce_494,
  3, 291, :_reduce_none,
  1, 292, :_reduce_496,
  3, 292, :_reduce_497,
  1, 290, :_reduce_none,
  4, 290, :_reduce_none,
  3, 290, :_reduce_none,
  2, 290, :_reduce_none,
  1, 290, :_reduce_none,
  1, 252, :_reduce_503,
  3, 252, :_reduce_504,
  3, 293, :_reduce_505,
  1, 286, :_reduce_506,
  3, 286, :_reduce_507,
  1, 294, :_reduce_none,
  1, 294, :_reduce_none,
  2, 253, :_reduce_510,
  1, 253, :_reduce_511,
  1, 295, :_reduce_none,
  1, 295, :_reduce_none,
  2, 250, :_reduce_514,
  2, 284, :_reduce_515,
  0, 284, :_reduce_516,
  1, 227, :_reduce_517,
  4, 227, :_reduce_518,
  0, 215, :_reduce_519,
  2, 215, :_reduce_520,
  1, 198, :_reduce_521,
  3, 198, :_reduce_522,
  3, 296, :_reduce_523,
  2, 296, :_reduce_524,
  1, 179, :_reduce_none,
  1, 179, :_reduce_none,
  1, 179, :_reduce_none,
  1, 175, :_reduce_none,
  1, 175, :_reduce_none,
  1, 175, :_reduce_none,
  1, 175, :_reduce_none,
  1, 256, :_reduce_none,
  1, 256, :_reduce_none,
  1, 256, :_reduce_none,
  1, 228, :_reduce_none,
  1, 228, :_reduce_none,
  0, 146, :_reduce_none,
  1, 146, :_reduce_none,
  0, 193, :_reduce_none,
  1, 193, :_reduce_none,
  0, 197, :_reduce_none,
  1, 197, :_reduce_none,
  1, 197, :_reduce_none,
  1, 225, :_reduce_none,
  1, 225, :_reduce_none,
  1, 148, :_reduce_none,
  2, 148, :_reduce_none,
  0, 195, :_reduce_548 ]

racc_reduce_n = 549

racc_shift_n = 947

racc_token_table = {
  false => 0,
  :error => 1,
  :kCLASS => 2,
  :kMODULE => 3,
  :kDEF => 4,
  :kUNDEF => 5,
  :kBEGIN => 6,
  :kRESCUE => 7,
  :kENSURE => 8,
  :kEND => 9,
  :kIF => 10,
  :kUNLESS => 11,
  :kTHEN => 12,
  :kELSIF => 13,
  :kELSE => 14,
  :kCASE => 15,
  :kWHEN => 16,
  :kWHILE => 17,
  :kUNTIL => 18,
  :kFOR => 19,
  :kBREAK => 20,
  :kNEXT => 21,
  :kREDO => 22,
  :kRETRY => 23,
  :kIN => 24,
  :kDO => 25,
  :kDO_COND => 26,
  :kDO_BLOCK => 27,
  :kDO_LAMBDA => 28,
  :kRETURN => 29,
  :kYIELD => 30,
  :kSUPER => 31,
  :kSELF => 32,
  :kNIL => 33,
  :kTRUE => 34,
  :kFALSE => 35,
  :kAND => 36,
  :kOR => 37,
  :kNOT => 38,
  :kIF_MOD => 39,
  :kUNLESS_MOD => 40,
  :kWHILE_MOD => 41,
  :kUNTIL_MOD => 42,
  :kRESCUE_MOD => 43,
  :kALIAS => 44,
  :kDEFINED => 45,
  :klBEGIN => 46,
  :klEND => 47,
  :k__LINE__ => 48,
  :k__FILE__ => 49,
  :k__ENCODING__ => 50,
  :tIDENTIFIER => 51,
  :tFID => 52,
  :tGVAR => 53,
  :tIVAR => 54,
  :tCONSTANT => 55,
  :tLABEL => 56,
  :tCVAR => 57,
  :tNTH_REF => 58,
  :tBACK_REF => 59,
  :tSTRING_CONTENT => 60,
  :tINTEGER => 61,
  :tFLOAT => 62,
  :tREGEXP_END => 63,
  :tUPLUS => 64,
  :tUMINUS => 65,
  :tUMINUS_NUM => 66,
  :tPOW => 67,
  :tCMP => 68,
  :tEQ => 69,
  :tEQQ => 70,
  :tNEQ => 71,
  :tGEQ => 72,
  :tLEQ => 73,
  :tANDOP => 74,
  :tOROP => 75,
  :tMATCH => 76,
  :tNMATCH => 77,
  :tJSDOT => 78,
  :tDOT => 79,
  :tDOT2 => 80,
  :tDOT3 => 81,
  :tAREF => 82,
  :tASET => 83,
  :tLSHFT => 84,
  :tRSHFT => 85,
  :tCOLON2 => 86,
  :tCOLON3 => 87,
  :tOP_ASGN => 88,
  :tASSOC => 89,
  :tLPAREN => 90,
  :tLPAREN2 => 91,
  :tRPAREN => 92,
  :tLPAREN_ARG => 93,
  :ARRAY_BEG => 94,
  :tRBRACK => 95,
  :tLBRACE => 96,
  :tLBRACE_ARG => 97,
  :tSTAR => 98,
  :tSTAR2 => 99,
  :tAMPER => 100,
  :tAMPER2 => 101,
  :tTILDE => 102,
  :tPERCENT => 103,
  :tDIVIDE => 104,
  :tPLUS => 105,
  :tMINUS => 106,
  :tLT => 107,
  :tGT => 108,
  :tPIPE => 109,
  :tBANG => 110,
  :tCARET => 111,
  :tLCURLY => 112,
  :tRCURLY => 113,
  :tBACK_REF2 => 114,
  :tSYMBEG => 115,
  :tSTRING_BEG => 116,
  :tXSTRING_BEG => 117,
  :tREGEXP_BEG => 118,
  :tWORDS_BEG => 119,
  :tAWORDS_BEG => 120,
  :tSTRING_DBEG => 121,
  :tSTRING_DVAR => 122,
  :tSTRING_END => 123,
  :tSTRING => 124,
  :tSYMBOL => 125,
  :tNL => 126,
  :tEH => 127,
  :tCOLON => 128,
  :tCOMMA => 129,
  :tSPACE => 130,
  :tSEMI => 131,
  :tLAMBDA => 132,
  :tLAMBEG => 133,
  :tLBRACK2 => 134,
  :tLBRACK => 135,
  :tJSLBRACK => 136,
  :tDSTAR => 137,
  :tEQL => 138,
  :tLOWEST => 139,
  "-@NUM" => 140,
  "+@NUM" => 141 }

racc_nt_base = 142

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "kCLASS",
  "kMODULE",
  "kDEF",
  "kUNDEF",
  "kBEGIN",
  "kRESCUE",
  "kENSURE",
  "kEND",
  "kIF",
  "kUNLESS",
  "kTHEN",
  "kELSIF",
  "kELSE",
  "kCASE",
  "kWHEN",
  "kWHILE",
  "kUNTIL",
  "kFOR",
  "kBREAK",
  "kNEXT",
  "kREDO",
  "kRETRY",
  "kIN",
  "kDO",
  "kDO_COND",
  "kDO_BLOCK",
  "kDO_LAMBDA",
  "kRETURN",
  "kYIELD",
  "kSUPER",
  "kSELF",
  "kNIL",
  "kTRUE",
  "kFALSE",
  "kAND",
  "kOR",
  "kNOT",
  "kIF_MOD",
  "kUNLESS_MOD",
  "kWHILE_MOD",
  "kUNTIL_MOD",
  "kRESCUE_MOD",
  "kALIAS",
  "kDEFINED",
  "klBEGIN",
  "klEND",
  "k__LINE__",
  "k__FILE__",
  "k__ENCODING__",
  "tIDENTIFIER",
  "tFID",
  "tGVAR",
  "tIVAR",
  "tCONSTANT",
  "tLABEL",
  "tCVAR",
  "tNTH_REF",
  "tBACK_REF",
  "tSTRING_CONTENT",
  "tINTEGER",
  "tFLOAT",
  "tREGEXP_END",
  "tUPLUS",
  "tUMINUS",
  "tUMINUS_NUM",
  "tPOW",
  "tCMP",
  "tEQ",
  "tEQQ",
  "tNEQ",
  "tGEQ",
  "tLEQ",
  "tANDOP",
  "tOROP",
  "tMATCH",
  "tNMATCH",
  "tJSDOT",
  "tDOT",
  "tDOT2",
  "tDOT3",
  "tAREF",
  "tASET",
  "tLSHFT",
  "tRSHFT",
  "tCOLON2",
  "tCOLON3",
  "tOP_ASGN",
  "tASSOC",
  "tLPAREN",
  "tLPAREN2",
  "tRPAREN",
  "tLPAREN_ARG",
  "ARRAY_BEG",
  "tRBRACK",
  "tLBRACE",
  "tLBRACE_ARG",
  "tSTAR",
  "tSTAR2",
  "tAMPER",
  "tAMPER2",
  "tTILDE",
  "tPERCENT",
  "tDIVIDE",
  "tPLUS",
  "tMINUS",
  "tLT",
  "tGT",
  "tPIPE",
  "tBANG",
  "tCARET",
  "tLCURLY",
  "tRCURLY",
  "tBACK_REF2",
  "tSYMBEG",
  "tSTRING_BEG",
  "tXSTRING_BEG",
  "tREGEXP_BEG",
  "tWORDS_BEG",
  "tAWORDS_BEG",
  "tSTRING_DBEG",
  "tSTRING_DVAR",
  "tSTRING_END",
  "tSTRING",
  "tSYMBOL",
  "tNL",
  "tEH",
  "tCOLON",
  "tCOMMA",
  "tSPACE",
  "tSEMI",
  "tLAMBDA",
  "tLAMBEG",
  "tLBRACK2",
  "tLBRACK",
  "tJSLBRACK",
  "tDSTAR",
  "tEQL",
  "tLOWEST",
  "\"-@NUM\"",
  "\"+@NUM\"",
  "$start",
  "program",
  "top_compstmt",
  "top_stmts",
  "opt_terms",
  "top_stmt",
  "terms",
  "stmt",
  "bodystmt",
  "compstmt",
  "opt_rescue",
  "opt_else",
  "opt_ensure",
  "stmts",
  "fitem",
  "undef_list",
  "expr_value",
  "lhs",
  "command_call",
  "mlhs",
  "var_lhs",
  "primary_value",
  "aref_args",
  "backref",
  "mrhs",
  "arg_value",
  "expr",
  "@1",
  "arg",
  "command",
  "block_command",
  "call_args",
  "block_call",
  "operation2",
  "command_args",
  "cmd_brace_block",
  "opt_block_var",
  "operation",
  "mlhs_basic",
  "mlhs_entry",
  "mlhs_head",
  "mlhs_item",
  "mlhs_node",
  "mlhs_post",
  "variable",
  "cname",
  "cpath",
  "fname",
  "op",
  "reswords",
  "symbol",
  "opt_nl",
  "primary",
  "none",
  "args",
  "trailer",
  "assocs",
  "paren_args",
  "opt_call_args",
  "rparen",
  "opt_paren_args",
  "opt_block_arg",
  "block_arg",
  "call_args2",
  "open_args",
  "@2",
  "literal",
  "strings",
  "xstring",
  "regexp",
  "words",
  "awords",
  "var_ref",
  "assoc_list",
  "brace_block",
  "method_call",
  "lambda",
  "then",
  "if_tail",
  "do",
  "case_body",
  "for_var",
  "superclass",
  "term",
  "f_arglist",
  "singleton",
  "dot_or_colon",
  "@3",
  "@4",
  "@5",
  "@6",
  "@7",
  "@8",
  "@9",
  "@10",
  "@11",
  "@12",
  "@13",
  "@14",
  "@15",
  "@16",
  "@17",
  "f_larglist",
  "lambda_body",
  "block_param",
  "f_block_optarg",
  "f_block_opt",
  "block_args_tail",
  "f_block_arg",
  "opt_block_args_tail",
  "f_arg",
  "f_rest_arg",
  "do_block",
  "@18",
  "operation3",
  "@19",
  "@20",
  "cases",
  "@21",
  "exc_list",
  "exc_var",
  "numeric",
  "dsym",
  "string",
  "string1",
  "string_contents",
  "xstring_contents",
  "word_list",
  "word",
  "string_content",
  "qword_list",
  "string_dvar",
  "@22",
  "@23",
  "sym",
  "f_args",
  "kwrest_mark",
  "f_kwrest",
  "f_label",
  "f_kw",
  "f_kwarg",
  "args_tail",
  "opt_f_block_arg",
  "opt_args_tail",
  "f_optarg",
  "f_norm_arg",
  "f_bad_arg",
  "f_arg_item",
  "f_margs",
  "f_marg",
  "f_marg_list",
  "f_opt",
  "restarg_mark",
  "blkarg_mark",
  "assoc" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

def _reduce_2(val, _values, result)
                      result = new_compstmt val[0]
                    
    result
end

def _reduce_3(val, _values, result)
                      result = new_block
                    
    result
end

def _reduce_4(val, _values, result)
                      result = new_block val[0]
                    
    result
end

def _reduce_5(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

# reduce 6 omitted

def _reduce_7(val, _values, result)
                      result = val[2]
                    
    result
end

def _reduce_8(val, _values, result)
                      result = new_body(val[0], val[1], val[2], val[3])
                    
    result
end

def _reduce_9(val, _values, result)
                      result = new_compstmt val[0]
                    
    result
end

def _reduce_10(val, _values, result)
                      result = new_block
                    
    result
end

def _reduce_11(val, _values, result)
                      result = new_block val[0]
                    
    result
end

def _reduce_12(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_13(val, _values, result)
                      lexer.lex_state = :expr_fname
                    
    result
end

def _reduce_14(val, _values, result)
                      result = new_alias(val[0], val[1], val[3])
                    
    result
end

def _reduce_15(val, _values, result)
                      result = s(:valias, value(val[1]).to_sym, value(val[2]).to_sym)
                    
    result
end

# reduce 16 omitted

def _reduce_17(val, _values, result)
                      result = s(:valias, value(val[1]).to_sym, value(val[2]).to_sym)
                    
    result
end

def _reduce_18(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_19(val, _values, result)
                      result = new_if(val[1], val[2], val[0], nil)
                    
    result
end

def _reduce_20(val, _values, result)
                      result = new_if(val[1], val[2], nil, val[0])
                    
    result
end

def _reduce_21(val, _values, result)
                      result = new_while(val[1], val[2], val[0])
                    
    result
end

def _reduce_22(val, _values, result)
                      result = new_until(val[1], val[2], val[0])
                    
    result
end

def _reduce_23(val, _values, result)
                      result = new_rescue_mod(val[1], val[0], val[2])
                    
    result
end

# reduce 24 omitted

def _reduce_25(val, _values, result)
                      result = new_assign(val[0], val[1], val[2])
                    
    result
end

def _reduce_26(val, _values, result)
                      result = s(:masgn, val[0], s(:to_ary, val[2]))
                    
    result
end

def _reduce_27(val, _values, result)
                      result = new_op_asgn val[1], val[0], val[2]
                    
    result
end

# reduce 28 omitted

def _reduce_29(val, _values, result)
                      result = s(:op_asgn2, val[0], op_to_setter(val[2]), value(val[3]).to_sym, val[4])
                    
    result
end

# reduce 30 omitted

# reduce 31 omitted

# reduce 32 omitted

def _reduce_33(val, _values, result)
                      result = new_assign val[0], val[1], s(:svalue, val[2])
                    
    result
end

def _reduce_34(val, _values, result)
                      result = s(:masgn, val[0], s(:to_ary, val[2]))
                    
    result
end

def _reduce_35(val, _values, result)
                      result = s(:masgn, val[0], val[2])
                    
    result
end

# reduce 36 omitted

# reduce 37 omitted

def _reduce_38(val, _values, result)
                      result = s(:and, val[0], val[2])
                    
    result
end

def _reduce_39(val, _values, result)
                      result = s(:or, val[0], val[2])
                    
    result
end

def _reduce_40(val, _values, result)
                      result = new_unary_call(['!', []], val[1])
                    
    result
end

def _reduce_41(val, _values, result)
                      result = new_unary_call(val[0], val[1])
                    
    result
end

# reduce 42 omitted

# reduce 43 omitted

# reduce 44 omitted

# reduce 45 omitted

def _reduce_46(val, _values, result)
                      result = new_return(val[0], val[1])
                    
    result
end

def _reduce_47(val, _values, result)
                      result = new_break(val[0], val[1])
                    
    result
end

def _reduce_48(val, _values, result)
                      result = new_next(val[0], val[1])
                    
    result
end

# reduce 49 omitted

# reduce 50 omitted

# reduce 51 omitted

# reduce 52 omitted

def _reduce_53(val, _values, result)
                      result = new_call(nil, val[0], val[1])
                    
    result
end

# reduce 54 omitted

def _reduce_55(val, _values, result)
                      result = new_call(val[0], val[2], val[3])
                    
    result
end

# reduce 56 omitted

def _reduce_57(val, _values, result)
                    result = new_call(val[0], val[2], val[3])
                  
    result
end

# reduce 58 omitted

def _reduce_59(val, _values, result)
                      result = new_super(val[0], val[1])
                    
    result
end

def _reduce_60(val, _values, result)
                      result = new_yield val[1]
                    
    result
end

def _reduce_61(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_62(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_63(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_64(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_65(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_66(val, _values, result)
                      result = val[0] << val[1]
                    
    result
end

def _reduce_67(val, _values, result)
                      result = val[0] << s(:splat, val[2])
                    
    result
end

# reduce 68 omitted

def _reduce_69(val, _values, result)
                      result = val[0] << s(:splat)
                    
    result
end

# reduce 70 omitted

def _reduce_71(val, _values, result)
                      result = s(:array, s(:splat, val[1]))
                    
    result
end

def _reduce_72(val, _values, result)
                      result = s(:array, s(:splat))
                    
    result
end

# reduce 73 omitted

def _reduce_74(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_75(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_76(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

def _reduce_77(val, _values, result)
                      result = val[0] << val[1]
                    
    result
end

# reduce 78 omitted

# reduce 79 omitted

def _reduce_80(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_81(val, _values, result)
                      args = val[2] ? val[2] : []
                      result = s(:attrasgn, val[0], :[]=, s(:arglist, *args))
                    
    result
end

def _reduce_82(val, _values, result)
                      result = new_call val[0], val[2], []
                    
    result
end

# reduce 83 omitted

# reduce 84 omitted

# reduce 85 omitted

# reduce 86 omitted

# reduce 87 omitted

def _reduce_88(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_89(val, _values, result)
                      result = new_attrasgn(val[0], :[]=, val[2])
                    
    result
end

def _reduce_90(val, _values, result)
                      result = new_attrasgn(val[0], op_to_setter(val[2]))
                    
    result
end

def _reduce_91(val, _values, result)
                      result = new_attrasgn(val[0], op_to_setter(val[2]))
                    
    result
end

def _reduce_92(val, _values, result)
                      result = new_attrasgn(val[0], op_to_setter(val[2]))
                    
    result
end

def _reduce_93(val, _values, result)
                      result = new_colon2(val[0], val[1], val[2])
                    
    result
end

def _reduce_94(val, _values, result)
                      result = new_colon3(val[0], val[1])
                    
    result
end

# reduce 95 omitted

# reduce 96 omitted

def _reduce_97(val, _values, result)
                      result = new_colon3(val[0], val[1])
                    
    result
end

def _reduce_98(val, _values, result)
                      result = new_const(val[0])
                    
    result
end

def _reduce_99(val, _values, result)
                      result = new_colon2(val[0], val[1], val[2])
                    
    result
end

# reduce 100 omitted

# reduce 101 omitted

# reduce 102 omitted

def _reduce_103(val, _values, result)
                      lexer.lex_state = :expr_end
                      result = val[0]
                    
    result
end

def _reduce_104(val, _values, result)
                      lexer.lex_state = :expr_end
                      result = val[0]
                    
    result
end

def _reduce_105(val, _values, result)
                      result = new_sym(val[0])
                    
    result
end

# reduce 106 omitted

def _reduce_107(val, _values, result)
                      result = s(:undef, val[0])
                    
    result
end

def _reduce_108(val, _values, result)
                      result = val[0] << val[2]
                    
    result
end

# reduce 109 omitted

# reduce 110 omitted

# reduce 111 omitted

# reduce 112 omitted

# reduce 113 omitted

# reduce 114 omitted

# reduce 115 omitted

# reduce 116 omitted

# reduce 117 omitted

# reduce 118 omitted

# reduce 119 omitted

# reduce 120 omitted

# reduce 121 omitted

# reduce 122 omitted

# reduce 123 omitted

# reduce 124 omitted

# reduce 125 omitted

# reduce 126 omitted

# reduce 127 omitted

# reduce 128 omitted

# reduce 129 omitted

# reduce 130 omitted

# reduce 131 omitted

# reduce 132 omitted

# reduce 133 omitted

# reduce 134 omitted

# reduce 135 omitted

# reduce 136 omitted

# reduce 137 omitted

# reduce 138 omitted

# reduce 139 omitted

# reduce 140 omitted

# reduce 141 omitted

# reduce 142 omitted

# reduce 143 omitted

# reduce 144 omitted

# reduce 145 omitted

# reduce 146 omitted

# reduce 147 omitted

# reduce 148 omitted

# reduce 149 omitted

# reduce 150 omitted

# reduce 151 omitted

# reduce 152 omitted

# reduce 153 omitted

# reduce 154 omitted

# reduce 155 omitted

# reduce 156 omitted

# reduce 157 omitted

# reduce 158 omitted

# reduce 159 omitted

# reduce 160 omitted

# reduce 161 omitted

# reduce 162 omitted

# reduce 163 omitted

# reduce 164 omitted

# reduce 165 omitted

# reduce 166 omitted

# reduce 167 omitted

# reduce 168 omitted

# reduce 169 omitted

# reduce 170 omitted

# reduce 171 omitted

# reduce 172 omitted

# reduce 173 omitted

# reduce 174 omitted

# reduce 175 omitted

# reduce 176 omitted

# reduce 177 omitted

# reduce 178 omitted

# reduce 179 omitted

# reduce 180 omitted

# reduce 181 omitted

# reduce 182 omitted

def _reduce_183(val, _values, result)
                      result = new_assign(val[0], val[1], val[2])
                    
    result
end

def _reduce_184(val, _values, result)
                      result = new_assign val[0], val[1], s(:rescue_mod, val[2], val[4])
                    
    result
end

def _reduce_185(val, _values, result)
                      result = new_op_asgn val[1], val[0], val[2]
                    
    result
end

def _reduce_186(val, _values, result)
                      result = new_op_asgn1(val[0], val[2], val[4], val[5])
                    
    result
end

def _reduce_187(val, _values, result)
                      result = s(:op_asgn2, val[0], op_to_setter(val[2]), value(val[3]).to_sym, val[4])
                    
    result
end

# reduce 188 omitted

# reduce 189 omitted

# reduce 190 omitted

# reduce 191 omitted

# reduce 192 omitted

def _reduce_193(val, _values, result)
                      result = new_irange(val[0], val[1], val[2])
                    
    result
end

def _reduce_194(val, _values, result)
                      result = new_erange(val[0], val[1], val[2])
                    
    result
end

def _reduce_195(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_196(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_197(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_198(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_199(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_200(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_201(val, _values, result)
                      result = new_call new_binary_call(new_int(val[1]), val[2], val[3]), [:"-@", []], []
                    
    result
end

def _reduce_202(val, _values, result)
                      result = new_call new_binary_call(new_float(val[1]), val[2], val[3]), [:"-@", []], []
                    
    result
end

def _reduce_203(val, _values, result)
                      result = new_call val[1], [:"+@", []], []
                      if [:int, :float].include? val[1].type
                        result = val[1]
                      end
                    
    result
end

def _reduce_204(val, _values, result)
                      result = new_call val[1], [:"-@", []], []
                      if val[1].type == :int
                        val[1][1] = -val[1][1]
                        result = val[1]
                      elsif val[1].type == :float
                        val[1][1] = -val[1][1].to_f
                        result = val[1]
                      end
                    
    result
end

def _reduce_205(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_206(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_207(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_208(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_209(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_210(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_211(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_212(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_213(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_214(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_215(val, _values, result)
                      result = new_unary_call(['!', []], new_binary_call(
                                 val[0], ['==', []], val[2]))
                    
    result
end

def _reduce_216(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_217(val, _values, result)
                      result = new_not(val[1], new_binary_call(
                                 val[0], ['=~', []], val[2]))
                    
    result
end

def _reduce_218(val, _values, result)
                      result = new_unary_call(val[0], val[1])
                    
    result
end

def _reduce_219(val, _values, result)
                      result = new_unary_call(val[0], val[1])
                    
    result
end

def _reduce_220(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_221(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_222(val, _values, result)
                      result = new_and(val[0], val[1], val[2])
                    
    result
end

def _reduce_223(val, _values, result)
                      result = new_or(val[0], val[1], val[2])
                    
    result
end

def _reduce_224(val, _values, result)
                      result = s(:defined, val[2])
                    
    result
end

def _reduce_225(val, _values, result)
                      result = new_if(val[1], val[0], val[2], val[4])
                    
    result
end

# reduce 226 omitted

# reduce 227 omitted

def _reduce_228(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_229(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_230(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_231(val, _values, result)
                      val[0] << s(:hash, *val[2])
                      result = val[0]
                    
    result
end

def _reduce_232(val, _values, result)
                      result = [s(:hash, *val[0])]
                    
    result
end

def _reduce_233(val, _values, result)
                      result = val[1]
                    
    result
end

# reduce 234 omitted

def _reduce_235(val, _values, result)
                      result = []
                    
    result
end

# reduce 236 omitted

def _reduce_237(val, _values, result)
                      result = []
                    
    result
end

# reduce 238 omitted

def _reduce_239(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_240(val, _values, result)
                      result = val[0]
                      result << new_hash(nil, val[2], nil)
                    
    result
end

def _reduce_241(val, _values, result)
                      result = [new_hash(nil, val[0], nil)]
                    
    result
end

def _reduce_242(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_243(val, _values, result)
                      result = val[0]
                      add_block_pass val[0], val[1]
                    
    result
end

def _reduce_244(val, _values, result)
                      result = [new_hash(nil, val[0], nil)]
                      add_block_pass result, val[1]
                    
    result
end

def _reduce_245(val, _values, result)
                      result = val[0]
                      result << new_hash(nil, val[2], nil)
                    
    result
end

def _reduce_246(val, _values, result)
                      result = []
                      add_block_pass result, val[0]
                    
    result
end

# reduce 247 omitted

# reduce 248 omitted

def _reduce_249(val, _values, result)
                      lexer.cmdarg_push 1
                    
    result
end

def _reduce_250(val, _values, result)
                      lexer.cmdarg_pop
                      result = val[1]
                    
    result
end

# reduce 251 omitted

def _reduce_252(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_253(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_254(val, _values, result)
                      result = new_block_pass(val[0], val[1])
                    
    result
end

def _reduce_255(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_256(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_257(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_258(val, _values, result)
                      result = [new_splat(val[0], val[1])]
                    
    result
end

def _reduce_259(val, _values, result)
                      result = val[0] << val[2]
                    
    result
end

def _reduce_260(val, _values, result)
                      result  = val[0] << new_splat(val[2], val[3])
                    
    result
end

def _reduce_261(val, _values, result)
                      val[0] << val[2]
                      result = s(:array, *val[0])
                    
    result
end

def _reduce_262(val, _values, result)
                      val[0] << s(:splat, val[3])
                      result = s(:array, *val[0])
                    
    result
end

def _reduce_263(val, _values, result)
                      result = s(:splat, val[1])
                    
    result
end

# reduce 264 omitted

# reduce 265 omitted

# reduce 266 omitted

# reduce 267 omitted

# reduce 268 omitted

# reduce 269 omitted

# reduce 270 omitted

# reduce 271 omitted

# reduce 272 omitted

def _reduce_273(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_274(val, _values, result)
                      result = s(:begin, val[2])
                    
    result
end

def _reduce_275(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_276(val, _values, result)
                      result = new_paren(val[0], val[1], val[2])
                    
    result
end

def _reduce_277(val, _values, result)
                      result = new_colon2(val[0], val[1], val[2])
                    
    result
end

def _reduce_278(val, _values, result)
                      result = new_colon3(val[0], val[1])
                    
    result
end

def _reduce_279(val, _values, result)
                      result = new_call val[0], [:[], []], val[2]
                    
    result
end

def _reduce_280(val, _values, result)
                      result = new_js_call val[0], [:[], []], val[2]
                    
    result
end

def _reduce_281(val, _values, result)
                      result = new_array(val[0], val[1], val[2])
                    
    result
end

def _reduce_282(val, _values, result)
                      result = new_hash(val[0], val[1], val[2])
                    
    result
end

def _reduce_283(val, _values, result)
                      result = new_return(val[0])
                    
    result
end

def _reduce_284(val, _values, result)
                      result = new_yield val[2]
                    
    result
end

def _reduce_285(val, _values, result)
                      result = s(:yield)
                    
    result
end

def _reduce_286(val, _values, result)
                      result = s(:yield)
                    
    result
end

def _reduce_287(val, _values, result)
                      result = s(:defined, val[3])
                    
    result
end

def _reduce_288(val, _values, result)
                      result = new_unary_call(['!', []], val[2])
                    
    result
end

def _reduce_289(val, _values, result)
                      result = new_unary_call(['!', []], new_nil(val[0]))
                    
    result
end

def _reduce_290(val, _values, result)
                      result = new_call(nil, val[0], [])
                      result << val[1]
                    
    result
end

# reduce 291 omitted

def _reduce_292(val, _values, result)
                      val[0] << val[1]
                      result = val[0]
                    
    result
end

def _reduce_293(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_294(val, _values, result)
                      result = new_if(val[0], val[1], val[3], val[4])
                    
    result
end

def _reduce_295(val, _values, result)
                      result = new_if(val[0], val[1], val[4], val[3])
                    
    result
end

def _reduce_296(val, _values, result)
                      lexer.cond_push 1
                      result = lexer.line
                    
    result
end

def _reduce_297(val, _values, result)
                      lexer.cond_pop
                    
    result
end

def _reduce_298(val, _values, result)
                      result = s(:while, val[2], val[5])
                    
    result
end

def _reduce_299(val, _values, result)
                      lexer.cond_push 1
                      result = lexer.line
                    
    result
end

def _reduce_300(val, _values, result)
                      lexer.cond_pop
                    
    result
end

def _reduce_301(val, _values, result)
                      result = s(:until, val[2], val[5])
                    
    result
end

def _reduce_302(val, _values, result)
                      result = s(:case, val[1], *val[3])
                    
    result
end

def _reduce_303(val, _values, result)
                      result = s(:case, nil, *val[2])
                    
    result
end

def _reduce_304(val, _values, result)
                      result = s(:case, nil, val[3])
                    
    result
end

def _reduce_305(val, _values, result)
                      lexer.cond_push 1
                      result = lexer.line
                    
    result
end

def _reduce_306(val, _values, result)
                      lexer.cond_pop
                    
    result
end

def _reduce_307(val, _values, result)
                      result = s(:for, val[4], val[1], val[7])
                    
    result
end

def _reduce_308(val, _values, result)
                      # ...
                    
    result
end

def _reduce_309(val, _values, result)
                      result = new_class val[0], val[1], val[2], val[4], val[5]
                    
    result
end

def _reduce_310(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_311(val, _values, result)
                      # ...
                    
    result
end

def _reduce_312(val, _values, result)
                      result = new_sclass(val[0], val[3], val[6], val[7])
                    
    result
end

def _reduce_313(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_314(val, _values, result)
                      # ...
                    
    result
end

def _reduce_315(val, _values, result)
                      result = new_module(val[0], val[2], val[4], val[5])
                    
    result
end

def _reduce_316(val, _values, result)
                      push_scope
                      lexer.lex_state = :expr_endfn
                    
    result
end

def _reduce_317(val, _values, result)
                      result = new_def(val[0], nil, val[1], val[3], val[4], val[5])
                      pop_scope
                    
    result
end

def _reduce_318(val, _values, result)
                       lexer.lex_state = :expr_fname
                    
    result
end

def _reduce_319(val, _values, result)
                      push_scope
                      lexer.lex_state = :expr_endfn
                    
    result
end

def _reduce_320(val, _values, result)
                      result = new_def(val[0], val[1], val[4], val[6], val[7], val[8])
                      pop_scope
                    
    result
end

def _reduce_321(val, _values, result)
                      result = new_break(val[0])
                    
    result
end

def _reduce_322(val, _values, result)
                      result = s(:next)
                    
    result
end

def _reduce_323(val, _values, result)
                      result = s(:redo)
                    
    result
end

# reduce 324 omitted

# reduce 325 omitted

# reduce 326 omitted

# reduce 327 omitted

# reduce 328 omitted

# reduce 329 omitted

# reduce 330 omitted

# reduce 331 omitted

# reduce 332 omitted

def _reduce_333(val, _values, result)
                      result = new_call nil, [:lambda, []], []
                      result << new_iter(val[0], val[1])
                    
    result
end

def _reduce_334(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_335(val, _values, result)
                      result = nil
                    
    result
end

# reduce 336 omitted

# reduce 337 omitted

def _reduce_338(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_339(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_340(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_341(val, _values, result)
                      result = new_if(val[0], val[1], val[3], val[4])
                    
    result
end

# reduce 342 omitted

def _reduce_343(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_344(val, _values, result)
                      result = s(:block, val[0])
                    
    result
end

def _reduce_345(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_346(val, _values, result)
                      result = new_assign(new_assignable(new_ident(
                                  val[0])), val[1], val[2])
                    
    result
end

# reduce 347 omitted

def _reduce_348(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_349(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_350(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_351(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_352(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_353(val, _values, result)
                      nil
                    
    result
end

def _reduce_354(val, _values, result)
                      result = new_block_args(val[0], val[2], val[4], val[5])
                    
    result
end

def _reduce_355(val, _values, result)
                      result = new_block_args(val[0], val[2], nil, val[3])
                    
    result
end

def _reduce_356(val, _values, result)
                      result = new_block_args(val[0], nil, val[2], val[3])
                    
    result
end

def _reduce_357(val, _values, result)
                      result = new_block_args(val[0], nil, nil, nil)
                    
    result
end

def _reduce_358(val, _values, result)
                      result = new_block_args(val[0], nil, nil, val[1])
                    
    result
end

def _reduce_359(val, _values, result)
                      result = new_block_args(nil, val[0], val[2], val[3])
                    
    result
end

def _reduce_360(val, _values, result)
                      result = new_block_args(nil, val[0], nil, val[1])
                    
    result
end

def _reduce_361(val, _values, result)
                      result = new_block_args(nil, nil, val[0], val[1])
                    
    result
end

def _reduce_362(val, _values, result)
                      result = new_block_args(nil, nil, nil, val[0])
                    
    result
end

def _reduce_363(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_364(val, _values, result)
                      result = new_iter val[2], val[3]
                      pop_scope
                    
    result
end

def _reduce_365(val, _values, result)
                      val[0] << val[1]
                      result = val[0]
                    
    result
end

# reduce 366 omitted

# reduce 367 omitted

def _reduce_368(val, _values, result)
                      result = new_call(nil, val[0], val[1])
                    
    result
end

def _reduce_369(val, _values, result)
                      result = new_call(val[0], val[2], val[3])
                    
    result
end

def _reduce_370(val, _values, result)
                      result = new_js_call(val[0], val[2], val[3])
                    
    result
end

def _reduce_371(val, _values, result)
                      result = new_js_call(val[0], val[2])
                    
    result
end

def _reduce_372(val, _values, result)
                      result = new_call(val[0], [:call, []], val[2])
                    
    result
end

def _reduce_373(val, _values, result)
                      result = new_call(val[0], val[2], val[3])
                    
    result
end

def _reduce_374(val, _values, result)
                      result = new_call(val[0], val[2])
                    
    result
end

def _reduce_375(val, _values, result)
                      result = new_super(val[0], val[1])
                    
    result
end

def _reduce_376(val, _values, result)
                      result = new_super(val[0], nil)
                    
    result
end

def _reduce_377(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_378(val, _values, result)
                      result = new_iter val[2], val[3]
                      pop_scope
                    
    result
end

def _reduce_379(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_380(val, _values, result)
                      result = new_iter val[2], val[3]
                      pop_scope
                    
    result
end

def _reduce_381(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_382(val, _values, result)
                      part = s(:when, s(:array, *val[2]), val[4])
                      result = [part]
                      result.push(*val[5]) if val[5]
                    
    result
end

def _reduce_383(val, _values, result)
                      result = [val[0]]
                    
    result
end

# reduce 384 omitted

def _reduce_385(val, _values, result)
                      exc = val[1] || s(:array)
                      exc << new_assign(val[2], val[2], s(:gvar, '$!'.intern)) if val[2]
                      result = [s(:resbody, exc, val[4])]
                      result.push val[5].first if val[5]
                    
    result
end

def _reduce_386(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_387(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

# reduce 388 omitted

# reduce 389 omitted

def _reduce_390(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_391(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_392(val, _values, result)
                      result = val[1].nil? ? s(:nil) : val[1]
                    
    result
end

# reduce 393 omitted

# reduce 394 omitted

# reduce 395 omitted

# reduce 396 omitted

def _reduce_397(val, _values, result)
                      result = new_str val[0]
                    
    result
end

# reduce 398 omitted

def _reduce_399(val, _values, result)
                    result = str_append val[0], val[1]
                  
    result
end

def _reduce_400(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_401(val, _values, result)
                      result = s(:str, value(val[0]))
                    
    result
end

def _reduce_402(val, _values, result)
                      result = new_xstr(val[0], val[1], val[2])
                    
    result
end

def _reduce_403(val, _values, result)
                      result = new_regexp val[1], val[2]
                    
    result
end

def _reduce_404(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_405(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_406(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_407(val, _values, result)
                      part = val[1]
                      part = s(:dstr, "", val[1]) if part.type == :evstr
                      result = val[0] << part
                    
    result
end

def _reduce_408(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_409(val, _values, result)
                      result = val[0].concat([val[1]])
                    
    result
end

def _reduce_410(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_411(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_412(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_413(val, _values, result)
                      result = val[0] << s(:str, value(val[1]))
                    
    result
end

def _reduce_414(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_415(val, _values, result)
                      result = str_append val[0], val[1]
                    
    result
end

def _reduce_416(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_417(val, _values, result)
                      result = str_append val[0], val[1]
                    
    result
end

def _reduce_418(val, _values, result)
                      result = new_str_content(val[0])
                    
    result
end

def _reduce_419(val, _values, result)
                      result = lexer.strterm
                      lexer.strterm = nil
                    
    result
end

def _reduce_420(val, _values, result)
                      lexer.strterm = val[1]
                      result = new_evstr(val[2])
                    
    result
end

def _reduce_421(val, _values, result)
                      lexer.cond_push 0
                      lexer.cmdarg_push 0
                      result = lexer.strterm
                      lexer.strterm = nil
                      lexer.lex_state = :expr_beg
                    
    result
end

def _reduce_422(val, _values, result)
                      lexer.strterm = val[1]
                      lexer.cond_lexpop
                      lexer.cmdarg_lexpop
                      result = new_evstr(val[2])
                    
    result
end

def _reduce_423(val, _values, result)
                      result = new_gvar(val[0])
                    
    result
end

def _reduce_424(val, _values, result)
                      result = new_ivar(val[0])
                    
    result
end

def _reduce_425(val, _values, result)
                      result = new_cvar(val[0])
                    
    result
end

# reduce 426 omitted

def _reduce_427(val, _values, result)
                      result = new_sym(val[1])
                      lexer.lex_state = :expr_end
                    
    result
end

def _reduce_428(val, _values, result)
                      result = new_sym(val[0])
                    
    result
end

# reduce 429 omitted

# reduce 430 omitted

# reduce 431 omitted

# reduce 432 omitted

def _reduce_433(val, _values, result)
                      result = new_dsym val[1]
                    
    result
end

def _reduce_434(val, _values, result)
                      result = new_int(val[0])
                    
    result
end

def _reduce_435(val, _values, result)
                      result = new_float(val[0])
                    
    result
end

def _reduce_436(val, _values, result)
                    result = negate_num(new_int(val[1]))
                  
    result
end

def _reduce_437(val, _values, result)
                    result = negate_num(new_float(val[1]))
                  
    result
end

def _reduce_438(val, _values, result)
                    result = new_int(val[1])
                  
    result
end

def _reduce_439(val, _values, result)
                    result = new_float(val[1])
                  
    result
end

def _reduce_440(val, _values, result)
                      result = new_ident(val[0])
                    
    result
end

def _reduce_441(val, _values, result)
                      result = new_ivar(val[0])
                    
    result
end

def _reduce_442(val, _values, result)
                      result = new_gvar(val[0])
                    
    result
end

def _reduce_443(val, _values, result)
                      result = new_const(val[0])
                    
    result
end

def _reduce_444(val, _values, result)
                      result = new_cvar(val[0])
                    
    result
end

def _reduce_445(val, _values, result)
                      result = new_nil(val[0])
                    
    result
end

def _reduce_446(val, _values, result)
                      result = new_self(val[0])
                    
    result
end

def _reduce_447(val, _values, result)
                      result = new_true(val[0])
                    
    result
end

def _reduce_448(val, _values, result)
                      result = new_false(val[0])
                    
    result
end

def _reduce_449(val, _values, result)
                      result = new___FILE__(val[0])
                    
    result
end

def _reduce_450(val, _values, result)
                      result = new___LINE__(val[0])
                    
    result
end

def _reduce_451(val, _values, result)
                      result = new_var_ref(val[0])
                    
    result
end

def _reduce_452(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_453(val, _values, result)
                      result = s(:nth_ref, value(val[0]))
                    
    result
end

# reduce 454 omitted

def _reduce_455(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_456(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_457(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_458(val, _values, result)
                      result = val[1]
                      lexer.lex_state = :expr_beg
                    
    result
end

def _reduce_459(val, _values, result)
                      result = val[0]
                      lexer.lex_state = :expr_beg
                    
    result
end

# reduce 460 omitted

# reduce 461 omitted

def _reduce_462(val, _values, result)
                      result = new_kwrestarg(val[1])
                    
    result
end

def _reduce_463(val, _values, result)
                      result = new_kwrestarg()
                    
    result
end

def _reduce_464(val, _values, result)
                      result = new_sym(val[0])
                    
    result
end

def _reduce_465(val, _values, result)
                      result = new_kwoptarg(val[0], val[1])
                    
    result
end

def _reduce_466(val, _values, result)
                      result = new_kwarg(val[0])
                    
    result
end

def _reduce_467(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_468(val, _values, result)
                      result = val[0]
                      result << val[2]
                    
    result
end

def _reduce_469(val, _values, result)
                      result = new_args_tail(val[0], val[2], val[3])
                    
    result
end

def _reduce_470(val, _values, result)
                      result = new_args_tail(val[0], nil, val[1])
                    
    result
end

def _reduce_471(val, _values, result)
                      result = new_args_tail(nil, val[0], val[1])
                    
    result
end

def _reduce_472(val, _values, result)
                      result = new_args_tail(nil, nil, val[0])
                    
    result
end

def _reduce_473(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_474(val, _values, result)
                      result = new_args_tail(nil, nil, nil)
                    
    result
end

def _reduce_475(val, _values, result)
                      result = new_args(val[0], val[2], val[4], val[5])
                    
    result
end

def _reduce_476(val, _values, result)
                      result = new_args(val[0], val[2], nil, val[3])
                    
    result
end

def _reduce_477(val, _values, result)
                      result = new_args(val[0], nil, val[2], val[3])
                    
    result
end

def _reduce_478(val, _values, result)
                      result = new_args(val[0], nil, nil, val[1])
                    
    result
end

def _reduce_479(val, _values, result)
                      result = new_args(nil, val[0], val[2], val[3])
                    
    result
end

def _reduce_480(val, _values, result)
                      result = new_args(nil, val[0], nil, val[1])
                    
    result
end

def _reduce_481(val, _values, result)
                      result = new_args(nil, nil, val[0], val[1])
                    
    result
end

def _reduce_482(val, _values, result)
                      result = new_args(nil, nil, nil, val[0])
                    
    result
end

def _reduce_483(val, _values, result)
                      result = new_args(nil, nil, nil, nil)
                    
    result
end

# reduce 484 omitted

def _reduce_485(val, _values, result)
                      result = value(val[0]).to_sym
                      scope.add_local result
                    
    result
end

def _reduce_486(val, _values, result)
                      raise 'formal argument cannot be a constant'
                    
    result
end

def _reduce_487(val, _values, result)
                      raise 'formal argument cannot be an instance variable'
                    
    result
end

def _reduce_488(val, _values, result)
                      raise 'formal argument cannot be a class variable'
                    
    result
end

def _reduce_489(val, _values, result)
                      raise 'formal argument cannot be a global variable'
                    
    result
end

def _reduce_490(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_491(val, _values, result)
                      result = val[1]
                    
    result
end

# reduce 492 omitted

# reduce 493 omitted

def _reduce_494(val, _values, result)
                      result = s(:lasgn, val[0])
                    
    result
end

# reduce 495 omitted

def _reduce_496(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

def _reduce_497(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

# reduce 498 omitted

# reduce 499 omitted

# reduce 500 omitted

# reduce 501 omitted

# reduce 502 omitted

def _reduce_503(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_504(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_505(val, _values, result)
                      result = new_assign(new_assignable(new_ident(val[0])), val[1], val[2])
                    
    result
end

def _reduce_506(val, _values, result)
                      result = s(:block, val[0])
                    
    result
end

def _reduce_507(val, _values, result)
                      result = val[0]
                      val[0] << val[2]
                    
    result
end

# reduce 508 omitted

# reduce 509 omitted

def _reduce_510(val, _values, result)
                      result = "*#{value(val[1])}".to_sym
                    
    result
end

def _reduce_511(val, _values, result)
                      result = :"*"
                    
    result
end

# reduce 512 omitted

# reduce 513 omitted

def _reduce_514(val, _values, result)
                      result = "&#{value(val[1])}".to_sym
                    
    result
end

def _reduce_515(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_516(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_517(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_518(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_519(val, _values, result)
                      result = []
                    
    result
end

def _reduce_520(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_521(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_522(val, _values, result)
                      result = val[0].push(*val[2])
                    
    result
end

def _reduce_523(val, _values, result)
                      result = [val[0], val[2]]
                    
    result
end

def _reduce_524(val, _values, result)
                      result = [new_sym(val[0]), val[1]]
                    
    result
end

# reduce 525 omitted

# reduce 526 omitted

# reduce 527 omitted

# reduce 528 omitted

# reduce 529 omitted

# reduce 530 omitted

# reduce 531 omitted

# reduce 532 omitted

# reduce 533 omitted

# reduce 534 omitted

# reduce 535 omitted

# reduce 536 omitted

# reduce 537 omitted

# reduce 538 omitted

# reduce 539 omitted

# reduce 540 omitted

# reduce 541 omitted

# reduce 542 omitted

# reduce 543 omitted

# reduce 544 omitted

# reduce 545 omitted

# reduce 546 omitted

# reduce 547 omitted

def _reduce_548(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module Opal
