#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.13
# from Racc grammer file "".
#

require 'racc/parser.rb'
module Opal
  class Parser < Racc::Parser


##### State transition tables begin ###

clist = [
'63,64,65,8,51,-86,-88,-95,57,58,575,205,206,61,619,59,60,62,23,24,66',
'67,607,-99,205,206,-463,22,28,27,90,89,91,92,-68,607,17,533,612,246',
'-92,-98,7,41,6,9,94,93,84,50,86,85,87,-97,88,95,96,-99,81,82,73,38,39',
'-87,-94,269,-84,708,74,597,-79,-86,-88,274,413,618,-92,-90,649,415,414',
'609,608,36,-95,709,30,-99,-97,52,773,54,-100,32,609,608,-100,40,101',
'-96,-92,205,206,100,527,18,-541,-86,-88,-86,79,73,75,76,77,78,575,-86',
'-88,74,80,101,575,574,908,-90,100,56,-540,-87,53,63,64,65,227,51,37',
'83,-461,57,58,-98,-84,-89,61,-461,59,60,62,258,259,66,67,205,206,-88',
'791,273,257,28,27,90,89,91,92,-87,-85,219,-99,707,-99,780,596,-99,41',
'-87,-540,94,93,84,50,86,85,87,262,88,95,96,309,81,82,101,38,39,-89,-95',
'100,-95,-91,-97,-95,-97,-458,-100,-97,-100,-95,227,-100,-458,-96,-92',
'-96,-92,210,-96,-92,214,-541,575,52,-93,54,575,256,703,101,101,40,574',
'-94,100,100,101,817,574,218,792,100,653,309,79,260,75,76,77,78,205,206',
'882,74,80,-98,817,-98,582,-91,-98,56,-541,-89,53,63,64,65,8,51,37,83',
'881,57,58,652,274,416,61,-85,59,60,62,23,24,66,67,-96,269,274,-97,-90',
'22,28,27,90,89,91,92,-89,455,17,-94,653,814,533,-84,7,41,-89,9,94,93',
'84,50,86,85,87,-463,88,95,96,-93,81,82,-91,38,39,546,205,206,548,653',
'101,729,574,652,101,100,574,269,653,100,702,-94,-85,-94,719,36,-94,-100',
'30,-540,269,52,-99,54,-90,32,-457,273,-91,40,729,729,652,-457,581,-92',
'582,18,-91,-84,273,652,79,73,75,76,77,78,-85,558,101,74,80,265,266,100',
'-87,630,-85,56,-90,267,53,63,64,65,8,51,37,83,-90,57,58,561,546,-84',
'61,548,59,60,62,23,24,66,67,-84,631,345,344,701,22,28,27,90,89,91,92',
'-86,101,17,728,779,607,100,227,7,41,-95,9,94,93,84,50,86,85,87,602,88',
'95,96,828,81,82,603,38,39,-88,101,101,728,728,204,100,100,227,224,-97',
'757,-459,226,225,-85,829,-451,561,-459,36,754,-460,30,-451,-94,52,101',
'54,-460,32,-454,100,-456,40,609,608,620,-454,224,-456,101,18,226,225',
'-91,100,79,73,75,76,77,78,345,344,-100,74,80,101,546,923,101,548,100',
'56,757,100,53,63,64,65,8,51,37,83,754,57,58,832,607,278,61,607,59,60',
'62,23,24,66,67,755,546,757,269,545,22,28,27,90,89,91,92,754,607,17,342',
'341,345,344,607,7,41,817,9,94,93,84,50,86,85,87,841,88,95,96,842,81',
'82,403,38,39,529,530,844,345,344,302,303,609,608,605,609,608,614,755',
'309,563,695,337,335,334,36,336,539,30,661,269,52,845,54,721,32,609,608',
'605,40,526,593,609,608,610,755,811,18,827,401,402,-540,79,73,75,76,77',
'78,837,817,847,74,80,837,817,923,345,344,685,56,757,695,53,63,64,65',
'8,51,37,83,754,57,58,205,206,683,61,392,59,60,62,23,24,66,67,592,389',
'525,-79,518,22,28,27,90,89,91,92,855,724,17,342,341,345,344,857,7,41',
'860,9,94,93,84,50,86,85,87,861,88,95,96,863,81,82,865,38,39,867,682',
'227,526,536,869,-286,-286,517,534,680,537,-268,755,-286,535,672,671',
'309,-541,36,227,309,30,227,227,52,309,54,582,32,227,227,224,40,-287',
'-287,226,225,222,223,884,18,-287,885,886,887,79,73,75,76,77,78,301,889',
'890,74,80,453,695,452,-286,807,-286,56,892,806,53,63,64,65,-266,51,37',
'83,896,57,58,898,899,549,61,550,59,60,62,258,259,66,67,-287,732,-287',
'903,300,257,292,296,90,89,91,92,871,872,219,905,873,95,96,625,516,41',
'492,555,94,93,84,50,86,85,87,269,88,95,96,558,81,82,629,38,39,227,231',
'236,237,238,233,235,243,244,239,240,911,913,220,221,914,309,241,242',
'628,210,454,-266,214,627,559,52,804,54,927,658,224,254,230,40,226,225',
'222,223,234,232,228,218,229,-269,711,624,79,73,75,76,77,78,621,812,617',
'74,80,-67,245,711,-235,613,930,56,561,456,53,63,64,65,8,51,37,83,198',
'57,58,-541,561,457,61,940,59,60,62,23,24,66,67,342,341,345,344,941,22',
'28,27,90,89,91,92,197,196,17,342,341,345,344,625,7,41,195,9,94,93,84',
'50,86,85,87,946,88,95,96,860,81,82,948,38,39,227,231,236,237,238,233',
'235,243,244,239,240,865,865,220,221,867,492,241,242,490,36,215,499,30',
'795,794,52,957,54,775,32,224,108,230,40,226,225,222,223,234,232,228',
'18,229,-267,492,963,79,73,75,76,77,78,589,499,701,74,80,97,245,588,587',
'405,490,56,973,865,53,63,64,65,8,51,37,83,975,57,58,976,499,488,61,570',
'59,60,62,23,24,66,67,103,104,105,106,107,22,28,27,90,89,91,92,571,563',
'17,337,335,334,499,336,7,41,,9,94,93,84,50,86,85,87,,88,95,96,,81,82',
',38,39,227,231,236,237,238,233,235,243,244,239,240,,,220,221,,,241,242',
',36,,,30,,,52,,54,,32,224,,230,40,226,225,222,223,234,232,228,18,229',
',,,79,73,75,76,77,78,,,,74,80,,245,,-235,,,56,,,53,63,64,65,227,51,37',
'83,,57,58,,,,61,,59,60,62,258,259,66,67,103,104,105,106,107,257,292',
'296,90,89,91,92,224,,219,,226,225,222,223,,41,,,94,93,84,50,86,85,87',
',88,95,96,,81,82,,38,39,227,231,236,237,238,233,235,243,244,239,240',
',,220,221,,,241,242,,210,,,214,,,52,,54,,658,224,,230,40,226,225,222',
'223,234,232,228,218,229,,,,79,73,75,76,77,78,203,450,,74,80,,245,796',
'451,,,56,,,53,63,64,65,,51,37,83,,57,58,-538,,,61,,59,60,62,258,259',
'66,67,103,104,105,106,107,257,292,296,90,89,91,92,,563,219,337,335,334',
'453,336,452,293,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,-454,-454,',
',,,526,955,-454,,526,593,566,-538,956,,,,591,834,,,935,,,214,,,52,,54',
',,-538,,,,-289,-289,,,,,,,-289,,,,79,73,75,76,77,78,-454,,-454,74,80',
',954,,586,,592,56,525,,53,63,64,65,8,51,297,83,,57,58,,,,61,,59,60,62',
'23,24,66,67,-289,,-289,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93',
'84,50,86,85,87,,88,95,96,,81,82,,38,39,227,231,236,237,238,233,235,243',
'244,239,240,,,220,221,,,241,242,,36,,,30,,,52,,54,,32,224,,230,40,226',
'225,222,223,234,232,228,18,229,,,,79,73,75,76,77,78,526,584,,74,80,',
'245,,585,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259',
'66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,583,,586,41,,,94,93,84,50',
'86,85,87,262,88,95,96,,81,82,,38,39,227,231,236,237,238,233,235,243',
'244,239,240,,,220,221,,,241,242,,210,,,214,,,52,,54,,,224,254,230,40',
'226,225,222,223,234,232,228,218,229,,,,79,260,75,76,77,78,203,201,,74',
'80,,245,,202,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258',
'259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,199,,200,41,,,94,93',
'84,50,86,85,87,,88,95,96,,81,82,,38,39,227,231,236,237,238,233,235,243',
'244,239,240,,,220,221,,,241,242,,210,,,214,,,52,,54,,,224,,230,40,226',
'225,222,223,234,232,228,218,229,,,,79,73,75,76,77,78,526,523,,74,80',
',245,,524,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,23,24',
'66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,522,,525,41,,,94,93,84,50,86',
'85,87,,88,95,96,,81,82,,38,39,227,231,236,237,238,233,235,243,244,239',
'240,,,220,221,,,241,242,,210,,,214,215,,52,,54,,,224,,230,40,226,225',
'222,223,234,232,228,18,229,,,,79,73,75,76,77,78,-334,-334,,74,80,,245',
',-334,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67',
',,,,,22,28,27,90,89,91,92,,,219,,,,-334,,-334,41,,,94,93,84,50,86,85',
'87,,88,95,96,,81,82,,38,39,227,231,236,237,238,233,235,243,244,239,240',
',,220,221,,,241,242,,210,,,214,,,52,,54,,,224,,230,40,226,225,222,223',
'234,232,228,218,229,,,,79,73,75,76,77,78,,,,74,80,,245,,,,,56,,,53,63',
'64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296',
'90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,',
'38,39,227,231,236,237,238,233,235,243,244,239,240,,,220,221,,,241,242',
',210,,,214,,,52,,54,,,224,,230,40,226,225,222,223,234,232,228,218,229',
',,,79,73,75,76,77,78,,,,74,80,,245,,,,,56,,,53,63,64,65,,51,37,83,,57',
'58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219',
',,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,227,231,236',
'237,238,233,235,243,244,239,240,,,220,221,,,241,242,,210,,,214,,,52',
',54,,,224,,230,40,226,225,222,223,234,232,228,218,229,,,,79,73,75,76',
'77,78,,,,74,80,,245,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59',
'60,62,258,259,66,67,,,,,,257,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93',
'84,50,86,85,87,262,88,95,96,,81,82,,38,39,227,231,236,237,238,233,235',
'243,244,239,240,,,220,221,,,241,242,,210,,,214,,,52,,54,,256,224,254',
'230,40,226,225,222,223,234,232,228,218,229,,,,79,260,75,76,77,78,,,',
'74,80,,245,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258',
'259,66,67,,,,,,257,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86',
'85,87,262,88,95,96,,81,82,,38,39,227,231,236,237,238,233,235,243,244',
'239,240,,,220,221,,,241,242,,210,,,214,,,52,,54,,256,224,254,230,40',
'226,225,222,223,234,232,228,218,229,,,,79,260,75,76,77,78,,,,74,80,',
'245,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66',
'67,,,,,,257,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87',
'262,88,95,96,,81,82,,38,39,227,231,236,237,238,233,235,243,244,239,240',
',,220,221,,,241,242,,210,,,214,,,52,,54,,256,224,254,230,40,226,225',
'222,223,234,232,228,218,229,,,,79,260,75,76,77,78,,,,74,80,,245,,,,',
'56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,',
',257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95',
'96,,81,82,,38,39,227,231,236,237,238,233,235,243,244,239,240,,,220,221',
',,241,242,,210,,,214,,,52,,54,,,224,,230,40,226,225,222,223,234,232',
'228,218,229,,,,79,73,75,76,77,78,,,,74,80,,245,,,,,56,,,53,63,64,65',
'8,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91',
'92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,227',
'231,236,237,238,233,235,243,244,239,240,,,220,221,,,241,242,,36,,,30',
',,52,,54,,32,224,,230,40,226,225,222,223,234,232,228,18,229,,,,79,73',
'75,76,77,78,,,,74,80,,245,,,,,56,,,53,-258,-258,-258,,-258,37,83,,-258',
'-258,,,,-258,,-258,-258,-258,-258,-258,-258,-258,,,,,,-258,-258,-258',
'-258,-258,-258,-258,,,-258,,,,,,,-258,,,-258,-258,-258,-258,-258,-258',
'-258,-258,-258,-258,-258,,-258,-258,,-258,-258,227,231,236,237,238,233',
'235,243,244,239,240,,,220,221,,,241,242,,-258,,,-258,269,,-258,,-258',
',-258,224,-258,230,-258,226,225,222,223,234,232,228,-258,229,,,,-258',
'-258,-258,-258,-258,-258,,,,-258,-258,,245,,,,,-258,,,-258,63,64,65',
'8,51,-258,-258,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89',
'91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39',
'227,231,236,237,238,233,235,243,244,239,240,,,220,221,,,241,242,,36',
',,30,,,52,,54,,32,224,,230,40,226,225,222,223,234,232,228,18,229,,,',
'79,73,75,76,77,78,,,,74,80,,245,,,,,56,,,53,63,64,65,8,51,37,83,,57',
'58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7',
'41,,9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,563,,337,335,334',
',336,,,,,,,,,328,,337,335,334,36,336,,282,,,52,,54,,32,,,,40,,,563,566',
'337,335,334,18,336,,569,,79,73,75,76,77,78,339,,,74,80,,,342,341,345',
'344,56,,,53,63,64,65,797,51,37,83,566,57,58,,,,61,569,59,60,62,258,259',
'66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,293,,,94,93,84,50,86',
'85,87,,88,95,96,,81,82,,767,,337,335,334,757,336,,,,,,,,,754,,328,,337',
'335,334,290,336,,287,,,52,,54,,286,,,,,,339,752,,,,,,342,341,345,344',
'79,73,75,76,77,78,339,,554,74,80,,,342,341,345,344,56,,,53,63,64,65',
',51,297,83,,57,58,,,,61,755,59,60,62,258,259,66,67,,,,,,257,292,296',
'90,89,91,92,,,219,,,,,,,293,,,94,93,84,50,86,85,87,,88,95,96,227,81',
'82,,767,,337,335,334,757,336,,,,,,,241,242,754,,,,,,,290,,,214,,224',
'52,230,54,226,225,222,223,,,228,339,229,,,,,,342,341,345,344,79,73,75',
'76,77,78,,,,74,80,,,,299,,,56,,,53,63,64,65,,51,297,83,,57,58,,,,61',
'755,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94',
'93,84,50,86,85,87,,88,95,96,227,81,82,,38,39,,,,,,,,,,,,241,242,,,328',
',337,335,334,210,336,,214,,224,52,230,54,226,225,222,223,,40,228,,229',
',,,,18,,,,,79,73,75,76,77,78,339,323,,74,80,,,342,341,345,344,56,,,53',
'63,64,65,8,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27',
'90,89,91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95,96,,81,82',
',38,39,,,,,,,,,,,,,,,,328,,337,335,334,36,336,,30,,,52,,54,,32,,,,40',
',,,,,,,18,,,,,79,73,75,76,77,78,339,,,74,80,,,342,341,345,344,56,,,53',
'63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292',
'296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81',
'82,,38,39,227,-561,-561,-561,-561,233,235,,,-561,-561,,,,,,,241,242',
',210,,,214,,,52,,54,,256,224,,230,40,226,225,222,223,234,232,228,218',
'229,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,',
'57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219',
',,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,227,-561,-561',
'-561,-561,233,235,,,-561,-561,,,,,,,241,242,,210,,,214,,,52,,54,,,224',
',230,40,226,225,222,223,234,232,228,218,229,,,,79,73,75,76,77,78,,,',
'74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259',
'66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85',
'87,,88,95,96,,81,82,,38,39,227,-561,-561,-561,-561,233,235,,,-561,-561',
',,,,,,241,242,,210,,,214,,,52,,54,,,224,,230,40,226,225,222,223,234',
'232,228,218,229,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65',
',51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89',
'91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39',
'227,231,236,237,238,233,235,243,244,239,240,,,-561,-561,,,241,242,,210',
',,214,,,52,,54,,,224,,230,40,226,225,222,223,234,232,228,218,229,,,',
'79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,',
',,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,',
',,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,227,-561,-561,-561',
'-561,233,235,,,-561,-561,,,,,,,241,242,,210,,,214,,,52,,54,,,224,,230',
'40,226,225,222,223,234,232,228,218,229,,,,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67',
',,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,',
'88,95,96,,81,82,,38,39,227,-561,-561,-561,-561,233,235,,,-561,-561,',
',,,,,241,242,,210,,,214,,,52,,54,,,224,,230,40,226,225,222,223,234,232',
'228,218,229,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51',
'37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91',
'92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,227',
'231,236,237,238,233,235,243,,239,240,,,,,,,241,242,,210,,,214,,,52,',
'54,,,224,,230,40,226,225,222,223,234,232,228,218,229,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60',
'62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,227,231,236,237,238,233,235,243,244',
'239,240,,,-561,-561,,,241,242,,210,,,214,,,52,,54,,,224,,230,40,226',
'225,222,223,234,232,228,218,229,,,,79,73,75,76,77,78,,,,74,80,,,,,,',
'56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22',
'28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,227',
'81,82,,38,39,,,,,,,,,,,,241,242,,,,,,,,210,,,214,,224,52,230,54,226',
'225,222,223,,40,228,,229,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,',
',56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,',
',,257,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,262,88',
'95,96,,81,82,,38,39,227,-561,-561,-561,-561,233,235,,,-561,-561,,,,',
',,241,242,,210,,,214,,,52,,54,,256,224,,230,40,226,225,222,223,234,232',
'228,218,229,,,,79,260,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51',
'37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91',
'92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,262,88,95,96,,81,82,,38,39',
'227,231,236,237,238,233,235,,,239,240,,,,,,,241,242,,210,,,214,,,52',
',54,,,224,,230,40,226,225,222,223,234,232,228,218,229,,,,79,260,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60',
'62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50',
'86,85,87,,88,95,96,227,81,82,,38,39,,,,,,,,,,,,241,242,,,,,,,,210,,',
'214,,224,52,230,54,226,225,222,223,,40,228,,229,,,,,218,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59',
'60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94',
'93,84,50,86,85,87,,88,95,96,227,81,82,,38,39,,,,,,,,,,,,241,242,,,,',
',,,210,,,214,,224,52,230,54,226,225,222,223,,40,,,,,,,,218,,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,',
'59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93',
'84,50,86,85,87,,88,95,96,227,81,82,,38,39,,,,,,,,,,,,241,242,,,,,,,',
'210,,,214,,224,52,230,54,226,225,222,223,,40,,,,,,,,18,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59',
'60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,84',
'50,86,85,87,,88,95,96,227,81,82,,38,39,,,,,,,,,,,,241,242,,,,,,,,210',
',,214,,224,52,,54,226,225,222,223,,40,,,,,,,,18,,,,,79,73,75,76,77,78',
',,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,23',
'24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,84,50,86,85',
'87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,',
',,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,101,,,,,100,56,,,53,63',
'64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296',
'90,89,91,92,,,219,,,,,,,293,,,94,93,84,50,86,85,87,,88,95,96,,81,82',
',767,,337,335,334,757,336,,,,,,,,,754,,,,,,,357,,,30,,,52,,54,,32,,',
',,,339,752,,,,,,342,341,345,344,79,73,75,76,77,78,,,,74,80,,,,,,,56',
',,53,63,64,65,,51,297,83,,57,58,,,,61,755,59,60,62,258,259,66,67,,,',
',,257,292,296,90,89,91,92,,,219,,,,,,,293,,,94,93,84,50,86,85,362,,88',
'95,96,,81,82,,767,,337,335,334,757,336,,,,,,,,,754,,,,368,,,363,,,214',
',,52,,54,,,,,,,,339,,,,,,,342,341,345,344,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,63,64,65,8,51,297,83,,57,58,,,,61,755,59,60,62,23,24,66',
'67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87',
',88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,',
'40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,',
'51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89',
'91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,8,51,37,83,,57,58,,,,61',
',59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94',
'93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30',
',,52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56',
',,53,63,64,65,8,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22',
'28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95,96,',
'81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,,,,,,,,18',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,8,51,37,83,,57',
'58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7',
'41,,9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,',
',,,36,,,30,,,52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74',
'80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,23,24,66',
'67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,',
',,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,-537,-537,-537',
',-537,37,83,,-537,-537,,,,-537,,-537,-537,-537,-537,-537,-537,-537,',
'-537,,,,-537,-537,-537,-537,-537,-537,-537,,,-537,,,,,,,-537,,,-537',
'-537,-537,-537,-537,-537,-537,-537,-537,-537,-537,,-537,-537,,-537,-537',
',,,,,,,,,,,,,,,,,,,,-537,,,-537,-537,,-537,,-537,,-537,,-537,,-537,',
',,,,,,-537,,-537,,,-537,-537,-537,-537,-537,-537,,,,-537,-537,,,,,,',
'-537,,,-537,-538,-538,-538,,-538,-537,-537,,-538,-538,,,,-538,,-538',
'-538,-538,-538,-538,-538,-538,,-538,,,,-538,-538,-538,-538,-538,-538',
'-538,,,-538,,,,,,,-538,,,-538,-538,-538,-538,-538,-538,-538,-538,-538',
'-538,-538,,-538,-538,,-538,-538,,,,,,,,,,,,,,,,,,,,,-538,,,-538,-538',
',-538,,-538,,-538,,-538,,-538,,,,,,,,-538,,-538,,,-538,-538,-538,-538',
'-538,-538,,,,-538,-538,,,,,,,-538,,,-538,63,64,65,,51,-538,-538,,57',
'58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219',
',,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,',
',,,,,,,,210,,,214,,,52,,54,,256,,,,40,,,,,,,,218,,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,63,64,65,8,51,37,83,,57,58,,,,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,6,9,94,93,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,54',
',32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,405,56,,,53',
'63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27',
'90,89,91,92,,,17,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,18,,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,',
'59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93',
'84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214',
',,52,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,',
',53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28',
'27,90,89,91,92,,,17,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,18,,,,',
'79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,',
',,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,',
',94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210',
',,214,,,52,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,',
',,56,,,53,63,64,65,8,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,',
',,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95',
'96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,,,,',
',,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,8,51,37',
'83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17',
',,,,,7,41,6,9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,',
',,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78',
',,,74,80,,,,,,,56,,,53,63,64,65,8,51,37,83,,57,58,,,,61,,59,60,62,23',
'24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,84,50,86',
'85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,54,',
'32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64',
'65,8,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89',
'91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59',
'60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94',
'93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,',
'214,,,52,,54,,422,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,',
',,,,56,,,53,63,64,65,8,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,',
',,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,',
',,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37',
'83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17',
',,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,',
',,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,',
',,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,23,24',
'66,67,,,,,,22,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87',
',88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,422',
',,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64',
'65,,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89',
'91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,',
'59,60,62,258,259,66,67,,,,,,257,28,27,90,89,91,92,,,219,,,,,,,41,,,94',
'93,84,50,86,85,87,262,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210',
',,214,,,52,,54,,256,,,,40,,,,,,,,218,,,,,79,260,75,76,77,78,,,,74,80',
',,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67',
',,,,,257,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,262',
'88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,256,',
',,40,,,,,,,,218,,,,,79,260,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64',
'65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90',
'89,91,92,,,219,,,,,,,293,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,,',
',,,,,,,,,,,,,,,,,,,,290,,,287,,,52,,54,,,,,,,,,,,,,,,,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,297,83,,57,58,,,,61,,59,60',
'62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,293,,,94,93',
'84,50,86,85,87,,88,95,96,,81,82,,,,,,,,,,,,,,,,,,,,,,,,290,,,287,,,52',
',54,,,,,,,,,,,,,,,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64',
'65,8,51,297,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89',
'91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59',
'60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,84',
'50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,',
'52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,',
'53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28',
'27,90,89,91,92,,,17,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,18,,,,',
'79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,',
',,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,',
',94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210',
',,214,,,52,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,',
',,56,,,53,63,64,65,8,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,',
',,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95',
'96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,,,,',
',,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83',
',57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,',
'219,,,,,,,41,,,94,93,84,50,86,85,87,262,88,95,96,,81,82,,38,39,,,,,',
',,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,254,,40,,,,,,,,218,,,,,79,260,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59',
'60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94',
'93,84,50,86,85,87,262,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210',
',,214,,,52,,54,,658,,254,,40,,,,,,,,218,,,,,79,260,75,76,77,78,,,,74',
'80,,,,,,,56,,,53,63,64,65,8,51,37,83,,57,58,,,,61,,59,60,62,23,24,66',
'67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87',
',88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,',
'40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,',
'51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89',
'91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,',
'59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,',
',94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210',
',,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,',
',,,56,,,53,63,64,65,8,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,',
',,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95',
'96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,,,,',
',,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83',
',57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,',
',,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,',
',,,,,,210,,,214,,459,52,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78',
',,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258',
'259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52',
',54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
'63,64,65,8,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27',
'90,89,91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95,96,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,,,,,,,,18,,,,',
'79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,',
',,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,',
',,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,',
',,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74',
'80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66',
'67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87',
',88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,',
'40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65',
',51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89',
'91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,',
'59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,',
',94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210',
',,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,',
',,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,',
',,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,',
',,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51',
'37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91',
'92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,',
',,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59',
'60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94',
'93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,',
'214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,',
',56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,',
',,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,',
',,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51',
'37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91',
'92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,',
',,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59',
'60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94',
'93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,',
'214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,',
',56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,',
',,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,',
',,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51',
'37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91',
'92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,',
',,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59',
'60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94',
'93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,',
'214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,',
',56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,',
',,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,',
',,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51',
'37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91',
'92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,',
',,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59',
'60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94',
'93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,',
'214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,',
',56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,',
',,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,',
',,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51',
'37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91',
'92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,',
',,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59',
'60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94',
'93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,',
'214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,',
',56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,',
',,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,',
',,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51',
'37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91',
'92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,',
',,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59',
'60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94',
'93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,',
'214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,',
',56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,',
',,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,',
',,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51',
'37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91',
'92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,',
',,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59',
'60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94',
'93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,',
'214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,',
',56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,',
',,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,',
',,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51',
'37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,',
',219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,',
',,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86',
'85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54',
',,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64',
'65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90',
'89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79',
'73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61',
',59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,219,,,,,,,41,,,94',
'93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,',
'214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,',
',56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,',
',,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,',
',,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51',
'37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91',
'92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,',
',,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59',
'60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94',
'93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,',
'214,,,52,,54,,778,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,',
',,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67',
',,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,',
'88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40',
',,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51',
'37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,',
',17,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,',
',,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,84,50,86',
'85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54',
',,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64',
'65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,28,27,90',
'89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,262,88,95,96,,81,82,',
'38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,256,,254,,40,,,,,,,,218',
',,,,79,260,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57',
'58,,,,61,,59,60,62,258,259,66,67,,,,,,257,28,27,90,89,91,92,,,219,,',
',,,,41,,,94,93,84,50,86,85,87,262,88,95,96,,81,82,,38,39,,,,,,,,,,,',
',,,,,,,,,210,,,214,,,508,,54,,256,,254,,40,,,,,,,,218,,,,,79,260,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59',
'60,62,258,259,66,67,,,,,,257,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93',
'84,50,86,85,87,262,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,',
'214,,512,52,,54,,256,,254,,40,,,,,,,,218,,,,,79,260,75,76,77,78,,,,74',
'80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66',
'67,,,,,,257,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87',
'262,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,256',
',,,40,,,,,,,,218,,,,,79,260,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64',
'65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,28,27,90',
'89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,262,88,95,96,,81,82,',
'38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,256,,,,40,,,,,,,,218,',
',,,79,260,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57',
'58,,,,61,,59,60,62,258,259,66,67,,,,,,257,28,27,90,89,91,92,,,219,,',
',,,,41,,,94,93,84,50,86,85,87,262,88,95,96,,81,82,,38,39,,,,,,,,,,,',
',,,,,,,,,210,,,214,,,52,,54,,256,,,,40,,,,,,,,218,,,,,79,260,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,63,64,65,8,51,37,83,,57,58,,,,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,282,,,52,',
'54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
'63,64,65,8,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27',
'90,89,91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95,96,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,,,,,,,,18,,,,',
'79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,8,51,37,83,,57,58',
',,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41',
',9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,',
'36,,,30,,,52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,63,64,65,8,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67',
',,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,',
',,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37',
'83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92',
',,219,,,,,,,293,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,,,,,,,,,,,',
',,,,,,,,,,,290,,,214,,,52,,54,,,,,,,,,,,,,,,,,,,79,73,75,76,77,78,,',
',74,80,,,,520,,,56,,,53,63,64,65,8,51,297,83,,57,58,,,,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,282,,,52,',
'54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
'63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292',
'296,90,89,91,92,,,219,,,,,,,293,,,94,93,84,50,86,85,87,,88,95,96,,81',
'82,,,,,,,,,,,,,,,,,,,,,,,,715,,,214,,,52,,54,,,,,,,,,,,,,,,,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,297,83,,57,58,,,,61',
',59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41',
',,94,93,84,50,86,85,87,262,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,',
',,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,260,75,76,77,78,,,,74',
'80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66',
'67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87',
'262,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,658',
',254,,40,,,,,,,,218,,,,,79,260,75,76,77,78,,,,74,80,,,,,,,56,,,53,63',
'64,65,,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90',
'89,91,92,,,17,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,18,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59',
'60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94',
'93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,',
'214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,',
',56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,',
',,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,',
',,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51',
'37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91',
'92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,',
',,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59',
'60,62,258,259,66,67,,,,,,257,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93',
'84,50,86,85,87,262,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,',
'214,,,52,,54,,256,,,,40,,,,,,,,218,,,,,79,260,75,76,77,78,,,,74,80,',
',,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67',
',,,,,257,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,262',
'88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,256,',
',,40,,,,,,,,218,,,,,79,260,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64',
'65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90',
'89,91,92,,,219,,,,,,,293,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,,',
',,,,,,,,,,,,,,,,,,,,290,,,287,,,52,,54,,,,,,,,,,,,,,,,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,297,83,,57,58,,,,61,,59,60',
'62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,293,,,94,93',
'84,50,86,85,87,,88,95,96,,81,82,,,,,,,,,,,,,,,,,,,,,,,,290,,,287,,,52',
',54,,,,,,,,,,,,,,,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64',
'65,8,51,297,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89',
'91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,405,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,',
'59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93',
'84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214',
',676,52,,54,,,,254,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,',
',,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,',
',,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,',
',,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51',
'37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91',
'92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,262,88,95,96,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,254,,40,,,,,,,,218,,,,,79',
'260,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,',
'61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,',
'41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,',
',,210,,,214,539,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,',
'74,80,,,,,,,56,,,53,63,64,65,8,51,37,83,,57,58,,,,61,,59,60,62,23,24',
'66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85',
'87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,54,,32',
',,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65',
',51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89',
'91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,262,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,658,,254,,40,,,,,,,,218,',
',,,79,260,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57',
'58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219',
',,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,',
',,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78',
',,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258',
'259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52',
',54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
'63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292',
'296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81',
'82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57',
'58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219',
',,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,',
',,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78',
',,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258',
'259,66,67,,,,,,257,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86',
'85,87,262,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52',
',54,,256,,,,40,,,,,,,,218,,,,,79,260,75,76,77,78,,,,74,80,,,,,,,56,',
',53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257',
'28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,262,88,95,96',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,256,,,,40,,,,',
',,,218,,,,,79,260,75,76,77,78,,,,74,80,,,,,,,56,,,53,-258,-258,-258',
',-258,37,83,,-258,-258,,,,-258,,-258,-258,-258,-258,-258,-258,-258,',
',,,,-258,-258,-258,-258,-258,-258,-258,,,-258,,,,,,,-258,,,-258,-258',
'-258,-258,-258,-258,-258,-258,-258,-258,-258,,-258,-258,,-258,-258,',
',,,,,,,,,,,,,,,,,,,-258,,,-258,269,,-258,,-258,,-258,,-258,,-258,,,',
',,,,-258,,,,,-258,-258,-258,-258,-258,-258,,,,-258,-258,,,,,,,-258,',
',-258,-543,-543,-543,,-543,-258,-258,,-543,-543,,,,-543,,-543,-543,-543',
'-543,-543,-543,-543,,,,,,-543,-543,-543,-543,-543,-543,-543,,,-543,',
',,,,,-543,,,-543,-543,-543,-543,-543,-543,-543,-543,-543,-543,-543,',
'-543,-543,,-543,-543,,,,,,,,,,,,,,,,,,,,,-543,,,-543,-543,,-543,,-543',
',-543,,-543,,-543,,,,,,,,-543,,,,,-543,-543,-543,-543,-543,-543,,,,-543',
'-543,,,,,,,-543,,,-543,-542,-542,-542,,-542,-543,-543,,-542,-542,,,',
'-542,,-542,-542,-542,-542,-542,-542,-542,,,,,,-542,-542,-542,-542,-542',
'-542,-542,,,-542,,,,,,,-542,,,-542,-542,-542,-542,-542,-542,-542,-542',
'-542,-542,-542,,-542,-542,,-542,-542,,,,,,,,,,,,,,,,,,,,,-542,,,-542',
'-542,,-542,,-542,,-542,,-542,,-542,,,,,,,,-542,,,,,-542,-542,-542,-542',
'-542,-542,,,,-542,-542,,,,,,,-542,,,-542,-258,-258,-258,,-258,-542,-542',
',-258,-258,,,,-258,,-258,-258,-258,-258,-258,-258,-258,,,,,,-258,-258',
'-258,-258,-258,-258,-258,,,-258,,,,,,,-258,,,-258,-258,-258,-258,-258',
'-258,-258,-258,-258,-258,-258,,-258,-258,,-258,-258,,,,,,,,,,,,,,,,',
',,,,-258,,,-258,269,,-258,,-258,,-258,,-258,,-258,,,,,,,,-258,,,,,-258',
'-258,-258,-258,-258,-258,,,,-258,-258,,,,,,,-258,,,-258,63,64,65,,51',
'-258,-258,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89',
'91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,',
'59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93',
'84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214',
',,52,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,',
',53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257',
'292,296,90,89,91,92,,,219,,,,,,,293,,,94,93,84,50,86,85,362,,88,95,96',
',81,82,,,,,,,,,,,,,,,,,,,,,,,,363,,,214,,,52,,54,,,,,,,,,,,,,,,,,,,79',
'73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,297,83,,57,58,,,',
'61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94',
'93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,',
'214,,,52,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,',
'56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22',
'28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81',
'82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,422,,,,40,,,,,,,,218',
',,,-286,79,73,75,76,77,78,-286,-286,-286,74,80,,-286,-286,,-286,,56',
',,53,,,,,,37,83,,,,,,,,-286,-286,,-286,-286,-286,-286,-286,,,,,,,,,',
',,,,,,,,,,,,-286,-286,-286,-286,-286,-286,-286,-286,-286,-286,-286,-286',
'-286,-286,-286,,,-286,-286,-286,,639,,,,-286,,,,,,-286,,-286,,-286,-286',
'-286,-286,-286,-286,-286,,-286,,-286,,,,,,,,,,,,,-286,-286,,-89,,-286',
',-286,-286,,-286,,,-98,-286,-286,-286,,,-286,-286,-286,,-286,,,,,,,',
',,-286,-286,,,,,,,,,-286,-286,,-286,-286,-286,-286,-286,,,,,,,,,,,,',
',,,,,,,,,-286,-286,-286,-286,-286,-286,-286,-286,-286,-286,-286,-286',
'-286,-286,-286,,,-286,-286,-286,,639,-286,,,-286,,-286,,-286,,-286,',
'-286,,-286,-286,-286,-286,-286,-286,-286,,-286,,-286,,,,,,,,,,,,,-286',
'-286,-286,-286,,-286,,-544,-286,,-286,,,-98,-544,-544,-544,,,-544,-544',
'-544,,-544,,,,,,,,,-544,-544,-544,,,,,,,,,-544,-544,,-544,-544,-544',
'-544,-544,,,,,,,,,,,,,,,,,,,,,,-544,-544,-544,-544,-544,-544,-544,-544',
'-544,-544,-544,-544,-544,-544,-544,,,-544,-544,-544,,793,-544,,,-544',
',-544,,-544,,-544,,-544,,-544,-544,-544,-544,-544,-544,-544,,-544,-544',
'-544,,,,,,,,,,,,,-544,-544,-544,-544,,-544,,-544,-544,,-544,,,-96,-544',
'-544,-544,,,,-544,-544,,-544,,,,,,,,,-544,,,,,,,,,,,-544,-544,,-544',
'-544,-544,-544,-544,,,,,,,,,,,,,,,,,,,,,,-544,-544,-544,-544,-544,-544',
'-544,-544,-544,-544,-544,-544,-544,-544,-544,,,-544,-544,-544,,636,',
',,-544,,,,,,-544,,-544,,-544,-544,-544,-544,-544,-544,-544,,-544,-544',
'-544,,,,,,,,,,,,,-544,-544,,-87,,-544,,-295,-544,,-544,,,-96,-295,-295',
'-295,,,-295,-295,-295,,-295,,,,,,,,,,-295,-295,,,,,,,,,-295,-295,,-295',
'-295,-295,-295,-295,,,,,,,,,,,,,,,,,,,,,,-295,-295,-295,-295,-295,-295',
'-295,-295,-295,-295,-295,-295,-295,-295,-295,,,-295,-295,-295,,,-295',
',278,-295,,-295,,-295,,-295,,-295,,-295,-295,-295,-295,-295,-295,-295',
',-295,,-295,,,,,,,,,,,,,-295,-295,-295,-295,-281,-295,,,-295,,-295,-281',
'-281,-281,,,-281,-281,-281,,-281,,,,,,,,,,-281,-281,-281,,,,,,,,-281',
'-281,,-281,-281,-281,-281,-281,,,,,,,,,,,,,,,,,,,,,,-281,-281,-281,-281',
'-281,-281,-281,-281,-281,-281,-281,-281,-281,-281,-281,,,-281,-281,-281',
',,-281,,,-281,,-281,,-281,,-281,,-281,,-281,-281,-281,-281,-281,-281',
'-281,,-281,,-281,,,,,,,,,,,,,-281,-281,-281,-281,-560,-281,,-281,-281',
',-281,-560,-560,-560,,,-560,-560,-560,,-560,,,,,,,,,,-560,,,,,,,,,,-560',
'-560,,-560,-560,-560,-560,-560,,,,,,,,,,,,-560,,,,,,,-560,-560,-560',
',,-560,-560,-560,,-560,,,,,-560,-560,,,,-560,,,-560,,,,,269,-560,-560',
'-560,,-560,-560,-560,-560,-560,,,,,,,,,,,,-560,,,,,,,,,,,,,-560,,-560',
',,-560,,,-560,-560,,-560,,,,,-560,,-560,-560,-560,269,-560,-560,-560',
'-560,,-560,,,,,,,,,,-560,,,,,-560,,,,,-560,-560,,-560,-560,-560,-560',
'-560,-560,,-560,,,-560,744,441,,,742,,,,,,,,,142,143,139,121,122,123',
'130,127,129,,,124,125,-560,-560,,,144,145,131,132,-560,,,,,269,-560',
',,,,136,135,,120,141,138,137,133,134,128,126,118,140,119,,-560,146,',
',,,,,,,,,,-560,,-560,,,-560,156,167,157,180,153,173,163,162,188,191',
'178,161,160,155,181,189,190,165,154,168,172,174,166,159,,,,175,182,177',
'176,169,179,164,152,171,170,183,184,185,186,187,151,158,149,150,147',
'148,111,113,,,112,,,,,,,,,142,143,139,121,122,123,130,127,129,,,124',
'125,,,,,144,145,131,132,,,,,,,,,,,,136,135,,120,141,138,137,133,134',
'128,126,118,140,119,,,146,192,,,,,,,,,,80,156,167,157,180,153,173,163',
'162,188,191,178,161,160,155,181,189,190,165,154,168,172,174,166,159',
',,,175,182,177,176,169,179,164,152,171,170,183,184,185,186,187,151,158',
'149,150,147,148,111,113,,,112,,,,,,,,,142,143,139,121,122,123,130,127',
'129,,,124,125,,,,,144,145,131,132,,,,,,,,,,,,136,135,,120,141,138,137',
'133,134,128,126,118,140,119,,,146,192,,,,,,,,,,80,156,167,157,180,153',
'173,163,162,188,191,178,161,160,155,181,189,190,165,154,168,172,174',
'166,159,,,,175,182,177,176,169,179,164,152,171,170,183,184,185,186,187',
'151,158,149,150,147,148,111,113,110,,112,,,,,,,,,142,143,139,121,122',
'123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,,,136,135,,120',
'141,138,137,133,134,128,126,118,140,119,,,146,192,,,,,,,,,,80,156,167',
'157,180,153,173,163,162,188,191,178,161,160,155,181,189,190,165,154',
'168,172,174,166,159,,,,175,182,177,176,169,179,164,152,171,170,183,184',
'185,186,187,151,158,149,150,147,148,111,113,,,112,,,,,,,,,142,143,139',
'121,122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,,,136',
'135,,120,141,138,137,133,134,128,126,118,140,119,,,146,192,,,,,,,,,',
'80,156,167,157,180,153,173,163,162,188,191,178,161,160,155,181,189,190',
'165,154,168,172,174,166,159,,,,175,182,177,176,169,179,164,152,171,170',
'183,184,185,186,187,151,158,149,150,147,148,111,113,,,112,,,,,,,,,142',
'143,139,121,122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,',
',,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119,,,146,156',
'167,157,180,153,173,163,162,188,191,178,161,160,155,181,189,190,165',
'154,168,172,174,166,159,,,,175,182,177,176,169,179,164,152,171,170,183',
'184,185,186,187,151,158,149,150,147,148,111,113,399,398,112,,400,,,',
',,,142,143,139,121,122,123,130,127,129,,,124,125,,,,,144,145,131,132',
',,,,,,,,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119,,,146',
'156,167,157,180,153,173,163,162,188,191,178,161,160,155,181,189,190',
'165,154,168,172,174,166,159,,,,175,182,177,377,376,378,375,152,171,170',
'183,184,185,186,187,151,158,149,150,373,374,371,113,86,85,372,,88,,',
',,,,142,143,139,121,122,123,130,127,129,,,124,125,,,,,144,145,131,132',
',,,,,382,,,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119,',
',146,156,167,157,180,153,173,163,162,188,191,178,161,160,155,181,189',
'190,165,154,168,172,174,166,159,,,,175,182,177,176,169,179,164,152,171',
'170,183,184,185,186,187,151,158,149,150,147,148,111,113,399,398,112',
',400,,,,,,,142,143,139,121,122,123,130,127,129,,,124,125,,,,,144,145',
'131,132,,,,,,,,,,,,136,135,,120,141,138,137,133,134,128,126,118,140',
'119,968,435,146,,969,,,,,,,,,142,143,139,121,122,123,130,127,129,,,124',
'125,,,,,144,145,131,132,,,,,,269,,,,,,136,135,,120,141,138,137,133,134',
'128,126,118,140,119,444,435,146,,445,,,,,,,,,142,143,139,121,122,123',
'130,127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,,,136,135,,120,141',
'138,137,133,134,128,126,118,140,119,444,435,146,,445,,,,,,,,,142,143',
'139,121,122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,',
',136,135,,120,141,138,137,133,134,128,126,118,140,119,444,435,146,,445',
',,,,,,,,142,143,139,121,122,123,130,127,129,,,124,125,,,,,144,145,131',
'132,,,,,,,,,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119',
'444,435,146,,445,,,,,,,,,142,143,139,121,122,123,130,127,129,,,124,125',
',,,,144,145,131,132,,,,,,,,,,,,136,135,,120,141,138,137,133,134,128',
'126,118,140,119,444,435,146,,445,,,,,,,,,142,143,139,121,122,123,130',
'127,129,,,124,125,,,,,144,145,131,132,,,,,,269,,,,,,136,135,,120,141',
'138,137,133,134,128,126,118,140,119,690,441,146,,691,,,,,,,,,142,143',
'139,121,122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,',
',136,135,,120,141,138,137,133,134,128,126,118,140,119,970,441,146,,971',
',,,,,,,,142,143,139,121,122,123,130,127,129,,,124,125,,,,,144,145,131',
'132,,,,,,,,,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119',
'687,435,146,,688,,,,,,,,,142,143,139,121,122,123,130,127,129,,,124,125',
',,,,144,145,131,132,,,,,,269,,,,,,136,135,,120,141,138,137,133,134,128',
'126,118,140,119,444,435,146,,445,,,,,,,,,142,143,139,121,122,123,130',
'127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,,,136,135,,120,141,138',
'137,133,134,128,126,118,140,119,738,441,146,,739,,,,,,,,,142,143,139',
'121,122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,,,136',
'135,,120,141,138,137,133,134,128,126,118,140,119,736,435,146,,737,,',
',,,,,,142,143,139,121,122,123,130,127,129,,,124,125,,,,,144,145,131',
'132,,,,,,269,,,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119',
'642,435,146,,643,,,,,,,,,142,143,139,121,122,123,130,127,129,,,124,125',
',,,,144,145,131,132,,,,,,269,,,,,,136,135,,120,141,138,137,133,134,128',
'126,118,140,119,437,441,146,,439,,,,,,,,,142,143,139,121,122,123,130',
'127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,,,136,135,,120,141,138',
'137,133,134,128,126,118,140,119,642,435,146,,643,,,,,,,,,142,143,139',
'121,122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,269,,,,,',
'136,135,,120,141,138,137,133,134,128,126,118,140,119,431,435,146,,432',
',,,,,,,,142,143,139,121,122,123,130,127,129,,,124,125,,,,,144,145,131',
'132,,,,,,269,,,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119',
'644,441,146,,645,,,,,,,,,142,143,139,121,122,123,130,127,129,,,124,125',
',,,,144,145,131,132,,,,,,,,,,,,136,135,,120,141,138,137,133,134,128',
'126,118,140,119,744,441,146,,900,,,,,,,,,142,143,139,121,122,123,130',
'127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,,,136,135,,120,141,138',
'137,133,134,128,126,118,140,119,644,441,146,,645,,,,,,,,,142,143,139',
'121,122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,,,136',
'135,,120,141,138,137,133,134,128,126,118,140,119,,,146' ]
        racc_action_table = arr = ::Array.new(25330, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'0,0,0,0,0,687,688,736,0,0,843,749,749,0,393,0,0,0,0,0,0,0,615,587,458',
'458,35,0,0,0,0,0,0,0,682,388,0,301,388,20,355,739,0,0,0,0,0,0,0,0,0',
'0,0,737,0,0,0,957,0,0,71,0,0,690,844,694,35,552,71,367,682,687,688,55',
'110,393,35,301,458,110,110,615,615,0,968,553,0,301,969,0,615,0,936,0',
'388,388,358,0,749,970,933,604,604,749,290,0,739,687,688,736,0,0,0,0',
'0,0,349,687,688,0,0,843,348,843,843,587,843,0,690,690,0,954,954,954',
'697,954,0,0,373,954,954,971,355,739,954,373,954,954,954,954,954,954',
'954,311,311,737,642,55,954,954,954,954,954,954,954,690,844,954,957,552',
'957,629,367,957,954,690,970,954,954,954,954,954,954,954,954,954,954',
'954,604,954,954,367,954,954,691,968,367,968,358,969,968,969,378,936',
'969,936,642,698,936,378,970,933,970,933,954,970,933,954,971,895,954',
'629,954,904,954,542,753,349,954,349,976,753,349,348,700,348,954,643',
'348,509,311,954,954,954,954,954,954,699,699,795,954,954,971,943,971',
'943,291,971,954,691,691,954,952,952,952,952,952,954,954,794,952,952',
'509,26,193,952,811,952,952,952,952,952,952,952,738,692,294,643,527,952',
'952,952,952,952,952,952,691,211,952,795,510,699,454,288,952,952,691',
'952,952,952,952,952,952,952,952,209,952,952,952,794,952,952,291,952',
'952,315,15,15,315,499,895,577,895,510,904,895,904,26,486,904,541,976',
'811,976,564,952,976,211,952,738,294,952,454,952,527,952,377,26,291,952',
'846,578,499,377,353,209,353,952,291,288,294,486,952,952,952,952,952',
'952,811,711,3,952,952,25,25,3,738,431,811,952,527,25,952,944,944,944',
'944,944,952,952,527,944,944,713,318,288,944,318,944,944,944,944,944',
'944,944,288,432,860,860,540,944,944,944,944,944,944,944,431,577,944',
'577,628,395,577,462,944,944,431,944,944,944,944,944,944,944,944,380',
'944,944,944,715,944,944,380,944,944,432,846,578,846,578,14,846,578,463',
'462,432,857,375,462,462,628,716,371,717,375,944,857,374,944,371,628',
'944,279,944,374,944,372,279,376,944,395,395,395,372,463,376,747,944',
'463,463,14,747,944,944,944,944,944,944,857,857,14,944,944,597,704,948',
'352,704,597,944,948,352,944,939,939,939,939,939,944,944,948,939,939',
'720,494,292,939,390,939,939,939,939,939,939,939,857,314,865,689,314',
'939,939,939,939,939,939,939,865,384,939,948,948,948,948,386,939,939',
'725,939,939,939,939,939,939,939,939,731,939,939,939,733,939,939,97,939',
'939,297,297,735,865,865,37,37,494,494,494,390,390,390,948,293,569,531',
'569,569,569,939,569,528,939,494,296,939,740,939,568,939,384,384,384',
'939,714,714,386,386,386,865,686,939,714,83,83,744,939,939,939,939,939',
'939,723,723,745,939,939,958,958,863,561,561,521,939,863,684,939,932',
'932,932,932,932,939,939,863,932,932,347,347,519,932,78,932,932,932,932',
'932,932,932,714,77,714,516,285,932,932,932,932,932,932,932,756,573,932',
'863,863,863,863,760,932,932,761,932,932,932,932,932,932,932,932,763',
'932,932,932,764,932,932,765,932,932,767,515,481,304,304,770,742,742',
'284,302,511,304,777,863,742,303,505,504,501,742,932,306,313,932,467',
'466,932,41,932,579,932,465,464,481,932,589,589,481,481,481,481,798,932',
'589,799,803,805,932,932,932,932,932,932,36,808,809,932,932,304,810,304',
'742,677,742,932,815,674,932,930,930,930,818,930,932,932,819,930,930',
'824,825,316,930,317,930,930,930,930,930,930,930,589,580,589,835,34,930',
'930,930,930,930,930,930,771,771,930,838,771,771,771,420,283,930,319',
'327,930,930,930,930,930,930,930,438,930,930,930,328,930,930,430,930',
'930,420,420,420,420,420,420,420,420,420,420,420,848,851,420,420,852',
'853,420,420,429,930,210,425,930,423,330,930,670,930,875,930,420,930',
'420,930,420,420,420,420,420,420,420,930,420,876,555,417,930,930,930',
'930,930,930,411,693,392,930,930,281,420,829,420,389,888,930,331,212',
'930,912,912,912,912,912,930,930,12,912,912,900,901,213,912,906,912,912',
'912,912,912,912,912,555,555,555,555,907,912,912,912,912,912,912,912',
'11,10,912,829,829,829,829,648,912,912,9,912,912,912,912,912,912,912',
'912,915,912,912,912,917,912,912,920,912,912,648,648,648,648,648,648',
'648,648,648,648,648,921,922,648,648,923,657,648,648,655,912,219,268',
'912,647,646,912,935,912,619,912,648,6,648,912,648,648,648,648,648,648',
'648,912,648,626,255,945,912,912,912,912,912,912,363,640,953,912,912',
'1,648,359,357,354,252,912,962,964,912,909,909,909,909,909,912,912,965',
'909,909,967,637,251,909,343,909,909,909,909,909,909,909,681,681,681',
'681,681,909,909,909,909,909,909,909,346,834,909,834,834,834,632,834',
'909,909,,909,909,909,909,909,909,909,909,,909,909,909,,909,909,,909',
'909,673,673,673,673,673,673,673,673,673,673,673,,,673,673,,,673,673',
',909,,,909,,,909,,909,,909,673,,673,909,673,673,673,673,673,673,673',
'909,673,,,,909,909,909,909,909,909,,,,909,909,,673,,673,,,909,,,909',
'908,908,908,482,908,909,909,,908,908,,,,908,,908,908,908,908,908,908',
'908,280,280,280,280,280,908,908,908,908,908,908,908,482,,908,,482,482',
'482,482,,908,,,908,908,908,908,908,908,908,,908,908,908,,908,908,,908',
'908,650,650,650,650,650,650,650,650,650,650,650,,,650,650,,,650,650',
',908,,,908,,,908,,908,,908,650,,650,908,650,650,650,650,650,650,650',
'908,650,,,,908,908,908,908,908,908,208,208,,908,908,,650,650,208,,,908',
',,908,896,896,896,,896,908,908,,896,896,362,,,896,,896,896,896,896,896',
'896,896,5,5,5,5,5,896,896,896,896,896,896,896,,721,896,721,721,721,208',
'721,208,896,,,896,896,896,896,896,896,896,,896,896,896,,896,896,,362',
'362,,,,,934,934,362,,365,365,721,362,934,,,,365,721,,,896,,,896,,,896',
',896,,,362,,,,845,845,,,,,,,845,,,,896,896,896,896,896,896,362,,362',
'896,896,,934,,934,,365,896,365,,896,892,892,892,892,892,896,896,,892',
'892,,,,892,,892,892,892,892,892,892,892,845,,845,,,892,892,892,892,892',
'892,892,,,892,,,,,,892,892,,892,892,892,892,892,892,892,892,,892,892',
'892,,892,892,,892,892,928,928,928,928,928,928,928,928,928,928,928,,',
'928,928,,,928,928,,892,,,892,,,892,,892,,892,928,,928,892,928,928,928',
'928,928,928,928,892,928,,,,892,892,892,892,892,892,356,356,,892,892',
',928,,356,,,892,,,892,887,887,887,,887,892,892,,887,887,,,,887,,887',
'887,887,887,887,887,887,,,,,,887,887,887,887,887,887,887,,,887,,,,356',
',356,887,,,887,887,887,887,887,887,887,887,887,887,887,,887,887,,887',
'887,249,249,249,249,249,249,249,249,249,249,249,,,249,249,,,249,249',
',887,,,887,,,887,,887,,,249,887,249,887,249,249,249,249,249,249,249',
'887,249,,,,887,887,887,887,887,887,13,13,,887,887,,249,,13,,,887,,,887',
'883,883,883,,883,887,887,,883,883,,,,883,,883,883,883,883,883,883,883',
',,,,,883,883,883,883,883,883,883,,,883,,,,13,,13,883,,,883,883,883,883',
'883,883,883,,883,883,883,,883,883,,883,883,787,787,787,787,787,787,787',
'787,787,787,787,,,787,787,,,787,787,,883,,,883,,,883,,883,,,787,,787',
'883,787,787,787,787,787,787,787,883,787,,,,883,883,883,883,883,883,289',
'289,,883,883,,787,,289,,,883,,,883,17,17,17,,17,883,883,,17,17,,,,17',
',17,17,17,17,17,17,17,,,,,,17,17,17,17,17,17,17,,,17,,,,289,,289,17',
',,17,17,17,17,17,17,17,,17,17,17,,17,17,,17,17,782,782,782,782,782,782',
'782,782,782,782,782,,,782,782,,,782,782,,17,,,17,17,,17,,17,,,782,,782',
'17,782,782,782,782,782,782,782,17,782,,,,17,17,17,17,17,17,42,42,,17',
'17,,782,,42,,,17,,,17,18,18,18,,18,17,17,,18,18,,,,18,,18,18,18,18,18',
'18,18,,,,,,18,18,18,18,18,18,18,,,18,,,,42,,42,18,,,18,18,18,18,18,18',
'18,,18,18,18,,18,18,,18,18,538,538,538,538,538,538,538,538,538,538,538',
',,538,538,,,538,538,,18,,,18,,,18,,18,,,538,,538,18,538,538,538,538',
'538,538,538,18,538,,,,18,18,18,18,18,18,,,,18,18,,538,,,,,18,,,18,882',
'882,882,,882,18,18,,882,882,,,,882,,882,882,882,882,882,882,882,,,,',
',882,882,882,882,882,882,882,,,882,,,,,,,882,,,882,882,882,882,882,882',
'882,,882,882,882,,882,882,,882,882,447,447,447,447,447,447,447,447,447',
'447,447,,,447,447,,,447,447,,882,,,882,,,882,,882,,,447,,447,882,447',
'447,447,447,447,447,447,882,447,,,,882,882,882,882,882,882,,,,882,882',
',447,,,,,882,,,882,881,881,881,,881,882,882,,881,881,,,,881,,881,881',
'881,881,881,881,881,,,,,,881,881,881,881,881,881,881,,,881,,,,,,,881',
',,881,881,881,881,881,881,881,,881,881,881,,881,881,,881,881,784,784',
'784,784,784,784,784,784,784,784,784,,,784,784,,,784,784,,881,,,881,',
',881,,881,,,784,,784,881,784,784,784,784,784,784,784,881,784,,,,881',
'881,881,881,881,881,,,,881,881,,784,,,,,881,,,881,22,22,22,,22,881,881',
',22,22,,,,22,,22,22,22,22,22,22,22,,,,,,22,22,22,22,22,22,22,,,22,,',
',,,,22,,,22,22,22,22,22,22,22,22,22,22,22,,22,22,,22,22,880,880,880',
'880,880,880,880,880,880,880,880,,,880,880,,,880,880,,22,,,22,,,22,,22',
',22,880,22,880,22,880,880,880,880,880,880,880,22,880,,,,22,22,22,22',
'22,22,,,,22,22,,880,,,,,22,,,22,23,23,23,,23,22,22,,23,23,,,,23,,23',
'23,23,23,23,23,23,,,,,,23,23,23,23,23,23,23,,,23,,,,,,,23,,,23,23,23',
'23,23,23,23,23,23,23,23,,23,23,,23,23,696,696,696,696,696,696,696,696',
'696,696,696,,,696,696,,,696,696,,23,,,23,,,23,,23,,23,696,23,696,23',
'696,696,696,696,696,696,696,23,696,,,,23,23,23,23,23,23,,,,23,23,,696',
',,,,23,,,23,24,24,24,,24,23,23,,24,24,,,,24,,24,24,24,24,24,24,24,,',
',,,24,24,24,24,24,24,24,,,24,,,,,,,24,,,24,24,24,24,24,24,24,24,24,24',
'24,,24,24,,24,24,776,776,776,776,776,776,776,776,776,776,776,,,776,776',
',,776,776,,24,,,24,,,24,,24,,24,776,24,776,24,776,776,776,776,776,776',
'776,24,776,,,,24,24,24,24,24,24,,,,24,24,,776,,,,,24,,,24,867,867,867',
',867,24,24,,867,867,,,,867,,867,867,867,867,867,867,867,,,,,,867,867',
'867,867,867,867,867,,,867,,,,,,,867,,,867,867,867,867,867,867,867,,867',
'867,867,,867,867,,867,867,878,878,878,878,878,878,878,878,878,878,878',
',,878,878,,,878,878,,867,,,867,,,867,,867,,,878,,878,867,878,878,878',
'878,878,878,878,867,878,,,,867,867,867,867,867,867,,,,867,867,,878,',
',,,867,,,867,840,840,840,840,840,867,867,,840,840,,,,840,,840,840,840',
'840,840,840,840,,,,,,840,840,840,840,840,840,840,,,840,,,,,,840,840',
',840,840,840,840,840,840,840,840,,840,840,840,,840,840,,840,840,789',
'789,789,789,789,789,789,789,789,789,789,,,789,789,,,789,789,,840,,,840',
',,840,,840,,840,789,,789,840,789,789,789,789,789,789,789,840,789,,,',
'840,840,840,840,840,840,,,,840,840,,789,,,,,840,,,840,27,27,27,,27,840',
'840,,27,27,,,,27,,27,27,27,27,27,27,27,,,,,,27,27,27,27,27,27,27,,,27',
',,,,,,27,,,27,27,27,27,27,27,27,27,27,27,27,,27,27,,27,27,428,428,428',
'428,428,428,428,428,428,428,428,,,428,428,,,428,428,,27,,,27,27,,27',
',27,,27,428,27,428,27,428,428,428,428,428,428,428,27,428,,,,27,27,27',
'27,27,27,,,,27,27,,428,,,,,27,,,27,839,839,839,839,839,27,27,,839,839',
',,,839,,839,839,839,839,839,839,839,,,,,,839,839,839,839,839,839,839',
',,839,,,,,,839,839,,839,839,839,839,839,839,839,839,,839,839,839,,839',
'839,,839,839,19,19,19,19,19,19,19,19,19,19,19,,,19,19,,,19,19,,839,',
',839,,,839,,839,,839,19,,19,839,19,19,19,19,19,19,19,839,19,,,,839,839',
'839,839,839,839,,,,839,839,,19,,,,,839,,,839,30,30,30,30,30,839,839',
',30,30,,,,30,,30,30,30,30,30,30,30,,,,,,30,30,30,30,30,30,30,,,30,,',
',,,30,30,,30,30,30,30,30,30,30,30,,30,30,30,,30,30,,30,30,339,,339,339',
'339,,339,,,,,,,,,652,,652,652,652,30,652,,30,,,30,,30,,30,,,,30,,,566',
'339,566,566,566,30,566,,339,,30,30,30,30,30,30,652,,,30,30,,,652,652',
'652,652,30,,,30,31,31,31,652,31,30,30,566,31,31,,,,31,566,31,31,31,31',
'31,31,31,,,,,,31,31,31,31,31,31,31,,,31,,,,,,,31,,,31,31,31,31,31,31',
'31,,31,31,31,,31,31,,600,,600,600,600,600,600,,,,,,,,,600,,323,,323',
'323,323,31,323,,31,,,31,,31,,31,,,,,,600,600,,,,,,600,600,600,600,31',
'31,31,31,31,31,323,,323,31,31,,,323,323,323,323,31,,,31,32,32,32,,32',
'31,31,,32,32,,,,32,600,32,32,32,32,32,32,32,,,,,,32,32,32,32,32,32,32',
',,32,,,,,,,32,,,32,32,32,32,32,32,32,,32,32,32,475,32,32,,752,,752,752',
'752,752,752,,,,,,,475,475,752,,,,,,,32,,,32,,475,32,475,32,475,475,475',
'475,,,475,752,475,,,,,,752,752,752,752,32,32,32,32,32,32,,,,32,32,,',
',32,,,32,,,32,837,837,837,,837,32,32,,837,837,,,,837,752,837,837,837',
'837,837,837,837,,,,,,837,837,837,837,837,837,837,,,837,,,,,,,837,,,837',
'837,837,837,837,837,837,,837,837,837,473,837,837,,837,837,,,,,,,,,,',
',473,473,,,56,,56,56,56,837,56,,837,,473,837,473,837,473,473,473,473',
',837,473,,473,,,,,837,,,,,837,837,837,837,837,837,56,56,,837,837,,,56',
'56,56,56,837,,,837,817,817,817,817,817,837,837,,817,817,,,,817,,817',
'817,817,817,817,817,817,,,,,,817,817,817,817,817,817,817,,,817,,,,,',
'817,817,,817,817,817,817,817,817,817,817,,817,817,817,,817,817,,817',
'817,,,,,,,,,,,,,,,,559,,559,559,559,817,559,,817,,,817,,817,,817,,,',
'817,,,,,,,,817,,,,,817,817,817,817,817,817,559,,,817,817,,,559,559,559',
'559,817,,,817,806,806,806,,806,817,817,,806,806,,,,806,,806,806,806',
'806,806,806,806,,,,,,806,806,806,806,806,806,806,,,806,,,,,,,806,,,806',
'806,806,806,806,806,806,,806,806,806,,806,806,,806,806,479,479,479,479',
'479,479,479,,,479,479,,,,,,,479,479,,806,,,806,,,806,,806,,806,479,',
'479,806,479,479,479,479,479,479,479,806,479,,,,806,806,806,806,806,806',
',,,806,806,,,,,,,806,,,806,793,793,793,,793,806,806,,793,793,,,,793',
',793,793,793,793,793,793,793,,,,,,793,793,793,793,793,793,793,,,793',
',,,,,,793,,,793,793,793,793,793,793,793,,793,793,793,,793,793,,793,793',
'478,478,478,478,478,478,478,,,478,478,,,,,,,478,478,,793,,,793,,,793',
',793,,,478,,478,793,478,478,478,478,478,478,478,793,478,,,,793,793,793',
'793,793,793,,,,793,793,,,,,,,793,,,793,38,38,38,,38,793,793,,38,38,',
',,38,,38,38,38,38,38,38,38,,,,,,38,38,38,38,38,38,38,,,38,,,,,,,38,',
',38,38,38,38,38,38,38,,38,38,38,,38,38,,38,38,480,480,480,480,480,480',
'480,,,480,480,,,,,,,480,480,,38,,,38,,,38,,38,,,480,,480,38,480,480',
'480,480,480,480,480,38,480,,,,38,38,38,38,38,38,,,,38,38,,,,,,,38,,',
'38,39,39,39,,39,38,38,,39,39,,,,39,,39,39,39,39,39,39,39,,,,,,39,39',
'39,39,39,39,39,,,39,,,,,,,39,,,39,39,39,39,39,39,39,,39,39,39,,39,39',
',39,39,460,460,460,460,460,460,460,460,460,460,460,,,460,460,,,460,460',
',39,,,39,,,39,,39,,,460,,460,39,460,460,460,460,460,460,460,39,460,',
',,39,39,39,39,39,39,,,,39,39,,,,,,,39,,,39,40,40,40,,40,39,39,,40,40',
',,,40,,40,40,40,40,40,40,40,,,,,,40,40,40,40,40,40,40,,,40,,,,,,,40',
',,40,40,40,40,40,40,40,,40,40,40,,40,40,,40,40,477,477,477,477,477,477',
'477,,,477,477,,,,,,,477,477,,40,,,40,,,40,,40,,,477,,477,40,477,477',
'477,477,477,477,477,40,477,,,,40,40,40,40,40,40,,,,40,40,,,,,,,40,,',
'40,792,792,792,,792,40,40,,792,792,,,,792,,792,792,792,792,792,792,792',
',,,,,792,792,792,792,792,792,792,,,792,,,,,,,792,,,792,792,792,792,792',
'792,792,,792,792,792,,792,792,,792,792,476,476,476,476,476,476,476,',
',476,476,,,,,,,476,476,,792,,,792,,,792,,792,,,476,,476,792,476,476',
'476,476,476,476,476,792,476,,,,792,792,792,792,792,792,,,,792,792,,',
',,,,792,,,792,791,791,791,,791,792,792,,791,791,,,,791,,791,791,791',
'791,791,791,791,,,,,,791,791,791,791,791,791,791,,,791,,,,,,,791,,,791',
'791,791,791,791,791,791,,791,791,791,,791,791,,791,791,484,484,484,484',
'484,484,484,484,,484,484,,,,,,,484,484,,791,,,791,,,791,,791,,,484,',
'484,791,484,484,484,484,484,484,484,791,484,,,,791,791,791,791,791,791',
',,,791,791,,,,,,,791,,,791,780,780,780,,780,791,791,,780,780,,,,780',
',780,780,780,780,780,780,780,,,,,,780,780,780,780,780,780,780,,,780',
',,,,,,780,,,780,780,780,780,780,780,780,,780,780,780,,780,780,,780,780',
'461,461,461,461,461,461,461,461,461,461,461,,,461,461,,,461,461,,780',
',,780,,,780,,780,,,461,,461,780,461,461,461,461,461,461,461,780,461',
',,,780,780,780,780,780,780,,,,780,780,,,,,,,780,,,780,52,52,52,,52,780',
'780,,52,52,,,,52,,52,52,52,52,52,52,52,,,,,,52,52,52,52,52,52,52,,,52',
',,,,,,52,,,52,52,52,52,52,52,52,,52,52,52,472,52,52,,52,52,,,,,,,,,',
',,472,472,,,,,,,,52,,,52,,472,52,472,52,472,472,472,472,,52,472,,472',
',,,,52,,,,,52,52,52,52,52,52,,,,52,52,,,,,,,52,,,52,53,53,53,,53,52',
'52,,53,53,,,,53,,53,53,53,53,53,53,53,,,,,,53,53,53,53,53,53,53,,,53',
',,,,,,53,,,53,53,53,53,53,53,53,53,53,53,53,,53,53,,53,53,471,471,471',
'471,471,471,471,,,471,471,,,,,,,471,471,,53,,,53,,,53,,53,,53,471,,471',
'53,471,471,471,471,471,471,471,53,471,,,,53,53,53,53,53,53,,,,53,53',
',,,,,,53,,,53,54,54,54,,54,53,53,,54,54,,,,54,,54,54,54,54,54,54,54',
',,,,,54,54,54,54,54,54,54,,,54,,,,,,,54,,,54,54,54,54,54,54,54,54,54',
'54,54,,54,54,,54,54,483,483,483,483,483,483,483,,,483,483,,,,,,,483',
'483,,54,,,54,,,54,,54,,,483,,483,54,483,483,483,483,483,483,483,54,483',
',,,54,54,54,54,54,54,,,,54,54,,,,,,,54,,,54,779,779,779,,779,54,54,',
'779,779,,,,779,,779,779,779,779,779,779,779,,,,,,779,779,779,779,779',
'779,779,,,779,,,,,,,779,,,779,779,779,779,779,779,779,,779,779,779,474',
'779,779,,779,779,,,,,,,,,,,,474,474,,,,,,,,779,,,779,,474,779,474,779',
'474,474,474,474,,779,474,,474,,,,,779,,,,,779,779,779,779,779,779,,',
',779,779,,,,,,,779,,,779,778,778,778,,778,779,779,,778,778,,,,778,,778',
'778,778,778,778,778,778,,,,,,778,778,778,778,778,778,778,,,778,,,,,',
',778,,,778,778,778,778,778,778,778,,778,778,778,468,778,778,,778,778',
',,,,,,,,,,,468,468,,,,,,,,778,,,778,,468,778,468,778,468,468,468,468',
',778,,,,,,,,778,,,,,778,778,778,778,778,778,,,,778,778,,,,,,,778,,,778',
'57,57,57,,57,778,778,,57,57,,,,57,,57,57,57,57,57,57,57,,,,,,57,57,57',
'57,57,57,57,,,57,,,,,,,57,,,57,57,57,57,57,57,57,,57,57,57,469,57,57',
',57,57,,,,,,,,,,,,469,469,,,,,,,,57,,,57,,469,57,469,57,469,469,469',
'469,,57,,,,,,,,57,,,,,57,57,57,57,57,57,,,,57,57,,,,,,,57,,,57,58,58',
'58,,58,57,57,,58,58,,,,58,,58,58,58,58,58,58,58,,,,,,58,58,58,58,58',
'58,58,,,58,,,,,,,58,,,58,58,58,58,58,58,58,,58,58,58,470,58,58,,58,58',
',,,,,,,,,,,470,470,,,,,,,,58,,,58,,470,58,,58,470,470,470,470,,58,,',
',,,,,58,,,,,58,58,58,58,58,58,,,,58,58,,,,,,,58,,,58,61,61,61,,61,58',
'58,,61,61,,,,61,,61,61,61,61,61,61,61,,,,,,61,61,61,61,61,61,61,,,61',
',,,,,,61,,,61,61,61,61,61,61,61,,61,61,61,,61,61,,61,61,,,,,,,,,,,,',
',,,,,,,,61,,,61,,,61,,61,,,,,,61,,,,,,,,61,,,,,61,61,61,61,61,61,,,',
'61,61,61,,,,,61,61,,,61,62,62,62,,62,61,61,,62,62,,,,62,,62,62,62,62',
'62,62,62,,,,,,62,62,62,62,62,62,62,,,62,,,,,,,62,,,62,62,62,62,62,62',
'62,,62,62,62,,62,62,,926,,926,926,926,926,926,,,,,,,,,926,,,,,,,62,',
',62,,,62,,62,,62,,,,,,926,926,,,,,,926,926,926,926,62,62,62,62,62,62',
',,,62,62,,,,,,,62,,,62,63,63,63,,63,62,62,,63,63,,,,63,926,63,63,63',
'63,63,63,63,,,,,,63,63,63,63,63,63,63,,,63,,,,,,,63,,,63,63,63,63,63',
'63,63,,63,63,63,,63,63,,861,,861,861,861,861,861,,,,,,,,,861,,,,63,',
',63,,,63,,,63,,63,,,,,,,,861,,,,,,,861,861,861,861,63,63,63,63,63,63',
',,,63,63,,,,,,,63,,,63,772,772,772,772,772,63,63,,772,772,,,,772,861',
'772,772,772,772,772,772,772,,,,,,772,772,772,772,772,772,772,,,772,',
',,,,772,772,,772,772,772,772,772,772,772,772,,772,772,772,,772,772,',
'772,772,,,,,,,,,,,,,,,,,,,,,772,,,772,,,772,,772,,772,,,,772,,,,,,,',
'772,,,,,772,772,772,772,772,772,,,,772,772,,,,,,,772,,,772,758,758,758',
',758,772,772,,758,758,,,,758,,758,758,758,758,758,758,758,,,,,,758,758',
'758,758,758,758,758,,,758,,,,,,,758,,,758,758,758,758,758,758,758,,758',
'758,758,,758,758,,758,758,,,,,,,,,,,,,,,,,,,,,758,,,758,,,758,,758,',
',,,,758,,,,,,,,758,,,,,758,758,758,758,758,758,,,,758,758,,,,,,,758',
',,758,751,751,751,751,751,758,758,,751,751,,,,751,,751,751,751,751,751',
'751,751,,,,,,751,751,751,751,751,751,751,,,751,,,,,,751,751,,751,751',
'751,751,751,751,751,751,,751,751,751,,751,751,,751,751,,,,,,,,,,,,,',
',,,,,,,751,,,751,,,751,,751,,751,,,,751,,,,,,,,751,,,,,751,751,751,751',
'751,751,,,,751,751,,,,,,,751,,,751,750,750,750,750,750,751,751,,750',
'750,,,,750,,750,750,750,750,750,750,750,,,,,,750,750,750,750,750,750',
'750,,,750,,,,,,750,750,,750,750,750,750,750,750,750,750,,750,750,750',
',750,750,,750,750,,,,,,,,,,,,,,,,,,,,,750,,,750,,,750,,750,,750,,,,750',
',,,,,,,750,,,,,750,750,750,750,750,750,,,,750,750,,,,,,,750,,,750,746',
'746,746,746,746,750,750,,746,746,,,,746,,746,746,746,746,746,746,746',
',,,,,746,746,746,746,746,746,746,,,746,,,,,,746,746,,746,746,746,746',
'746,746,746,746,,746,746,746,,746,746,,746,746,,,,,,,,,,,,,,,,,,,,,746',
',,746,,,746,,746,,746,,,,746,,,,,,,,746,,,,,746,746,746,746,746,746',
',,,746,746,,,,,,,746,,,746,741,741,741,,741,746,746,,741,741,,,,741',
',741,741,741,741,741,741,741,,,,,,741,741,741,741,741,741,741,,,741',
',,,,,,741,,,741,741,741,741,741,741,741,,741,741,741,,741,741,,741,741',
',,,,,,,,,,,,,,,,,,,,741,,,741,,,741,,741,,,,,,741,,,,,,,,741,,,,,741',
'741,741,741,741,741,,,,741,741,,,,,,,741,,,741,84,84,84,,84,741,741',
',84,84,,,,84,,84,84,84,84,84,84,84,,84,,,,84,84,84,84,84,84,84,,,84',
',,,,,,84,,,84,84,84,84,84,84,84,84,84,84,84,,84,84,,84,84,,,,,,,,,,',
',,,,,,,,,,84,,,84,84,,84,,84,,84,,84,,84,,,,,,,,84,,84,,,84,84,84,84',
'84,84,,,,84,84,,,,,,,84,,,84,87,87,87,,87,84,84,,87,87,,,,87,,87,87',
'87,87,87,87,87,,87,,,,87,87,87,87,87,87,87,,,87,,,,,,,87,,,87,87,87',
'87,87,87,87,87,87,87,87,,87,87,,87,87,,,,,,,,,,,,,,,,,,,,,87,,,87,87',
',87,,87,,87,,87,,87,,,,,,,,87,,87,,,87,87,87,87,87,87,,,,87,87,,,,,',
',87,,,87,734,734,734,,734,87,87,,734,734,,,,734,,734,734,734,734,734',
'734,734,,,,,,734,734,734,734,734,734,734,,,734,,,,,,,734,,,734,734,734',
'734,734,734,734,,734,734,734,,734,734,,734,734,,,,,,,,,,,,,,,,,,,,,734',
',,734,,,734,,734,,734,,,,734,,,,,,,,734,,,,,734,734,734,734,734,734',
',,,734,734,,,,,,,734,,,734,99,99,99,99,99,734,734,,99,99,,,,99,,99,99',
'99,99,99,99,99,,,,,,99,99,99,99,99,99,99,,,99,,,,,,99,99,99,99,99,99',
'99,99,99,99,99,,99,99,99,,99,99,,99,99,,,,,,,,,,,,,,,,,,,,,99,,,99,',
',99,,99,,99,,,,99,,,,,,,,99,,,,,99,99,99,99,99,99,,,,99,99,,,,,,99,99',
',,99,103,103,103,,103,99,99,,103,103,,,,103,,103,103,103,103,103,103',
'103,,,,,,103,103,103,103,103,103,103,,,103,,,,,,,103,,,103,103,103,103',
'103,103,103,,103,103,103,,103,103,,103,103,,,,,,,,,,,,,,,,,,,,,103,',
',103,,,103,,103,,,,,,103,,,,,,,,103,,,,,103,103,103,103,103,103,,,,103',
'103,,,,,,,103,,,103,104,104,104,,104,103,103,,104,104,,,,104,,104,104',
'104,104,104,104,104,,,,,,104,104,104,104,104,104,104,,,104,,,,,,,104',
',,104,104,104,104,104,104,104,,104,104,104,,104,104,,104,104,,,,,,,',
',,,,,,,,,,,,,104,,,104,,,104,,104,,,,,,104,,,,,,,,104,,,,,104,104,104',
'104,104,104,,,,104,104,,,,,,,104,,,104,105,105,105,,105,104,104,,105',
'105,,,,105,,105,105,105,105,105,105,105,,,,,,105,105,105,105,105,105',
'105,,,105,,,,,,,105,,,105,105,105,105,105,105,105,,105,105,105,,105',
'105,,105,105,,,,,,,,,,,,,,,,,,,,,105,,,105,,,105,,105,,,,,,105,,,,,',
',,105,,,,,105,105,105,105,105,105,,,,105,105,,,,,,,105,,,105,106,106',
'106,,106,105,105,,106,106,,,,106,,106,106,106,106,106,106,106,,,,,,106',
'106,106,106,106,106,106,,,106,,,,,,,106,,,106,106,106,106,106,106,106',
',106,106,106,,106,106,,106,106,,,,,,,,,,,,,,,,,,,,,106,,,106,,,106,',
'106,,,,,,106,,,,,,,,106,,,,,106,106,106,106,106,106,,,,106,106,,,,,',
',106,,,106,107,107,107,107,107,106,106,,107,107,,,,107,,107,107,107',
'107,107,107,107,,,,,,107,107,107,107,107,107,107,,,107,,,,,,107,107',
',107,107,107,107,107,107,107,107,,107,107,107,,107,107,,107,107,,,,',
',,,,,,,,,,,,,,,,107,,,107,,,107,,107,,107,,,,107,,,,,,,,107,,,,,107',
'107,107,107,107,107,,,,107,107,,,,,,,107,,,107,108,108,108,108,108,107',
'107,,108,108,,,,108,,108,108,108,108,108,108,108,,,,,,108,108,108,108',
'108,108,108,,,108,,,,,,108,108,108,108,108,108,108,108,108,108,108,',
'108,108,108,,108,108,,108,108,,,,,,,,,,,,,,,,,,,,,108,,,108,,,108,,108',
',108,,,,108,,,,,,,,108,,,,,108,108,108,108,108,108,,,,108,108,,,,,,',
'108,,,108,708,708,708,708,708,108,108,,708,708,,,,708,,708,708,708,708',
'708,708,708,,,,,,708,708,708,708,708,708,708,,,708,,,,,,708,708,,708',
'708,708,708,708,708,708,708,,708,708,708,,708,708,,708,708,,,,,,,,,',
',,,,,,,,,,,708,,,708,,,708,,708,,708,,,,708,,,,,,,,708,,,,,708,708,708',
'708,708,708,,,,708,708,,,,,,,708,,,708,707,707,707,707,707,708,708,',
'707,707,,,,707,,707,707,707,707,707,707,707,,,,,,707,707,707,707,707',
'707,707,,,707,,,,,,707,707,,707,707,707,707,707,707,707,707,,707,707',
'707,,707,707,,707,707,,,,,,,,,,,,,,,,,,,,,707,,,707,,,707,,707,,707',
',,,707,,,,,,,,707,,,,,707,707,707,707,707,707,,,,707,707,,,,,,,707,',
',707,701,701,701,,701,707,707,,701,701,,,,701,,701,701,701,701,701,701',
'701,,,,,,701,701,701,701,701,701,701,,,701,,,,,,,701,,,701,701,701,701',
'701,701,701,,701,701,701,,701,701,,701,701,,,,,,,,,,,,,,,,,,,,,701,',
',701,,,701,,701,,701,,,,701,,,,,,,,701,,,,,701,701,701,701,701,701,',
',,701,701,,,,,,,701,,,701,195,195,195,195,195,701,701,,195,195,,,,195',
',195,195,195,195,195,195,195,,,,,,195,195,195,195,195,195,195,,,195',
',,,,,195,195,,195,195,195,195,195,195,195,195,,195,195,195,,195,195',
',195,195,,,,,,,,,,,,,,,,,,,,,195,,,195,,,195,,195,,195,,,,195,,,,,,',
',195,,,,,195,195,195,195,195,195,,,,195,195,,,,,,,195,,,195,350,350',
'350,,350,195,195,,350,350,,,,350,,350,350,350,350,350,350,350,,,,,,350',
'350,350,350,350,350,350,,,350,,,,,,,350,,,350,350,350,350,350,350,350',
',350,350,350,,350,350,,350,350,,,,,,,,,,,,,,,,,,,,,350,,,350,,,350,',
'350,,,,,,350,,,,,,,,350,,,,,350,350,350,350,350,350,,,,350,350,,,,,',
',350,,,350,197,197,197,,197,350,350,,197,197,,,,197,,197,197,197,197',
'197,197,197,,,,,,197,197,197,197,197,197,197,,,197,,,,,,,197,,,197,197',
'197,197,197,197,197,,197,197,197,,197,197,,197,197,,,,,,,,,,,,,,,,,',
',,,197,,,197,,,197,,197,,197,,,,197,,,,,,,,197,,,,,197,197,197,197,197',
'197,,,,197,197,,,,,,,197,,,197,198,198,198,,198,197,197,,198,198,,,',
'198,,198,198,198,198,198,198,198,,,,,,198,198,198,198,198,198,198,,',
'198,,,,,,,198,,,198,198,198,198,198,198,198,,198,198,198,,198,198,,198',
'198,,,,,,,,,,,,,,,,,,,,,198,,,198,,,198,,198,,,,,,198,,,,,,,,198,,,',
',198,198,198,198,198,198,,,,198,198,,,,,,,198,,,198,199,199,199,,199',
'198,198,,199,199,,,,199,,199,199,199,199,199,199,199,,,,,,199,199,199',
'199,199,199,199,,,199,,,,,,,199,,,199,199,199,199,199,199,199,199,199',
'199,199,,199,199,,199,199,,,,,,,,,,,,,,,,,,,,,199,,,199,,,199,,199,',
'199,,,,199,,,,,,,,199,,,,,199,199,199,199,199,199,,,,199,199,,,,,,,199',
',,199,200,200,200,,200,199,199,,200,200,,,,200,,200,200,200,200,200',
'200,200,,,,,,200,200,200,200,200,200,200,,,200,,,,,,,200,,,200,200,200',
'200,200,200,200,200,200,200,200,,200,200,,200,200,,,,,,,,,,,,,,,,,,',
',,200,,,200,,,200,,200,,200,,,,200,,,,,,,,200,,,,,200,200,200,200,200',
'200,,,,200,200,,,,,,,200,,,200,695,695,695,,695,200,200,,695,695,,,',
'695,,695,695,695,695,695,695,695,,,,,,695,695,695,695,695,695,695,,',
'695,,,,,,,695,,,695,695,695,695,695,695,695,,695,695,695,,695,695,,',
',,,,,,,,,,,,,,,,,,,,,695,,,695,,,695,,695,,,,,,,,,,,,,,,,,,,695,695',
'695,695,695,695,,,,695,695,,,,,,,695,,,695,683,683,683,,683,695,695',
',683,683,,,,683,,683,683,683,683,683,683,683,,,,,,683,683,683,683,683',
'683,683,,,683,,,,,,,683,,,683,683,683,683,683,683,683,,683,683,683,',
'683,683,,,,,,,,,,,,,,,,,,,,,,,,683,,,683,,,683,,683,,,,,,,,,,,,,,,,',
',,683,683,683,683,683,683,,,,683,683,,,,,,,683,,,683,679,679,679,679',
'679,683,683,,679,679,,,,679,,679,679,679,679,679,679,679,,,,,,679,679',
'679,679,679,679,679,,,679,,,,,,679,679,,679,679,679,679,679,679,679',
'679,,679,679,679,,679,679,,679,679,,,,,,,,,,,,,,,,,,,,,679,,,679,,,679',
',679,,679,,,,679,,,,,,,,679,,,,,679,679,679,679,679,679,,,,679,679,',
',,,,,679,,,679,204,204,204,,204,679,679,,204,204,,,,204,,204,204,204',
'204,204,204,204,,,,,,204,204,204,204,204,204,204,,,204,,,,,,,204,,,204',
'204,204,204,204,204,204,,204,204,204,,204,204,,204,204,,,,,,,,,,,,,',
',,,,,,,204,,,204,,,204,,204,,,,,,204,,,,,,,,204,,,,,204,204,204,204',
'204,204,,,,204,204,,,,,,,204,,,204,205,205,205,,205,204,204,,205,205',
',,,205,,205,205,205,205,205,205,205,,,,,,205,205,205,205,205,205,205',
',,205,,,,,,,205,,,205,205,205,205,205,205,205,,205,205,205,,205,205',
',205,205,,,,,,,,,,,,,,,,,,,,,205,,,205,,,205,,205,,,,,,205,,,,,,,,205',
',,,,205,205,205,205,205,205,,,,205,205,,,,,,,205,,,205,206,206,206,',
'206,205,205,,206,206,,,,206,,206,206,206,206,206,206,206,,,,,,206,206',
'206,206,206,206,206,,,206,,,,,,,206,,,206,206,206,206,206,206,206,,206',
'206,206,,206,206,,206,206,,,,,,,,,,,,,,,,,,,,,206,,,206,,,206,,206,',
',,,,206,,,,,,,,206,,,,,206,206,206,206,206,206,,,,206,206,,,,,,,206',
',,206,678,678,678,678,678,206,206,,678,678,,,,678,,678,678,678,678,678',
'678,678,,,,,,678,678,678,678,678,678,678,,,678,,,,,,678,678,,678,678',
'678,678,678,678,678,678,,678,678,678,,678,678,,678,678,,,,,,,,,,,,,',
',,,,,,,678,,,678,,,678,,678,,678,,,,678,,,,,,,,678,,,,,678,678,678,678',
'678,678,,,,678,678,,,,,,,678,,,678,672,672,672,,672,678,678,,672,672',
',,,672,,672,672,672,672,672,672,672,,,,,,672,672,672,672,672,672,672',
',,672,,,,,,,672,,,672,672,672,672,672,672,672,672,672,672,672,,672,672',
',672,672,,,,,,,,,,,,,,,,,,,,,672,,,672,,,672,,672,,,,672,,672,,,,,,',
',672,,,,,672,672,672,672,672,672,,,,672,672,,,,,,,672,,,672,671,671',
'671,,671,672,672,,671,671,,,,671,,671,671,671,671,671,671,671,,,,,,671',
'671,671,671,671,671,671,,,671,,,,,,,671,,,671,671,671,671,671,671,671',
'671,671,671,671,,671,671,,671,671,,,,,,,,,,,,,,,,,,,,,671,,,671,,,671',
',671,,671,,671,,671,,,,,,,,671,,,,,671,671,671,671,671,671,,,,671,671',
',,,,,,671,,,671,668,668,668,668,668,671,671,,668,668,,,,668,,668,668',
'668,668,668,668,668,,,,,,668,668,668,668,668,668,668,,,668,,,,,,668',
'668,,668,668,668,668,668,668,668,668,,668,668,668,,668,668,,668,668',
',,,,,,,,,,,,,,,,,,,,668,,,668,,,668,,668,,668,,,,668,,,,,,,,668,,,,',
'668,668,668,668,668,668,,,,668,668,,,,,,,668,,,668,661,661,661,,661',
'668,668,,661,661,,,,661,,661,661,661,661,661,661,661,,,,,,661,661,661',
'661,661,661,661,,,661,,,,,,,661,,,661,661,661,661,661,661,661,,661,661',
'661,,661,661,,661,661,,,,,,,,,,,,,,,,,,,,,661,,,661,,,661,,661,,,,,',
'661,,,,,,,,661,,,,,661,661,661,661,661,661,,,,661,661,,,,,,,661,,,661',
'658,658,658,,658,661,661,,658,658,,,,658,,658,658,658,658,658,658,658',
',,,,,658,658,658,658,658,658,658,,,658,,,,,,,658,,,658,658,658,658,658',
'658,658,,658,658,658,,658,658,,658,658,,,,,,,,,,,,,,,,,,,,,658,,,658',
',,658,,658,,,,,,658,,,,,,,,658,,,,,658,658,658,658,658,658,,,,658,658',
',,,,,,658,,,658,214,214,214,214,214,658,658,,214,214,,,,214,,214,214',
'214,214,214,214,214,,,,,,214,214,214,214,214,214,214,,,214,,,,,,214',
'214,,214,214,214,214,214,214,214,214,,214,214,214,,214,214,,214,214',
',,,,,,,,,,,,,,,,,,,,214,,,214,,,214,,214,,214,,,,214,,,,,,,,214,,,,',
'214,214,214,214,214,214,,,,214,214,,,,,,,214,,,214,215,215,215,,215',
'214,214,,215,215,,,,215,,215,215,215,215,215,215,215,,,,,,215,215,215',
'215,215,215,215,,,215,,,,,,,215,,,215,215,215,215,215,215,215,,215,215',
'215,,215,215,,215,215,,,,,,,,,,,,,,,,,,,,,215,,,215,,215,215,,215,,',
',,,215,,,,,,,,215,,,,,215,215,215,215,215,215,,,,215,215,,,,,,,215,',
',215,218,218,218,,218,215,215,,218,218,,,,218,,218,218,218,218,218,218',
'218,,,,,,218,218,218,218,218,218,218,,,218,,,,,,,218,,,218,218,218,218',
'218,218,218,,218,218,218,,218,218,,218,218,,,,,,,,,,,,,,,,,,,,,218,',
',218,,,218,,218,,,,,,218,,,,,,,,218,,,,,218,218,218,218,218,218,,,,218',
'218,,,,,,,218,,,218,654,654,654,654,654,218,218,,654,654,,,,654,,654',
'654,654,654,654,654,654,,,,,,654,654,654,654,654,654,654,,,654,,,,,',
'654,654,,654,654,654,654,654,654,654,654,,654,654,654,,654,654,,654',
'654,,,,,,,,,,,,,,,,,,,,,654,,,654,,,654,,654,,654,,,,654,,,,,,,,654',
',,,,654,654,654,654,654,654,,,,654,654,,,,,,,654,,,654,220,220,220,',
'220,654,654,,220,220,,,,220,,220,220,220,220,220,220,220,,,,,,220,220',
'220,220,220,220,220,,,220,,,,,,,220,,,220,220,220,220,220,220,220,,220',
'220,220,,220,220,,220,220,,,,,,,,,,,,,,,,,,,,,220,,,220,,,220,,220,',
',,,,220,,,,,,,,220,,,,,220,220,220,220,220,220,,,,220,220,,,,,,,220',
',,220,221,221,221,,221,220,220,,221,221,,,,221,,221,221,221,221,221',
'221,221,,,,,,221,221,221,221,221,221,221,,,221,,,,,,,221,,,221,221,221',
'221,221,221,221,,221,221,221,,221,221,,221,221,,,,,,,,,,,,,,,,,,,,,221',
',,221,,,221,,221,,,,,,221,,,,,,,,221,,,,,221,221,221,221,221,221,,,',
'221,221,,,,,,,221,,,221,222,222,222,,222,221,221,,222,222,,,,222,,222',
'222,222,222,222,222,222,,,,,,222,222,222,222,222,222,222,,,222,,,,,',
',222,,,222,222,222,222,222,222,222,,222,222,222,,222,222,,222,222,,',
',,,,,,,,,,,,,,,,,,222,,,222,,,222,,222,,,,,,222,,,,,,,,222,,,,,222,222',
'222,222,222,222,,,,222,222,,,,,,,222,,,222,223,223,223,,223,222,222',
',223,223,,,,223,,223,223,223,223,223,223,223,,,,,,223,223,223,223,223',
'223,223,,,223,,,,,,,223,,,223,223,223,223,223,223,223,,223,223,223,',
'223,223,,223,223,,,,,,,,,,,,,,,,,,,,,223,,,223,,,223,,223,,,,,,223,',
',,,,,,223,,,,,223,223,223,223,223,223,,,,223,223,,,,,,,223,,,223,224',
'224,224,,224,223,223,,224,224,,,,224,,224,224,224,224,224,224,224,,',
',,,224,224,224,224,224,224,224,,,224,,,,,,,224,,,224,224,224,224,224',
'224,224,,224,224,224,,224,224,,224,224,,,,,,,,,,,,,,,,,,,,,224,,,224',
',,224,,224,,,,,,224,,,,,,,,224,,,,,224,224,224,224,224,224,,,,224,224',
',,,,,,224,,,224,225,225,225,,225,224,224,,225,225,,,,225,,225,225,225',
'225,225,225,225,,,,,,225,225,225,225,225,225,225,,,225,,,,,,,225,,,225',
'225,225,225,225,225,225,,225,225,225,,225,225,,225,225,,,,,,,,,,,,,',
',,,,,,,225,,,225,,,225,,225,,,,,,225,,,,,,,,225,,,,,225,225,225,225',
'225,225,,,,225,225,,,,,,,225,,,225,226,226,226,,226,225,225,,226,226',
',,,226,,226,226,226,226,226,226,226,,,,,,226,226,226,226,226,226,226',
',,226,,,,,,,226,,,226,226,226,226,226,226,226,,226,226,226,,226,226',
',226,226,,,,,,,,,,,,,,,,,,,,,226,,,226,,,226,,226,,,,,,226,,,,,,,,226',
',,,,226,226,226,226,226,226,,,,226,226,,,,,,,226,,,226,227,227,227,',
'227,226,226,,227,227,,,,227,,227,227,227,227,227,227,227,,,,,,227,227',
'227,227,227,227,227,,,227,,,,,,,227,,,227,227,227,227,227,227,227,,227',
'227,227,,227,227,,227,227,,,,,,,,,,,,,,,,,,,,,227,,,227,,,227,,227,',
',,,,227,,,,,,,,227,,,,,227,227,227,227,227,227,,,,227,227,,,,,,,227',
',,227,228,228,228,,228,227,227,,228,228,,,,228,,228,228,228,228,228',
'228,228,,,,,,228,228,228,228,228,228,228,,,228,,,,,,,228,,,228,228,228',
'228,228,228,228,,228,228,228,,228,228,,228,228,,,,,,,,,,,,,,,,,,,,,228',
',,228,,,228,,228,,,,,,228,,,,,,,,228,,,,,228,228,228,228,228,228,,,',
'228,228,,,,,,,228,,,228,229,229,229,,229,228,228,,229,229,,,,229,,229',
'229,229,229,229,229,229,,,,,,229,229,229,229,229,229,229,,,229,,,,,',
',229,,,229,229,229,229,229,229,229,,229,229,229,,229,229,,229,229,,',
',,,,,,,,,,,,,,,,,,229,,,229,,,229,,229,,,,,,229,,,,,,,,229,,,,,229,229',
'229,229,229,229,,,,229,229,,,,,,,229,,,229,230,230,230,,230,229,229',
',230,230,,,,230,,230,230,230,230,230,230,230,,,,,,230,230,230,230,230',
'230,230,,,230,,,,,,,230,,,230,230,230,230,230,230,230,,230,230,230,',
'230,230,,230,230,,,,,,,,,,,,,,,,,,,,,230,,,230,,,230,,230,,,,,,230,',
',,,,,,230,,,,,230,230,230,230,230,230,,,,230,230,,,,,,,230,,,230,231',
'231,231,,231,230,230,,231,231,,,,231,,231,231,231,231,231,231,231,,',
',,,231,231,231,231,231,231,231,,,231,,,,,,,231,,,231,231,231,231,231',
'231,231,,231,231,231,,231,231,,231,231,,,,,,,,,,,,,,,,,,,,,231,,,231',
',,231,,231,,,,,,231,,,,,,,,231,,,,,231,231,231,231,231,231,,,,231,231',
',,,,,,231,,,231,232,232,232,,232,231,231,,232,232,,,,232,,232,232,232',
'232,232,232,232,,,,,,232,232,232,232,232,232,232,,,232,,,,,,,232,,,232',
'232,232,232,232,232,232,,232,232,232,,232,232,,232,232,,,,,,,,,,,,,',
',,,,,,,232,,,232,,,232,,232,,,,,,232,,,,,,,,232,,,,,232,232,232,232',
'232,232,,,,232,232,,,,,,,232,,,232,233,233,233,,233,232,232,,233,233',
',,,233,,233,233,233,233,233,233,233,,,,,,233,233,233,233,233,233,233',
',,233,,,,,,,233,,,233,233,233,233,233,233,233,,233,233,233,,233,233',
',233,233,,,,,,,,,,,,,,,,,,,,,233,,,233,,,233,,233,,,,,,233,,,,,,,,233',
',,,,233,233,233,233,233,233,,,,233,233,,,,,,,233,,,233,234,234,234,',
'234,233,233,,234,234,,,,234,,234,234,234,234,234,234,234,,,,,,234,234',
'234,234,234,234,234,,,234,,,,,,,234,,,234,234,234,234,234,234,234,,234',
'234,234,,234,234,,234,234,,,,,,,,,,,,,,,,,,,,,234,,,234,,,234,,234,',
',,,,234,,,,,,,,234,,,,,234,234,234,234,234,234,,,,234,234,,,,,,,234',
',,234,235,235,235,,235,234,234,,235,235,,,,235,,235,235,235,235,235',
'235,235,,,,,,235,235,235,235,235,235,235,,,235,,,,,,,235,,,235,235,235',
'235,235,235,235,,235,235,235,,235,235,,235,235,,,,,,,,,,,,,,,,,,,,,235',
',,235,,,235,,235,,,,,,235,,,,,,,,235,,,,,235,235,235,235,235,235,,,',
'235,235,,,,,,,235,,,235,236,236,236,,236,235,235,,236,236,,,,236,,236',
'236,236,236,236,236,236,,,,,,236,236,236,236,236,236,236,,,236,,,,,',
',236,,,236,236,236,236,236,236,236,,236,236,236,,236,236,,236,236,,',
',,,,,,,,,,,,,,,,,,236,,,236,,,236,,236,,,,,,236,,,,,,,,236,,,,,236,236',
'236,236,236,236,,,,236,236,,,,,,,236,,,236,237,237,237,,237,236,236',
',237,237,,,,237,,237,237,237,237,237,237,237,,,,,,237,237,237,237,237',
'237,237,,,237,,,,,,,237,,,237,237,237,237,237,237,237,,237,237,237,',
'237,237,,237,237,,,,,,,,,,,,,,,,,,,,,237,,,237,,,237,,237,,,,,,237,',
',,,,,,237,,,,,237,237,237,237,237,237,,,,237,237,,,,,,,237,,,237,238',
'238,238,,238,237,237,,238,238,,,,238,,238,238,238,238,238,238,238,,',
',,,238,238,238,238,238,238,238,,,238,,,,,,,238,,,238,238,238,238,238',
'238,238,,238,238,238,,238,238,,238,238,,,,,,,,,,,,,,,,,,,,,238,,,238',
',,238,,238,,,,,,238,,,,,,,,238,,,,,238,238,238,238,238,238,,,,238,238',
',,,,,,238,,,238,239,239,239,,239,238,238,,239,239,,,,239,,239,239,239',
'239,239,239,239,,,,,,239,239,239,239,239,239,239,,,239,,,,,,,239,,,239',
'239,239,239,239,239,239,,239,239,239,,239,239,,239,239,,,,,,,,,,,,,',
',,,,,,,239,,,239,,,239,,239,,,,,,239,,,,,,,,239,,,,,239,239,239,239',
'239,239,,,,239,239,,,,,,,239,,,239,240,240,240,,240,239,239,,240,240',
',,,240,,240,240,240,240,240,240,240,,,,,,240,240,240,240,240,240,240',
',,240,,,,,,,240,,,240,240,240,240,240,240,240,,240,240,240,,240,240',
',240,240,,,,,,,,,,,,,,,,,,,,,240,,,240,,,240,,240,,,,,,240,,,,,,,,240',
',,,,240,240,240,240,240,240,,,,240,240,,,,,,,240,,,240,241,241,241,',
'241,240,240,,241,241,,,,241,,241,241,241,241,241,241,241,,,,,,241,241',
'241,241,241,241,241,,,241,,,,,,,241,,,241,241,241,241,241,241,241,,241',
'241,241,,241,241,,241,241,,,,,,,,,,,,,,,,,,,,,241,,,241,,,241,,241,',
',,,,241,,,,,,,,241,,,,,241,241,241,241,241,241,,,,241,241,,,,,,,241',
',,241,242,242,242,,242,241,241,,242,242,,,,242,,242,242,242,242,242',
'242,242,,,,,,242,242,242,242,242,242,242,,,242,,,,,,,242,,,242,242,242',
'242,242,242,242,,242,242,242,,242,242,,242,242,,,,,,,,,,,,,,,,,,,,,242',
',,242,,,242,,242,,,,,,242,,,,,,,,242,,,,,242,242,242,242,242,242,,,',
'242,242,,,,,,,242,,,242,243,243,243,,243,242,242,,243,243,,,,243,,243',
'243,243,243,243,243,243,,,,,,243,243,243,243,243,243,243,,,243,,,,,',
',243,,,243,243,243,243,243,243,243,,243,243,243,,243,243,,243,243,,',
',,,,,,,,,,,,,,,,,,243,,,243,,,243,,243,,,,,,243,,,,,,,,243,,,,,243,243',
'243,243,243,243,,,,243,243,,,,,,,243,,,243,244,244,244,,244,243,243',
',244,244,,,,244,,244,244,244,244,244,244,244,,,,,,244,244,244,244,244',
'244,244,,,244,,,,,,,244,,,244,244,244,244,244,244,244,,244,244,244,',
'244,244,,244,244,,,,,,,,,,,,,,,,,,,,,244,,,244,,,244,,244,,,,,,244,',
',,,,,,244,,,,,244,244,244,244,244,244,,,,244,244,,,,,,,244,,,244,639',
'639,639,,639,244,244,,639,639,,,,639,,639,639,639,639,639,639,639,,',
',,,639,639,639,639,639,639,639,,,639,,,,,,,639,,,639,639,639,639,639',
'639,639,,639,639,639,,639,639,,639,639,,,,,,,,,,,,,,,,,,,,,639,,,639',
',,639,,639,,,,,,639,,,,,,,,639,,,,,639,639,639,639,639,639,,,,639,639',
',,,,,,639,,,639,636,636,636,,636,639,639,,636,636,,,,636,,636,636,636',
'636,636,636,636,,,,,,636,636,636,636,636,636,636,,,636,,,,,,,636,,,636',
'636,636,636,636,636,636,,636,636,636,,636,636,,636,636,,,,,,,,,,,,,',
',,,,,,,636,,,636,,,636,,636,,,,,,636,,,,,,,,636,,,,,636,636,636,636',
'636,636,,,,636,636,,,,,,,636,,,636,631,631,631,,631,636,636,,631,631',
',,,631,,631,631,631,631,631,631,631,,,,,,631,631,631,631,631,631,631',
',,631,,,,,,,631,,,631,631,631,631,631,631,631,,631,631,631,,631,631',
',631,631,,,,,,,,,,,,,,,,,,,,,631,,,631,,,631,,631,,,,,,631,,,,,,,,631',
',,,,631,631,631,631,631,631,,,,631,631,,,,,,,631,,,631,254,254,254,',
'254,631,631,,254,254,,,,254,,254,254,254,254,254,254,254,,,,,,254,254',
'254,254,254,254,254,,,254,,,,,,,254,,,254,254,254,254,254,254,254,,254',
'254,254,,254,254,,254,254,,,,,,,,,,,,,,,,,,,,,254,,,254,,,254,,254,',
',,,,254,,,,,,,,254,,,,,254,254,254,254,254,254,,,,254,254,,,,,,,254',
',,254,630,630,630,,630,254,254,,630,630,,,,630,,630,630,630,630,630',
'630,630,,,,,,630,630,630,630,630,630,630,,,630,,,,,,,630,,,630,630,630',
'630,630,630,630,,630,630,630,,630,630,,630,630,,,,,,,,,,,,,,,,,,,,,630',
',,630,,,630,,630,,,,,,630,,,,,,,,630,,,,,630,630,630,630,630,630,,,',
'630,630,,,,,,,630,,,630,256,256,256,,256,630,630,,256,256,,,,256,,256',
'256,256,256,256,256,256,,,,,,256,256,256,256,256,256,256,,,256,,,,,',
',256,,,256,256,256,256,256,256,256,,256,256,256,,256,256,,256,256,,',
',,,,,,,,,,,,,,,,,,256,,,256,,,256,,256,,,,,,256,,,,,,,,256,,,,,256,256',
'256,256,256,256,,,,256,256,,,,,,,256,,,256,262,262,262,,262,256,256',
',262,262,,,,262,,262,262,262,262,262,262,262,,,,,,262,262,262,262,262',
'262,262,,,262,,,,,,,262,,,262,262,262,262,262,262,262,,262,262,262,',
'262,262,,262,262,,,,,,,,,,,,,,,,,,,,,262,,,262,,,262,,262,,,,,,262,',
',,,,,,262,,,,,262,262,262,262,262,262,,,,262,262,,,,,,,262,,,262,627',
'627,627,,627,262,262,,627,627,,,,627,,627,627,627,627,627,627,627,,',
',,,627,627,627,627,627,627,627,,,627,,,,,,,627,,,627,627,627,627,627',
'627,627,,627,627,627,,627,627,,627,627,,,,,,,,,,,,,,,,,,,,,627,,,627',
',,627,,627,,627,,,,627,,,,,,,,627,,,,,627,627,627,627,627,627,,,,627',
'627,,,,,,,627,,,627,625,625,625,,625,627,627,,625,625,,,,625,,625,625',
'625,625,625,625,625,,,,,,625,625,625,625,625,625,625,,,625,,,,,,,625',
',,625,625,625,625,625,625,625,,625,625,625,,625,625,,625,625,,,,,,,',
',,,,,,,,,,,,,625,,,625,,,625,,625,,,,,,625,,,,,,,,625,,,,,625,625,625',
'625,625,625,,,,625,625,,,,,,,625,,,625,598,598,598,,598,625,625,,598',
'598,,,,598,,598,598,598,598,598,598,598,,,,,,598,598,598,598,598,598',
'598,,,598,,,,,,,598,,,598,598,598,598,598,598,598,,598,598,598,,598',
'598,,598,598,,,,,,,,,,,,,,,,,,,,,598,,,598,,,598,,598,,,,,,598,,,,,',
',,598,,,,,598,598,598,598,598,598,,,,598,598,,,,,,,598,,,598,596,596',
'596,,596,598,598,,596,596,,,,596,,596,596,596,596,596,596,596,,,,,,596',
'596,596,596,596,596,596,,,596,,,,,,,596,,,596,596,596,596,596,596,596',
',596,596,596,,596,596,,596,596,,,,,,,,,,,,,,,,,,,,,596,,,596,,,596,',
'596,,,,,,596,,,,,,,,596,,,,,596,596,596,596,596,596,,,,596,596,,,,,',
',596,,,596,269,269,269,,269,596,596,,269,269,,,,269,,269,269,269,269',
'269,269,269,,,,,,269,269,269,269,269,269,269,,,269,,,,,,,269,,,269,269',
'269,269,269,269,269,269,269,269,269,,269,269,,269,269,,,,,,,,,,,,,,',
',,,,,,269,,,269,,,269,,269,,269,,269,,269,,,,,,,,269,,,,,269,269,269',
'269,269,269,,,,269,269,,,,,,,269,,,269,270,270,270,,270,269,269,,270',
'270,,,,270,,270,270,270,270,270,270,270,,,,,,270,270,270,270,270,270',
'270,,,270,,,,,,,270,,,270,270,270,270,270,270,270,270,270,270,270,,270',
'270,,270,270,,,,,,,,,,,,,,,,,,,,,270,,,270,,,270,,270,,270,,270,,270',
',,,,,,,270,,,,,270,270,270,270,270,270,,,,270,270,,,,,,,270,,,270,278',
'278,278,,278,270,270,,278,278,,,,278,,278,278,278,278,278,278,278,,',
',,,278,278,278,278,278,278,278,,,278,,,,,,,278,,,278,278,278,278,278',
'278,278,278,278,278,278,,278,278,,278,278,,,,,,,,,,,,,,,,,,,,,278,,',
'278,,278,278,,278,,278,,278,,278,,,,,,,,278,,,,,278,278,278,278,278',
'278,,,,278,278,,,,,,,278,,,278,592,592,592,,592,278,278,,592,592,,,',
'592,,592,592,592,592,592,592,592,,,,,,592,592,592,592,592,592,592,,',
'592,,,,,,,592,,,592,592,592,592,592,592,592,592,592,592,592,,592,592',
',592,592,,,,,,,,,,,,,,,,,,,,,592,,,592,,,592,,592,,592,,,,592,,,,,,',
',592,,,,,592,592,592,592,592,592,,,,592,592,,,,,,,592,,,592,586,586',
'586,,586,592,592,,586,586,,,,586,,586,586,586,586,586,586,586,,,,,,586',
'586,586,586,586,586,586,,,586,,,,,,,586,,,586,586,586,586,586,586,586',
'586,586,586,586,,586,586,,586,586,,,,,,,,,,,,,,,,,,,,,586,,,586,,,586',
',586,,586,,,,586,,,,,,,,586,,,,,586,586,586,586,586,586,,,,586,586,',
',,,,,586,,,586,583,583,583,,583,586,586,,583,583,,,,583,,583,583,583',
'583,583,583,583,,,,,,583,583,583,583,583,583,583,,,583,,,,,,,583,,,583',
'583,583,583,583,583,583,583,583,583,583,,583,583,,583,583,,,,,,,,,,',
',,,,,,,,,,583,,,583,,,583,,583,,583,,,,583,,,,,,,,583,,,,,583,583,583',
'583,583,583,,,,583,583,,,,,,,583,,,583,282,282,282,282,282,583,583,',
'282,282,,,,282,,282,282,282,282,282,282,282,,,,,,282,282,282,282,282',
'282,282,,,282,,,,,,282,282,,282,282,282,282,282,282,282,282,,282,282',
'282,,282,282,,282,282,,,,,,,,,,,,,,,,,,,,,282,,,282,,,282,,282,,282',
',,,282,,,,,,,,282,,,,,282,282,282,282,282,282,,,,282,282,,,,,,,282,',
',282,581,581,581,581,581,282,282,,581,581,,,,581,,581,581,581,581,581',
'581,581,,,,,,581,581,581,581,581,581,581,,,581,,,,,,581,581,,581,581',
'581,581,581,581,581,581,,581,581,581,,581,581,,581,581,,,,,,,,,,,,,',
',,,,,,,581,,,581,,,581,,581,,581,,,,581,,,,,,,,581,,,,,581,581,581,581',
'581,581,,,,581,581,,,,,,,581,,,581,576,576,576,576,576,581,581,,576',
'576,,,,576,,576,576,576,576,576,576,576,,,,,,576,576,576,576,576,576',
'576,,,576,,,,,,576,576,,576,576,576,576,576,576,576,576,,576,576,576',
',576,576,,576,576,,,,,,,,,,,,,,,,,,,,,576,,,576,,,576,,576,,576,,,,576',
',,,,,,,576,,,,,576,576,576,576,576,576,,,,576,576,,,,,,,576,,,576,572',
'572,572,572,572,576,576,,572,572,,,,572,,572,572,572,572,572,572,572',
',,,,,572,572,572,572,572,572,572,,,572,,,,,,572,572,,572,572,572,572',
'572,572,572,572,,572,572,572,,572,572,,572,572,,,,,,,,,,,,,,,,,,,,,572',
',,572,,,572,,572,,572,,,,572,,,,,,,,572,,,,,572,572,572,572,572,572',
',,,572,572,,,,,,,572,,,572,286,286,286,,286,572,572,,286,286,,,,286',
',286,286,286,286,286,286,286,,,,,,286,286,286,286,286,286,286,,,286',
',,,,,,286,,,286,286,286,286,286,286,286,,286,286,286,,286,286,,,,,,',
',,,,,,,,,,,,,,,,,286,,,286,,,286,,286,,,,,,,,,,,,,,,,,,,286,286,286',
'286,286,286,,,,286,286,,,,286,,,286,,,286,287,287,287,287,287,286,286',
',287,287,,,,287,,287,287,287,287,287,287,287,,,,,,287,287,287,287,287',
'287,287,,,287,,,,,,287,287,,287,287,287,287,287,287,287,287,,287,287',
'287,,287,287,,287,287,,,,,,,,,,,,,,,,,,,,,287,,,287,,,287,,287,,287',
',,,287,,,,,,,,287,,,,,287,287,287,287,287,287,,,,287,287,,,,,,,287,',
',287,558,558,558,,558,287,287,,558,558,,,,558,,558,558,558,558,558,558',
'558,,,,,,558,558,558,558,558,558,558,,,558,,,,,,,558,,,558,558,558,558',
'558,558,558,,558,558,558,,558,558,,,,,,,,,,,,,,,,,,,,,,,,558,,,558,',
',558,,558,,,,,,,,,,,,,,,,,,,558,558,558,558,558,558,,,,558,558,,,,,',
',558,,,558,548,548,548,,548,558,558,,548,548,,,,548,,548,548,548,548',
'548,548,548,,,,,,548,548,548,548,548,548,548,,,548,,,,,,,548,,,548,548',
'548,548,548,548,548,548,548,548,548,,548,548,,548,548,,,,,,,,,,,,,,',
',,,,,,548,,,548,,,548,,548,,,,,,548,,,,,,,,548,,,,,548,548,548,548,548',
'548,,,,548,548,,,,,,,548,,,548,545,545,545,,545,548,548,,545,545,,,',
'545,,545,545,545,545,545,545,545,,,,,,545,545,545,545,545,545,545,,',
'545,,,,,,,545,,,545,545,545,545,545,545,545,545,545,545,545,,545,545',
',545,545,,,,,,,,,,,,,,,,,,,,,545,,,545,,,545,,545,,545,,545,,545,,,',
',,,,545,,,,,545,545,545,545,545,545,,,,545,545,,,,,,,545,,,545,539,539',
'539,,539,545,545,,539,539,,,,539,,539,539,539,539,539,539,539,,,,,,539',
'539,539,539,539,539,539,,,539,,,,,,,539,,,539,539,539,539,539,539,539',
',539,539,539,,539,539,,539,539,,,,,,,,,,,,,,,,,,,,,539,,,539,,,539,',
'539,,,,,,539,,,,,,,,539,,,,,539,539,539,539,539,539,,,,539,539,,,,,',
',539,,,539,535,535,535,,535,539,539,,535,535,,,,535,,535,535,535,535',
'535,535,535,,,,,,535,535,535,535,535,535,535,,,535,,,,,,,535,,,535,535',
'535,535,535,535,535,,535,535,535,,535,535,,535,535,,,,,,,,,,,,,,,,,',
',,,535,,,535,,,535,,535,,,,,,535,,,,,,,,535,,,,,535,535,535,535,535',
'535,,,,535,535,,,,,,,535,,,535,534,534,534,,534,535,535,,534,534,,,',
'534,,534,534,534,534,534,534,534,,,,,,534,534,534,534,534,534,534,,',
'534,,,,,,,534,,,534,534,534,534,534,534,534,,534,534,534,,534,534,,534',
'534,,,,,,,,,,,,,,,,,,,,,534,,,534,,,534,,534,,,,,,534,,,,,,,,534,,,',
',534,534,534,534,534,534,,,,534,534,,,,,,,534,,,534,533,533,533,,533',
'534,534,,533,533,,,,533,,533,533,533,533,533,533,533,,,,,,533,533,533',
'533,533,533,533,,,533,,,,,,,533,,,533,533,533,533,533,533,533,,533,533',
'533,,533,533,,533,533,,,,,,,,,,,,,,,,,,,,,533,,,533,,,533,,533,,,,,',
'533,,,,,,,,533,,,,,533,533,533,533,533,533,,,,533,533,,,,,,,533,,,533',
'525,525,525,,525,533,533,,525,525,,,,525,,525,525,525,525,525,525,525',
',,,,,525,525,525,525,525,525,525,,,525,,,,,,,525,,,525,525,525,525,525',
'525,525,525,525,525,525,,525,525,,525,525,,,,,,,,,,,,,,,,,,,,,525,,',
'525,,,525,,525,,525,,,,525,,,,,,,,525,,,,,525,525,525,525,525,525,,',
',525,525,,,,,,,525,,,525,522,522,522,,522,525,525,,522,522,,,,522,,522',
'522,522,522,522,522,522,,,,,,522,522,522,522,522,522,522,,,522,,,,,',
',522,,,522,522,522,522,522,522,522,522,522,522,522,,522,522,,522,522',
',,,,,,,,,,,,,,,,,,,,522,,,522,,,522,,522,,522,,,,522,,,,,,,,522,,,,',
'522,522,522,522,522,522,,,,522,522,,,,,,,522,,,522,299,299,299,,299',
'522,522,,299,299,,,,299,,299,299,299,299,299,299,299,,,,,,299,299,299',
'299,299,299,299,,,299,,,,,,,299,,,299,299,299,299,299,299,299,,299,299',
'299,,299,299,,,,,,,,,,,,,,,,,,,,,,,,299,,,299,,,299,,299,,,,,,,,,,,',
',,,,,,,299,299,299,299,299,299,,,,299,299,,,,,,,299,,,299,520,520,520',
',520,299,299,,520,520,,,,520,,520,520,520,520,520,520,520,,,,,,520,520',
'520,520,520,520,520,,,520,,,,,,,520,,,520,520,520,520,520,520,520,,520',
'520,520,,520,520,,,,,,,,,,,,,,,,,,,,,,,,520,,,520,,,520,,520,,,,,,,',
',,,,,,,,,,,520,520,520,520,520,520,,,,520,520,,,,,,,520,,,520,514,514',
'514,514,514,520,520,,514,514,,,,514,,514,514,514,514,514,514,514,,,',
',,514,514,514,514,514,514,514,,,514,,,,,,514,514,,514,514,514,514,514',
'514,514,514,,514,514,514,,514,514,,514,514,,,,,,,,,,,,,,,,,,,,,514,',
',514,,,514,,514,,514,,,,514,,,,,,,,514,,,,,514,514,514,514,514,514,',
',,514,514,,,,,,514,514,,,514,508,508,508,,508,514,514,,508,508,,,,508',
',508,508,508,508,508,508,508,,,,,,508,508,508,508,508,508,508,,,508',
',,,,,,508,,,508,508,508,508,508,508,508,,508,508,508,,508,508,,508,508',
',,,,,,,,,,,,,,,,,,,,508,,,508,,508,508,,508,,,,508,,508,,,,,,,,508,',
',,,508,508,508,508,508,508,,,,508,508,,,,,,,508,,,508,492,492,492,,492',
'508,508,,492,492,,,,492,,492,492,492,492,492,492,492,,,,,,492,492,492',
'492,492,492,492,,,492,,,,,,,492,,,492,492,492,492,492,492,492,,492,492',
'492,,492,492,,492,492,,,,,,,,,,,,,,,,,,,,,492,,,492,,,492,,492,,,,,',
'492,,,,,,,,492,,,,,492,492,492,492,492,492,,,,492,492,,,,,,,492,,,492',
'490,490,490,,490,492,492,,490,490,,,,490,,490,490,490,490,490,490,490',
',,,,,490,490,490,490,490,490,490,,,490,,,,,,,490,,,490,490,490,490,490',
'490,490,490,490,490,490,,490,490,,490,490,,,,,,,,,,,,,,,,,,,,,490,,',
'490,,,490,,490,,,,490,,490,,,,,,,,490,,,,,490,490,490,490,490,490,,',
',490,490,,,,,,,490,,,490,308,308,308,,308,490,490,,308,308,,,,308,,308',
'308,308,308,308,308,308,,,,,,308,308,308,308,308,308,308,,,308,,,,,',
',308,,,308,308,308,308,308,308,308,,308,308,308,,308,308,,308,308,,',
',,,,,,,,,,,,,,,,,,308,,,308,308,,308,,308,,,,,,308,,,,,,,,308,,,,,308',
'308,308,308,308,308,,,,308,308,,,,,,,308,,,308,310,310,310,310,310,308',
'308,,310,310,,,,310,,310,310,310,310,310,310,310,,,,,,310,310,310,310',
'310,310,310,,,310,,,,,,310,310,,310,310,310,310,310,310,310,310,,310',
'310,310,,310,310,,310,310,,,,,,,,,,,,,,,,,,,,,310,,,310,,,310,,310,',
'310,,,,310,,,,,,,,310,,,,,310,310,310,310,310,310,,,,310,310,,,,,,,310',
',,310,488,488,488,,488,310,310,,488,488,,,,488,,488,488,488,488,488',
'488,488,,,,,,488,488,488,488,488,488,488,,,488,,,,,,,488,,,488,488,488',
'488,488,488,488,488,488,488,488,,488,488,,488,488,,,,,,,,,,,,,,,,,,',
',,488,,,488,,,488,,488,,488,,488,,488,,,,,,,,488,,,,,488,488,488,488',
'488,488,,,,488,488,,,,,,,488,,,488,485,485,485,,485,488,488,,485,485',
',,,485,,485,485,485,485,485,485,485,,,,,,485,485,485,485,485,485,485',
',,485,,,,,,,485,,,485,485,485,485,485,485,485,,485,485,485,,485,485',
',485,485,,,,,,,,,,,,,,,,,,,,,485,,,485,,,485,,485,,,,,,485,,,,,,,,485',
',,,,485,485,485,485,485,485,,,,485,485,,,,,,,485,,,485,457,457,457,',
'457,485,485,,457,457,,,,457,,457,457,457,457,457,457,457,,,,,,457,457',
'457,457,457,457,457,,,457,,,,,,,457,,,457,457,457,457,457,457,457,,457',
'457,457,,457,457,,457,457,,,,,,,,,,,,,,,,,,,,,457,,,457,,,457,,457,',
',,,,457,,,,,,,,457,,,,,457,457,457,457,457,457,,,,457,457,,,,,,,457',
',,457,456,456,456,,456,457,457,,456,456,,,,456,,456,456,456,456,456',
'456,456,,,,,,456,456,456,456,456,456,456,,,456,,,,,,,456,,,456,456,456',
'456,456,456,456,,456,456,456,,456,456,,456,456,,,,,,,,,,,,,,,,,,,,,456',
',,456,,,456,,456,,,,,,456,,,,,,,,456,,,,,456,456,456,456,456,456,,,',
'456,456,,,,,,,456,,,456,455,455,455,,455,456,456,,455,455,,,,455,,455',
'455,455,455,455,455,455,,,,,,455,455,455,455,455,455,455,,,455,,,,,',
',455,,,455,455,455,455,455,455,455,,455,455,455,,455,455,,455,455,,',
',,,,,,,,,,,,,,,,,,455,,,455,,,455,,455,,,,,,455,,,,,,,,455,,,,,455,455',
'455,455,455,455,,,,455,455,,,,,,,455,,,455,453,453,453,,453,455,455',
',453,453,,,,453,,453,453,453,453,453,453,453,,,,,,453,453,453,453,453',
'453,453,,,453,,,,,,,453,,,453,453,453,453,453,453,453,453,453,453,453',
',453,453,,453,453,,,,,,,,,,,,,,,,,,,,,453,,,453,,,453,,453,,453,,,,453',
',,,,,,,453,,,,,453,453,453,453,453,453,,,,453,453,,,,,,,453,,,453,452',
'452,452,,452,453,453,,452,452,,,,452,,452,452,452,452,452,452,452,,',
',,,452,452,452,452,452,452,452,,,452,,,,,,,452,,,452,452,452,452,452',
'452,452,452,452,452,452,,452,452,,452,452,,,,,,,,,,,,,,,,,,,,,452,,',
'452,,,452,,452,,452,,,,452,,,,,,,,452,,,,,452,452,452,452,452,452,,',
',452,452,,,,,,,452,,,452,443,443,443,,443,452,452,,443,443,,,,443,,443',
'443,443,443,443,443,443,,,,,,443,443,443,443,443,443,443,,,443,,,,,',
',443,,,443,443,443,443,443,443,443,443,443,443,443,,443,443,,443,443',
',,,,,,,,,,,,,,,,,,,,443,,,443,443,,443,,443,,443,,443,,443,,,,,,,,443',
',,,,443,443,443,443,443,443,,,,443,443,,,,,,,443,,,443,442,442,442,',
'442,443,443,,442,442,,,,442,,442,442,442,442,442,442,442,,,,,,442,442',
'442,442,442,442,442,,,442,,,,,,,442,,,442,442,442,442,442,442,442,442',
'442,442,442,,442,442,,442,442,,,,,,,,,,,,,,,,,,,,,442,,,442,442,,442',
',442,,442,,442,,442,,,,,,,,442,,,,,442,442,442,442,442,442,,,,442,442',
',,,,,,442,,,442,441,441,441,,441,442,442,,441,441,,,,441,,441,441,441',
'441,441,441,441,,,,,,441,441,441,441,441,441,441,,,441,,,,,,,441,,,441',
'441,441,441,441,441,441,441,441,441,441,,441,441,,441,441,,,,,,,,,,',
',,,,,,,,,,441,,,441,441,,441,,441,,441,,441,,441,,,,,,,,441,,,,,441',
'441,441,441,441,441,,,,441,441,,,,,,,441,,,441,433,433,433,,433,441',
'441,,433,433,,,,433,,433,433,433,433,433,433,433,,,,,,433,433,433,433',
'433,433,433,,,433,,,,,,,433,,,433,433,433,433,433,433,433,433,433,433',
'433,,433,433,,433,433,,,,,,,,,,,,,,,,,,,,,433,,,433,433,,433,,433,,433',
',433,,433,,,,,,,,433,,,,,433,433,433,433,433,433,,,,433,433,,,,,,,433',
',,433,422,422,422,,422,433,433,,422,422,,,,422,,422,422,422,422,422',
'422,422,,,,,,422,422,422,422,422,422,422,,,422,,,,,,,422,,,422,422,422',
'422,422,422,422,,422,422,422,,422,422,,422,422,,,,,,,,,,,,,,,,,,,,,422',
',,422,,,422,,422,,,,,,422,,,,,,,,422,,,,,422,422,422,422,422,422,,,',
'422,422,,,,,,,422,,,422,382,382,382,,382,422,422,,382,382,,,,382,,382',
'382,382,382,382,382,382,,,,,,382,382,382,382,382,382,382,,,382,,,,,',
',382,,,382,382,382,382,382,382,382,,382,382,382,,382,382,,382,382,,',
',,,,,,,,,,,,,,,,,,382,,,382,,,382,,382,,,,,,382,,,,,,,,382,,,,,382,382',
'382,382,382,382,,,,382,382,,,,,,,382,,,382,370,370,370,,370,382,382',
',370,370,,,,370,,370,370,370,370,370,370,370,,,,,,370,370,370,370,370',
'370,370,,,370,,,,,,,370,,,370,370,370,370,370,370,370,,370,370,370,',
'370,370,,,,,,,,,,,,,,,,,,,,,,,,370,,,370,,,370,,370,,,,,,,,,,,,,,,,',
',,370,370,370,370,370,370,,,,370,370,,,,,,,370,,,370,351,351,351,,351',
'370,370,,351,351,,,,351,,351,351,351,351,351,351,351,,,,,,351,351,351',
'351,351,351,351,,,351,,,,,,,351,,,351,351,351,351,351,351,351,,351,351',
'351,,351,351,,351,351,,,,,,,,,,,,,,,,,,,,,351,,,351,,,351,,351,,,,,',
'351,,,,,,,,351,,,,,351,351,351,351,351,351,,,,351,351,,,,,,,351,,,351',
'196,196,196,,196,351,351,,196,196,,,,196,,196,196,196,196,196,196,196',
',,,,,196,196,196,196,196,196,196,,,196,,,,,,,196,,,196,196,196,196,196',
'196,196,,196,196,196,,196,196,,196,196,,,,,,,,,,,,,,,,,,,,,196,,,196',
',,196,,196,,196,,,,196,,,,,,,,196,,,,439,196,196,196,196,196,196,439',
'439,439,196,196,,439,439,,439,,196,,,196,,,,,,196,196,,,,,,,,439,439',
',439,439,439,439,439,,,,,,,,,,,,,,,,,,,,,,439,439,439,439,439,439,439',
'439,439,439,439,439,439,439,439,,,439,439,439,,439,,,,439,,,,,,439,',
'439,,439,439,439,439,439,439,439,,439,,439,,,,,,,,,,,,,439,439,,439',
',439,,645,439,,439,,,439,645,645,645,,,645,645,645,,645,,,,,,,,,,645',
'645,,,,,,,,,645,645,,645,645,645,645,645,,,,,,,,,,,,,,,,,,,,,,645,645',
'645,645,645,645,645,645,645,645,645,645,645,645,645,,,645,645,645,,645',
'645,,,645,,645,,645,,645,,645,,645,645,645,645,645,645,645,,645,,645',
',,,,,,,,,,,,645,645,645,645,,645,,644,645,,645,,,645,644,644,644,,,644',
'644,644,,644,,,,,,,,,644,644,644,,,,,,,,,644,644,,644,644,644,644,644',
',,,,,,,,,,,,,,,,,,,,,644,644,644,644,644,644,644,644,644,644,644,644',
'644,644,644,,,644,644,644,,644,644,,,644,,644,,644,,644,,644,,644,644',
'644,644,644,644,644,,644,644,644,,,,,,,,,,,,,644,644,644,644,,644,,437',
'644,,644,,,644,437,437,437,,,,437,437,,437,,,,,,,,,437,,,,,,,,,,,437',
'437,,437,437,437,437,437,,,,,,,,,,,,,,,,,,,,,,437,437,437,437,437,437',
'437,437,437,437,437,437,437,437,437,,,437,437,437,,437,,,,437,,,,,,437',
',437,,437,437,437,437,437,437,437,,437,437,437,,,,,,,,,,,,,437,437,',
'437,,437,,28,437,,437,,,437,28,28,28,,,28,28,28,,28,,,,,,,,,,28,28,',
',,,,,,,28,28,,28,28,28,28,28,,,,,,,,,,,,,,,,,,,,,,28,28,28,28,28,28',
'28,28,28,28,28,28,28,28,28,,,28,28,28,,,28,,28,28,,28,,28,,28,,28,,28',
'28,28,28,28,28,28,,28,,28,,,,,,,,,,,,,28,28,28,28,50,28,,,28,,28,50',
'50,50,,,50,50,50,,50,,,,,,,,,,50,50,50,,,,,,,,50,50,,50,50,50,50,50',
',,,,,,,,,,,,,,,,,,,,,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,,',
'50,50,50,,,50,,,50,,50,,50,,50,,50,,50,50,50,50,50,50,50,,50,,50,,,',
',,,,,,,,,50,50,50,50,496,50,,50,50,,50,496,496,496,,,496,496,496,,496',
',,,,,,,,,496,,,,,,,,,,496,496,,496,496,496,496,496,,,,,,,,,,,,497,,',
',,,,497,497,497,,,497,497,497,,497,,,,,496,496,,,,497,,,496,,,,,496',
'496,497,497,,497,497,497,497,497,,,,,,,,,,,,496,,,,,,,,,,,,,496,,496',
',,496,,,497,497,,498,,,,,497,,498,498,498,497,497,498,498,498,,498,',
',,,,,,,,498,,,,,497,,,,,498,498,,498,498,498,498,498,497,,497,,,497',
'591,591,,,591,,,,,,,,,591,591,591,591,591,591,591,591,591,,,591,591',
'498,498,,,591,591,591,591,498,,,,,498,498,,,,,591,591,,591,591,591,591',
'591,591,591,591,591,591,591,,498,591,,,,,,,,,,,,498,,498,,,498,416,416',
'416,416,416,416,416,416,416,416,416,416,416,416,416,416,416,416,416',
'416,416,416,416,416,,,,416,416,416,416,416,416,416,416,416,416,416,416',
'416,416,416,416,416,416,416,416,416,416,416,,,416,,,,,,,,,416,416,416',
'416,416,416,416,416,416,,,416,416,,,,,416,416,416,416,,,,,,,,,,,,416',
'416,,416,416,416,416,416,416,416,416,416,416,416,,,416,416,,,,,,,,,',
'416,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,,,,8,8,8,8,8,8,8',
'8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,,,8,,,,,,,,,8,8,8,8,8,8,8,8,8,,,8,8',
',,,,8,8,8,8,,,,,,,,,,,,8,8,,8,8,8,8,8,8,8,8,8,8,8,,,8,8,,,,,,,,,,8,7',
'7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,,,,7,7,7,7,7,7,7,7,7,7',
'7,7,7,7,7,7,7,7,7,7,7,7,7,7,,7,,,,,,,,,7,7,7,7,7,7,7,7,7,,,7,7,,,,,7',
'7,7,7,,,,,,,,,,,,7,7,,7,7,7,7,7,7,7,7,7,7,7,,,7,7,,,,,,,,,,7,412,412',
'412,412,412,412,412,412,412,412,412,412,412,412,412,412,412,412,412',
'412,412,412,412,412,,,,412,412,412,412,412,412,412,412,412,412,412,412',
'412,412,412,412,412,412,412,412,412,412,412,,,412,,,,,,,,,412,412,412',
'412,412,412,412,412,412,,,412,412,,,,,412,412,412,412,,,,,,,,,,,,412',
'412,,412,412,412,412,412,412,412,412,412,412,412,,,412,412,,,,,,,,,',
'412,769,769,769,769,769,769,769,769,769,769,769,769,769,769,769,769',
'769,769,769,769,769,769,769,769,,,,769,769,769,769,769,769,769,769,769',
'769,769,769,769,769,769,769,769,769,769,769,769,769,769,,,769,,,,,,',
',,769,769,769,769,769,769,769,769,769,,,769,769,,,,,769,769,769,769',
',,,,,,,,,,,769,769,,769,769,769,769,769,769,769,769,769,769,769,,,769',
'79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79',
'79,,,,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79',
'79,79,79,79,79,,79,,,,,,,79,79,79,79,79,79,79,79,79,,,79,79,,,,,79,79',
'79,79,,,,,,,,,,,,79,79,,79,79,79,79,79,79,79,79,79,79,79,,,79,65,65',
'65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,,',
',65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65',
'65,65,65,,65,,,,,,,65,65,65,65,65,65,65,65,65,,,65,65,,,,,65,65,65,65',
',,,,,65,,,,,,65,65,,65,65,65,65,65,65,65,65,65,65,65,,,65,192,192,192',
'192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192',
'192,192,192,192,,,,192,192,192,192,192,192,192,192,192,192,192,192,192',
'192,192,192,192,192,192,192,192,192,192,192,192,192,,192,,,,,,,192,192',
'192,192,192,192,192,192,192,,,192,192,,,,,192,192,192,192,,,,,,,,,,',
',192,192,,192,192,192,192,192,192,192,192,192,192,192,955,955,192,,955',
',,,,,,,,955,955,955,955,955,955,955,955,955,,,955,955,,,,,955,955,955',
'955,,,,,,955,,,,,,955,955,,955,955,955,955,955,955,955,955,955,955,955',
'203,203,955,,203,,,,,,,,,203,203,203,203,203,203,203,203,203,,,203,203',
',,,,203,203,203,203,,,,,,,,,,,,203,203,,203,203,203,203,203,203,203',
'203,203,203,203,267,267,203,,267,,,,,,,,,267,267,267,267,267,267,267',
'267,267,,,267,267,,,,,267,267,267,267,,,,,,,,,,,,267,267,,267,267,267',
'267,267,267,267,267,267,267,267,526,526,267,,526,,,,,,,,,526,526,526',
'526,526,526,526,526,526,,,526,526,,,,,526,526,526,526,,,,,,,,,,,,526',
'526,,526,526,526,526,526,526,526,526,526,526,526,266,266,526,,266,,',
',,,,,,266,266,266,266,266,266,266,266,266,,,266,266,,,,,266,266,266',
'266,,,,,,,,,,,,266,266,,266,266,266,266,266,266,266,266,266,266,266',
'593,593,266,,593,,,,,,,,,593,593,593,593,593,593,593,593,593,,,593,593',
',,,,593,593,593,593,,,,,,593,,,,,,593,593,,593,593,593,593,593,593,593',
'593,593,593,593,524,524,593,,524,,,,,,,,,524,524,524,524,524,524,524',
'524,524,,,524,524,,,,,524,524,524,524,,,,,,,,,,,,524,524,,524,524,524',
'524,524,524,524,524,524,524,524,956,956,524,,956,,,,,,,,,956,956,956',
'956,956,956,956,956,956,,,956,956,,,,,956,956,956,956,,,,,,,,,,,,956',
'956,,956,956,956,956,956,956,956,956,956,956,956,523,523,956,,523,,',
',,,,,,523,523,523,523,523,523,523,523,523,,,523,523,,,,,523,523,523',
'523,,,,,,523,,,,,,523,523,,523,523,523,523,523,523,523,523,523,523,523',
'265,265,523,,265,,,,,,,,,265,265,265,265,265,265,265,265,265,,,265,265',
',,,,265,265,265,265,,,,,,,,,,,,265,265,,265,265,265,265,265,265,265',
'265,265,265,265,585,585,265,,585,,,,,,,,,585,585,585,585,585,585,585',
'585,585,,,585,585,,,,,585,585,585,585,,,,,,,,,,,,585,585,,585,585,585',
'585,585,585,585,585,585,585,585,584,584,585,,584,,,,,,,,,584,584,584',
'584,584,584,584,584,584,,,584,584,,,,,584,584,584,584,,,,,,584,,,,,',
'584,584,,584,584,584,584,584,584,584,584,584,584,584,536,536,584,,536',
',,,,,,,,536,536,536,536,536,536,536,536,536,,,536,536,,,,,536,536,536',
'536,,,,,,536,,,,,,536,536,,536,536,536,536,536,536,536,536,536,536,536',
'202,202,536,,202,,,,,,,,,202,202,202,202,202,202,202,202,202,,,202,202',
',,,,202,202,202,202,,,,,,,,,,,,202,202,,202,202,202,202,202,202,202',
'202,202,202,202,450,450,202,,450,,,,,,,,,450,450,450,450,450,450,450',
'450,450,,,450,450,,,,,450,450,450,450,,,,,,450,,,,,,450,450,,450,450',
'450,450,450,450,450,450,450,450,450,201,201,450,,201,,,,,,,,,201,201',
'201,201,201,201,201,201,201,,,201,201,,,,,201,201,201,201,,,,,,201,',
',,,,201,201,,201,201,201,201,201,201,201,201,201,201,201,451,451,201',
',451,,,,,,,,,451,451,451,451,451,451,451,451,451,,,451,451,,,,,451,451',
'451,451,,,,,,,,,,,,451,451,,451,451,451,451,451,451,451,451,451,451',
'451,827,827,451,,827,,,,,,,,,827,827,827,827,827,827,827,827,827,,,827',
'827,,,,,827,827,827,827,,,,,,,,,,,,827,827,,827,827,827,827,827,827',
'827,827,827,827,827,537,537,827,,537,,,,,,,,,537,537,537,537,537,537',
'537,537,537,,,537,537,,,,,537,537,537,537,,,,,,,,,,,,537,537,,537,537',
'537,537,537,537,537,537,537,537,537,,,537' ]
        racc_action_check = arr = ::Array.new(25330, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_action_pointer = [
    -2,  1038,   nil,   257,   nil,  1293,   903, 23525, 23404,   852,
   816,   815,   838,  1612,   375,   290,   nil,  1832,  1963,  3142,
    12,   nil,  2356,  2487,  2618,   307,   248,  3011, 22768,   nil,
  3273,  3404,  3535,   nil,   686,   -60,   717,   532,  4190,  4321,
  4452,   622,  1874,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
 22895,   nil,  4976,  5107,  5238,    48,  3696,  5631,  5762,   nil,
   nil,  5893,  6024,  6155,   nil, 23987,   nil,   nil,   nil,   nil,
   nil,   -53,   nil,   nil,   nil,   nil,   nil,   551,   542, 23877,
   nil,   nil,   nil,   571,  7072,   nil,   nil,  7203,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   584,   nil,  7465,
   nil,   nil,   nil,  7596,  7727,  7858,  7989,  8120,  8251,   nil,
    22,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil, 24097,   148,   nil,  8775, 22137,  9037,  9168,  9299,
  9430, 25041, 24923, 24215,  9954, 10085, 10216,   nil,  1219,   229,
   816,   211,   779,   843, 11133, 11264,   nil,   nil, 11395,   912,
 11657, 11788, 11919, 12050, 12181, 12312, 12443, 12574, 12705, 12836,
 12967, 13098, 13229, 13360, 13491, 13622, 13753, 13884, 14015, 14146,
 14277, 14408, 14539, 14670, 14801,   nil,   nil,   nil,   nil,  1570,
   nil,   934,   917,   nil, 15325,   938, 15587,   nil,   nil,   nil,
   nil,   nil, 15718,   nil,   nil, 24687, 24392, 24274,   908, 16373,
 16504,   nil,   nil,   nil,   nil,   nil,   nil,   nil, 16635,   360,
  1162,   817, 17159,   738,   636,   555, 17683, 17814,   279,  1743,
    50,   232,   447,   478,   261,   nil,   523,   527,   nil, 19124,
   nil,   -49,   662,   668,   645,   nil,   674,   nil, 19910,   nil,
 20041,   117,   nil,   617,   424,   202,   706,   690,   281,   743,
   nil,   nil,   nil,  3434,   nil,   nil,   nil,   705,   707,   nil,
   748,   788,   nil,   nil,   nil,   nil,   nil,   nil,   nil,  3288,
   nil,   nil,   nil,  1012,   nil,   nil,  1032,   629,   110,   104,
  8906, 22006,   394,   350,   914,    16,  1481,   987,    72,  1016,
   nil,   nil,  1295,   979,   nil,  1305,   nil,    68,   nil,   nil,
 21875,   396,   410,    61,   401,   391,   412,   279,   125,   nil,
   369,   nil, 21744,   nil,   500,   nil,   506,   nil,   -24,   791,
   479,   nil,   784,   -45,   nil,   373,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   792, 23646,   nil,   nil,   nil, 23283,   785,   nil,   nil,
   784,   nil, 21613,   747,   nil,   745,   nil,   nil,  3011,   776,
   754,   301,   330, 21482,   nil,   nil,   nil, 22638,   750, 22248,
   nil, 21351, 21220, 21089,   nil,   nil,   nil,  2094,   nil,   nil,
 24982, 25100, 20958, 20827,   216, 20696, 20565, 20434,   -12,   nil,
  4321,  4845,   369,   399,   685,   684,   678,   677,  5494,  5625,
  5756,  5107,  4970,  3660,  5363,  3529,  4583,  4452,  4059,  3928,
  4190,   655,  1117,  5238,  4714, 20303,   265,   nil, 20172,   nil,
 19779,   nil, 19648,   nil,   476,   nil, 23022, 23077, 23156,   256,
   nil,   613,   nil,   nil,   609,   608,   nil,   nil, 19517,   166,
   227,   638,   nil,   nil, 19386,   629,   554,   nil,   nil,   541,
 19255,   560, 18993, 24628, 24510, 18862, 24333,   264,   520,   nil,
   nil,   477,   nil, 18731, 18600, 18469, 24864, 25218,  1963, 18338,
   412,   331,   135,   nil,   nil, 18207,   nil,   nil, 18076,   nil,
   nil,   nil,    39,    -5,   nil,   844,   nil,   nil, 17945,  3827,
   nil,   551,   nil,   nil,   254,   nil,  3325,   nil,   490,   552,
   nil,   nil, 17552,   678,   nil,   nil, 17421,   305,   335,   731,
   800, 17290,   nil, 17028, 24805, 24746, 16897,    -1,   nil,   677,
   nil, 23156, 16766, 24451,   nil,   nil, 16242,   391, 16111,   nil,
  3417,   nil,   nil,   nil,    65,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   -37,   nil,   nil,   nil,   882,
   nil,   nil,   nil,   nil,   nil, 15980,   898, 15849,   345,    85,
 15456, 15194,   994,   nil,   nil,   nil, 15063,   965,   nil, 14932,
   940,   nil,    70,   151, 22508, 22378,   913,   912,   915,   nil,
  1177,   nil,  3303,   nil, 11526,   873,   nil,   909, 11002,   nil,
   nil, 10871,   nil,   nil,   nil,   nil,   nil,   nil, 10740,   nil,
   786, 10609, 10478,  1046,   658,   nil,   nil,   690, 10347,  9823,
   nil,  1031,   -56,  9692,   527,   nil,   536,   -19,   -18,   460,
    39,   170,   196,   811,   -24,  9561,  2487,    69,   142,   211,
   220,  8644,   nil,   nil,   392,   nil,   nil,  8513,  8382,   nil,
   nil,   243,   nil,   277,   546,   396,   346,   348,   nil,   nil,
   444,  1295,   nil,   627,   nil,   554,   nil,   nil,   nil,   nil,
   nil,   568,   nil,   572,  7334,   497,   -17,    29,   260,    17,
   522,  6941,   648,   nil,   544,   550,  6810,   374,   nil,   -25,
  6679,  6548,  3548,   103,   nil,   nil,   639,   nil,  6417,   nil,
   570,   573,   nil,   582,   586,   589,   nil,   582,   nil, 23767,
   633,   768,  6286,   nil,   nil,   nil,  2618,   604,  5500,  5369,
  4845,   nil,  1832,   nil,  2225,   nil,   nil,  1701,   nil,  2880,
   nil,  4714,  4583,  4059,   183,   163,   nil,   nil,   653,   753,
   nil,   nil,   nil,   653,   nil,   638,  3928,   nil,   662,   764,
   651,   252,   nil,   nil,   nil,   775,   nil,  3797,   663,   706,
   nil,   nil,   nil,   nil,   686,   788,   nil, 25159,   nil,   859,
   nil,   nil,   nil,   nil,  1033,   802,   nil,  3666,   814,  3142,
  2880,   nil,   nil,    -2,    40,  1332,   334,   nil,   851,   nil,
   nil,   852,   855,   742,   nil,   nil,   nil,   412,   nil,   nil,
   320,  6168,   nil,   597,   nil,   493,   nil,  2749,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   768,   767,   nil,  2749,   nil,
  2356,  2225,  2094,  1701,   nil,   nil,   nil,  1570,   786,   nil,
   nil,   nil,  1439,   nil,   nil,   207,  1308,   nil,   nil,   nil,
   838,   802,   nil,   nil,   211,   nil,   922,   934,  1177,  1046,
   nil,   nil,   915,   nil,   nil,   880,   nil,   848,   nil,   nil,
   851,   865,   866,   859,   nil,   nil,  6037,   nil,  1439,   nil,
   784,   nil,   653,    88,  1301,   953,    80,   nil,   nil,   522,
   nil,   nil,   nil,   239,   391,  1017,   nil,   nil,   466,   nil,
   nil,   nil,   260,  1028,   129, 24156, 24569,    45,   632,   nil,
   nil,   nil,  1036,   nil,   920,  1046,   nil,   966,    72,    76,
    87,   129,   nil,   nil,   nil,   nil,   218 ]

racc_action_default = [
    -3,  -561,    -1,  -549,    -4,    -6,  -561,  -561,  -561,  -561,
  -561,  -561,  -561,  -561,  -280,   -37,   -38,  -561,  -561,   -43,
   -45,   -46,  -292,  -330,  -331,   -50,  -258,  -387,  -258,   -65,
   -10,   -69,   -76,   -78,  -561,  -462,  -561,  -561,  -561,  -561,
  -561,  -551,  -234,  -273,  -274,  -275,  -276,  -277,  -278,  -279,
  -539,  -282,  -561,  -560,  -530,  -300,  -560,  -561,  -561,  -305,
  -308,  -549,  -561,  -561,  -322,  -561,  -332,  -333,  -405,  -406,
  -407,  -408,  -409,  -560,  -412,  -560,  -560,  -560,  -560,  -560,
  -439,  -445,  -446,  -561,  -451,  -452,  -453,  -454,  -455,  -456,
  -457,  -458,  -459,  -460,  -461,  -464,  -465,  -561,    -2,  -550,
  -556,  -557,  -558,  -561,  -561,  -561,  -561,  -561,    -3,   -13,
  -561,  -105,  -106,  -107,  -108,  -109,  -110,  -111,  -114,  -115,
  -116,  -117,  -118,  -119,  -120,  -121,  -122,  -123,  -124,  -125,
  -126,  -127,  -128,  -129,  -130,  -131,  -132,  -133,  -134,  -135,
  -136,  -137,  -138,  -139,  -140,  -141,  -142,  -143,  -144,  -145,
  -146,  -147,  -148,  -149,  -150,  -151,  -152,  -153,  -154,  -155,
  -156,  -157,  -158,  -159,  -160,  -161,  -162,  -163,  -164,  -165,
  -166,  -167,  -168,  -169,  -170,  -171,  -172,  -173,  -174,  -175,
  -176,  -177,  -178,  -179,  -180,  -181,  -182,  -183,  -184,  -185,
  -186,  -187,  -561,   -18,  -112,   -10,  -561,  -561,  -561,  -560,
  -560,  -561,  -561,  -561,  -561,  -561,  -561,   -41,  -561,  -462,
  -561,  -280,  -561,  -561,   -10,  -561,   -42,  -224,  -561,  -561,
  -561,  -561,  -561,  -561,  -561,  -561,  -561,  -561,  -561,  -561,
  -561,  -561,  -561,  -561,  -561,  -561,  -561,  -561,  -561,  -561,
  -561,  -561,  -561,  -561,  -561,  -231,  -374,  -376,   -47,  -235,
  -251,  -265,  -265,  -255,  -561,  -266,  -561,  -292,  -330,  -331,
  -560,  -532,  -561,   -48,   -49,  -561,  -561,  -561,   -55,  -560,
  -561,  -299,  -380,  -388,  -390,   -63,  -386,   -64,  -561,  -549,
   -11,   -65,   -10,  -561,  -561,   -70,   -73,   -10,  -462,  -561,
  -561,  -280,  -295,  -551,  -561,  -334,  -387,  -561,   -75,  -561,
   -80,  -287,  -447,  -448,  -561,  -209,  -210,  -225,  -561,  -552,
   -10,  -551,  -236,  -551,  -553,  -553,  -561,  -561,  -553,  -561,
  -301,  -302,  -342,  -561,  -347,  -348,  -355,  -560,  -496,  -362,
  -560,  -560,  -373,  -495,  -497,  -498,  -499,  -500,  -501,  -561,
  -514,  -519,  -520,  -522,  -523,  -524,  -561,   -44,  -561,  -561,
  -561,  -561,  -549,  -561,  -550,  -462,  -561,  -561,  -280,  -561,
  -503,  -504,  -101,  -561,  -103,  -561,  -280,  -561,  -319,  -462,
  -561,  -105,  -106,  -143,  -144,  -160,  -165,  -172,  -175,  -325,
  -561,  -528,  -561,  -410,  -561,  -425,  -561,  -427,  -561,  -561,
  -561,  -417,  -561,  -561,  -423,  -561,  -438,  -440,  -441,  -442,
  -443,  -449,  -450,   977,    -5,  -559,   -19,   -20,   -21,   -22,
   -23,  -561,  -561,   -15,   -16,   -17,  -561,  -561,   -25,   -34,
  -188,  -266,  -561,  -561,   -26,   -35,   -36,   -27,  -190,  -561,
  -561,  -540,  -541,  -560,  -383,  -542,  -543,  -540,  -258,  -541,
  -385,  -545,  -546,  -560,  -540,  -541,   -33,  -198,   -39,   -40,
  -561,  -561,  -560,  -560,  -287,  -561,  -561,  -561,  -561,  -298,
  -199,  -200,  -201,  -202,  -203,  -204,  -205,  -206,  -211,  -212,
  -213,  -214,  -215,  -216,  -217,  -218,  -219,  -220,  -221,  -222,
  -223,  -226,  -227,  -228,  -229,  -561,  -560,  -252,  -561,  -253,
  -561,  -263,  -561,  -267,  -561,  -535,  -258,  -258,  -258,  -560,
   -56,  -551,  -246,  -247,  -265,  -265,  -259,  -260,  -561,  -560,
  -560,  -561,  -294,    -9,  -550,  -561,   -66,  -285,   -81,   -71,
  -561,  -561,  -560,  -561,  -561,  -560,  -561,  -287,  -561,  -447,
  -448,   -77,   -82,  -561,  -561,  -561,  -561,  -561,  -230,  -561,
  -397,  -561,  -561,  -237,  -238,  -555,  -554,  -240,  -555,  -290,
  -291,  -531,  -561,  -561,  -346,  -561,  -364,  -371,  -561,  -368,
  -369,  -561,  -372,  -496,  -561,  -505,  -561,  -507,  -509,  -513,
  -521,  -525,   -10,  -335,  -336,  -337,   -10,  -561,  -561,  -561,
  -561,   -10,  -392,  -560,  -561,  -561,  -560,  -287,  -314,  -101,
  -102,  -561,  -560,  -561,  -317,  -466,  -561,  -561,  -561,  -323,
  -494,  -327,  -547,  -548,  -551,  -411,  -426,  -429,  -430,  -432,
  -413,  -428,  -414,  -415,  -416,  -561,  -419,  -421,  -422,  -561,
  -444,    -7,   -14,  -113,   -24,  -561,  -272,  -561,  -288,  -289,
  -561,  -561,   -59,  -244,  -245,  -381,  -561,   -61,  -384,  -561,
   -57,  -382,  -540,  -541,  -540,  -541,  -561,  -561,  -188,  -297,
  -561,  -358,  -561,  -360,   -10,  -265,  -264,  -268,  -561,  -533,
  -534,  -561,   -51,  -377,   -52,  -378,   -53,  -379,   -10,  -242,
  -561,  -248,  -250,   -43,  -561,  -257,  -261,  -561,   -10,   -10,
  -293,   -12,   -66,  -561,   -74,   -79,  -561,  -540,  -541,  -560,
  -544,  -286,  -561,  -561,  -560,  -561,  -197,  -207,  -208,  -561,
  -560,  -560,  -283,  -284,  -553,  -241,  -343,   -10,   -10,  -345,
  -356,  -561,  -363,  -560,  -357,  -561,  -560,  -560,  -515,  -502,
  -561,  -561,  -512,  -560,  -338,  -560,  -306,  -339,  -340,  -341,
  -309,  -561,  -312,  -561,  -561,  -561,  -540,  -541,  -544,  -286,
  -561,  -561,  -101,  -104,  -544,  -561,   -10,  -561,  -468,  -561,
   -10,   -10,  -494,  -561,  -471,  -472,  -474,  -475,  -477,  -478,
  -527,  -527,  -483,  -485,  -485,  -485,  -493,  -496,  -517,  -561,
  -561,  -561,   -10,  -418,  -420,  -424,  -189,  -270,  -561,  -561,
  -561,   -30,  -193,   -31,  -194,   -60,   -32,  -195,   -62,  -196,
   -58,  -561,  -561,  -561,  -289,  -288,  -232,  -359,  -561,  -561,
  -254,  -269,  -536,  -561,  -243,  -265,  -561,  -262,  -561,  -561,
   -72,  -288,  -289,   -83,  -296,  -560,  -353,   -10,  -398,  -560,
  -399,  -400,  -239,  -344,  -561,  -561,  -370,  -561,  -287,  -561,
  -366,  -367,  -506,  -508,  -511,  -561,  -351,  -561,  -561,   -10,
   -10,  -311,  -313,  -561,  -288,   -93,  -561,  -288,  -561,  -467,
  -320,  -561,  -561,  -551,  -470,  -473,  -476,  -561,  -481,  -482,
  -561,  -561,  -489,  -561,  -491,  -561,  -492,  -561,  -328,  -529,
  -431,  -434,  -435,  -436,  -437,  -561,  -271,   -28,  -191,   -29,
  -192,  -561,  -561,  -561,  -361,  -375,   -54,  -249,  -265,  -389,
  -391,    -8,   -10,  -404,  -354,  -561,  -561,  -402,  -349,  -350,
  -286,  -560,  -510,  -303,  -561,  -304,  -561,  -561,  -561,   -10,
  -315,  -318,   -10,  -324,  -326,  -561,  -479,  -527,  -526,  -484,
  -485,  -485,  -485,  -561,  -518,  -516,  -494,  -433,  -233,  -256,
  -561,  -403,   -10,  -462,  -561,  -561,  -280,  -401,  -365,   -10,
  -307,  -310,  -268,  -560,   -10,  -561,  -469,  -480,  -561,  -487,
  -488,  -490,   -10,  -397,  -560,  -561,  -561,  -287,  -560,  -393,
  -394,  -395,  -561,  -321,  -485,  -561,  -396,  -561,  -540,  -541,
  -544,  -286,  -352,  -316,  -486,  -329,  -288 ]

clist = [
'13,324,379,489,216,295,295,114,114,580,250,250,250,5,332,316,397,208',
'208,700,285,763,208,208,208,419,426,433,438,443,13,289,289,117,117,367',
'295,295,541,102,659,313,531,98,308,251,251,251,572,576,751,10,208,208',
'109,194,718,208,208,766,99,208,356,365,298,114,710,565,726,730,348,349',
'557,835,352,560,562,283,2,114,564,10,924,252,252,252,544,547,384,281',
'551,496,497,498,858,859,500,102,659,13,590,353,390,208,208,208,208,13',
'13,601,310,350,5,360,815,318,406,407,408,409,410,5,656,654,656,248,263',
'264,606,397,839,386,388,351,616,395,668,207,840,838,741,944,675,746',
'598,912,678,679,713,370,10,750,717,600,862,864,866,769,10,10,926,429',
'430,322,706,552,823,924,594,716,359,485,311,763,641,412,361,347,347',
'705,193,347,418,424,427,891,411,313,313,247,446,486,114,765,509,13,208',
'208,208,208,208,510,442,959,208,208,208,734,819,895,383,766,883,321',
'13,208,380,615,320,423,423,393,659,347,347,347,347,663,665,667,870,272',
'276,771,772,731,853,917,606,916,284,317,381,268,275,277,10,506,920,404',
'677,947,501,833,669,1,489,250,250,,295,,,684,,10,250,,553,208,208,,',
'295,,494,433,438,208,,,332,13,,,,289,13,532,,,35,504,251,565,,528,722',
',289,,251,,,,656,656,720,972,,13,949,950,951,542,102,543,,519,513,,35',
'288,288,,448,449,,743,515,505,252,,10,521,458,514,910,10,252,710,281',
'599,,295,765,281,763,,689,208,208,694,355,369,974,369,960,718,774,,10',
'689,577,578,14,,,,,365,,503,507,,,952,,,,,511,208,,,766,,,102,,35,,579',
',,14,291,291,35,35,,,,595,,417,800,,,,689,,114,,646,647,114,,,689,,',
'901,,284,641,810,358,366,,,,966,,,,,659,117,12,313,313,117,,,,,,,565',
',442,208,208,921,,922,,826,622,785,830,831,623,14,788,,,790,12,347,347',
'14,14,848,,822,762,851,852,,,,,686,,35,693,,,,,284,,295,,,284,,272,',
'276,604,,670,35,,,208,532,313,,,313,13,,,,,765,289,656,208,,442,208',
',681,,,820,,295,,,,,442,12,208,,964,,909,,735,12,12,740,655,,,,,745',
',800,,714,,14,,902,,656,10,,,,,,313,13,35,313,,13,288,35,14,313,13,',
'208,,442,208,,,,288,442,208,,,932,208,798,208,961,,35,,,939,,704,770',
',747,332,,,727,727,,781,783,,,,,786,10,,,,10,311,762,208,208,10,748',
'12,,208,,634,929,945,,,638,,,938,14,634,,632,291,14,12,13,637,,295,',
'699,640,369,,,291,,,,13,295,,,532,,,14,,,13,13,965,,,289,813,,,,,,,',
',,,289,,,,,,634,634,634,,10,868,13,13,,,,,662,664,666,347,,749,10,,12',
',,423,,12,,,10,10,,805,,918,366,,918,762,,762,208,762,,,,13,,,12,13',
'13,,,846,,,843,10,10,,,,,,877,879,,,114,,,13,,,,,,,208,208,689,723,849',
',850,725,,,854,,733,,,,,,10,,,,10,10,762,,35,,,,,,288,,,,,,13,,,,,,10',
',762,,442,,888,,,,,,,,208,,13,13,,,,,,,,,369,904,,,,,,915,,,,,347,,35',
'799,,,35,10,,295,,35,,319,,,,803,14,,325,727,,,291,,,808,809,10,10,13',
',634,,934,638,385,634,387,387,391,394,387,,,,,13,,,13,,,,967,824,825',
',,,,366,,,,,,,,,13,,,,,14,,13,,14,313,10,13,35,14,937,,,,,13,12,208',
',442,347,,35,10,,,10,,,,,,35,35,,,,288,,,,,,,,875,10,,,288,,,,10,,,',
',10,,,35,35,,,,10,,,,,,,,12,,,,12,421,425,,14,12,,,,,,,894,,,,,,14,',
',,35,,,,35,35,14,14,,,,291,906,907,,,,,,,,,,291,,,35,,,,,,,,,14,14,491',
',493,,,,,,495,,,385,,,,,,,,12,502,,,,,,,,931,,,,,12,35,,,14,,,,14,14',
'12,12,943,,,,,,,,,,,35,35,,,,,874,14,,,,,953,,,,12,12,,958,,,556,,962',
'556,556,,,,,,,,,,,,,,,,,,,,,,,,,,14,35,,12,,933,,12,12,,,,,,,,,,35,',
',35,14,14,,,,,,12,,,,,217,,,,249,249,249,35,,,,,,,35,,,,,35,305,306',
'307,,,,626,35,,,,,,,,249,249,,,,12,14,633,,,936,,,,,,,633,,,,,,14,,',
'14,12,12,,,,,,,,,,,,,,,,,,14,,,,,,,14,,,,657,14,319,651,660,,,,,14,',
',,633,633,633,651,,,,674,,,12,,,651,651,,,,,,,,,,,,,12,,,12,,,,,,,,',
',,,,,657,,,319,,,12,,,,,,,12,,,,,12,,,,,,,,12,,,420,249,428,249,249',
',,,447,,,,,,,,,,,,,,217,,460,461,462,463,464,465,466,467,468,469,470',
'471,472,473,474,475,476,477,478,479,480,481,482,483,484,,,,,777,,,,',
'249,,249,,,,,,249,,,,,,,249,249,,,,,,,,249,,801,,,802,,,,,,,,,,657,319',
',,,,,,,,,,,,,538,,,,,,,,633,,,,,633,,818,,,,816,821,,,,,,,,,,,,556,',
',556,556,,,,,,816,,816,,,,421,,,,,,,,,,,,,,,,,,,,,,,,856,,,,,,,,,,,',
',,,,,,,,876,,,,,,,,,294,294,,,,,,294,294,294,,,,249,,,,,,421,,,,294',
',,,,,,,294,294,893,,,,897,,,,,,249,249,,447,648,428,,,,,,,,,,,,,,,,',
',,,,,,,,,,,650,,,249,925,249,,249,,,,,,,,,,,,,,,,673,319,,,,,,,,,,,',
',249,,,249,,,556,,942,,,696,697,698,,,,,,,,,,249,,,249,,,,942,,,,,,',
',,,,,,,,,,,816,,,,,,,,,,,,,249,,816,249,,,,,,249,,,,294,,294,294,294',
'294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294',
'294,294,294,294,294,,,776,,249,,,782,784,294,,294,,787,,,789,294,,,',
',,,,,,,,,,,,,,249,,,249,,,294,,,,,,,249,249,,,,,294,,,,,,,,,294,,,,',
',,,,,,,,,,249,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,249,,,,,,,,,,,,,,294,',
',,,,,,,,249,,,,,,,,,,,,,,,,,,,,249,878,880,,,,,,,,,,,782,784,787,,,',
',,,294,,,,,,249,,,,,,,,,,,,,,,,,,,,,,,,,,,294,294,294,,,,,,,,,,,,,,',
',,,,,,,,,,,,,294,,,294,249,294,,294,,,,,,,,,,,880,878,928,,,,249,,,',
',,,,,,,294,,,,,,,,,,249,,,294,294,294,,,,,,,,,,294,,,294,,,,249,,,,',
',294,,,,,,,,,,,,,,,,,,249,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,294,,294,,,,,,,,,,,,294,,,,,,,,,,,,,,,,,,,294,,,294,,,,,,,,,,294',
'294,,,,,,,,,,,294,,,,,,,,,,,,294,,,,,,294,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,294,,,,,,,,,,,,,,,,,,,,,,,,294,,,,,,,,,,,,,,,,,,,,294,,,,,,,,',
',,,,294,294,294,,,,,,,,,,,,,294,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,294,,,,,,,,,,,,,,294,294,294,,,,294,,,,,,,,',
'294,,,,,,,,,,,,294,,,,,,,,,,,,,,,,,,,,,,294' ]
        racc_goto_table = arr = ::Array.new(2507, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'21,108,47,64,18,52,52,48,48,82,29,29,29,7,111,22,47,21,21,10,41,114',
'21,21,21,24,24,33,33,33,21,21,21,50,50,46,52,52,8,85,158,29,43,4,51',
'56,56,56,79,79,86,17,21,21,14,14,151,21,21,145,6,21,21,21,42,48,110',
'149,81,81,16,16,113,80,16,113,113,39,2,48,152,17,155,58,58,58,57,57',
'129,38,57,33,33,33,146,146,35,85,158,21,45,4,131,21,21,21,21,21,21,88',
'89,90,7,17,11,58,16,16,16,16,7,7,59,36,59,31,31,31,133,47,91,130,130',
'92,133,130,36,26,93,11,94,95,59,96,97,98,36,36,115,99,17,100,115,101',
'147,147,147,102,17,17,103,22,22,104,105,106,107,155,84,109,83,53,26',
'114,63,27,19,26,26,59,15,26,18,18,18,12,2,29,29,116,18,117,48,115,119',
'21,21,21,21,21,21,120,48,121,21,21,21,122,123,124,128,145,54,78,21,21',
'87,132,76,56,56,134,158,26,26,26,26,63,63,63,135,60,60,136,137,82,139',
'141,133,143,9,75,74,34,34,34,17,66,148,5,65,146,61,153,62,1,64,29,29',
',52,,,43,,17,29,,108,21,21,,,52,,129,33,33,21,,,111,21,,,,21,21,41,',
',44,56,56,149,,51,149,,21,,56,,,,59,59,152,80,,21,147,147,147,51,85',
'51,,42,4,,44,44,44,,26,26,,45,39,58,58,,17,39,26,6,81,17,58,110,38,46',
',52,115,38,114,,33,21,21,33,44,44,147,44,11,151,133,,17,33,16,16,23',
',,,,21,,31,31,,,86,,,,,31,21,,,145,,,85,,44,,4,,,23,23,23,44,44,,,,85',
',9,64,,,,33,,48,,22,22,48,,,33,,,115,,9,63,43,23,23,,,,10,,,,,158,50',
'20,29,29,50,,,,,,,149,,48,21,21,115,,115,,113,14,35,113,113,14,23,35',
',,35,20,26,26,23,23,8,,57,112,8,8,,,,,22,,44,22,,,,,9,,52,,,9,,60,,60',
'26,,51,44,,,21,41,29,,,29,21,,,,,115,21,59,21,,48,21,,7,,,24,,52,,,',
',48,20,21,,115,,79,,22,20,20,22,58,,,,,22,,64,,21,,23,,149,,59,17,,',
',,,29,21,44,29,,21,44,44,23,29,21,,21,,48,21,,,,44,48,21,,,79,21,108',
'21,82,,44,,,79,,58,51,,16,111,,,85,85,,18,18,,,,,18,17,,,,17,26,112',
'21,21,17,85,20,,21,,60,64,8,,,60,,,113,23,60,,34,23,23,20,21,34,,52',
',26,34,44,,,23,,,,21,52,,,41,,,23,,,21,21,8,,,21,41,,,,,,,,,,,21,,,',
',,60,60,60,,17,47,21,21,,,,,34,34,34,26,,26,17,,20,,,56,,20,,,17,17',
',58,,112,23,,112,112,,112,21,112,,,,21,,,20,21,21,,,16,,,56,17,17,,',
',,,18,18,,,48,,,21,,,,,,,21,21,33,9,85,,85,9,,,85,,9,,,,,,17,,,,17,17',
'112,,44,,,,,,44,,,,,,21,,,,,,17,,112,,48,,56,,,,,,,,21,,21,21,,,,,,',
',,44,16,,,,,,51,,,,,26,,44,9,,,44,17,,52,,44,,25,,,,9,23,,55,85,,,23',
',,9,9,17,17,21,,60,,21,60,55,60,55,55,55,55,55,,,,,21,,,21,,,,22,9,9',
',,,,23,,,,,,,,,21,,,,,23,,21,,23,29,17,21,44,23,17,,,,,21,20,21,,48',
'26,,44,17,,,17,,,,,,44,44,,,,44,,,,,,,,9,17,,,44,,,,17,,,,,17,,,44,44',
',,,17,,,,,,,,20,,,,20,25,25,,23,20,,,,,,,9,,,,,,23,,,,44,,,,44,44,23',
'23,,,,23,9,9,,,,,,,,,,23,,,44,,,,,,,,,23,23,25,,25,,,,,,25,,,55,,,,',
',,,20,55,,,,,,,,9,,,,,20,44,,,23,,,,23,23,20,20,9,,,,,,,,,,,44,44,,',
',,23,23,,,,,9,,,,20,20,,9,,,55,,9,55,55,,,,,,,,,,,,,,,,,,,,,,,,,,23',
'44,,20,,44,,20,20,,,,,,,,,,44,,,44,23,23,,,,,,20,,,,,28,,,,28,28,28',
'44,,,,,,,44,,,,,44,28,28,28,,,,25,44,,,,,,,,28,28,,,,20,23,55,,,23,',
',,,,,55,,,,,,23,,,23,20,20,,,,,,,,,,,,,,,,,,23,,,,,,,23,,,,25,23,25',
'55,25,,,,,23,,,,55,55,55,55,,,,25,,,20,,,55,55,,,,,,,,,,,,,20,,,20,',
',,,,,,,,,,,,25,,,25,,,20,,,,,,,20,,,,,20,,,,,,,,20,,,28,28,28,28,28',
',,,28,,,,,,,,,,,,,,28,,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28',
'28,28,28,28,28,28,28,28,28,28,,,,,25,,,,,28,,28,,,,,,28,,,,,,,28,28',
',,,,,,,28,,25,,,25,,,,,,,,,,25,25,,,,,,,,,,,,,,28,,,,,,,,55,,,,,55,',
'25,,,,55,55,,,,,,,,,,,,55,,,55,55,,,,,,55,,55,,,,25,,,,,,,,,,,,,,,,',
',,,,,,,25,,,,,,,,,,,,,,,,,,,,25,,,,,,,,,37,37,,,,,,37,37,37,,,,28,,',
',,,25,,,,37,,,,,,,,37,37,55,,,,55,,,,,,28,28,,28,28,28,,,,,,,,,,,,,',
',,,,,,,,,,,,,,28,,,28,25,28,,28,,,,,,,,,,,,,,,,28,25,,,,,,,,,,,,,28',
',,28,,,55,,25,,,28,28,28,,,,,,,,,,28,,,28,,,,25,,,,,,,,,,,,,,,,,,55',
',,,,,,,,,,,,28,,55,28,,,,,,28,,,,37,,37,37,37,37,37,37,37,37,37,37,37',
'37,37,37,37,37,37,37,37,37,37,37,37,37,37,,,28,,28,,,28,28,37,,37,,28',
',,28,37,,,,,,,,,,,,,,,,,,28,,,28,,,37,,,,,,,28,28,,,,,37,,,,,,,,,37',
',,,,,,,,,,,,,,28,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,28,,,,,,,,,,,,,,37',
',,,,,,,,,28,,,,,,,,,,,,,,,,,,,,28,28,28,,,,,,,,,,,28,28,28,,,,,,,37',
',,,,,28,,,,,,,,,,,,,,,,,,,,,,,,,,,37,37,37,,,,,,,,,,,,,,,,,,,,,,,,,',
',,37,,,37,28,37,,37,,,,,,,,,,,28,28,28,,,,28,,,,,,,,,,,37,,,,,,,,,,28',
',,37,37,37,,,,,,,,,,37,,,37,,,,28,,,,,,37,,,,,,,,,,,,,,,,,,28,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,37,,37,,,,,,,,,,,,37,,,,,',
',,,,,,,,,,,,,37,,,37,,,,,,,,,,37,37,,,,,,,,,,,37,,,,,,,,,,,,37,,,,,',
'37,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,37,,,,,,,,,,,,,,,,,,,,,,,,37,,,,',
',,,,,,,,,,,,,,,37,,,,,,,,,,,,,37,37,37,,,,,,,,,,,,,37,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,37,,,,,,,,,,,,,,37,37',
'37,,,,37,,,,,,,,,37,,,,,,,,,,,,37,,,,,,,,,,,,,,,,,,,,,,37' ]
        racc_goto_check = arr = ::Array.new(2507, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_goto_pointer = [
   nil,   255,    78,   nil,    40,   150,    57,    13,  -272,   210,
  -521,  -586,  -630,   nil,    47,   172,    13,    51,   -14,   114,
   439,     0,   -38,   365,  -171,   820,   120,    66,  1198,   -12,
   nil,   103,   nil,  -174,   217,  -172,  -363,  1576,    59,    47,
   nil,   -11,    32,  -257,   291,  -263,   -28,   -63,     0,   nil,
    26,     3,   -26,   -74,  -584,   825,    23,  -228,    61,  -366,
   205,   -17,  -247,  -269,  -249,  -258,   -23,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   177,   187,   163,   nil,   157,  -300,
  -650,  -509,  -344,   108,  -199,    36,  -550,   151,  -271,    59,
    52,  -596,    73,  -592,  -448,  -769,  -451,  -224,  -705,    85,
  -448,  -226,  -444,  -708,   107,  -388,  -157,  -540,   -55,  -390,
  -489,   -42,  -123,  -255,  -579,  -407,   169,   -55,   nil,   -79,
   -73,  -740,  -375,  -493,  -610,   nil,   nil,   nil,   139,    15,
    56,    25,  -173,  -256,   143,  -541,  -375,  -375,   nil,  -516,
   nil,  -620,   nil,  -618,   nil,  -541,  -666,  -609,  -613,  -272,
   nil,  -503,  -259,  -468,   nil,  -781,   nil,   nil,  -450 ]

racc_goto_default = [
   nil,   nil,   nil,     3,   nil,     4,   354,   280,   nil,   540,
   nil,   836,   nil,   279,   nil,   nil,   nil,   212,    16,    11,
   213,   304,   nil,   211,   nil,   255,    15,   nil,    19,    20,
    21,   nil,    25,   692,   nil,   nil,   nil,    26,    29,   nil,
    31,    34,    33,   nil,   209,   364,   nil,   116,   436,   115,
    69,   nil,    42,   nil,   nil,   312,   314,   nil,   315,   253,
   434,   nil,   nil,   635,   487,   nil,   nil,   270,    43,    44,
    45,    46,    47,    48,    49,   nil,   271,    55,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   573,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   327,
   326,   712,   329,   nil,   330,   331,   nil,   nil,   440,   nil,
   nil,   nil,   nil,   nil,   nil,    68,    70,    71,    72,   nil,
   nil,   nil,   nil,   611,   nil,   nil,   nil,   nil,   396,   753,
   756,   761,   758,   759,   760,   919,   nil,   nil,   764,   338,
   333,   340,   nil,   567,   568,   768,   343,   346,   261 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 141, :_reduce_none,
  2, 142, :_reduce_2,
  0, 143, :_reduce_3,
  1, 143, :_reduce_4,
  3, 143, :_reduce_5,
  1, 145, :_reduce_none,
  4, 145, :_reduce_7,
  4, 148, :_reduce_8,
  2, 149, :_reduce_9,
  0, 153, :_reduce_10,
  1, 153, :_reduce_11,
  3, 153, :_reduce_12,
  0, 167, :_reduce_13,
  4, 147, :_reduce_14,
  3, 147, :_reduce_15,
  3, 147, :_reduce_none,
  3, 147, :_reduce_17,
  2, 147, :_reduce_18,
  3, 147, :_reduce_19,
  3, 147, :_reduce_20,
  3, 147, :_reduce_21,
  3, 147, :_reduce_22,
  3, 147, :_reduce_23,
  4, 147, :_reduce_none,
  3, 147, :_reduce_25,
  3, 147, :_reduce_26,
  3, 147, :_reduce_27,
  6, 147, :_reduce_none,
  6, 147, :_reduce_none,
  5, 147, :_reduce_30,
  5, 147, :_reduce_none,
  5, 147, :_reduce_none,
  3, 147, :_reduce_none,
  3, 147, :_reduce_34,
  3, 147, :_reduce_35,
  3, 147, :_reduce_36,
  1, 147, :_reduce_none,
  1, 166, :_reduce_none,
  3, 166, :_reduce_39,
  3, 166, :_reduce_40,
  2, 166, :_reduce_41,
  2, 166, :_reduce_42,
  1, 166, :_reduce_none,
  1, 156, :_reduce_none,
  1, 158, :_reduce_none,
  1, 158, :_reduce_none,
  2, 158, :_reduce_47,
  2, 158, :_reduce_48,
  2, 158, :_reduce_49,
  1, 170, :_reduce_none,
  4, 170, :_reduce_none,
  4, 170, :_reduce_none,
  4, 170, :_reduce_none,
  4, 175, :_reduce_none,
  2, 169, :_reduce_55,
  3, 169, :_reduce_none,
  4, 169, :_reduce_57,
  5, 169, :_reduce_none,
  4, 169, :_reduce_59,
  5, 169, :_reduce_none,
  4, 169, :_reduce_61,
  5, 169, :_reduce_none,
  2, 169, :_reduce_63,
  2, 169, :_reduce_64,
  1, 159, :_reduce_65,
  3, 159, :_reduce_66,
  1, 179, :_reduce_67,
  3, 179, :_reduce_68,
  1, 178, :_reduce_69,
  2, 178, :_reduce_70,
  3, 178, :_reduce_71,
  5, 178, :_reduce_none,
  2, 178, :_reduce_73,
  4, 178, :_reduce_none,
  2, 178, :_reduce_75,
  1, 178, :_reduce_76,
  3, 178, :_reduce_none,
  1, 181, :_reduce_78,
  3, 181, :_reduce_79,
  2, 180, :_reduce_80,
  3, 180, :_reduce_81,
  1, 183, :_reduce_none,
  3, 183, :_reduce_none,
  1, 182, :_reduce_84,
  4, 182, :_reduce_85,
  3, 182, :_reduce_86,
  3, 182, :_reduce_none,
  3, 182, :_reduce_none,
  3, 182, :_reduce_none,
  2, 182, :_reduce_none,
  1, 182, :_reduce_none,
  1, 157, :_reduce_92,
  4, 157, :_reduce_93,
  4, 157, :_reduce_94,
  3, 157, :_reduce_95,
  3, 157, :_reduce_96,
  3, 157, :_reduce_97,
  3, 157, :_reduce_98,
  2, 157, :_reduce_99,
  1, 157, :_reduce_none,
  1, 185, :_reduce_none,
  2, 186, :_reduce_102,
  1, 186, :_reduce_103,
  3, 186, :_reduce_104,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_108,
  1, 187, :_reduce_109,
  1, 154, :_reduce_110,
  1, 154, :_reduce_none,
  1, 155, :_reduce_112,
  3, 155, :_reduce_113,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  3, 168, :_reduce_188,
  5, 168, :_reduce_189,
  3, 168, :_reduce_190,
  6, 168, :_reduce_191,
  6, 168, :_reduce_192,
  5, 168, :_reduce_193,
  5, 168, :_reduce_none,
  5, 168, :_reduce_none,
  5, 168, :_reduce_none,
  4, 168, :_reduce_none,
  3, 168, :_reduce_none,
  3, 168, :_reduce_199,
  3, 168, :_reduce_200,
  3, 168, :_reduce_201,
  3, 168, :_reduce_202,
  3, 168, :_reduce_203,
  3, 168, :_reduce_204,
  3, 168, :_reduce_205,
  3, 168, :_reduce_206,
  4, 168, :_reduce_207,
  4, 168, :_reduce_208,
  2, 168, :_reduce_209,
  2, 168, :_reduce_210,
  3, 168, :_reduce_211,
  3, 168, :_reduce_212,
  3, 168, :_reduce_213,
  3, 168, :_reduce_214,
  3, 168, :_reduce_215,
  3, 168, :_reduce_216,
  3, 168, :_reduce_217,
  3, 168, :_reduce_218,
  3, 168, :_reduce_219,
  3, 168, :_reduce_220,
  3, 168, :_reduce_221,
  3, 168, :_reduce_222,
  3, 168, :_reduce_223,
  2, 168, :_reduce_224,
  2, 168, :_reduce_225,
  3, 168, :_reduce_226,
  3, 168, :_reduce_227,
  3, 168, :_reduce_228,
  3, 168, :_reduce_229,
  3, 168, :_reduce_230,
  0, 193, :_reduce_231,
  0, 194, :_reduce_232,
  7, 168, :_reduce_233,
  1, 168, :_reduce_none,
  1, 165, :_reduce_none,
  1, 162, :_reduce_236,
  2, 162, :_reduce_237,
  2, 162, :_reduce_238,
  4, 162, :_reduce_239,
  2, 162, :_reduce_240,
  3, 162, :_reduce_241,
  3, 200, :_reduce_242,
  2, 202, :_reduce_none,
  1, 203, :_reduce_244,
  1, 203, :_reduce_none,
  1, 201, :_reduce_246,
  1, 201, :_reduce_none,
  2, 201, :_reduce_248,
  4, 201, :_reduce_249,
  2, 201, :_reduce_250,
  1, 171, :_reduce_251,
  2, 171, :_reduce_252,
  2, 171, :_reduce_253,
  4, 171, :_reduce_254,
  1, 171, :_reduce_255,
  4, 205, :_reduce_none,
  1, 205, :_reduce_none,
  0, 207, :_reduce_258,
  2, 174, :_reduce_259,
  1, 206, :_reduce_none,
  2, 206, :_reduce_261,
  3, 206, :_reduce_262,
  2, 199, :_reduce_263,
  2, 204, :_reduce_264,
  0, 204, :_reduce_265,
  1, 196, :_reduce_266,
  2, 196, :_reduce_267,
  3, 196, :_reduce_268,
  4, 196, :_reduce_269,
  3, 164, :_reduce_270,
  4, 164, :_reduce_271,
  2, 164, :_reduce_272,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  0, 229, :_reduce_282,
  4, 192, :_reduce_283,
  4, 192, :_reduce_284,
  3, 192, :_reduce_285,
  3, 192, :_reduce_286,
  2, 192, :_reduce_287,
  4, 192, :_reduce_288,
  4, 192, :_reduce_289,
  3, 192, :_reduce_290,
  3, 192, :_reduce_291,
  1, 192, :_reduce_292,
  4, 192, :_reduce_293,
  3, 192, :_reduce_294,
  1, 192, :_reduce_295,
  5, 192, :_reduce_296,
  4, 192, :_reduce_297,
  3, 192, :_reduce_298,
  2, 192, :_reduce_299,
  1, 192, :_reduce_none,
  2, 192, :_reduce_301,
  2, 192, :_reduce_302,
  6, 192, :_reduce_303,
  6, 192, :_reduce_304,
  0, 230, :_reduce_305,
  0, 231, :_reduce_306,
  7, 192, :_reduce_307,
  0, 232, :_reduce_308,
  0, 233, :_reduce_309,
  7, 192, :_reduce_310,
  5, 192, :_reduce_311,
  4, 192, :_reduce_312,
  5, 192, :_reduce_313,
  0, 234, :_reduce_314,
  0, 235, :_reduce_315,
  9, 192, :_reduce_316,
  0, 236, :_reduce_317,
  6, 192, :_reduce_318,
  0, 237, :_reduce_319,
  0, 238, :_reduce_320,
  8, 192, :_reduce_321,
  0, 239, :_reduce_322,
  0, 240, :_reduce_323,
  6, 192, :_reduce_324,
  0, 241, :_reduce_325,
  6, 192, :_reduce_326,
  0, 242, :_reduce_327,
  0, 243, :_reduce_328,
  9, 192, :_reduce_329,
  1, 192, :_reduce_330,
  1, 192, :_reduce_331,
  1, 192, :_reduce_332,
  1, 192, :_reduce_none,
  1, 161, :_reduce_none,
  1, 219, :_reduce_none,
  1, 219, :_reduce_none,
  1, 219, :_reduce_none,
  2, 219, :_reduce_none,
  1, 221, :_reduce_none,
  1, 221, :_reduce_none,
  1, 221, :_reduce_none,
  0, 246, :_reduce_342,
  0, 247, :_reduce_343,
  4, 218, :_reduce_344,
  3, 244, :_reduce_345,
  2, 244, :_reduce_346,
  1, 244, :_reduce_none,
  1, 244, :_reduce_none,
  3, 245, :_reduce_349,
  3, 245, :_reduce_350,
  1, 220, :_reduce_351,
  5, 220, :_reduce_352,
  1, 151, :_reduce_none,
  2, 151, :_reduce_354,
  1, 249, :_reduce_355,
  3, 249, :_reduce_356,
  3, 250, :_reduce_357,
  1, 176, :_reduce_none,
  2, 176, :_reduce_359,
  1, 176, :_reduce_360,
  3, 176, :_reduce_361,
  1, 251, :_reduce_362,
  2, 253, :_reduce_363,
  1, 253, :_reduce_364,
  6, 248, :_reduce_365,
  4, 248, :_reduce_366,
  4, 248, :_reduce_367,
  2, 248, :_reduce_368,
  2, 248, :_reduce_369,
  4, 248, :_reduce_370,
  2, 248, :_reduce_371,
  2, 248, :_reduce_372,
  1, 248, :_reduce_373,
  0, 257, :_reduce_374,
  5, 256, :_reduce_375,
  2, 172, :_reduce_376,
  4, 172, :_reduce_none,
  4, 172, :_reduce_none,
  4, 172, :_reduce_none,
  2, 217, :_reduce_380,
  4, 217, :_reduce_381,
  4, 217, :_reduce_382,
  3, 217, :_reduce_383,
  4, 217, :_reduce_384,
  3, 217, :_reduce_385,
  2, 217, :_reduce_386,
  1, 217, :_reduce_387,
  0, 259, :_reduce_388,
  5, 216, :_reduce_389,
  0, 260, :_reduce_390,
  5, 216, :_reduce_391,
  0, 262, :_reduce_392,
  6, 222, :_reduce_393,
  1, 261, :_reduce_394,
  1, 261, :_reduce_none,
  6, 150, :_reduce_396,
  0, 150, :_reduce_397,
  1, 263, :_reduce_398,
  1, 263, :_reduce_none,
  1, 263, :_reduce_none,
  2, 264, :_reduce_401,
  1, 264, :_reduce_402,
  2, 152, :_reduce_403,
  1, 152, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 209, :_reduce_408,
  1, 267, :_reduce_none,
  2, 267, :_reduce_410,
  3, 268, :_reduce_411,
  1, 268, :_reduce_412,
  3, 210, :_reduce_413,
  3, 211, :_reduce_414,
  3, 212, :_reduce_415,
  3, 212, :_reduce_416,
  1, 271, :_reduce_417,
  3, 271, :_reduce_418,
  1, 272, :_reduce_419,
  2, 272, :_reduce_420,
  3, 213, :_reduce_421,
  3, 213, :_reduce_422,
  1, 274, :_reduce_423,
  3, 274, :_reduce_424,
  1, 269, :_reduce_425,
  2, 269, :_reduce_426,
  1, 270, :_reduce_427,
  2, 270, :_reduce_428,
  1, 273, :_reduce_429,
  0, 276, :_reduce_430,
  3, 273, :_reduce_431,
  0, 277, :_reduce_432,
  4, 273, :_reduce_433,
  1, 275, :_reduce_434,
  1, 275, :_reduce_435,
  1, 275, :_reduce_436,
  1, 275, :_reduce_none,
  2, 190, :_reduce_438,
  1, 190, :_reduce_439,
  1, 278, :_reduce_none,
  1, 278, :_reduce_none,
  1, 278, :_reduce_none,
  1, 278, :_reduce_none,
  3, 266, :_reduce_444,
  1, 265, :_reduce_445,
  1, 265, :_reduce_446,
  2, 265, :_reduce_447,
  2, 265, :_reduce_448,
  2, 265, :_reduce_449,
  2, 265, :_reduce_450,
  1, 184, :_reduce_451,
  1, 184, :_reduce_452,
  1, 184, :_reduce_453,
  1, 184, :_reduce_454,
  1, 184, :_reduce_455,
  1, 184, :_reduce_456,
  1, 184, :_reduce_457,
  1, 184, :_reduce_458,
  1, 184, :_reduce_459,
  1, 184, :_reduce_460,
  1, 184, :_reduce_461,
  1, 214, :_reduce_462,
  1, 160, :_reduce_463,
  1, 163, :_reduce_464,
  1, 163, :_reduce_none,
  1, 224, :_reduce_466,
  3, 224, :_reduce_467,
  2, 224, :_reduce_468,
  4, 226, :_reduce_469,
  2, 226, :_reduce_470,
  1, 280, :_reduce_none,
  1, 280, :_reduce_none,
  2, 281, :_reduce_473,
  1, 281, :_reduce_474,
  1, 282, :_reduce_475,
  2, 283, :_reduce_476,
  1, 283, :_reduce_477,
  1, 284, :_reduce_478,
  3, 284, :_reduce_479,
  4, 285, :_reduce_480,
  2, 285, :_reduce_481,
  2, 285, :_reduce_482,
  1, 285, :_reduce_483,
  2, 287, :_reduce_484,
  0, 287, :_reduce_485,
  6, 279, :_reduce_486,
  4, 279, :_reduce_487,
  4, 279, :_reduce_488,
  2, 279, :_reduce_489,
  4, 279, :_reduce_490,
  2, 279, :_reduce_491,
  2, 279, :_reduce_492,
  1, 279, :_reduce_493,
  0, 279, :_reduce_494,
  1, 289, :_reduce_none,
  1, 289, :_reduce_496,
  1, 290, :_reduce_497,
  1, 290, :_reduce_498,
  1, 290, :_reduce_499,
  1, 290, :_reduce_500,
  1, 291, :_reduce_501,
  3, 291, :_reduce_502,
  1, 223, :_reduce_none,
  1, 223, :_reduce_none,
  1, 293, :_reduce_505,
  3, 293, :_reduce_none,
  1, 294, :_reduce_507,
  3, 294, :_reduce_508,
  1, 292, :_reduce_none,
  4, 292, :_reduce_none,
  3, 292, :_reduce_none,
  2, 292, :_reduce_none,
  1, 292, :_reduce_none,
  1, 254, :_reduce_514,
  3, 254, :_reduce_515,
  3, 295, :_reduce_516,
  1, 288, :_reduce_517,
  3, 288, :_reduce_518,
  1, 296, :_reduce_none,
  1, 296, :_reduce_none,
  2, 255, :_reduce_521,
  1, 255, :_reduce_522,
  1, 297, :_reduce_none,
  1, 297, :_reduce_none,
  2, 252, :_reduce_525,
  2, 286, :_reduce_526,
  0, 286, :_reduce_527,
  1, 227, :_reduce_528,
  4, 227, :_reduce_529,
  0, 215, :_reduce_530,
  2, 215, :_reduce_531,
  1, 198, :_reduce_532,
  3, 198, :_reduce_533,
  3, 298, :_reduce_534,
  2, 298, :_reduce_535,
  4, 298, :_reduce_536,
  1, 177, :_reduce_none,
  1, 177, :_reduce_none,
  1, 177, :_reduce_none,
  1, 173, :_reduce_none,
  1, 173, :_reduce_none,
  1, 173, :_reduce_none,
  1, 173, :_reduce_none,
  1, 258, :_reduce_none,
  1, 258, :_reduce_none,
  1, 258, :_reduce_none,
  1, 228, :_reduce_none,
  1, 228, :_reduce_none,
  0, 144, :_reduce_none,
  1, 144, :_reduce_none,
  0, 191, :_reduce_none,
  1, 191, :_reduce_none,
  0, 197, :_reduce_none,
  1, 197, :_reduce_none,
  1, 197, :_reduce_none,
  1, 225, :_reduce_none,
  1, 225, :_reduce_none,
  1, 146, :_reduce_none,
  2, 146, :_reduce_none,
  0, 195, :_reduce_560 ]

racc_reduce_n = 561

racc_shift_n = 977

racc_token_table = {
  false => 0,
  :error => 1,
  :kCLASS => 2,
  :kMODULE => 3,
  :kDEF => 4,
  :kUNDEF => 5,
  :kBEGIN => 6,
  :kRESCUE => 7,
  :kENSURE => 8,
  :kEND => 9,
  :kIF => 10,
  :kUNLESS => 11,
  :kTHEN => 12,
  :kELSIF => 13,
  :kELSE => 14,
  :kCASE => 15,
  :kWHEN => 16,
  :kWHILE => 17,
  :kUNTIL => 18,
  :kFOR => 19,
  :kBREAK => 20,
  :kNEXT => 21,
  :kREDO => 22,
  :kRETRY => 23,
  :kIN => 24,
  :kDO => 25,
  :kDO_COND => 26,
  :kDO_BLOCK => 27,
  :kDO_LAMBDA => 28,
  :kRETURN => 29,
  :kYIELD => 30,
  :kSUPER => 31,
  :kSELF => 32,
  :kNIL => 33,
  :kTRUE => 34,
  :kFALSE => 35,
  :kAND => 36,
  :kOR => 37,
  :kNOT => 38,
  :kIF_MOD => 39,
  :kUNLESS_MOD => 40,
  :kWHILE_MOD => 41,
  :kUNTIL_MOD => 42,
  :kRESCUE_MOD => 43,
  :kALIAS => 44,
  :kDEFINED => 45,
  :klBEGIN => 46,
  :klEND => 47,
  :k__LINE__ => 48,
  :k__FILE__ => 49,
  :tIDENTIFIER => 50,
  :tFID => 51,
  :tGVAR => 52,
  :tIVAR => 53,
  :tCONSTANT => 54,
  :tLABEL => 55,
  :tCVAR => 56,
  :tNTH_REF => 57,
  :tBACK_REF => 58,
  :tSTRING_CONTENT => 59,
  :tINTEGER => 60,
  :tFLOAT => 61,
  :tREGEXP_END => 62,
  :tUPLUS => 63,
  :tUMINUS => 64,
  :tPOW => 65,
  :tCMP => 66,
  :tEQ => 67,
  :tEQQ => 68,
  :tNEQ => 69,
  :tGEQ => 70,
  :tLEQ => 71,
  :tANDOP => 72,
  :tOROP => 73,
  :tMATCH => 74,
  :tNMATCH => 75,
  :tJSDOT => 76,
  :tDOT => 77,
  :tDOT2 => 78,
  :tDOT3 => 79,
  :tAREF => 80,
  :tASET => 81,
  :tLSHFT => 82,
  :tRSHFT => 83,
  :tCOLON2 => 84,
  :tCOLON3 => 85,
  :tOP_ASGN => 86,
  :tASSOC => 87,
  :tLPAREN => 88,
  :tLPAREN2 => 89,
  :tRPAREN => 90,
  :tLPAREN_ARG => 91,
  :tRBRACK => 92,
  :tLBRACE => 93,
  :tLBRACE_ARG => 94,
  :tSTAR => 95,
  :tSTAR2 => 96,
  :tAMPER => 97,
  :tAMPER2 => 98,
  :tTILDE => 99,
  :tPERCENT => 100,
  :tDIVIDE => 101,
  :tPLUS => 102,
  :tMINUS => 103,
  :tLT => 104,
  :tGT => 105,
  :tPIPE => 106,
  :tBANG => 107,
  :tCARET => 108,
  :tLCURLY => 109,
  :tRCURLY => 110,
  :tBACK_REF2 => 111,
  :tSYMBEG => 112,
  :tSTRING_BEG => 113,
  :tXSTRING_BEG => 114,
  :tREGEXP_BEG => 115,
  :tWORDS_BEG => 116,
  :tAWORDS_BEG => 117,
  :tSTRING_DBEG => 118,
  :tSTRING_DVAR => 119,
  :tSTRING_END => 120,
  :tSTRING => 121,
  :tSYMBOL => 122,
  :tNL => 123,
  :tEH => 124,
  :tCOLON => 125,
  :tCOMMA => 126,
  :tSPACE => 127,
  :tSEMI => 128,
  :tLAMBDA => 129,
  :tLAMBEG => 130,
  :tLBRACK2 => 131,
  :tLBRACK => 132,
  :tJSLBRACK => 133,
  :tDSTAR => 134,
  :tLABEL_END => 135,
  :tEQL => 136,
  :tLOWEST => 137,
  "-@NUM" => 138,
  "+@NUM" => 139 }

racc_nt_base = 140

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "kCLASS",
  "kMODULE",
  "kDEF",
  "kUNDEF",
  "kBEGIN",
  "kRESCUE",
  "kENSURE",
  "kEND",
  "kIF",
  "kUNLESS",
  "kTHEN",
  "kELSIF",
  "kELSE",
  "kCASE",
  "kWHEN",
  "kWHILE",
  "kUNTIL",
  "kFOR",
  "kBREAK",
  "kNEXT",
  "kREDO",
  "kRETRY",
  "kIN",
  "kDO",
  "kDO_COND",
  "kDO_BLOCK",
  "kDO_LAMBDA",
  "kRETURN",
  "kYIELD",
  "kSUPER",
  "kSELF",
  "kNIL",
  "kTRUE",
  "kFALSE",
  "kAND",
  "kOR",
  "kNOT",
  "kIF_MOD",
  "kUNLESS_MOD",
  "kWHILE_MOD",
  "kUNTIL_MOD",
  "kRESCUE_MOD",
  "kALIAS",
  "kDEFINED",
  "klBEGIN",
  "klEND",
  "k__LINE__",
  "k__FILE__",
  "tIDENTIFIER",
  "tFID",
  "tGVAR",
  "tIVAR",
  "tCONSTANT",
  "tLABEL",
  "tCVAR",
  "tNTH_REF",
  "tBACK_REF",
  "tSTRING_CONTENT",
  "tINTEGER",
  "tFLOAT",
  "tREGEXP_END",
  "tUPLUS",
  "tUMINUS",
  "tPOW",
  "tCMP",
  "tEQ",
  "tEQQ",
  "tNEQ",
  "tGEQ",
  "tLEQ",
  "tANDOP",
  "tOROP",
  "tMATCH",
  "tNMATCH",
  "tJSDOT",
  "tDOT",
  "tDOT2",
  "tDOT3",
  "tAREF",
  "tASET",
  "tLSHFT",
  "tRSHFT",
  "tCOLON2",
  "tCOLON3",
  "tOP_ASGN",
  "tASSOC",
  "tLPAREN",
  "tLPAREN2",
  "tRPAREN",
  "tLPAREN_ARG",
  "tRBRACK",
  "tLBRACE",
  "tLBRACE_ARG",
  "tSTAR",
  "tSTAR2",
  "tAMPER",
  "tAMPER2",
  "tTILDE",
  "tPERCENT",
  "tDIVIDE",
  "tPLUS",
  "tMINUS",
  "tLT",
  "tGT",
  "tPIPE",
  "tBANG",
  "tCARET",
  "tLCURLY",
  "tRCURLY",
  "tBACK_REF2",
  "tSYMBEG",
  "tSTRING_BEG",
  "tXSTRING_BEG",
  "tREGEXP_BEG",
  "tWORDS_BEG",
  "tAWORDS_BEG",
  "tSTRING_DBEG",
  "tSTRING_DVAR",
  "tSTRING_END",
  "tSTRING",
  "tSYMBOL",
  "tNL",
  "tEH",
  "tCOLON",
  "tCOMMA",
  "tSPACE",
  "tSEMI",
  "tLAMBDA",
  "tLAMBEG",
  "tLBRACK2",
  "tLBRACK",
  "tJSLBRACK",
  "tDSTAR",
  "tLABEL_END",
  "tEQL",
  "tLOWEST",
  "\"-@NUM\"",
  "\"+@NUM\"",
  "$start",
  "program",
  "top_compstmt",
  "top_stmts",
  "opt_terms",
  "top_stmt",
  "terms",
  "stmt",
  "bodystmt",
  "compstmt",
  "opt_rescue",
  "opt_else",
  "opt_ensure",
  "stmts",
  "fitem",
  "undef_list",
  "expr_value",
  "lhs",
  "command_call",
  "mlhs",
  "var_lhs",
  "primary_value",
  "aref_args",
  "backref",
  "mrhs",
  "arg_value",
  "expr",
  "@1",
  "arg",
  "command",
  "block_command",
  "call_args",
  "block_call",
  "operation2",
  "command_args",
  "cmd_brace_block",
  "opt_block_var",
  "operation",
  "mlhs_basic",
  "mlhs_entry",
  "mlhs_head",
  "mlhs_item",
  "mlhs_node",
  "mlhs_post",
  "variable",
  "cname",
  "cpath",
  "fname",
  "op",
  "reswords",
  "symbol",
  "opt_nl",
  "primary",
  "@2",
  "@3",
  "none",
  "args",
  "trailer",
  "assocs",
  "block_arg",
  "paren_args",
  "opt_call_args",
  "rparen",
  "opt_paren_args",
  "opt_block_arg",
  "call_args2",
  "open_args",
  "@4",
  "literal",
  "strings",
  "xstring",
  "regexp",
  "words",
  "awords",
  "var_ref",
  "assoc_list",
  "brace_block",
  "method_call",
  "lambda",
  "then",
  "if_tail",
  "do",
  "case_body",
  "for_var",
  "superclass",
  "term",
  "f_arglist",
  "singleton",
  "dot_or_colon",
  "@5",
  "@6",
  "@7",
  "@8",
  "@9",
  "@10",
  "@11",
  "@12",
  "@13",
  "@14",
  "@15",
  "@16",
  "@17",
  "@18",
  "@19",
  "f_larglist",
  "lambda_body",
  "@20",
  "@21",
  "block_param",
  "f_block_optarg",
  "f_block_opt",
  "block_args_tail",
  "f_block_arg",
  "opt_block_args_tail",
  "f_arg",
  "f_rest_arg",
  "do_block",
  "@22",
  "operation3",
  "@23",
  "@24",
  "cases",
  "@25",
  "exc_list",
  "exc_var",
  "numeric",
  "dsym",
  "string",
  "string1",
  "string_contents",
  "xstring_contents",
  "word_list",
  "word",
  "string_content",
  "qword_list",
  "string_dvar",
  "@26",
  "@27",
  "sym",
  "f_args",
  "kwrest_mark",
  "f_kwrest",
  "f_label",
  "f_kw",
  "f_kwarg",
  "args_tail",
  "opt_f_block_arg",
  "opt_args_tail",
  "f_optarg",
  "f_norm_arg",
  "f_bad_arg",
  "f_arg_item",
  "f_margs",
  "f_marg",
  "f_marg_list",
  "f_opt",
  "restarg_mark",
  "blkarg_mark",
  "assoc" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

def _reduce_2(val, _values, result)
                      result = new_compstmt val[0]
                    
    result
end

def _reduce_3(val, _values, result)
                      result = new_block
                    
    result
end

def _reduce_4(val, _values, result)
                      result = new_block val[0]
                    
    result
end

def _reduce_5(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

# reduce 6 omitted

def _reduce_7(val, _values, result)
                      result = val[2]
                    
    result
end

def _reduce_8(val, _values, result)
                      result = new_body(val[0], val[1], val[2], val[3])
                    
    result
end

def _reduce_9(val, _values, result)
                      result = new_compstmt val[0]
                    
    result
end

def _reduce_10(val, _values, result)
                      result = new_block
                    
    result
end

def _reduce_11(val, _values, result)
                      result = new_block val[0]
                    
    result
end

def _reduce_12(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_13(val, _values, result)
                      lexer.lex_state = :expr_fname
                    
    result
end

def _reduce_14(val, _values, result)
                      result = new_alias(val[0], val[1], val[3])
                    
    result
end

def _reduce_15(val, _values, result)
                      result = s(:valias, value(val[1]).to_sym, value(val[2]).to_sym)
                    
    result
end

# reduce 16 omitted

def _reduce_17(val, _values, result)
                      result = s(:valias, value(val[1]).to_sym, value(val[2]).to_sym)
                    
    result
end

def _reduce_18(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_19(val, _values, result)
                      result = new_if(val[1], val[2], val[0], nil)
                    
    result
end

def _reduce_20(val, _values, result)
                      result = new_if(val[1], val[2], nil, val[0])
                    
    result
end

def _reduce_21(val, _values, result)
                      result = new_while(val[1], val[2], val[0])
                    
    result
end

def _reduce_22(val, _values, result)
                      result = new_until(val[1], val[2], val[0])
                    
    result
end

def _reduce_23(val, _values, result)
                      result = new_rescue_mod(val[1], val[0], val[2])
                    
    result
end

# reduce 24 omitted

def _reduce_25(val, _values, result)
                      result = new_assign(val[0], val[1], val[2])
                    
    result
end

def _reduce_26(val, _values, result)
                      result = s(:masgn, val[0], s(:to_ary, val[2]))
                    
    result
end

def _reduce_27(val, _values, result)
                      result = new_op_asgn val[1], val[0], val[2]
                    
    result
end

# reduce 28 omitted

# reduce 29 omitted

def _reduce_30(val, _values, result)
                      result = s(:op_asgn2, val[0], op_to_setter(val[2]), value(val[3]).to_sym, val[4])
                    
    result
end

# reduce 31 omitted

# reduce 32 omitted

# reduce 33 omitted

def _reduce_34(val, _values, result)
                      result = new_assign val[0], val[1], s(:svalue, val[2])
                    
    result
end

def _reduce_35(val, _values, result)
                      result = s(:masgn, val[0], s(:to_ary, val[2]))
                    
    result
end

def _reduce_36(val, _values, result)
                      result = s(:masgn, val[0], val[2])
                    
    result
end

# reduce 37 omitted

# reduce 38 omitted

def _reduce_39(val, _values, result)
                      result = s(:and, val[0], val[2])
                    
    result
end

def _reduce_40(val, _values, result)
                      result = s(:or, val[0], val[2])
                    
    result
end

def _reduce_41(val, _values, result)
                      result = new_unary_call(['!', []], val[1])
                    
    result
end

def _reduce_42(val, _values, result)
                      result = new_unary_call(val[0], val[1])
                    
    result
end

# reduce 43 omitted

# reduce 44 omitted

# reduce 45 omitted

# reduce 46 omitted

def _reduce_47(val, _values, result)
                      result = new_return(val[0], val[1])
                    
    result
end

def _reduce_48(val, _values, result)
                      result = new_break(val[0], val[1])
                    
    result
end

def _reduce_49(val, _values, result)
                      result = new_next(val[0], val[1])
                    
    result
end

# reduce 50 omitted

# reduce 51 omitted

# reduce 52 omitted

# reduce 53 omitted

# reduce 54 omitted

def _reduce_55(val, _values, result)
                      result = new_call(nil, val[0], val[1])
                    
    result
end

# reduce 56 omitted

def _reduce_57(val, _values, result)
                      result = new_js_call(val[0], val[2], val[3])
                    
    result
end

# reduce 58 omitted

def _reduce_59(val, _values, result)
                      result = new_call(val[0], val[2], val[3])
                    
    result
end

# reduce 60 omitted

def _reduce_61(val, _values, result)
                    result = new_call(val[0], val[2], val[3])
                  
    result
end

# reduce 62 omitted

def _reduce_63(val, _values, result)
                      result = new_super(val[0], val[1])
                    
    result
end

def _reduce_64(val, _values, result)
                      result = new_yield val[1]
                    
    result
end

def _reduce_65(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_66(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_67(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_68(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_69(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_70(val, _values, result)
                      result = val[0] << val[1]
                    
    result
end

def _reduce_71(val, _values, result)
                      result = val[0] << s(:splat, val[2])
                    
    result
end

# reduce 72 omitted

def _reduce_73(val, _values, result)
                      result = val[0] << s(:splat)
                    
    result
end

# reduce 74 omitted

def _reduce_75(val, _values, result)
                      result = s(:array, s(:splat, val[1]))
                    
    result
end

def _reduce_76(val, _values, result)
                      result = s(:array, s(:splat))
                    
    result
end

# reduce 77 omitted

def _reduce_78(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_79(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_80(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

def _reduce_81(val, _values, result)
                      result = val[0] << val[1]
                    
    result
end

# reduce 82 omitted

# reduce 83 omitted

def _reduce_84(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_85(val, _values, result)
                      args = val[2] ? val[2] : []
                      result = s(:attrasgn, val[0], :[]=, s(:arglist, *args))
                    
    result
end

def _reduce_86(val, _values, result)
                      result = new_call val[0], val[2], []
                    
    result
end

# reduce 87 omitted

# reduce 88 omitted

# reduce 89 omitted

# reduce 90 omitted

# reduce 91 omitted

def _reduce_92(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_93(val, _values, result)
                      result = new_js_attrasgn(val[0], val[2])
                    
    result
end

def _reduce_94(val, _values, result)
                      result = new_attrasgn(val[0], :[]=, val[2])
                    
    result
end

def _reduce_95(val, _values, result)
                      result = new_attrasgn(val[0], op_to_setter(val[2]))
                    
    result
end

def _reduce_96(val, _values, result)
                      result = new_attrasgn(val[0], op_to_setter(val[2]))
                    
    result
end

def _reduce_97(val, _values, result)
                      result = new_attrasgn(val[0], op_to_setter(val[2]))
                    
    result
end

def _reduce_98(val, _values, result)
                      result = new_colon2(val[0], val[1], val[2])
                    
    result
end

def _reduce_99(val, _values, result)
                      result = new_colon3(val[0], val[1])
                    
    result
end

# reduce 100 omitted

# reduce 101 omitted

def _reduce_102(val, _values, result)
                      result = new_colon3(val[0], val[1])
                    
    result
end

def _reduce_103(val, _values, result)
                      result = new_const(val[0])
                    
    result
end

def _reduce_104(val, _values, result)
                      result = new_colon2(val[0], val[1], val[2])
                    
    result
end

# reduce 105 omitted

# reduce 106 omitted

# reduce 107 omitted

def _reduce_108(val, _values, result)
                      lexer.lex_state = :expr_end
                      result = val[0]
                    
    result
end

def _reduce_109(val, _values, result)
                      lexer.lex_state = :expr_end
                      result = val[0]
                    
    result
end

def _reduce_110(val, _values, result)
                      result = new_sym(val[0])
                    
    result
end

# reduce 111 omitted

def _reduce_112(val, _values, result)
                      result = s(:undef, val[0])
                    
    result
end

def _reduce_113(val, _values, result)
                      result = val[0] << val[2]
                    
    result
end

# reduce 114 omitted

# reduce 115 omitted

# reduce 116 omitted

# reduce 117 omitted

# reduce 118 omitted

# reduce 119 omitted

# reduce 120 omitted

# reduce 121 omitted

# reduce 122 omitted

# reduce 123 omitted

# reduce 124 omitted

# reduce 125 omitted

# reduce 126 omitted

# reduce 127 omitted

# reduce 128 omitted

# reduce 129 omitted

# reduce 130 omitted

# reduce 131 omitted

# reduce 132 omitted

# reduce 133 omitted

# reduce 134 omitted

# reduce 135 omitted

# reduce 136 omitted

# reduce 137 omitted

# reduce 138 omitted

# reduce 139 omitted

# reduce 140 omitted

# reduce 141 omitted

# reduce 142 omitted

# reduce 143 omitted

# reduce 144 omitted

# reduce 145 omitted

# reduce 146 omitted

# reduce 147 omitted

# reduce 148 omitted

# reduce 149 omitted

# reduce 150 omitted

# reduce 151 omitted

# reduce 152 omitted

# reduce 153 omitted

# reduce 154 omitted

# reduce 155 omitted

# reduce 156 omitted

# reduce 157 omitted

# reduce 158 omitted

# reduce 159 omitted

# reduce 160 omitted

# reduce 161 omitted

# reduce 162 omitted

# reduce 163 omitted

# reduce 164 omitted

# reduce 165 omitted

# reduce 166 omitted

# reduce 167 omitted

# reduce 168 omitted

# reduce 169 omitted

# reduce 170 omitted

# reduce 171 omitted

# reduce 172 omitted

# reduce 173 omitted

# reduce 174 omitted

# reduce 175 omitted

# reduce 176 omitted

# reduce 177 omitted

# reduce 178 omitted

# reduce 179 omitted

# reduce 180 omitted

# reduce 181 omitted

# reduce 182 omitted

# reduce 183 omitted

# reduce 184 omitted

# reduce 185 omitted

# reduce 186 omitted

# reduce 187 omitted

def _reduce_188(val, _values, result)
                      result = new_assign(val[0], val[1], val[2])
                    
    result
end

def _reduce_189(val, _values, result)
                      result = new_assign val[0], val[1], s(:rescue_mod, val[2], val[4])
                    
    result
end

def _reduce_190(val, _values, result)
                      result = new_op_asgn val[1], val[0], val[2]
                    
    result
end

def _reduce_191(val, _values, result)
                      result = new_op_asgn1(val[0], val[2], val[4], val[5])
                    
    result
end

def _reduce_192(val, _values, result)
                      raise ".JS[...] #{val[4]} is not supported"
                    
    result
end

def _reduce_193(val, _values, result)
                      result = s(:op_asgn2, val[0], op_to_setter(val[2]), value(val[3]).to_sym, val[4])
                    
    result
end

# reduce 194 omitted

# reduce 195 omitted

# reduce 196 omitted

# reduce 197 omitted

# reduce 198 omitted

def _reduce_199(val, _values, result)
                      result = new_irange(val[0], val[1], val[2])
                    
    result
end

def _reduce_200(val, _values, result)
                      result = new_erange(val[0], val[1], val[2])
                    
    result
end

def _reduce_201(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_202(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_203(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_204(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_205(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_206(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_207(val, _values, result)
                      result = new_call new_binary_call(new_int(val[1]), val[2], val[3]), [:"-@", []], []
                    
    result
end

def _reduce_208(val, _values, result)
                      result = new_call new_binary_call(new_float(val[1]), val[2], val[3]), [:"-@", []], []
                    
    result
end

def _reduce_209(val, _values, result)
                      result = new_call val[1], [:"+@", []], []
                      if [:int, :float].include? val[1].type
                        result = val[1]
                      end
                    
    result
end

def _reduce_210(val, _values, result)
                      result = new_call val[1], [:"-@", []], []
                      if val[1].type == :int
                        val[1][1] = -val[1][1]
                        result = val[1]
                      elsif val[1].type == :float
                        val[1][1] = -val[1][1].to_f
                        result = val[1]
                      end
                    
    result
end

def _reduce_211(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_212(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_213(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_214(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_215(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_216(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_217(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_218(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_219(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_220(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_221(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_222(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_223(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_224(val, _values, result)
                      result = new_unary_call(val[0], val[1])
                    
    result
end

def _reduce_225(val, _values, result)
                      result = new_unary_call(val[0], val[1])
                    
    result
end

def _reduce_226(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_227(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_228(val, _values, result)
                      result = new_and(val[0], val[1], val[2])
                    
    result
end

def _reduce_229(val, _values, result)
                      result = new_or(val[0], val[1], val[2])
                    
    result
end

def _reduce_230(val, _values, result)
                      result = s(:defined, val[2])
                    
    result
end

def _reduce_231(val, _values, result)
 lexer.cond_push 1 
    result
end

def _reduce_232(val, _values, result)
 lexer.cond_pop 
    result
end

def _reduce_233(val, _values, result)
                      result = new_if(val[1], val[0], val[3], val[6])
                    
    result
end

# reduce 234 omitted

# reduce 235 omitted

def _reduce_236(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_237(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_238(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_239(val, _values, result)
                      val[0] << s(:hash, *val[2])
                      result = val[0]
                    
    result
end

def _reduce_240(val, _values, result)
                      result = [s(:hash, *val[0])]
                    
    result
end

def _reduce_241(val, _values, result)
                      result = val[0] << val[2]
                    
    result
end

def _reduce_242(val, _values, result)
                      result = val[1]
                    
    result
end

# reduce 243 omitted

def _reduce_244(val, _values, result)
                      result = []
                    
    result
end

# reduce 245 omitted

def _reduce_246(val, _values, result)
                      result = []
                    
    result
end

# reduce 247 omitted

def _reduce_248(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_249(val, _values, result)
                      result = val[0]
                      result << new_hash(nil, val[2], nil)
                    
    result
end

def _reduce_250(val, _values, result)
                      result = [new_hash(nil, val[0], nil)]
                    
    result
end

def _reduce_251(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_252(val, _values, result)
                      result = val[0]
                      add_block_pass val[0], val[1]
                    
    result
end

def _reduce_253(val, _values, result)
                      result = [new_hash(nil, val[0], nil)]
                      add_block_pass result, val[1]
                    
    result
end

def _reduce_254(val, _values, result)
                      result = val[0]
                      result << new_hash(nil, val[2], nil)
                      result << val[3] if val[3]
                    
    result
end

def _reduce_255(val, _values, result)
                      result = []
                      add_block_pass result, val[0]
                    
    result
end

# reduce 256 omitted

# reduce 257 omitted

def _reduce_258(val, _values, result)
                      lexer.cmdarg_push 1
                    
    result
end

def _reduce_259(val, _values, result)
                      lexer.cmdarg_pop
                      result = val[1]
                    
    result
end

# reduce 260 omitted

def _reduce_261(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_262(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_263(val, _values, result)
                      result = new_block_pass(val[0], val[1])
                    
    result
end

def _reduce_264(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_265(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_266(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_267(val, _values, result)
                      result = [new_splat(val[0], val[1])]
                    
    result
end

def _reduce_268(val, _values, result)
                      result = val[0] << val[2]
                    
    result
end

def _reduce_269(val, _values, result)
                      result  = val[0] << new_splat(val[2], val[3])
                    
    result
end

def _reduce_270(val, _values, result)
                      val[0] << val[2]
                      result = s(:array, *val[0])
                    
    result
end

def _reduce_271(val, _values, result)
                      val[0] << s(:splat, val[3])
                      result = s(:array, *val[0])
                    
    result
end

def _reduce_272(val, _values, result)
                      result = s(:splat, val[1])
                    
    result
end

# reduce 273 omitted

# reduce 274 omitted

# reduce 275 omitted

# reduce 276 omitted

# reduce 277 omitted

# reduce 278 omitted

# reduce 279 omitted

# reduce 280 omitted

# reduce 281 omitted

def _reduce_282(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_283(val, _values, result)
                      result = s(:begin, val[2])
                    
    result
end

def _reduce_284(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_285(val, _values, result)
                      result = new_paren(val[0], val[1], val[2])
                    
    result
end

def _reduce_286(val, _values, result)
                      result = new_colon2(val[0], val[1], val[2])
                    
    result
end

def _reduce_287(val, _values, result)
                      result = new_colon3(val[0], val[1])
                    
    result
end

def _reduce_288(val, _values, result)
                      result = new_call val[0], [:[], []], val[2]
                    
    result
end

def _reduce_289(val, _values, result)
                      result = new_js_call val[0], [:[], []], val[2]
                    
    result
end

def _reduce_290(val, _values, result)
                      result = new_array(val[0], val[1], val[2])
                    
    result
end

def _reduce_291(val, _values, result)
                      result = new_hash(val[0], val[1], val[2])
                    
    result
end

def _reduce_292(val, _values, result)
                      result = new_return(val[0])
                    
    result
end

def _reduce_293(val, _values, result)
                      result = new_yield val[2]
                    
    result
end

def _reduce_294(val, _values, result)
                      result = s(:yield)
                    
    result
end

def _reduce_295(val, _values, result)
                      result = s(:yield)
                    
    result
end

def _reduce_296(val, _values, result)
                      result = s(:defined, val[3])
                    
    result
end

def _reduce_297(val, _values, result)
                      result = new_unary_call(['!', []], val[2])
                    
    result
end

def _reduce_298(val, _values, result)
                      result = new_unary_call(['!', []], new_nil(val[0]))
                    
    result
end

def _reduce_299(val, _values, result)
                      result = new_call(nil, val[0], [])
                      result << val[1]
                    
    result
end

# reduce 300 omitted

def _reduce_301(val, _values, result)
                      val[0] << val[1]
                      result = val[0]
                    
    result
end

def _reduce_302(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_303(val, _values, result)
                      result = new_if(val[0], val[1], val[3], val[4])
                    
    result
end

def _reduce_304(val, _values, result)
                      result = new_if(val[0], val[1], val[4], val[3])
                    
    result
end

def _reduce_305(val, _values, result)
                      lexer.cond_push 1
                      result = lexer.line
                    
    result
end

def _reduce_306(val, _values, result)
                      lexer.cond_pop
                    
    result
end

def _reduce_307(val, _values, result)
                      result = s(:while, val[2], val[5])
                    
    result
end

def _reduce_308(val, _values, result)
                      lexer.cond_push 1
                      result = lexer.line
                    
    result
end

def _reduce_309(val, _values, result)
                      lexer.cond_pop
                    
    result
end

def _reduce_310(val, _values, result)
                      result = s(:until, val[2], val[5])
                    
    result
end

def _reduce_311(val, _values, result)
                      result = s(:case, val[1], *val[3])
                    
    result
end

def _reduce_312(val, _values, result)
                      result = s(:case, nil, *val[2])
                    
    result
end

def _reduce_313(val, _values, result)
                      result = s(:case, nil, val[3])
                    
    result
end

def _reduce_314(val, _values, result)
                      lexer.cond_push 1
                      result = lexer.line
                    
    result
end

def _reduce_315(val, _values, result)
                      lexer.cond_pop
                    
    result
end

def _reduce_316(val, _values, result)
                      result = s(:for, val[4], val[1], val[7])
                    
    result
end

def _reduce_317(val, _values, result)
                      # ...
                    
    result
end

def _reduce_318(val, _values, result)
                      result = new_class val[0], val[1], val[2], val[4], val[5]
                    
    result
end

def _reduce_319(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_320(val, _values, result)
                      # ...
                    
    result
end

def _reduce_321(val, _values, result)
                      result = new_sclass(val[0], val[3], val[6], val[7])
                    
    result
end

def _reduce_322(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_323(val, _values, result)
                      # ...
                    
    result
end

def _reduce_324(val, _values, result)
                      result = new_module(val[0], val[2], val[4], val[5])
                    
    result
end

def _reduce_325(val, _values, result)
                      push_scope
                      lexer.lex_state = :expr_endfn
                    
    result
end

def _reduce_326(val, _values, result)
                      result = new_def(val[0], nil, val[1], val[3], val[4], val[5])
                      pop_scope
                    
    result
end

def _reduce_327(val, _values, result)
                       lexer.lex_state = :expr_fname
                    
    result
end

def _reduce_328(val, _values, result)
                      push_scope
                      lexer.lex_state = :expr_endfn
                    
    result
end

def _reduce_329(val, _values, result)
                      result = new_def(val[0], val[1], val[4], val[6], val[7], val[8])
                      pop_scope
                    
    result
end

def _reduce_330(val, _values, result)
                      result = new_break(val[0])
                    
    result
end

def _reduce_331(val, _values, result)
                      result = s(:next)
                    
    result
end

def _reduce_332(val, _values, result)
                      result = s(:redo)
                    
    result
end

# reduce 333 omitted

# reduce 334 omitted

# reduce 335 omitted

# reduce 336 omitted

# reduce 337 omitted

# reduce 338 omitted

# reduce 339 omitted

# reduce 340 omitted

# reduce 341 omitted

def _reduce_342(val, _values, result)
 lexer.cmdarg_push 0 
    result
end

def _reduce_343(val, _values, result)
 lexer.cmdarg_pop 
    result
end

def _reduce_344(val, _values, result)
                      result = new_call nil, [:lambda, []], []
                      result << new_iter(val[0], val[2])
                    
    result
end

def _reduce_345(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_346(val, _values, result)
                      result = nil
                    
    result
end

# reduce 347 omitted

# reduce 348 omitted

def _reduce_349(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_350(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_351(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_352(val, _values, result)
                      result = new_if(val[0], val[1], val[3], val[4])
                    
    result
end

# reduce 353 omitted

def _reduce_354(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_355(val, _values, result)
                      result = s(:block, val[0])
                    
    result
end

def _reduce_356(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_357(val, _values, result)
                      result = new_assign(new_assignable(new_ident(
                                  val[0])), val[1], val[2])
                    
    result
end

# reduce 358 omitted

def _reduce_359(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_360(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_361(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_362(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_363(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_364(val, _values, result)
                      nil
                    
    result
end

def _reduce_365(val, _values, result)
                      result = new_block_args(val[0], val[2], val[4], val[5])
                    
    result
end

def _reduce_366(val, _values, result)
                      result = new_block_args(val[0], val[2], nil, val[3])
                    
    result
end

def _reduce_367(val, _values, result)
                      result = new_block_args(val[0], nil, val[2], val[3])
                    
    result
end

def _reduce_368(val, _values, result)
                      result = new_block_args(val[0], nil, nil, nil)
                    
    result
end

def _reduce_369(val, _values, result)
                      result = new_block_args(val[0], nil, nil, val[1])
                    
    result
end

def _reduce_370(val, _values, result)
                      result = new_block_args(nil, val[0], val[2], val[3])
                    
    result
end

def _reduce_371(val, _values, result)
                      result = new_block_args(nil, val[0], nil, val[1])
                    
    result
end

def _reduce_372(val, _values, result)
                      result = new_block_args(nil, nil, val[0], val[1])
                    
    result
end

def _reduce_373(val, _values, result)
                      result = new_block_args(nil, nil, nil, val[0])
                    
    result
end

def _reduce_374(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_375(val, _values, result)
                      result = new_iter val[2], val[3]
                      pop_scope
                    
    result
end

def _reduce_376(val, _values, result)
                      val[0] << val[1]
                      result = val[0]
                    
    result
end

# reduce 377 omitted

# reduce 378 omitted

# reduce 379 omitted

def _reduce_380(val, _values, result)
                      result = new_call(nil, val[0], val[1])
                    
    result
end

def _reduce_381(val, _values, result)
                      result = new_call(val[0], val[2], val[3])
                    
    result
end

def _reduce_382(val, _values, result)
                      result = new_js_call(val[0], val[2], val[3])
                    
    result
end

def _reduce_383(val, _values, result)
                      result = new_call(val[0], [:call, []], val[2])
                    
    result
end

def _reduce_384(val, _values, result)
                      result = new_call(val[0], val[2], val[3])
                    
    result
end

def _reduce_385(val, _values, result)
                      result = new_call(val[0], val[2])
                    
    result
end

def _reduce_386(val, _values, result)
                      result = new_super(val[0], val[1])
                    
    result
end

def _reduce_387(val, _values, result)
                      result = new_super(val[0], nil)
                    
    result
end

def _reduce_388(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_389(val, _values, result)
                      result = new_iter val[2], val[3]
                      pop_scope
                    
    result
end

def _reduce_390(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_391(val, _values, result)
                      result = new_iter val[2], val[3]
                      pop_scope
                    
    result
end

def _reduce_392(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_393(val, _values, result)
                      part = s(:when, s(:array, *val[2]), val[4])
                      result = [part]
                      result.push(*val[5]) if val[5]
                    
    result
end

def _reduce_394(val, _values, result)
                      result = [val[0]]
                    
    result
end

# reduce 395 omitted

def _reduce_396(val, _values, result)
                      exc = val[1] || s(:array)
                      exc << new_assign(val[2], val[2], s(:gvar, '$!'.intern)) if val[2]
                      result = [s(:resbody, exc, val[4])]
                      result.push val[5].first if val[5]
                    
    result
end

def _reduce_397(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_398(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

# reduce 399 omitted

# reduce 400 omitted

def _reduce_401(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_402(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_403(val, _values, result)
                      result = val[1].nil? ? s(:nil) : val[1]
                    
    result
end

# reduce 404 omitted

# reduce 405 omitted

# reduce 406 omitted

# reduce 407 omitted

def _reduce_408(val, _values, result)
                      result = new_str val[0]
                    
    result
end

# reduce 409 omitted

def _reduce_410(val, _values, result)
                    result = str_append val[0], val[1]
                  
    result
end

def _reduce_411(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_412(val, _values, result)
                      result = s(:str, value(val[0]))
                    
    result
end

def _reduce_413(val, _values, result)
                      result = new_xstr(val[0], val[1], val[2])
                    
    result
end

def _reduce_414(val, _values, result)
                      result = new_regexp val[1], val[2]
                    
    result
end

def _reduce_415(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_416(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_417(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_418(val, _values, result)
                      part = val[1]
                      part = s(:dstr, "", val[1]) if part.type == :evstr
                      result = val[0] << part
                    
    result
end

def _reduce_419(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_420(val, _values, result)
                      result = val[0].concat([val[1]])
                    
    result
end

def _reduce_421(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_422(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_423(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_424(val, _values, result)
                      result = val[0] << s(:str, value(val[1]))
                    
    result
end

def _reduce_425(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_426(val, _values, result)
                      result = str_append val[0], val[1]
                    
    result
end

def _reduce_427(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_428(val, _values, result)
                      result = str_append val[0], val[1]
                    
    result
end

def _reduce_429(val, _values, result)
                      result = new_str_content(val[0])
                    
    result
end

def _reduce_430(val, _values, result)
                      result = lexer.strterm
                      lexer.strterm = nil
                    
    result
end

def _reduce_431(val, _values, result)
                      lexer.strterm = val[1]
                      result = new_evstr(val[2])
                    
    result
end

def _reduce_432(val, _values, result)
                      lexer.cond_push 0
                      lexer.cmdarg_push 0
                      result = lexer.strterm
                      lexer.strterm = nil
                      lexer.lex_state = :expr_beg
                    
    result
end

def _reduce_433(val, _values, result)
                      lexer.strterm = val[1]
                      lexer.cond_lexpop
                      lexer.cmdarg_lexpop
                      result = new_evstr(val[2])
                    
    result
end

def _reduce_434(val, _values, result)
                      result = new_gvar(val[0])
                    
    result
end

def _reduce_435(val, _values, result)
                      result = new_ivar(val[0])
                    
    result
end

def _reduce_436(val, _values, result)
                      result = new_cvar(val[0])
                    
    result
end

# reduce 437 omitted

def _reduce_438(val, _values, result)
                      result = new_sym(val[1])
                      lexer.lex_state = :expr_end
                    
    result
end

def _reduce_439(val, _values, result)
                      result = new_sym(val[0])
                    
    result
end

# reduce 440 omitted

# reduce 441 omitted

# reduce 442 omitted

# reduce 443 omitted

def _reduce_444(val, _values, result)
                      result = new_dsym val[1]
                    
    result
end

def _reduce_445(val, _values, result)
                      result = new_int(val[0])
                    
    result
end

def _reduce_446(val, _values, result)
                      result = new_float(val[0])
                    
    result
end

def _reduce_447(val, _values, result)
                    result = negate_num(new_int(val[1]))
                  
    result
end

def _reduce_448(val, _values, result)
                    result = negate_num(new_float(val[1]))
                  
    result
end

def _reduce_449(val, _values, result)
                    result = new_int(val[1])
                  
    result
end

def _reduce_450(val, _values, result)
                    result = new_float(val[1])
                  
    result
end

def _reduce_451(val, _values, result)
                      result = new_ident(val[0])
                    
    result
end

def _reduce_452(val, _values, result)
                      result = new_ivar(val[0])
                    
    result
end

def _reduce_453(val, _values, result)
                      result = new_gvar(val[0])
                    
    result
end

def _reduce_454(val, _values, result)
                      result = new_const(val[0])
                    
    result
end

def _reduce_455(val, _values, result)
                      result = new_cvar(val[0])
                    
    result
end

def _reduce_456(val, _values, result)
                      result = new_nil(val[0])
                    
    result
end

def _reduce_457(val, _values, result)
                      result = new_self(val[0])
                    
    result
end

def _reduce_458(val, _values, result)
                      result = new_true(val[0])
                    
    result
end

def _reduce_459(val, _values, result)
                      result = new_false(val[0])
                    
    result
end

def _reduce_460(val, _values, result)
                      result = new___FILE__(val[0])
                    
    result
end

def _reduce_461(val, _values, result)
                      result = new___LINE__(val[0])
                    
    result
end

def _reduce_462(val, _values, result)
                      result = new_var_ref(val[0])
                    
    result
end

def _reduce_463(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_464(val, _values, result)
                      result = s(:nth_ref, value(val[0]))
                    
    result
end

# reduce 465 omitted

def _reduce_466(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_467(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_468(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_469(val, _values, result)
                      result = val[1]
                      lexer.lex_state = :expr_beg
                    
    result
end

def _reduce_470(val, _values, result)
                      result = val[0]
                      lexer.lex_state = :expr_beg
                    
    result
end

# reduce 471 omitted

# reduce 472 omitted

def _reduce_473(val, _values, result)
                      result = new_kwrestarg(val[1])
                    
    result
end

def _reduce_474(val, _values, result)
                      result = new_kwrestarg()
                    
    result
end

def _reduce_475(val, _values, result)
                      result = new_sym(val[0])
                    
    result
end

def _reduce_476(val, _values, result)
                      result = new_kwoptarg(val[0], val[1])
                    
    result
end

def _reduce_477(val, _values, result)
                      result = new_kwarg(val[0])
                    
    result
end

def _reduce_478(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_479(val, _values, result)
                      result = val[0]
                      result << val[2]
                    
    result
end

def _reduce_480(val, _values, result)
                      result = new_args_tail(val[0], val[2], val[3])
                    
    result
end

def _reduce_481(val, _values, result)
                      result = new_args_tail(val[0], nil, val[1])
                    
    result
end

def _reduce_482(val, _values, result)
                      result = new_args_tail(nil, val[0], val[1])
                    
    result
end

def _reduce_483(val, _values, result)
                      result = new_args_tail(nil, nil, val[0])
                    
    result
end

def _reduce_484(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_485(val, _values, result)
                      result = new_args_tail(nil, nil, nil)
                    
    result
end

def _reduce_486(val, _values, result)
                      result = new_args(val[0], val[2], val[4], val[5])
                    
    result
end

def _reduce_487(val, _values, result)
                      result = new_args(val[0], val[2], nil, val[3])
                    
    result
end

def _reduce_488(val, _values, result)
                      result = new_args(val[0], nil, val[2], val[3])
                    
    result
end

def _reduce_489(val, _values, result)
                      result = new_args(val[0], nil, nil, val[1])
                    
    result
end

def _reduce_490(val, _values, result)
                      result = new_args(nil, val[0], val[2], val[3])
                    
    result
end

def _reduce_491(val, _values, result)
                      result = new_args(nil, val[0], nil, val[1])
                    
    result
end

def _reduce_492(val, _values, result)
                      result = new_args(nil, nil, val[0], val[1])
                    
    result
end

def _reduce_493(val, _values, result)
                      result = new_args(nil, nil, nil, val[0])
                    
    result
end

def _reduce_494(val, _values, result)
                      result = new_args(nil, nil, nil, nil)
                    
    result
end

# reduce 495 omitted

def _reduce_496(val, _values, result)
                      result = value(val[0]).to_sym
                      scope.add_local result
                    
    result
end

def _reduce_497(val, _values, result)
                      raise 'formal argument cannot be a constant'
                    
    result
end

def _reduce_498(val, _values, result)
                      raise 'formal argument cannot be an instance variable'
                    
    result
end

def _reduce_499(val, _values, result)
                      raise 'formal argument cannot be a class variable'
                    
    result
end

def _reduce_500(val, _values, result)
                      raise 'formal argument cannot be a global variable'
                    
    result
end

def _reduce_501(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_502(val, _values, result)
                      result = val[1]
                    
    result
end

# reduce 503 omitted

# reduce 504 omitted

def _reduce_505(val, _values, result)
                      result = s(:lasgn, val[0])
                    
    result
end

# reduce 506 omitted

def _reduce_507(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

def _reduce_508(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

# reduce 509 omitted

# reduce 510 omitted

# reduce 511 omitted

# reduce 512 omitted

# reduce 513 omitted

def _reduce_514(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_515(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_516(val, _values, result)
                      result = new_assign(new_assignable(new_ident(val[0])), val[1], val[2])
                    
    result
end

def _reduce_517(val, _values, result)
                      result = s(:block, val[0])
                    
    result
end

def _reduce_518(val, _values, result)
                      result = val[0]
                      val[0] << val[2]
                    
    result
end

# reduce 519 omitted

# reduce 520 omitted

def _reduce_521(val, _values, result)
                      result = "*#{value(val[1])}".to_sym
                    
    result
end

def _reduce_522(val, _values, result)
                      result = :"*"
                    
    result
end

# reduce 523 omitted

# reduce 524 omitted

def _reduce_525(val, _values, result)
                      result = "&#{value(val[1])}".to_sym
                    
    result
end

def _reduce_526(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_527(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_528(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_529(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_530(val, _values, result)
                      result = []
                    
    result
end

def _reduce_531(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_532(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_533(val, _values, result)
                      result = val[0].push(*val[2])
                    
    result
end

def _reduce_534(val, _values, result)
                      result = [val[0], val[2]]
                    
    result
end

def _reduce_535(val, _values, result)
                      result = [new_sym(val[0]), val[1]]
                    
    result
end

def _reduce_536(val, _values, result)
                      result = [s(:sym, source(val[1]).to_sym), val[3]]
                    
    result
end

# reduce 537 omitted

# reduce 538 omitted

# reduce 539 omitted

# reduce 540 omitted

# reduce 541 omitted

# reduce 542 omitted

# reduce 543 omitted

# reduce 544 omitted

# reduce 545 omitted

# reduce 546 omitted

# reduce 547 omitted

# reduce 548 omitted

# reduce 549 omitted

# reduce 550 omitted

# reduce 551 omitted

# reduce 552 omitted

# reduce 553 omitted

# reduce 554 omitted

# reduce 555 omitted

# reduce 556 omitted

# reduce 557 omitted

# reduce 558 omitted

# reduce 559 omitted

def _reduce_560(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module Opal
