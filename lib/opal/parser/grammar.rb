#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.13
# from Racc grammer file "".
#

require 'racc/parser.rb'
module Opal
  class Parser < Racc::Parser


##### State transition tables begin ###

clist = [
'63,64,65,8,51,593,274,563,57,58,274,274,593,61,97,59,60,62,23,24,66',
'67,-93,-472,-101,108,637,22,28,27,90,89,91,92,555,463,17,554,671,671',
'-100,-85,7,41,6,9,94,93,84,50,86,85,87,-96,88,95,96,593,81,82,195,38',
'39,-92,-98,-68,671,205,206,615,269,670,670,-93,-95,269,555,101,196,557',
'205,206,100,36,593,-101,30,636,593,52,273,54,-93,32,273,273,-101,40',
'73,670,-100,-80,205,206,-97,18,74,-85,-96,562,79,73,75,76,77,78,101',
'197,592,74,80,100,-98,101,-85,592,-92,56,100,-92,53,63,64,65,667,51',
'37,83,198,57,58,-95,-91,-85,61,-99,59,60,62,23,24,66,67,-85,309,-87',
'833,246,22,28,27,90,89,91,92,-92,-89,17,101,-553,592,930,614,100,41',
'-92,-86,94,93,84,50,86,85,87,542,88,95,96,-97,81,82,101,38,39,-91,101',
'100,592,300,101,100,592,301,-93,100,-93,-88,-101,-93,-101,-554,-100',
'-101,-100,210,309,-100,214,215,-96,52,-96,54,-99,-96,-460,625,397,40',
'752,752,-87,-460,-98,-100,-98,18,555,-98,671,557,79,73,75,76,77,78,-90',
'205,206,74,80,-95,-89,-95,752,-86,-95,56,400,-91,53,63,64,65,-553,51',
'37,83,101,57,58,670,411,100,61,-88,59,60,62,23,24,66,67,-90,627,626',
'623,799,22,28,27,90,89,91,92,-91,-87,219,-97,-554,-97,679,625,-97,41',
'-91,424,94,93,84,50,86,85,87,462,88,95,96,-89,81,82,-86,38,39,227,101',
'101,751,751,464,100,100,-87,-99,101,-99,340,-94,-99,100,-553,-88,-87',
'625,210,465,337,214,-554,-90,52,101,54,751,-89,224,100,-86,40,226,225',
'627,626,599,-89,600,218,-86,810,215,792,79,73,75,76,77,78,-88,353,352',
'74,80,265,266,944,-90,811,-88,56,340,267,53,63,64,65,-90,51,37,83,337',
'57,58,627,626,623,61,903,59,60,62,258,259,66,67,555,338,340,557,-96',
'257,28,27,90,89,91,92,337,904,219,350,349,353,352,625,496,41,-98,498',
'94,93,84,50,86,85,87,262,88,95,96,500,81,82,507,38,39,227,-94,625,353',
'352,204,581,-463,345,343,342,340,344,338,-463,205,206,-470,-469,625',
'210,337,-95,214,-470,-469,52,836,54,600,256,224,254,-67,40,226,225,627',
'626,628,338,101,218,524,347,-92,100,79,260,75,76,77,78,353,352,-101',
'74,80,525,-468,944,627,626,632,56,340,-468,53,63,64,65,526,51,37,83',
'337,57,58,627,626,638,61,535,59,60,62,258,259,66,67,338,278,340,302',
'303,257,28,27,90,89,91,92,337,309,219,350,349,353,352,625,-472,41,630',
'269,94,93,84,50,86,85,87,262,88,95,96,-465,81,82,101,38,39,-466,-465',
'100,353,352,542,581,-466,345,343,342,340,344,338,539,-467,543,620,544',
'-85,210,337,-467,214,621,648,52,227,54,-93,256,101,254,309,40,558,100',
'627,626,559,338,101,218,500,347,-91,100,79,260,75,76,77,78,353,352,-100',
'74,80,409,410,537,538,649,566,56,-87,569,53,63,64,65,570,51,37,83,-96',
'57,58,205,206,573,61,574,59,60,62,258,259,66,67,338,205,206,576,798',
'257,28,27,90,89,91,92,-89,421,219,203,201,580,423,422,588,41,-98,202',
'94,93,84,50,86,85,87,262,88,95,96,589,81,82,413,38,39,353,352,605,-86',
'861,836,581,606,345,343,342,340,344,-95,103,104,105,106,107,607,210',
'337,631,214,227,635,52,639,54,199,256,200,254,642,40,893,894,-336,-336',
'895,95,96,218,645,347,-336,-267,79,260,75,76,77,78,353,352,224,74,80',
'646,226,225,222,223,647,56,861,836,53,-259,-259,-259,269,-259,37,83',
'227,-259,-259,227,227,227,-259,309,-259,-259,-259,-259,-259,-259,-259',
'338,689,-336,690,-336,-259,-259,-259,-259,-259,-259,-259,698,700,-259',
'203,458,-80,701,703,548,-259,714,459,-259,-259,-259,-259,-259,-259,-259',
'-259,-259,-259,-259,720,-259,-259,721,-259,-259,309,581,727,345,343',
'342,581,344,345,343,342,340,344,581,741,345,343,342,742,344,-259,337',
'744,-259,269,747,-259,600,-259,461,-259,460,-259,755,-259,794,-268,534',
'531,584,507,507,-259,507,347,532,587,-259,-259,-259,-259,-259,-259,353',
'352,813,-259,-259,814,581,498,345,343,342,-259,344,500,-259,63,64,65',
'8,51,-259,-259,823,57,58,825,826,714,61,830,59,60,62,23,24,66,67,338',
'269,530,269,533,22,28,27,90,89,91,92,831,269,17,103,104,105,106,107',
'7,41,714,9,94,93,84,50,86,85,87,227,88,95,96,227,81,82,836,38,39,841',
'581,843,345,343,342,581,344,345,343,342,340,344,103,104,105,106,107',
'844,845,36,337,847,282,227,573,52,850,54,852,32,847,856,836,40,865,866',
'534,545,584,868,869,18,-553,347,546,587,79,73,75,76,77,78,353,352,224',
'74,80,871,226,225,222,223,880,56,573,883,53,63,64,65,885,51,37,83,887',
'57,58,-551,889,891,61,-269,59,60,62,258,259,66,67,338,906,461,907,460',
'257,292,296,90,89,91,92,908,581,219,345,343,342,909,344,911,293,912',
'714,94,93,84,50,86,85,87,914,88,95,96,-267,81,82,918,-463,-463,-554',
'925,927,933,534,602,-463,935,534,611,584,-551,603,936,309,948,609,858',
'-270,951,290,847,960,287,847,847,52,965,54,966,286,-551,971,573,973',
'534,611,887,887,889,982,989,720,740,847,1000,887,79,73,75,76,77,78,-463',
'1002,-463,74,80,1003,601,,604,,610,56,533,,53,63,64,65,,51,297,83,,57',
'58,,,,61,,59,60,62,258,259,66,67,610,,533,,,257,292,296,90,89,91,92',
',,219,-289,-289,,,,,293,,-289,94,93,84,50,86,85,87,,88,95,96,,81,82',
',328,,345,343,342,340,344,,,,534,611,,,,337,,,740,,,,290,,,214,,,52',
',54,-289,,-289,,,,,347,323,,,,,,350,349,353,352,79,73,75,76,77,78,,',
',74,80,,,,299,,610,56,533,,53,63,64,65,,51,297,83,,57,58,,,,61,338,59',
'60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,643,,41,',
',94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,227,231,236,237,238,233',
'235,243,244,239,240,,,220,221,,,241,242,,210,,,214,,,52,,54,,,224,,230',
'40,226,225,222,223,234,232,228,218,229,,,,79,73,75,76,77,78,,,,74,80',
',245,,-236,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259',
'66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,643,,41,,,94,93,84,50,86',
'85,87,,88,95,96,,81,82,,38,39,227,231,236,237,238,233,235,243,244,239',
'240,,,220,221,,,241,242,,210,,,214,,,52,,54,,,224,,230,40,226,225,222',
'223,234,232,228,218,229,,,,79,73,75,76,77,78,-288,-288,,74,80,,245,',
'-288,,,56,,-554,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259',
'66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,-288,,-288,41,,,94,93,84',
'50,86,85,87,,88,95,96,,81,82,,38,39,227,231,236,237,238,233,235,243',
'244,239,240,,,220,221,,,241,242,,210,,,214,,,52,,54,,,224,,230,40,226',
'225,222,223,234,232,228,218,229,,,,79,73,75,76,77,78,,,,74,80,,245,',
'-236,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67',
',,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,84,50,86,85,87,,88,95',
'96,,81,82,,38,39,227,231,236,237,238,233,235,243,244,239,240,,,220,221',
',,241,242,,210,,,214,,,52,,54,,,224,,230,40,226,225,222,223,234,232',
'228,18,229,,,,79,73,75,76,77,78,-291,-291,,74,80,,245,815,-291,,,56',
',,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257',
'28,27,90,89,91,92,,,219,,,,-291,,-291,41,,,94,93,84,50,86,85,87,262',
'88,95,96,,81,82,,38,39,227,231,236,237,238,233,235,243,244,239,240,',
',220,221,,,241,242,,210,,,214,,,52,,54,,256,224,,230,40,226,225,222',
'223,234,232,228,218,229,,,,79,260,75,76,77,78,534,980,,74,80,,245,,981',
',,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,',
',,,257,292,296,90,89,91,92,,,219,,,,979,,604,41,,,94,93,84,50,86,85',
'87,262,88,95,96,,81,82,,38,39,227,231,236,237,238,233,235,243,244,239',
'240,,,220,221,,,241,242,,210,,,214,,,52,,54,,,224,,230,40,226,225,222',
'223,234,232,228,218,229,,,,79,260,75,76,77,78,,,,74,80,,245,,,,,56,',
',53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28',
'27,90,89,91,92,,,17,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82',
',38,39,227,231,236,237,238,233,235,243,244,239,240,,,220,221,,,241,242',
',210,,,214,,,52,,54,,,224,,230,40,226,225,222,223,234,232,228,18,229',
',,,79,73,75,76,77,78,,,,74,80,,245,,,,,56,,,53,63,64,65,,51,37,83,,57',
'58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,',
'41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,227,231,236,237,238',
'233,235,243,244,239,240,,,220,221,,,241,242,,210,,,214,,,52,,54,,,224',
',230,40,226,225,222,223,234,232,228,18,229,,,,79,73,75,76,77,78,,,,74',
'80,,245,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,23,24',
'66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,84,50,86,85,87',
',88,95,96,,81,82,,38,39,227,231,236,237,238,233,235,243,244,239,240',
',,220,221,,,241,242,,210,,,214,,,52,,54,,,224,,230,40,226,225,222,223',
'234,232,228,18,229,,,,79,73,75,76,77,78,,,,74,80,101,245,,,,100,56,',
',53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257',
'292,296,90,89,91,92,,,219,,,,,,,293,,,94,93,84,50,86,85,87,,88,95,96',
',81,82,,328,,345,343,342,340,344,,,,,,,,,337,,,,,,,365,,,30,227,,52',
',54,,32,,,,,,347,,565,,,241,242,350,349,353,352,79,73,75,76,77,78,,',
'224,74,80,,226,225,222,223,,56,,,53,63,64,65,,51,297,83,,57,58,,,,61',
'338,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,',
'293,,,94,93,84,50,86,85,370,,88,95,96,227,81,82,,328,,345,343,342,340',
'344,,,,,,,241,242,337,,,,376,,,371,,,214,,224,52,230,54,226,225,222',
'223,,,228,347,229,,,,,,350,349,353,352,79,73,75,76,77,78,,,,74,80,,',
',,,,56,,,53,-550,-550,-550,,-550,297,83,,-550,-550,,,,-550,338,-550',
'-550,-550,-550,-550,-550,-550,,-550,,,,-550,-550,-550,-550,-550,-550',
'-550,,,-550,,,,,,,-550,,,-550,-550,-550,-550,-550,-550,-550,-550,-550',
'-550,-550,,-550,-550,,-550,-550,227,231,236,237,238,233,235,243,244',
'239,240,,,220,221,,,241,242,,-550,,,-550,-550,,-550,,-550,,-550,224',
'-550,230,-550,226,225,222,223,234,232,228,-550,229,-550,,,-550,-550',
'-550,-550,-550,-550,,,,-550,-550,,245,,,,,-550,,,-550,-551,-551,-551',
',-551,-550,-550,,-551,-551,,,,-551,,-551,-551,-551,-551,-551,-551,-551',
',-551,,,,-551,-551,-551,-551,-551,-551,-551,,,-551,,,,,,,-551,,,-551',
'-551,-551,-551,-551,-551,-551,-551,-551,-551,-551,,-551,-551,,-551,-551',
'227,231,236,237,238,233,235,243,244,239,240,,,220,221,,,241,242,,-551',
',,-551,-551,,-551,,-551,,-551,224,-551,230,-551,226,225,222,223,234',
'232,228,-551,229,-551,,,-551,-551,-551,-551,-551,-551,,,,-551,-551,',
'245,,,,,-551,,,-551,63,64,65,8,51,-551,-551,,57,58,,,,61,,59,60,62,23',
'24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,6,9,94,93,84,50,86',
'85,87,,88,95,96,,81,82,,38,39,227,231,236,237,238,233,235,243,244,239',
'240,,,220,221,,,241,242,,36,,,30,,,52,,54,,32,224,,230,40,226,225,222',
'223,234,232,228,18,229,,,,79,73,75,76,77,78,,,,74,80,,245,,,,413,56',
',,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28',
'27,90,89,91,92,,,17,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82',
',38,39,227,231,236,237,238,233,235,243,244,239,240,,,220,221,,,241,242',
',210,,,214,,,52,,54,,,224,,230,40,226,225,222,223,234,232,228,18,229',
',,,79,73,75,76,77,78,,,,74,80,,245,,,,,56,,,53,63,64,65,,51,37,83,,57',
'58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,',
'41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,227,231,236,237,238',
'233,235,243,244,239,240,,,220,221,,,241,242,,210,,,214,,,52,,54,,,224',
',230,40,226,225,222,223,234,232,228,18,229,,,,79,73,75,76,77,78,,,,74',
'80,,245,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,23,24',
'66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,84,50,86,85,87',
',88,95,96,,81,82,,38,39,227,231,236,237,238,233,235,243,244,239,240',
',,220,221,,,241,242,,210,,,214,,,52,,54,,,224,,230,40,226,225,222,223',
'234,232,228,18,229,,,,79,73,75,76,77,78,,,,74,80,,245,,,,,56,,,53,63',
'64,65,,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90',
'89,91,92,,,17,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39',
'227,231,236,237,238,233,235,243,244,239,240,,,220,221,,,241,242,,210',
',,214,,,52,,54,,,224,,230,40,226,225,222,223,234,232,228,18,229,,,,79',
'73,75,76,77,78,,,,74,80,,245,,,,,56,,,53,63,64,65,8,51,37,83,,57,58',
',,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41',
',9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,227,231,236,237,238',
'233,235,243,244,239,240,,,220,221,,,241,242,,36,,,30,,,52,,54,,32,224',
',230,40,226,225,222,223,234,232,228,18,229,,,,79,73,75,76,77,78,,,,74',
'80,,245,,,,,56,,,53,63,64,65,8,51,37,83,,57,58,,,,61,,59,60,62,23,24',
'66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,6,9,94,93,84,50,86,85',
'87,,88,95,96,,81,82,,38,39,227,231,236,237,238,233,235,243,244,239,240',
',,220,221,,,241,242,,36,,,30,,,52,,54,,32,224,,230,40,226,225,222,223',
'234,232,228,18,229,,,,79,73,75,76,77,78,,,,74,80,,245,,,,,56,,,53,63',
'64,65,8,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90',
'89,91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,227,231,236,237,238,233,235,243,244,239,240,,,-574,-574,,,241,242',
',36,,,30,,,52,,54,,32,224,,230,40,226,225,222,223,234,232,228,18,229',
',,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58',
',,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,219,,,,,,,41',
',,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,227,231,236,237,238,233',
'235,243,244,239,240,,,-574,-574,,,241,242,,210,,,214,,,52,,54,,430,224',
',230,40,226,225,222,223,234,232,228,218,229,,,,79,73,75,76,77,78,,,',
'74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,23,24',
'66,67,,,,,,22,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87',
',88,95,96,,81,82,,38,39,227,-574,-574,-574,-574,233,235,,,-574,-574',
',,,,,,241,242,,210,,,214,,,52,,54,,430,224,,230,40,226,225,222,223,234',
'232,228,218,229,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65',
',51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91',
'92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,227,81,82,,38,39',
',,,,,,,,,,,241,242,,,,,,,,210,,,214,,224,52,230,54,226,225,222,223,',
'40,228,,229,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63',
'64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,28,27',
'90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,262,88,95,96,,81,82',
',38,39,227,,,,,,,,,,,,,,,,,241,242,,210,,,214,,,52,,54,,256,224,,230',
'40,226,225,222,223,,,228,218,229,,,,79,260,75,76,77,78,,,,74,80,,,,',
',,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,',
',,,257,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,262,88',
'95,96,,81,82,,38,39,227,,,,,,,,,,,,,,,,,241,242,,210,,,214,,,52,,54',
',256,224,,230,40,226,225,222,223,,,228,218,229,,,,79,260,75,76,77,78',
',,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,23',
'24,66,67,,,,,,22,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85',
'87,,88,95,96,,81,82,,38,39,227,-574,-574,-574,-574,233,235,,,-574,-574',
',,,,,,241,242,,210,,,214,,,52,,54,,,224,,230,40,226,225,222,223,234',
'232,228,218,229,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65',
',51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91',
'92,,,17,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,227',
'-574,-574,-574,-574,233,235,,,-574,-574,,,,,,,241,242,,210,,,214,,,52',
',54,,,224,,230,40,226,225,222,223,234,232,228,18,229,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60',
'62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,227,-574,-574,-574,-574,233,235,,,-574',
'-574,,,,,,,241,242,,210,,,214,,,52,,54,,,224,,230,40,226,225,222,223',
'234,232,228,18,229,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64',
'65,8,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89',
'91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39',
'227,-574,-574,-574,-574,233,235,,,-574,-574,,,,,,,241,242,,36,,,30,',
',52,,54,,32,224,,230,40,226,225,222,223,234,232,228,18,229,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,',
'59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93',
'84,50,86,85,87,,88,95,96,,81,82,,38,39,227,-574,-574,-574,-574,233,235',
',,-574,-574,,,,,,,241,242,,210,,,214,,467,52,,54,,,224,,230,40,226,225',
'222,223,234,232,228,18,229,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,',
'53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257',
'292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96',
',81,82,,38,39,227,231,236,237,238,233,235,,,239,240,,,,,,,241,242,,210',
',,214,,,52,,54,,,224,,230,40,226,225,222,223,234,232,228,218,229,,,',
'79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,',
',,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,',
',,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,227,231,236,237',
'238,233,235,243,,239,240,,,,,,,241,242,,210,,,214,,,52,,54,,,224,,230',
'40,226,225,222,223,234,232,228,218,229,,,,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67',
',,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,',
'88,95,96,227,81,82,,38,39,,,,,,,,,,,,241,242,,,,,,,,210,,,214,,224,52',
'230,54,226,225,222,223,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67',
',,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,',
'88,95,96,227,81,82,,38,39,,,,,,,,,,,,241,242,,,,,,,,210,,,214,,224,52',
'230,54,226,225,222,223,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67',
',,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,',
'88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40',
',,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51',
'37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91',
'92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,',
',,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59',
'60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94',
'93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,',
'214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,',
',56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,',
',,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,',
',,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51',
'37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91',
'92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,',
',,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59',
'60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94',
'93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,',
'214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,',
',56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,',
',,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,',
',,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51',
'37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91',
'92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,',
',,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59',
'60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94',
'93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,',
'214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,',
',56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,',
',,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,',
',,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51',
'37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91',
'92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,',
',,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59',
'60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94',
'93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,',
'214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,',
',56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,',
',,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,',
',,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51',
'37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91',
'92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,',
',,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59',
'60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94',
'93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,',
'214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,',
',56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,',
',,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,',
',,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51',
'37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91',
'92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,',
',,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59',
'60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94',
'93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,',
'214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,',
',56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,',
',,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,',
',,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51',
'37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91',
'92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,',
',,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59',
'60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94',
'93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,',
'214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,',
',56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,',
',,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,',
',,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51',
'37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91',
'92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,',
',,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59',
'60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94',
'93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,',
'214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,',
',56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,',
',,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,',
',,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51',
'37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,28,27,90,89,91,92',
',,219,,,,,,,41,,,94,93,84,50,86,85,87,262,88,95,96,,81,82,,38,39,,,',
',,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,256,,254,,40,,,,,,,,218,,,,,79',
'260,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,',
'61,,59,60,62,258,259,66,67,,,,,,257,28,27,90,89,91,92,,,219,,,,,,,41',
',,94,93,84,50,86,85,87,262,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,',
',,210,,,214,,,516,,54,,256,,254,,40,,,,,,,,218,,,,,79,260,75,76,77,78',
',,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258',
'259,66,67,,,,,,257,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86',
'85,87,262,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,520',
'52,,54,,256,,254,,40,,,,,,,,218,,,,,79,260,75,76,77,78,,,,74,80,,,,',
',,56,,,53,63,64,65,8,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,',
',,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95',
'96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,282,,,52,,54,,32,,,,40,,,',
',,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37',
'83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92',
',,219,,,,,,,293,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,328,,345,343',
'342,340,344,,,,,,,,,337,,,,,,,290,,,214,,,52,,54,,,,,,,,347,,,,,,,350',
'349,353,352,79,73,75,76,77,78,,,,74,80,,,,528,,,56,,,53,63,64,65,8,51',
'297,83,,57,58,,,,61,338,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91',
'92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,',
',,,,,,,,,,,,,,,,,,36,,,282,,,52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59',
'60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,293,,,94',
'93,84,50,86,85,87,,88,95,96,,81,82,,786,,345,343,342,340,344,,,,,,,',
',337,,,,,,,290,,,287,,,52,,54,,,,,,,,347,775,,,,,,350,349,353,352,79',
'73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,297,83,,57,58,,,',
'61,338,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,',
',,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,',
',,,,,210,,,214,548,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78',
',,,74,80,,,,,,,56,,,53,63,64,65,8,51,37,83,,57,58,,,,61,,59,60,62,23',
'24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,84,50,86',
'85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,54,',
'32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64',
'65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90',
'89,91,92,,,219,,,,,,,293,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,328',
',345,343,342,340,344,,,,,,,,,337,,,,,,,579,,,214,,,52,,54,,,,,,,,347',
',,,,,,350,349,353,352,79,73,75,76,77,78,,816,,74,80,,,,,,,56,,,53,63',
'64,65,,51,297,83,,57,58,,,,61,338,59,60,62,23,24,66,67,,,,,,22,28,27',
'90,89,91,92,,,17,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,18,,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,',
'59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93',
'84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214',
',,52,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,',
',53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257',
'292,296,90,89,91,92,,,219,,,,,,,293,,,94,93,84,50,86,85,370,,88,95,96',
',81,82,,786,,345,343,342,340,344,,,,,,,,,337,,,,,,,371,,,214,,,52,,54',
',,,,,,,347,,,,,,,350,349,353,352,79,73,75,76,77,78,,,,74,80,,,,,,,56',
',,53,63,64,65,,51,297,83,,57,58,,,,61,338,59,60,62,23,24,66,67,,,,,',
'22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,',
'18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,',
'57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219',
',,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,',
',,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78',
',,,74,80,,,,,,,56,,,53,-259,-259,-259,,-259,37,83,,-259,-259,,,,-259',
',-259,-259,-259,-259,-259,-259,-259,,,,,,-259,-259,-259,-259,-259,-259',
'-259,,,-259,,,,,,,-259,,,-259,-259,-259,-259,-259,-259,-259,-259,-259',
'-259,-259,,-259,-259,,-259,-259,,,,,,,,,,,,,,,,,,,,,-259,,,-259,269',
',-259,,-259,,-259,,-259,,-259,,,,,,,,-259,,,,,-259,-259,-259,-259,-259',
'-259,,,,-259,-259,,,,,,,-259,,,-259,-555,-555,-555,,-555,-259,-259,',
'-555,-555,,,,-555,,-555,-555,-555,-555,-555,-555,-555,,,,,,-555,-555',
'-555,-555,-555,-555,-555,,,-555,,,,,,,-555,,,-555,-555,-555,-555,-555',
'-555,-555,-555,-555,-555,-555,,-555,-555,,-555,-555,,,,,,,,,,,,,,,,',
',,,,-555,,,-555,-555,,-555,,-555,,-555,,-555,,-555,,,,,,,,-555,,,,,-555',
'-555,-555,-555,-555,-555,,,,-555,-555,,,,,,,-555,,,-555,-556,-556,-556',
',-556,-555,-555,,-556,-556,,,,-556,,-556,-556,-556,-556,-556,-556,-556',
',,,,,-556,-556,-556,-556,-556,-556,-556,,,-556,,,,,,,-556,,,-556,-556',
'-556,-556,-556,-556,-556,-556,-556,-556,-556,,-556,-556,,-556,-556,',
',,,,,,,,,,,,,,,,,,,-556,,,-556,-556,,-556,,-556,,-556,,-556,,-556,,',
',,,,,-556,,,,,-556,-556,-556,-556,-556,-556,,,,-556,-556,,,,,,,-556',
',,-556,-259,-259,-259,,-259,-556,-556,,-259,-259,,,,-259,,-259,-259',
'-259,-259,-259,-259,-259,,,,,,-259,-259,-259,-259,-259,-259,-259,,,-259',
',,,,,,-259,,,-259,-259,-259,-259,-259,-259,-259,-259,-259,-259,-259',
',-259,-259,,-259,-259,,,,,,,,,,,,,,,,,,,,,-259,,,-259,269,,-259,,-259',
',-259,,-259,,-259,,,,,,,,-259,,,,,-259,-259,-259,-259,-259,-259,,,,-259',
'-259,,,,,,,-259,,,-259,63,64,65,,51,-259,-259,,57,58,,,,61,,59,60,62',
'258,259,66,67,,,,,,257,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50',
'86,85,87,262,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,',
'52,,54,,256,,,,40,,,,,,,,218,,,,,79,260,75,76,77,78,,,,74,80,,,,,,,56',
',,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257',
'28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,262,88,95,96',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,256,,,,40,,,,',
',,,218,,,,,79,260,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37',
'83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92',
',,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,',
',,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60',
'62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93',
'84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214',
',,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56',
',,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257',
'292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,',
'218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83',
',57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,',
'219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,',
',,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62',
'258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84',
'50,86,85,87,262,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214',
',,52,,54,,676,,254,,40,,,,,,,,218,,,,,79,260,75,76,77,78,,,,74,80,,',
',,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67',
',,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,262',
'88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,254',
',40,,,,,,,,218,,,,,79,260,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65',
',51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89',
'91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,',
'59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93',
'84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214',
',694,52,,54,,,,254,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,',
',,56,,,53,63,64,65,8,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,',
',,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95',
'96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,,,,',
',,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,413,56,,,53,63,64,65,,51,37',
'83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92',
',,219,,,,,,,293,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,328,,345,343',
'342,340,344,,,,,,,,,337,,,,,,,290,,,287,,,52,,54,,,,,,,,347,,,,,,,350',
'349,353,352,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,297',
'83,,57,58,,,,61,338,59,60,62,258,259,66,67,,,,,,257,28,27,90,89,91,92',
',,219,,,,,,,41,,,94,93,84,50,86,85,87,262,88,95,96,,81,82,,38,39,,,',
',,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,256,,,,40,,,,,,,,218,,,,,79,260',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,',
'59,60,62,258,259,66,67,,,,,,257,28,27,90,89,91,92,,,219,,,,,,,41,,,94',
'93,84,50,86,85,87,262,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210',
',,214,,,52,,54,,256,,,,40,,,,,,,,218,,,,,79,260,75,76,77,78,,,,74,80',
',,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67',
',,,,,257,292,296,90,89,91,92,,,219,,,,,,,293,,,94,93,84,50,86,85,87',
',88,95,96,,81,82,,786,,345,343,342,340,344,,,,,,,,,337,,,,,,,290,,,287',
',,52,,54,,,,,,,,347,,,,,,,350,349,353,352,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,63,64,65,,51,297,83,,57,58,,,,61,338,59,60,62,258,259',
'66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85',
'87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,',
',,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64',
'65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90',
'89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79',
'73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61',
',59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41',
',,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210',
',,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,',
',,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,',
',,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,',
'18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,',
'57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219',
',,,,,,41,,,94,93,84,50,86,85,87,262,88,95,96,,81,82,,38,39,,,,,,,,,',
',,,,,,,,,,,210,,,214,,,52,,54,,676,,254,,40,,,,,,,,218,,,,,79,260,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59',
'60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94',
'93,84,50,86,85,87,262,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210',
',,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,260,75,76,77,78,,,,74,80,,',
',,,,56,,,53,63,64,65,8,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,',
',,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,',
',,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,8,51',
'37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,',
',17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,',
',,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62',
'258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,293,,,94,93,84',
'50,86,85,87,,88,95,96,,81,82,,786,,345,343,342,340,344,,,,,,,,,337,',
',,,,,579,,,214,,,52,,54,,,,,,,,347,775,,,,,,350,349,353,352,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,8,51,297,83,,57,58,,,,61,338',
'59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94',
'93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30',
',,52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56',
',,53,63,64,65,8,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22',
'28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95,96,',
'81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,,,,,,,,18',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,8,51,37,83,,57',
'58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7',
'41,,9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,',
',,,36,,,30,,,52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74',
'80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66',
'67,,,,,,257,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87',
'262,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,256',
',,,40,,,,,,,,218,,,,,79,260,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64',
'65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,28,27,90',
'89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,262,88,95,96,,81,82,',
'38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,256,,,,40,,,,,,,,218,',
',,,79,260,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57',
'58,,,,61,,59,60,62,258,259,66,67,,,,,,257,28,27,90,89,91,92,,,219,,',
',,,,41,,,94,93,84,50,86,85,87,262,88,95,96,,81,82,,38,39,,,,,,,,,,,',
',,,,,,,,,210,,,214,,,52,,54,,256,,,,40,,,,,,,,218,,,,,79,260,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,84,50,86',
'85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54',
',,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64',
'65,,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89',
'91,92,,,17,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,',
',,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,18,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59',
'60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94',
'93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,',
'214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,',
',56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,',
',,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,797,,,,40',
',,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51',
'37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,',
',219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,',
',,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86',
'85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54',
',,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64',
'65,,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89',
'91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,',
'59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,',
',94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210',
',,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,',
',,,56,,,53,63,64,65,8,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,',
',,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95',
'96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,,,,',
',,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83',
',57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,',
'219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,',
',,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62',
'258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84',
'50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,',
'52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,',
'53,63,64,65,8,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28',
'27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95,96,,81',
'82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,,,,,,,,18,',
',,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58',
',,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,',
',,,41,,,94,93,84,50,86,85,87,262,88,95,96,,81,82,,38,39,,,,,,,,,,,,',
',,,,,,,,210,,,214,,,52,,54,,676,,254,,40,,,,,,,,218,,,,,79,260,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60',
'62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93',
'84,50,86,85,87,262,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,',
'214,,,52,,54,,,,254,,40,,,,,,,,218,,,,,79,260,75,76,77,78,,,,74,80,',
',,,,,56,,,53,63,64,65,8,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67',
',,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,',
',,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,8,51',
'37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,',
',17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,',
',,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62',
'258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,293,,,94,93,84',
'50,86,85,87,,88,95,96,,81,82,,,,,,,,,,,,,,,,,,,,,,,,290,,,287,,,52,',
'54,,,,,,,,,,,,,,,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64',
'65,,51,297,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296',
'90,89,91,92,,,219,,,,,,,293,,,94,93,84,50,86,85,87,,88,95,96,,81,82',
',,,,,,,,,,,,,,,,,,,,,,,290,,,287,,,52,,54,,,,,,,,,,,,,,,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,297,83,,57,58,,,,61,,59',
'60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94',
'93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,',
'214,,,52,,54,,430,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,',
',,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67',
',,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,',
'88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,256,',
',,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65',
',51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91',
'92,,,17,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,',
',,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,63,64,65,8,51,37,83,,57,58,,,,61,,59,60',
'62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,84',
'50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52',
',54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
'63,64,65,8,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27',
'90,89,91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95,96,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,,,,,,,,18,,,,',
'79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,8,51,37,83,,57,58',
',,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41',
',9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,',
'36,,,30,,,52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67',
',,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,',
'88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40',
',,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,8,51',
'37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,',
',17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,',
',,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62',
'258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84',
'50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,',
'52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,',
'53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28',
'27,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,',
',79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58',
',,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,219,,,,,,,41',
',,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210',
',,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,',
',,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,',
',,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,',
',,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51',
'37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91',
'92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,',
',,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59',
'60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94',
'93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,',
'214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,',
',56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,',
',,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,256,,,,40',
',,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,8,51',
'37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,',
',17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,',
',,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,84,50,86',
'85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54',
',,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64',
'65,8,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89',
'91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,8,51,37,83,,57,58,,,,61,,59',
'60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93',
'84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,',
',52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56',
',,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257',
'292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,',
'218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83',
',57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,',
'219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,',
',,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62',
'258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84',
'50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,',
'52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,',
'53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257',
'292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,',
'218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83',
',57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,',
'219,,,,,,,41,,,94,93,84,50,86,85,87,262,88,95,96,,81,82,,38,39,,,,,',
',,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,254,,40,,,,,,,,218,,,,,79,260,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,8,51,37,83,,57,58,,,,61,,59',
'60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93',
'84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,',
',52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56',
',,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257',
'292,296,90,89,91,92,,,219,,,,,,,293,,,94,93,84,50,86,85,87,,88,95,96',
',81,82,,,,,,,,,,,,,,,,,,,,,,,,956,,,214,,,52,,54,,,,,,,,,,,,,,,,,,,79',
'73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,297,83,,57,58,,,',
'61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,',
'41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,',
',,210,,,214,,,52,,54,,676,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,',
'74,80,,,,,,,56,,,53,63,64,65,8,51,37,83,,57,58,,,,61,,59,60,62,23,24',
'66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85',
'87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,54,,32',
',,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65',
'8,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91',
'92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,',
',,,,,,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59',
'60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94',
'93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,',
'214,,,52,,54,,676,,254,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,63,64,65,8,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67',
',,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,',
',,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,8,51',
'37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,',
',17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,',
',,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,63,64,65,8,51,37,83,,57,58,,,,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,54',
',32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63',
'64,65,8,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90',
'89,91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,,,,,,,,18,,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,',
'59,60,62,258,259,66,67,,,,,,257,28,27,90,89,91,92,,,219,,,,,,,41,,,94',
'93,84,50,86,85,87,262,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210',
',,214,,,52,,54,,256,,,,40,,,,,,,,218,,,,-557,79,260,75,76,77,78,-557',
'-557,-557,74,80,,-557,-557,,-557,,56,,,53,,,,-557,,37,83,,,,,,,,-557',
'-557,,-557,-557,-557,-557,-557,,,,,,,,,,,,,,,,,,,,,,-557,-557,-557,-557',
'-557,-557,-557,-557,-557,-557,-557,-557,-557,-557,-557,,,-557,-557,-557',
',654,,,,-557,,,,,,-557,,-557,,-557,-557,-557,-557,-557,-557,-557,,-557',
'-557,-557,,,,,,,,,,,,,-557,-557,,-88,,-557,,-288,-557,,-557,,,-97,-288',
'-288,-288,,,,-288,-288,,-288,,,,,,,,,,,,,,,,,,,,-288,-288,,-288,-288',
'-288,-288,-288,,,,,,,,,,,,,,,,,,,,,,-288,-288,-288,-288,-288,-288,-288',
'-288,-288,-288,-288,-288,-288,-288,-288,,,-288,-288,-288,,657,,,,-288',
',,,,,-288,,-288,,-288,-288,-288,-288,-288,-288,-288,,-288,,-288,,,,',
',,,,,,,,-288,-288,,-90,,-288,,-557,-288,,-288,,,-99,-557,-557,-557,',
',-557,-557,-557,,-557,,,,,,,,,-557,-557,-557,,,,,,,,,-557,-557,,-557',
'-557,-557,-557,-557,,,,,,,,,,,,,,,,,,,,,,-557,-557,-557,-557,-557,-557',
'-557,-557,-557,-557,-557,-557,-557,-557,-557,,,-557,-557,-557,,812,-557',
',,-557,,-557,,-557,,-557,,-557,,-557,-557,-557,-557,-557,-557,-557,',
'-557,-557,-557,,,,,,,,,,,,,-557,-557,-557,-557,,-557,,-288,-557,,-557',
',,-97,-288,-288,-288,,,-288,-288,-288,,-288,,,,,,,,,,-288,-288,,,,,',
',,,-288,-288,,-288,-288,-288,-288,-288,,,,,,,,,,,,,,,,,,,,,,-288,-288',
'-288,-288,-288,-288,-288,-288,-288,-288,-288,-288,-288,-288,-288,,,-288',
'-288,-288,,657,-288,,,-288,,-288,,-288,,-288,,-288,,-288,-288,-288,-288',
'-288,-288,-288,,-288,,-288,,,,,,,,,,,,,-288,-288,-288,-288,,-288,,-297',
'-288,,-288,,,-99,-297,-297,-297,,,-297,-297,-297,,-297,,,,,,,,,,-297',
'-297,,,,,,,,,-297,-297,,-297,-297,-297,-297,-297,,,,,,,,,,,,,,,,,,,',
',,-297,-297,-297,-297,-297,-297,-297,-297,-297,-297,-297,-297,-297,-297',
'-297,,,-297,-297,-297,,,-297,,278,-297,,-297,,-297,,-297,,-297,,-297',
'-297,-297,-297,-297,-297,-297,,-297,,-297,,,,,,,,,,,,,-297,-297,-297',
'-297,-282,-297,,,-297,,-297,-282,-282,-282,,,-282,-282,-282,,-282,,',
',,,,,,,-282,-282,-282,,,,,,,,-282,-282,,-282,-282,-282,-282,-282,,,',
',,,,,,,,,,,,,,,,,,-282,-282,-282,-282,-282,-282,-282,-282,-282,-282',
'-282,-282,-282,-282,-282,,,-282,-282,-282,,,-282,,,-282,,-282,,-282',
',-282,,-282,,-282,-282,-282,-282,-282,-282,-282,,-282,,-282,,,,,,,,',
',,,,-282,-282,-282,-282,-573,-282,,-282,-282,,-282,-573,-573,-573,,',
'-573,-573,-573,,-573,,,,,,,,,,-573,,,,,,,,,,-573,-573,,-573,-573,-573',
'-573,-573,,,,,,,,,,,,-573,,,,,,,-573,-573,-573,,,-573,-573,-573,,-573',
',,,,-573,-573,,,,-573,,,-573,,,,,269,-573,-573,-573,,-573,-573,-573',
'-573,-573,,,,,,,,,,,,-573,,,,,,,,,,,,,-573,,-573,,,-573,,,-573,-573',
',-573,,,,,-573,,-573,-573,-573,269,-573,-573,-573,-573,,-573,,,,,,,',
',,-573,,,,,-573,,,,,-573,-573,,-573,-573,-573,-573,-573,-573,,-573,',
',-573,445,449,,,447,,,,,,,,,142,143,139,121,122,123,130,127,129,,,124',
'125,-573,-573,,,144,145,131,132,-573,,,,,269,-573,,,,,136,135,,120,141',
'138,137,133,134,128,126,118,140,119,,-573,146,,,,,,,,,,,,-573,,-573',
',,-573,156,167,157,180,153,173,163,162,188,191,178,161,160,155,181,189',
'190,165,154,168,172,174,166,159,,,,175,182,177,176,169,179,164,152,171',
'170,183,184,185,186,187,151,158,149,150,147,148,111,113,110,,112,,,',
',,,,,142,143,139,121,122,123,130,127,129,,,124,125,,,,,144,145,131,132',
',,,,,,,,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119,,,146',
'192,,,,,,,,,,80,156,167,157,180,153,173,163,162,188,191,178,161,160',
'155,181,189,190,165,154,168,172,174,166,159,,,,175,182,177,176,169,179',
'164,152,171,170,183,184,185,186,187,151,158,149,150,147,148,111,113',
',,112,,,,,,,,,142,143,139,121,122,123,130,127,129,,,124,125,,,,,144',
'145,131,132,,,,,,,,,,,,136,135,,120,141,138,137,133,134,128,126,118',
'140,119,,,146,192,,,,,,,,,,80,156,167,157,180,153,173,163,162,188,191',
'178,161,160,155,181,189,190,165,154,168,172,174,166,159,,,,175,182,177',
'176,169,179,164,152,171,170,183,184,185,186,187,151,158,149,150,147',
'148,111,113,,,112,,,,,,,,,142,143,139,121,122,123,130,127,129,,,124',
'125,,,,,144,145,131,132,,,,,,,,,,,,136,135,,120,141,138,137,133,134',
'128,126,118,140,119,,,146,192,,,,,,,,,,80,156,167,157,180,153,173,163',
'162,188,191,178,161,160,155,181,189,190,165,154,168,172,174,166,159',
',,,175,182,177,176,169,179,164,152,171,170,183,184,185,186,187,151,158',
'149,150,147,148,111,113,,,112,,,,,,,,,142,143,139,121,122,123,130,127',
'129,,,124,125,,,,,144,145,131,132,,,,,,,,,,,,136,135,,120,141,138,137',
'133,134,128,126,118,140,119,,,146,192,,,,,,,,,,80,156,167,157,180,153',
'173,163,162,188,191,178,161,160,155,181,189,190,165,154,168,172,174',
'166,159,,,,175,182,177,385,384,386,383,152,171,170,183,184,185,186,187',
'151,158,149,150,381,382,379,113,86,85,380,,88,,,,,,,142,143,139,121',
'122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,390,,,,,,136',
'135,,120,141,138,137,133,134,128,126,118,140,119,,,146,156,167,157,180',
'153,173,163,162,188,191,178,161,160,155,181,189,190,165,154,168,172',
'174,166,159,,,,175,182,177,176,169,179,164,152,171,170,183,184,185,186',
'187,151,158,149,150,147,148,111,113,407,406,112,,408,,,,,,,142,143,139',
'121,122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,,,136',
'135,,120,141,138,137,133,134,128,126,118,140,119,,,146,156,167,157,180',
'153,173,163,162,188,191,178,161,160,155,181,189,190,165,154,168,172',
'174,166,159,,,,175,182,177,176,169,179,164,152,171,170,183,184,185,186',
'187,151,158,149,150,147,148,111,113,407,406,112,,408,,,,,,,142,143,139',
'121,122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,,,136',
'135,,120,141,138,137,133,134,128,126,118,140,119,,,146,156,167,157,180',
'153,173,163,162,188,191,178,161,160,155,181,189,190,165,154,168,172',
'174,166,159,,,,175,182,177,176,169,179,164,152,171,170,183,184,185,186',
'187,151,158,149,150,147,148,111,113,,,112,,,,,,,,,142,143,139,121,122',
'123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,,,136,135,,120',
'141,138,137,133,134,128,126,118,140,119,439,443,146,,440,,,,,,,,,142',
'143,139,121,122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,269',
',,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119,452,443,146',
',453,,,,,,,,,142,143,139,121,122,123,130,127,129,,,124,125,,,,,144,145',
'131,132,,,,,,,,,,,,136,135,,120,141,138,137,133,134,128,126,118,140',
'119,452,443,146,,453,,,,,,,,,142,143,139,121,122,123,130,127,129,,,124',
'125,,,,,144,145,131,132,,,,,,,,,,,,136,135,,120,141,138,137,133,134',
'128,126,118,140,119,452,443,146,,453,,,,,,,,,142,143,139,121,122,123',
'130,127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,,,136,135,,120,141',
'138,137,133,134,128,126,118,140,119,452,443,146,,453,,,,,,,,,142,143',
'139,121,122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,',
',136,135,,120,141,138,137,133,134,128,126,118,140,119,660,443,146,,661',
',,,,,,,,142,143,139,121,122,123,130,127,129,,,124,125,,,,,144,145,131',
'132,,,,,,269,,,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119',
'662,449,146,,663,,,,,,,,,142,143,139,121,122,123,130,127,129,,,124,125',
',,,,144,145,131,132,,,,,,,,,,,,136,135,,120,141,138,137,133,134,128',
'126,118,140,119,705,443,146,,706,,,,,,,,,142,143,139,121,122,123,130',
'127,129,,,124,125,,,,,144,145,131,132,,,,,,269,,,,,,136,135,,120,141',
'138,137,133,134,128,126,118,140,119,708,449,146,,709,,,,,,,,,142,143',
'139,121,122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,',
',136,135,,120,141,138,137,133,134,128,126,118,140,119,452,443,146,,453',
',,,,,,,,142,143,139,121,122,123,130,127,129,,,124,125,,,,,144,145,131',
'132,,,,,,,,,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119',
'660,443,146,,661,,,,,,,,,142,143,139,121,122,123,130,127,129,,,124,125',
',,,,144,145,131,132,,,,,,269,,,,,,136,135,,120,141,138,137,133,134,128',
'126,118,140,119,662,449,146,,663,,,,,,,,,142,143,139,121,122,123,130',
'127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,,,136,135,,120,141,138',
'137,133,134,128,126,118,140,119,759,443,146,,760,,,,,,,,,142,143,139',
'121,122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,269,,,,,',
'136,135,,120,141,138,137,133,134,128,126,118,140,119,761,449,146,,762',
',,,,,,,,142,143,139,121,122,123,130,127,129,,,124,125,,,,,144,145,131',
'132,,,,,,,,,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119',
'767,449,146,,765,,,,,,,,,142,143,139,121,122,123,130,127,129,,,124,125',
',,,,144,145,131,132,,,,,,,,,,,,136,135,,120,141,138,137,133,134,128',
'126,118,140,119,452,443,146,,453,,,,,,,,,142,143,139,121,122,123,130',
'127,129,,,124,125,,,,,144,145,131,132,,,,,,269,,,,,,136,135,,120,141',
'138,137,133,134,128,126,118,140,119,767,449,146,,855,,,,,,,,,142,143',
'139,121,122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,',
',136,135,,120,141,138,137,133,134,128,126,118,140,119,994,443,146,,995',
',,,,,,,,142,143,139,121,122,123,130,127,129,,,124,125,,,,,144,145,131',
'132,,,,,,269,,,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119',
'996,449,146,,997,,,,,,,,,142,143,139,121,122,123,130,127,129,,,124,125',
',,,,144,145,131,132,,,,,,,,,,,,136,135,,120,141,138,137,133,134,128',
'126,118,140,119,,,146' ]
        racc_action_table = arr = ::Array.new(25592, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'0,0,0,0,0,356,26,322,0,0,55,294,357,0,1,0,0,0,0,0,0,0,363,209,366,6',
'401,0,0,0,0,0,0,0,314,211,0,314,494,507,605,288,0,0,0,0,0,0,0,0,0,0',
'0,759,0,0,0,867,0,0,9,0,0,291,760,700,517,622,622,375,26,494,507,209',
'868,294,315,3,10,315,466,466,3,0,917,211,0,401,926,0,26,0,954,0,55,294',
'957,0,71,517,982,700,718,718,761,0,71,288,994,322,0,0,0,0,0,0,356,11',
'356,0,0,356,995,357,363,357,366,0,357,291,0,17,17,17,466,17,0,0,12,17',
'17,1003,605,288,17,762,17,17,17,17,17,17,17,288,622,759,718,20,17,17',
'17,17,17,17,17,291,760,17,867,761,867,867,375,867,17,291,868,17,17,17',
'17,17,17,17,462,17,17,17,996,17,17,375,17,17,535,917,375,917,34,926',
'917,926,36,954,926,954,761,957,954,957,762,982,957,982,17,41,982,17',
'17,994,17,994,17,997,994,379,502,77,17,595,596,705,379,995,462,995,17',
'318,995,518,318,17,17,17,17,17,17,762,772,772,17,17,1003,706,1003,870',
'830,1003,17,78,535,17,18,18,18,996,18,17,17,279,18,18,518,97,279,18',
'708,18,18,18,18,18,18,18,709,502,502,502,647,18,18,18,18,18,18,18,535',
'705,18,996,997,996,502,633,996,18,535,193,18,18,18,18,18,18,18,210,18',
'18,18,706,18,18,830,18,18,470,595,596,595,596,212,595,596,705,997,772',
'997,570,647,997,772,708,708,705,392,18,213,570,18,709,709,18,870,18',
'870,706,470,870,830,18,470,470,633,633,361,706,361,18,830,660,219,633',
'18,18,18,18,18,18,708,570,570,18,18,25,25,885,709,661,708,18,885,25',
'18,22,22,22,709,22,18,18,885,22,22,392,392,392,22,813,22,22,22,22,22',
'22,22,723,570,880,723,660,22,22,22,22,22,22,22,880,814,22,885,885,885',
'885,394,251,22,661,252,22,22,22,22,22,22,22,22,22,22,22,255,22,22,268',
'22,22,471,813,398,880,880,14,576,380,576,576,576,576,576,885,380,15',
'15,381,382,403,22,576,814,22,381,382,22,968,22,968,22,471,22,281,22',
'471,471,394,394,394,880,360,22,283,576,14,360,22,22,22,22,22,22,576',
'576,14,22,22,284,383,973,398,398,398,22,973,383,22,23,23,23,285,23,22',
'22,973,23,23,403,403,403,23,290,23,23,23,23,23,23,23,576,292,887,37',
'37,23,23,23,23,23,23,23,887,293,23,973,973,973,973,396,35,23,396,296',
'23,23,23,23,23,23,23,23,23,23,23,384,23,23,615,23,23,385,384,615,887',
'887,301,845,385,845,845,845,845,845,973,298,386,302,388,303,35,23,845',
'386,23,388,439,23,306,23,35,23,770,23,313,23,316,770,396,396,317,887',
'776,23,319,845,301,776,23,23,23,23,23,23,845,845,301,23,23,83,83,297',
'297,440,327,23,439,328,23,24,24,24,329,24,23,23,439,24,24,311,311,330',
'24,332,24,24,24,24,24,24,24,845,355,355,333,646,24,24,24,24,24,24,24',
'440,110,24,13,13,339,110,110,351,24,440,13,24,24,24,24,24,24,24,24,24',
'24,24,354,24,24,362,24,24,573,573,365,646,746,746,847,367,847,847,847',
'847,847,646,5,5,5,5,5,371,24,847,397,24,489,400,24,419,24,13,24,13,24',
'425,24,790,790,42,42,790,790,790,24,431,847,42,433,24,24,24,24,24,24',
'847,847,489,24,24,437,489,489,489,489,438,24,984,984,24,27,27,27,446',
'27,24,24,472,27,27,473,474,475,27,509,27,27,27,27,27,27,27,847,512,42',
'513,42,27,27,27,27,27,27,27,519,523,27,208,208,524,527,529,536,27,540',
'208,27,27,27,27,27,27,27,27,27,27,27,549,27,27,550,27,27,551,347,564',
'347,347,347,852,347,852,852,852,852,852,587,579,587,587,587,582,587',
'27,852,586,27,27,591,27,597,27,208,27,208,27,598,27,637,644,289,289',
'347,650,655,27,658,852,289,347,27,27,27,27,27,27,852,852,664,27,27,665',
'858,673,858,858,858,27,858,675,27,30,30,30,30,30,27,27,688,30,30,692',
'695,702,30,704,30,30,30,30,30,30,30,852,707,289,710,289,30,30,30,30',
'30,30,30,711,712,30,280,280,280,280,280,30,30,713,30,30,30,30,30,30',
'30,30,716,30,30,30,717,30,30,719,30,30,722,584,725,584,584,584,960,584',
'960,960,960,960,960,699,699,699,699,699,726,730,30,960,731,30,490,733',
'30,736,30,737,30,739,743,748,30,754,756,304,304,584,758,763,30,767,960',
'304,584,30,30,30,30,30,30,960,960,490,30,30,768,490,490,490,490,779',
'30,780,782,30,31,31,31,783,31,30,30,784,31,31,370,786,789,31,796,31',
'31,31,31,31,31,31,960,817,304,818,304,31,31,31,31,31,31,31,822,744,31',
'744,744,744,824,744,827,31,828,829,31,31,31,31,31,31,31,834,31,31,31',
'837,31,31,838,370,370,855,859,862,872,364,364,370,875,373,373,744,370',
'364,876,877,897,373,744,898,910,31,920,921,31,922,923,31,928,31,929',
'31,370,937,939,941,578,578,942,943,944,956,970,978,578,983,988,990,31',
'31,31,31,31,31,370,991,370,31,31,993,364,,364,,373,31,373,,31,32,32',
'32,,32,31,31,,32,32,,,,32,,32,32,32,32,32,32,32,578,,578,,,32,32,32',
'32,32,32,32,,,32,607,607,,,,,32,,607,32,32,32,32,32,32,32,,32,32,32',
',32,32,,56,,56,56,56,56,56,,,,732,732,,,,56,,,732,,,,32,,,32,,,32,,32',
'607,,607,,,,,56,56,,,,,,56,56,56,56,32,32,32,32,32,32,,,,32,32,,,,32',
',732,32,732,,32,38,38,38,,38,32,32,,38,38,,,,38,56,38,38,38,38,38,38',
'38,,,,,,38,38,38,38,38,38,38,,,38,,,,,428,,38,,,38,38,38,38,38,38,38',
',38,38,38,,38,38,,38,38,428,428,428,428,428,428,428,428,428,428,428',
',,428,428,,,428,428,,38,,,38,,,38,,38,,,428,,428,38,428,428,428,428',
'428,428,428,38,428,,,,38,38,38,38,38,38,,,,38,38,,428,,428,,,38,,,38',
'39,39,39,,39,38,38,,39,39,,,,39,,39,39,39,39,39,39,39,,,,,,39,39,39',
'39,39,39,39,,,39,,,,,666,,39,,,39,39,39,39,39,39,39,,39,39,39,,39,39',
',39,39,666,666,666,666,666,666,666,666,666,666,666,,,666,666,,,666,666',
',39,,,39,,,39,,39,,,666,,666,39,666,666,666,666,666,666,666,39,666,',
',,39,39,39,39,39,39,765,765,,39,39,,666,,765,,,39,,765,39,40,40,40,',
'40,39,39,,40,40,,,,40,,40,40,40,40,40,40,40,,,,,,40,40,40,40,40,40,40',
',,40,,,,765,,765,40,,,40,40,40,40,40,40,40,,40,40,40,,40,40,,40,40,691',
'691,691,691,691,691,691,691,691,691,691,,,691,691,,,691,691,,40,,,40',
',,40,,40,,,691,,691,40,691,691,691,691,691,691,691,40,691,,,,40,40,40',
'40,40,40,,,,40,40,,691,,691,,,40,,,40,52,52,52,,52,40,40,,52,52,,,,52',
',52,52,52,52,52,52,52,,,,,,52,52,52,52,52,52,52,,,52,,,,,,,52,,,52,52',
'52,52,52,52,52,,52,52,52,,52,52,,52,52,668,668,668,668,668,668,668,668',
'668,668,668,,,668,668,,,668,668,,52,,,52,,,52,,52,,,668,,668,52,668',
'668,668,668,668,668,668,52,668,,,,52,52,52,52,52,52,869,869,,52,52,',
'668,668,869,,,52,,,52,53,53,53,,53,52,52,,53,53,,,,53,,53,53,53,53,53',
'53,53,,,,,,53,53,53,53,53,53,53,,,53,,,,869,,869,53,,,53,53,53,53,53',
'53,53,53,53,53,53,,53,53,,53,53,19,19,19,19,19,19,19,19,19,19,19,,,19',
'19,,,19,19,,53,,,53,,,53,,53,,53,19,,19,53,19,19,19,19,19,19,19,53,19',
',,,53,53,53,53,53,53,955,955,,53,53,,19,,955,,,53,,,53,54,54,54,,54',
'53,53,,54,54,,,,54,,54,54,54,54,54,54,54,,,,,,54,54,54,54,54,54,54,',
',54,,,,955,,955,54,,,54,54,54,54,54,54,54,54,54,54,54,,54,54,,54,54',
'249,249,249,249,249,249,249,249,249,249,249,,,249,249,,,249,249,,54',
',,54,,,54,,54,,,249,,249,54,249,249,249,249,249,249,249,54,249,,,,54',
'54,54,54,54,54,,,,54,54,,249,,,,,54,,,54,57,57,57,,57,54,54,,57,57,',
',,57,,57,57,57,57,57,57,57,,,,,,57,57,57,57,57,57,57,,,57,,,,,,,57,',
',57,57,57,57,57,57,57,,57,57,57,,57,57,,57,57,436,436,436,436,436,436',
'436,436,436,436,436,,,436,436,,,436,436,,57,,,57,,,57,,57,,,436,,436',
'57,436,436,436,436,436,436,436,57,436,,,,57,57,57,57,57,57,,,,57,57',
',436,,,,,57,,,57,58,58,58,,58,57,57,,58,58,,,,58,,58,58,58,58,58,58',
'58,,,,,,58,58,58,58,58,58,58,,,58,,,,,,,58,,,58,58,58,58,58,58,58,,58',
'58,58,,58,58,,58,58,455,455,455,455,455,455,455,455,455,455,455,,,455',
'455,,,455,455,,58,,,58,,,58,,58,,,455,,455,58,455,455,455,455,455,455',
'455,58,455,,,,58,58,58,58,58,58,,,,58,58,,455,,,,,58,,,58,61,61,61,',
'61,58,58,,61,61,,,,61,,61,61,61,61,61,61,61,,,,,,61,61,61,61,61,61,61',
',,61,,,,,,,61,,,61,61,61,61,61,61,61,,61,61,61,,61,61,,61,61,547,547',
'547,547,547,547,547,547,547,547,547,,,547,547,,,547,547,,61,,,61,,,61',
',61,,,547,,547,61,547,547,547,547,547,547,547,61,547,,,,61,61,61,61',
'61,61,,,,61,61,61,547,,,,61,61,,,61,62,62,62,,62,61,61,,62,62,,,,62',
',62,62,62,62,62,62,62,,,,,,62,62,62,62,62,62,62,,,62,,,,,,,62,,,62,62',
'62,62,62,62,62,,62,62,62,,62,62,,323,,323,323,323,323,323,,,,,,,,,323',
',,,,,,62,,,62,478,,62,,62,,62,,,,,,323,,323,,,478,478,323,323,323,323',
'62,62,62,62,62,62,,,478,62,62,,478,478,478,478,,62,,,62,63,63,63,,63',
'62,62,,63,63,,,,63,323,63,63,63,63,63,63,63,,,,,,63,63,63,63,63,63,63',
',,63,,,,,,,63,,,63,63,63,63,63,63,63,,63,63,63,480,63,63,,566,,566,566',
'566,566,566,,,,,,,480,480,566,,,,63,,,63,,,63,,480,63,480,63,480,480',
'480,480,,,480,566,480,,,,,,566,566,566,566,63,63,63,63,63,63,,,,63,63',
',,,,,,63,,,63,84,84,84,,84,63,63,,84,84,,,,84,566,84,84,84,84,84,84',
'84,,84,,,,84,84,84,84,84,84,84,,,84,,,,,,,84,,,84,84,84,84,84,84,84',
'84,84,84,84,,84,84,,84,84,715,715,715,715,715,715,715,715,715,715,715',
',,715,715,,,715,715,,84,,,84,84,,84,,84,,84,715,84,715,84,715,715,715',
'715,715,715,715,84,715,84,,,84,84,84,84,84,84,,,,84,84,,715,,,,,84,',
',84,87,87,87,,87,84,84,,87,87,,,,87,,87,87,87,87,87,87,87,,87,,,,87',
'87,87,87,87,87,87,,,87,,,,,,,87,,,87,87,87,87,87,87,87,87,87,87,87,',
'87,87,,87,87,795,795,795,795,795,795,795,795,795,795,795,,,795,795,',
',795,795,,87,,,87,87,,87,,87,,87,795,87,795,87,795,795,795,795,795,795',
'795,87,795,87,,,87,87,87,87,87,87,,,,87,87,,795,,,,,87,,,87,99,99,99',
'99,99,87,87,,99,99,,,,99,,99,99,99,99,99,99,99,,,,,,99,99,99,99,99,99',
'99,,,99,,,,,,99,99,99,99,99,99,99,99,99,99,99,,99,99,99,,99,99,,99,99',
'801,801,801,801,801,801,801,801,801,801,801,,,801,801,,,801,801,,99',
',,99,,,99,,99,,99,801,,801,99,801,801,801,801,801,801,801,99,801,,,',
'99,99,99,99,99,99,,,,99,99,,801,,,,99,99,,,99,103,103,103,,103,99,99',
',103,103,,,,103,,103,103,103,103,103,103,103,,,,,,103,103,103,103,103',
'103,103,,,103,,,,,,,103,,,103,103,103,103,103,103,103,,103,103,103,',
'103,103,,103,103,803,803,803,803,803,803,803,803,803,803,803,,,803,803',
',,803,803,,103,,,103,,,103,,103,,,803,,803,103,803,803,803,803,803,803',
'803,103,803,,,,103,103,103,103,103,103,,,,103,103,,803,,,,,103,,,103',
'104,104,104,,104,103,103,,104,104,,,,104,,104,104,104,104,104,104,104',
',,,,,104,104,104,104,104,104,104,,,104,,,,,,,104,,,104,104,104,104,104',
'104,104,,104,104,104,,104,104,,104,104,806,806,806,806,806,806,806,806',
'806,806,806,,,806,806,,,806,806,,104,,,104,,,104,,104,,,806,,806,104',
'806,806,806,806,806,806,806,104,806,,,,104,104,104,104,104,104,,,,104',
'104,,806,,,,,104,,,104,105,105,105,,105,104,104,,105,105,,,,105,,105',
'105,105,105,105,105,105,,,,,,105,105,105,105,105,105,105,,,105,,,,,',
',105,,,105,105,105,105,105,105,105,,105,105,105,,105,105,,105,105,808',
'808,808,808,808,808,808,808,808,808,808,,,808,808,,,808,808,,105,,,105',
',,105,,105,,,808,,808,105,808,808,808,808,808,808,808,105,808,,,,105',
'105,105,105,105,105,,,,105,105,,808,,,,,105,,,105,106,106,106,,106,105',
'105,,106,106,,,,106,,106,106,106,106,106,106,106,,,,,,106,106,106,106',
'106,106,106,,,106,,,,,,,106,,,106,106,106,106,106,106,106,,106,106,106',
',106,106,,106,106,900,900,900,900,900,900,900,900,900,900,900,,,900',
'900,,,900,900,,106,,,106,,,106,,106,,,900,,900,106,900,900,900,900,900',
'900,900,106,900,,,,106,106,106,106,106,106,,,,106,106,,900,,,,,106,',
',106,107,107,107,107,107,106,106,,107,107,,,,107,,107,107,107,107,107',
'107,107,,,,,,107,107,107,107,107,107,107,,,107,,,,,,107,107,,107,107',
'107,107,107,107,107,107,,107,107,107,,107,107,,107,107,902,902,902,902',
'902,902,902,902,902,902,902,,,902,902,,,902,902,,107,,,107,,,107,,107',
',107,902,,902,107,902,902,902,902,902,902,902,107,902,,,,107,107,107',
'107,107,107,,,,107,107,,902,,,,,107,,,107,108,108,108,108,108,107,107',
',108,108,,,,108,,108,108,108,108,108,108,108,,,,,,108,108,108,108,108',
'108,108,,,108,,,,,,108,108,108,108,108,108,108,108,108,108,108,,108',
'108,108,,108,108,,108,108,949,949,949,949,949,949,949,949,949,949,949',
',,949,949,,,949,949,,108,,,108,,,108,,108,,108,949,,949,108,949,949',
'949,949,949,949,949,108,949,,,,108,108,108,108,108,108,,,,108,108,,949',
',,,,108,,,108,195,195,195,195,195,108,108,,195,195,,,,195,,195,195,195',
'195,195,195,195,,,,,,195,195,195,195,195,195,195,,,195,,,,,,195,195',
',195,195,195,195,195,195,195,195,,195,195,195,,195,195,,195,195,468',
'468,468,468,468,468,468,468,468,468,468,,,468,468,,,468,468,,195,,,195',
',,195,,195,,195,468,,468,195,468,468,468,468,468,468,468,195,468,,,',
'195,195,195,195,195,195,,,,195,195,,,,,,,195,,,195,196,196,196,,196',
'195,195,,196,196,,,,196,,196,196,196,196,196,196,196,,,,,,196,196,196',
'196,196,196,196,,,196,,,,,,,196,,,196,196,196,196,196,196,196,,196,196',
'196,,196,196,,196,196,469,469,469,469,469,469,469,469,469,469,469,,',
'469,469,,,469,469,,196,,,196,,,196,,196,,196,469,,469,196,469,469,469',
'469,469,469,469,196,469,,,,196,196,196,196,196,196,,,,196,196,,,,,,',
'196,,,196,197,197,197,,197,196,196,,197,197,,,,197,,197,197,197,197',
'197,197,197,,,,,,197,197,197,197,197,197,197,,,197,,,,,,,197,,,197,197',
'197,197,197,197,197,,197,197,197,,197,197,,197,197,479,479,479,479,479',
'479,479,,,479,479,,,,,,,479,479,,197,,,197,,,197,,197,,197,479,,479',
'197,479,479,479,479,479,479,479,197,479,,,,197,197,197,197,197,197,',
',,197,197,,,,,,,197,,,197,198,198,198,,198,197,197,,198,198,,,,198,',
'198,198,198,198,198,198,198,,,,,,198,198,198,198,198,198,198,,,198,',
',,,,,198,,,198,198,198,198,198,198,198,,198,198,198,481,198,198,,198',
'198,,,,,,,,,,,,481,481,,,,,,,,198,,,198,,481,198,481,198,481,481,481',
'481,,198,481,,481,,,,,198,,,,,198,198,198,198,198,198,,,,198,198,,,',
',,,198,,,198,199,199,199,,199,198,198,,199,199,,,,199,,199,199,199,199',
'199,199,199,,,,,,199,199,199,199,199,199,199,,,199,,,,,,,199,,,199,199',
'199,199,199,199,199,199,199,199,199,,199,199,,199,199,482,,,,,,,,,,',
',,,,,,482,482,,199,,,199,,,199,,199,,199,482,,482,199,482,482,482,482',
',,482,199,482,,,,199,199,199,199,199,199,,,,199,199,,,,,,,199,,,199',
'200,200,200,,200,199,199,,200,200,,,,200,,200,200,200,200,200,200,200',
',,,,,200,200,200,200,200,200,200,,,200,,,,,,,200,,,200,200,200,200,200',
'200,200,200,200,200,200,,200,200,,200,200,483,,,,,,,,,,,,,,,,,483,483',
',200,,,200,,,200,,200,,200,483,,483,200,483,483,483,483,,,483,200,483',
',,,200,200,200,200,200,200,,,,200,200,,,,,,,200,,,200,204,204,204,,204',
'200,200,,204,204,,,,204,,204,204,204,204,204,204,204,,,,,,204,204,204',
'204,204,204,204,,,204,,,,,,,204,,,204,204,204,204,204,204,204,,204,204',
'204,,204,204,,204,204,484,484,484,484,484,484,484,,,484,484,,,,,,,484',
'484,,204,,,204,,,204,,204,,,484,,484,204,484,484,484,484,484,484,484',
'204,484,,,,204,204,204,204,204,204,,,,204,204,,,,,,,204,,,204,205,205',
'205,,205,204,204,,205,205,,,,205,,205,205,205,205,205,205,205,,,,,,205',
'205,205,205,205,205,205,,,205,,,,,,,205,,,205,205,205,205,205,205,205',
',205,205,205,,205,205,,205,205,485,485,485,485,485,485,485,,,485,485',
',,,,,,485,485,,205,,,205,,,205,,205,,,485,,485,205,485,485,485,485,485',
'485,485,205,485,,,,205,205,205,205,205,205,,,,205,205,,,,,,,205,,,205',
'206,206,206,,206,205,205,,206,206,,,,206,,206,206,206,206,206,206,206',
',,,,,206,206,206,206,206,206,206,,,206,,,,,,,206,,,206,206,206,206,206',
'206,206,,206,206,206,,206,206,,206,206,486,486,486,486,486,486,486,',
',486,486,,,,,,,486,486,,206,,,206,,,206,,206,,,486,,486,206,486,486',
'486,486,486,486,486,206,486,,,,206,206,206,206,206,206,,,,206,206,,',
',,,,206,,,206,214,214,214,214,214,206,206,,214,214,,,,214,,214,214,214',
'214,214,214,214,,,,,,214,214,214,214,214,214,214,,,214,,,,,,214,214',
',214,214,214,214,214,214,214,214,,214,214,214,,214,214,,214,214,487',
'487,487,487,487,487,487,,,487,487,,,,,,,487,487,,214,,,214,,,214,,214',
',214,487,,487,214,487,487,487,487,487,487,487,214,487,,,,214,214,214',
'214,214,214,,,,214,214,,,,,,,214,,,214,215,215,215,,215,214,214,,215',
'215,,,,215,,215,215,215,215,215,215,215,,,,,,215,215,215,215,215,215',
'215,,,215,,,,,,,215,,,215,215,215,215,215,215,215,,215,215,215,,215',
'215,,215,215,488,488,488,488,488,488,488,,,488,488,,,,,,,488,488,,215',
',,215,,215,215,,215,,,488,,488,215,488,488,488,488,488,488,488,215,488',
',,,215,215,215,215,215,215,,,,215,215,,,,,,,215,,,215,218,218,218,,218',
'215,215,,218,218,,,,218,,218,218,218,218,218,218,218,,,,,,218,218,218',
'218,218,218,218,,,218,,,,,,,218,,,218,218,218,218,218,218,218,,218,218',
'218,,218,218,,218,218,491,491,491,491,491,491,491,,,491,491,,,,,,,491',
'491,,218,,,218,,,218,,218,,,491,,491,218,491,491,491,491,491,491,491',
'218,491,,,,218,218,218,218,218,218,,,,218,218,,,,,,,218,,,218,220,220',
'220,,220,218,218,,220,220,,,,220,,220,220,220,220,220,220,220,,,,,,220',
'220,220,220,220,220,220,,,220,,,,,,,220,,,220,220,220,220,220,220,220',
',220,220,220,,220,220,,220,220,492,492,492,492,492,492,492,492,,492',
'492,,,,,,,492,492,,220,,,220,,,220,,220,,,492,,492,220,492,492,492,492',
'492,492,492,220,492,,,,220,220,220,220,220,220,,,,220,220,,,,,,,220',
',,220,221,221,221,,221,220,220,,221,221,,,,221,,221,221,221,221,221',
'221,221,,,,,,221,221,221,221,221,221,221,,,221,,,,,,,221,,,221,221,221',
'221,221,221,221,,221,221,221,476,221,221,,221,221,,,,,,,,,,,,476,476',
',,,,,,,221,,,221,,476,221,476,221,476,476,476,476,,221,,,,,,,,221,,',
',,221,221,221,221,221,221,,,,221,221,,,,,,,221,,,221,222,222,222,,222',
'221,221,,222,222,,,,222,,222,222,222,222,222,222,222,,,,,,222,222,222',
'222,222,222,222,,,222,,,,,,,222,,,222,222,222,222,222,222,222,,222,222',
'222,477,222,222,,222,222,,,,,,,,,,,,477,477,,,,,,,,222,,,222,,477,222',
'477,222,477,477,477,477,,222,,,,,,,,222,,,,,222,222,222,222,222,222',
',,,222,222,,,,,,,222,,,222,223,223,223,,223,222,222,,223,223,,,,223',
',223,223,223,223,223,223,223,,,,,,223,223,223,223,223,223,223,,,223',
',,,,,,223,,,223,223,223,223,223,223,223,,223,223,223,,223,223,,223,223',
',,,,,,,,,,,,,,,,,,,,223,,,223,,,223,,223,,,,,,223,,,,,,,,223,,,,,223',
'223,223,223,223,223,,,,223,223,,,,,,,223,,,223,224,224,224,,224,223',
'223,,224,224,,,,224,,224,224,224,224,224,224,224,,,,,,224,224,224,224',
'224,224,224,,,224,,,,,,,224,,,224,224,224,224,224,224,224,,224,224,224',
',224,224,,224,224,,,,,,,,,,,,,,,,,,,,,224,,,224,,,224,,224,,,,,,224',
',,,,,,,224,,,,,224,224,224,224,224,224,,,,224,224,,,,,,,224,,,224,225',
'225,225,,225,224,224,,225,225,,,,225,,225,225,225,225,225,225,225,,',
',,,225,225,225,225,225,225,225,,,225,,,,,,,225,,,225,225,225,225,225',
'225,225,,225,225,225,,225,225,,225,225,,,,,,,,,,,,,,,,,,,,,225,,,225',
',,225,,225,,,,,,225,,,,,,,,225,,,,,225,225,225,225,225,225,,,,225,225',
',,,,,,225,,,225,226,226,226,,226,225,225,,226,226,,,,226,,226,226,226',
'226,226,226,226,,,,,,226,226,226,226,226,226,226,,,226,,,,,,,226,,,226',
'226,226,226,226,226,226,,226,226,226,,226,226,,226,226,,,,,,,,,,,,,',
',,,,,,,226,,,226,,,226,,226,,,,,,226,,,,,,,,226,,,,,226,226,226,226',
'226,226,,,,226,226,,,,,,,226,,,226,227,227,227,,227,226,226,,227,227',
',,,227,,227,227,227,227,227,227,227,,,,,,227,227,227,227,227,227,227',
',,227,,,,,,,227,,,227,227,227,227,227,227,227,,227,227,227,,227,227',
',227,227,,,,,,,,,,,,,,,,,,,,,227,,,227,,,227,,227,,,,,,227,,,,,,,,227',
',,,,227,227,227,227,227,227,,,,227,227,,,,,,,227,,,227,228,228,228,',
'228,227,227,,228,228,,,,228,,228,228,228,228,228,228,228,,,,,,228,228',
'228,228,228,228,228,,,228,,,,,,,228,,,228,228,228,228,228,228,228,,228',
'228,228,,228,228,,228,228,,,,,,,,,,,,,,,,,,,,,228,,,228,,,228,,228,',
',,,,228,,,,,,,,228,,,,,228,228,228,228,228,228,,,,228,228,,,,,,,228',
',,228,229,229,229,,229,228,228,,229,229,,,,229,,229,229,229,229,229',
'229,229,,,,,,229,229,229,229,229,229,229,,,229,,,,,,,229,,,229,229,229',
'229,229,229,229,,229,229,229,,229,229,,229,229,,,,,,,,,,,,,,,,,,,,,229',
',,229,,,229,,229,,,,,,229,,,,,,,,229,,,,,229,229,229,229,229,229,,,',
'229,229,,,,,,,229,,,229,230,230,230,,230,229,229,,230,230,,,,230,,230',
'230,230,230,230,230,230,,,,,,230,230,230,230,230,230,230,,,230,,,,,',
',230,,,230,230,230,230,230,230,230,,230,230,230,,230,230,,230,230,,',
',,,,,,,,,,,,,,,,,,230,,,230,,,230,,230,,,,,,230,,,,,,,,230,,,,,230,230',
'230,230,230,230,,,,230,230,,,,,,,230,,,230,231,231,231,,231,230,230',
',231,231,,,,231,,231,231,231,231,231,231,231,,,,,,231,231,231,231,231',
'231,231,,,231,,,,,,,231,,,231,231,231,231,231,231,231,,231,231,231,',
'231,231,,231,231,,,,,,,,,,,,,,,,,,,,,231,,,231,,,231,,231,,,,,,231,',
',,,,,,231,,,,,231,231,231,231,231,231,,,,231,231,,,,,,,231,,,231,232',
'232,232,,232,231,231,,232,232,,,,232,,232,232,232,232,232,232,232,,',
',,,232,232,232,232,232,232,232,,,232,,,,,,,232,,,232,232,232,232,232',
'232,232,,232,232,232,,232,232,,232,232,,,,,,,,,,,,,,,,,,,,,232,,,232',
',,232,,232,,,,,,232,,,,,,,,232,,,,,232,232,232,232,232,232,,,,232,232',
',,,,,,232,,,232,233,233,233,,233,232,232,,233,233,,,,233,,233,233,233',
'233,233,233,233,,,,,,233,233,233,233,233,233,233,,,233,,,,,,,233,,,233',
'233,233,233,233,233,233,,233,233,233,,233,233,,233,233,,,,,,,,,,,,,',
',,,,,,,233,,,233,,,233,,233,,,,,,233,,,,,,,,233,,,,,233,233,233,233',
'233,233,,,,233,233,,,,,,,233,,,233,234,234,234,,234,233,233,,234,234',
',,,234,,234,234,234,234,234,234,234,,,,,,234,234,234,234,234,234,234',
',,234,,,,,,,234,,,234,234,234,234,234,234,234,,234,234,234,,234,234',
',234,234,,,,,,,,,,,,,,,,,,,,,234,,,234,,,234,,234,,,,,,234,,,,,,,,234',
',,,,234,234,234,234,234,234,,,,234,234,,,,,,,234,,,234,235,235,235,',
'235,234,234,,235,235,,,,235,,235,235,235,235,235,235,235,,,,,,235,235',
'235,235,235,235,235,,,235,,,,,,,235,,,235,235,235,235,235,235,235,,235',
'235,235,,235,235,,235,235,,,,,,,,,,,,,,,,,,,,,235,,,235,,,235,,235,',
',,,,235,,,,,,,,235,,,,,235,235,235,235,235,235,,,,235,235,,,,,,,235',
',,235,236,236,236,,236,235,235,,236,236,,,,236,,236,236,236,236,236',
'236,236,,,,,,236,236,236,236,236,236,236,,,236,,,,,,,236,,,236,236,236',
'236,236,236,236,,236,236,236,,236,236,,236,236,,,,,,,,,,,,,,,,,,,,,236',
',,236,,,236,,236,,,,,,236,,,,,,,,236,,,,,236,236,236,236,236,236,,,',
'236,236,,,,,,,236,,,236,237,237,237,,237,236,236,,237,237,,,,237,,237',
'237,237,237,237,237,237,,,,,,237,237,237,237,237,237,237,,,237,,,,,',
',237,,,237,237,237,237,237,237,237,,237,237,237,,237,237,,237,237,,',
',,,,,,,,,,,,,,,,,,237,,,237,,,237,,237,,,,,,237,,,,,,,,237,,,,,237,237',
'237,237,237,237,,,,237,237,,,,,,,237,,,237,238,238,238,,238,237,237',
',238,238,,,,238,,238,238,238,238,238,238,238,,,,,,238,238,238,238,238',
'238,238,,,238,,,,,,,238,,,238,238,238,238,238,238,238,,238,238,238,',
'238,238,,238,238,,,,,,,,,,,,,,,,,,,,,238,,,238,,,238,,238,,,,,,238,',
',,,,,,238,,,,,238,238,238,238,238,238,,,,238,238,,,,,,,238,,,238,239',
'239,239,,239,238,238,,239,239,,,,239,,239,239,239,239,239,239,239,,',
',,,239,239,239,239,239,239,239,,,239,,,,,,,239,,,239,239,239,239,239',
'239,239,,239,239,239,,239,239,,239,239,,,,,,,,,,,,,,,,,,,,,239,,,239',
',,239,,239,,,,,,239,,,,,,,,239,,,,,239,239,239,239,239,239,,,,239,239',
',,,,,,239,,,239,240,240,240,,240,239,239,,240,240,,,,240,,240,240,240',
'240,240,240,240,,,,,,240,240,240,240,240,240,240,,,240,,,,,,,240,,,240',
'240,240,240,240,240,240,,240,240,240,,240,240,,240,240,,,,,,,,,,,,,',
',,,,,,,240,,,240,,,240,,240,,,,,,240,,,,,,,,240,,,,,240,240,240,240',
'240,240,,,,240,240,,,,,,,240,,,240,241,241,241,,241,240,240,,241,241',
',,,241,,241,241,241,241,241,241,241,,,,,,241,241,241,241,241,241,241',
',,241,,,,,,,241,,,241,241,241,241,241,241,241,,241,241,241,,241,241',
',241,241,,,,,,,,,,,,,,,,,,,,,241,,,241,,,241,,241,,,,,,241,,,,,,,,241',
',,,,241,241,241,241,241,241,,,,241,241,,,,,,,241,,,241,242,242,242,',
'242,241,241,,242,242,,,,242,,242,242,242,242,242,242,242,,,,,,242,242',
'242,242,242,242,242,,,242,,,,,,,242,,,242,242,242,242,242,242,242,,242',
'242,242,,242,242,,242,242,,,,,,,,,,,,,,,,,,,,,242,,,242,,,242,,242,',
',,,,242,,,,,,,,242,,,,,242,242,242,242,242,242,,,,242,242,,,,,,,242',
',,242,243,243,243,,243,242,242,,243,243,,,,243,,243,243,243,243,243',
'243,243,,,,,,243,243,243,243,243,243,243,,,243,,,,,,,243,,,243,243,243',
'243,243,243,243,,243,243,243,,243,243,,243,243,,,,,,,,,,,,,,,,,,,,,243',
',,243,,,243,,243,,,,,,243,,,,,,,,243,,,,,243,243,243,243,243,243,,,',
'243,243,,,,,,,243,,,243,244,244,244,,244,243,243,,244,244,,,,244,,244',
'244,244,244,244,244,244,,,,,,244,244,244,244,244,244,244,,,244,,,,,',
',244,,,244,244,244,244,244,244,244,,244,244,244,,244,244,,244,244,,',
',,,,,,,,,,,,,,,,,,244,,,244,,,244,,244,,,,,,244,,,,,,,,244,,,,,244,244',
'244,244,244,244,,,,244,244,,,,,,,244,,,244,254,254,254,,254,244,244',
',254,254,,,,254,,254,254,254,254,254,254,254,,,,,,254,254,254,254,254',
'254,254,,,254,,,,,,,254,,,254,254,254,254,254,254,254,,254,254,254,',
'254,254,,254,254,,,,,,,,,,,,,,,,,,,,,254,,,254,,,254,,254,,,,,,254,',
',,,,,,254,,,,,254,254,254,254,254,254,,,,254,254,,,,,,,254,,,254,256',
'256,256,,256,254,254,,256,256,,,,256,,256,256,256,256,256,256,256,,',
',,,256,256,256,256,256,256,256,,,256,,,,,,,256,,,256,256,256,256,256',
'256,256,,256,256,256,,256,256,,256,256,,,,,,,,,,,,,,,,,,,,,256,,,256',
',,256,,256,,,,,,256,,,,,,,,256,,,,,256,256,256,256,256,256,,,,256,256',
',,,,,,256,,,256,262,262,262,,262,256,256,,262,262,,,,262,,262,262,262',
'262,262,262,262,,,,,,262,262,262,262,262,262,262,,,262,,,,,,,262,,,262',
'262,262,262,262,262,262,,262,262,262,,262,262,,262,262,,,,,,,,,,,,,',
',,,,,,,262,,,262,,,262,,262,,,,,,262,,,,,,,,262,,,,,262,262,262,262',
'262,262,,,,262,262,,,,,,,262,,,262,269,269,269,,269,262,262,,269,269',
',,,269,,269,269,269,269,269,269,269,,,,,,269,269,269,269,269,269,269',
',,269,,,,,,,269,,,269,269,269,269,269,269,269,269,269,269,269,,269,269',
',269,269,,,,,,,,,,,,,,,,,,,,,269,,,269,,,269,,269,,269,,269,,269,,,',
',,,,269,,,,,269,269,269,269,269,269,,,,269,269,,,,,,,269,,,269,270,270',
'270,,270,269,269,,270,270,,,,270,,270,270,270,270,270,270,270,,,,,,270',
'270,270,270,270,270,270,,,270,,,,,,,270,,,270,270,270,270,270,270,270',
'270,270,270,270,,270,270,,270,270,,,,,,,,,,,,,,,,,,,,,270,,,270,,,270',
',270,,270,,270,,270,,,,,,,,270,,,,,270,270,270,270,270,270,,,,270,270',
',,,,,,270,,,270,278,278,278,,278,270,270,,278,278,,,,278,,278,278,278',
'278,278,278,278,,,,,,278,278,278,278,278,278,278,,,278,,,,,,,278,,,278',
'278,278,278,278,278,278,278,278,278,278,,278,278,,278,278,,,,,,,,,,',
',,,,,,,,,,278,,,278,,278,278,,278,,278,,278,,278,,,,,,,,278,,,,,278',
'278,278,278,278,278,,,,278,278,,,,,,,278,,,278,282,282,282,282,282,278',
'278,,282,282,,,,282,,282,282,282,282,282,282,282,,,,,,282,282,282,282',
'282,282,282,,,282,,,,,,282,282,,282,282,282,282,282,282,282,282,,282',
'282,282,,282,282,,282,282,,,,,,,,,,,,,,,,,,,,,282,,,282,,,282,,282,',
'282,,,,282,,,,,,,,282,,,,,282,282,282,282,282,282,,,,282,282,,,,,,,282',
',,282,286,286,286,,286,282,282,,286,286,,,,286,,286,286,286,286,286',
'286,286,,,,,,286,286,286,286,286,286,286,,,286,,,,,,,286,,,286,286,286',
'286,286,286,286,,286,286,286,,286,286,,574,,574,574,574,574,574,,,,',
',,,,574,,,,,,,286,,,286,,,286,,286,,,,,,,,574,,,,,,,574,574,574,574',
'286,286,286,286,286,286,,,,286,286,,,,286,,,286,,,286,287,287,287,287',
'287,286,286,,287,287,,,,287,574,287,287,287,287,287,287,287,,,,,,287',
'287,287,287,287,287,287,,,287,,,,,,287,287,,287,287,287,287,287,287',
'287,287,,287,287,287,,287,287,,287,287,,,,,,,,,,,,,,,,,,,,,287,,,287',
',,287,,287,,287,,,,287,,,,,,,,287,,,,,287,287,287,287,287,287,,,,287',
'287,,,,,,,287,,,287,299,299,299,,299,287,287,,299,299,,,,299,,299,299',
'299,299,299,299,299,,,,,,299,299,299,299,299,299,299,,,299,,,,,,,299',
',,299,299,299,299,299,299,299,,299,299,299,,299,299,,618,,618,618,618',
'618,618,,,,,,,,,618,,,,,,,299,,,299,,,299,,299,,,,,,,,618,618,,,,,,618',
'618,618,618,299,299,299,299,299,299,,,,299,299,,,,,,,299,,,299,308,308',
'308,,308,299,299,,308,308,,,,308,618,308,308,308,308,308,308,308,,,',
',,308,308,308,308,308,308,308,,,308,,,,,,,308,,,308,308,308,308,308',
'308,308,,308,308,308,,308,308,,308,308,,,,,,,,,,,,,,,,,,,,,308,,,308',
'308,,308,,308,,,,,,308,,,,,,,,308,,,,,308,308,308,308,308,308,,,,308',
'308,,,,,,,308,,,308,310,310,310,310,310,308,308,,310,310,,,,310,,310',
'310,310,310,310,310,310,,,,,,310,310,310,310,310,310,310,,,310,,,,,',
'310,310,,310,310,310,310,310,310,310,310,,310,310,310,,310,310,,310',
'310,,,,,,,,,,,,,,,,,,,,,310,,,310,,,310,,310,,310,,,,310,,,,,,,,310',
',,,,310,310,310,310,310,310,,,,310,310,,,,,,,310,,,310,335,335,335,',
'335,310,310,,335,335,,,,335,,335,335,335,335,335,335,335,,,,,,335,335',
'335,335,335,335,335,,,335,,,,,,,335,,,335,335,335,335,335,335,335,,335',
'335,335,,335,335,,670,,670,670,670,670,670,,,,,,,,,670,,,,,,,335,,,335',
',,335,,335,,,,,,,,670,,,,,,,670,670,670,670,335,335,335,335,335,335',
',670,,335,335,,,,,,,335,,,335,358,358,358,,358,335,335,,358,358,,,,358',
'670,358,358,358,358,358,358,358,,,,,,358,358,358,358,358,358,358,,,358',
',,,,,,358,,,358,358,358,358,358,358,358,,358,358,358,,358,358,,358,358',
',,,,,,,,,,,,,,,,,,,,358,,,358,,,358,,358,,,,,,358,,,,,,,,358,,,,,358',
'358,358,358,358,358,,,,358,358,,,,,,,358,,,358,359,359,359,,359,358',
'358,,359,359,,,,359,,359,359,359,359,359,359,359,,,,,,359,359,359,359',
'359,359,359,,,359,,,,,,,359,,,359,359,359,359,359,359,359,,359,359,359',
',359,359,,359,359,,,,,,,,,,,,,,,,,,,,,359,,,359,,,359,,359,,,,,,359',
',,,,,,,359,,,,,359,359,359,359,359,359,,,,359,359,,,,,,,359,,,359,378',
'378,378,,378,359,359,,378,378,,,,378,,378,378,378,378,378,378,378,,',
',,,378,378,378,378,378,378,378,,,378,,,,,,,378,,,378,378,378,378,378',
'378,378,,378,378,378,,378,378,,775,,775,775,775,775,775,,,,,,,,,775',
',,,,,,378,,,378,,,378,,378,,,,,,,,775,,,,,,,775,775,775,775,378,378',
'378,378,378,378,,,,378,378,,,,,,,378,,,378,390,390,390,,390,378,378',
',390,390,,,,390,775,390,390,390,390,390,390,390,,,,,,390,390,390,390',
'390,390,390,,,390,,,,,,,390,,,390,390,390,390,390,390,390,,390,390,390',
',390,390,,390,390,,,,,,,,,,,,,,,,,,,,,390,,,390,,,390,,390,,,,,,390',
',,,,,,,390,,,,,390,390,390,390,390,390,,,,390,390,,,,,,,390,,,390,430',
'430,430,,430,390,390,,430,430,,,,430,,430,430,430,430,430,430,430,,',
',,,430,430,430,430,430,430,430,,,430,,,,,,,430,,,430,430,430,430,430',
'430,430,,430,430,430,,430,430,,430,430,,,,,,,,,,,,,,,,,,,,,430,,,430',
',,430,,430,,,,,,430,,,,,,,,430,,,,,430,430,430,430,430,430,,,,430,430',
',,,,,,430,,,430,441,441,441,,441,430,430,,441,441,,,,441,,441,441,441',
'441,441,441,441,,,,,,441,441,441,441,441,441,441,,,441,,,,,,,441,,,441',
'441,441,441,441,441,441,441,441,441,441,,441,441,,441,441,,,,,,,,,,',
',,,,,,,,,,441,,,441,441,,441,,441,,441,,441,,441,,,,,,,,441,,,,,441',
'441,441,441,441,441,,,,441,441,,,,,,,441,,,441,449,449,449,,449,441',
'441,,449,449,,,,449,,449,449,449,449,449,449,449,,,,,,449,449,449,449',
'449,449,449,,,449,,,,,,,449,,,449,449,449,449,449,449,449,449,449,449',
'449,,449,449,,449,449,,,,,,,,,,,,,,,,,,,,,449,,,449,449,,449,,449,,449',
',449,,449,,,,,,,,449,,,,,449,449,449,449,449,449,,,,449,449,,,,,,,449',
',,449,450,450,450,,450,449,449,,450,450,,,,450,,450,450,450,450,450',
'450,450,,,,,,450,450,450,450,450,450,450,,,450,,,,,,,450,,,450,450,450',
'450,450,450,450,450,450,450,450,,450,450,,450,450,,,,,,,,,,,,,,,,,,',
',,450,,,450,450,,450,,450,,450,,450,,450,,,,,,,,450,,,,,450,450,450',
'450,450,450,,,,450,450,,,,,,,450,,,450,451,451,451,,451,450,450,,451',
'451,,,,451,,451,451,451,451,451,451,451,,,,,,451,451,451,451,451,451',
'451,,,451,,,,,,,451,,,451,451,451,451,451,451,451,451,451,451,451,,451',
'451,,451,451,,,,,,,,,,,,,,,,,,,,,451,,,451,451,,451,,451,,451,,451,',
'451,,,,,,,,451,,,,,451,451,451,451,451,451,,,,451,451,,,,,,,451,,,451',
'460,460,460,,460,451,451,,460,460,,,,460,,460,460,460,460,460,460,460',
',,,,,460,460,460,460,460,460,460,,,460,,,,,,,460,,,460,460,460,460,460',
'460,460,460,460,460,460,,460,460,,460,460,,,,,,,,,,,,,,,,,,,,,460,,',
'460,,,460,,460,,460,,,,460,,,,,,,,460,,,,,460,460,460,460,460,460,,',
',460,460,,,,,,,460,,,460,461,461,461,,461,460,460,,461,461,,,,461,,461',
'461,461,461,461,461,461,,,,,,461,461,461,461,461,461,461,,,461,,,,,',
',461,,,461,461,461,461,461,461,461,461,461,461,461,,461,461,,461,461',
',,,,,,,,,,,,,,,,,,,,461,,,461,,,461,,461,,461,,,,461,,,,,,,,461,,,,',
'461,461,461,461,461,461,,,,461,461,,,,,,,461,,,461,463,463,463,,463',
'461,461,,463,463,,,,463,,463,463,463,463,463,463,463,,,,,,463,463,463',
'463,463,463,463,,,463,,,,,,,463,,,463,463,463,463,463,463,463,,463,463',
'463,,463,463,,463,463,,,,,,,,,,,,,,,,,,,,,463,,,463,,,463,,463,,,,,',
'463,,,,,,,,463,,,,,463,463,463,463,463,463,,,,463,463,,,,,,,463,,,463',
'464,464,464,,464,463,463,,464,464,,,,464,,464,464,464,464,464,464,464',
',,,,,464,464,464,464,464,464,464,,,464,,,,,,,464,,,464,464,464,464,464',
'464,464,,464,464,464,,464,464,,464,464,,,,,,,,,,,,,,,,,,,,,464,,,464',
',,464,,464,,,,,,464,,,,,,,,464,,,,,464,464,464,464,464,464,,,,464,464',
',,,,,,464,,,464,465,465,465,,465,464,464,,465,465,,,,465,,465,465,465',
'465,465,465,465,,,,,,465,465,465,465,465,465,465,,,465,,,,,,,465,,,465',
'465,465,465,465,465,465,,465,465,465,,465,465,,465,465,,,,,,,,,,,,,',
',,,,,,,465,,,465,,,465,,465,,,,,,465,,,,,,,,465,,,,,465,465,465,465',
'465,465,,,,465,465,,,,,,,465,,,465,493,493,493,,493,465,465,,493,493',
',,,493,,493,493,493,493,493,493,493,,,,,,493,493,493,493,493,493,493',
',,493,,,,,,,493,,,493,493,493,493,493,493,493,,493,493,493,,493,493',
',493,493,,,,,,,,,,,,,,,,,,,,,493,,,493,,,493,,493,,,,,,493,,,,,,,,493',
',,,,493,493,493,493,493,493,,,,493,493,,,,,,,493,,,493,496,496,496,',
'496,493,493,,496,496,,,,496,,496,496,496,496,496,496,496,,,,,,496,496',
'496,496,496,496,496,,,496,,,,,,,496,,,496,496,496,496,496,496,496,496',
'496,496,496,,496,496,,496,496,,,,,,,,,,,,,,,,,,,,,496,,,496,,,496,,496',
',496,,496,,496,,,,,,,,496,,,,,496,496,496,496,496,496,,,,496,496,,,',
',,,496,,,496,498,498,498,,498,496,496,,498,498,,,,498,,498,498,498,498',
'498,498,498,,,,,,498,498,498,498,498,498,498,,,498,,,,,,,498,,,498,498',
'498,498,498,498,498,498,498,498,498,,498,498,,498,498,,,,,,,,,,,,,,',
',,,,,,498,,,498,,,498,,498,,,,498,,498,,,,,,,,498,,,,,498,498,498,498',
'498,498,,,,498,498,,,,,,,498,,,498,500,500,500,,500,498,498,,500,500',
',,,500,,500,500,500,500,500,500,500,,,,,,500,500,500,500,500,500,500',
',,500,,,,,,,500,,,500,500,500,500,500,500,500,,500,500,500,,500,500',
',500,500,,,,,,,,,,,,,,,,,,,,,500,,,500,,,500,,500,,,,,,500,,,,,,,,500',
',,,,500,500,500,500,500,500,,,,500,500,,,,,,,500,,,500,516,516,516,',
'516,500,500,,516,516,,,,516,,516,516,516,516,516,516,516,,,,,,516,516',
'516,516,516,516,516,,,516,,,,,,,516,,,516,516,516,516,516,516,516,,516',
'516,516,,516,516,,516,516,,,,,,,,,,,,,,,,,,,,,516,,,516,,516,516,,516',
',,,516,,516,,,,,,,,516,,,,,516,516,516,516,516,516,,,,516,516,,,,,,',
'516,,,516,522,522,522,522,522,516,516,,522,522,,,,522,,522,522,522,522',
'522,522,522,,,,,,522,522,522,522,522,522,522,,,522,,,,,,522,522,,522',
'522,522,522,522,522,522,522,,522,522,522,,522,522,,522,522,,,,,,,,,',
',,,,,,,,,,,522,,,522,,,522,,522,,522,,,,522,,,,,,,,522,,,,,522,522,522',
'522,522,522,,,,522,522,,,,,,522,522,,,522,528,528,528,,528,522,522,',
'528,528,,,,528,,528,528,528,528,528,528,528,,,,,,528,528,528,528,528',
'528,528,,,528,,,,,,,528,,,528,528,528,528,528,528,528,,528,528,528,',
'528,528,,850,,850,850,850,850,850,,,,,,,,,850,,,,,,,528,,,528,,,528',
',528,,,,,,,,850,,,,,,,850,850,850,850,528,528,528,528,528,528,,,,528',
'528,,,,,,,528,,,528,530,530,530,,530,528,528,,530,530,,,,530,850,530',
'530,530,530,530,530,530,,,,,,530,530,530,530,530,530,530,,,530,,,,,',
',530,,,530,530,530,530,530,530,530,530,530,530,530,,530,530,,530,530',
',,,,,,,,,,,,,,,,,,,,530,,,530,,,530,,530,,530,,,,530,,,,,,,,530,,,,',
'530,530,530,530,530,530,,,,530,530,,,,,,,530,,,530,533,533,533,,533',
'530,530,,533,533,,,,533,,533,533,533,533,533,533,533,,,,,,533,533,533',
'533,533,533,533,,,533,,,,,,,533,,,533,533,533,533,533,533,533,533,533',
'533,533,,533,533,,533,533,,,,,,,,,,,,,,,,,,,,,533,,,533,,,533,,533,',
'533,,,,533,,,,,,,,533,,,,,533,533,533,533,533,533,,,,533,533,,,,,,,533',
',,533,539,539,539,,539,533,533,,539,539,,,,539,,539,539,539,539,539',
'539,539,,,,,,539,539,539,539,539,539,539,,,539,,,,,,,539,,,539,539,539',
'539,539,539,539,,539,539,539,,539,539,,883,,883,883,883,883,883,,,,',
',,,,883,,,,,,,539,,,539,,,539,,539,,,,,,,,883,,,,,,,883,883,883,883',
'539,539,539,539,539,539,,,,539,539,,,,,,,539,,,539,542,542,542,,542',
'539,539,,542,542,,,,542,883,542,542,542,542,542,542,542,,,,,,542,542',
'542,542,542,542,542,,,542,,,,,,,542,,,542,542,542,542,542,542,542,,542',
'542,542,,542,542,,542,542,,,,,,,,,,,,,,,,,,,,,542,,,542,,,542,,542,',
',,,,542,,,,,,,,542,,,,,542,542,542,542,542,542,,,,542,542,,,,,,,542',
',,542,543,543,543,,543,542,542,,543,543,,,,543,,543,543,543,543,543',
'543,543,,,,,,543,543,543,543,543,543,543,,,543,,,,,,,543,,,543,543,543',
'543,543,543,543,,543,543,543,,543,543,,543,543,,,,,,,,,,,,,,,,,,,,,543',
',,543,,,543,,543,,,,,,543,,,,,,,,543,,,,,543,543,543,543,543,543,,,',
'543,543,,,,,,,543,,,543,544,544,544,,544,543,543,,544,544,,,,544,,544',
'544,544,544,544,544,544,,,,,,544,544,544,544,544,544,544,,,544,,,,,',
',544,,,544,544,544,544,544,544,544,,544,544,544,,544,544,,544,544,,',
',,,,,,,,,,,,,,,,,,544,,,544,,,544,,544,,,,,,544,,,,,,,,544,,,,,544,544',
'544,544,544,544,,,,544,544,,,,,,,544,,,544,548,548,548,,548,544,544',
',548,548,,,,548,,548,548,548,548,548,548,548,,,,,,548,548,548,548,548',
'548,548,,,548,,,,,,,548,,,548,548,548,548,548,548,548,,548,548,548,',
'548,548,,548,548,,,,,,,,,,,,,,,,,,,,,548,,,548,,,548,,548,,,,,,548,',
',,,,,,548,,,,,548,548,548,548,548,548,,,,548,548,,,,,,,548,,,548,554',
'554,554,,554,548,548,,554,554,,,,554,,554,554,554,554,554,554,554,,',
',,,554,554,554,554,554,554,554,,,554,,,,,,,554,,,554,554,554,554,554',
'554,554,554,554,554,554,,554,554,,554,554,,,,,,,,,,,,,,,,,,,,,554,,',
'554,,,554,,554,,554,,554,,554,,,,,,,,554,,,,,554,554,554,554,554,554',
',,,554,554,,,,,,,554,,,554,557,557,557,,557,554,554,,557,557,,,,557',
',557,557,557,557,557,557,557,,,,,,557,557,557,557,557,557,557,,,557',
',,,,,,557,,,557,557,557,557,557,557,557,557,557,557,557,,557,557,,557',
'557,,,,,,,,,,,,,,,,,,,,,557,,,557,,,557,,557,,,,,,557,,,,,,,,557,,,',
',557,557,557,557,557,557,,,,557,557,,,,,,,557,,,557,562,562,562,562',
'562,557,557,,562,562,,,,562,,562,562,562,562,562,562,562,,,,,,562,562',
'562,562,562,562,562,,,562,,,,,,562,562,,562,562,562,562,562,562,562',
'562,,562,562,562,,562,562,,562,562,,,,,,,,,,,,,,,,,,,,,562,,,562,,,562',
',562,,562,,,,562,,,,,,,,562,,,,,562,562,562,562,562,562,,,,562,562,',
',,,,,562,,,562,563,563,563,563,563,562,562,,563,563,,,,563,,563,563',
'563,563,563,563,563,,,,,,563,563,563,563,563,563,563,,,563,,,,,,563',
'563,,563,563,563,563,563,563,563,563,,563,563,563,,563,563,,563,563',
',,,,,,,,,,,,,,,,,,,,563,,,563,,,563,,563,,563,,,,563,,,,,,,,563,,,,',
'563,563,563,563,563,563,,,,563,563,,,,,,,563,,,563,569,569,569,,569',
'563,563,,569,569,,,,569,,569,569,569,569,569,569,569,,,,,,569,569,569',
'569,569,569,569,,,569,,,,,,,569,,,569,569,569,569,569,569,569,,569,569',
'569,,569,569,,947,,947,947,947,947,947,,,,,,,,,947,,,,,,,569,,,569,',
',569,,569,,,,,,,,947,947,,,,,,947,947,947,947,569,569,569,569,569,569',
',,,569,569,,,,,,,569,,,569,590,590,590,590,590,569,569,,590,590,,,,590',
'947,590,590,590,590,590,590,590,,,,,,590,590,590,590,590,590,590,,,590',
',,,,,590,590,,590,590,590,590,590,590,590,590,,590,590,590,,590,590',
',590,590,,,,,,,,,,,,,,,,,,,,,590,,,590,,,590,,590,,590,,,,590,,,,,,',
',590,,,,,590,590,590,590,590,590,,,,590,590,,,,,,,590,,,590,594,594',
'594,594,594,590,590,,594,594,,,,594,,594,594,594,594,594,594,594,,,',
',,594,594,594,594,594,594,594,,,594,,,,,,594,594,,594,594,594,594,594',
'594,594,594,,594,594,594,,594,594,,594,594,,,,,,,,,,,,,,,,,,,,,594,',
',594,,,594,,594,,594,,,,594,,,,,,,,594,,,,,594,594,594,594,594,594,',
',,594,594,,,,,,,594,,,594,599,599,599,599,599,594,594,,599,599,,,,599',
',599,599,599,599,599,599,599,,,,,,599,599,599,599,599,599,599,,,599',
',,,,,599,599,,599,599,599,599,599,599,599,599,,599,599,599,,599,599',
',599,599,,,,,,,,,,,,,,,,,,,,,599,,,599,,,599,,599,,599,,,,599,,,,,,',
',599,,,,,599,599,599,599,599,599,,,,599,599,,,,,,,599,,,599,601,601',
'601,,601,599,599,,601,601,,,,601,,601,601,601,601,601,601,601,,,,,,601',
'601,601,601,601,601,601,,,601,,,,,,,601,,,601,601,601,601,601,601,601',
'601,601,601,601,,601,601,,601,601,,,,,,,,,,,,,,,,,,,,,601,,,601,,,601',
',601,,601,,,,601,,,,,,,,601,,,,,601,601,601,601,601,601,,,,601,601,',
',,,,,601,,,601,604,604,604,,604,601,601,,604,604,,,,604,,604,604,604',
'604,604,604,604,,,,,,604,604,604,604,604,604,604,,,604,,,,,,,604,,,604',
'604,604,604,604,604,604,604,604,604,604,,604,604,,604,604,,,,,,,,,,',
',,,,,,,,,,604,,,604,,,604,,604,,604,,,,604,,,,,,,,604,,,,,604,604,604',
'604,604,604,,,,604,604,,,,,,,604,,,604,610,610,610,,610,604,604,,610',
'610,,,,610,,610,610,610,610,610,610,610,,,,,,610,610,610,610,610,610',
'610,,,610,,,,,,,610,,,610,610,610,610,610,610,610,610,610,610,610,,610',
'610,,610,610,,,,,,,,,,,,,,,,,,,,,610,,,610,,,610,,610,,610,,,,610,,',
',,,,,610,,,,,610,610,610,610,610,610,,,,610,610,,,,,,,610,,,610,614',
'614,614,,614,610,610,,614,614,,,,614,,614,614,614,614,614,614,614,,',
',,,614,614,614,614,614,614,614,,,614,,,,,,,614,,,614,614,614,614,614',
'614,614,,614,614,614,,614,614,,614,614,,,,,,,,,,,,,,,,,,,,,614,,,614',
',,614,,614,,,,,,614,,,,,,,,614,,,,,614,614,614,614,614,614,,,,614,614',
',,,,,,614,,,614,616,616,616,,616,614,614,,616,616,,,,616,,616,616,616',
'616,616,616,616,,,,,,616,616,616,616,616,616,616,,,616,,,,,,,616,,,616',
'616,616,616,616,616,616,,616,616,616,,616,616,,616,616,,,,,,,,,,,,,',
',,,,,,,616,,,616,,,616,,616,,,,,,616,,,,,,,,616,,,,,616,616,616,616',
'616,616,,,,616,616,,,,,,,616,,,616,643,643,643,,643,616,616,,643,643',
',,,643,,643,643,643,643,643,643,643,,,,,,643,643,643,643,643,643,643',
',,643,,,,,,,643,,,643,643,643,643,643,643,643,,643,643,643,,643,643',
',643,643,,,,,,,,,,,,,,,,,,,,,643,,,643,,,643,,643,,,,,,643,,,,,,,,643',
',,,,643,643,643,643,643,643,,,,643,643,,,,,,,643,,,643,645,645,645,',
'645,643,643,,645,645,,,,645,,645,645,645,645,645,645,645,,,,,,645,645',
'645,645,645,645,645,,,645,,,,,,,645,,,645,645,645,645,645,645,645,,645',
'645,645,,645,645,,645,645,,,,,,,,,,,,,,,,,,,,,645,,,645,,,645,,645,',
'645,,,,645,,,,,,,,645,,,,,645,645,645,645,645,645,,,,645,645,,,,,,,645',
',,645,648,648,648,,648,645,645,,648,648,,,,648,,648,648,648,648,648',
'648,648,,,,,,648,648,648,648,648,648,648,,,648,,,,,,,648,,,648,648,648',
'648,648,648,648,,648,648,648,,648,648,,648,648,,,,,,,,,,,,,,,,,,,,,648',
',,648,,,648,,648,,,,,,648,,,,,,,,648,,,,,648,648,648,648,648,648,,,',
'648,648,,,,,,,648,,,648,649,649,649,,649,648,648,,649,649,,,,649,,649',
'649,649,649,649,649,649,,,,,,649,649,649,649,649,649,649,,,649,,,,,',
',649,,,649,649,649,649,649,649,649,,649,649,649,,649,649,,649,649,,',
',,,,,,,,,,,,,,,,,,649,,,649,,,649,,649,,,,,,649,,,,,,,,649,,,,,649,649',
'649,649,649,649,,,,649,649,,,,,,,649,,,649,654,654,654,,654,649,649',
',654,654,,,,654,,654,654,654,654,654,654,654,,,,,,654,654,654,654,654',
'654,654,,,654,,,,,,,654,,,654,654,654,654,654,654,654,,654,654,654,',
'654,654,,654,654,,,,,,,,,,,,,,,,,,,,,654,,,654,,,654,,654,,,,,,654,',
',,,,,,654,,,,,654,654,654,654,654,654,,,,654,654,,,,,,,654,,,654,657',
'657,657,,657,654,654,,657,657,,,,657,,657,657,657,657,657,657,657,,',
',,,657,657,657,657,657,657,657,,,657,,,,,,,657,,,657,657,657,657,657',
'657,657,,657,657,657,,657,657,,657,657,,,,,,,,,,,,,,,,,,,,,657,,,657',
',,657,,657,,,,,,657,,,,,,,,657,,,,,657,657,657,657,657,657,,,,657,657',
',,,,,,657,,,657,672,672,672,672,672,657,657,,672,672,,,,672,,672,672',
'672,672,672,672,672,,,,,,672,672,672,672,672,672,672,,,672,,,,,,672',
'672,,672,672,672,672,672,672,672,672,,672,672,672,,672,672,,672,672',
',,,,,,,,,,,,,,,,,,,,672,,,672,,,672,,672,,672,,,,672,,,,,,,,672,,,,',
'672,672,672,672,672,672,,,,672,672,,,,,,,672,,,672,676,676,676,,676',
'672,672,,676,676,,,,676,,676,676,676,676,676,676,676,,,,,,676,676,676',
'676,676,676,676,,,676,,,,,,,676,,,676,676,676,676,676,676,676,,676,676',
'676,,676,676,,676,676,,,,,,,,,,,,,,,,,,,,,676,,,676,,,676,,676,,,,,',
'676,,,,,,,,676,,,,,676,676,676,676,676,676,,,,676,676,,,,,,,676,,,676',
'679,679,679,,679,676,676,,679,679,,,,679,,679,679,679,679,679,679,679',
',,,,,679,679,679,679,679,679,679,,,679,,,,,,,679,,,679,679,679,679,679',
'679,679,,679,679,679,,679,679,,679,679,,,,,,,,,,,,,,,,,,,,,679,,,679',
',,679,,679,,,,,,679,,,,,,,,679,,,,,679,679,679,679,679,679,,,,679,679',
',,,,,,679,,,679,686,686,686,686,686,679,679,,686,686,,,,686,,686,686',
'686,686,686,686,686,,,,,,686,686,686,686,686,686,686,,,686,,,,,,686',
'686,,686,686,686,686,686,686,686,686,,686,686,686,,686,686,,686,686',
',,,,,,,,,,,,,,,,,,,,686,,,686,,,686,,686,,686,,,,686,,,,,,,,686,,,,',
'686,686,686,686,686,686,,,,686,686,,,,,,,686,,,686,689,689,689,,689',
'686,686,,689,689,,,,689,,689,689,689,689,689,689,689,,,,,,689,689,689',
'689,689,689,689,,,689,,,,,,,689,,,689,689,689,689,689,689,689,689,689',
'689,689,,689,689,,689,689,,,,,,,,,,,,,,,,,,,,,689,,,689,,,689,,689,',
'689,,689,,689,,,,,,,,689,,,,,689,689,689,689,689,689,,,,689,689,,,,',
',,689,,,689,690,690,690,,690,689,689,,690,690,,,,690,,690,690,690,690',
'690,690,690,,,,,,690,690,690,690,690,690,690,,,690,,,,,,,690,,,690,690',
'690,690,690,690,690,690,690,690,690,,690,690,,690,690,,,,,,,,,,,,,,',
',,,,,,690,,,690,,,690,,690,,,,690,,690,,,,,,,,690,,,,,690,690,690,690',
'690,690,,,,690,690,,,,,,,690,,,690,696,696,696,696,696,690,690,,696',
'696,,,,696,,696,696,696,696,696,696,696,,,,,,696,696,696,696,696,696',
'696,,,696,,,,,,696,696,,696,696,696,696,696,696,696,696,,696,696,696',
',696,696,,696,696,,,,,,,,,,,,,,,,,,,,,696,,,696,,,696,,696,,696,,,,696',
',,,,,,,696,,,,,696,696,696,696,696,696,,,,696,696,,,,,,,696,,,696,697',
'697,697,697,697,696,696,,697,697,,,,697,,697,697,697,697,697,697,697',
',,,,,697,697,697,697,697,697,697,,,697,,,,,,697,697,,697,697,697,697',
'697,697,697,697,,697,697,697,,697,697,,697,697,,,,,,,,,,,,,,,,,,,,,697',
',,697,,,697,,697,,697,,,,697,,,,,,,,697,,,,,697,697,697,697,697,697',
',,,697,697,,,,,,,697,,,697,701,701,701,,701,697,697,,701,701,,,,701',
',701,701,701,701,701,701,701,,,,,,701,701,701,701,701,701,701,,,701',
',,,,,,701,,,701,701,701,701,701,701,701,,701,701,701,,701,701,,,,,,',
',,,,,,,,,,,,,,,,,701,,,701,,,701,,701,,,,,,,,,,,,,,,,,,,701,701,701',
'701,701,701,,,,701,701,,,,,,,701,,,701,714,714,714,,714,701,701,,714',
'714,,,,714,,714,714,714,714,714,714,714,,,,,,714,714,714,714,714,714',
'714,,,714,,,,,,,714,,,714,714,714,714,714,714,714,,714,714,714,,714',
'714,,,,,,,,,,,,,,,,,,,,,,,,714,,,714,,,714,,714,,,,,,,,,,,,,,,,,,,714',
'714,714,714,714,714,,,,714,714,,,,,,,714,,,714,720,720,720,,720,714',
'714,,720,720,,,,720,,720,720,720,720,720,720,720,,,,,,720,720,720,720',
'720,720,720,,,720,,,,,,,720,,,720,720,720,720,720,720,720,,720,720,720',
',720,720,,720,720,,,,,,,,,,,,,,,,,,,,,720,,,720,,,720,,720,,720,,,,720',
',,,,,,,720,,,,,720,720,720,720,720,720,,,,720,720,,,,,,,720,,,720,757',
'757,757,,757,720,720,,757,757,,,,757,,757,757,757,757,757,757,757,,',
',,,757,757,757,757,757,757,757,,,757,,,,,,,757,,,757,757,757,757,757',
'757,757,,757,757,757,,757,757,,757,757,,,,,,,,,,,,,,,,,,,,,757,,,757',
',,757,,757,,757,,,,757,,,,,,,,757,,,,,757,757,757,757,757,757,,,,757',
'757,,,,,,,757,,,757,764,764,764,,764,757,757,,764,764,,,,764,,764,764',
'764,764,764,764,764,,,,,,764,764,764,764,764,764,764,,,764,,,,,,,764',
',,764,764,764,764,764,764,764,,764,764,764,,764,764,,764,764,,,,,,,',
',,,,,,,,,,,,,764,,,764,,,764,,764,,,,,,764,,,,,,,,764,,,,,764,764,764',
'764,764,764,,,,764,764,,,,,,,764,,,764,769,769,769,769,769,764,764,',
'769,769,,,,769,,769,769,769,769,769,769,769,,,,,,769,769,769,769,769',
'769,769,,,769,,,,,,769,769,,769,769,769,769,769,769,769,769,,769,769',
'769,,769,769,,769,769,,,,,,,,,,,,,,,,,,,,,769,,,769,,,769,,769,,769',
',,,769,,,,,,,,769,,,,,769,769,769,769,769,769,,,,769,769,,,,,,,769,',
',769,773,773,773,773,773,769,769,,773,773,,,,773,,773,773,773,773,773',
'773,773,,,,,,773,773,773,773,773,773,773,,,773,,,,,,773,773,,773,773',
'773,773,773,773,773,773,,773,773,773,,773,773,,773,773,,,,,,,,,,,,,',
',,,,,,,773,,,773,,,773,,773,,773,,,,773,,,,,,,,773,,,,,773,773,773,773',
'773,773,,,,773,773,,,,,,,773,,,773,774,774,774,774,774,773,773,,774',
'774,,,,774,,774,774,774,774,774,774,774,,,,,,774,774,774,774,774,774',
'774,,,774,,,,,,774,774,,774,774,774,774,774,774,774,774,,774,774,774',
',774,774,,774,774,,,,,,,,,,,,,,,,,,,,,774,,,774,,,774,,774,,774,,,,774',
',,,,,,,774,,,,,774,774,774,774,774,774,,,,774,774,,,,,,,774,,,774,777',
'777,777,,777,774,774,,777,777,,,,777,,777,777,777,777,777,777,777,,',
',,,777,777,777,777,777,777,777,,,777,,,,,,,777,,,777,777,777,777,777',
'777,777,,777,777,777,,777,777,,777,777,,,,,,,,,,,,,,,,,,,,,777,,,777',
',,777,,777,,,,,,777,,,,,,,,777,,,,,777,777,777,777,777,777,,,,777,777',
',,,,,,777,,,777,791,791,791,791,791,777,777,,791,791,,,,791,,791,791',
'791,791,791,791,791,,,,,,791,791,791,791,791,791,791,,,791,,,,,,791',
'791,,791,791,791,791,791,791,791,791,,791,791,791,,791,791,,791,791',
',,,,,,,,,,,,,,,,,,,,791,,,791,,,791,,791,,791,,,,791,,,,,,,,791,,,,',
'791,791,791,791,791,791,,,,791,791,,,,,,,791,,,791,797,797,797,,797',
'791,791,,797,797,,,,797,,797,797,797,797,797,797,797,,,,,,797,797,797',
'797,797,797,797,,,797,,,,,,,797,,,797,797,797,797,797,797,797,,797,797',
'797,,797,797,,797,797,,,,,,,,,,,,,,,,,,,,,797,,,797,,,797,,797,,,,,',
'797,,,,,,,,797,,,,,797,797,797,797,797,797,,,,797,797,,,,,,,797,,,797',
'798,798,798,,798,797,797,,798,798,,,,798,,798,798,798,798,798,798,798',
',,,,,798,798,798,798,798,798,798,,,798,,,,,,,798,,,798,798,798,798,798',
'798,798,,798,798,798,,798,798,,798,798,,,,,,,,,,,,,,,,,,,,,798,,,798',
',,798,,798,,,,,,798,,,,,,,,798,,,,,798,798,798,798,798,798,,,,798,798',
',,,,,,798,,,798,799,799,799,,799,798,798,,799,799,,,,799,,799,799,799',
'799,799,799,799,,,,,,799,799,799,799,799,799,799,,,799,,,,,,,799,,,799',
'799,799,799,799,799,799,,799,799,799,,799,799,,799,799,,,,,,,,,,,,,',
',,,,,,,799,,,799,,,799,,799,,,,,,799,,,,,,,,799,,,,,799,799,799,799',
'799,799,,,,799,799,,,,,,,799,,,799,810,810,810,,810,799,799,,810,810',
',,,810,,810,810,810,810,810,810,810,,,,,,810,810,810,810,810,810,810',
',,810,,,,,,,810,,,810,810,810,810,810,810,810,,810,810,810,,810,810',
',810,810,,,,,,,,,,,,,,,,,,,,,810,,,810,,,810,,810,,,,,,810,,,,,,,,810',
',,,,810,810,810,810,810,810,,,,810,810,,,,,,,810,,,810,811,811,811,',
'811,810,810,,811,811,,,,811,,811,811,811,811,811,811,811,,,,,,811,811',
'811,811,811,811,811,,,811,,,,,,,811,,,811,811,811,811,811,811,811,,811',
'811,811,,811,811,,811,811,,,,,,,,,,,,,,,,,,,,,811,,,811,,,811,,811,',
',,,,811,,,,,,,,811,,,,,811,811,811,811,811,811,,,,811,811,,,,,,,811',
',,811,812,812,812,,812,811,811,,812,812,,,,812,,812,812,812,812,812',
'812,812,,,,,,812,812,812,812,812,812,812,,,812,,,,,,,812,,,812,812,812',
'812,812,812,812,,812,812,812,,812,812,,812,812,,,,,,,,,,,,,,,,,,,,,812',
',,812,,,812,,812,,,,,,812,,,,,,,,812,,,,,812,812,812,812,812,812,,,',
'812,812,,,,,,,812,,,812,825,825,825,,825,812,812,,825,825,,,,825,,825',
'825,825,825,825,825,825,,,,,,825,825,825,825,825,825,825,,,825,,,,,',
',825,,,825,825,825,825,825,825,825,,825,825,825,,825,825,,825,825,,',
',,,,,,,,,,,,,,,,,,825,,,825,,,825,,825,,825,,,,825,,,,,,,,825,,,,,825',
'825,825,825,825,825,,,,825,825,,,,,,,825,,,825,836,836,836,836,836,825',
'825,,836,836,,,,836,,836,836,836,836,836,836,836,,,,,,836,836,836,836',
'836,836,836,,,836,,,,,,836,836,,836,836,836,836,836,836,836,836,,836',
'836,836,,836,836,,836,836,,,,,,,,,,,,,,,,,,,,,836,,,836,,,836,,836,',
'836,,,,836,,,,,,,,836,,,,,836,836,836,836,836,836,,,,836,836,,,,,,,836',
',,836,861,861,861,,861,836,836,,861,861,,,,861,,861,861,861,861,861',
'861,861,,,,,,861,861,861,861,861,861,861,,,861,,,,,,,861,,,861,861,861',
'861,861,861,861,,861,861,861,,861,861,,861,861,,,,,,,,,,,,,,,,,,,,,861',
',,861,,,861,,861,,,,,,861,,,,,,,,861,,,,,861,861,861,861,861,861,,,',
'861,861,,,,,,,861,,,861,863,863,863,863,863,861,861,,863,863,,,,863',
',863,863,863,863,863,863,863,,,,,,863,863,863,863,863,863,863,,,863',
',,,,,863,863,,863,863,863,863,863,863,863,863,,863,863,863,,863,863',
',863,863,,,,,,,,,,,,,,,,,,,,,863,,,863,,,863,,863,,863,,,,863,,,,,,',
',863,,,,,863,863,863,863,863,863,,,,863,863,,,,,,,863,,,863,864,864',
'864,864,864,863,863,,864,864,,,,864,,864,864,864,864,864,864,864,,,',
',,864,864,864,864,864,864,864,,,864,,,,,,864,864,,864,864,864,864,864',
'864,864,864,,864,864,864,,864,864,,864,864,,,,,,,,,,,,,,,,,,,,,864,',
',864,,,864,,864,,864,,,,864,,,,,,,,864,,,,,864,864,864,864,864,864,',
',,864,864,,,,,,,864,,,864,889,889,889,,889,864,864,,889,889,,,,889,',
'889,889,889,889,889,889,889,,,,,,889,889,889,889,889,889,889,,,889,',
',,,,,889,,,889,889,889,889,889,889,889,,889,889,889,,889,889,,889,889',
',,,,,,,,,,,,,,,,,,,,889,,,889,,,889,,889,,,,,,889,,,,,,,,889,,,,,889',
'889,889,889,889,889,,,,889,889,,,,,,,889,,,889,903,903,903,,903,889',
'889,,903,903,,,,903,,903,903,903,903,903,903,903,,,,,,903,903,903,903',
'903,903,903,,,903,,,,,,,903,,,903,903,903,903,903,903,903,,903,903,903',
',903,903,,903,903,,,,,,,,,,,,,,,,,,,,,903,,,903,,,903,,903,,,,,,903',
',,,,,,,903,,,,,903,903,903,903,903,903,,,,903,903,,,,,,,903,,,903,904',
'904,904,,904,903,903,,904,904,,,,904,,904,904,904,904,904,904,904,,',
',,,904,904,904,904,904,904,904,,,904,,,,,,,904,,,904,904,904,904,904',
'904,904,,904,904,904,,904,904,,904,904,,,,,,,,,,,,,,,,,,,,,904,,,904',
',,904,,904,,,,,,904,,,,,,,,904,,,,,904,904,904,904,904,904,,,,904,904',
',,,,,,904,,,904,905,905,905,,905,904,904,,905,905,,,,905,,905,905,905',
'905,905,905,905,,,,,,905,905,905,905,905,905,905,,,905,,,,,,,905,,,905',
'905,905,905,905,905,905,,905,905,905,,905,905,,905,905,,,,,,,,,,,,,',
',,,,,,,905,,,905,,,905,,905,,,,,,905,,,,,,,,905,,,,,905,905,905,905',
'905,905,,,,905,905,,,,,,,905,,,905,909,909,909,,909,905,905,,909,909',
',,,909,,909,909,909,909,909,909,909,,,,,,909,909,909,909,909,909,909',
',,909,,,,,,,909,,,909,909,909,909,909,909,909,909,909,909,909,,909,909',
',909,909,,,,,,,,,,,,,,,,,,,,,909,,,909,,,909,,909,,,,909,,909,,,,,,',
',909,,,,,909,909,909,909,909,909,,,,909,909,,,,,,,909,,,909,914,914',
'914,914,914,909,909,,914,914,,,,914,,914,914,914,914,914,914,914,,,',
',,914,914,914,914,914,914,914,,,914,,,,,,914,914,,914,914,914,914,914',
'914,914,914,,914,914,914,,914,914,,914,914,,,,,,,,,,,,,,,,,,,,,914,',
',914,,,914,,914,,914,,,,914,,,,,,,,914,,,,,914,914,914,914,914,914,',
',,914,914,,,,,,,914,,,914,918,918,918,,918,914,914,,918,918,,,,918,',
'918,918,918,918,918,918,918,,,,,,918,918,918,918,918,918,918,,,918,',
',,,,,918,,,918,918,918,918,918,918,918,,918,918,918,,918,918,,,,,,,',
',,,,,,,,,,,,,,,,918,,,918,,,918,,918,,,,,,,,,,,,,,,,,,,918,918,918,918',
'918,918,,,,918,918,,,,,,,918,,,918,930,930,930,,930,918,918,,930,930',
',,,930,,930,930,930,930,930,930,930,,,,,,930,930,930,930,930,930,930',
',,930,,,,,,,930,,,930,930,930,930,930,930,930,,930,930,930,,930,930',
',930,930,,,,,,,,,,,,,,,,,,,,,930,,,930,,,930,,930,,930,,,,930,,,,,,',
',930,,,,,930,930,930,930,930,930,,,,930,930,,,,,,,930,,,930,931,931',
'931,931,931,930,930,,931,931,,,,931,,931,931,931,931,931,931,931,,,',
',,931,931,931,931,931,931,931,,,931,,,,,,931,931,,931,931,931,931,931',
'931,931,931,,931,931,931,,931,931,,931,931,,,,,,,,,,,,,,,,,,,,,931,',
',931,,,931,,931,,931,,,,931,,,,,,,,931,,,,,931,931,931,931,931,931,',
',,931,931,,,,,,,931,,,931,934,934,934,934,934,931,931,,934,934,,,,934',
',934,934,934,934,934,934,934,,,,,,934,934,934,934,934,934,934,,,934',
',,,,,934,934,,934,934,934,934,934,934,934,934,,934,934,934,,934,934',
',934,934,,,,,,,,,,,,,,,,,,,,,934,,,934,,,934,,934,,934,,,,934,,,,,,',
',934,,,,,934,934,934,934,934,934,,,,934,934,,,,,,,934,,,934,951,951',
'951,,951,934,934,,951,951,,,,951,,951,951,951,951,951,951,951,,,,,,951',
'951,951,951,951,951,951,,,951,,,,,,,951,,,951,951,951,951,951,951,951',
',951,951,951,,951,951,,951,951,,,,,,,,,,,,,,,,,,,,,951,,,951,,,951,',
'951,,951,,951,,951,,,,,,,,951,,,,,951,951,951,951,951,951,,,,951,951',
',,,,,,951,,,951,953,953,953,953,953,951,951,,953,953,,,,953,,953,953',
'953,953,953,953,953,,,,,,953,953,953,953,953,953,953,,,953,,,,,,953',
'953,,953,953,953,953,953,953,953,953,,953,953,953,,953,953,,953,953',
',,,,,,,,,,,,,,,,,,,,953,,,953,,,953,,953,,953,,,,953,,,,,,,,953,,,,',
'953,953,953,953,953,953,,,,953,953,,,,,,,953,,,953,964,964,964,964,964',
'953,953,,964,964,,,,964,,964,964,964,964,964,964,964,,,,,,964,964,964',
'964,964,964,964,,,964,,,,,,964,964,,964,964,964,964,964,964,964,964',
',964,964,964,,964,964,,964,964,,,,,,,,,,,,,,,,,,,,,964,,,964,,,964,',
'964,,964,,,,964,,,,,,,,964,,,,,964,964,964,964,964,964,,,,964,964,,',
',,,,964,,,964,969,969,969,969,969,964,964,,969,969,,,,969,,969,969,969',
'969,969,969,969,,,,,,969,969,969,969,969,969,969,,,969,,,,,,969,969',
',969,969,969,969,969,969,969,969,,969,969,969,,969,969,,969,969,,,,',
',,,,,,,,,,,,,,,,969,,,969,,,969,,969,,969,,,,969,,,,,,,,969,,,,,969',
'969,969,969,969,969,,,,969,969,,,,,,,969,,,969,977,977,977,977,977,969',
'969,,977,977,,,,977,,977,977,977,977,977,977,977,,,,,,977,977,977,977',
'977,977,977,,,977,,,,,,977,977,,977,977,977,977,977,977,977,977,,977',
'977,977,,977,977,,977,977,,,,,,,,,,,,,,,,,,,,,977,,,977,,,977,,977,',
'977,,,,977,,,,,,,,977,,,,,977,977,977,977,977,977,,,,977,977,,,,,,,977',
',,977,979,979,979,,979,977,977,,979,979,,,,979,,979,979,979,979,979',
'979,979,,,,,,979,979,979,979,979,979,979,,,979,,,,,,,979,,,979,979,979',
'979,979,979,979,979,979,979,979,,979,979,,979,979,,,,,,,,,,,,,,,,,,',
',,979,,,979,,,979,,979,,979,,,,979,,,,,,,,979,,,,445,979,979,979,979',
'979,979,445,445,445,979,979,,445,445,,445,,979,,,979,,,,445,,979,979',
',,,,,,,445,445,,445,445,445,445,445,,,,,,,,,,,,,,,,,,,,,,445,445,445',
'445,445,445,445,445,445,445,445,445,445,445,445,,,445,445,445,,445,',
',,445,,,,,,445,,445,,445,445,445,445,445,445,445,,445,445,445,,,,,,',
',,,,,,445,445,,445,,445,,447,445,,445,,,445,447,447,447,,,,447,447,',
'447,,,,,,,,,,,,,,,,,,,,447,447,,447,447,447,447,447,,,,,,,,,,,,,,,,',
',,,,,447,447,447,447,447,447,447,447,447,447,447,447,447,447,447,,,447',
'447,447,,447,,,,447,,,,,,447,,447,,447,447,447,447,447,447,447,,447',
',447,,,,,,,,,,,,,447,447,,447,,447,,662,447,,447,,,447,662,662,662,',
',662,662,662,,662,,,,,,,,,662,662,662,,,,,,,,,662,662,,662,662,662,662',
'662,,,,,,,,,,,,,,,,,,,,,,662,662,662,662,662,662,662,662,662,662,662',
'662,662,662,662,,,662,662,662,,662,662,,,662,,662,,662,,662,,662,,662',
'662,662,662,662,662,662,,662,662,662,,,,,,,,,,,,,662,662,662,662,,662',
',663,662,,662,,,662,663,663,663,,,663,663,663,,663,,,,,,,,,,663,663',
',,,,,,,,663,663,,663,663,663,663,663,,,,,,,,,,,,,,,,,,,,,,663,663,663',
'663,663,663,663,663,663,663,663,663,663,663,663,,,663,663,663,,663,663',
',,663,,663,,663,,663,,663,,663,663,663,663,663,663,663,,663,,663,,,',
',,,,,,,,,663,663,663,663,,663,,28,663,,663,,,663,28,28,28,,,28,28,28',
',28,,,,,,,,,,28,28,,,,,,,,,28,28,,28,28,28,28,28,,,,,,,,,,,,,,,,,,,',
',,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,,,28,28,28,,,28,,28,28',
',28,,28,,28,,28,,28,28,28,28,28,28,28,,28,,28,,,,,,,,,,,,,28,28,28,28',
'50,28,,,28,,28,50,50,50,,,50,50,50,,50,,,,,,,,,,50,50,50,,,,,,,,50,50',
',50,50,50,50,50,,,,,,,,,,,,,,,,,,,,,,50,50,50,50,50,50,50,50,50,50,50',
'50,50,50,50,,,50,50,50,,,50,,,50,,50,,50,,50,,50,,50,50,50,50,50,50',
'50,,50,,50,,,,,,,,,,,,,50,50,50,50,504,50,,50,50,,50,504,504,504,,,504',
'504,504,,504,,,,,,,,,,504,,,,,,,,,,504,504,,504,504,504,504,504,,,,',
',,,,,,,505,,,,,,,505,505,505,,,505,505,505,,505,,,,,504,504,,,,505,',
',504,,,,,504,504,505,505,,505,505,505,505,505,,,,,,,,,,,,504,,,,,,,',
',,,,,504,,504,,,504,,,505,505,,506,,,,,505,,506,506,506,505,505,506',
'506,506,,506,,,,,,,,,,506,,,,,505,,,,,506,506,,506,506,506,506,506,505',
',505,,,505,202,202,,,202,,,,,,,,,202,202,202,202,202,202,202,202,202',
',,202,202,506,506,,,202,202,202,202,506,,,,,506,506,,,,,202,202,,202',
'202,202,202,202,202,202,202,202,202,202,,506,202,,,,,,,,,,,,506,,506',
',,506,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,,,,7,7,7,7,7,7',
'7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,,7,,,,,,,,,7,7,7,7,7,7,7,7,7,,,7',
'7,,,,,7,7,7,7,,,,,,,,,,,,7,7,,7,7,7,7,7,7,7,7,7,7,7,,,7,7,,,,,,,,,,7',
'8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,,,,8,8,8,8,8,8,8,8,8',
'8,8,8,8,8,8,8,8,8,8,8,8,8,8,,,8,,,,,,,,,8,8,8,8,8,8,8,8,8,,,8,8,,,,',
'8,8,8,8,,,,,,,,,,,,8,8,,8,8,8,8,8,8,8,8,8,8,8,,,8,8,,,,,,,,,,8,420,420',
'420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420',
'420,420,420,420,420,,,,420,420,420,420,420,420,420,420,420,420,420,420',
'420,420,420,420,420,420,420,420,420,420,420,,,420,,,,,,,,,420,420,420',
'420,420,420,420,420,420,,,420,420,,,,,420,420,420,420,,,,,,,,,,,,420',
'420,,420,420,420,420,420,420,420,420,420,420,420,,,420,420,,,,,,,,,',
'420,424,424,424,424,424,424,424,424,424,424,424,424,424,424,424,424',
'424,424,424,424,424,424,424,424,,,,424,424,424,424,424,424,424,424,424',
'424,424,424,424,424,424,424,424,424,424,424,424,424,424,,,424,,,,,,',
',,424,424,424,424,424,424,424,424,424,,,424,424,,,,,424,424,424,424',
',,,,,,,,,,,424,424,,424,424,424,424,424,424,424,424,424,424,424,,,424',
'424,,,,,,,,,,424,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65',
'65,65,65,65,65,65,65,,,,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65',
'65,65,65,65,65,65,65,65,65,65,65,,65,,,,,,,65,65,65,65,65,65,65,65,65',
',,65,65,,,,,65,65,65,65,,,,,,65,,,,,,65,65,,65,65,65,65,65,65,65,65',
'65,65,65,,,65,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79',
'79,79,79,79,79,79,,,,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79',
'79,79,79,79,79,79,79,79,79,79,,79,,,,,,,79,79,79,79,79,79,79,79,79,',
',79,79,,,,,79,79,79,79,,,,,,,,,,,,79,79,,79,79,79,79,79,79,79,79,79',
'79,79,,,79,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192',
'192,192,192,192,192,192,192,192,192,,,,192,192,192,192,192,192,192,192',
'192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192',
'192,,192,,,,,,,192,192,192,192,192,192,192,192,192,,,192,192,,,,,192',
'192,192,192,,,,,,,,,,,,192,192,,192,192,192,192,192,192,192,192,192',
'192,192,,,192,788,788,788,788,788,788,788,788,788,788,788,788,788,788',
'788,788,788,788,788,788,788,788,788,788,,,,788,788,788,788,788,788,788',
'788,788,788,788,788,788,788,788,788,788,788,788,788,788,788,788,,,788',
',,,,,,,,788,788,788,788,788,788,788,788,788,,,788,788,,,,,788,788,788',
'788,,,,,,,,,,,,788,788,,788,788,788,788,788,788,788,788,788,788,788',
'201,201,788,,201,,,,,,,,,201,201,201,201,201,201,201,201,201,,,201,201',
',,,,201,201,201,201,,,,,,201,,,,,,201,201,,201,201,201,201,201,201,201',
'201,201,201,201,203,203,201,,203,,,,,,,,,203,203,203,203,203,203,203',
'203,203,,,203,203,,,,,203,203,203,203,,,,,,,,,,,,203,203,,203,203,203',
'203,203,203,203,203,203,203,203,265,265,203,,265,,,,,,,,,265,265,265',
'265,265,265,265,265,265,,,265,265,,,,,265,265,265,265,,,,,,,,,,,,265',
'265,,265,265,265,265,265,265,265,265,265,265,265,266,266,265,,266,,',
',,,,,,266,266,266,266,266,266,266,266,266,,,266,266,,,,,266,266,266',
'266,,,,,,,,,,,,266,266,,266,266,266,266,266,266,266,266,266,266,266',
'267,267,266,,267,,,,,,,,,267,267,267,267,267,267,267,267,267,,,267,267',
',,,,267,267,267,267,,,,,,,,,,,,267,267,,267,267,267,267,267,267,267',
'267,267,267,267,458,458,267,,458,,,,,,,,,458,458,458,458,458,458,458',
'458,458,,,458,458,,,,,458,458,458,458,,,,,,458,,,,,,458,458,,458,458',
'458,458,458,458,458,458,458,458,458,459,459,458,,459,,,,,,,,,459,459',
'459,459,459,459,459,459,459,,,459,459,,,,,459,459,459,459,,,,,,,,,,',
',459,459,,459,459,459,459,459,459,459,459,459,459,459,531,531,459,,531',
',,,,,,,,531,531,531,531,531,531,531,531,531,,,531,531,,,,,531,531,531',
'531,,,,,,531,,,,,,531,531,,531,531,531,531,531,531,531,531,531,531,531',
'532,532,531,,532,,,,,,,,,532,532,532,532,532,532,532,532,532,,,532,532',
',,,,532,532,532,532,,,,,,,,,,,,532,532,,532,532,532,532,532,532,532',
'532,532,532,532,534,534,532,,534,,,,,,,,,534,534,534,534,534,534,534',
'534,534,,,534,534,,,,,534,534,534,534,,,,,,,,,,,,534,534,,534,534,534',
'534,534,534,534,534,534,534,534,545,545,534,,545,,,,,,,,,545,545,545',
'545,545,545,545,545,545,,,545,545,,,,,545,545,545,545,,,,,,545,,,,,',
'545,545,,545,545,545,545,545,545,545,545,545,545,545,546,546,545,,546',
',,,,,,,,546,546,546,546,546,546,546,546,546,,,546,546,,,,,546,546,546',
'546,,,,,,,,,,,,546,546,,546,546,546,546,546,546,546,546,546,546,546',
'602,602,546,,602,,,,,,,,,602,602,602,602,602,602,602,602,602,,,602,602',
',,,,602,602,602,602,,,,,,602,,,,,,602,602,,602,602,602,602,602,602,602',
'602,602,602,602,603,603,602,,603,,,,,,,,,603,603,603,603,603,603,603',
'603,603,,,603,603,,,,,603,603,603,603,,,,,,,,,,,,603,603,,603,603,603',
'603,603,603,603,603,603,603,603,609,609,603,,609,,,,,,,,,609,609,609',
'609,609,609,609,609,609,,,609,609,,,,,609,609,609,609,,,,,,,,,,,,609',
'609,,609,609,609,609,609,609,609,609,609,609,609,611,611,609,,611,,',
',,,,,,611,611,611,611,611,611,611,611,611,,,611,611,,,,,611,611,611',
'611,,,,,,611,,,,,,611,611,,611,611,611,611,611,611,611,611,611,611,611',
'740,740,611,,740,,,,,,,,,740,740,740,740,740,740,740,740,740,,,740,740',
',,,,740,740,740,740,,,,,,,,,,,,740,740,,740,740,740,740,740,740,740',
'740,740,740,740,980,980,740,,980,,,,,,,,,980,980,980,980,980,980,980',
'980,980,,,980,980,,,,,980,980,980,980,,,,,,980,,,,,,980,980,,980,980',
'980,980,980,980,980,980,980,980,980,981,981,980,,981,,,,,,,,,981,981',
'981,981,981,981,981,981,981,,,981,981,,,,,981,981,981,981,,,,,,,,,,',
',981,981,,981,981,981,981,981,981,981,981,981,981,981,,,981' ]
        racc_action_check = arr = ::Array.new(25592, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_action_pointer = [
    -2,    14,   nil,   -46,   nil,   693,   -84, 23545, 23666,   -49,
   -58,   -19,    52,   616,   375,   435,   nil,   129,   260,  1832,
   130,   nil,   391,   522,   653,   307,   -19,   784, 23030,   nil,
   915,  1046,  1177,   nil,    72,   480,   148,   489,  1308,  1439,
  1570,    92,   679,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
 23157,   nil,  1701,  1832,  1963,   -15,  1190,  2094,  2225,   nil,
   nil,  2356,  2487,  2618,   nil, 24029,   nil,   nil,   nil,   nil,
   nil,   -15,   nil,   nil,   nil,   nil,   nil,   100,   132, 24139,
   nil,   nil,   nil,   585,  2749,   nil,   nil,  2880,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   273,   nil,  3011,
   nil,   nil,   nil,  3142,  3273,  3404,  3535,  3666,  3797,   nil,
   638,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil, 24249,   181,   nil,  3928,  4059,  4190,  4321,  4452,
  4583, 24418, 23418, 24477,  4714,  4845,  4976,   nil,   747,   -63,
   261,   -51,   194,   260,  5107,  5238,   nil,   nil,  5369,   281,
  5500,  5631,  5762,  5893,  6024,  6155,  6286,  6417,  6548,  6679,
  6810,  6941,  7072,  7203,  7334,  7465,  7596,  7727,  7858,  7989,
  8120,  8251,  8382,  8513,  8644,   nil,   nil,   nil,   nil,  1963,
   nil,   309,   312,   nil,  8775,   363,  8906,   nil,   nil,   nil,
   nil,   nil,  9037,   nil,   nil, 24536, 24595, 24654,   359,  9168,
  9299,   nil,   nil,   nil,   nil,   nil,   nil,   nil,  9430,   146,
   915,   399,  9561,   409,   424,   401,  9692,  9823,    17,   810,
   484,    39,   458,   436,   -14,   nil,   480,   587,   475,  9954,
   nil,   506,   538,   540,   941,   nil,   549,   nil, 10085,   nil,
 10216,   629,   nil,   497,   -89,   -47,   530,   516,   114,   543,
   nil,   nil,   -21,  2500,   nil,   nil,   nil,   524,   517,   532,
   541,   nil,   543,   554,   nil, 10347,   nil,   nil,   nil,   644,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   800,   nil,   nil,
   nil,   647,   nil,   nil,   662,   642,    -7,     0, 10478, 10609,
   374,   350,   587,    -2,  1039,   666,     0,   701,   nil,   nil,
  1033,   683,   nil,  1043,   nil,    68,   nil,   nil, 10740,   148,
   386,   396,   397,   438,   504,   510,   525,   nil,   527,   nil,
 10871,   nil,   285,   nil,   375,   nil,   506,   620,   399,   nil,
   623,   -33,   nil,   416,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   635,
 23787,   nil,   nil,   nil, 23908,   641,   nil,   nil,  1308,   nil,
 11002,   635,   nil,   638,   nil,   nil,  2094,   684,   689,   526,
   563, 11133,   nil,   nil,   nil, 22510,   700, 22640,   nil, 11264,
 11395, 11526,   nil,   nil,   nil,  2225,   nil,   nil, 24713, 24772,
 11657, 11788,    98, 11919, 12050, 12181,    44,   nil,  3928,  4059,
   260,   391,   728,   731,   732,   733,  5625,  5756,  2511,  4190,
  2612,  4315,  4452,  4583,  4714,  4845,  4976,  5107,  5238,   677,
   939,  5369,  5500, 12312,   -35,   nil, 12443,   nil, 12574,   nil,
 12705,   nil,   167,   nil, 23284, 23339, 23418,   -34,   nil,   677,
   nil,   nil,   683,   685,   nil,   nil, 12836,    -7,   166,   730,
   nil,   nil, 12967,   731,   699,   nil,   nil,   700, 13098,   737,
 13229, 24831, 24890, 13360, 24949,   170,   739,   nil,   nil, 13491,
   704,   nil, 13622, 13753, 13884, 25008, 25067,  2356, 14015,   836,
   837,   726,   nil,   nil, 14146,   nil,   nil, 14277,   nil,   nil,
   nil,   nil, 14408, 14539,   761,   nil,  2631,   nil,   nil, 14670,
   282,   nil,   nil,   621,  9705,   nil,   412,   nil,  1070,   809,
   nil,   nil,   777,   nil,   931,   nil,   745,   812,   nil,   nil,
 14801,   862,   nil,   nil, 14932,   203,   204,   860,   873, 15063,
   nil, 15194, 25126, 25185, 15325,    16,   nil,  1140,   nil, 25244,
 15456, 25303,   nil,   nil, 15587,   461, 15718,   nil,  9967,   nil,
   nil,   nil,    31,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   244,   nil,   nil,   nil,   757,   nil,   nil,
   nil,   nil,   nil, 15849,   759, 15980,   595,   202, 16111, 16242,
   795,   nil,   nil,   nil, 16373,   796,   nil, 16504,   798,   nil,
   283,   301, 22770, 22900,   812,   815,  1439,   nil,  1701,   nil,
 10360,   nil, 16635,   783,   nil,   828, 16766,   nil,   nil, 16897,
   nil,   nil,   nil,   nil,   nil,   nil, 17028,   nil,   834, 17159,
 17290,  1570,   801,   nil,   nil,   838, 17421, 17552,   nil,   954,
   -25, 17683,   803,   nil,   839,   207,   229,   851,   252,   260,
   853,   859,   863,   835, 17814,  2749,   905,   909,    66,   963,
 17945,   nil,   890,   292,   nil,   872,   989,   nil,   nil,   nil,
   873,   876,  1174,   879,   nil,   nil,   881,   883,   nil,   885,
 25362,   nil,   nil,   922,  1033,   nil,   709,   nil,   999,   nil,
   nil,   nil,   nil,   nil,  1006,   nil,  1007, 18076,   928,    29,
    40,    80,   121,   929, 18207,  1481,   nil,   934,   946, 18338,
   495,   nil,   212, 18469, 18600, 10753,   505, 18731,   nil,   917,
   919,   nil,   920,   925,   929,   nil,   923,   nil, 24359,   970,
   701, 18862,   nil,   nil,   nil,  2880,   936, 18993, 19124, 19255,
   nil,  3011,   nil,  3142,   nil,   nil,  3273,   nil,  3404,   nil,
 19386, 19517, 19648,   321,   342,   nil,   nil,   965,  1064,   nil,
   nil,   nil,   972,   nil,   962, 19779,   nil,   980,  1083,   967,
   232,   nil,   nil,   nil,  1093,   nil, 19910,   979,  1021,   nil,
   nil,   nil,   nil,   nil,   nil,   543,   nil,   674,   nil,   nil,
 13111,   nil,   805,   nil,   nil,  1022,   nil,   nil,   858,  1103,
   nil, 20041,  1104, 20172, 20303,   nil,   nil,    45,    50,  1743,
   229,   nil,  1105,   nil,   nil,  1109,  1115,  1002,   nil,   nil,
   362,   nil,   nil, 13504,   nil,   335,   nil,   493,   nil, 20434,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,  1016,  1003,   nil,
  3535,   nil,  3666, 20565, 20696, 20827,   nil,   nil,   nil, 20958,
  1004,   nil,   nil,   nil, 21089,   nil,   nil,    72, 21220,   nil,
  1006,  1007,  1009,  1010,   nil,   nil,    76,   nil,  1129,  1131,
 21351, 21482,   nil,   nil, 21613,   nil,   nil,  1053,   nil,  1018,
   nil,  1019,  1022,  1023,  1014,   nil,   nil, 14683,   nil,  3797,
   nil, 21744,   nil, 21875,    80,  1874,  1097,    84,   nil,   nil,
   936,   nil,   nil,   nil, 22006,   nil,   nil,   nil,   469, 22137,
  1143,   nil,   nil,   466,   nil,   nil,   nil, 22268,  1146, 22399,
 25421, 25480,    88,  1029,   770,   nil,   nil,   nil,  1147,   nil,
  1031,  1156,   nil,  1077,    96,   110,   176,   211,   nil,   nil,
   nil,   nil,   nil,   129 ]

racc_action_default = [
    -3,  -574,    -1,  -562,    -4,    -6,  -574,  -574,  -574,  -574,
  -574,  -574,  -574,  -574,  -281,   -37,   -38,  -574,  -574,   -43,
   -45,   -46,  -294,  -332,  -333,   -50,  -259,  -396,  -259,   -65,
   -10,   -69,   -77,   -79,  -574,  -471,  -574,  -574,  -574,  -574,
  -574,  -564,  -235,  -274,  -275,  -276,  -277,  -278,  -279,  -280,
  -552,  -283,  -574,  -573,  -543,  -302,  -573,  -574,  -574,  -307,
  -310,  -562,  -574,  -574,  -324,  -574,  -334,  -335,  -414,  -415,
  -416,  -417,  -418,  -573,  -421,  -573,  -573,  -573,  -573,  -573,
  -448,  -454,  -455,  -574,  -460,  -461,  -462,  -463,  -464,  -465,
  -466,  -467,  -468,  -469,  -470,  -473,  -474,  -574,    -2,  -563,
  -569,  -570,  -571,  -574,  -574,  -574,  -574,  -574,    -3,   -13,
  -574,  -106,  -107,  -108,  -109,  -110,  -111,  -112,  -115,  -116,
  -117,  -118,  -119,  -120,  -121,  -122,  -123,  -124,  -125,  -126,
  -127,  -128,  -129,  -130,  -131,  -132,  -133,  -134,  -135,  -136,
  -137,  -138,  -139,  -140,  -141,  -142,  -143,  -144,  -145,  -146,
  -147,  -148,  -149,  -150,  -151,  -152,  -153,  -154,  -155,  -156,
  -157,  -158,  -159,  -160,  -161,  -162,  -163,  -164,  -165,  -166,
  -167,  -168,  -169,  -170,  -171,  -172,  -173,  -174,  -175,  -176,
  -177,  -178,  -179,  -180,  -181,  -182,  -183,  -184,  -185,  -186,
  -187,  -188,  -574,   -18,  -113,   -10,  -574,  -574,  -574,  -573,
  -573,  -574,  -574,  -574,  -574,  -574,  -574,   -41,  -574,  -471,
  -574,  -281,  -574,  -574,   -10,  -574,   -42,  -225,  -574,  -574,
  -574,  -574,  -574,  -574,  -574,  -574,  -574,  -574,  -574,  -574,
  -574,  -574,  -574,  -574,  -574,  -574,  -574,  -574,  -574,  -574,
  -574,  -574,  -574,  -574,  -574,  -232,  -383,  -385,   -47,  -236,
  -252,  -266,  -266,  -256,  -574,  -267,  -574,  -294,  -332,  -333,
  -573,  -545,  -574,   -48,   -49,  -574,  -574,  -574,   -55,  -573,
  -574,  -301,  -389,  -397,  -399,   -63,  -395,   -64,  -574,  -562,
   -11,   -65,   -10,  -574,  -574,   -70,   -73,   -10,  -471,  -574,
  -574,  -281,  -297,  -564,  -574,  -336,  -396,  -574,   -75,  -574,
   -81,  -289,  -456,  -457,  -574,  -210,  -211,  -226,  -574,  -565,
   -10,  -285,  -237,  -564,  -566,  -566,  -574,  -574,  -566,  -574,
  -303,  -304,  -574,  -574,  -347,  -348,  -355,  -573,  -509,  -540,
  -540,  -365,  -573,  -573,  -382,  -481,  -482,  -484,  -485,  -487,
  -488,  -508,  -510,  -511,  -512,  -513,  -514,  -574,  -527,  -532,
  -533,  -535,  -536,  -537,  -574,   -44,  -574,  -574,  -574,  -574,
  -562,  -574,  -563,  -471,  -574,  -574,  -281,  -574,  -516,  -517,
  -102,  -574,  -104,  -574,  -281,  -574,  -321,  -471,  -574,  -106,
  -107,  -144,  -145,  -161,  -166,  -173,  -176,  -327,  -574,  -541,
  -574,  -419,  -574,  -434,  -574,  -436,  -574,  -574,  -574,  -426,
  -574,  -574,  -432,  -574,  -447,  -449,  -450,  -451,  -452,  -458,
  -459,  1004,    -5,  -572,   -19,   -20,   -21,   -22,   -23,  -574,
  -574,   -15,   -16,   -17,  -574,  -574,   -25,   -34,  -189,  -267,
  -574,  -574,   -26,   -35,   -36,   -27,  -191,  -574,  -574,  -553,
  -554,  -573,  -392,  -555,  -556,  -553,  -259,  -554,  -394,  -558,
  -559,  -573,  -553,  -554,   -33,  -199,   -39,   -40,  -574,  -574,
  -573,  -573,  -289,  -574,  -574,  -574,  -574,  -300,  -200,  -201,
  -202,  -203,  -204,  -205,  -206,  -207,  -212,  -213,  -214,  -215,
  -216,  -217,  -218,  -219,  -220,  -221,  -222,  -223,  -224,  -227,
  -228,  -229,  -230,  -574,  -573,  -253,  -574,  -254,  -574,  -264,
  -574,  -268,  -574,  -548,  -259,  -259,  -259,  -573,   -56,  -564,
  -247,  -248,  -266,  -266,  -260,  -261,  -574,  -573,  -573,  -574,
  -296,    -9,  -563,  -574,   -66,  -287,   -82,   -71,  -574,  -574,
  -573,  -574,  -574,  -573,  -574,  -289,  -574,  -456,  -457,  -574,
   -78,   -83,  -574,  -574,  -574,  -574,  -574,  -231,  -574,  -406,
  -574,  -564,  -238,  -239,  -568,  -567,  -241,  -568,  -292,  -293,
  -544,  -344,   -10,   -10,  -574,  -346,  -574,  -367,  -378,  -574,
  -574,  -363,  -364,  -574,  -373,  -375,  -574,  -380,  -480,  -574,
  -486,  -509,  -574,  -518,  -574,  -520,  -522,  -526,  -534,  -538,
   -10,  -337,  -338,  -339,   -10,  -574,  -574,  -574,  -574,   -10,
  -401,  -573,  -574,  -574,  -573,  -289,  -316,  -102,  -103,  -574,
  -573,  -574,  -319,  -475,  -574,  -574,  -574,  -325,  -507,  -329,
  -560,  -561,  -564,  -420,  -435,  -438,  -439,  -441,  -422,  -437,
  -423,  -424,  -425,  -574,  -428,  -430,  -431,  -574,  -453,    -7,
   -14,  -114,   -24,  -574,  -273,  -574,  -290,  -291,  -574,  -574,
   -59,  -245,  -246,  -390,  -574,   -61,  -393,  -574,   -57,  -391,
  -553,  -554,  -553,  -554,  -574,  -574,  -189,  -299,  -574,  -358,
  -574,  -360,   -10,  -266,  -265,  -269,  -574,  -546,  -547,  -574,
   -51,  -386,   -52,  -387,   -53,  -388,   -10,  -243,  -574,  -249,
  -251,   -43,  -574,  -258,  -262,  -574,   -10,   -10,  -295,   -12,
   -66,  -574,   -74,   -80,  -574,  -553,  -554,  -573,  -557,  -288,
  -574,  -574,  -573,   -76,  -574,  -198,  -208,  -209,  -574,  -573,
  -573,  -284,  -574,  -566,  -242,  -574,  -574,  -345,  -356,  -366,
  -573,  -573,  -357,  -540,  -483,  -539,  -573,  -573,  -528,  -573,
  -574,  -289,  -515,  -574,  -574,  -525,  -573,  -340,  -573,  -308,
  -341,  -342,  -343,  -311,  -574,  -314,  -574,  -574,  -574,  -553,
  -554,  -557,  -288,  -574,  -574,  -102,  -105,  -557,  -574,   -10,
  -574,  -477,  -574,   -10,   -10,  -507,  -574,  -490,  -491,  -540,
  -540,  -496,  -498,  -498,  -498,  -506,  -509,  -530,  -574,  -574,
  -574,   -10,  -427,  -429,  -433,  -190,  -271,  -574,  -574,  -574,
   -30,  -194,   -31,  -195,   -60,   -32,  -196,   -62,  -197,   -58,
  -574,  -574,  -574,  -291,  -290,  -233,  -359,  -574,  -574,  -255,
  -270,  -549,  -574,  -244,  -266,  -574,  -263,  -574,  -574,   -72,
  -290,  -291,   -84,  -298,  -573,  -353,   -10,  -407,  -573,  -408,
  -409,  -286,  -240,  -349,  -350,  -574,  -376,  -574,  -379,  -362,
  -574,  -370,  -574,  -372,  -381,  -288,  -519,  -521,  -524,  -574,
  -351,  -574,  -574,   -10,   -10,  -313,  -315,  -574,  -290,   -94,
  -574,  -290,  -574,  -476,  -322,  -574,  -574,  -564,  -479,  -489,
  -574,  -494,  -495,  -574,  -502,  -574,  -504,  -574,  -505,  -574,
  -330,  -542,  -440,  -443,  -444,  -445,  -446,  -574,  -272,   -28,
  -192,   -29,  -193,  -574,  -574,  -574,  -361,  -384,   -54,  -250,
  -266,  -398,  -400,    -8,   -10,  -413,  -354,  -574,  -574,  -411,
  -573,  -573,  -573,  -573,  -523,  -305,  -574,  -306,  -574,  -574,
  -574,   -10,  -317,  -320,   -10,  -326,  -328,  -574,  -492,  -540,
  -497,  -498,  -498,  -498,  -574,  -531,  -529,  -507,  -442,  -234,
  -257,  -574,  -412,   -10,  -471,  -574,  -574,  -281,  -410,  -377,
  -574,  -368,  -371,  -374,   -10,  -309,  -312,  -269,  -573,   -10,
  -574,  -478,  -493,  -574,  -500,  -501,  -503,   -10,  -406,  -573,
  -574,  -574,  -289,  -573,  -573,  -402,  -403,  -404,  -574,  -323,
  -498,  -574,  -405,  -574,  -553,  -554,  -557,  -288,  -369,  -352,
  -318,  -499,  -331,  -290 ]

clist = [
'13,387,598,99,308,285,114,114,324,583,250,250,250,316,334,405,497,208',
'208,427,434,719,208,208,208,571,572,5,295,295,13,289,289,216,774,550',
'590,594,102,109,194,313,251,251,251,540,356,357,281,728,360,677,208',
'208,441,446,451,208,208,295,295,208,364,373,114,117,117,98,252,252,252',
'375,738,283,785,553,556,659,114,560,268,275,277,1,392,749,753,298,945',
'412,913,608,414,415,416,417,102,193,369,13,318,508,777,208,208,208,208',
'13,13,582,677,859,2,674,672,674,420,493,504,505,506,905,26,509,834,361',
'5,686,405,733,681,683,685,693,418,5,687,696,697,26,26,248,263,264,26',
'26,26,394,396,695,514,403,26,862,389,624,10,317,320,437,438,634,321',
'367,612,388,619,310,551,358,730,724,863,359,26,26,945,780,737,26,26',
'864,764,26,731,969,10,313,313,769,616,114,934,378,739,13,208,208,208',
'208,208,450,773,618,208,208,208,788,947,322,561,426,432,435,13,208,431',
'431,368,454,419,26,784,736,247,26,26,26,26,26,26,785,494,517,518,985',
'782,757,754,838,917,391,398,677,633,401,583,892,790,745,791,877,734',
'938,941,10,536,250,250,777,857,,,10,10,624,250,,,208,208,502,,541,702',
'564,552,497,208,522,,334,13,295,,713,289,13,,512,251,,,,,,295,,251,289',
'281,,,,,281,674,674,,12,13,441,446,,102,513,252,26,26,26,26,26,26,,252',
'523,26,26,26,766,529,,295,728,780,578,26,26,659,12,,527,,521,,738,743',
'595,596,999,,10,,,,,,,208,208,932,,,977,777,,,777,,777,10,777,,986,',
'295,,,373,784,,738,,,707,,617,712,511,515,208,26,26,782,,102,793,519',
'707,,26,,,785,26,,583,,12,26,613,,884,886,888,,12,12,,114,664,665,,114',
'597,,,,,849,,777,26,,,,,819,10,939,,,780,10,780,,780,829,313,313,992',
',640,,921,707,641,777,450,,208,208,677,920,707,,10,,922,,923,735,688',
',735,881,882,,117,,26,26,117,804,842,,,942,807,943,704,809,,711,872',
'650,,284,875,876,655,,541,,12,658,780,,,,,,26,541,722,,208,,313,781',
'924,313,13,12,,295,674,,289,,208,450,780,208,,,295,,,289,,,673,839,',
'450,,931,208,699,,784,,,,,,,680,682,684,758,13,13,763,782,295,,674,732',
'768,974,975,976,,,,990,983,,,,26,26,,789,,,819,313,13,12,313,,13,,12',
'953,313,13,723,208,450,770,208,,964,,450,987,208,,568,,208,,208,575',
'577,12,1001,,817,,272,276,,,334,,750,750,,,,972,,,26,,,,,,26,,,,208',
'208,771,,26,,208,26,,,,970,,,425,800,802,,,,,805,26,,13,,950,541,781',
',10,,,284,,,26,26,13,,832,,,,,,,,13,13,295,,,289,991,,,,,,,,,295,26',
',289,,26,,10,10,,26,,26,890,,26,14,,,,,26,,,824,26,,26,450,431,,319',
',,,10,,,284,10,,,870,284,10,,14,291,291,,,,,208,,,,,13,26,26,,13,13',
',26,867,,,,735,,,781,,781,114,781,366,374,13,,,26,,,,208,208,,,,,,873',
',874,26,,,878,,899,901,,,,26,26,,,,,,,14,,10,,,12,,707,14,14,13,,,,937',
',10,,,910,,,781,,926,,10,10,,,,,,,,208,,13,13,,,,,,,12,12,,781,,,,,',
',,,,429,433,26,,,,,26,272,,276,26,26,,,12,,,,12,,750,,,12,,,,,26,13',
'295,,,955,,26,26,14,,,10,,,,10,10,13,,,13,,,,,993,,14,499,,501,,,10',
',,503,,,13,,,,,26,,,,,,13,,,313,,13,,,,,,,,13,,208,450,12,,26,,26,26',
',,,,,10,,,12,,,,,,,,,,12,12,,,14,,,,291,14,846,848,,,10,10,851,853,',
'854,,291,,,725,726,,,35,,,26,14,,652,,,,,656,,,,,652,,,,26,,,26,746',
',,,748,374,35,288,288,756,,,,10,,,,958,26,,,12,,,,12,12,,,26,10,,,10',
'26,,,,363,377,,377,26,12,26,652,652,652,374,,,,10,,207,,,,,,,644,,10',
',,,,10,,,,,,,35,10,,,,,,818,35,35,,,,12,311,,,,,355,355,822,,355,,,',
',,,,827,828,,,,,,,,12,12,,,,,,,,,,,675,,319,,678,,,,,,,,,355,355,355',
'355,,,,692,959,961,962,963,,,,,,,,,,,,,,,12,,,,,35,,,,,,,,,,,,12,,675',
'12,,319,,35,,14,,,,,,291,,,897,,,,12,,,,291,,998,,,,,12,,,,,12,,,,,',
',,12,,,14,14,,,,,,374,,,456,457,,,916,,652,,,656,466,652,,,,,35,,14',
',288,35,14,,,,,14,,,,928,929,288,796,,,,,,,,,,35,,,,,,,,,,,,,,,,,,,',
',820,,,821,377,,,,,,,,,675,319,,,952,,,,,,,,,,,,,,,,,968,14,,,,,,,,',
'837,,,377,,14,,,,,,,978,,,14,14,,,,291,,,984,,,,,988,,,,,291,,,,429',
',,,,,,355,355,,,,,,,,,,,,879,,,,,,,,,,,,,,,,,,,622,898,,,,,,,,,,,14',
',,,14,14,,,,,,,,,,,,429,,,,896,14,,,,,,,,,,,,,,,,,,,,,,,,312,,,325,',
',,,,,,,,35,,,,,,288,393,14,395,395,399,402,395,,,,288,,,,,946,,,,,,',
',,,,,,14,14,,,,35,35,319,,,,,377,,,,,,,,311,,,,,,,,967,,,,,35,,,,35',
',,217,,35,,249,249,249,,,967,,14,718,,,957,,,,,305,306,307,,,,,,14,',
',14,,,,249,249,,,,,,,,,,,,,,14,,,,,,,,312,312,,14,,,,,14,,,,,,,,14,35',
',,355,,772,,,,,,,,,35,,,,,,,,,,35,35,,,,288,,,,,,,,,,,,,288,,393,,,',
',,,,,510,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,35,,,,35,35,428',
'249,436,249,249,,,,455,,,,,,,,35,,,,,,217,,468,469,470,471,472,473,474',
'475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491',
'492,,355,,,,,,,,249,,249,35,,,,,249,,,,,,,249,249,,,,,,,,249,,,,,,35',
'35,,,,,,,,,,,,,,,,,,,,,,,547,,,,,,,,,,651,,,,,,,,,,651,,,,,,,35,,312',
'312,954,,,,355,,,,,,,,,35,,,35,,,,,,,,,,,,,,,,669,,,35,,,,,,,651,651',
'651,669,35,,,,,35,,,,669,669,,,35,,,,,,,,,312,,,312,,,,,,,,,,,,,,,,',
',,,249,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,249,249,,455,666,436,,,,,,,,,,,',
',312,,,312,,,,,,312,,,,,,668,,,249,,249,,249,,,,,,,,,,,,,,,,691,,,,',
',,,,,,,,,249,,,249,,,,,,,,,715,716,717,,,,,,,,,,249,,,249,,,,,,,,,,',
',,,,,,,,,,,,,,,,651,,,,,651,,,,,,,835,840,,,,249,,,249,,,,,,249,,,,',
',,,,,,,,835,,835,,,,,,,,,,,,,,,,,,795,,249,,,801,803,,,,,806,,,808,',
',,,,,,,,,,,,,,,,,249,,,249,,,,,,,,,,249,249,,,,,,,,,,,,,,,,,,,,,915',
',,,919,,,,,249,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,249,,,,,,,,,,,,,',
',,,,,,249,,,,,,,,,,,,,,,,,,,,249,900,902,,,,,,,,,,,801,803,806,,,,,',
',,,,,,,249,,,,,,,,,,,,,,,,,,,,835,,,,,,,,,,,312,,,,,835,,,,,,,,,,,,',
',,,,,,,,,,,,,,,249,,,,,,,,,,,,,,902,900,949,,,,249,,,,,,,,,,,,,,,,,',
',,,249,,,,,,,,,,,,,,,,,,,,,249,,,,,,,,,,,,,,,,,,,,,,,,,,,,249' ]
        racc_goto_table = arr = ::Array.new(2592, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'21,47,82,6,51,41,48,48,107,150,29,29,29,22,110,47,64,21,21,24,24,10',
'21,21,21,113,113,7,52,52,21,21,21,18,86,8,79,79,85,14,14,29,56,56,56',
'43,16,16,38,109,16,159,21,21,33,33,33,21,21,52,52,21,21,21,48,50,50',
'4,58,58,58,46,152,39,147,57,57,63,48,57,34,34,34,1,131,81,81,42,156',
'5,12,45,16,16,16,16,85,15,19,21,58,35,143,21,21,21,21,21,21,153,159',
'80,2,59,36,59,27,53,33,33,33,54,37,61,11,4,7,36,47,112,63,63,63,59,7',
'7,62,36,36,37,37,31,31,31,37,37,37,132,132,65,66,132,37,11,74,135,17',
'75,76,22,22,135,78,83,84,87,88,89,90,91,117,59,92,93,37,37,156,112,117',
'37,37,94,95,37,116,96,17,29,29,97,98,48,99,100,116,21,21,21,21,21,21',
'48,101,102,21,21,21,103,104,105,106,18,18,18,21,21,56,56,17,18,2,37',
'117,108,118,37,37,37,37,37,37,147,119,121,122,123,116,124,82,125,126',
'130,133,159,134,136,150,137,138,150,139,141,142,145,149,17,51,29,29',
'143,154,,,17,17,135,29,,,21,21,131,,41,43,107,51,64,21,6,,110,21,52',
',43,21,21,,56,56,,,,,,52,,56,21,38,,,,,38,59,59,,20,21,33,33,,85,58',
'58,37,37,37,37,37,37,,58,39,37,37,37,45,39,,52,109,112,21,37,37,63,20',
',42,,4,,152,153,16,16,80,,17,,,,,,,21,21,81,,,86,143,,,143,,143,17,143',
',11,,52,,,21,117,,152,,,33,,46,33,31,31,21,37,37,116,,85,135,31,33,',
'37,,,147,37,,150,,20,37,85,,148,148,148,,20,20,,48,22,22,,48,4,,,,,113',
',143,37,,,,,64,17,112,,,112,17,112,,112,43,29,29,10,,14,,117,33,14,143',
'48,,21,21,159,116,33,,17,,116,,116,114,51,,114,113,113,,50,,37,37,50',
'35,57,,,117,35,117,22,35,,22,8,34,,9,8,8,34,,41,,20,34,112,,,,,,37,41',
'51,,21,,29,114,150,29,21,20,,52,59,,21,,21,48,112,21,,,52,,,21,,,58',
'24,,48,,79,21,7,,117,,,,,,,34,34,34,22,21,21,22,116,52,,59,21,22,148',
'148,148,,,,117,116,,,,37,37,,51,,,64,29,21,20,29,,21,,20,79,29,21,58',
'21,48,16,21,,79,,48,82,21,,115,,21,,21,115,115,20,148,,107,,60,60,,',
'110,,85,85,,,,113,,,37,,,,,,37,,,,21,21,85,,37,,21,37,,,,8,,,9,18,18',
',,,,18,37,,21,,64,41,114,,17,,,9,,,37,37,21,,41,,,,,,,,21,21,52,,,21',
'8,,,,,,,,,52,37,,21,,37,,17,17,,37,,37,47,,37,23,,,,,37,,,58,37,,37',
'48,56,,25,,,,17,,,9,17,,,16,9,17,,23,23,23,,,,,21,,,,,21,37,37,,21,21',
',37,56,,,,114,,,114,,114,48,114,23,23,21,,,37,,,,21,21,,,,,,85,,85,37',
',,85,,18,18,,,,37,37,,,,,,,23,,17,,,20,,33,23,23,21,,,,51,,17,,,56,',
',114,,16,,17,17,,,,,,,,21,,21,21,,,,,,,20,20,,114,,,,,,,,,,25,25,37',
',,,,37,60,,60,37,37,,,20,,,,20,,85,,,20,,,,,37,21,52,,,21,,37,37,23',
',,17,,,,17,17,21,,,21,,,,,22,,23,25,,25,,,17,,,25,,,21,,,,,37,,,,,,21',
',,29,,21,,,,,,,,21,,21,48,20,,37,,37,37,,,,,,17,,,20,,,,,,,,,,20,20',
',,23,,,,23,23,115,115,,,17,17,115,115,,115,,23,,,9,9,,,44,,,37,23,,60',
',,,,60,,,,,60,,,,37,,,37,9,,,,9,23,44,44,44,9,,,,17,,,,17,37,,,20,,',
',20,20,,,37,17,,,17,37,,,,44,44,,44,37,20,37,60,60,60,23,,,,17,,26,',
',,,,,25,,17,,,,,17,,,,,,,44,17,,,,,,9,44,44,,,,20,26,,,,,26,26,9,,26',
',,,,,,,9,9,,,,,,,,20,20,,,,,,,,,,,25,,25,,25,,,,,,,,,26,26,26,26,,,',
'25,115,115,115,115,,,,,,,,,,,,,,,20,,,,,44,,,,,,,,,,,,20,,25,20,,25',
',44,,23,,,,,,23,,,9,,,,20,,,,23,,115,,,,,20,,,,,20,,,,,,,,20,,,23,23',
',,,,,23,,,26,26,,,9,,60,,,60,26,60,,,,,44,,23,,44,44,23,,,,,23,,,,9',
'9,44,25,,,,,,,,,,44,,,,,,,,,,,,,,,,,,,,,25,,,25,44,,,,,,,,,25,25,,,9',
',,,,,,,,,,,,,,,,9,23,,,,,,,,,25,,,44,,23,,,,,,,9,,,23,23,,,,23,,,9,',
',,,9,,,,,23,,,,25,,,,,,,26,26,,,,,,,,,,,,25,,,,,,,,,,,,,,,,,,,26,25',
',,,,,,,,,,23,,,,23,23,,,,,,,,,,,,25,,,,23,23,,,,,,,,,,,,,,,,,,,,,,,',
'55,,,55,,,,,,,,,,44,,,,,,44,55,23,55,55,55,55,55,,,,44,,,,,25,,,,,,',
',,,,,,23,23,,,,44,44,25,,,,,44,,,,,,,,26,,,,,,,,25,,,,,44,,,,44,,,28',
',44,,28,28,28,,,25,,23,26,,,23,,,,,28,28,28,,,,,,23,,,23,,,,28,28,,',
',,,,,,,,,,,23,,,,,,,,55,55,,23,,,,,23,,,,,,,,23,44,,,26,,26,,,,,,,,',
'44,,,,,,,,,,44,44,,,,44,,,,,,,,,,,,,44,,55,,,,,,,,,55,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,44,,,,44,44,28,28,28,28,28,,,,28,,,,,,',
',44,,,,,,28,,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28',
'28,28,28,28,28,28,,26,,,,,,,,28,,28,44,,,,,28,,,,,,,28,28,,,,,,,,28',
',,,,,44,44,,,,,,,,,,,,,,,,,,,,,,,28,,,,,,,,,,55,,,,,,,,,,55,,,,,,,44',
',55,55,44,,,,26,,,,,,,,,44,,,44,,,,,,,,,,,,,,,,55,,,44,,,,,,,55,55,55',
'55,44,,,,,44,,,,55,55,,,44,,,,,,,,,55,,,55,,,,,,,,,,,,,,,,,,,,28,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,28,28,,28,28,28,,,,,,,,,,,,,55,,,55,,,,,,55',
',,,,,28,,,28,,28,,28,,,,,,,,,,,,,,,,28,,,,,,,,,,,,,,28,,,28,,,,,,,,',
'28,28,28,,,,,,,,,,28,,,28,,,,,,,,,,,,,,,,,,,,,,,,,,,55,,,,,55,,,,,,',
'55,55,,,,28,,,28,,,,,,28,,,,,,,,,,,,,55,,55,,,,,,,,,,,,,,,,,,28,,28',
',,28,28,,,,,28,,,28,,,,,,,,,,,,,,,,,,,28,,,28,,,,,,,,,,28,28,,,,,,,',
',,,,,,,,,,,,,55,,,,55,,,,,28,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,28',
',,,,,,,,,,,,,,,,,,,28,,,,,,,,,,,,,,,,,,,,28,28,28,,,,,,,,,,,28,28,28',
',,,,,,,,,,,,28,,,,,,,,,,,,,,,,,,,,55,,,,,,,,,,,55,,,,,55,,,,,,,,,,,',
',,,,,,,,,,,,,,,,28,,,,,,,,,,,,,,28,28,28,,,,28,,,,,,,,,,,,,,,,,,,,,28',
',,,,,,,,,,,,,,,,,,,,28,,,,,,,,,,,,,,,,,,,,,,,,,,,,28' ]
        racc_goto_check = arr = ::Array.new(2592, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_goto_pointer = [
   nil,    83,   112,   nil,    64,   -10,     0,    27,  -275,   467,
  -528,  -595,  -744,   nil,    32,    89,   -11,   156,    15,    36,
   309,     0,   -40,   727,  -177,   688,  1094,     7,  1612,   -12,
   nil,   119,   nil,  -147,    54,  -167,  -380,   122,    18,    43,
   nil,   -26,    55,  -254,  1033,  -280,     8,   -64,    -1,   nil,
    58,   -37,    -3,  -128,  -694,  1489,    20,  -239,    46,  -383,
   598,  -146,  -373,  -374,  -236,  -367,  -120,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    89,   103,   103,   nil,   106,  -320,
  -635,  -510,  -359,   101,  -211,    35,  -584,   100,  -222,   116,
  -143,   110,  -577,   113,  -572,  -424,  -747,  -423,  -186,  -682,
   129,  -415,  -184,  -412,  -682,   153,  -112,   -48,  -351,  -517,
   -42,   nil,  -441,  -304,   -99,   285,  -382,  -396,   204,   -14,
   nil,   -40,   -40,  -733,  -363,  -481,  -598,   nil,   nil,   nil,
   170,    11,    72,   165,  -154,  -237,   167,  -543,  -378,  -377,
   nil,  -524,  -318,  -516,   nil,  -627,   nil,  -544,  -370,  -629,
  -338,   nil,  -502,  -238,  -484,   nil,  -797,   nil,   nil,  -447 ]

racc_goto_default = [
   nil,   nil,   nil,     3,   nil,     4,   362,   280,   nil,   549,
   nil,   860,   nil,   279,   nil,   nil,   nil,   212,    16,    11,
   213,   304,   nil,   211,   nil,   255,    15,   nil,    19,    20,
    21,   nil,    25,   710,   nil,   nil,   nil,   294,    29,   nil,
    31,    34,    33,   nil,   209,   372,   nil,   116,   444,   115,
    69,   nil,    42,   nil,   nil,   567,   314,   nil,   315,   253,
   442,   nil,   nil,   653,   495,   nil,   nil,   270,    43,    44,
    45,    46,    47,    48,    49,   nil,   271,    55,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   591,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   327,   326,
   729,   329,   330,   nil,   331,   nil,   332,   333,   nil,   nil,
   448,   nil,   nil,   nil,   nil,   nil,   nil,    68,    70,    71,
    72,   nil,   nil,   nil,   nil,   629,   nil,   nil,   nil,   nil,
   404,   776,   336,   335,   339,   778,   779,   940,   nil,   783,
   346,   341,   348,   nil,   585,   586,   787,   351,   354,   261 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 141, :_reduce_none,
  2, 142, :_reduce_2,
  0, 143, :_reduce_3,
  1, 143, :_reduce_4,
  3, 143, :_reduce_5,
  1, 145, :_reduce_none,
  4, 145, :_reduce_7,
  4, 148, :_reduce_8,
  2, 149, :_reduce_9,
  0, 153, :_reduce_10,
  1, 153, :_reduce_11,
  3, 153, :_reduce_12,
  0, 167, :_reduce_13,
  4, 147, :_reduce_14,
  3, 147, :_reduce_15,
  3, 147, :_reduce_none,
  3, 147, :_reduce_17,
  2, 147, :_reduce_18,
  3, 147, :_reduce_19,
  3, 147, :_reduce_20,
  3, 147, :_reduce_21,
  3, 147, :_reduce_22,
  3, 147, :_reduce_23,
  4, 147, :_reduce_none,
  3, 147, :_reduce_25,
  3, 147, :_reduce_26,
  3, 147, :_reduce_27,
  6, 147, :_reduce_none,
  6, 147, :_reduce_none,
  5, 147, :_reduce_30,
  5, 147, :_reduce_none,
  5, 147, :_reduce_none,
  3, 147, :_reduce_none,
  3, 147, :_reduce_34,
  3, 147, :_reduce_35,
  3, 147, :_reduce_36,
  1, 147, :_reduce_none,
  1, 166, :_reduce_none,
  3, 166, :_reduce_39,
  3, 166, :_reduce_40,
  2, 166, :_reduce_41,
  2, 166, :_reduce_42,
  1, 166, :_reduce_none,
  1, 156, :_reduce_none,
  1, 158, :_reduce_none,
  1, 158, :_reduce_none,
  2, 158, :_reduce_47,
  2, 158, :_reduce_48,
  2, 158, :_reduce_49,
  1, 170, :_reduce_none,
  4, 170, :_reduce_none,
  4, 170, :_reduce_none,
  4, 170, :_reduce_none,
  4, 175, :_reduce_54,
  2, 169, :_reduce_55,
  3, 169, :_reduce_56,
  4, 169, :_reduce_57,
  5, 169, :_reduce_none,
  4, 169, :_reduce_59,
  5, 169, :_reduce_none,
  4, 169, :_reduce_61,
  5, 169, :_reduce_none,
  2, 169, :_reduce_63,
  2, 169, :_reduce_64,
  1, 159, :_reduce_65,
  3, 159, :_reduce_66,
  1, 179, :_reduce_67,
  3, 179, :_reduce_68,
  1, 178, :_reduce_69,
  2, 178, :_reduce_70,
  3, 178, :_reduce_71,
  5, 178, :_reduce_72,
  2, 178, :_reduce_73,
  4, 178, :_reduce_74,
  2, 178, :_reduce_75,
  4, 178, :_reduce_76,
  1, 178, :_reduce_77,
  3, 178, :_reduce_78,
  1, 181, :_reduce_79,
  3, 181, :_reduce_80,
  2, 180, :_reduce_81,
  3, 180, :_reduce_82,
  1, 183, :_reduce_83,
  3, 183, :_reduce_84,
  1, 182, :_reduce_85,
  4, 182, :_reduce_86,
  3, 182, :_reduce_87,
  3, 182, :_reduce_none,
  3, 182, :_reduce_none,
  3, 182, :_reduce_none,
  2, 182, :_reduce_none,
  1, 182, :_reduce_none,
  1, 157, :_reduce_93,
  4, 157, :_reduce_94,
  4, 157, :_reduce_95,
  3, 157, :_reduce_96,
  3, 157, :_reduce_97,
  3, 157, :_reduce_98,
  3, 157, :_reduce_99,
  2, 157, :_reduce_100,
  1, 157, :_reduce_none,
  1, 185, :_reduce_none,
  2, 186, :_reduce_103,
  1, 186, :_reduce_104,
  3, 186, :_reduce_105,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_109,
  1, 187, :_reduce_110,
  1, 154, :_reduce_111,
  1, 154, :_reduce_none,
  1, 155, :_reduce_113,
  3, 155, :_reduce_114,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  3, 168, :_reduce_189,
  5, 168, :_reduce_190,
  3, 168, :_reduce_191,
  6, 168, :_reduce_192,
  6, 168, :_reduce_193,
  5, 168, :_reduce_194,
  5, 168, :_reduce_none,
  5, 168, :_reduce_none,
  5, 168, :_reduce_none,
  4, 168, :_reduce_none,
  3, 168, :_reduce_none,
  3, 168, :_reduce_200,
  3, 168, :_reduce_201,
  3, 168, :_reduce_202,
  3, 168, :_reduce_203,
  3, 168, :_reduce_204,
  3, 168, :_reduce_205,
  3, 168, :_reduce_206,
  3, 168, :_reduce_207,
  4, 168, :_reduce_208,
  4, 168, :_reduce_209,
  2, 168, :_reduce_210,
  2, 168, :_reduce_211,
  3, 168, :_reduce_212,
  3, 168, :_reduce_213,
  3, 168, :_reduce_214,
  3, 168, :_reduce_215,
  3, 168, :_reduce_216,
  3, 168, :_reduce_217,
  3, 168, :_reduce_218,
  3, 168, :_reduce_219,
  3, 168, :_reduce_220,
  3, 168, :_reduce_221,
  3, 168, :_reduce_222,
  3, 168, :_reduce_223,
  3, 168, :_reduce_224,
  2, 168, :_reduce_225,
  2, 168, :_reduce_226,
  3, 168, :_reduce_227,
  3, 168, :_reduce_228,
  3, 168, :_reduce_229,
  3, 168, :_reduce_230,
  3, 168, :_reduce_231,
  0, 193, :_reduce_232,
  0, 194, :_reduce_233,
  7, 168, :_reduce_234,
  1, 168, :_reduce_none,
  1, 165, :_reduce_none,
  1, 162, :_reduce_237,
  2, 162, :_reduce_238,
  2, 162, :_reduce_239,
  4, 162, :_reduce_240,
  2, 162, :_reduce_241,
  3, 162, :_reduce_242,
  3, 200, :_reduce_243,
  2, 202, :_reduce_none,
  1, 203, :_reduce_245,
  1, 203, :_reduce_none,
  1, 201, :_reduce_247,
  1, 201, :_reduce_none,
  2, 201, :_reduce_249,
  4, 201, :_reduce_250,
  2, 201, :_reduce_251,
  1, 171, :_reduce_252,
  2, 171, :_reduce_253,
  2, 171, :_reduce_254,
  4, 171, :_reduce_255,
  1, 171, :_reduce_256,
  4, 205, :_reduce_none,
  1, 205, :_reduce_none,
  0, 207, :_reduce_259,
  2, 174, :_reduce_260,
  1, 206, :_reduce_none,
  2, 206, :_reduce_262,
  3, 206, :_reduce_263,
  2, 199, :_reduce_264,
  2, 204, :_reduce_265,
  0, 204, :_reduce_266,
  1, 196, :_reduce_267,
  2, 196, :_reduce_268,
  3, 196, :_reduce_269,
  4, 196, :_reduce_270,
  3, 164, :_reduce_271,
  4, 164, :_reduce_272,
  2, 164, :_reduce_273,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  0, 229, :_reduce_283,
  4, 192, :_reduce_284,
  0, 230, :_reduce_285,
  5, 192, :_reduce_286,
  3, 192, :_reduce_287,
  3, 192, :_reduce_288,
  2, 192, :_reduce_289,
  4, 192, :_reduce_290,
  4, 192, :_reduce_291,
  3, 192, :_reduce_292,
  3, 192, :_reduce_293,
  1, 192, :_reduce_294,
  4, 192, :_reduce_295,
  3, 192, :_reduce_296,
  1, 192, :_reduce_297,
  5, 192, :_reduce_298,
  4, 192, :_reduce_299,
  3, 192, :_reduce_300,
  2, 192, :_reduce_301,
  1, 192, :_reduce_none,
  2, 192, :_reduce_303,
  2, 192, :_reduce_304,
  6, 192, :_reduce_305,
  6, 192, :_reduce_306,
  0, 231, :_reduce_307,
  0, 232, :_reduce_308,
  7, 192, :_reduce_309,
  0, 233, :_reduce_310,
  0, 234, :_reduce_311,
  7, 192, :_reduce_312,
  5, 192, :_reduce_313,
  4, 192, :_reduce_314,
  5, 192, :_reduce_315,
  0, 235, :_reduce_316,
  0, 236, :_reduce_317,
  9, 192, :_reduce_318,
  0, 237, :_reduce_319,
  6, 192, :_reduce_320,
  0, 238, :_reduce_321,
  0, 239, :_reduce_322,
  8, 192, :_reduce_323,
  0, 240, :_reduce_324,
  0, 241, :_reduce_325,
  6, 192, :_reduce_326,
  0, 242, :_reduce_327,
  6, 192, :_reduce_328,
  0, 243, :_reduce_329,
  0, 244, :_reduce_330,
  9, 192, :_reduce_331,
  1, 192, :_reduce_332,
  1, 192, :_reduce_333,
  1, 192, :_reduce_334,
  1, 192, :_reduce_none,
  1, 161, :_reduce_none,
  1, 219, :_reduce_none,
  1, 219, :_reduce_none,
  1, 219, :_reduce_none,
  2, 219, :_reduce_none,
  1, 221, :_reduce_none,
  1, 221, :_reduce_none,
  1, 221, :_reduce_none,
  2, 218, :_reduce_344,
  3, 245, :_reduce_345,
  2, 245, :_reduce_346,
  1, 245, :_reduce_none,
  1, 245, :_reduce_none,
  3, 246, :_reduce_349,
  3, 246, :_reduce_350,
  1, 220, :_reduce_351,
  5, 220, :_reduce_352,
  1, 151, :_reduce_none,
  2, 151, :_reduce_354,
  1, 248, :_reduce_355,
  3, 248, :_reduce_356,
  3, 249, :_reduce_357,
  1, 176, :_reduce_none,
  2, 176, :_reduce_359,
  1, 176, :_reduce_360,
  3, 176, :_reduce_361,
  4, 250, :_reduce_362,
  2, 250, :_reduce_363,
  2, 250, :_reduce_364,
  1, 250, :_reduce_365,
  2, 255, :_reduce_366,
  1, 255, :_reduce_367,
  6, 247, :_reduce_368,
  8, 247, :_reduce_369,
  4, 247, :_reduce_370,
  6, 247, :_reduce_371,
  4, 247, :_reduce_372,
  2, 247, :_reduce_373,
  6, 247, :_reduce_374,
  2, 247, :_reduce_375,
  4, 247, :_reduce_376,
  6, 247, :_reduce_377,
  2, 247, :_reduce_378,
  4, 247, :_reduce_379,
  2, 247, :_reduce_380,
  4, 247, :_reduce_381,
  1, 247, :_reduce_382,
  0, 259, :_reduce_383,
  5, 258, :_reduce_384,
  2, 172, :_reduce_385,
  4, 172, :_reduce_none,
  4, 172, :_reduce_none,
  4, 172, :_reduce_none,
  2, 217, :_reduce_389,
  4, 217, :_reduce_390,
  4, 217, :_reduce_391,
  3, 217, :_reduce_392,
  4, 217, :_reduce_393,
  3, 217, :_reduce_394,
  2, 217, :_reduce_395,
  1, 217, :_reduce_396,
  0, 261, :_reduce_397,
  5, 216, :_reduce_398,
  0, 262, :_reduce_399,
  5, 216, :_reduce_400,
  0, 264, :_reduce_401,
  6, 222, :_reduce_402,
  1, 263, :_reduce_403,
  1, 263, :_reduce_none,
  6, 150, :_reduce_405,
  0, 150, :_reduce_406,
  1, 265, :_reduce_407,
  1, 265, :_reduce_none,
  1, 265, :_reduce_none,
  2, 266, :_reduce_410,
  1, 266, :_reduce_411,
  2, 152, :_reduce_412,
  1, 152, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 209, :_reduce_417,
  1, 269, :_reduce_none,
  2, 269, :_reduce_419,
  3, 270, :_reduce_420,
  1, 270, :_reduce_421,
  3, 210, :_reduce_422,
  3, 211, :_reduce_423,
  3, 212, :_reduce_424,
  3, 212, :_reduce_425,
  1, 273, :_reduce_426,
  3, 273, :_reduce_427,
  1, 274, :_reduce_428,
  2, 274, :_reduce_429,
  3, 213, :_reduce_430,
  3, 213, :_reduce_431,
  1, 276, :_reduce_432,
  3, 276, :_reduce_433,
  1, 271, :_reduce_434,
  2, 271, :_reduce_435,
  1, 272, :_reduce_436,
  2, 272, :_reduce_437,
  1, 275, :_reduce_438,
  0, 278, :_reduce_439,
  3, 275, :_reduce_440,
  0, 279, :_reduce_441,
  4, 275, :_reduce_442,
  1, 277, :_reduce_443,
  1, 277, :_reduce_444,
  1, 277, :_reduce_445,
  1, 277, :_reduce_none,
  2, 190, :_reduce_447,
  1, 190, :_reduce_448,
  1, 280, :_reduce_none,
  1, 280, :_reduce_none,
  1, 280, :_reduce_none,
  1, 280, :_reduce_none,
  3, 268, :_reduce_453,
  1, 267, :_reduce_454,
  1, 267, :_reduce_455,
  2, 267, :_reduce_456,
  2, 267, :_reduce_457,
  2, 267, :_reduce_458,
  2, 267, :_reduce_459,
  1, 184, :_reduce_460,
  1, 184, :_reduce_461,
  1, 184, :_reduce_462,
  1, 184, :_reduce_463,
  1, 184, :_reduce_464,
  1, 184, :_reduce_465,
  1, 184, :_reduce_466,
  1, 184, :_reduce_467,
  1, 184, :_reduce_468,
  1, 184, :_reduce_469,
  1, 184, :_reduce_470,
  1, 214, :_reduce_471,
  1, 160, :_reduce_472,
  1, 163, :_reduce_473,
  1, 163, :_reduce_none,
  1, 224, :_reduce_475,
  3, 224, :_reduce_476,
  2, 224, :_reduce_477,
  4, 226, :_reduce_478,
  2, 226, :_reduce_479,
  2, 282, :_reduce_480,
  1, 282, :_reduce_481,
  1, 251, :_reduce_482,
  3, 251, :_reduce_483,
  1, 284, :_reduce_none,
  1, 284, :_reduce_none,
  2, 252, :_reduce_486,
  1, 252, :_reduce_487,
  1, 283, :_reduce_488,
  2, 285, :_reduce_489,
  1, 285, :_reduce_490,
  1, 286, :_reduce_491,
  3, 286, :_reduce_492,
  4, 287, :_reduce_493,
  2, 287, :_reduce_494,
  2, 287, :_reduce_495,
  1, 287, :_reduce_496,
  2, 288, :_reduce_497,
  0, 288, :_reduce_498,
  6, 281, :_reduce_499,
  4, 281, :_reduce_500,
  4, 281, :_reduce_501,
  2, 281, :_reduce_502,
  4, 281, :_reduce_503,
  2, 281, :_reduce_504,
  2, 281, :_reduce_505,
  1, 281, :_reduce_506,
  0, 281, :_reduce_507,
  1, 290, :_reduce_none,
  1, 290, :_reduce_509,
  1, 291, :_reduce_510,
  1, 291, :_reduce_511,
  1, 291, :_reduce_512,
  1, 291, :_reduce_513,
  1, 292, :_reduce_514,
  3, 292, :_reduce_515,
  1, 223, :_reduce_none,
  1, 223, :_reduce_none,
  1, 294, :_reduce_518,
  3, 294, :_reduce_none,
  1, 295, :_reduce_520,
  3, 295, :_reduce_521,
  1, 293, :_reduce_none,
  4, 293, :_reduce_none,
  3, 293, :_reduce_none,
  2, 293, :_reduce_none,
  1, 293, :_reduce_none,
  1, 256, :_reduce_527,
  3, 256, :_reduce_528,
  3, 296, :_reduce_529,
  1, 289, :_reduce_530,
  3, 289, :_reduce_531,
  1, 297, :_reduce_none,
  1, 297, :_reduce_none,
  2, 257, :_reduce_534,
  1, 257, :_reduce_535,
  1, 298, :_reduce_none,
  1, 298, :_reduce_none,
  2, 254, :_reduce_538,
  2, 253, :_reduce_539,
  0, 253, :_reduce_540,
  1, 227, :_reduce_541,
  4, 227, :_reduce_542,
  0, 215, :_reduce_543,
  2, 215, :_reduce_544,
  1, 198, :_reduce_545,
  3, 198, :_reduce_546,
  3, 299, :_reduce_547,
  2, 299, :_reduce_548,
  4, 299, :_reduce_549,
  1, 177, :_reduce_none,
  1, 177, :_reduce_none,
  1, 177, :_reduce_none,
  1, 173, :_reduce_none,
  1, 173, :_reduce_none,
  1, 173, :_reduce_none,
  1, 173, :_reduce_none,
  1, 260, :_reduce_none,
  1, 260, :_reduce_none,
  1, 260, :_reduce_none,
  1, 228, :_reduce_none,
  1, 228, :_reduce_none,
  0, 144, :_reduce_none,
  1, 144, :_reduce_none,
  0, 191, :_reduce_none,
  1, 191, :_reduce_none,
  0, 197, :_reduce_none,
  1, 197, :_reduce_none,
  1, 197, :_reduce_none,
  1, 225, :_reduce_none,
  1, 225, :_reduce_none,
  1, 146, :_reduce_none,
  2, 146, :_reduce_none,
  0, 195, :_reduce_573 ]

racc_reduce_n = 574

racc_shift_n = 1004

racc_token_table = {
  false => 0,
  :error => 1,
  :kCLASS => 2,
  :kMODULE => 3,
  :kDEF => 4,
  :kUNDEF => 5,
  :kBEGIN => 6,
  :kRESCUE => 7,
  :kENSURE => 8,
  :kEND => 9,
  :kIF => 10,
  :kUNLESS => 11,
  :kTHEN => 12,
  :kELSIF => 13,
  :kELSE => 14,
  :kCASE => 15,
  :kWHEN => 16,
  :kWHILE => 17,
  :kUNTIL => 18,
  :kFOR => 19,
  :kBREAK => 20,
  :kNEXT => 21,
  :kREDO => 22,
  :kRETRY => 23,
  :kIN => 24,
  :kDO => 25,
  :kDO_COND => 26,
  :kDO_BLOCK => 27,
  :kDO_LAMBDA => 28,
  :kRETURN => 29,
  :kYIELD => 30,
  :kSUPER => 31,
  :kSELF => 32,
  :kNIL => 33,
  :kTRUE => 34,
  :kFALSE => 35,
  :kAND => 36,
  :kOR => 37,
  :kNOT => 38,
  :kIF_MOD => 39,
  :kUNLESS_MOD => 40,
  :kWHILE_MOD => 41,
  :kUNTIL_MOD => 42,
  :kRESCUE_MOD => 43,
  :kALIAS => 44,
  :kDEFINED => 45,
  :klBEGIN => 46,
  :klEND => 47,
  :k__LINE__ => 48,
  :k__FILE__ => 49,
  :tIDENTIFIER => 50,
  :tFID => 51,
  :tGVAR => 52,
  :tIVAR => 53,
  :tCONSTANT => 54,
  :tLABEL => 55,
  :tCVAR => 56,
  :tNTH_REF => 57,
  :tBACK_REF => 58,
  :tSTRING_CONTENT => 59,
  :tINTEGER => 60,
  :tFLOAT => 61,
  :tREGEXP_END => 62,
  :tUPLUS => 63,
  :tUMINUS => 64,
  :tPOW => 65,
  :tCMP => 66,
  :tEQ => 67,
  :tEQQ => 68,
  :tNEQ => 69,
  :tGEQ => 70,
  :tLEQ => 71,
  :tANDOP => 72,
  :tOROP => 73,
  :tMATCH => 74,
  :tNMATCH => 75,
  :tJSDOT => 76,
  :tDOT => 77,
  :tDOT2 => 78,
  :tDOT3 => 79,
  :tAREF => 80,
  :tASET => 81,
  :tLSHFT => 82,
  :tRSHFT => 83,
  :tCOLON2 => 84,
  :tCOLON3 => 85,
  :tOP_ASGN => 86,
  :tASSOC => 87,
  :tLPAREN => 88,
  :tLPAREN2 => 89,
  :tRPAREN => 90,
  :tLPAREN_ARG => 91,
  :tRBRACK => 92,
  :tLBRACE => 93,
  :tLBRACE_ARG => 94,
  :tSTAR => 95,
  :tSTAR2 => 96,
  :tAMPER => 97,
  :tAMPER2 => 98,
  :tTILDE => 99,
  :tPERCENT => 100,
  :tDIVIDE => 101,
  :tPLUS => 102,
  :tMINUS => 103,
  :tLT => 104,
  :tGT => 105,
  :tPIPE => 106,
  :tBANG => 107,
  :tCARET => 108,
  :tLCURLY => 109,
  :tRCURLY => 110,
  :tBACK_REF2 => 111,
  :tSYMBEG => 112,
  :tSTRING_BEG => 113,
  :tXSTRING_BEG => 114,
  :tREGEXP_BEG => 115,
  :tWORDS_BEG => 116,
  :tAWORDS_BEG => 117,
  :tSTRING_DBEG => 118,
  :tSTRING_DVAR => 119,
  :tSTRING_END => 120,
  :tSTRING => 121,
  :tSYMBOL => 122,
  :tNL => 123,
  :tEH => 124,
  :tCOLON => 125,
  :tCOMMA => 126,
  :tSPACE => 127,
  :tSEMI => 128,
  :tLAMBDA => 129,
  :tLAMBEG => 130,
  :tLBRACK2 => 131,
  :tLBRACK => 132,
  :tJSLBRACK => 133,
  :tDSTAR => 134,
  :tLABEL_END => 135,
  :tEQL => 136,
  :tLOWEST => 137,
  "-@NUM" => 138,
  "+@NUM" => 139 }

racc_nt_base = 140

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "kCLASS",
  "kMODULE",
  "kDEF",
  "kUNDEF",
  "kBEGIN",
  "kRESCUE",
  "kENSURE",
  "kEND",
  "kIF",
  "kUNLESS",
  "kTHEN",
  "kELSIF",
  "kELSE",
  "kCASE",
  "kWHEN",
  "kWHILE",
  "kUNTIL",
  "kFOR",
  "kBREAK",
  "kNEXT",
  "kREDO",
  "kRETRY",
  "kIN",
  "kDO",
  "kDO_COND",
  "kDO_BLOCK",
  "kDO_LAMBDA",
  "kRETURN",
  "kYIELD",
  "kSUPER",
  "kSELF",
  "kNIL",
  "kTRUE",
  "kFALSE",
  "kAND",
  "kOR",
  "kNOT",
  "kIF_MOD",
  "kUNLESS_MOD",
  "kWHILE_MOD",
  "kUNTIL_MOD",
  "kRESCUE_MOD",
  "kALIAS",
  "kDEFINED",
  "klBEGIN",
  "klEND",
  "k__LINE__",
  "k__FILE__",
  "tIDENTIFIER",
  "tFID",
  "tGVAR",
  "tIVAR",
  "tCONSTANT",
  "tLABEL",
  "tCVAR",
  "tNTH_REF",
  "tBACK_REF",
  "tSTRING_CONTENT",
  "tINTEGER",
  "tFLOAT",
  "tREGEXP_END",
  "tUPLUS",
  "tUMINUS",
  "tPOW",
  "tCMP",
  "tEQ",
  "tEQQ",
  "tNEQ",
  "tGEQ",
  "tLEQ",
  "tANDOP",
  "tOROP",
  "tMATCH",
  "tNMATCH",
  "tJSDOT",
  "tDOT",
  "tDOT2",
  "tDOT3",
  "tAREF",
  "tASET",
  "tLSHFT",
  "tRSHFT",
  "tCOLON2",
  "tCOLON3",
  "tOP_ASGN",
  "tASSOC",
  "tLPAREN",
  "tLPAREN2",
  "tRPAREN",
  "tLPAREN_ARG",
  "tRBRACK",
  "tLBRACE",
  "tLBRACE_ARG",
  "tSTAR",
  "tSTAR2",
  "tAMPER",
  "tAMPER2",
  "tTILDE",
  "tPERCENT",
  "tDIVIDE",
  "tPLUS",
  "tMINUS",
  "tLT",
  "tGT",
  "tPIPE",
  "tBANG",
  "tCARET",
  "tLCURLY",
  "tRCURLY",
  "tBACK_REF2",
  "tSYMBEG",
  "tSTRING_BEG",
  "tXSTRING_BEG",
  "tREGEXP_BEG",
  "tWORDS_BEG",
  "tAWORDS_BEG",
  "tSTRING_DBEG",
  "tSTRING_DVAR",
  "tSTRING_END",
  "tSTRING",
  "tSYMBOL",
  "tNL",
  "tEH",
  "tCOLON",
  "tCOMMA",
  "tSPACE",
  "tSEMI",
  "tLAMBDA",
  "tLAMBEG",
  "tLBRACK2",
  "tLBRACK",
  "tJSLBRACK",
  "tDSTAR",
  "tLABEL_END",
  "tEQL",
  "tLOWEST",
  "\"-@NUM\"",
  "\"+@NUM\"",
  "$start",
  "program",
  "top_compstmt",
  "top_stmts",
  "opt_terms",
  "top_stmt",
  "terms",
  "stmt",
  "bodystmt",
  "compstmt",
  "opt_rescue",
  "opt_else",
  "opt_ensure",
  "stmts",
  "fitem",
  "undef_list",
  "expr_value",
  "lhs",
  "command_call",
  "mlhs",
  "var_lhs",
  "primary_value",
  "aref_args",
  "backref",
  "mrhs",
  "arg_value",
  "expr",
  "@1",
  "arg",
  "command",
  "block_command",
  "call_args",
  "block_call",
  "operation2",
  "command_args",
  "cmd_brace_block",
  "opt_block_var",
  "operation",
  "mlhs_basic",
  "mlhs_entry",
  "mlhs_head",
  "mlhs_item",
  "mlhs_node",
  "mlhs_post",
  "variable",
  "cname",
  "cpath",
  "fname",
  "op",
  "reswords",
  "symbol",
  "opt_nl",
  "primary",
  "@2",
  "@3",
  "none",
  "args",
  "trailer",
  "assocs",
  "block_arg",
  "paren_args",
  "opt_call_args",
  "rparen",
  "opt_paren_args",
  "opt_block_arg",
  "call_args2",
  "open_args",
  "@4",
  "literal",
  "strings",
  "xstring",
  "regexp",
  "words",
  "awords",
  "var_ref",
  "assoc_list",
  "brace_block",
  "method_call",
  "lambda",
  "then",
  "if_tail",
  "do",
  "case_body",
  "for_var",
  "superclass",
  "term",
  "f_arglist",
  "singleton",
  "dot_or_colon",
  "@5",
  "@6",
  "@7",
  "@8",
  "@9",
  "@10",
  "@11",
  "@12",
  "@13",
  "@14",
  "@15",
  "@16",
  "@17",
  "@18",
  "@19",
  "@20",
  "f_larglist",
  "lambda_body",
  "block_param",
  "f_block_optarg",
  "f_block_opt",
  "block_args_tail",
  "f_block_kwarg",
  "f_kwrest",
  "opt_f_block_arg",
  "f_block_arg",
  "opt_block_args_tail",
  "f_arg",
  "f_rest_arg",
  "do_block",
  "@21",
  "operation3",
  "@22",
  "@23",
  "cases",
  "@24",
  "exc_list",
  "exc_var",
  "numeric",
  "dsym",
  "string",
  "string1",
  "string_contents",
  "xstring_contents",
  "word_list",
  "word",
  "string_content",
  "qword_list",
  "string_dvar",
  "@25",
  "@26",
  "sym",
  "f_args",
  "f_block_kw",
  "f_label",
  "kwrest_mark",
  "f_kw",
  "f_kwarg",
  "args_tail",
  "opt_args_tail",
  "f_optarg",
  "f_norm_arg",
  "f_bad_arg",
  "f_arg_item",
  "f_margs",
  "f_marg",
  "f_marg_list",
  "f_opt",
  "restarg_mark",
  "blkarg_mark",
  "assoc" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

def _reduce_2(val, _values, result)
                      result = new_compstmt val[0]
                    
    result
end

def _reduce_3(val, _values, result)
                      result = new_block
                    
    result
end

def _reduce_4(val, _values, result)
                      result = new_block val[0]
                    
    result
end

def _reduce_5(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

# reduce 6 omitted

def _reduce_7(val, _values, result)
                      result = val[2]
                    
    result
end

def _reduce_8(val, _values, result)
                      result = new_body(val[0], val[1], val[2], val[3])
                    
    result
end

def _reduce_9(val, _values, result)
                      result = new_compstmt val[0]
                    
    result
end

def _reduce_10(val, _values, result)
                      result = new_block
                    
    result
end

def _reduce_11(val, _values, result)
                      result = new_block val[0]
                    
    result
end

def _reduce_12(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_13(val, _values, result)
                      lexer.lex_state = :expr_fname
                    
    result
end

def _reduce_14(val, _values, result)
                      result = new_alias(val[0], val[1], val[3])
                    
    result
end

def _reduce_15(val, _values, result)
                      result = s(:valias, value(val[1]).to_sym, value(val[2]).to_sym)
                    
    result
end

# reduce 16 omitted

def _reduce_17(val, _values, result)
                      result = s(:valias, value(val[1]).to_sym, value(val[2]).to_sym)
                    
    result
end

def _reduce_18(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_19(val, _values, result)
                      result = new_if(val[1], val[2], val[0], nil)
                    
    result
end

def _reduce_20(val, _values, result)
                      result = new_if(val[1], val[2], nil, val[0])
                    
    result
end

def _reduce_21(val, _values, result)
                      result = new_while(val[1], val[2], val[0])
                    
    result
end

def _reduce_22(val, _values, result)
                      result = new_until(val[1], val[2], val[0])
                    
    result
end

def _reduce_23(val, _values, result)
                      result = new_rescue_mod(val[1], val[0], val[2])
                    
    result
end

# reduce 24 omitted

def _reduce_25(val, _values, result)
                      result = new_assign(val[0], val[1], val[2])
                    
    result
end

def _reduce_26(val, _values, result)
                      result = s(:masgn, val[0], s(:to_ary, val[2]))
                    
    result
end

def _reduce_27(val, _values, result)
                      result = new_op_asgn val[1], val[0], val[2]
                    
    result
end

# reduce 28 omitted

# reduce 29 omitted

def _reduce_30(val, _values, result)
                      result = s(:op_asgn2, val[0], op_to_setter(val[2]), value(val[3]).to_sym, val[4])
                    
    result
end

# reduce 31 omitted

# reduce 32 omitted

# reduce 33 omitted

def _reduce_34(val, _values, result)
                      result = new_assign val[0], val[1], s(:svalue, val[2])
                    
    result
end

def _reduce_35(val, _values, result)
                      result = s(:masgn, val[0], s(:to_ary, val[2]))
                    
    result
end

def _reduce_36(val, _values, result)
                      result = s(:masgn, val[0], val[2])
                    
    result
end

# reduce 37 omitted

# reduce 38 omitted

def _reduce_39(val, _values, result)
                      result = s(:and, val[0], val[2])
                    
    result
end

def _reduce_40(val, _values, result)
                      result = s(:or, val[0], val[2])
                    
    result
end

def _reduce_41(val, _values, result)
                      result = new_unary_call(['!', []], val[1])
                    
    result
end

def _reduce_42(val, _values, result)
                      result = new_unary_call(val[0], val[1])
                    
    result
end

# reduce 43 omitted

# reduce 44 omitted

# reduce 45 omitted

# reduce 46 omitted

def _reduce_47(val, _values, result)
                      result = new_return(val[0], val[1])
                    
    result
end

def _reduce_48(val, _values, result)
                      result = new_break(val[0], val[1])
                    
    result
end

def _reduce_49(val, _values, result)
                      result = new_next(val[0], val[1])
                    
    result
end

# reduce 50 omitted

# reduce 51 omitted

# reduce 52 omitted

# reduce 53 omitted

def _reduce_54(val, _values, result)
                      result = new_iter(val[1], val[2])

    result
end

def _reduce_55(val, _values, result)
                      result = new_call(nil, val[0], val[1])
                    
    result
end

def _reduce_56(val, _values, result)
                      result = new_call(nil, val[0], val[1]) << val[2]

    result
end

def _reduce_57(val, _values, result)
                      result = new_js_call(val[0], val[2], val[3])
                    
    result
end

# reduce 58 omitted

def _reduce_59(val, _values, result)
                      result = new_call(val[0], val[2], val[3])
                    
    result
end

# reduce 60 omitted

def _reduce_61(val, _values, result)
                    result = new_call(val[0], val[2], val[3])
                  
    result
end

# reduce 62 omitted

def _reduce_63(val, _values, result)
                      result = new_super(val[0], val[1])
                    
    result
end

def _reduce_64(val, _values, result)
                      result = new_yield val[1]
                    
    result
end

def _reduce_65(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_66(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_67(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_68(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_69(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_70(val, _values, result)
                      result = val[0] << val[1]
                    
    result
end

def _reduce_71(val, _values, result)
                      result = val[0] << s(:splat, val[2])
                    
    result
end

def _reduce_72(val, _values, result)
                     result = (val[0] << s(:splat, val[2])).concat(val[4].children)

    result
end

def _reduce_73(val, _values, result)
                      result = val[0] << s(:splat)
                    
    result
end

def _reduce_74(val, _values, result)
                      result = (val[0] << s(:splat)).concat(val[3].children)

    result
end

def _reduce_75(val, _values, result)
                      result = s(:array, s(:splat, val[1]))
                    
    result
end

def _reduce_76(val, _values, result)
                      result = s(:array, s(:splat, val[1])).concat(val[3].children)
                    
    result
end

def _reduce_77(val, _values, result)
                      result = s(:array, s(:splat))

    result
end

def _reduce_78(val, _values, result)
                      result = s(:array, s(:splat)).concat(val[2].children)
                    
    result
end

def _reduce_79(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_80(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_81(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

def _reduce_82(val, _values, result)
                      result = val[0] << val[1]

    result
end

def _reduce_83(val, _values, result)
                      result = s(:array, val[0])

    result
end

def _reduce_84(val, _values, result)
                      result = val[0] << val[2]
                    
    result
end

def _reduce_85(val, _values, result)
                      result = new_assignable val[0]

    result
end

def _reduce_86(val, _values, result)
                      args = val[2] ? val[2] : []
                      result = s(:attrasgn, val[0], :[]=, s(:arglist, *args))
                    
    result
end

def _reduce_87(val, _values, result)
                      result = new_call val[0], val[2], []
                    
    result
end

# reduce 88 omitted

# reduce 89 omitted

# reduce 90 omitted

# reduce 91 omitted

# reduce 92 omitted

def _reduce_93(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_94(val, _values, result)
                      result = new_js_attrasgn(val[0], val[2])
                    
    result
end

def _reduce_95(val, _values, result)
                      result = new_attrasgn(val[0], :[]=, val[2])
                    
    result
end

def _reduce_96(val, _values, result)
                      result = new_attrasgn(val[0], op_to_setter(val[2]))
                    
    result
end

def _reduce_97(val, _values, result)
                      result = new_attrasgn(val[0], op_to_setter(val[2]))
                    
    result
end

def _reduce_98(val, _values, result)
                      result = new_attrasgn(val[0], op_to_setter(val[2]))
                    
    result
end

def _reduce_99(val, _values, result)
                      result = new_colon2(val[0], val[1], val[2])
                    
    result
end

def _reduce_100(val, _values, result)
                      result = new_colon3(val[0], val[1])

    result
end

# reduce 101 omitted

# reduce 102 omitted

def _reduce_103(val, _values, result)
                      result = new_colon3(val[0], val[1])
                    
    result
end

def _reduce_104(val, _values, result)
                      result = new_const(val[0])
                    
    result
end

def _reduce_105(val, _values, result)
                      result = new_colon2(val[0], val[1], val[2])

    result
end

# reduce 106 omitted

# reduce 107 omitted

# reduce 108 omitted

def _reduce_109(val, _values, result)
                      lexer.lex_state = :expr_end
                      result = val[0]
                    
    result
end

def _reduce_110(val, _values, result)
                      lexer.lex_state = :expr_end
                      result = val[0]

    result
end

def _reduce_111(val, _values, result)
                      result = new_sym(val[0])
                    
    result
end

# reduce 112 omitted

def _reduce_113(val, _values, result)
                      result = s(:undef, val[0])
                    
    result
end

def _reduce_114(val, _values, result)
                      result = val[0] << val[2]

    result
end

# reduce 115 omitted

# reduce 116 omitted

# reduce 117 omitted

# reduce 118 omitted

# reduce 119 omitted

# reduce 120 omitted

# reduce 121 omitted

# reduce 122 omitted

# reduce 123 omitted

# reduce 124 omitted

# reduce 125 omitted

# reduce 126 omitted

# reduce 127 omitted

# reduce 128 omitted

# reduce 129 omitted

# reduce 130 omitted

# reduce 131 omitted

# reduce 132 omitted

# reduce 133 omitted

# reduce 134 omitted

# reduce 135 omitted

# reduce 136 omitted

# reduce 137 omitted

# reduce 138 omitted

# reduce 139 omitted

# reduce 140 omitted

# reduce 141 omitted

# reduce 142 omitted

# reduce 143 omitted

# reduce 144 omitted

# reduce 145 omitted

# reduce 146 omitted

# reduce 147 omitted

# reduce 148 omitted

# reduce 149 omitted

# reduce 150 omitted

# reduce 151 omitted

# reduce 152 omitted

# reduce 153 omitted

# reduce 154 omitted

# reduce 155 omitted

# reduce 156 omitted

# reduce 157 omitted

# reduce 158 omitted

# reduce 159 omitted

# reduce 160 omitted

# reduce 161 omitted

# reduce 162 omitted

# reduce 163 omitted

# reduce 164 omitted

# reduce 165 omitted

# reduce 166 omitted

# reduce 167 omitted

# reduce 168 omitted

# reduce 169 omitted

# reduce 170 omitted

# reduce 171 omitted

# reduce 172 omitted

# reduce 173 omitted

# reduce 174 omitted

# reduce 175 omitted

# reduce 176 omitted

# reduce 177 omitted

# reduce 178 omitted

# reduce 179 omitted

# reduce 180 omitted

# reduce 181 omitted

# reduce 182 omitted

# reduce 183 omitted

# reduce 184 omitted

# reduce 185 omitted

# reduce 186 omitted

# reduce 187 omitted

# reduce 188 omitted

def _reduce_189(val, _values, result)
                      result = new_assign(val[0], val[1], val[2])
                    
    result
end

def _reduce_190(val, _values, result)
                      result = new_assign val[0], val[1], s(:rescue_mod, val[2], val[4])
                    
    result
end

def _reduce_191(val, _values, result)
                      result = new_op_asgn val[1], val[0], val[2]
                    
    result
end

def _reduce_192(val, _values, result)
                      result = new_op_asgn1(val[0], val[2], val[4], val[5])
                    
    result
end

def _reduce_193(val, _values, result)
                      raise ".JS[...] #{val[4]} is not supported"
                    
    result
end

def _reduce_194(val, _values, result)
                      result = s(:op_asgn2, val[0], op_to_setter(val[2]), value(val[3]).to_sym, val[4])

    result
end

# reduce 195 omitted

# reduce 196 omitted

# reduce 197 omitted

# reduce 198 omitted

# reduce 199 omitted

def _reduce_200(val, _values, result)
                      result = new_irange(val[0], val[1], val[2])
                    
    result
end

def _reduce_201(val, _values, result)
                      result = new_erange(val[0], val[1], val[2])
                    
    result
end

def _reduce_202(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_203(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_204(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_205(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_206(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_207(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_208(val, _values, result)
                      result = new_call new_binary_call(new_int(val[1]), val[2], val[3]), [:"-@", []], []
                    
    result
end

def _reduce_209(val, _values, result)
                      result = new_call new_binary_call(new_float(val[1]), val[2], val[3]), [:"-@", []], []

    result
end

def _reduce_210(val, _values, result)
                      result = new_call val[1], [:"+@", []], []
                      if [:int, :float].include? val[1].type
                        result = val[1]
                      end
                    
    result
end

def _reduce_211(val, _values, result)
                      result = new_call val[1], [:"-@", []], []
                      if val[1].type == :int
                        val[1][1] = -val[1][1]
                        result = val[1]
                      elsif val[1].type == :float
                        val[1][1] = -val[1][1].to_f
                        result = val[1]
                      end
                    
    result
end

def _reduce_212(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_213(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_214(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_215(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_216(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_217(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_218(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_219(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_220(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_221(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_222(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_223(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_224(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_225(val, _values, result)
                      result = new_unary_call(val[0], val[1])
                    
    result
end

def _reduce_226(val, _values, result)
                      result = new_unary_call(val[0], val[1])
                    
    result
end

def _reduce_227(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_228(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_229(val, _values, result)
                      result = new_and(val[0], val[1], val[2])
                    
    result
end

def _reduce_230(val, _values, result)
                      result = new_or(val[0], val[1], val[2])
                    
    result
end

def _reduce_231(val, _values, result)
                      result = s(:defined, val[2])

    result
end

def _reduce_232(val, _values, result)
 lexer.cond_push 1
    result
end

def _reduce_233(val, _values, result)
 lexer.cond_pop
    result
end

def _reduce_234(val, _values, result)
                      result = new_if(val[1], val[0], val[3], val[6])
                    
    result
end

# reduce 235 omitted

# reduce 236 omitted

def _reduce_237(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_238(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_239(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_240(val, _values, result)
                      val[0] << s(:hash, *val[2])
                      result = val[0]
                    
    result
end

def _reduce_241(val, _values, result)
                      result = [s(:hash, *val[0])]
                    
    result
end

def _reduce_242(val, _values, result)
                      result = val[0] << val[2]

    result
end

def _reduce_243(val, _values, result)
                      result = val[1]
                    
    result
end

# reduce 244 omitted

def _reduce_245(val, _values, result)
                      result = []
                    
    result
end

# reduce 246 omitted

def _reduce_247(val, _values, result)
                      result = []
                    
    result
end

# reduce 248 omitted

def _reduce_249(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_250(val, _values, result)
                      result = val[0]
                      result << new_hash(nil, val[2], nil)
                    
    result
end

def _reduce_251(val, _values, result)
                      result = [new_hash(nil, val[0], nil)]
                    
    result
end

def _reduce_252(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_253(val, _values, result)
                      result = val[0]
                      add_block_pass val[0], val[1]
                    
    result
end

def _reduce_254(val, _values, result)
                      result = [new_hash(nil, val[0], nil)]
                      add_block_pass result, val[1]
                    
    result
end

def _reduce_255(val, _values, result)
                      result = val[0]
                      result << new_hash(nil, val[2], nil)
                      result << val[3] if val[3]

    result
end

def _reduce_256(val, _values, result)
                      result = []
                      add_block_pass result, val[0]
                    
    result
end

# reduce 257 omitted

# reduce 258 omitted

def _reduce_259(val, _values, result)
                      lexer.cmdarg_push 1

    result
end

def _reduce_260(val, _values, result)
                      lexer.cmdarg_pop
                      result = val[1]
                    
    result
end

# reduce 261 omitted

def _reduce_262(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_263(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_264(val, _values, result)
                      result = new_block_pass(val[0], val[1])
                    
    result
end

def _reduce_265(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_266(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_267(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_268(val, _values, result)
                      result = [new_splat(val[0], val[1])]
                    
    result
end

def _reduce_269(val, _values, result)
                      result = val[0] << val[2]
                    
    result
end

def _reduce_270(val, _values, result)
                      result  = val[0] << new_splat(val[2], val[3])
                    
    result
end

def _reduce_271(val, _values, result)
                      val[0] << val[2]
                      result = s(:array, *val[0])
                    
    result
end

def _reduce_272(val, _values, result)
                      val[0] << s(:splat, val[3])
                      result = s(:array, *val[0])

    result
end

def _reduce_273(val, _values, result)
                      result = s(:splat, val[1])
                    
    result
end

# reduce 274 omitted

# reduce 275 omitted

# reduce 276 omitted

# reduce 277 omitted

# reduce 278 omitted

# reduce 279 omitted

# reduce 280 omitted

# reduce 281 omitted

# reduce 282 omitted

def _reduce_283(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_284(val, _values, result)
                      result = s(:begin, val[2])
                    
    result
end

def _reduce_285(val, _values, result)
 lexer.lex_state = :expr_endarg
    result
end

def _reduce_286(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_287(val, _values, result)
                      result = new_paren(val[0], val[1], val[2])
                    
    result
end

def _reduce_288(val, _values, result)
                      result = new_colon2(val[0], val[1], val[2])
                    
    result
end

def _reduce_289(val, _values, result)
                      result = new_colon3(val[0], val[1])
                    
    result
end

def _reduce_290(val, _values, result)
                      result = new_call val[0], [:[], []], val[2]
                    
    result
end

def _reduce_291(val, _values, result)
                      result = new_js_call val[0], [:[], []], val[2]
                    
    result
end

def _reduce_292(val, _values, result)
                      result = new_array(val[0], val[1], val[2])
                    
    result
end

def _reduce_293(val, _values, result)
                      result = new_hash(val[0], val[1], val[2])
                    
    result
end

def _reduce_294(val, _values, result)
                      result = new_return(val[0])
                    
    result
end

def _reduce_295(val, _values, result)
                      result = new_yield val[2]
                    
    result
end

def _reduce_296(val, _values, result)
                      result = s(:yield)
                    
    result
end

def _reduce_297(val, _values, result)
                      result = s(:yield)
                    
    result
end

def _reduce_298(val, _values, result)
                      result = s(:defined, val[3])
                    
    result
end

def _reduce_299(val, _values, result)
                      result = new_unary_call(['!', []], val[2])

    result
end

def _reduce_300(val, _values, result)
                      result = new_unary_call(['!', []], new_nil(val[0]))

    result
end

def _reduce_301(val, _values, result)
                      result = new_call(nil, val[0], [])
                      result << val[1]
                    
    result
end

# reduce 302 omitted

def _reduce_303(val, _values, result)
                      val[0] << val[1]
                      result = val[0]
                    
    result
end

def _reduce_304(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_305(val, _values, result)
                      result = new_if(val[0], val[1], val[3], val[4])
                    
    result
end

def _reduce_306(val, _values, result)
                      result = new_if(val[0], val[1], val[4], val[3])
                    
    result
end

def _reduce_307(val, _values, result)
                      lexer.cond_push 1
                      result = lexer.line
                    
    result
end

def _reduce_308(val, _values, result)
                      lexer.cond_pop
                    
    result
end

def _reduce_309(val, _values, result)
                      result = s(:while, val[2], val[5])
                    
    result
end

def _reduce_310(val, _values, result)
                      lexer.cond_push 1
                      result = lexer.line
                    
    result
end

def _reduce_311(val, _values, result)
                      lexer.cond_pop
                    
    result
end

def _reduce_312(val, _values, result)
                      result = s(:until, val[2], val[5])
                    
    result
end

def _reduce_313(val, _values, result)
                      result = s(:case, val[1], *val[3])
                    
    result
end

def _reduce_314(val, _values, result)
                      result = s(:case, nil, *val[2])
                    
    result
end

def _reduce_315(val, _values, result)
                      result = s(:case, nil, val[3])
                    
    result
end

def _reduce_316(val, _values, result)
                      lexer.cond_push 1
                      result = lexer.line
                    
    result
end

def _reduce_317(val, _values, result)
                      lexer.cond_pop
                    
    result
end

def _reduce_318(val, _values, result)
                      result = s(:for, val[4], val[1], val[7])
                    
    result
end

def _reduce_319(val, _values, result)
                      # ...
                    
    result
end

def _reduce_320(val, _values, result)
                      result = new_class val[0], val[1], val[2], val[4], val[5]
                    
    result
end

def _reduce_321(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_322(val, _values, result)
                      # ...
                    
    result
end

def _reduce_323(val, _values, result)
                      result = new_sclass(val[0], val[3], val[6], val[7])
                    
    result
end

def _reduce_324(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_325(val, _values, result)
                      # ...
                    
    result
end

def _reduce_326(val, _values, result)
                      result = new_module(val[0], val[2], val[4], val[5])
                    
    result
end

def _reduce_327(val, _values, result)
                      push_scope
                      lexer.lex_state = :expr_endfn
                    
    result
end

def _reduce_328(val, _values, result)
                      result = new_def(val[0], nil, val[1], val[3], val[4], val[5])
                      pop_scope
                    
    result
end

def _reduce_329(val, _values, result)
                       lexer.lex_state = :expr_fname
                    
    result
end

def _reduce_330(val, _values, result)
                      push_scope
                      lexer.lex_state = :expr_endfn
                    
    result
end

def _reduce_331(val, _values, result)
                      result = new_def(val[0], val[1], val[4], val[6], val[7], val[8])
                      pop_scope
                    
    result
end

def _reduce_332(val, _values, result)
                      result = new_break(val[0])

    result
end

def _reduce_333(val, _values, result)
                      result = s(:next)

    result
end

def _reduce_334(val, _values, result)
                      result = s(:redo)
                    
    result
end

# reduce 335 omitted

# reduce 336 omitted

# reduce 337 omitted

# reduce 338 omitted

# reduce 339 omitted

# reduce 340 omitted

# reduce 341 omitted

# reduce 342 omitted

# reduce 343 omitted

def _reduce_344(val, _values, result)
                      result = new_call nil, [:lambda, []], []
                      result << new_iter(val[0], val[1])

    result
end

def _reduce_345(val, _values, result)
                      result = val[1]

    result
end

def _reduce_346(val, _values, result)
                      result = nil

    result
end

# reduce 347 omitted

# reduce 348 omitted

def _reduce_349(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_350(val, _values, result)
                      result = val[1]

    result
end

def _reduce_351(val, _values, result)
                      result = val[0]

    result
end

def _reduce_352(val, _values, result)
                      result = new_if(val[0], val[1], val[3], val[4])
                    
    result
end

# reduce 353 omitted

def _reduce_354(val, _values, result)
                      result = val[1]

    result
end

def _reduce_355(val, _values, result)
                      result = s(:block, val[0])

    result
end

def _reduce_356(val, _values, result)
                      val[0] << val[2]
                      result = val[0]

    result
end

def _reduce_357(val, _values, result)
                      result = new_assign(new_assignable(new_ident(
                                  val[0])), val[1], val[2])
                    
    result
end

# reduce 358 omitted

def _reduce_359(val, _values, result)
                      result = nil

    result
end

def _reduce_360(val, _values, result)
                      result = nil

    result
end

def _reduce_361(val, _values, result)
                      result = val[1]

    result
end

def _reduce_362(val, _values, result)
                      result = s(:array, val[0], val[2])
                      result << s(:block_pass, s(:lasgn, val[3])) if val[3]
                      result

    result
end

def _reduce_363(val, _values, result)
                      result = s(:array, val[0])
                      result << s(:block_pass, s(:lasgn, val[1])) if val[1]
                      result

    result
end

def _reduce_364(val, _values, result)
                      result = s(:array, val[0])
                      result << s(:block_pass, s(:lasgn, val[1])) if val[1]
                      result

    result
end

def _reduce_365(val, _values, result)
                      result = s(:array, s(:block_pass, s(:lasgn, val[0])))

    result
end

def _reduce_366(val, _values, result)
                      result = val[1]

    result
end

def _reduce_367(val, _values, result)
                      nil

    result
end

def _reduce_368(val, _values, result)
                      result = new_block_args(normal_block_args(val[0]),
                                              opt_block_args(val[2]),
                                              rest_block_arg(val[4]),
                                              tail_block_args(val[5]))

    result
end

def _reduce_369(val, _values, result)
                      result = new_block_args(normal_block_args(val[0]),
                                              opt_block_args(val[2]),
                                              rest_block_arg(val[4]),
                                              normal_block_args(val[6]),
                                              tail_block_args(val[7]))

    result
end

def _reduce_370(val, _values, result)
                      result = new_block_args(normal_block_args(val[0]),
                                              opt_block_args(val[2]),
                                              tail_block_args(val[3]))

    result
end

def _reduce_371(val, _values, result)
                      result = new_block_args(normal_block_args(val[0]),
                                              opt_block_args(val[2]),
                                              normal_block_args(val[4]),
                                              tail_block_args(val[5]))

    result
end

def _reduce_372(val, _values, result)
                      result = new_block_args(normal_block_args(val[0]),
                                              rest_block_arg(val[2]),
                                              tail_block_args(val[3]))

    result
end

def _reduce_373(val, _values, result)
                      result = new_block_args(normal_block_args(val[0]))

    result
end

def _reduce_374(val, _values, result)
                      result = new_block_args(normal_block_args(val[0]),
                                              rest_block_arg(val[2]),
                                              normal_block_args(val[4]),
                                              tail_block_args(val[5]))

    result
end

def _reduce_375(val, _values, result)
                      result = new_block_args(normal_block_args(val[0]),
                                              tail_block_args(val[1]))

    result
end

def _reduce_376(val, _values, result)
                      result = new_block_args(opt_block_args(val[0]),
                                              rest_block_arg(val[2]),
                                              tail_block_args(val[3]))

    result
end

def _reduce_377(val, _values, result)
                      result = new_block_args(opt_block_args(val[0]),
                                              rest_block_arg(val[2]),
                                              normal_block_args(val[4]),
                                              tail_block_args(val[5]))

    result
end

def _reduce_378(val, _values, result)
                      result = new_block_args(opt_block_args(val[0]),
                                              tail_block_args(val[1]))

    result
end

def _reduce_379(val, _values, result)
                      result = new_block_args(opt_block_args(val[0]),
                                              normal_block_args(val[2]),
                                              tail_block_args(val[3]))

    result
end

def _reduce_380(val, _values, result)
                      result = new_block_args(rest_block_arg(val[0]),
                                              tail_block_args(val[1]))

    result
end

def _reduce_381(val, _values, result)

    result
end

def _reduce_382(val, _values, result)
                      result = new_block_args(tail_block_args(val[0]))

    result
end

def _reduce_383(val, _values, result)
                      push_scope :block
                      result = lexer.line

    result
end

def _reduce_384(val, _values, result)
                      result = new_iter val[2], val[3]
                      pop_scope

    result
end

def _reduce_385(val, _values, result)
                      val[0] << val[1]
                      result = val[0]

    result
end

# reduce 386 omitted

# reduce 387 omitted

# reduce 388 omitted

def _reduce_389(val, _values, result)
                      result = new_call(nil, val[0], val[1])

    result
end

def _reduce_390(val, _values, result)
                      result = new_call(val[0], val[2], val[3])

    result
end

def _reduce_391(val, _values, result)
                      result = new_js_call(val[0], val[2], val[3])

    result
end

def _reduce_392(val, _values, result)
                      result = new_call(val[0], [:call, []], val[2])

    result
end

def _reduce_393(val, _values, result)
                      result = new_call(val[0], val[2], val[3])

    result
end

def _reduce_394(val, _values, result)
                      result = new_call(val[0], val[2])

    result
end

def _reduce_395(val, _values, result)
                      result = new_super(val[0], val[1])

    result
end

def _reduce_396(val, _values, result)
                      result = new_super(val[0], nil)

    result
end

def _reduce_397(val, _values, result)
                      push_scope :block
                      result = lexer.line

    result
end

def _reduce_398(val, _values, result)
                      result = new_iter val[2], val[3]
                      pop_scope

    result
end

def _reduce_399(val, _values, result)
                      push_scope :block
                      result = lexer.line

    result
end

def _reduce_400(val, _values, result)
                      result = new_iter val[2], val[3]
                      pop_scope

    result
end

def _reduce_401(val, _values, result)
                      result = lexer.line

    result
end

def _reduce_402(val, _values, result)
                      part = s(:when, s(:array, *val[2]), val[4])
                      result = [part]
                      result.push(*val[5]) if val[5]

    result
end

def _reduce_403(val, _values, result)
                      result = [val[0]]

    result
end

# reduce 404 omitted

def _reduce_405(val, _values, result)
                      exc = val[1] || s(:array)
                      exc << new_assign(val[2], val[2], s(:gvar, '$!'.intern)) if val[2]
                      result = [s(:resbody, exc, val[4])]
                      result.push val[5].first if val[5]

    result
end

def _reduce_406(val, _values, result)
                      result = nil

    result
end

def _reduce_407(val, _values, result)
                      result = s(:array, val[0])

    result
end

# reduce 408 omitted

# reduce 409 omitted

def _reduce_410(val, _values, result)
                      result = val[1]

    result
end

def _reduce_411(val, _values, result)
                      result = nil

    result
end

def _reduce_412(val, _values, result)
                      result = val[1].nil? ? s(:nil) : val[1]

    result
end

# reduce 413 omitted

# reduce 414 omitted

# reduce 415 omitted

# reduce 416 omitted

def _reduce_417(val, _values, result)
                      result = new_str val[0]

    result
end

# reduce 418 omitted

def _reduce_419(val, _values, result)
                    result = str_append val[0], val[1]

    result
end

def _reduce_420(val, _values, result)
                      result = val[1]

    result
end

def _reduce_421(val, _values, result)
                      result = s(:str, value(val[0]))

    result
end

def _reduce_422(val, _values, result)
                      result = new_xstr(val[0], val[1], val[2])

    result
end

def _reduce_423(val, _values, result)
                      result = new_regexp val[1], val[2]

    result
end

def _reduce_424(val, _values, result)
                      result = s(:array)

    result
end

def _reduce_425(val, _values, result)
                      result = val[1]

    result
end

def _reduce_426(val, _values, result)
                      result = s(:array)

    result
end

def _reduce_427(val, _values, result)
                      part = val[1]
                      part = s(:dstr, "", val[1]) if part.type == :evstr
                      result = val[0] << part
                    
    result
end

def _reduce_428(val, _values, result)
                      result = val[0]

    result
end

def _reduce_429(val, _values, result)
                      result = val[0].concat([val[1]])

    result
end

def _reduce_430(val, _values, result)
                      result = s(:array)

    result
end

def _reduce_431(val, _values, result)
                      result = val[1]

    result
end

def _reduce_432(val, _values, result)
                      result = s(:array)

    result
end

def _reduce_433(val, _values, result)
                      result = val[0] << s(:str, value(val[1]))

    result
end

def _reduce_434(val, _values, result)
                      result = nil

    result
end

def _reduce_435(val, _values, result)
                      result = str_append val[0], val[1]

    result
end

def _reduce_436(val, _values, result)
                      result = nil

    result
end

def _reduce_437(val, _values, result)
                      result = str_append val[0], val[1]

    result
end

def _reduce_438(val, _values, result)
                      result = new_str_content(val[0])

    result
end

def _reduce_439(val, _values, result)
                      result = lexer.strterm
                      lexer.strterm = nil

    result
end

def _reduce_440(val, _values, result)
                      lexer.strterm = val[1]
                      result = new_evstr(val[2])

    result
end

def _reduce_441(val, _values, result)
                      lexer.cond_push 0
                      lexer.cmdarg_push 0
                      result = lexer.strterm
                      lexer.strterm = nil
                      lexer.lex_state = :expr_beg

    result
end

def _reduce_442(val, _values, result)
                      lexer.strterm = val[1]
                      lexer.cond_lexpop
                      lexer.cmdarg_lexpop
                      result = new_evstr(val[2])

    result
end

def _reduce_443(val, _values, result)
                      result = new_gvar(val[0])

    result
end

def _reduce_444(val, _values, result)
                      result = new_ivar(val[0])

    result
end

def _reduce_445(val, _values, result)
                      result = new_cvar(val[0])

    result
end

# reduce 446 omitted

def _reduce_447(val, _values, result)
                      result = new_sym(val[1])
                      lexer.lex_state = :expr_end

    result
end

def _reduce_448(val, _values, result)
                      result = new_sym(val[0])

    result
end

# reduce 449 omitted

# reduce 450 omitted

# reduce 451 omitted

# reduce 452 omitted

def _reduce_453(val, _values, result)
                      result = new_dsym val[1]

    result
end

def _reduce_454(val, _values, result)
                      result = new_int(val[0])

    result
end

def _reduce_455(val, _values, result)
                      result = new_float(val[0])

    result
end

def _reduce_456(val, _values, result)
                    result = negate_num(new_int(val[1]))

    result
end

def _reduce_457(val, _values, result)
                    result = negate_num(new_float(val[1]))

    result
end

def _reduce_458(val, _values, result)
                    result = new_int(val[1])

    result
end

def _reduce_459(val, _values, result)
                    result = new_float(val[1])

    result
end

def _reduce_460(val, _values, result)
                      result = new_ident(val[0])

    result
end

def _reduce_461(val, _values, result)
                      result = new_ivar(val[0])

    result
end

def _reduce_462(val, _values, result)
                      result = new_gvar(val[0])

    result
end

def _reduce_463(val, _values, result)
                      result = new_const(val[0])

    result
end

def _reduce_464(val, _values, result)
                      result = new_cvar(val[0])

    result
end

def _reduce_465(val, _values, result)
                      result = new_nil(val[0])

    result
end

def _reduce_466(val, _values, result)
                      result = new_self(val[0])

    result
end

def _reduce_467(val, _values, result)
                      result = new_true(val[0])

    result
end

def _reduce_468(val, _values, result)
                      result = new_false(val[0])

    result
end

def _reduce_469(val, _values, result)
                      result = new___FILE__(val[0])

    result
end

def _reduce_470(val, _values, result)
                      result = new___LINE__(val[0])

    result
end

def _reduce_471(val, _values, result)
                      result = new_var_ref(val[0])

    result
end

def _reduce_472(val, _values, result)
                      result = new_assignable val[0]

    result
end

def _reduce_473(val, _values, result)
                      result = s(:nth_ref, value(val[0]))

    result
end

# reduce 474 omitted

def _reduce_475(val, _values, result)
                      result = nil

    result
end

def _reduce_476(val, _values, result)
                      result = val[1]

    result
end

def _reduce_477(val, _values, result)
                      result = nil

    result
end

def _reduce_478(val, _values, result)
                      result = val[1]
                      lexer.lex_state = :expr_beg

    result
end

def _reduce_479(val, _values, result)
                      result = val[0]
                      lexer.lex_state = :expr_beg

    result
end

def _reduce_480(val, _values, result)

    result
end

def _reduce_481(val, _values, result)

    result
end

def _reduce_482(val, _values, result)

    result
end

def _reduce_483(val, _values, result)

    result
end

# reduce 484 omitted

# reduce 485 omitted

def _reduce_486(val, _values, result)
                      result = new_kwrestarg(val[1])

    result
end

def _reduce_487(val, _values, result)
                      result = new_kwrestarg()

    result
end

def _reduce_488(val, _values, result)
                      result = new_sym(val[0])

    result
end

def _reduce_489(val, _values, result)
                      result = new_kwoptarg(val[0], val[1])

    result
end

def _reduce_490(val, _values, result)
                      result = new_kwarg(val[0])

    result
end

def _reduce_491(val, _values, result)
                      result = [val[0]]

    result
end

def _reduce_492(val, _values, result)
                      result = val[0]
                      result << val[2]

    result
end

def _reduce_493(val, _values, result)
                      result = new_args_tail(val[0], val[2], val[3])

    result
end

def _reduce_494(val, _values, result)
                      result = new_args_tail(val[0], nil, val[1])

    result
end

def _reduce_495(val, _values, result)
                      result = new_args_tail(nil, val[0], val[1])

    result
end

def _reduce_496(val, _values, result)
                      result = new_args_tail(nil, nil, val[0])

    result
end

def _reduce_497(val, _values, result)
                      result = val[1]

    result
end

def _reduce_498(val, _values, result)
                      result = new_args_tail(nil, nil, nil)

    result
end

def _reduce_499(val, _values, result)
                      result = new_args(val[0], val[2], val[4], val[5])

    result
end

def _reduce_500(val, _values, result)
                      result = new_args(val[0], val[2], nil, val[3])

    result
end

def _reduce_501(val, _values, result)
                      result = new_args(val[0], nil, val[2], val[3])

    result
end

def _reduce_502(val, _values, result)
                      result = new_args(val[0], nil, nil, val[1])

    result
end

def _reduce_503(val, _values, result)
                      result = new_args(nil, val[0], val[2], val[3])

    result
end

def _reduce_504(val, _values, result)
                      result = new_args(nil, val[0], nil, val[1])

    result
end

def _reduce_505(val, _values, result)
                      result = new_args(nil, nil, val[0], val[1])

    result
end

def _reduce_506(val, _values, result)
                      result = new_args(nil, nil, nil, val[0])

    result
end

def _reduce_507(val, _values, result)
                      result = new_args(nil, nil, nil, nil)

    result
end

# reduce 508 omitted

def _reduce_509(val, _values, result)
                      result = value(val[0]).to_sym
                      scope.add_local result

    result
end

def _reduce_510(val, _values, result)
                      raise 'formal argument cannot be a constant'

    result
end

def _reduce_511(val, _values, result)
                      raise 'formal argument cannot be an instance variable'

    result
end

def _reduce_512(val, _values, result)
                      raise 'formal argument cannot be a class variable'

    result
end

def _reduce_513(val, _values, result)
                      raise 'formal argument cannot be a global variable'

    result
end

def _reduce_514(val, _values, result)
                      result = val[0]

    result
end

def _reduce_515(val, _values, result)
                      result = val[1]

    result
end

# reduce 516 omitted

# reduce 517 omitted

def _reduce_518(val, _values, result)
                      result = s(:lasgn, val[0])

    result
end

# reduce 519 omitted

def _reduce_520(val, _values, result)
                      result = s(:array, val[0])

    result
end

def _reduce_521(val, _values, result)
                      val[0] << val[2]
                      result = val[0]

    result
end

# reduce 522 omitted

# reduce 523 omitted

# reduce 524 omitted

# reduce 525 omitted

# reduce 526 omitted

def _reduce_527(val, _values, result)
                      result = s(:array, val[0])

    result
end

def _reduce_528(val, _values, result)
                      result = val[0] << val[2]

    result
end

def _reduce_529(val, _values, result)
                      result = new_assign(new_assignable(new_ident(val[0])), val[1], val[2])

    result
end

def _reduce_530(val, _values, result)
                      result = s(:block, val[0])

    result
end

def _reduce_531(val, _values, result)
                      result = val[0] << val[2]

    result
end

# reduce 532 omitted

# reduce 533 omitted

def _reduce_534(val, _values, result)
                      result = "*#{value(val[1])}".to_sym

    result
end

def _reduce_535(val, _values, result)
                      result = :"*"

    result
end

# reduce 536 omitted

# reduce 537 omitted

def _reduce_538(val, _values, result)
                      result = value(val[1]).to_sym

    result
end

def _reduce_539(val, _values, result)
                      result = val[1]

    result
end

def _reduce_540(val, _values, result)
                      result = nil

    result
end

def _reduce_541(val, _values, result)
                      result = val[0]

    result
end

def _reduce_542(val, _values, result)
                      result = val[1]

    result
end

def _reduce_543(val, _values, result)
                      result = []

    result
end

def _reduce_544(val, _values, result)
                      result = val[0]

    result
end

def _reduce_545(val, _values, result)
                      result = val[0]

    result
end

def _reduce_546(val, _values, result)
                      result = val[0].push(*val[2])

    result
end

def _reduce_547(val, _values, result)
                      result = [val[0], val[2]]

    result
end

def _reduce_548(val, _values, result)
                      result = [new_sym(val[0]), val[1]]

    result
end

def _reduce_549(val, _values, result)
                      result = [s(:sym, source(val[1]).to_sym), val[3]]

    result
end

# reduce 550 omitted

# reduce 551 omitted

# reduce 552 omitted

# reduce 553 omitted

# reduce 554 omitted

# reduce 555 omitted

# reduce 556 omitted

# reduce 557 omitted

# reduce 558 omitted

# reduce 559 omitted

# reduce 560 omitted

# reduce 561 omitted

# reduce 562 omitted

# reduce 563 omitted

# reduce 564 omitted

# reduce 565 omitted

# reduce 566 omitted

# reduce 567 omitted

# reduce 568 omitted

# reduce 569 omitted

# reduce 570 omitted

# reduce 571 omitted

# reduce 572 omitted

def _reduce_573(val, _values, result)
                      result = nil

    result
end

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module Opal
