#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.13
# from Racc grammer file "".
#

require 'racc/parser.rb'
module Opal
  class Parser < Racc::Parser


##### State transition tables begin ###

clist = [
'63,64,65,8,51,578,274,555,57,58,-462,274,578,61,274,59,60,62,23,24,66',
'67,-93,455,-101,97,622,22,28,27,90,89,91,92,547,534,17,546,108,656,-100',
'-85,7,41,6,9,94,93,84,50,86,85,87,-96,88,95,96,578,81,82,-93,38,39,-92',
'-98,-68,656,205,206,600,205,206,655,-101,-95,269,547,101,269,549,205',
'206,100,36,578,-100,30,621,578,52,273,54,-93,32,195,273,-101,40,273',
'655,-100,-80,205,206,-97,18,196,-85,-96,554,79,73,75,76,77,78,101,197',
'577,74,80,100,-98,101,-85,577,-92,56,100,-92,53,63,64,65,652,51,37,83',
'198,57,58,-95,-91,-85,61,-99,59,60,62,23,24,66,67,-85,309,-87,817,309',
'22,28,27,90,89,91,92,-92,-89,17,101,-539,577,908,599,100,41,-92,-86',
'94,93,84,50,86,85,87,783,88,95,96,-97,81,82,101,38,39,-91,101,100,577',
'246,101,100,577,300,-93,100,-93,-88,-101,-93,-101,-540,-100,-101,-100',
'210,301,-100,214,215,-96,52,-96,54,-99,-96,-450,610,309,40,732,732,-87',
'-450,-98,-94,-98,18,389,-98,656,656,79,73,75,76,77,78,-90,205,206,74',
'80,-95,-89,-95,732,-86,-95,56,392,-91,53,63,64,65,-539,51,37,83,101',
'57,58,655,655,100,61,-88,59,60,62,23,24,66,67,-90,612,611,608,794,22',
'28,27,90,89,91,92,-91,-87,219,-97,-540,-97,664,610,-97,41,-91,73,94',
'93,84,50,86,85,87,74,88,95,96,-89,81,82,-86,38,39,227,101,101,731,731',
'403,100,100,-87,-99,101,-99,760,-96,-99,100,-539,-88,-87,610,210,416',
'757,214,-540,-90,52,101,54,731,-89,224,100,-86,40,226,225,612,611,584',
'-89,585,218,-86,795,454,776,79,73,75,76,77,78,-88,345,344,74,80,265',
'266,923,-90,456,-88,56,760,267,53,63,64,65,-90,51,37,83,757,57,58,612',
'611,608,61,610,59,60,62,258,259,66,67,610,758,760,615,-98,257,28,27',
'90,89,91,92,757,883,219,342,341,345,344,610,884,41,204,457,94,93,84',
'50,86,85,87,262,88,95,96,610,81,82,215,38,39,101,-453,-460,345,344,100',
'203,201,-453,-460,612,611,613,758,202,205,206,-459,612,611,210,-92,-94',
'214,-459,820,52,585,54,-95,256,-101,254,488,40,-335,-335,612,611,617',
'758,101,218,-335,302,303,100,79,260,75,76,77,78,612,611,623,74,80,490',
'-458,923,199,-462,200,56,760,-458,53,63,64,65,-455,51,37,83,757,57,58',
'-455,547,492,61,549,59,60,62,258,259,66,67,-335,534,-335,633,499,257',
'28,27,90,89,91,92,-85,-67,219,342,341,345,344,516,634,41,-93,517,94',
'93,84,50,86,85,87,262,88,95,96,-456,81,82,518,38,39,-91,-456,-87,203',
'450,782,526,523,-457,605,-100,451,-96,758,524,-457,606,101,547,-89,210',
'549,100,214,401,402,52,527,54,-98,256,278,254,413,40,526,537,309,415',
'414,269,101,218,538,227,-86,100,79,260,75,76,77,78,529,530,-95,74,80',
'453,531,452,522,535,525,56,205,206,53,63,64,65,536,51,37,83,224,57,58',
'227,226,225,61,309,59,60,62,258,259,66,67,453,550,452,345,344,257,28',
'27,90,89,91,92,873,874,219,551,875,95,96,628,492,41,839,820,94,93,84',
'50,86,85,87,262,88,95,96,558,81,82,561,38,39,227,231,236,237,238,233',
'235,243,244,239,240,345,344,220,221,839,820,241,242,562,210,564,573',
'214,574,405,52,590,54,591,256,224,254,230,40,226,225,222,223,234,232',
'228,218,229,592,714,616,79,260,75,76,77,78,620,624,627,74,80,630,245',
'714,-236,-267,631,56,632,269,53,-259,-259,-259,227,-259,37,83,227,-259',
'-259,227,227,309,-259,674,-259,-259,-259,-259,-259,-259,-259,342,341',
'345,344,675,-259,-259,-259,-259,-259,-259,-259,683,685,-259,342,341',
'345,344,628,-80,-259,686,688,-259,-259,-259,-259,-259,-259,-259,-259',
'-259,-259,-259,540,-259,-259,699,-259,-259,227,231,236,237,238,233,235',
'243,244,239,240,705,706,220,221,707,712,241,242,722,-259,724,727,-259',
'269,585,-259,735,-259,778,-259,224,-259,230,-259,226,225,222,223,234',
'232,228,-259,229,-268,499,499,-259,-259,-259,-259,-259,-259,499,797',
'798,-259,-259,490,245,492,807,809,810,-259,699,814,-259,63,64,65,8,51',
'-259,-259,269,57,58,269,815,269,61,699,59,60,62,23,24,66,67,103,104',
'105,106,107,22,28,27,90,89,91,92,227,566,17,337,335,334,227,336,7,41',
'820,9,94,93,84,50,86,85,87,826,88,95,96,827,81,82,561,38,39,227,231',
'236,237,238,233,235,243,244,239,240,564,830,220,221,831,564,241,242',
'834,36,820,843,282,844,846,52,847,54,-539,32,224,849,230,40,226,225',
'222,223,234,232,228,18,229,857,859,862,79,73,75,76,77,78,863,865,867',
'74,80,869,245,871,-236,-269,886,56,887,888,53,63,64,65,889,51,37,83',
'891,57,58,-537,892,699,61,894,59,60,62,258,259,66,67,103,104,105,106',
'107,257,292,296,90,89,91,92,-267,566,219,337,335,334,898,336,903,293',
'905,911,94,93,84,50,86,85,87,913,88,95,96,914,81,82,309,-453,-453,927',
'-270,227,930,526,587,-453,-540,526,596,569,-537,588,564,940,941,594',
'572,946,862,290,948,867,287,867,869,52,957,54,963,286,-537,705,224,973',
'-288,-288,226,225,222,223,867,975,-288,976,,,79,73,75,76,77,78,-453',
',-453,74,80,,586,,589,,595,56,525,,53,63,64,65,,51,297,83,,57,58,,,',
'61,,59,60,62,258,259,66,67,-288,,-288,,,257,292,296,90,89,91,92,,,219',
'526,596,,,,,293,,829,94,93,84,50,86,85,87,,88,95,96,,81,82,,770,,337',
'335,334,760,336,,,,-287,-287,,,,757,,,-287,,,,290,-540,,214,,,52,,54',
'595,,525,,,,,339,755,103,104,105,106,107,342,341,345,344,79,73,75,76',
'77,78,,,,74,80,,,,299,,-287,56,-287,,53,63,64,65,227,51,297,83,,57,58',
',,,61,758,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,224,,219',
',226,225,222,223,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39',
'227,231,236,237,238,233,235,243,244,239,240,,,220,221,,,241,242,,210',
',,214,,,52,,54,,,224,,230,40,226,225,222,223,234,232,228,218,229,,,',
'79,73,75,76,77,78,-290,-290,,74,80,,245,799,-290,,,56,,,53,63,64,65',
',51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89',
'91,92,,566,219,337,335,334,-290,336,-290,41,,,94,93,84,50,86,85,87,',
'88,95,96,,81,82,,38,39,227,231,236,237,238,233,235,243,244,239,240,',
',220,221,,,241,242,,210,,,214,,,52,,54,,,224,,230,40,226,225,222,223',
'234,232,228,218,229,,,,79,73,75,76,77,78,526,955,,74,80,,245,,956,,',
'56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,',
',257,292,296,90,89,91,92,,,219,,,,954,,589,41,,,94,93,84,50,86,85,87',
',88,95,96,,81,82,,38,39,227,231,236,237,238,233,235,243,244,239,240',
',,220,221,,,241,242,,210,,,214,,,52,,54,,,224,,230,40,226,225,222,223',
'234,232,228,218,229,,,,79,73,75,76,77,78,,,,74,80,,245,,,,,56,,,53,63',
'64,65,,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90',
'89,91,92,,,17,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39',
'227,231,236,237,238,233,235,243,244,239,240,,,220,221,,,241,242,,210',
',,214,,,52,,54,,,224,,230,40,226,225,222,223,234,232,228,18,229,,,,79',
'73,75,76,77,78,,,,74,80,,245,,,,,56,,,53,63,64,65,,51,37,83,,57,58,',
',,61,,59,60,62,258,259,66,67,,,,,,257,28,27,90,89,91,92,,,219,,,,,,',
'41,,,94,93,84,50,86,85,87,262,88,95,96,,81,82,,38,39,227,231,236,237',
'238,233,235,243,244,239,240,,,220,221,,,241,242,,210,,,214,,,52,,54',
',256,224,,230,40,226,225,222,223,234,232,228,218,229,,,,79,260,75,76',
'77,78,,,,74,80,,245,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59',
'60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94',
'93,84,50,86,85,87,262,88,95,96,,81,82,,38,39,227,231,236,237,238,233',
'235,243,244,239,240,,,220,221,,,241,242,,210,,,214,,,52,,54,,,224,,230',
'40,226,225,222,223,234,232,228,218,229,,,,79,260,75,76,77,78,,,,74,80',
',245,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,23,24,66',
'67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,227,231,236,237,238,233,235,243,244,239,240,,,220',
'221,,,241,242,,210,,,214,,,52,,54,,,224,,230,40,226,225,222,223,234',
'232,228,18,229,,,,79,73,75,76,77,78,,,,74,80,,245,,,,,56,,,53,63,64',
'65,,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89',
'91,92,,,17,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,227',
'231,236,237,238,233,235,243,244,239,240,,,220,221,,,241,242,,210,,,214',
',,52,,54,,,224,,230,40,226,225,222,223,234,232,228,18,229,,,,79,73,75',
'76,77,78,,,,74,80,,245,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,',
'59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93',
'84,50,86,85,87,,88,95,96,,81,82,,38,39,227,231,236,237,238,233,235,243',
'244,239,240,,,220,221,,,241,242,,210,,,214,,,52,,54,,,224,,230,40,226',
'225,222,223,234,232,228,18,229,,,,79,73,75,76,77,78,,,,74,80,101,245',
',,,100,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66',
'67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,293,,,94,93,84,50,86,85',
'87,,88,95,96,,81,82,,770,,337,335,334,760,336,,,,,,,,,757,,328,,337',
'335,334,357,336,,30,,,52,,54,,32,,,,,,339,,,,,,,342,341,345,344,79,73',
'75,76,77,78,339,,,74,80,,,342,341,345,344,56,,,53,63,64,65,800,51,297',
'83,,57,58,,,,61,758,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91',
'92,,,219,,,,,,,293,,,94,93,84,50,86,85,362,,88,95,96,227,81,82,,770',
',337,335,334,760,336,,,,,,,241,242,757,,,,368,,,363,,,214,227,224,52',
'230,54,226,225,222,223,,,228,339,229,,,,241,242,342,341,345,344,79,73',
'75,76,77,78,,,224,74,80,,226,225,222,223,,56,,,53,-536,-536,-536,,-536',
'297,83,,-536,-536,,,,-536,758,-536,-536,-536,-536,-536,-536,-536,,-536',
',,,-536,-536,-536,-536,-536,-536,-536,,,-536,,,,,,,-536,,,-536,-536',
'-536,-536,-536,-536,-536,-536,-536,-536,-536,,-536,-536,,-536,-536,227',
'231,236,237,238,233,235,243,244,239,240,,,220,221,,,241,242,,-536,,',
'-536,-536,,-536,,-536,,-536,224,-536,230,-536,226,225,222,223,234,232',
'228,-536,229,-536,,,-536,-536,-536,-536,-536,-536,,,,-536,-536,,245',
',,,,-536,,,-536,-537,-537,-537,,-537,-536,-536,,-537,-537,,,,-537,,-537',
'-537,-537,-537,-537,-537,-537,,-537,,,,-537,-537,-537,-537,-537,-537',
'-537,,,-537,,,,,,,-537,,,-537,-537,-537,-537,-537,-537,-537,-537,-537',
'-537,-537,,-537,-537,,-537,-537,227,231,236,237,238,233,235,243,244',
'239,240,,,220,221,,,241,242,,-537,,,-537,-537,,-537,,-537,,-537,224',
'-537,230,-537,226,225,222,223,234,232,228,-537,229,-537,,,-537,-537',
'-537,-537,-537,-537,,,,-537,-537,,245,,,,,-537,,,-537,63,64,65,8,51',
'-537,-537,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91',
'92,,,17,,,,,,7,41,6,9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,227',
'231,236,237,238,233,235,243,244,239,240,,,220,221,,,241,242,,36,,,30',
',,52,,54,,32,224,,230,40,226,225,222,223,234,232,228,18,229,,,,79,73',
'75,76,77,78,,,,74,80,,245,,,,405,56,,,53,63,64,65,,51,37,83,,57,58,',
',,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,',
',94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,227,231,236,237,238,233',
'235,243,244,239,240,,,220,221,,,241,242,,210,,,214,,,52,,54,,,224,,230',
'40,226,225,222,223,234,232,228,18,229,,,,79,73,75,76,77,78,,,,74,80',
',245,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,23,24,66',
'67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,227,231,236,237,238,233,235,243,244,239,240,,,220',
'221,,,241,242,,210,,,214,,,52,,54,,,224,,230,40,226,225,222,223,234',
'232,228,18,229,,,,79,73,75,76,77,78,,,,74,80,,245,,,,,56,,,53,63,64',
'65,,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89',
'91,92,,,17,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,227',
'231,236,237,238,233,235,243,244,239,240,,,220,221,,,241,242,,210,,,214',
',,52,,54,,,224,,230,40,226,225,222,223,234,232,228,18,229,,,,79,73,75',
'76,77,78,,,,74,80,,245,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,',
'59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93',
'84,50,86,85,87,,88,95,96,227,81,82,,38,39,566,,337,335,334,,336,,,,',
'241,242,,,328,,337,335,334,210,336,,214,,224,52,230,54,226,225,222,223',
',40,,,566,569,337,335,334,18,336,,572,,79,73,75,76,77,78,339,323,,74',
'80,,,342,341,345,344,56,,,53,63,64,65,8,51,37,83,569,57,58,,,,61,836',
'59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94',
'93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,328,,337,335',
'334,36,336,,30,,,52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,339',
',557,74,80,,,342,341,345,344,56,,,53,63,64,65,8,51,37,83,,57,58,,,,61',
',59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,6,9,94',
'93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,328,,337,335',
'334,36,336,,30,,,52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,339',
',,74,80,,,342,341,345,344,56,,,53,63,64,65,8,51,37,83,,57,58,,,,61,',
'59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94',
'93,84,50,86,85,87,,88,95,96,,81,82,,38,39,227,231,236,237,238,233,235',
'243,244,239,240,,,-560,-560,,,241,242,,36,,,30,,,52,,54,,32,224,,230',
'40,226,225,222,223,234,232,228,18,229,,,,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67',
',,,,,22,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,227,231,236,237,238,233,235,243,244,239,240,,,-560',
'-560,,,241,242,,210,,,214,,,52,,54,,422,224,,230,40,226,225,222,223',
'234,232,228,218,229,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64',
'65,,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89',
'91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39',
'227,-560,-560,-560,-560,233,235,,,-560,-560,,,,,,,241,242,,210,,,214',
',,52,,54,,422,224,,230,40,226,225,222,223,234,232,228,218,229,,,,79',
'73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61',
',59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,219,,,,,,,41,,,94',
'93,84,50,86,85,87,,88,95,96,227,81,82,,38,39,,,,,,,,,,,,241,242,,,,',
',,,210,,,214,,224,52,230,54,226,225,222,223,,40,228,,229,,,,,218,,,',
',79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58',
',,,61,,59,60,62,258,259,66,67,,,,,,257,28,27,90,89,91,92,,,219,,,,,',
',41,,,94,93,84,50,86,85,87,262,88,95,96,,81,82,,38,39,227,,,,,,,,,,',
',,,,,,241,242,,210,,,214,,,52,,54,,256,224,,230,40,226,225,222,223,',
',228,218,229,,,,79,260,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,',
'51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,28,27,90,89,91',
'92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,262,88,95,96,,81,82,,38,39',
'227,,,,,,,,,,,,,,,,,241,242,,210,,,214,,,52,,54,,256,224,,230,40,226',
'225,222,223,,,228,218,229,,,,79,260,75,76,77,78,,,,74,80,,,,,,,56,,',
'53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28',
'27,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82',
',38,39,227,-560,-560,-560,-560,233,235,,,-560,-560,,,,,,,241,242,,210',
',,214,,,52,,54,,,224,,230,40,226,225,222,223,234,232,228,218,229,,,',
'79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,',
',,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,',
',94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,227,-560,-560,-560,-560',
'233,235,,,-560,-560,,,,,,,241,242,,210,,,214,,,52,,54,,,224,,230,40',
'226,225,222,223,234,232,228,18,229,,,,79,73,75,76,77,78,,,,74,80,,,',
',,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,',
',,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96',
',81,82,,38,39,227,-560,-560,-560,-560,233,235,,,-560,-560,,,,,,,241',
'242,,210,,,214,,,52,,54,,,224,,230,40,226,225,222,223,234,232,228,18',
'229,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,8,51,37,83',
',57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,',
',,,7,41,,9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,227,-560,-560',
'-560,-560,233,235,,,-560,-560,,,,,,,241,242,,36,,,30,,,52,,54,,32,224',
',230,40,226,225,222,223,234,232,228,18,229,,,,79,73,75,76,77,78,,,,74',
'80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,23,24,66',
'67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,227,-560,-560,-560,-560,233,235,,,-560,-560,,,,',
',,241,242,,210,,,214,,459,52,,54,,,224,,230,40,226,225,222,223,234,232',
'228,18,229,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51',
'37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91',
'92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,227',
'231,236,237,238,233,235,,,239,240,,,,,,,241,242,,210,,,214,,,52,,54',
',,224,,230,40,226,225,222,223,234,232,228,218,229,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62',
'258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84',
'50,86,85,87,,88,95,96,,81,82,,38,39,227,231,236,237,238,233,235,243',
',239,240,,,,,,,241,242,,210,,,214,,,52,,54,,,224,,230,40,226,225,222',
'223,234,232,228,218,229,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
'63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292',
'296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,227',
'81,82,,38,39,,,,,,,,,,,,241,242,,,,,,,,210,,,214,,224,52,230,54,226',
'225,222,223,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,',
',53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257',
'292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,',
'218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83',
',57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,',
'219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,',
',,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62',
'258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84',
'50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,',
'52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,',
'53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257',
'292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,',
'218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83',
',57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,',
'219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,',
',,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62',
'258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84',
'50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,',
'52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,',
'53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257',
'292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,',
'218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83',
',57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,',
'219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,',
',,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62',
'258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84',
'50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,',
'52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,',
'53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257',
'292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,',
'218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83',
',57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,',
'219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,',
',,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62',
'258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84',
'50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,',
'52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,',
'53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257',
'292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,',
'218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83',
',57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,',
'219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,',
',,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62',
'258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84',
'50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,',
'52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,',
'53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257',
'292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,',
'218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83',
',57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,',
'219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,',
',,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62',
'258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84',
'50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,',
'52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,',
'53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257',
'292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,',
'218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83',
',57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,',
'219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,',
',,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62',
'258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84',
'50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,',
'52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,',
'53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257',
'292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,',
'218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83',
',57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,',
'219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,',
',,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62',
'258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84',
'50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,',
'52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,',
'53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257',
'292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,',
'218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83',
',57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,',
'219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,',
',,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62',
'258,259,66,67,,,,,,257,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50',
'86,85,87,262,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,',
'52,,54,,256,,254,,40,,,,,,,,218,,,,,79,260,75,76,77,78,,,,74,80,,,,',
',,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,',
',,,257,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,262,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,508,,54,,256,,254',
',40,,,,,,,,218,,,,,79,260,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65',
',51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,28,27,90,89',
'91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,262,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,210,,,214,,512,52,,54,,256,,254,,40,,,,,,,,218',
',,,,79,260,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,8,51,37,83,,57',
'58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7',
'41,,9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,',
',,,36,,,282,,,52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74',
'80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66',
'67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,293,,,94,93,84,50,86,85',
'87,,88,95,96,,81,82,,770,,337,335,334,760,336,,,,,,,,,757,,,,,,,290',
',,214,,,52,,54,,,,,,,,339,755,,,,,,342,341,345,344,79,73,75,76,77,78',
',,,74,80,,,,520,,,56,,,53,63,64,65,8,51,297,83,,57,58,,,,61,758,59,60',
'62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,84',
'50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,282,,,52',
',54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
'63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292',
'296,90,89,91,92,,,219,,,,,,,293,,,94,93,84,50,86,85,87,,88,95,96,,81',
'82,,,,,,,,,,,,,,,,,,,,,,,,290,,,287,,,52,,54,,,,,,,,,,,,,,,,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,297,83,,57,58,,,,61',
',59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41',
',,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210',
',,214,540,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,63,64,65,8,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67',
',,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,',
',,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37',
'83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17',
',,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,',
',,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,',
',,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,23,24',
'66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,84,50,86,85,87',
',88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,',
'40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,',
'51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89',
'91,92,,,219,,,,,,,293,,,94,93,84,50,86,85,362,,88,95,96,,81,82,,,,,',
',,,,,,,,,,,,,,,,,,363,,,214,,,52,,54,,,,,,,,,,,,,,,,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,297,83,,57,58,,,,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,84,50,86',
'85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54',
',,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64',
'65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90',
'89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79',
'73,75,76,77,78,,,,74,80,,,,,,,56,,,53,-259,-259,-259,,-259,37,83,,-259',
'-259,,,,-259,,-259,-259,-259,-259,-259,-259,-259,,,,,,-259,-259,-259',
'-259,-259,-259,-259,,,-259,,,,,,,-259,,,-259,-259,-259,-259,-259,-259',
'-259,-259,-259,-259,-259,,-259,-259,,-259,-259,,,,,,,,,,,,,,,,,,,,,-259',
',,-259,269,,-259,,-259,,-259,,-259,,-259,,,,,,,,-259,,,,,-259,-259,-259',
'-259,-259,-259,,,,-259,-259,,,,,,,-259,,,-259,-541,-541,-541,,-541,-259',
'-259,,-541,-541,,,,-541,,-541,-541,-541,-541,-541,-541,-541,,,,,,-541',
'-541,-541,-541,-541,-541,-541,,,-541,,,,,,,-541,,,-541,-541,-541,-541',
'-541,-541,-541,-541,-541,-541,-541,,-541,-541,,-541,-541,,,,,,,,,,,',
',,,,,,,,,-541,,,-541,-541,,-541,,-541,,-541,,-541,,-541,,,,,,,,-541',
',,,,-541,-541,-541,-541,-541,-541,,,,-541,-541,,,,,,,-541,,,-541,-542',
'-542,-542,,-542,-541,-541,,-542,-542,,,,-542,,-542,-542,-542,-542,-542',
'-542,-542,,,,,,-542,-542,-542,-542,-542,-542,-542,,,-542,,,,,,,-542',
',,-542,-542,-542,-542,-542,-542,-542,-542,-542,-542,-542,,-542,-542',
',-542,-542,,,,,,,,,,,,,,,,,,,,,-542,,,-542,-542,,-542,,-542,,-542,,-542',
',-542,,,,,,,,-542,,,,,-542,-542,-542,-542,-542,-542,,,,-542,-542,,,',
',,,-542,,,-542,-259,-259,-259,,-259,-542,-542,,-259,-259,,,,-259,,-259',
'-259,-259,-259,-259,-259,-259,,,,,,-259,-259,-259,-259,-259,-259,-259',
',,-259,,,,,,,-259,,,-259,-259,-259,-259,-259,-259,-259,-259,-259,-259',
'-259,,-259,-259,,-259,-259,,,,,,,,,,,,,,,,,,,,,-259,,,-259,269,,-259',
',-259,,-259,,-259,,-259,,,,,,,,-259,,,,,-259,-259,-259,-259,-259,-259',
',,,-259,-259,,,,,,,-259,,,-259,63,64,65,,51,-259,-259,,57,58,,,,61,',
'59,60,62,258,259,66,67,,,,,,257,28,27,90,89,91,92,,,219,,,,,,,41,,,94',
'93,84,50,86,85,87,262,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210',
',,214,,,52,,54,,256,,,,40,,,,,,,,218,,,,,79,260,75,76,77,78,,,,74,80',
',,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67',
',,,,,257,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,262',
'88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,256,',
',,40,,,,,,,,218,,,,,79,260,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64',
'65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90',
'89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79',
'73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61',
',59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41',
',,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210',
',,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,',
',,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,',
',,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,',
',,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51',
'37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91',
'92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,',
',,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59',
'60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94',
'93,84,50,86,85,87,262,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210',
',,214,,,52,,54,,661,,254,,40,,,,,,,,218,,,,,79,260,75,76,77,78,,,,74',
'80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66',
'67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87',
'262,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,',
',254,,40,,,,,,,,218,,,,,79,260,75,76,77,78,,,,74,80,,,,,,,56,,,53,63',
'64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296',
'90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,',
'38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,',
'79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,',
',,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,',
',94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210',
',,214,,679,52,,54,,,,254,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,63,64,65,8,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67',
',,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,',
',,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,405,56,,,53,63,64,65,,51',
'37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91',
'92,,,219,,,,,,,293,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,,,,,,,,',
',,,,,,,,,,,,,,290,,,287,,,52,,54,,,,,,,,,,,,,,,,,,,79,73,75,76,77,78',
',,,74,80,,,,,,,56,,,53,63,64,65,,51,297,83,,57,58,,,,61,,59,60,62,258',
'259,66,67,,,,,,257,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86',
'85,87,262,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52',
',54,,256,,,,40,,,,,,,,218,,,,,79,260,75,76,77,78,,,,74,80,,,,,,,56,',
',53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257',
'28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,262,88,95,96',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,256,,,,40,,,,',
',,,218,,,,,79,260,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37',
'83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92',
',,219,,,,,,,293,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,,,,,,,,,,,',
',,,,,,,,,,,290,,,287,,,52,,54,,,,,,,,,,,,,,,,,,,79,73,75,76,77,78,,',
',74,80,,,,,,,56,,,53,63,64,65,,51,297,83,,57,58,,,,61,,59,60,62,258',
'259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52',
',54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
'63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292',
'296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81',
'82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57',
'58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219',
',,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,',
',,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78',
',,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,23',
'24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,84,50,86,85',
'87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,',
',,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65',
',51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89',
'91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,262,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,661,,254,,40,,,,,,,,218,',
',,,79,260,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57',
'58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219',
',,,,,,41,,,94,93,84,50,86,85,87,262,88,95,96,,81,82,,38,39,,,,,,,,,',
',,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,260,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,63,64,65,8,51,37,83,,57,58,,,,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,54',
',32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63',
'64,65,8,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90',
'89,91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,,,,,,,,18,,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,',
'59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,293',
',,94,93,84,50,86,85,87,,88,95,96,,81,82,,,,,,,,,,,,,,,,,,,,,,,,718,',
',214,,,52,,54,,,,,,,,,,,,,,,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56',
',,53,63,64,65,8,51,297,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22',
'28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95,96,',
'81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,,,,,,,,18',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,8,51,37,83,,57',
'58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7',
'41,,9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,',
',,,36,,,30,,,52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74',
'80,,,,,,,56,,,53,63,64,65,8,51,37,83,,57,58,,,,61,,59,60,62,23,24,66',
'67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87',
',88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,',
'40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,',
'51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,28,27,90,89,91',
'92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,262,88,95,96,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,256,,,,40,,,,,,,,218,,,,,79',
'260,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,',
'61,,59,60,62,258,259,66,67,,,,,,257,28,27,90,89,91,92,,,219,,,,,,,41',
',,94,93,84,50,86,85,87,262,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,',
',,210,,,214,,,52,,54,,256,,,,40,,,,,,,,218,,,,,79,260,75,76,77,78,,',
',74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259',
'66,67,,,,,,257,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85',
'87,262,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54',
',256,,,,40,,,,,,,,218,,,,,79,260,75,76,77,78,,,,74,80,,,,,,,56,,,53',
'63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27',
'90,89,91,92,,,17,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,18,,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,',
'59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93',
'84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214',
',,52,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,',
',53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257',
'292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,',
'218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83',
',57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,',
'219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,',
',,,,,,,,,,,,210,,,214,,,52,,54,,781,,,,40,,,,,,,,218,,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60',
'62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52',
',54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
'63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27',
'90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,',
'38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,',
'79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,',
',,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,219,,,,,,,41',
',,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210',
',,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,',
',,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,',
',,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,',
',,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,8,51',
'37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,',
',17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,',
',,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62',
'258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84',
'50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,',
'52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,',
'53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257',
'292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,',
'218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,8,51,37,83',
',57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,',
',,,7,41,,9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,',
',,,,,,,,36,,,30,,,52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,',
',,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258',
'259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50',
'86,85,87,262,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,',
'52,,54,,661,,254,,40,,,,,,,,218,,,,,79,260,75,76,77,78,,,,74,80,,,,',
',,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,',
',,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,262',
'88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,254',
',40,,,,,,,,218,,,,,79,260,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65',
'8,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91',
'92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,',
',,,,,,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,8,51,37,83,,57,58,,,,61,,59',
'60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93',
'84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,',
',52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56',
',,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257',
'292,296,90,89,91,92,,,219,,,,,,,293,,,94,93,84,50,86,85,87,,88,95,96',
',81,82,,,,,,,,,,,,,,,,,,,,,,,,290,,,287,,,52,,54,,,,,,,,,,,,,,,,,,,79',
'73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,297,83,,57,58,,,',
'61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,',
'293,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,,,,,,,,,,,,,,,,,,,,,,,290',
',,287,,,52,,54,,,,,,,,,,,,,,,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56',
',,53,63,64,65,,51,297,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257',
'292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,422,,,,40,,,,',
',,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37',
'83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92',
',,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,',
',,,,,,,,,,,,,,210,,,214,,,52,,54,,256,,,,40,,,,,,,,218,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59',
'60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,84',
'50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,',
'52,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
'63,64,65,8,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27',
'90,89,91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95,96,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,,,,,,,,18,,,,',
'79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,8,51,37,83,,57,58',
',,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41',
',9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,',
'36,,,30,,,52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,63,64,65,8,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67',
',,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,',
',,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37',
'83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92',
',,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,',
',,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,63,64,65,8,51,37,83,,57,58,,,,61,,59,60',
'62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,84',
'50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52',
',54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
'63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292',
'296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81',
'82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57',
'58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,219,,,,,',
',41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,',
',,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74',
'80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,23,24,66',
'67,,,,,,22,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,',
'88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40',
',,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51',
'37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91',
'92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,',
',,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59',
'60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94',
'93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,',
'214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,',
',56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,',
',,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,',
',,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51',
'37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91',
'92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,',
',,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,256,,,,40,,,,,,,,218,,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,8,51,37,83,,57,58,,,,61',
',59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94',
'93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30',
',,52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56',
',,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28',
'27,90,89,91,92,,,17,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,18,,,,',
'79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,8,51,37,83,,57,58',
',,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41',
',9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,',
'36,,,30,,,52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,63,64,65,8,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67',
',,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,',
',,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37',
'83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92',
',,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,',
',,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60',
'62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93',
'84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214',
',,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56',
',,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257',
'292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,',
'218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83',
',57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,',
'219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,',
',,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62',
'258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84',
'50,86,85,87,262,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214',
',,52,,54,,,,254,,40,,,,,,,,218,,,,,79,260,75,76,77,78,,,,74,80,,,,,',
',56,,,53,63,64,65,8,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,',
',22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95',
'96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,,,,',
',,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83',
',57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,',
'219,,,,,,,293,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,,,,,,,,,,,,,',
',,,,,,,,,935,,,214,,,52,,54,,,,,,,,,,,,,,,,,,,79,73,75,76,77,78,,,,74',
'80,,,,,,,56,,,53,63,64,65,,51,297,83,,57,58,,,,61,,59,60,62,258,259',
'66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85',
'87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,661',
',,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64',
'65,8,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89',
'91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,8,51,37,83,,57,58,,,,61,,59',
'60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93',
'84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,',
',52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56',
',,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257',
'292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,661,,254,,40,',
',,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,8,51',
'37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,',
',17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,',
',,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,63,64,65,8,51,37,83,,57,58,,,,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,54',
',32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63',
'64,65,8,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90',
'89,91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,,,,,,,,18,,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,8,51,37,83,,57,58,,,,61',
',59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94',
'93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30',
',,52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56',
',,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257',
'28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,262,88,95,96',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,256,,,,40,,,,',
',,,218,,,,-543,79,260,75,76,77,78,-543,-543,-543,74,80,,-543,-543,,-543',
',56,,,53,,,,-543,,37,83,,,,,,,,-543,-543,,-543,-543,-543,-543,-543,',
',,,,,,,,,,,,,,,,,,,,-543,-543,-543,-543,-543,-543,-543,-543,-543,-543',
'-543,-543,-543,-543,-543,,,-543,-543,-543,,639,,,,-543,,,,,,-543,,-543',
',-543,-543,-543,-543,-543,-543,-543,,-543,-543,-543,,,,,,,,,,,,,-543',
'-543,,-88,,-543,,-287,-543,,-543,,,-97,-287,-287,-287,,,,-287,-287,',
'-287,,,,,,,,,,,,,,,,,,,,-287,-287,,-287,-287,-287,-287,-287,,,,,,,,',
',,,,,,,,,,,,,-287,-287,-287,-287,-287,-287,-287,-287,-287,-287,-287',
'-287,-287,-287,-287,,,-287,-287,-287,,642,,,,-287,,,,,,-287,,-287,,-287',
'-287,-287,-287,-287,-287,-287,,-287,,-287,,,,,,,,,,,,,-287,-287,,-90',
',-287,,-543,-287,,-287,,,-99,-543,-543,-543,,,-543,-543,-543,,-543,',
',,,,,,,-543,-543,-543,,,,,,,,,-543,-543,,-543,-543,-543,-543,-543,,',
',,,,,,,,,,,,,,,,,,,-543,-543,-543,-543,-543,-543,-543,-543,-543,-543',
'-543,-543,-543,-543,-543,,,-543,-543,-543,,796,-543,,,-543,,-543,,-543',
',-543,,-543,,-543,-543,-543,-543,-543,-543,-543,,-543,-543,-543,,,,',
',,,,,,,,-543,-543,-543,-543,,-543,,-287,-543,,-543,,,-97,-287,-287,-287',
',,-287,-287,-287,,-287,,,,,,,,,,-287,-287,,,,,,,,,-287,-287,,-287,-287',
'-287,-287,-287,,,,,,,,,,,,,,,,,,,,,,-287,-287,-287,-287,-287,-287,-287',
'-287,-287,-287,-287,-287,-287,-287,-287,,,-287,-287,-287,,642,-287,',
',-287,,-287,,-287,,-287,,-287,,-287,-287,-287,-287,-287,-287,-287,,-287',
',-287,,,,,,,,,,,,,-287,-287,-287,-287,,-287,,-296,-287,,-287,,,-99,-296',
'-296,-296,,,-296,-296,-296,,-296,,,,,,,,,,-296,-296,,,,,,,,,-296,-296',
',-296,-296,-296,-296,-296,,,,,,,,,,,,,,,,,,,,,,-296,-296,-296,-296,-296',
'-296,-296,-296,-296,-296,-296,-296,-296,-296,-296,,,-296,-296,-296,',
',-296,,278,-296,,-296,,-296,,-296,,-296,,-296,-296,-296,-296,-296,-296',
'-296,,-296,,-296,,,,,,,,,,,,,-296,-296,-296,-296,-282,-296,,,-296,,-296',
'-282,-282,-282,,,-282,-282,-282,,-282,,,,,,,,,,-282,-282,-282,,,,,,',
',-282,-282,,-282,-282,-282,-282,-282,,,,,,,,,,,,,,,,,,,,,,-282,-282',
'-282,-282,-282,-282,-282,-282,-282,-282,-282,-282,-282,-282,-282,,,-282',
'-282,-282,,,-282,,,-282,,-282,,-282,,-282,,-282,,-282,-282,-282,-282',
'-282,-282,-282,,-282,,-282,,,,,,,,,,,,,-282,-282,-282,-282,-559,-282',
',-282,-282,,-282,-559,-559,-559,,,-559,-559,-559,,-559,,,,,,,,,,-559',
',,,,,,,,,-559,-559,,-559,-559,-559,-559,-559,,,,,,,,,,,,-559,,,,,,,-559',
'-559,-559,,,-559,-559,-559,,-559,,,,,-559,-559,,,,-559,,,-559,,,,,269',
'-559,-559,-559,,-559,-559,-559,-559,-559,,,,,,,,,,,,-559,,,,,,,,,,,',
',-559,,-559,,,-559,,,-559,-559,,-559,,,,,-559,,-559,-559,-559,269,-559',
'-559,-559,-559,,-559,,,,,,,,,,-559,,,,,-559,,,,,-559,-559,,-559,-559',
'-559,-559,-559,-559,,-559,,,-559,437,441,,,439,,,,,,,,,142,143,139,121',
'122,123,130,127,129,,,124,125,-559,-559,,,144,145,131,132,-559,,,,,269',
'-559,,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119,,-559',
'146,,,,,,,,,,,,-559,,-559,,,-559,156,167,157,180,153,173,163,162,188',
'191,178,161,160,155,181,189,190,165,154,168,172,174,166,159,,,,175,182',
'177,176,169,179,164,152,171,170,183,184,185,186,187,151,158,149,150',
'147,148,111,113,110,,112,,,,,,,,,142,143,139,121,122,123,130,127,129',
',,124,125,,,,,144,145,131,132,,,,,,,,,,,,136,135,,120,141,138,137,133',
'134,128,126,118,140,119,,,146,192,,,,,,,,,,80,156,167,157,180,153,173',
'163,162,188,191,178,161,160,155,181,189,190,165,154,168,172,174,166',
'159,,,,175,182,177,176,169,179,164,152,171,170,183,184,185,186,187,151',
'158,149,150,147,148,111,113,,,112,,,,,,,,,142,143,139,121,122,123,130',
'127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,,,136,135,,120,141,138',
'137,133,134,128,126,118,140,119,,,146,192,,,,,,,,,,80,156,167,157,180',
'153,173,163,162,188,191,178,161,160,155,181,189,190,165,154,168,172',
'174,166,159,,,,175,182,177,176,169,179,164,152,171,170,183,184,185,186',
'187,151,158,149,150,147,148,111,113,,,112,,,,,,,,,142,143,139,121,122',
'123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,,,136,135,,120',
'141,138,137,133,134,128,126,118,140,119,,,146,192,,,,,,,,,,80,156,167',
'157,180,153,173,163,162,188,191,178,161,160,155,181,189,190,165,154',
'168,172,174,166,159,,,,175,182,177,176,169,179,164,152,171,170,183,184',
'185,186,187,151,158,149,150,147,148,111,113,,,112,,,,,,,,,142,143,139',
'121,122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,,,136',
'135,,120,141,138,137,133,134,128,126,118,140,119,,,146,192,,,,,,,,,',
'80,156,167,157,180,153,173,163,162,188,191,178,161,160,155,181,189,190',
'165,154,168,172,174,166,159,,,,175,182,177,377,376,378,375,152,171,170',
'183,184,185,186,187,151,158,149,150,373,374,371,113,86,85,372,,88,,',
',,,,142,143,139,121,122,123,130,127,129,,,124,125,,,,,144,145,131,132',
',,,,,382,,,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119,',
',146,156,167,157,180,153,173,163,162,188,191,178,161,160,155,181,189',
'190,165,154,168,172,174,166,159,,,,175,182,177,176,169,179,164,152,171',
'170,183,184,185,186,187,151,158,149,150,147,148,111,113,399,398,112',
',400,,,,,,,142,143,139,121,122,123,130,127,129,,,124,125,,,,,144,145',
'131,132,,,,,,,,,,,,136,135,,120,141,138,137,133,134,128,126,118,140',
'119,,,146,156,167,157,180,153,173,163,162,188,191,178,161,160,155,181',
'189,190,165,154,168,172,174,166,159,,,,175,182,177,176,169,179,164,152',
'171,170,183,184,185,186,187,151,158,149,150,147,148,111,113,399,398',
'112,,400,,,,,,,142,143,139,121,122,123,130,127,129,,,124,125,,,,,144',
'145,131,132,,,,,,,,,,,,136,135,,120,141,138,137,133,134,128,126,118',
'140,119,,,146,156,167,157,180,153,173,163,162,188,191,178,161,160,155',
'181,189,190,165,154,168,172,174,166,159,,,,175,182,177,176,169,179,164',
'152,171,170,183,184,185,186,187,151,158,149,150,147,148,111,113,,,112',
',,,,,,,,142,143,139,121,122,123,130,127,129,,,124,125,,,,,144,145,131',
'132,,,,,,,,,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119',
'431,435,146,,432,,,,,,,,,142,143,139,121,122,123,130,127,129,,,124,125',
',,,,144,145,131,132,,,,,,269,,,,,,136,135,,120,141,138,137,133,134,128',
'126,118,140,119,444,435,146,,445,,,,,,,,,142,143,139,121,122,123,130',
'127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,,,136,135,,120,141,138',
'137,133,134,128,126,118,140,119,444,435,146,,445,,,,,,,,,142,143,139',
'121,122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,,,136',
'135,,120,141,138,137,133,134,128,126,118,140,119,444,435,146,,445,,',
',,,,,,142,143,139,121,122,123,130,127,129,,,124,125,,,,,144,145,131',
'132,,,,,,,,,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119',
'444,435,146,,445,,,,,,,,,142,143,139,121,122,123,130,127,129,,,124,125',
',,,,144,145,131,132,,,,,,,,,,,,136,135,,120,141,138,137,133,134,128',
'126,118,140,119,645,435,146,,646,,,,,,,,,142,143,139,121,122,123,130',
'127,129,,,124,125,,,,,144,145,131,132,,,,,,269,,,,,,136,135,,120,141',
'138,137,133,134,128,126,118,140,119,647,441,146,,648,,,,,,,,,142,143',
'139,121,122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,',
',136,135,,120,141,138,137,133,134,128,126,118,140,119,690,435,146,,691',
',,,,,,,,142,143,139,121,122,123,130,127,129,,,124,125,,,,,144,145,131',
'132,,,,,,269,,,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119',
'693,441,146,,694,,,,,,,,,142,143,139,121,122,123,130,127,129,,,124,125',
',,,,144,145,131,132,,,,,,,,,,,,136,135,,120,141,138,137,133,134,128',
'126,118,140,119,444,435,146,,445,,,,,,,,,142,143,139,121,122,123,130',
'127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,,,136,135,,120,141,138',
'137,133,134,128,126,118,140,119,645,435,146,,646,,,,,,,,,142,143,139',
'121,122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,269,,,,,',
'136,135,,120,141,138,137,133,134,128,126,118,140,119,647,441,146,,648',
',,,,,,,,142,143,139,121,122,123,130,127,129,,,124,125,,,,,144,145,131',
'132,,,,,,,,,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119',
'739,435,146,,740,,,,,,,,,142,143,139,121,122,123,130,127,129,,,124,125',
',,,,144,145,131,132,,,,,,269,,,,,,136,135,,120,141,138,137,133,134,128',
'126,118,140,119,741,441,146,,742,,,,,,,,,142,143,139,121,122,123,130',
'127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,,,136,135,,120,141,138',
'137,133,134,128,126,118,140,119,747,441,146,,745,,,,,,,,,142,143,139',
'121,122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,,,136',
'135,,120,141,138,137,133,134,128,126,118,140,119,444,435,146,,445,,',
',,,,,,142,143,139,121,122,123,130,127,129,,,124,125,,,,,144,145,131',
'132,,,,,,269,,,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119',
'747,441,146,,900,,,,,,,,,142,143,139,121,122,123,130,127,129,,,124,125',
',,,,144,145,131,132,,,,,,,,,,,,136,135,,120,141,138,137,133,134,128',
'126,118,140,119,968,435,146,,969,,,,,,,,,142,143,139,121,122,123,130',
'127,129,,,124,125,,,,,144,145,131,132,,,,,,269,,,,,,136,135,,120,141',
'138,137,133,134,128,126,118,140,119,970,441,146,,971,,,,,,,,,142,143',
'139,121,122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,',
',136,135,,120,141,138,137,133,134,128,126,118,140,119,,,146' ]
        racc_action_table = arr = ::Array.new(25461, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'0,0,0,0,0,348,55,322,0,0,209,26,349,0,294,0,0,0,0,0,0,0,355,211,358',
'1,393,0,0,0,0,0,0,0,314,454,0,314,6,486,590,288,0,0,0,0,0,0,0,0,0,0',
'0,739,0,0,0,845,0,0,209,0,0,291,740,685,499,311,311,367,607,607,486',
'211,846,26,315,3,294,315,458,458,3,0,897,454,0,393,904,0,55,0,933,0',
'9,26,936,0,294,499,957,685,703,703,741,0,10,288,968,322,0,0,0,0,0,0',
'348,11,348,0,0,348,969,349,355,349,358,0,349,291,0,17,17,17,458,17,0',
'0,12,17,17,976,590,288,17,742,17,17,17,17,17,17,17,288,311,739,703,607',
'17,17,17,17,17,17,17,291,740,17,845,741,845,845,367,845,17,291,846,17',
'17,17,17,17,17,17,632,17,17,17,970,17,17,367,17,17,527,897,367,897,20',
'904,897,904,34,933,904,933,741,936,933,936,742,957,936,957,17,36,957',
'17,17,968,17,968,17,971,968,371,494,41,17,580,581,690,371,969,632,969',
'17,77,969,509,510,17,17,17,17,17,17,742,752,752,17,17,976,691,976,848',
'814,976,17,78,527,17,18,18,18,970,18,17,17,279,18,18,509,510,279,18',
'693,18,18,18,18,18,18,18,694,494,494,494,645,18,18,18,18,18,18,18,527',
'690,18,970,971,970,494,618,970,18,527,71,18,18,18,18,18,18,18,71,18',
'18,18,691,18,18,814,18,18,462,580,581,580,581,97,580,581,690,971,752',
'971,859,645,971,752,693,693,690,384,18,193,859,18,694,694,18,848,18',
'848,691,462,848,814,18,462,462,618,618,353,691,353,18,814,646,210,618',
'18,18,18,18,18,18,693,859,859,18,18,25,25,865,694,212,693,18,865,25',
'18,22,22,22,694,22,18,18,865,22,22,384,384,384,22,386,22,22,22,22,22',
'22,22,388,859,867,388,646,22,22,22,22,22,22,22,867,797,22,865,865,865',
'865,390,798,22,14,213,22,22,22,22,22,22,22,22,22,22,22,395,22,22,219',
'22,22,352,372,373,867,867,352,13,13,372,373,386,386,386,865,13,15,15',
'374,388,388,22,14,797,22,374,943,22,943,22,798,22,14,22,251,22,42,42',
'390,390,390,867,600,22,42,37,37,600,22,22,22,22,22,22,395,395,395,22',
'22,252,375,948,13,35,13,22,948,375,22,23,23,23,376,23,22,22,948,23,23',
'376,318,255,23,318,23,23,23,23,23,23,23,42,301,42,431,268,23,23,23,23',
'23,23,23,35,281,23,948,948,948,948,283,432,23,35,284,23,23,23,23,23',
'23,23,23,23,23,23,377,23,23,285,23,23,301,377,431,208,208,631,289,289',
'378,380,301,208,431,948,289,378,380,750,708,432,23,708,750,23,83,83',
'23,290,23,432,23,292,23,110,23,304,304,293,110,110,296,756,23,304,463',
'631,756,23,23,23,23,23,23,297,297,631,23,23,208,298,208,289,302,289',
'23,347,347,23,24,24,24,303,24,23,23,463,24,24,306,463,463,24,313,24',
'24,24,24,24,24,24,304,316,304,564,564,24,24,24,24,24,24,24,774,774,24',
'317,774,774,774,420,319,24,726,726,24,24,24,24,24,24,24,24,24,24,24',
'327,24,24,328,24,24,420,420,420,420,420,420,420,420,420,420,420,862',
'862,420,420,958,958,420,420,330,24,331,343,24,346,354,24,357,24,359',
'24,420,24,420,24,420,420,420,420,420,420,420,24,420,363,558,389,24,24',
'24,24,24,24,392,411,417,24,24,423,420,831,420,425,429,24,430,438,24',
'27,27,27,464,27,24,24,465,27,27,466,467,501,27,504,27,27,27,27,27,27',
'27,558,558,558,558,505,27,27,27,27,27,27,27,511,515,27,831,831,831,831',
'651,516,27,519,521,27,27,27,27,27,27,27,27,27,27,27,528,27,27,532,27',
'27,651,651,651,651,651,651,651,651,651,651,651,541,542,651,651,543,556',
'651,651,567,27,571,576,27,27,582,27,583,27,622,27,651,27,651,27,651',
'651,651,651,651,651,651,27,651,629,635,640,27,27,27,27,27,27,643,649',
'650,27,27,658,651,660,673,677,680,27,687,689,27,30,30,30,30,30,27,27',
'692,30,30,695,696,697,30,698,30,30,30,30,30,30,30,5,5,5,5,5,30,30,30',
'30,30,30,30,701,572,30,572,572,572,702,572,30,30,704,30,30,30,30,30',
'30,30,30,710,30,30,30,711,30,30,714,30,30,676,676,676,676,676,676,676',
'676,676,676,676,716,718,676,676,719,720,676,676,723,30,728,734,30,736',
'738,30,743,30,747,30,676,748,676,30,676,676,676,676,676,676,676,30,676',
'759,763,764,30,30,30,30,30,30,766,767,768,30,30,770,676,773,676,780',
'801,30,802,806,30,31,31,31,808,31,30,30,811,31,31,362,812,813,31,818',
'31,31,31,31,31,31,31,280,280,280,280,280,31,31,31,31,31,31,31,821,339',
'31,339,339,339,822,339,837,31,840,850,31,31,31,31,31,31,31,853,31,31',
'31,854,31,31,855,362,362,877,878,481,890,356,356,362,900,365,365,339',
'362,356,901,906,907,365,339,915,917,31,920,921,31,922,923,31,935,31',
'945,31,362,953,481,962,592,592,481,481,481,481,964,965,592,967,,,31',
'31,31,31,31,31,362,,362,31,31,,356,,356,,365,31,365,,31,32,32,32,,32',
'31,31,,32,32,,,,32,,32,32,32,32,32,32,32,592,,592,,,32,32,32,32,32,32',
'32,,,32,717,717,,,,,32,,717,32,32,32,32,32,32,32,,32,32,32,,32,32,,603',
',603,603,603,603,603,,,,745,745,,,,603,,,745,,,,32,745,,32,,,32,,32',
'717,,717,,,,,603,603,684,684,684,684,684,603,603,603,603,32,32,32,32',
'32,32,,,,32,32,,,,32,,745,32,745,,32,38,38,38,482,38,32,32,,38,38,,',
',38,603,38,38,38,38,38,38,38,,,,,,38,38,38,38,38,38,38,482,,38,,482',
'482,482,482,,38,,,38,38,38,38,38,38,38,,38,38,38,,38,38,,38,38,653,653',
'653,653,653,653,653,653,653,653,653,,,653,653,,,653,653,,38,,,38,,,38',
',38,,,653,,653,38,653,653,653,653,653,653,653,38,653,,,,38,38,38,38',
'38,38,847,847,,38,38,,653,653,847,,,38,,,38,39,39,39,,39,38,38,,39,39',
',,,39,,39,39,39,39,39,39,39,,,,,,39,39,39,39,39,39,39,,836,39,836,836',
'836,847,836,847,39,,,39,39,39,39,39,39,39,,39,39,39,,39,39,,39,39,19',
'19,19,19,19,19,19,19,19,19,19,,,19,19,,,19,19,,39,,,39,,,39,,39,,,19',
',19,39,19,19,19,19,19,19,19,39,19,,,,39,39,39,39,39,39,934,934,,39,39',
',19,,934,,,39,,,39,40,40,40,,40,39,39,,40,40,,,,40,,40,40,40,40,40,40',
'40,,,,,,40,40,40,40,40,40,40,,,40,,,,934,,934,40,,,40,40,40,40,40,40',
'40,,40,40,40,,40,40,,40,40,249,249,249,249,249,249,249,249,249,249,249',
',,249,249,,,249,249,,40,,,40,,,40,,40,,,249,,249,40,249,249,249,249',
'249,249,249,40,249,,,,40,40,40,40,40,40,,,,40,40,,249,,,,,40,,,40,52',
'52,52,,52,40,40,,52,52,,,,52,,52,52,52,52,52,52,52,,,,,,52,52,52,52',
'52,52,52,,,52,,,,,,,52,,,52,52,52,52,52,52,52,,52,52,52,,52,52,,52,52',
'428,428,428,428,428,428,428,428,428,428,428,,,428,428,,,428,428,,52',
',,52,,,52,,52,,,428,,428,52,428,428,428,428,428,428,428,52,428,,,,52',
'52,52,52,52,52,,,,52,52,,428,,,,,52,,,52,53,53,53,,53,52,52,,53,53,',
',,53,,53,53,53,53,53,53,53,,,,,,53,53,53,53,53,53,53,,,53,,,,,,,53,',
',53,53,53,53,53,53,53,53,53,53,53,,53,53,,53,53,447,447,447,447,447',
'447,447,447,447,447,447,,,447,447,,,447,447,,53,,,53,,,53,,53,,53,447',
',447,53,447,447,447,447,447,447,447,53,447,,,,53,53,53,53,53,53,,,,53',
'53,,447,,,,,53,,,53,54,54,54,,54,53,53,,54,54,,,,54,,54,54,54,54,54',
'54,54,,,,,,54,54,54,54,54,54,54,,,54,,,,,,,54,,,54,54,54,54,54,54,54',
'54,54,54,54,,54,54,,54,54,539,539,539,539,539,539,539,539,539,539,539',
',,539,539,,,539,539,,54,,,54,,,54,,54,,,539,,539,54,539,539,539,539',
'539,539,539,54,539,,,,54,54,54,54,54,54,,,,54,54,,539,,,,,54,,,54,57',
'57,57,,57,54,54,,57,57,,,,57,,57,57,57,57,57,57,57,,,,,,57,57,57,57',
'57,57,57,,,57,,,,,,,57,,,57,57,57,57,57,57,57,,57,57,57,,57,57,,57,57',
'700,700,700,700,700,700,700,700,700,700,700,,,700,700,,,700,700,,57',
',,57,,,57,,57,,,700,,700,57,700,700,700,700,700,700,700,57,700,,,,57',
'57,57,57,57,57,,,,57,57,,700,,,,,57,,,57,58,58,58,,58,57,57,,58,58,',
',,58,,58,58,58,58,58,58,58,,,,,,58,58,58,58,58,58,58,,,58,,,,,,,58,',
',58,58,58,58,58,58,58,,58,58,58,,58,58,,58,58,779,779,779,779,779,779',
'779,779,779,779,779,,,779,779,,,779,779,,58,,,58,,,58,,58,,,779,,779',
'58,779,779,779,779,779,779,779,58,779,,,,58,58,58,58,58,58,,,,58,58',
',779,,,,,58,,,58,61,61,61,,61,58,58,,61,61,,,,61,,61,61,61,61,61,61',
'61,,,,,,61,61,61,61,61,61,61,,,61,,,,,,,61,,,61,61,61,61,61,61,61,,61',
'61,61,,61,61,,61,61,785,785,785,785,785,785,785,785,785,785,785,,,785',
'785,,,785,785,,61,,,61,,,61,,61,,,785,,785,61,785,785,785,785,785,785',
'785,61,785,,,,61,61,61,61,61,61,,,,61,61,61,785,,,,61,61,,,61,62,62',
'62,,62,61,61,,62,62,,,,62,,62,62,62,62,62,62,62,,,,,,62,62,62,62,62',
'62,62,,,62,,,,,,,62,,,62,62,62,62,62,62,62,,62,62,62,,62,62,,755,,755',
'755,755,755,755,,,,,,,,,755,,655,,655,655,655,62,655,,62,,,62,,62,,62',
',,,,,755,,,,,,,755,755,755,755,62,62,62,62,62,62,655,,,62,62,,,655,655',
'655,655,62,,,62,63,63,63,655,63,62,62,,63,63,,,,63,755,63,63,63,63,63',
'63,63,,,,,,63,63,63,63,63,63,63,,,63,,,,,,,63,,,63,63,63,63,63,63,63',
',63,63,63,472,63,63,,863,,863,863,863,863,863,,,,,,,472,472,863,,,,63',
',,63,,,63,470,472,63,472,63,472,472,472,472,,,472,863,472,,,,470,470',
'863,863,863,863,63,63,63,63,63,63,,,470,63,63,,470,470,470,470,,63,',
',63,84,84,84,,84,63,63,,84,84,,,,84,863,84,84,84,84,84,84,84,,84,,,',
'84,84,84,84,84,84,84,,,84,,,,,,,84,,,84,84,84,84,84,84,84,84,84,84,84',
',84,84,,84,84,787,787,787,787,787,787,787,787,787,787,787,,,787,787',
',,787,787,,84,,,84,84,,84,,84,,84,787,84,787,84,787,787,787,787,787',
'787,787,84,787,84,,,84,84,84,84,84,84,,,,84,84,,787,,,,,84,,,84,87,87',
'87,,87,84,84,,87,87,,,,87,,87,87,87,87,87,87,87,,87,,,,87,87,87,87,87',
'87,87,,,87,,,,,,,87,,,87,87,87,87,87,87,87,87,87,87,87,,87,87,,87,87',
'790,790,790,790,790,790,790,790,790,790,790,,,790,790,,,790,790,,87',
',,87,87,,87,,87,,87,790,87,790,87,790,790,790,790,790,790,790,87,790',
'87,,,87,87,87,87,87,87,,,,87,87,,790,,,,,87,,,87,99,99,99,99,99,87,87',
',99,99,,,,99,,99,99,99,99,99,99,99,,,,,,99,99,99,99,99,99,99,,,99,,',
',,,99,99,99,99,99,99,99,99,99,99,99,,99,99,99,,99,99,,99,99,792,792',
'792,792,792,792,792,792,792,792,792,,,792,792,,,792,792,,99,,,99,,,99',
',99,,99,792,,792,99,792,792,792,792,792,792,792,99,792,,,,99,99,99,99',
'99,99,,,,99,99,,792,,,,99,99,,,99,103,103,103,,103,99,99,,103,103,,',
',103,,103,103,103,103,103,103,103,,,,,,103,103,103,103,103,103,103,',
',103,,,,,,,103,,,103,103,103,103,103,103,103,,103,103,103,,103,103,',
'103,103,880,880,880,880,880,880,880,880,880,880,880,,,880,880,,,880',
'880,,103,,,103,,,103,,103,,,880,,880,103,880,880,880,880,880,880,880',
'103,880,,,,103,103,103,103,103,103,,,,103,103,,880,,,,,103,,,103,104',
'104,104,,104,103,103,,104,104,,,,104,,104,104,104,104,104,104,104,,',
',,,104,104,104,104,104,104,104,,,104,,,,,,,104,,,104,104,104,104,104',
'104,104,,104,104,104,,104,104,,104,104,882,882,882,882,882,882,882,882',
'882,882,882,,,882,882,,,882,882,,104,,,104,,,104,,104,,,882,,882,104',
'882,882,882,882,882,882,882,104,882,,,,104,104,104,104,104,104,,,,104',
'104,,882,,,,,104,,,104,105,105,105,,105,104,104,,105,105,,,,105,,105',
'105,105,105,105,105,105,,,,,,105,105,105,105,105,105,105,,,105,,,,,',
',105,,,105,105,105,105,105,105,105,,105,105,105,,105,105,,105,105,928',
'928,928,928,928,928,928,928,928,928,928,,,928,928,,,928,928,,105,,,105',
',,105,,105,,,928,,928,105,928,928,928,928,928,928,928,105,928,,,,105',
'105,105,105,105,105,,,,105,105,,928,,,,,105,,,105,106,106,106,,106,105',
'105,,106,106,,,,106,,106,106,106,106,106,106,106,,,,,,106,106,106,106',
'106,106,106,,,106,,,,,,,106,,,106,106,106,106,106,106,106,,106,106,106',
'468,106,106,,106,106,569,,569,569,569,,569,,,,,468,468,,,56,,56,56,56',
'106,56,,106,,468,106,468,106,468,468,468,468,,106,,,724,569,724,724',
'724,106,724,,569,,106,106,106,106,106,106,56,56,,106,106,,,56,56,56',
'56,106,,,106,107,107,107,107,107,106,106,724,107,107,,,,107,724,107',
'107,107,107,107,107,107,,,,,,107,107,107,107,107,107,107,,,107,,,,,',
'107,107,,107,107,107,107,107,107,107,107,,107,107,107,,107,107,,107',
'107,,,,,,,,,,,,,,,,323,,323,323,323,107,323,,107,,,107,,107,,107,,,',
'107,,,,,,,,107,,,,,107,107,107,107,107,107,323,,323,107,107,,,323,323',
'323,323,107,,,107,108,108,108,108,108,107,107,,108,108,,,,108,,108,108',
'108,108,108,108,108,,,,,,108,108,108,108,108,108,108,,,108,,,,,,108',
'108,108,108,108,108,108,108,108,108,108,,108,108,108,,108,108,,108,108',
',,,,,,,,,,,,,,,562,,562,562,562,108,562,,108,,,108,,108,,108,,,,108',
',,,,,,,108,,,,,108,108,108,108,108,108,562,,,108,108,,,562,562,562,562',
'108,,,108,195,195,195,195,195,108,108,,195,195,,,,195,,195,195,195,195',
'195,195,195,,,,,,195,195,195,195,195,195,195,,,195,,,,,,195,195,,195',
'195,195,195,195,195,195,195,,195,195,195,,195,195,,195,195,460,460,460',
'460,460,460,460,460,460,460,460,,,460,460,,,460,460,,195,,,195,,,195',
',195,,195,460,,460,195,460,460,460,460,460,460,460,195,460,,,,195,195',
'195,195,195,195,,,,195,195,,,,,,,195,,,195,196,196,196,,196,195,195',
',196,196,,,,196,,196,196,196,196,196,196,196,,,,,,196,196,196,196,196',
'196,196,,,196,,,,,,,196,,,196,196,196,196,196,196,196,,196,196,196,',
'196,196,,196,196,461,461,461,461,461,461,461,461,461,461,461,,,461,461',
',,461,461,,196,,,196,,,196,,196,,196,461,,461,196,461,461,461,461,461',
'461,461,196,461,,,,196,196,196,196,196,196,,,,196,196,,,,,,,196,,,196',
'197,197,197,,197,196,196,,197,197,,,,197,,197,197,197,197,197,197,197',
',,,,,197,197,197,197,197,197,197,,,197,,,,,,,197,,,197,197,197,197,197',
'197,197,,197,197,197,,197,197,,197,197,471,471,471,471,471,471,471,',
',471,471,,,,,,,471,471,,197,,,197,,,197,,197,,197,471,,471,197,471,471',
'471,471,471,471,471,197,471,,,,197,197,197,197,197,197,,,,197,197,,',
',,,,197,,,197,198,198,198,,198,197,197,,198,198,,,,198,,198,198,198',
'198,198,198,198,,,,,,198,198,198,198,198,198,198,,,198,,,,,,,198,,,198',
'198,198,198,198,198,198,,198,198,198,473,198,198,,198,198,,,,,,,,,,',
',473,473,,,,,,,,198,,,198,,473,198,473,198,473,473,473,473,,198,473',
',473,,,,,198,,,,,198,198,198,198,198,198,,,,198,198,,,,,,,198,,,198',
'199,199,199,,199,198,198,,199,199,,,,199,,199,199,199,199,199,199,199',
',,,,,199,199,199,199,199,199,199,,,199,,,,,,,199,,,199,199,199,199,199',
'199,199,199,199,199,199,,199,199,,199,199,474,,,,,,,,,,,,,,,,,474,474',
',199,,,199,,,199,,199,,199,474,,474,199,474,474,474,474,,,474,199,474',
',,,199,199,199,199,199,199,,,,199,199,,,,,,,199,,,199,200,200,200,,200',
'199,199,,200,200,,,,200,,200,200,200,200,200,200,200,,,,,,200,200,200',
'200,200,200,200,,,200,,,,,,,200,,,200,200,200,200,200,200,200,200,200',
'200,200,,200,200,,200,200,475,,,,,,,,,,,,,,,,,475,475,,200,,,200,,,200',
',200,,200,475,,475,200,475,475,475,475,,,475,200,475,,,,200,200,200',
'200,200,200,,,,200,200,,,,,,,200,,,200,204,204,204,,204,200,200,,204',
'204,,,,204,,204,204,204,204,204,204,204,,,,,,204,204,204,204,204,204',
'204,,,204,,,,,,,204,,,204,204,204,204,204,204,204,,204,204,204,,204',
'204,,204,204,476,476,476,476,476,476,476,,,476,476,,,,,,,476,476,,204',
',,204,,,204,,204,,,476,,476,204,476,476,476,476,476,476,476,204,476',
',,,204,204,204,204,204,204,,,,204,204,,,,,,,204,,,204,205,205,205,,205',
'204,204,,205,205,,,,205,,205,205,205,205,205,205,205,,,,,,205,205,205',
'205,205,205,205,,,205,,,,,,,205,,,205,205,205,205,205,205,205,,205,205',
'205,,205,205,,205,205,477,477,477,477,477,477,477,,,477,477,,,,,,,477',
'477,,205,,,205,,,205,,205,,,477,,477,205,477,477,477,477,477,477,477',
'205,477,,,,205,205,205,205,205,205,,,,205,205,,,,,,,205,,,205,206,206',
'206,,206,205,205,,206,206,,,,206,,206,206,206,206,206,206,206,,,,,,206',
'206,206,206,206,206,206,,,206,,,,,,,206,,,206,206,206,206,206,206,206',
',206,206,206,,206,206,,206,206,478,478,478,478,478,478,478,,,478,478',
',,,,,,478,478,,206,,,206,,,206,,206,,,478,,478,206,478,478,478,478,478',
'478,478,206,478,,,,206,206,206,206,206,206,,,,206,206,,,,,,,206,,,206',
'214,214,214,214,214,206,206,,214,214,,,,214,,214,214,214,214,214,214',
'214,,,,,,214,214,214,214,214,214,214,,,214,,,,,,214,214,,214,214,214',
'214,214,214,214,214,,214,214,214,,214,214,,214,214,479,479,479,479,479',
'479,479,,,479,479,,,,,,,479,479,,214,,,214,,,214,,214,,214,479,,479',
'214,479,479,479,479,479,479,479,214,479,,,,214,214,214,214,214,214,',
',,214,214,,,,,,,214,,,214,215,215,215,,215,214,214,,215,215,,,,215,',
'215,215,215,215,215,215,215,,,,,,215,215,215,215,215,215,215,,,215,',
',,,,,215,,,215,215,215,215,215,215,215,,215,215,215,,215,215,,215,215',
'480,480,480,480,480,480,480,,,480,480,,,,,,,480,480,,215,,,215,,215',
'215,,215,,,480,,480,215,480,480,480,480,480,480,480,215,480,,,,215,215',
'215,215,215,215,,,,215,215,,,,,,,215,,,215,218,218,218,,218,215,215',
',218,218,,,,218,,218,218,218,218,218,218,218,,,,,,218,218,218,218,218',
'218,218,,,218,,,,,,,218,,,218,218,218,218,218,218,218,,218,218,218,',
'218,218,,218,218,483,483,483,483,483,483,483,,,483,483,,,,,,,483,483',
',218,,,218,,,218,,218,,,483,,483,218,483,483,483,483,483,483,483,218',
'483,,,,218,218,218,218,218,218,,,,218,218,,,,,,,218,,,218,220,220,220',
',220,218,218,,220,220,,,,220,,220,220,220,220,220,220,220,,,,,,220,220',
'220,220,220,220,220,,,220,,,,,,,220,,,220,220,220,220,220,220,220,,220',
'220,220,,220,220,,220,220,484,484,484,484,484,484,484,484,,484,484,',
',,,,,484,484,,220,,,220,,,220,,220,,,484,,484,220,484,484,484,484,484',
'484,484,220,484,,,,220,220,220,220,220,220,,,,220,220,,,,,,,220,,,220',
'221,221,221,,221,220,220,,221,221,,,,221,,221,221,221,221,221,221,221',
',,,,,221,221,221,221,221,221,221,,,221,,,,,,,221,,,221,221,221,221,221',
'221,221,,221,221,221,469,221,221,,221,221,,,,,,,,,,,,469,469,,,,,,,',
'221,,,221,,469,221,469,221,469,469,469,469,,221,,,,,,,,221,,,,,221,221',
'221,221,221,221,,,,221,221,,,,,,,221,,,221,222,222,222,,222,221,221',
',222,222,,,,222,,222,222,222,222,222,222,222,,,,,,222,222,222,222,222',
'222,222,,,222,,,,,,,222,,,222,222,222,222,222,222,222,,222,222,222,',
'222,222,,222,222,,,,,,,,,,,,,,,,,,,,,222,,,222,,,222,,222,,,,,,222,',
',,,,,,222,,,,,222,222,222,222,222,222,,,,222,222,,,,,,,222,,,222,223',
'223,223,,223,222,222,,223,223,,,,223,,223,223,223,223,223,223,223,,',
',,,223,223,223,223,223,223,223,,,223,,,,,,,223,,,223,223,223,223,223',
'223,223,,223,223,223,,223,223,,223,223,,,,,,,,,,,,,,,,,,,,,223,,,223',
',,223,,223,,,,,,223,,,,,,,,223,,,,,223,223,223,223,223,223,,,,223,223',
',,,,,,223,,,223,224,224,224,,224,223,223,,224,224,,,,224,,224,224,224',
'224,224,224,224,,,,,,224,224,224,224,224,224,224,,,224,,,,,,,224,,,224',
'224,224,224,224,224,224,,224,224,224,,224,224,,224,224,,,,,,,,,,,,,',
',,,,,,,224,,,224,,,224,,224,,,,,,224,,,,,,,,224,,,,,224,224,224,224',
'224,224,,,,224,224,,,,,,,224,,,224,225,225,225,,225,224,224,,225,225',
',,,225,,225,225,225,225,225,225,225,,,,,,225,225,225,225,225,225,225',
',,225,,,,,,,225,,,225,225,225,225,225,225,225,,225,225,225,,225,225',
',225,225,,,,,,,,,,,,,,,,,,,,,225,,,225,,,225,,225,,,,,,225,,,,,,,,225',
',,,,225,225,225,225,225,225,,,,225,225,,,,,,,225,,,225,226,226,226,',
'226,225,225,,226,226,,,,226,,226,226,226,226,226,226,226,,,,,,226,226',
'226,226,226,226,226,,,226,,,,,,,226,,,226,226,226,226,226,226,226,,226',
'226,226,,226,226,,226,226,,,,,,,,,,,,,,,,,,,,,226,,,226,,,226,,226,',
',,,,226,,,,,,,,226,,,,,226,226,226,226,226,226,,,,226,226,,,,,,,226',
',,226,227,227,227,,227,226,226,,227,227,,,,227,,227,227,227,227,227',
'227,227,,,,,,227,227,227,227,227,227,227,,,227,,,,,,,227,,,227,227,227',
'227,227,227,227,,227,227,227,,227,227,,227,227,,,,,,,,,,,,,,,,,,,,,227',
',,227,,,227,,227,,,,,,227,,,,,,,,227,,,,,227,227,227,227,227,227,,,',
'227,227,,,,,,,227,,,227,228,228,228,,228,227,227,,228,228,,,,228,,228',
'228,228,228,228,228,228,,,,,,228,228,228,228,228,228,228,,,228,,,,,',
',228,,,228,228,228,228,228,228,228,,228,228,228,,228,228,,228,228,,',
',,,,,,,,,,,,,,,,,,228,,,228,,,228,,228,,,,,,228,,,,,,,,228,,,,,228,228',
'228,228,228,228,,,,228,228,,,,,,,228,,,228,229,229,229,,229,228,228',
',229,229,,,,229,,229,229,229,229,229,229,229,,,,,,229,229,229,229,229',
'229,229,,,229,,,,,,,229,,,229,229,229,229,229,229,229,,229,229,229,',
'229,229,,229,229,,,,,,,,,,,,,,,,,,,,,229,,,229,,,229,,229,,,,,,229,',
',,,,,,229,,,,,229,229,229,229,229,229,,,,229,229,,,,,,,229,,,229,230',
'230,230,,230,229,229,,230,230,,,,230,,230,230,230,230,230,230,230,,',
',,,230,230,230,230,230,230,230,,,230,,,,,,,230,,,230,230,230,230,230',
'230,230,,230,230,230,,230,230,,230,230,,,,,,,,,,,,,,,,,,,,,230,,,230',
',,230,,230,,,,,,230,,,,,,,,230,,,,,230,230,230,230,230,230,,,,230,230',
',,,,,,230,,,230,231,231,231,,231,230,230,,231,231,,,,231,,231,231,231',
'231,231,231,231,,,,,,231,231,231,231,231,231,231,,,231,,,,,,,231,,,231',
'231,231,231,231,231,231,,231,231,231,,231,231,,231,231,,,,,,,,,,,,,',
',,,,,,,231,,,231,,,231,,231,,,,,,231,,,,,,,,231,,,,,231,231,231,231',
'231,231,,,,231,231,,,,,,,231,,,231,232,232,232,,232,231,231,,232,232',
',,,232,,232,232,232,232,232,232,232,,,,,,232,232,232,232,232,232,232',
',,232,,,,,,,232,,,232,232,232,232,232,232,232,,232,232,232,,232,232',
',232,232,,,,,,,,,,,,,,,,,,,,,232,,,232,,,232,,232,,,,,,232,,,,,,,,232',
',,,,232,232,232,232,232,232,,,,232,232,,,,,,,232,,,232,233,233,233,',
'233,232,232,,233,233,,,,233,,233,233,233,233,233,233,233,,,,,,233,233',
'233,233,233,233,233,,,233,,,,,,,233,,,233,233,233,233,233,233,233,,233',
'233,233,,233,233,,233,233,,,,,,,,,,,,,,,,,,,,,233,,,233,,,233,,233,',
',,,,233,,,,,,,,233,,,,,233,233,233,233,233,233,,,,233,233,,,,,,,233',
',,233,234,234,234,,234,233,233,,234,234,,,,234,,234,234,234,234,234',
'234,234,,,,,,234,234,234,234,234,234,234,,,234,,,,,,,234,,,234,234,234',
'234,234,234,234,,234,234,234,,234,234,,234,234,,,,,,,,,,,,,,,,,,,,,234',
',,234,,,234,,234,,,,,,234,,,,,,,,234,,,,,234,234,234,234,234,234,,,',
'234,234,,,,,,,234,,,234,235,235,235,,235,234,234,,235,235,,,,235,,235',
'235,235,235,235,235,235,,,,,,235,235,235,235,235,235,235,,,235,,,,,',
',235,,,235,235,235,235,235,235,235,,235,235,235,,235,235,,235,235,,',
',,,,,,,,,,,,,,,,,,235,,,235,,,235,,235,,,,,,235,,,,,,,,235,,,,,235,235',
'235,235,235,235,,,,235,235,,,,,,,235,,,235,236,236,236,,236,235,235',
',236,236,,,,236,,236,236,236,236,236,236,236,,,,,,236,236,236,236,236',
'236,236,,,236,,,,,,,236,,,236,236,236,236,236,236,236,,236,236,236,',
'236,236,,236,236,,,,,,,,,,,,,,,,,,,,,236,,,236,,,236,,236,,,,,,236,',
',,,,,,236,,,,,236,236,236,236,236,236,,,,236,236,,,,,,,236,,,236,237',
'237,237,,237,236,236,,237,237,,,,237,,237,237,237,237,237,237,237,,',
',,,237,237,237,237,237,237,237,,,237,,,,,,,237,,,237,237,237,237,237',
'237,237,,237,237,237,,237,237,,237,237,,,,,,,,,,,,,,,,,,,,,237,,,237',
',,237,,237,,,,,,237,,,,,,,,237,,,,,237,237,237,237,237,237,,,,237,237',
',,,,,,237,,,237,238,238,238,,238,237,237,,238,238,,,,238,,238,238,238',
'238,238,238,238,,,,,,238,238,238,238,238,238,238,,,238,,,,,,,238,,,238',
'238,238,238,238,238,238,,238,238,238,,238,238,,238,238,,,,,,,,,,,,,',
',,,,,,,238,,,238,,,238,,238,,,,,,238,,,,,,,,238,,,,,238,238,238,238',
'238,238,,,,238,238,,,,,,,238,,,238,239,239,239,,239,238,238,,239,239',
',,,239,,239,239,239,239,239,239,239,,,,,,239,239,239,239,239,239,239',
',,239,,,,,,,239,,,239,239,239,239,239,239,239,,239,239,239,,239,239',
',239,239,,,,,,,,,,,,,,,,,,,,,239,,,239,,,239,,239,,,,,,239,,,,,,,,239',
',,,,239,239,239,239,239,239,,,,239,239,,,,,,,239,,,239,240,240,240,',
'240,239,239,,240,240,,,,240,,240,240,240,240,240,240,240,,,,,,240,240',
'240,240,240,240,240,,,240,,,,,,,240,,,240,240,240,240,240,240,240,,240',
'240,240,,240,240,,240,240,,,,,,,,,,,,,,,,,,,,,240,,,240,,,240,,240,',
',,,,240,,,,,,,,240,,,,,240,240,240,240,240,240,,,,240,240,,,,,,,240',
',,240,241,241,241,,241,240,240,,241,241,,,,241,,241,241,241,241,241',
'241,241,,,,,,241,241,241,241,241,241,241,,,241,,,,,,,241,,,241,241,241',
'241,241,241,241,,241,241,241,,241,241,,241,241,,,,,,,,,,,,,,,,,,,,,241',
',,241,,,241,,241,,,,,,241,,,,,,,,241,,,,,241,241,241,241,241,241,,,',
'241,241,,,,,,,241,,,241,242,242,242,,242,241,241,,242,242,,,,242,,242',
'242,242,242,242,242,242,,,,,,242,242,242,242,242,242,242,,,242,,,,,',
',242,,,242,242,242,242,242,242,242,,242,242,242,,242,242,,242,242,,',
',,,,,,,,,,,,,,,,,,242,,,242,,,242,,242,,,,,,242,,,,,,,,242,,,,,242,242',
'242,242,242,242,,,,242,242,,,,,,,242,,,242,243,243,243,,243,242,242',
',243,243,,,,243,,243,243,243,243,243,243,243,,,,,,243,243,243,243,243',
'243,243,,,243,,,,,,,243,,,243,243,243,243,243,243,243,,243,243,243,',
'243,243,,243,243,,,,,,,,,,,,,,,,,,,,,243,,,243,,,243,,243,,,,,,243,',
',,,,,,243,,,,,243,243,243,243,243,243,,,,243,243,,,,,,,243,,,243,244',
'244,244,,244,243,243,,244,244,,,,244,,244,244,244,244,244,244,244,,',
',,,244,244,244,244,244,244,244,,,244,,,,,,,244,,,244,244,244,244,244',
'244,244,,244,244,244,,244,244,,244,244,,,,,,,,,,,,,,,,,,,,,244,,,244',
',,244,,244,,,,,,244,,,,,,,,244,,,,,244,244,244,244,244,244,,,,244,244',
',,,,,,244,,,244,254,254,254,,254,244,244,,254,254,,,,254,,254,254,254',
'254,254,254,254,,,,,,254,254,254,254,254,254,254,,,254,,,,,,,254,,,254',
'254,254,254,254,254,254,,254,254,254,,254,254,,254,254,,,,,,,,,,,,,',
',,,,,,,254,,,254,,,254,,254,,,,,,254,,,,,,,,254,,,,,254,254,254,254',
'254,254,,,,254,254,,,,,,,254,,,254,256,256,256,,256,254,254,,256,256',
',,,256,,256,256,256,256,256,256,256,,,,,,256,256,256,256,256,256,256',
',,256,,,,,,,256,,,256,256,256,256,256,256,256,,256,256,256,,256,256',
',256,256,,,,,,,,,,,,,,,,,,,,,256,,,256,,,256,,256,,,,,,256,,,,,,,,256',
',,,,256,256,256,256,256,256,,,,256,256,,,,,,,256,,,256,262,262,262,',
'262,256,256,,262,262,,,,262,,262,262,262,262,262,262,262,,,,,,262,262',
'262,262,262,262,262,,,262,,,,,,,262,,,262,262,262,262,262,262,262,,262',
'262,262,,262,262,,262,262,,,,,,,,,,,,,,,,,,,,,262,,,262,,,262,,262,',
',,,,262,,,,,,,,262,,,,,262,262,262,262,262,262,,,,262,262,,,,,,,262',
',,262,269,269,269,,269,262,262,,269,269,,,,269,,269,269,269,269,269',
'269,269,,,,,,269,269,269,269,269,269,269,,,269,,,,,,,269,,,269,269,269',
'269,269,269,269,269,269,269,269,,269,269,,269,269,,,,,,,,,,,,,,,,,,',
',,269,,,269,,,269,,269,,269,,269,,269,,,,,,,,269,,,,,269,269,269,269',
'269,269,,,,269,269,,,,,,,269,,,269,270,270,270,,270,269,269,,270,270',
',,,270,,270,270,270,270,270,270,270,,,,,,270,270,270,270,270,270,270',
',,270,,,,,,,270,,,270,270,270,270,270,270,270,270,270,270,270,,270,270',
',270,270,,,,,,,,,,,,,,,,,,,,,270,,,270,,,270,,270,,270,,270,,270,,,',
',,,,270,,,,,270,270,270,270,270,270,,,,270,270,,,,,,,270,,,270,278,278',
'278,,278,270,270,,278,278,,,,278,,278,278,278,278,278,278,278,,,,,,278',
'278,278,278,278,278,278,,,278,,,,,,,278,,,278,278,278,278,278,278,278',
'278,278,278,278,,278,278,,278,278,,,,,,,,,,,,,,,,,,,,,278,,,278,,278',
'278,,278,,278,,278,,278,,,,,,,,278,,,,,278,278,278,278,278,278,,,,278',
'278,,,,,,,278,,,278,282,282,282,282,282,278,278,,282,282,,,,282,,282',
'282,282,282,282,282,282,,,,,,282,282,282,282,282,282,282,,,282,,,,,',
'282,282,,282,282,282,282,282,282,282,282,,282,282,282,,282,282,,282',
'282,,,,,,,,,,,,,,,,,,,,,282,,,282,,,282,,282,,282,,,,282,,,,,,,,282',
',,,,282,282,282,282,282,282,,,,282,282,,,,,,,282,,,282,286,286,286,',
'286,282,282,,286,286,,,,286,,286,286,286,286,286,286,286,,,,,,286,286',
'286,286,286,286,286,,,286,,,,,,,286,,,286,286,286,286,286,286,286,,286',
'286,286,,286,286,,926,,926,926,926,926,926,,,,,,,,,926,,,,,,,286,,,286',
',,286,,286,,,,,,,,926,926,,,,,,926,926,926,926,286,286,286,286,286,286',
',,,286,286,,,,286,,,286,,,286,287,287,287,287,287,286,286,,287,287,',
',,287,926,287,287,287,287,287,287,287,,,,,,287,287,287,287,287,287,287',
',,287,,,,,,287,287,,287,287,287,287,287,287,287,287,,287,287,287,,287',
'287,,287,287,,,,,,,,,,,,,,,,,,,,,287,,,287,,,287,,287,,287,,,,287,,',
',,,,,287,,,,,287,287,287,287,287,287,,,,287,287,,,,,,,287,,,287,299',
'299,299,,299,287,287,,299,299,,,,299,,299,299,299,299,299,299,299,,',
',,,299,299,299,299,299,299,299,,,299,,,,,,,299,,,299,299,299,299,299',
'299,299,,299,299,299,,299,299,,,,,,,,,,,,,,,,,,,,,,,,299,,,299,,,299',
',299,,,,,,,,,,,,,,,,,,,299,299,299,299,299,299,,,,299,299,,,,,,,299',
',,299,308,308,308,,308,299,299,,308,308,,,,308,,308,308,308,308,308',
'308,308,,,,,,308,308,308,308,308,308,308,,,308,,,,,,,308,,,308,308,308',
'308,308,308,308,,308,308,308,,308,308,,308,308,,,,,,,,,,,,,,,,,,,,,308',
',,308,308,,308,,308,,,,,,308,,,,,,,,308,,,,,308,308,308,308,308,308',
',,,308,308,,,,,,,308,,,308,310,310,310,310,310,308,308,,310,310,,,,310',
',310,310,310,310,310,310,310,,,,,,310,310,310,310,310,310,310,,,310',
',,,,,310,310,,310,310,310,310,310,310,310,310,,310,310,310,,310,310',
',310,310,,,,,,,,,,,,,,,,,,,,,310,,,310,,,310,,310,,310,,,,310,,,,,,',
',310,,,,,310,310,310,310,310,310,,,,310,310,,,,,,,310,,,310,350,350',
'350,,350,310,310,,350,350,,,,350,,350,350,350,350,350,350,350,,,,,,350',
'350,350,350,350,350,350,,,350,,,,,,,350,,,350,350,350,350,350,350,350',
',350,350,350,,350,350,,350,350,,,,,,,,,,,,,,,,,,,,,350,,,350,,,350,',
'350,,,,,,350,,,,,,,,350,,,,,350,350,350,350,350,350,,,,350,350,,,,,',
',350,,,350,351,351,351,,351,350,350,,351,351,,,,351,,351,351,351,351',
'351,351,351,,,,,,351,351,351,351,351,351,351,,,351,,,,,,,351,,,351,351',
'351,351,351,351,351,,351,351,351,,351,351,,351,351,,,,,,,,,,,,,,,,,',
',,,351,,,351,,,351,,351,,,,,,351,,,,,,,,351,,,,,351,351,351,351,351',
'351,,,,351,351,,,,,,,351,,,351,370,370,370,,370,351,351,,370,370,,,',
'370,,370,370,370,370,370,370,370,,,,,,370,370,370,370,370,370,370,,',
'370,,,,,,,370,,,370,370,370,370,370,370,370,,370,370,370,,370,370,,',
',,,,,,,,,,,,,,,,,,,,,370,,,370,,,370,,370,,,,,,,,,,,,,,,,,,,370,370',
'370,370,370,370,,,,370,370,,,,,,,370,,,370,382,382,382,,382,370,370',
',382,382,,,,382,,382,382,382,382,382,382,382,,,,,,382,382,382,382,382',
'382,382,,,382,,,,,,,382,,,382,382,382,382,382,382,382,,382,382,382,',
'382,382,,382,382,,,,,,,,,,,,,,,,,,,,,382,,,382,,,382,,382,,,,,,382,',
',,,,,,382,,,,,382,382,382,382,382,382,,,,382,382,,,,,,,382,,,382,422',
'422,422,,422,382,382,,422,422,,,,422,,422,422,422,422,422,422,422,,',
',,,422,422,422,422,422,422,422,,,422,,,,,,,422,,,422,422,422,422,422',
'422,422,,422,422,422,,422,422,,422,422,,,,,,,,,,,,,,,,,,,,,422,,,422',
',,422,,422,,,,,,422,,,,,,,,422,,,,,422,422,422,422,422,422,,,,422,422',
',,,,,,422,,,422,433,433,433,,433,422,422,,433,433,,,,433,,433,433,433',
'433,433,433,433,,,,,,433,433,433,433,433,433,433,,,433,,,,,,,433,,,433',
'433,433,433,433,433,433,433,433,433,433,,433,433,,433,433,,,,,,,,,,',
',,,,,,,,,,433,,,433,433,,433,,433,,433,,433,,433,,,,,,,,433,,,,,433',
'433,433,433,433,433,,,,433,433,,,,,,,433,,,433,441,441,441,,441,433',
'433,,441,441,,,,441,,441,441,441,441,441,441,441,,,,,,441,441,441,441',
'441,441,441,,,441,,,,,,,441,,,441,441,441,441,441,441,441,441,441,441',
'441,,441,441,,441,441,,,,,,,,,,,,,,,,,,,,,441,,,441,441,,441,,441,,441',
',441,,441,,,,,,,,441,,,,,441,441,441,441,441,441,,,,441,441,,,,,,,441',
',,441,442,442,442,,442,441,441,,442,442,,,,442,,442,442,442,442,442',
'442,442,,,,,,442,442,442,442,442,442,442,,,442,,,,,,,442,,,442,442,442',
'442,442,442,442,442,442,442,442,,442,442,,442,442,,,,,,,,,,,,,,,,,,',
',,442,,,442,442,,442,,442,,442,,442,,442,,,,,,,,442,,,,,442,442,442',
'442,442,442,,,,442,442,,,,,,,442,,,442,443,443,443,,443,442,442,,443',
'443,,,,443,,443,443,443,443,443,443,443,,,,,,443,443,443,443,443,443',
'443,,,443,,,,,,,443,,,443,443,443,443,443,443,443,443,443,443,443,,443',
'443,,443,443,,,,,,,,,,,,,,,,,,,,,443,,,443,443,,443,,443,,443,,443,',
'443,,,,,,,,443,,,,,443,443,443,443,443,443,,,,443,443,,,,,,,443,,,443',
'452,452,452,,452,443,443,,452,452,,,,452,,452,452,452,452,452,452,452',
',,,,,452,452,452,452,452,452,452,,,452,,,,,,,452,,,452,452,452,452,452',
'452,452,452,452,452,452,,452,452,,452,452,,,,,,,,,,,,,,,,,,,,,452,,',
'452,,,452,,452,,452,,,,452,,,,,,,,452,,,,,452,452,452,452,452,452,,',
',452,452,,,,,,,452,,,452,453,453,453,,453,452,452,,453,453,,,,453,,453',
'453,453,453,453,453,453,,,,,,453,453,453,453,453,453,453,,,453,,,,,',
',453,,,453,453,453,453,453,453,453,453,453,453,453,,453,453,,453,453',
',,,,,,,,,,,,,,,,,,,,453,,,453,,,453,,453,,453,,,,453,,,,,,,,453,,,,',
'453,453,453,453,453,453,,,,453,453,,,,,,,453,,,453,455,455,455,,455',
'453,453,,455,455,,,,455,,455,455,455,455,455,455,455,,,,,,455,455,455',
'455,455,455,455,,,455,,,,,,,455,,,455,455,455,455,455,455,455,,455,455',
'455,,455,455,,455,455,,,,,,,,,,,,,,,,,,,,,455,,,455,,,455,,455,,,,,',
'455,,,,,,,,455,,,,,455,455,455,455,455,455,,,,455,455,,,,,,,455,,,455',
'456,456,456,,456,455,455,,456,456,,,,456,,456,456,456,456,456,456,456',
',,,,,456,456,456,456,456,456,456,,,456,,,,,,,456,,,456,456,456,456,456',
'456,456,,456,456,456,,456,456,,456,456,,,,,,,,,,,,,,,,,,,,,456,,,456',
',,456,,456,,,,,,456,,,,,,,,456,,,,,456,456,456,456,456,456,,,,456,456',
',,,,,,456,,,456,457,457,457,,457,456,456,,457,457,,,,457,,457,457,457',
'457,457,457,457,,,,,,457,457,457,457,457,457,457,,,457,,,,,,,457,,,457',
'457,457,457,457,457,457,,457,457,457,,457,457,,457,457,,,,,,,,,,,,,',
',,,,,,,457,,,457,,,457,,457,,,,,,457,,,,,,,,457,,,,,457,457,457,457',
'457,457,,,,457,457,,,,,,,457,,,457,485,485,485,,485,457,457,,485,485',
',,,485,,485,485,485,485,485,485,485,,,,,,485,485,485,485,485,485,485',
',,485,,,,,,,485,,,485,485,485,485,485,485,485,,485,485,485,,485,485',
',485,485,,,,,,,,,,,,,,,,,,,,,485,,,485,,,485,,485,,,,,,485,,,,,,,,485',
',,,,485,485,485,485,485,485,,,,485,485,,,,,,,485,,,485,488,488,488,',
'488,485,485,,488,488,,,,488,,488,488,488,488,488,488,488,,,,,,488,488',
'488,488,488,488,488,,,488,,,,,,,488,,,488,488,488,488,488,488,488,488',
'488,488,488,,488,488,,488,488,,,,,,,,,,,,,,,,,,,,,488,,,488,,,488,,488',
',488,,488,,488,,,,,,,,488,,,,,488,488,488,488,488,488,,,,488,488,,,',
',,,488,,,488,490,490,490,,490,488,488,,490,490,,,,490,,490,490,490,490',
'490,490,490,,,,,,490,490,490,490,490,490,490,,,490,,,,,,,490,,,490,490',
'490,490,490,490,490,490,490,490,490,,490,490,,490,490,,,,,,,,,,,,,,',
',,,,,,490,,,490,,,490,,490,,,,490,,490,,,,,,,,490,,,,,490,490,490,490',
'490,490,,,,490,490,,,,,,,490,,,490,492,492,492,,492,490,490,,492,492',
',,,492,,492,492,492,492,492,492,492,,,,,,492,492,492,492,492,492,492',
',,492,,,,,,,492,,,492,492,492,492,492,492,492,,492,492,492,,492,492',
',492,492,,,,,,,,,,,,,,,,,,,,,492,,,492,,,492,,492,,,,,,492,,,,,,,,492',
',,,,492,492,492,492,492,492,,,,492,492,,,,,,,492,,,492,508,508,508,',
'508,492,492,,508,508,,,,508,,508,508,508,508,508,508,508,,,,,,508,508',
'508,508,508,508,508,,,508,,,,,,,508,,,508,508,508,508,508,508,508,,508',
'508,508,,508,508,,508,508,,,,,,,,,,,,,,,,,,,,,508,,,508,,508,508,,508',
',,,508,,508,,,,,,,,508,,,,,508,508,508,508,508,508,,,,508,508,,,,,,',
'508,,,508,514,514,514,514,514,508,508,,514,514,,,,514,,514,514,514,514',
'514,514,514,,,,,,514,514,514,514,514,514,514,,,514,,,,,,514,514,,514',
'514,514,514,514,514,514,514,,514,514,514,,514,514,,514,514,,,,,,,,,',
',,,,,,,,,,,514,,,514,,,514,,514,,514,,,,514,,,,,,,,514,,,,,514,514,514',
'514,514,514,,,,514,514,,,,,,514,514,,,514,520,520,520,,520,514,514,',
'520,520,,,,520,,520,520,520,520,520,520,520,,,,,,520,520,520,520,520',
'520,520,,,520,,,,,,,520,,,520,520,520,520,520,520,520,,520,520,520,',
'520,520,,,,,,,,,,,,,,,,,,,,,,,,520,,,520,,,520,,520,,,,,,,,,,,,,,,,',
',,520,520,520,520,520,520,,,,520,520,,,,,,,520,,,520,522,522,522,,522',
'520,520,,522,522,,,,522,,522,522,522,522,522,522,522,,,,,,522,522,522',
'522,522,522,522,,,522,,,,,,,522,,,522,522,522,522,522,522,522,522,522',
'522,522,,522,522,,522,522,,,,,,,,,,,,,,,,,,,,,522,,,522,,,522,,522,',
'522,,,,522,,,,,,,,522,,,,,522,522,522,522,522,522,,,,522,522,,,,,,,522',
',,522,525,525,525,,525,522,522,,525,525,,,,525,,525,525,525,525,525',
'525,525,,,,,,525,525,525,525,525,525,525,,,525,,,,,,,525,,,525,525,525',
'525,525,525,525,525,525,525,525,,525,525,,525,525,,,,,,,,,,,,,,,,,,',
',,525,,,525,,,525,,525,,525,,,,525,,,,,,,,525,,,,,525,525,525,525,525',
'525,,,,525,525,,,,,,,525,,,525,531,531,531,,531,525,525,,531,531,,,',
'531,,531,531,531,531,531,531,531,,,,,,531,531,531,531,531,531,531,,',
'531,,,,,,,531,,,531,531,531,531,531,531,531,,531,531,531,,531,531,,',
',,,,,,,,,,,,,,,,,,,,,531,,,531,,,531,,531,,,,,,,,,,,,,,,,,,,531,531',
'531,531,531,531,,,,531,531,,,,,,,531,,,531,534,534,534,,534,531,531',
',534,534,,,,534,,534,534,534,534,534,534,534,,,,,,534,534,534,534,534',
'534,534,,,534,,,,,,,534,,,534,534,534,534,534,534,534,,534,534,534,',
'534,534,,534,534,,,,,,,,,,,,,,,,,,,,,534,,,534,,,534,,534,,,,,,534,',
',,,,,,534,,,,,534,534,534,534,534,534,,,,534,534,,,,,,,534,,,534,535',
'535,535,,535,534,534,,535,535,,,,535,,535,535,535,535,535,535,535,,',
',,,535,535,535,535,535,535,535,,,535,,,,,,,535,,,535,535,535,535,535',
'535,535,,535,535,535,,535,535,,535,535,,,,,,,,,,,,,,,,,,,,,535,,,535',
',,535,,535,,,,,,535,,,,,,,,535,,,,,535,535,535,535,535,535,,,,535,535',
',,,,,,535,,,535,536,536,536,,536,535,535,,536,536,,,,536,,536,536,536',
'536,536,536,536,,,,,,536,536,536,536,536,536,536,,,536,,,,,,,536,,,536',
'536,536,536,536,536,536,,536,536,536,,536,536,,536,536,,,,,,,,,,,,,',
',,,,,,,536,,,536,,,536,,536,,,,,,536,,,,,,,,536,,,,,536,536,536,536',
'536,536,,,,536,536,,,,,,,536,,,536,540,540,540,,540,536,536,,540,540',
',,,540,,540,540,540,540,540,540,540,,,,,,540,540,540,540,540,540,540',
',,540,,,,,,,540,,,540,540,540,540,540,540,540,,540,540,540,,540,540',
',540,540,,,,,,,,,,,,,,,,,,,,,540,,,540,,,540,,540,,,,,,540,,,,,,,,540',
',,,,540,540,540,540,540,540,,,,540,540,,,,,,,540,,,540,546,546,546,',
'546,540,540,,546,546,,,,546,,546,546,546,546,546,546,546,,,,,,546,546',
'546,546,546,546,546,,,546,,,,,,,546,,,546,546,546,546,546,546,546,546',
'546,546,546,,546,546,,546,546,,,,,,,,,,,,,,,,,,,,,546,,,546,,,546,,546',
',546,,546,,546,,,,,,,,546,,,,,546,546,546,546,546,546,,,,546,546,,,',
',,,546,,,546,549,549,549,,549,546,546,,549,549,,,,549,,549,549,549,549',
'549,549,549,,,,,,549,549,549,549,549,549,549,,,549,,,,,,,549,,,549,549',
'549,549,549,549,549,549,549,549,549,,549,549,,549,549,,,,,,,,,,,,,,',
',,,,,,549,,,549,,,549,,549,,,,,,549,,,,,,,,549,,,,,549,549,549,549,549',
'549,,,,549,549,,,,,,,549,,,549,554,554,554,554,554,549,549,,554,554',
',,,554,,554,554,554,554,554,554,554,,,,,,554,554,554,554,554,554,554',
',,554,,,,,,554,554,,554,554,554,554,554,554,554,554,,554,554,554,,554',
'554,,554,554,,,,,,,,,,,,,,,,,,,,,554,,,554,,,554,,554,,554,,,,554,,',
',,,,,554,,,,,554,554,554,554,554,554,,,,554,554,,,,,,,554,,,554,555',
'555,555,555,555,554,554,,555,555,,,,555,,555,555,555,555,555,555,555',
',,,,,555,555,555,555,555,555,555,,,555,,,,,,555,555,,555,555,555,555',
'555,555,555,555,,555,555,555,,555,555,,555,555,,,,,,,,,,,,,,,,,,,,,555',
',,555,,,555,,555,,555,,,,555,,,,,,,,555,,,,,555,555,555,555,555,555',
',,,555,555,,,,,,,555,,,555,561,561,561,,561,555,555,,561,561,,,,561',
',561,561,561,561,561,561,561,,,,,,561,561,561,561,561,561,561,,,561',
',,,,,,561,,,561,561,561,561,561,561,561,,561,561,561,,561,561,,,,,,',
',,,,,,,,,,,,,,,,,561,,,561,,,561,,561,,,,,,,,,,,,,,,,,,,561,561,561',
'561,561,561,,,,561,561,,,,,,,561,,,561,575,575,575,575,575,561,561,',
'575,575,,,,575,,575,575,575,575,575,575,575,,,,,,575,575,575,575,575',
'575,575,,,575,,,,,,575,575,,575,575,575,575,575,575,575,575,,575,575',
'575,,575,575,,575,575,,,,,,,,,,,,,,,,,,,,,575,,,575,,,575,,575,,575',
',,,575,,,,,,,,575,,,,,575,575,575,575,575,575,,,,575,575,,,,,,,575,',
',575,579,579,579,579,579,575,575,,579,579,,,,579,,579,579,579,579,579',
'579,579,,,,,,579,579,579,579,579,579,579,,,579,,,,,,579,579,,579,579',
'579,579,579,579,579,579,,579,579,579,,579,579,,579,579,,,,,,,,,,,,,',
',,,,,,,579,,,579,,,579,,579,,579,,,,579,,,,,,,,579,,,,,579,579,579,579',
'579,579,,,,579,579,,,,,,,579,,,579,584,584,584,584,584,579,579,,584',
'584,,,,584,,584,584,584,584,584,584,584,,,,,,584,584,584,584,584,584',
'584,,,584,,,,,,584,584,,584,584,584,584,584,584,584,584,,584,584,584',
',584,584,,584,584,,,,,,,,,,,,,,,,,,,,,584,,,584,,,584,,584,,584,,,,584',
',,,,,,,584,,,,,584,584,584,584,584,584,,,,584,584,,,,,,,584,,,584,586',
'586,586,,586,584,584,,586,586,,,,586,,586,586,586,586,586,586,586,,',
',,,586,586,586,586,586,586,586,,,586,,,,,,,586,,,586,586,586,586,586',
'586,586,586,586,586,586,,586,586,,586,586,,,,,,,,,,,,,,,,,,,,,586,,',
'586,,,586,,586,,586,,,,586,,,,,,,,586,,,,,586,586,586,586,586,586,,',
',586,586,,,,,,,586,,,586,589,589,589,,589,586,586,,589,589,,,,589,,589',
'589,589,589,589,589,589,,,,,,589,589,589,589,589,589,589,,,589,,,,,',
',589,,,589,589,589,589,589,589,589,589,589,589,589,,589,589,,589,589',
',,,,,,,,,,,,,,,,,,,,589,,,589,,,589,,589,,589,,,,589,,,,,,,,589,,,,',
'589,589,589,589,589,589,,,,589,589,,,,,,,589,,,589,595,595,595,,595',
'589,589,,595,595,,,,595,,595,595,595,595,595,595,595,,,,,,595,595,595',
'595,595,595,595,,,595,,,,,,,595,,,595,595,595,595,595,595,595,595,595',
'595,595,,595,595,,595,595,,,,,,,,,,,,,,,,,,,,,595,,,595,,,595,,595,',
'595,,,,595,,,,,,,,595,,,,,595,595,595,595,595,595,,,,595,595,,,,,,,595',
',,595,599,599,599,,599,595,595,,599,599,,,,599,,599,599,599,599,599',
'599,599,,,,,,599,599,599,599,599,599,599,,,599,,,,,,,599,,,599,599,599',
'599,599,599,599,,599,599,599,,599,599,,599,599,,,,,,,,,,,,,,,,,,,,,599',
',,599,,,599,,599,,,,,,599,,,,,,,,599,,,,,599,599,599,599,599,599,,,',
'599,599,,,,,,,599,,,599,601,601,601,,601,599,599,,601,601,,,,601,,601',
'601,601,601,601,601,601,,,,,,601,601,601,601,601,601,601,,,601,,,,,',
',601,,,601,601,601,601,601,601,601,,601,601,601,,601,601,,601,601,,',
',,,,,,,,,,,,,,,,,,601,,,601,,,601,,601,,,,,,601,,,,,,,,601,,,,,601,601',
'601,601,601,601,,,,601,601,,,,,,,601,,,601,628,628,628,,628,601,601',
',628,628,,,,628,,628,628,628,628,628,628,628,,,,,,628,628,628,628,628',
'628,628,,,628,,,,,,,628,,,628,628,628,628,628,628,628,,628,628,628,',
'628,628,,628,628,,,,,,,,,,,,,,,,,,,,,628,,,628,,,628,,628,,,,,,628,',
',,,,,,628,,,,,628,628,628,628,628,628,,,,628,628,,,,,,,628,,,628,630',
'630,630,,630,628,628,,630,630,,,,630,,630,630,630,630,630,630,630,,',
',,,630,630,630,630,630,630,630,,,630,,,,,,,630,,,630,630,630,630,630',
'630,630,,630,630,630,,630,630,,630,630,,,,,,,,,,,,,,,,,,,,,630,,,630',
',,630,,630,,630,,,,630,,,,,,,,630,,,,,630,630,630,630,630,630,,,,630',
'630,,,,,,,630,,,630,633,633,633,,633,630,630,,633,633,,,,633,,633,633',
'633,633,633,633,633,,,,,,633,633,633,633,633,633,633,,,633,,,,,,,633',
',,633,633,633,633,633,633,633,,633,633,633,,633,633,,633,633,,,,,,,',
',,,,,,,,,,,,,633,,,633,,,633,,633,,,,,,633,,,,,,,,633,,,,,633,633,633',
'633,633,633,,,,633,633,,,,,,,633,,,633,634,634,634,,634,633,633,,634',
'634,,,,634,,634,634,634,634,634,634,634,,,,,,634,634,634,634,634,634',
'634,,,634,,,,,,,634,,,634,634,634,634,634,634,634,,634,634,634,,634',
'634,,634,634,,,,,,,,,,,,,,,,,,,,,634,,,634,,,634,,634,,,,,,634,,,,,',
',,634,,,,,634,634,634,634,634,634,,,,634,634,,,,,,,634,,,634,639,639',
'639,,639,634,634,,639,639,,,,639,,639,639,639,639,639,639,639,,,,,,639',
'639,639,639,639,639,639,,,639,,,,,,,639,,,639,639,639,639,639,639,639',
',639,639,639,,639,639,,639,639,,,,,,,,,,,,,,,,,,,,,639,,,639,,,639,',
'639,,,,,,639,,,,,,,,639,,,,,639,639,639,639,639,639,,,,639,639,,,,,',
',639,,,639,642,642,642,,642,639,639,,642,642,,,,642,,642,642,642,642',
'642,642,642,,,,,,642,642,642,642,642,642,642,,,642,,,,,,,642,,,642,642',
'642,642,642,642,642,,642,642,642,,642,642,,642,642,,,,,,,,,,,,,,,,,',
',,,642,,,642,,,642,,642,,,,,,642,,,,,,,,642,,,,,642,642,642,642,642',
'642,,,,642,642,,,,,,,642,,,642,657,657,657,657,657,642,642,,657,657',
',,,657,,657,657,657,657,657,657,657,,,,,,657,657,657,657,657,657,657',
',,657,,,,,,657,657,,657,657,657,657,657,657,657,657,,657,657,657,,657',
'657,,657,657,,,,,,,,,,,,,,,,,,,,,657,,,657,,,657,,657,,657,,,,657,,',
',,,,,657,,,,,657,657,657,657,657,657,,,,657,657,,,,,,,657,,,657,661',
'661,661,,661,657,657,,661,661,,,,661,,661,661,661,661,661,661,661,,',
',,,661,661,661,661,661,661,661,,,661,,,,,,,661,,,661,661,661,661,661',
'661,661,,661,661,661,,661,661,,661,661,,,,,,,,,,,,,,,,,,,,,661,,,661',
',,661,,661,,,,,,661,,,,,,,,661,,,,,661,661,661,661,661,661,,,,661,661',
',,,,,,661,,,661,664,664,664,,664,661,661,,664,664,,,,664,,664,664,664',
'664,664,664,664,,,,,,664,664,664,664,664,664,664,,,664,,,,,,,664,,,664',
'664,664,664,664,664,664,,664,664,664,,664,664,,664,664,,,,,,,,,,,,,',
',,,,,,,664,,,664,,,664,,664,,,,,,664,,,,,,,,664,,,,,664,664,664,664',
'664,664,,,,664,664,,,,,,,664,,,664,671,671,671,671,671,664,664,,671',
'671,,,,671,,671,671,671,671,671,671,671,,,,,,671,671,671,671,671,671',
'671,,,671,,,,,,671,671,,671,671,671,671,671,671,671,671,,671,671,671',
',671,671,,671,671,,,,,,,,,,,,,,,,,,,,,671,,,671,,,671,,671,,671,,,,671',
',,,,,,,671,,,,,671,671,671,671,671,671,,,,671,671,,,,,,,671,,,671,674',
'674,674,,674,671,671,,674,674,,,,674,,674,674,674,674,674,674,674,,',
',,,674,674,674,674,674,674,674,,,674,,,,,,,674,,,674,674,674,674,674',
'674,674,674,674,674,674,,674,674,,674,674,,,,,,,,,,,,,,,,,,,,,674,,',
'674,,,674,,674,,674,,674,,674,,,,,,,,674,,,,,674,674,674,674,674,674',
',,,674,674,,,,,,,674,,,674,675,675,675,,675,674,674,,675,675,,,,675',
',675,675,675,675,675,675,675,,,,,,675,675,675,675,675,675,675,,,675',
',,,,,,675,,,675,675,675,675,675,675,675,675,675,675,675,,675,675,,675',
'675,,,,,,,,,,,,,,,,,,,,,675,,,675,,,675,,675,,,,675,,675,,,,,,,,675',
',,,,675,675,675,675,675,675,,,,675,675,,,,,,,675,,,675,681,681,681,681',
'681,675,675,,681,681,,,,681,,681,681,681,681,681,681,681,,,,,,681,681',
'681,681,681,681,681,,,681,,,,,,681,681,,681,681,681,681,681,681,681',
'681,,681,681,681,,681,681,,681,681,,,,,,,,,,,,,,,,,,,,,681,,,681,,,681',
',681,,681,,,,681,,,,,,,,681,,,,,681,681,681,681,681,681,,,,681,681,',
',,,,,681,,,681,682,682,682,682,682,681,681,,682,682,,,,682,,682,682',
'682,682,682,682,682,,,,,,682,682,682,682,682,682,682,,,682,,,,,,682',
'682,,682,682,682,682,682,682,682,682,,682,682,682,,682,682,,682,682',
',,,,,,,,,,,,,,,,,,,,682,,,682,,,682,,682,,682,,,,682,,,,,,,,682,,,,',
'682,682,682,682,682,682,,,,682,682,,,,,,,682,,,682,686,686,686,,686',
'682,682,,686,686,,,,686,,686,686,686,686,686,686,686,,,,,,686,686,686',
'686,686,686,686,,,686,,,,,,,686,,,686,686,686,686,686,686,686,,686,686',
'686,,686,686,,,,,,,,,,,,,,,,,,,,,,,,686,,,686,,,686,,686,,,,,,,,,,,',
',,,,,,,686,686,686,686,686,686,,,,686,686,,,,,,,686,,,686,699,699,699',
',699,686,686,,699,699,,,,699,,699,699,699,699,699,699,699,,,,,,699,699',
'699,699,699,699,699,,,699,,,,,,,699,,,699,699,699,699,699,699,699,,699',
'699,699,,699,699,,,,,,,,,,,,,,,,,,,,,,,,699,,,699,,,699,,699,,,,,,,',
',,,,,,,,,,,699,699,699,699,699,699,,,,699,699,,,,,,,699,,,699,705,705',
'705,,705,699,699,,705,705,,,,705,,705,705,705,705,705,705,705,,,,,,705',
'705,705,705,705,705,705,,,705,,,,,,,705,,,705,705,705,705,705,705,705',
',705,705,705,,705,705,,705,705,,,,,,,,,,,,,,,,,,,,,705,,,705,,,705,',
'705,,705,,,,705,,,,,,,,705,,,,,705,705,705,705,705,705,,,,705,705,,',
',,,,705,,,705,737,737,737,,737,705,705,,737,737,,,,737,,737,737,737',
'737,737,737,737,,,,,,737,737,737,737,737,737,737,,,737,,,,,,,737,,,737',
'737,737,737,737,737,737,,737,737,737,,737,737,,737,737,,,,,,,,,,,,,',
',,,,,,,737,,,737,,,737,,737,,737,,,,737,,,,,,,,737,,,,,737,737,737,737',
'737,737,,,,737,737,,,,,,,737,,,737,744,744,744,,744,737,737,,744,744',
',,,744,,744,744,744,744,744,744,744,,,,,,744,744,744,744,744,744,744',
',,744,,,,,,,744,,,744,744,744,744,744,744,744,,744,744,744,,744,744',
',744,744,,,,,,,,,,,,,,,,,,,,,744,,,744,,,744,,744,,,,,,744,,,,,,,,744',
',,,,744,744,744,744,744,744,,,,744,744,,,,,,,744,,,744,749,749,749,749',
'749,744,744,,749,749,,,,749,,749,749,749,749,749,749,749,,,,,,749,749',
'749,749,749,749,749,,,749,,,,,,749,749,,749,749,749,749,749,749,749',
'749,,749,749,749,,749,749,,749,749,,,,,,,,,,,,,,,,,,,,,749,,,749,,,749',
',749,,749,,,,749,,,,,,,,749,,,,,749,749,749,749,749,749,,,,749,749,',
',,,,,749,,,749,753,753,753,753,753,749,749,,753,753,,,,753,,753,753',
'753,753,753,753,753,,,,,,753,753,753,753,753,753,753,,,753,,,,,,753',
'753,,753,753,753,753,753,753,753,753,,753,753,753,,753,753,,753,753',
',,,,,,,,,,,,,,,,,,,,753,,,753,,,753,,753,,753,,,,753,,,,,,,,753,,,,',
'753,753,753,753,753,753,,,,753,753,,,,,,,753,,,753,754,754,754,754,754',
'753,753,,754,754,,,,754,,754,754,754,754,754,754,754,,,,,,754,754,754',
'754,754,754,754,,,754,,,,,,754,754,,754,754,754,754,754,754,754,754',
',754,754,754,,754,754,,754,754,,,,,,,,,,,,,,,,,,,,,754,,,754,,,754,',
'754,,754,,,,754,,,,,,,,754,,,,,754,754,754,754,754,754,,,,754,754,,',
',,,,754,,,754,761,761,761,,761,754,754,,761,761,,,,761,,761,761,761',
'761,761,761,761,,,,,,761,761,761,761,761,761,761,,,761,,,,,,,761,,,761',
'761,761,761,761,761,761,,761,761,761,,761,761,,761,761,,,,,,,,,,,,,',
',,,,,,,761,,,761,,,761,,761,,,,,,761,,,,,,,,761,,,,,761,761,761,761',
'761,761,,,,761,761,,,,,,,761,,,761,775,775,775,775,775,761,761,,775',
'775,,,,775,,775,775,775,775,775,775,775,,,,,,775,775,775,775,775,775',
'775,,,775,,,,,,775,775,,775,775,775,775,775,775,775,775,,775,775,775',
',775,775,,775,775,,,,,,,,,,,,,,,,,,,,,775,,,775,,,775,,775,,775,,,,775',
',,,,,,,775,,,,,775,775,775,775,775,775,,,,775,775,,,,,,,775,,,775,781',
'781,781,,781,775,775,,781,781,,,,781,,781,781,781,781,781,781,781,,',
',,,781,781,781,781,781,781,781,,,781,,,,,,,781,,,781,781,781,781,781',
'781,781,,781,781,781,,781,781,,781,781,,,,,,,,,,,,,,,,,,,,,781,,,781',
',,781,,781,,,,,,781,,,,,,,,781,,,,,781,781,781,781,781,781,,,,781,781',
',,,,,,781,,,781,782,782,782,,782,781,781,,782,782,,,,782,,782,782,782',
'782,782,782,782,,,,,,782,782,782,782,782,782,782,,,782,,,,,,,782,,,782',
'782,782,782,782,782,782,,782,782,782,,782,782,,782,782,,,,,,,,,,,,,',
',,,,,,,782,,,782,,,782,,782,,,,,,782,,,,,,,,782,,,,,782,782,782,782',
'782,782,,,,782,782,,,,,,,782,,,782,783,783,783,,783,782,782,,783,783',
',,,783,,783,783,783,783,783,783,783,,,,,,783,783,783,783,783,783,783',
',,783,,,,,,,783,,,783,783,783,783,783,783,783,,783,783,783,,783,783',
',783,783,,,,,,,,,,,,,,,,,,,,,783,,,783,,,783,,783,,,,,,783,,,,,,,,783',
',,,,783,783,783,783,783,783,,,,783,783,,,,,,,783,,,783,794,794,794,',
'794,783,783,,794,794,,,,794,,794,794,794,794,794,794,794,,,,,,794,794',
'794,794,794,794,794,,,794,,,,,,,794,,,794,794,794,794,794,794,794,,794',
'794,794,,794,794,,794,794,,,,,,,,,,,,,,,,,,,,,794,,,794,,,794,,794,',
',,,,794,,,,,,,,794,,,,,794,794,794,794,794,794,,,,794,794,,,,,,,794',
',,794,795,795,795,,795,794,794,,795,795,,,,795,,795,795,795,795,795',
'795,795,,,,,,795,795,795,795,795,795,795,,,795,,,,,,,795,,,795,795,795',
'795,795,795,795,,795,795,795,,795,795,,795,795,,,,,,,,,,,,,,,,,,,,,795',
',,795,,,795,,795,,,,,,795,,,,,,,,795,,,,,795,795,795,795,795,795,,,',
'795,795,,,,,,,795,,,795,796,796,796,,796,795,795,,796,796,,,,796,,796',
'796,796,796,796,796,796,,,,,,796,796,796,796,796,796,796,,,796,,,,,',
',796,,,796,796,796,796,796,796,796,,796,796,796,,796,796,,796,796,,',
',,,,,,,,,,,,,,,,,,796,,,796,,,796,,796,,,,,,796,,,,,,,,796,,,,,796,796',
'796,796,796,796,,,,796,796,,,,,,,796,,,796,809,809,809,,809,796,796',
',809,809,,,,809,,809,809,809,809,809,809,809,,,,,,809,809,809,809,809',
'809,809,,,809,,,,,,,809,,,809,809,809,809,809,809,809,,809,809,809,',
'809,809,,809,809,,,,,,,,,,,,,,,,,,,,,809,,,809,,,809,,809,,809,,,,809',
',,,,,,,809,,,,,809,809,809,809,809,809,,,,809,809,,,,,,,809,,,809,820',
'820,820,820,820,809,809,,820,820,,,,820,,820,820,820,820,820,820,820',
',,,,,820,820,820,820,820,820,820,,,820,,,,,,820,820,,820,820,820,820',
'820,820,820,820,,820,820,820,,820,820,,820,820,,,,,,,,,,,,,,,,,,,,,820',
',,820,,,820,,820,,820,,,,820,,,,,,,,820,,,,,820,820,820,820,820,820',
',,,820,820,,,,,,,820,,,820,839,839,839,,839,820,820,,839,839,,,,839',
',839,839,839,839,839,839,839,,,,,,839,839,839,839,839,839,839,,,839',
',,,,,,839,,,839,839,839,839,839,839,839,,839,839,839,,839,839,,839,839',
',,,,,,,,,,,,,,,,,,,,839,,,839,,,839,,839,,,,,,839,,,,,,,,839,,,,,839',
'839,839,839,839,839,,,,839,839,,,,,,,839,,,839,841,841,841,841,841,839',
'839,,841,841,,,,841,,841,841,841,841,841,841,841,,,,,,841,841,841,841',
'841,841,841,,,841,,,,,,841,841,,841,841,841,841,841,841,841,841,,841',
'841,841,,841,841,,841,841,,,,,,,,,,,,,,,,,,,,,841,,,841,,,841,,841,',
'841,,,,841,,,,,,,,841,,,,,841,841,841,841,841,841,,,,841,841,,,,,,,841',
',,841,842,842,842,842,842,841,841,,842,842,,,,842,,842,842,842,842,842',
'842,842,,,,,,842,842,842,842,842,842,842,,,842,,,,,,842,842,,842,842',
'842,842,842,842,842,842,,842,842,842,,842,842,,842,842,,,,,,,,,,,,,',
',,,,,,,842,,,842,,,842,,842,,842,,,,842,,,,,,,,842,,,,,842,842,842,842',
'842,842,,,,842,842,,,,,,,842,,,842,869,869,869,,869,842,842,,869,869',
',,,869,,869,869,869,869,869,869,869,,,,,,869,869,869,869,869,869,869',
',,869,,,,,,,869,,,869,869,869,869,869,869,869,,869,869,869,,869,869',
',869,869,,,,,,,,,,,,,,,,,,,,,869,,,869,,,869,,869,,,,,,869,,,,,,,,869',
',,,,869,869,869,869,869,869,,,,869,869,,,,,,,869,,,869,883,883,883,',
'883,869,869,,883,883,,,,883,,883,883,883,883,883,883,883,,,,,,883,883',
'883,883,883,883,883,,,883,,,,,,,883,,,883,883,883,883,883,883,883,,883',
'883,883,,883,883,,883,883,,,,,,,,,,,,,,,,,,,,,883,,,883,,,883,,883,',
',,,,883,,,,,,,,883,,,,,883,883,883,883,883,883,,,,883,883,,,,,,,883',
',,883,884,884,884,,884,883,883,,884,884,,,,884,,884,884,884,884,884',
'884,884,,,,,,884,884,884,884,884,884,884,,,884,,,,,,,884,,,884,884,884',
'884,884,884,884,,884,884,884,,884,884,,884,884,,,,,,,,,,,,,,,,,,,,,884',
',,884,,,884,,884,,,,,,884,,,,,,,,884,,,,,884,884,884,884,884,884,,,',
'884,884,,,,,,,884,,,884,885,885,885,,885,884,884,,885,885,,,,885,,885',
'885,885,885,885,885,885,,,,,,885,885,885,885,885,885,885,,,885,,,,,',
',885,,,885,885,885,885,885,885,885,,885,885,885,,885,885,,885,885,,',
',,,,,,,,,,,,,,,,,,885,,,885,,,885,,885,,,,,,885,,,,,,,,885,,,,,885,885',
'885,885,885,885,,,,885,885,,,,,,,885,,,885,889,889,889,,889,885,885',
',889,889,,,,889,,889,889,889,889,889,889,889,,,,,,889,889,889,889,889',
'889,889,,,889,,,,,,,889,,,889,889,889,889,889,889,889,889,889,889,889',
',889,889,,889,889,,,,,,,,,,,,,,,,,,,,,889,,,889,,,889,,889,,,,889,,889',
',,,,,,,889,,,,,889,889,889,889,889,889,,,,889,889,,,,,,,889,,,889,894',
'894,894,894,894,889,889,,894,894,,,,894,,894,894,894,894,894,894,894',
',,,,,894,894,894,894,894,894,894,,,894,,,,,,894,894,,894,894,894,894',
'894,894,894,894,,894,894,894,,894,894,,894,894,,,,,,,,,,,,,,,,,,,,,894',
',,894,,,894,,894,,894,,,,894,,,,,,,,894,,,,,894,894,894,894,894,894',
',,,894,894,,,,,,,894,,,894,898,898,898,,898,894,894,,898,898,,,,898',
',898,898,898,898,898,898,898,,,,,,898,898,898,898,898,898,898,,,898',
',,,,,,898,,,898,898,898,898,898,898,898,,898,898,898,,898,898,,,,,,',
',,,,,,,,,,,,,,,,,898,,,898,,,898,,898,,,,,,,,,,,,,,,,,,,898,898,898',
'898,898,898,,,,898,898,,,,,,,898,,,898,908,908,908,,908,898,898,,908',
'908,,,,908,,908,908,908,908,908,908,908,,,,,,908,908,908,908,908,908',
'908,,,908,,,,,,,908,,,908,908,908,908,908,908,908,,908,908,908,,908',
'908,,908,908,,,,,,,,,,,,,,,,,,,,,908,,,908,,,908,,908,,908,,,,908,,',
',,,,,908,,,,,908,908,908,908,908,908,,,,908,908,,,,,,,908,,,908,909',
'909,909,909,909,908,908,,909,909,,,,909,,909,909,909,909,909,909,909',
',,,,,909,909,909,909,909,909,909,,,909,,,,,,909,909,,909,909,909,909',
'909,909,909,909,,909,909,909,,909,909,,909,909,,,,,,,,,,,,,,,,,,,,,909',
',,909,,,909,,909,,909,,,,909,,,,,,,,909,,,,,909,909,909,909,909,909',
',,,909,909,,,,,,,909,,,909,912,912,912,912,912,909,909,,912,912,,,,912',
',912,912,912,912,912,912,912,,,,,,912,912,912,912,912,912,912,,,912',
',,,,,912,912,,912,912,912,912,912,912,912,912,,912,912,912,,912,912',
',912,912,,,,,,,,,,,,,,,,,,,,,912,,,912,,,912,,912,,912,,,,912,,,,,,',
',912,,,,,912,912,912,912,912,912,,,,912,912,,,,,,,912,,,912,930,930',
'930,,930,912,912,,930,930,,,,930,,930,930,930,930,930,930,930,,,,,,930',
'930,930,930,930,930,930,,,930,,,,,,,930,,,930,930,930,930,930,930,930',
',930,930,930,,930,930,,930,930,,,,,,,,,,,,,,,,,,,,,930,,,930,,,930,',
'930,,930,,930,,930,,,,,,,,930,,,,,930,930,930,930,930,930,,,,930,930',
',,,,,,930,,,930,932,932,932,932,932,930,930,,932,932,,,,932,,932,932',
'932,932,932,932,932,,,,,,932,932,932,932,932,932,932,,,932,,,,,,932',
'932,,932,932,932,932,932,932,932,932,,932,932,932,,932,932,,932,932',
',,,,,,,,,,,,,,,,,,,,932,,,932,,,932,,932,,932,,,,932,,,,,,,,932,,,,',
'932,932,932,932,932,932,,,,932,932,,,,,,,932,,,932,939,939,939,939,939',
'932,932,,939,939,,,,939,,939,939,939,939,939,939,939,,,,,,939,939,939',
'939,939,939,939,,,939,,,,,,939,939,,939,939,939,939,939,939,939,939',
',939,939,939,,939,939,,939,939,,,,,,,,,,,,,,,,,,,,,939,,,939,,,939,',
'939,,939,,,,939,,,,,,,,939,,,,,939,939,939,939,939,939,,,,939,939,,',
',,,,939,,,939,944,944,944,944,944,939,939,,944,944,,,,944,,944,944,944',
'944,944,944,944,,,,,,944,944,944,944,944,944,944,,,944,,,,,,944,944',
',944,944,944,944,944,944,944,944,,944,944,944,,944,944,,944,944,,,,',
',,,,,,,,,,,,,,,,944,,,944,,,944,,944,,944,,,,944,,,,,,,,944,,,,,944',
'944,944,944,944,944,,,,944,944,,,,,,,944,,,944,952,952,952,952,952,944',
'944,,952,952,,,,952,,952,952,952,952,952,952,952,,,,,,952,952,952,952',
'952,952,952,,,952,,,,,,952,952,,952,952,952,952,952,952,952,952,,952',
'952,952,,952,952,,952,952,,,,,,,,,,,,,,,,,,,,,952,,,952,,,952,,952,',
'952,,,,952,,,,,,,,952,,,,,952,952,952,952,952,952,,,,952,952,,,,,,,952',
',,952,954,954,954,,954,952,952,,954,954,,,,954,,954,954,954,954,954',
'954,954,,,,,,954,954,954,954,954,954,954,,,954,,,,,,,954,,,954,954,954',
'954,954,954,954,954,954,954,954,,954,954,,954,954,,,,,,,,,,,,,,,,,,',
',,954,,,954,,,954,,954,,954,,,,954,,,,,,,,954,,,,437,954,954,954,954',
'954,954,437,437,437,954,954,,437,437,,437,,954,,,954,,,,437,,954,954',
',,,,,,,437,437,,437,437,437,437,437,,,,,,,,,,,,,,,,,,,,,,437,437,437',
'437,437,437,437,437,437,437,437,437,437,437,437,,,437,437,437,,437,',
',,437,,,,,,437,,437,,437,437,437,437,437,437,437,,437,437,437,,,,,,',
',,,,,,437,437,,437,,437,,439,437,,437,,,437,439,439,439,,,,439,439,',
'439,,,,,,,,,,,,,,,,,,,,439,439,,439,439,439,439,439,,,,,,,,,,,,,,,,',
',,,,,439,439,439,439,439,439,439,439,439,439,439,439,439,439,439,,,439',
'439,439,,439,,,,439,,,,,,439,,439,,439,439,439,439,439,439,439,,439',
',439,,,,,,,,,,,,,439,439,,439,,439,,647,439,,439,,,439,647,647,647,',
',647,647,647,,647,,,,,,,,,647,647,647,,,,,,,,,647,647,,647,647,647,647',
'647,,,,,,,,,,,,,,,,,,,,,,647,647,647,647,647,647,647,647,647,647,647',
'647,647,647,647,,,647,647,647,,647,647,,,647,,647,,647,,647,,647,,647',
'647,647,647,647,647,647,,647,647,647,,,,,,,,,,,,,647,647,647,647,,647',
',648,647,,647,,,647,648,648,648,,,648,648,648,,648,,,,,,,,,,648,648',
',,,,,,,,648,648,,648,648,648,648,648,,,,,,,,,,,,,,,,,,,,,,648,648,648',
'648,648,648,648,648,648,648,648,648,648,648,648,,,648,648,648,,648,648',
',,648,,648,,648,,648,,648,,648,648,648,648,648,648,648,,648,,648,,,',
',,,,,,,,,648,648,648,648,,648,,28,648,,648,,,648,28,28,28,,,28,28,28',
',28,,,,,,,,,,28,28,,,,,,,,,28,28,,28,28,28,28,28,,,,,,,,,,,,,,,,,,,',
',,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,,,28,28,28,,,28,,28,28',
',28,,28,,28,,28,,28,28,28,28,28,28,28,,28,,28,,,,,,,,,,,,,28,28,28,28',
'50,28,,,28,,28,50,50,50,,,50,50,50,,50,,,,,,,,,,50,50,50,,,,,,,,50,50',
',50,50,50,50,50,,,,,,,,,,,,,,,,,,,,,,50,50,50,50,50,50,50,50,50,50,50',
'50,50,50,50,,,50,50,50,,,50,,,50,,50,,50,,50,,50,,50,50,50,50,50,50',
'50,,50,,50,,,,,,,,,,,,,50,50,50,50,496,50,,50,50,,50,496,496,496,,,496',
'496,496,,496,,,,,,,,,,496,,,,,,,,,,496,496,,496,496,496,496,496,,,,',
',,,,,,,497,,,,,,,497,497,497,,,497,497,497,,497,,,,,496,496,,,,497,',
',496,,,,,496,496,497,497,,497,497,497,497,497,,,,,,,,,,,,496,,,,,,,',
',,,,,496,,496,,,496,,,497,497,,498,,,,,497,,498,498,498,497,497,498',
'498,498,,498,,,,,,,,,,498,,,,,497,,,,,498,498,,498,498,498,498,498,497',
',497,,,497,202,202,,,202,,,,,,,,,202,202,202,202,202,202,202,202,202',
',,202,202,498,498,,,202,202,202,202,498,,,,,498,498,,,,,202,202,,202',
'202,202,202,202,202,202,202,202,202,202,,498,202,,,,,,,,,,,,498,,498',
',,498,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,,,,7,7,7,7,7,7',
'7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,,7,,,,,,,,,7,7,7,7,7,7,7,7,7,,,7',
'7,,,,,7,7,7,7,,,,,,,,,,,,7,7,,7,7,7,7,7,7,7,7,7,7,7,,,7,7,,,,,,,,,,7',
'8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,,,,8,8,8,8,8,8,8,8,8',
'8,8,8,8,8,8,8,8,8,8,8,8,8,8,,,8,,,,,,,,,8,8,8,8,8,8,8,8,8,,,8,8,,,,',
'8,8,8,8,,,,,,,,,,,,8,8,,8,8,8,8,8,8,8,8,8,8,8,,,8,8,,,,,,,,,,8,412,412',
'412,412,412,412,412,412,412,412,412,412,412,412,412,412,412,412,412',
'412,412,412,412,412,,,,412,412,412,412,412,412,412,412,412,412,412,412',
'412,412,412,412,412,412,412,412,412,412,412,,,412,,,,,,,,,412,412,412',
'412,412,412,412,412,412,,,412,412,,,,,412,412,412,412,,,,,,,,,,,,412',
'412,,412,412,412,412,412,412,412,412,412,412,412,,,412,412,,,,,,,,,',
'412,416,416,416,416,416,416,416,416,416,416,416,416,416,416,416,416',
'416,416,416,416,416,416,416,416,,,,416,416,416,416,416,416,416,416,416',
'416,416,416,416,416,416,416,416,416,416,416,416,416,416,,,416,,,,,,',
',,416,416,416,416,416,416,416,416,416,,,416,416,,,,,416,416,416,416',
',,,,,,,,,,,416,416,,416,416,416,416,416,416,416,416,416,416,416,,,416',
'416,,,,,,,,,,416,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65',
'65,65,65,65,65,65,65,,,,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65',
'65,65,65,65,65,65,65,65,65,65,65,,65,,,,,,,65,65,65,65,65,65,65,65,65',
',,65,65,,,,,65,65,65,65,,,,,,65,,,,,,65,65,,65,65,65,65,65,65,65,65',
'65,65,65,,,65,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79',
'79,79,79,79,79,79,,,,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79',
'79,79,79,79,79,79,79,79,79,79,,79,,,,,,,79,79,79,79,79,79,79,79,79,',
',79,79,,,,,79,79,79,79,,,,,,,,,,,,79,79,,79,79,79,79,79,79,79,79,79',
'79,79,,,79,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192',
'192,192,192,192,192,192,192,192,192,,,,192,192,192,192,192,192,192,192',
'192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192',
'192,,192,,,,,,,192,192,192,192,192,192,192,192,192,,,192,192,,,,,192',
'192,192,192,,,,,,,,,,,,192,192,,192,192,192,192,192,192,192,192,192',
'192,192,,,192,772,772,772,772,772,772,772,772,772,772,772,772,772,772',
'772,772,772,772,772,772,772,772,772,772,,,,772,772,772,772,772,772,772',
'772,772,772,772,772,772,772,772,772,772,772,772,772,772,772,772,,,772',
',,,,,,,,772,772,772,772,772,772,772,772,772,,,772,772,,,,,772,772,772',
'772,,,,,,,,,,,,772,772,,772,772,772,772,772,772,772,772,772,772,772',
'201,201,772,,201,,,,,,,,,201,201,201,201,201,201,201,201,201,,,201,201',
',,,,201,201,201,201,,,,,,201,,,,,,201,201,,201,201,201,201,201,201,201',
'201,201,201,201,203,203,201,,203,,,,,,,,,203,203,203,203,203,203,203',
'203,203,,,203,203,,,,,203,203,203,203,,,,,,,,,,,,203,203,,203,203,203',
'203,203,203,203,203,203,203,203,265,265,203,,265,,,,,,,,,265,265,265',
'265,265,265,265,265,265,,,265,265,,,,,265,265,265,265,,,,,,,,,,,,265',
'265,,265,265,265,265,265,265,265,265,265,265,265,266,266,265,,266,,',
',,,,,,266,266,266,266,266,266,266,266,266,,,266,266,,,,,266,266,266',
'266,,,,,,,,,,,,266,266,,266,266,266,266,266,266,266,266,266,266,266',
'267,267,266,,267,,,,,,,,,267,267,267,267,267,267,267,267,267,,,267,267',
',,,,267,267,267,267,,,,,,,,,,,,267,267,,267,267,267,267,267,267,267',
'267,267,267,267,450,450,267,,450,,,,,,,,,450,450,450,450,450,450,450',
'450,450,,,450,450,,,,,450,450,450,450,,,,,,450,,,,,,450,450,,450,450',
'450,450,450,450,450,450,450,450,450,451,451,450,,451,,,,,,,,,451,451',
'451,451,451,451,451,451,451,,,451,451,,,,,451,451,451,451,,,,,,,,,,',
',451,451,,451,451,451,451,451,451,451,451,451,451,451,523,523,451,,523',
',,,,,,,,523,523,523,523,523,523,523,523,523,,,523,523,,,,,523,523,523',
'523,,,,,,523,,,,,,523,523,,523,523,523,523,523,523,523,523,523,523,523',
'524,524,523,,524,,,,,,,,,524,524,524,524,524,524,524,524,524,,,524,524',
',,,,524,524,524,524,,,,,,,,,,,,524,524,,524,524,524,524,524,524,524',
'524,524,524,524,526,526,524,,526,,,,,,,,,526,526,526,526,526,526,526',
'526,526,,,526,526,,,,,526,526,526,526,,,,,,,,,,,,526,526,,526,526,526',
'526,526,526,526,526,526,526,526,537,537,526,,537,,,,,,,,,537,537,537',
'537,537,537,537,537,537,,,537,537,,,,,537,537,537,537,,,,,,537,,,,,',
'537,537,,537,537,537,537,537,537,537,537,537,537,537,538,538,537,,538',
',,,,,,,,538,538,538,538,538,538,538,538,538,,,538,538,,,,,538,538,538',
'538,,,,,,,,,,,,538,538,,538,538,538,538,538,538,538,538,538,538,538',
'587,587,538,,587,,,,,,,,,587,587,587,587,587,587,587,587,587,,,587,587',
',,,,587,587,587,587,,,,,,587,,,,,,587,587,,587,587,587,587,587,587,587',
'587,587,587,587,588,588,587,,588,,,,,,,,,588,588,588,588,588,588,588',
'588,588,,,588,588,,,,,588,588,588,588,,,,,,,,,,,,588,588,,588,588,588',
'588,588,588,588,588,588,588,588,594,594,588,,594,,,,,,,,,594,594,594',
'594,594,594,594,594,594,,,594,594,,,,,594,594,594,594,,,,,,,,,,,,594',
'594,,594,594,594,594,594,594,594,594,594,594,594,596,596,594,,596,,',
',,,,,,596,596,596,596,596,596,596,596,596,,,596,596,,,,,596,596,596',
'596,,,,,,596,,,,,,596,596,,596,596,596,596,596,596,596,596,596,596,596',
'829,829,596,,829,,,,,,,,,829,829,829,829,829,829,829,829,829,,,829,829',
',,,,829,829,829,829,,,,,,,,,,,,829,829,,829,829,829,829,829,829,829',
'829,829,829,829,955,955,829,,955,,,,,,,,,955,955,955,955,955,955,955',
'955,955,,,955,955,,,,,955,955,955,955,,,,,,955,,,,,,955,955,,955,955',
'955,955,955,955,955,955,955,955,955,956,956,955,,956,,,,,,,,,956,956',
'956,956,956,956,956,956,956,,,956,956,,,,,956,956,956,956,,,,,,,,,,',
',956,956,,956,956,956,956,956,956,956,956,956,956,956,,,956' ]
        racc_action_check = arr = ::Array.new(25461, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_action_pointer = [
    -2,    25,   nil,   -46,   nil,   900,   -71, 23414, 23535,   -15,
   -30,   -19,    52,   386,   351,   435,   nil,   129,   260,  1439,
   171,   nil,   391,   522,   653,   307,   -14,   784, 22899,   nil,
   915,  1046,  1177,   nil,    76,   432,   161,   440,  1308,  1439,
  1570,   104,   415,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
 23026,   nil,  1701,  1832,  1963,   -19,  3565,  2094,  2225,   nil,
   nil,  2356,  2487,  2618,   nil, 23898,   nil,   nil,   nil,   nil,
   nil,   194,   nil,   nil,   nil,   nil,   nil,   110,   132, 24008,
   nil,   nil,   nil,   551,  2749,   nil,   nil,  2880,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   330,   nil,  3011,
   nil,   nil,   nil,  3142,  3273,  3404,  3535,  3666,  3797,   nil,
   568,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil, 24118,   220,   nil,  3928,  4059,  4190,  4321,  4452,
  4583, 24287, 23287, 24346,  4714,  4845,  4976,   nil,   514,   -76,
   316,   -63,   251,   352,  5107,  5238,   nil,   nil,  5369,   364,
  5500,  5631,  5762,  5893,  6024,  6155,  6286,  6417,  6548,  6679,
  6810,  6941,  7072,  7203,  7334,  7465,  7596,  7727,  7858,  7989,
  8120,  8251,  8382,  8513,  8644,   nil,   nil,   nil,   nil,  1570,
   nil,   363,   388,   nil,  8775,   449,  8906,   nil,   nil,   nil,
   nil,   nil,  9037,   nil,   nil, 24405, 24464, 24523,   456,  9168,
  9299,   nil,   nil,   nil,   nil,   nil,   nil,   nil,  9430,   146,
  1031,   469,  9561,   475,   479,   458,  9692,  9823,    17,   517,
   560,    39,   529,   501,   -11,   nil,   538,   580,   520,  9954,
   nil,   461,   584,   593,   546,   nil,   600,   nil, 10085,   nil,
 10216,    31,   nil,   546,   -89,   -47,   586,   582,   412,   610,
   nil,   nil,   -21,  3696,   nil,   nil,   nil,   586,   579,   nil,
   611,   613,   nil,   nil,   nil,   nil,   nil,   nil,   nil,  1033,
   nil,   nil,   nil,   690,   nil,   nil,   692,   616,    -7,     0,
 10347, 10478,   333,   350,   615,    -2,  1039,   691,     0,   723,
   nil,   nil,  1033,   708,   nil,  1043,   nil,    68,   nil,   nil,
 10609,   148,   380,   381,   396,   438,   450,   504,   518,   nil,
   519,   nil, 10740,   nil,   285,   nil,   348,   nil,   356,   644,
   375,   nil,   651,   -33,   nil,   391,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   662, 23656,   nil,   nil,   nil, 23777,   663,   nil,   nil,
   653,   nil, 10871,   650,   nil,   654,   nil,   nil,  1701,   689,
   691,   463,   480, 11002,   nil,   nil,   nil, 22379,   695, 22509,
   nil, 11133, 11264, 11395,   nil,   nil,   nil,  1832,   nil,   nil,
 24582, 24641, 11526, 11657,   -51, 11788, 11919, 12050,    44,   nil,
  3928,  4059,   260,   566,   724,   728,   731,   732,  3529,  5625,
  2642,  4190,  2612,  4315,  4452,  4583,  4714,  4845,  4976,  5107,
  5238,  1048,  1248,  5369,  5500, 12181,   -34,   nil, 12312,   nil,
 12443,   nil, 12574,   nil,   167,   nil, 23153, 23208, 23287,    -7,
   nil,   675,   nil,   nil,   674,   686,   nil,   nil, 12705,   166,
   167,   730,   nil,   nil, 12836,   731,   702,   nil,   nil,   704,
 12967,   741, 13098, 24700, 24759, 13229, 24818,   170,   754,   nil,
   nil, 13360,   720,   nil, 13491, 13622, 13753, 24877, 24936,  1963,
 13884,   853,   852,   774,   nil,   nil, 14015,   nil,   nil, 14146,
   nil,   nil,   nil,   nil, 14277, 14408,   775,   nil,   713,   nil,
   nil, 14539,  3827,   nil,   583,   nil,   nil,   778,   nil,  3550,
   nil,   744,   902,   nil,   nil, 14670,   859,   nil,   nil, 14801,
   203,   204,   858,   867, 14932,   nil, 15063, 24995, 25054, 15194,
    16,   nil,  1070,   nil, 25113, 15325, 25172,   nil,   nil, 15456,
   374, 15587,   nil,  1190,   nil,   nil,   nil,    34,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   244,   nil,
   nil,   nil,   751,   nil,   nil,   nil,   nil,   nil, 15718,   767,
 15849,   506,    98, 15980, 16111,   800,   nil,   nil,   nil, 16242,
   801,   nil, 16373,   808,   nil,   202,   283, 22639, 22769,   811,
   812,   784,   nil,  1308,   nil,  2517,   nil, 16504,   781,   nil,
   822, 16635,   nil,   nil, 16766,   nil,   nil,   nil,   nil,   nil,
   nil, 16897,   nil,   820, 17028, 17159,   915,   785,   nil,   nil,
   822, 17290, 17421,   nil,  1241,   -25, 17552,   788,   nil,   823,
   207,   229,   835,   252,   260,   838,   836,   840,   805, 17683,
  2094,   886,   892,    66,   947, 17814,   nil,   nil,   482,   nil,
   860,   965,   nil,   nil,   841,   nil,   865,  1140,   938,   869,
   870,   nil,   nil,   909,  3587,   nil,   686,   nil,   987,   nil,
   nil,   nil,   nil,   nil,   993,   nil,   995, 17945,   913,    29,
    40,    80,   121,   915, 18076,  1174,   nil,   920,   920, 18207,
   481,   nil,   212, 18338, 18469,  2500,   505,   nil,   nil,   974,
   nil, 18600,   nil,   899,   900,   nil,   907,   908,   909,   nil,
   902,   nil, 24228,   950,   637, 18731,   nil,   nil,   nil,  2225,
   916, 18862, 18993, 19124,   nil,  2356,   nil,  2749,   nil,   nil,
  2880,   nil,  3011,   nil, 19255, 19386, 19517,   342,   349,   nil,
   nil,   937,  1036,   nil,   nil,   nil,   936,   nil,   925, 19648,
   nil,   945,  1050,   934,   232,   nil,   nil,   nil,  1054,   nil,
 19779,   956,  1001,   nil,   nil,   nil,   nil,   nil,   nil, 25231,
   nil,   728,   nil,   nil,   nil,   nil,  1426,  1081,   nil, 19910,
  1083, 20041, 20172,   nil,   nil,    45,    50,  1350,   229,   nil,
  1084,   nil,   nil,  1092,  1096,   985,   nil,   nil,   nil,   282,
   nil,   nil,   632,  2631,   nil,   335,   nil,   362,   nil, 20303,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,  1001,   986,   nil,
  3142,   nil,  3273, 20434, 20565, 20696,   nil,   nil,   nil, 20827,
   988,   nil,   nil,   nil, 20958,   nil,   nil,    72, 21089,   nil,
  1029,   998,   nil,   nil,    76,   nil,  1116,  1117, 21220, 21351,
   nil,   nil, 21482,   nil,   nil,  1039,   nil,  1004,   nil,   nil,
  1006,  1007,  1009,  1000,   nil,   nil,  9705,   nil,  3404,   nil,
 21613,   nil, 21744,    80,  1481,  1084,    84,   nil,   nil, 21875,
   nil,   nil,   nil,   467, 22006,  1131,   nil,   nil,   466,   nil,
   nil,   nil, 22137,  1136, 22268, 25290, 25349,    88,   720,   nil,
   nil,   nil,  1136,   nil,  1026,  1144,   nil,  1063,    96,   110,
   176,   211,   nil,   nil,   nil,   nil,   129 ]

racc_action_default = [
    -3,  -560,    -1,  -548,    -4,    -6,  -560,  -560,  -560,  -560,
  -560,  -560,  -560,  -560,  -281,   -37,   -38,  -560,  -560,   -43,
   -45,   -46,  -293,  -331,  -332,   -50,  -259,  -386,  -259,   -65,
   -10,   -69,   -77,   -79,  -560,  -461,  -560,  -560,  -560,  -560,
  -560,  -550,  -235,  -274,  -275,  -276,  -277,  -278,  -279,  -280,
  -538,  -283,  -560,  -559,  -529,  -301,  -559,  -560,  -560,  -306,
  -309,  -548,  -560,  -560,  -323,  -560,  -333,  -334,  -404,  -405,
  -406,  -407,  -408,  -559,  -411,  -559,  -559,  -559,  -559,  -559,
  -438,  -444,  -445,  -560,  -450,  -451,  -452,  -453,  -454,  -455,
  -456,  -457,  -458,  -459,  -460,  -463,  -464,  -560,    -2,  -549,
  -555,  -556,  -557,  -560,  -560,  -560,  -560,  -560,    -3,   -13,
  -560,  -106,  -107,  -108,  -109,  -110,  -111,  -112,  -115,  -116,
  -117,  -118,  -119,  -120,  -121,  -122,  -123,  -124,  -125,  -126,
  -127,  -128,  -129,  -130,  -131,  -132,  -133,  -134,  -135,  -136,
  -137,  -138,  -139,  -140,  -141,  -142,  -143,  -144,  -145,  -146,
  -147,  -148,  -149,  -150,  -151,  -152,  -153,  -154,  -155,  -156,
  -157,  -158,  -159,  -160,  -161,  -162,  -163,  -164,  -165,  -166,
  -167,  -168,  -169,  -170,  -171,  -172,  -173,  -174,  -175,  -176,
  -177,  -178,  -179,  -180,  -181,  -182,  -183,  -184,  -185,  -186,
  -187,  -188,  -560,   -18,  -113,   -10,  -560,  -560,  -560,  -559,
  -559,  -560,  -560,  -560,  -560,  -560,  -560,   -41,  -560,  -461,
  -560,  -281,  -560,  -560,   -10,  -560,   -42,  -225,  -560,  -560,
  -560,  -560,  -560,  -560,  -560,  -560,  -560,  -560,  -560,  -560,
  -560,  -560,  -560,  -560,  -560,  -560,  -560,  -560,  -560,  -560,
  -560,  -560,  -560,  -560,  -560,  -232,  -373,  -375,   -47,  -236,
  -252,  -266,  -266,  -256,  -560,  -267,  -560,  -293,  -331,  -332,
  -559,  -531,  -560,   -48,   -49,  -560,  -560,  -560,   -55,  -559,
  -560,  -300,  -379,  -387,  -389,   -63,  -385,   -64,  -560,  -548,
   -11,   -65,   -10,  -560,  -560,   -70,   -73,   -10,  -461,  -560,
  -560,  -281,  -296,  -550,  -560,  -335,  -386,  -560,   -75,  -560,
   -81,  -288,  -446,  -447,  -560,  -210,  -211,  -226,  -560,  -551,
   -10,  -550,  -237,  -550,  -552,  -552,  -560,  -560,  -552,  -560,
  -302,  -303,  -560,  -560,  -346,  -347,  -354,  -559,  -495,  -361,
  -559,  -559,  -372,  -494,  -496,  -497,  -498,  -499,  -500,  -560,
  -513,  -518,  -519,  -521,  -522,  -523,  -560,   -44,  -560,  -560,
  -560,  -560,  -548,  -560,  -549,  -461,  -560,  -560,  -281,  -560,
  -502,  -503,  -102,  -560,  -104,  -560,  -281,  -560,  -320,  -461,
  -560,  -106,  -107,  -144,  -145,  -161,  -166,  -173,  -176,  -326,
  -560,  -527,  -560,  -409,  -560,  -424,  -560,  -426,  -560,  -560,
  -560,  -416,  -560,  -560,  -422,  -560,  -437,  -439,  -440,  -441,
  -442,  -448,  -449,   977,    -5,  -558,   -19,   -20,   -21,   -22,
   -23,  -560,  -560,   -15,   -16,   -17,  -560,  -560,   -25,   -34,
  -189,  -267,  -560,  -560,   -26,   -35,   -36,   -27,  -191,  -560,
  -560,  -539,  -540,  -559,  -382,  -541,  -542,  -539,  -259,  -540,
  -384,  -544,  -545,  -559,  -539,  -540,   -33,  -199,   -39,   -40,
  -560,  -560,  -559,  -559,  -288,  -560,  -560,  -560,  -560,  -299,
  -200,  -201,  -202,  -203,  -204,  -205,  -206,  -207,  -212,  -213,
  -214,  -215,  -216,  -217,  -218,  -219,  -220,  -221,  -222,  -223,
  -224,  -227,  -228,  -229,  -230,  -560,  -559,  -253,  -560,  -254,
  -560,  -264,  -560,  -268,  -560,  -534,  -259,  -259,  -259,  -559,
   -56,  -550,  -247,  -248,  -266,  -266,  -260,  -261,  -560,  -559,
  -559,  -560,  -295,    -9,  -549,  -560,   -66,  -286,   -82,   -71,
  -560,  -560,  -559,  -560,  -560,  -559,  -560,  -288,  -560,  -446,
  -447,  -560,   -78,   -83,  -560,  -560,  -560,  -560,  -560,  -231,
  -560,  -396,  -560,  -560,  -238,  -239,  -554,  -553,  -241,  -554,
  -291,  -292,  -530,  -343,   -10,   -10,  -560,  -345,  -560,  -363,
  -370,  -560,  -367,  -368,  -560,  -371,  -495,  -560,  -504,  -560,
  -506,  -508,  -512,  -520,  -524,   -10,  -336,  -337,  -338,   -10,
  -560,  -560,  -560,  -560,   -10,  -391,  -559,  -560,  -560,  -559,
  -288,  -315,  -102,  -103,  -560,  -559,  -560,  -318,  -465,  -560,
  -560,  -560,  -324,  -493,  -328,  -546,  -547,  -550,  -410,  -425,
  -428,  -429,  -431,  -412,  -427,  -413,  -414,  -415,  -560,  -418,
  -420,  -421,  -560,  -443,    -7,   -14,  -114,   -24,  -560,  -273,
  -560,  -289,  -290,  -560,  -560,   -59,  -245,  -246,  -380,  -560,
   -61,  -383,  -560,   -57,  -381,  -539,  -540,  -539,  -540,  -560,
  -560,  -189,  -298,  -560,  -357,  -560,  -359,   -10,  -266,  -265,
  -269,  -560,  -532,  -533,  -560,   -51,  -376,   -52,  -377,   -53,
  -378,   -10,  -243,  -560,  -249,  -251,   -43,  -560,  -258,  -262,
  -560,   -10,   -10,  -294,   -12,   -66,  -560,   -74,   -80,  -560,
  -539,  -540,  -559,  -543,  -287,  -560,  -560,  -559,   -76,  -560,
  -198,  -208,  -209,  -560,  -559,  -559,  -284,  -285,  -552,  -242,
  -560,  -560,  -344,  -355,  -560,  -362,  -559,  -356,  -560,  -559,
  -559,  -514,  -501,  -560,  -560,  -511,  -559,  -339,  -559,  -307,
  -340,  -341,  -342,  -310,  -560,  -313,  -560,  -560,  -560,  -539,
  -540,  -543,  -287,  -560,  -560,  -102,  -105,  -543,  -560,   -10,
  -560,  -467,  -560,   -10,   -10,  -493,  -560,  -470,  -471,  -473,
  -474,  -476,  -477,  -526,  -526,  -482,  -484,  -484,  -484,  -492,
  -495,  -516,  -560,  -560,  -560,   -10,  -417,  -419,  -423,  -190,
  -271,  -560,  -560,  -560,   -30,  -194,   -31,  -195,   -60,   -32,
  -196,   -62,  -197,   -58,  -560,  -560,  -560,  -290,  -289,  -233,
  -358,  -560,  -560,  -255,  -270,  -535,  -560,  -244,  -266,  -560,
  -263,  -560,  -560,   -72,  -289,  -290,   -84,  -297,  -559,  -352,
   -10,  -397,  -559,  -398,  -399,  -240,  -348,  -349,  -369,  -560,
  -288,  -560,  -365,  -366,  -505,  -507,  -510,  -560,  -350,  -560,
  -560,   -10,   -10,  -312,  -314,  -560,  -289,   -94,  -560,  -289,
  -560,  -466,  -321,  -560,  -560,  -550,  -469,  -472,  -475,  -560,
  -480,  -481,  -560,  -560,  -488,  -560,  -490,  -560,  -491,  -560,
  -329,  -528,  -430,  -433,  -434,  -435,  -436,  -560,  -272,   -28,
  -192,   -29,  -193,  -560,  -560,  -560,  -360,  -374,   -54,  -250,
  -266,  -388,  -390,    -8,   -10,  -403,  -353,  -560,  -560,  -401,
  -287,  -559,  -509,  -304,  -560,  -305,  -560,  -560,  -560,   -10,
  -316,  -319,   -10,  -325,  -327,  -560,  -478,  -526,  -525,  -483,
  -484,  -484,  -484,  -560,  -517,  -515,  -493,  -432,  -234,  -257,
  -560,  -402,   -10,  -461,  -560,  -560,  -281,  -400,  -364,   -10,
  -308,  -311,  -269,  -559,   -10,  -560,  -468,  -479,  -560,  -486,
  -487,  -489,   -10,  -396,  -559,  -560,  -560,  -288,  -559,  -392,
  -393,  -394,  -560,  -322,  -484,  -560,  -395,  -560,  -539,  -540,
  -543,  -287,  -351,  -317,  -485,  -330,  -289 ]

clist = [
'13,379,316,308,250,250,250,419,426,295,295,251,251,251,754,397,704,208',
'208,500,102,766,208,208,208,662,542,324,332,98,13,289,289,5,560,313',
'10,563,565,769,295,295,114,114,575,579,348,349,367,99,352,583,208,208',
'659,721,659,208,208,568,489,208,356,365,285,713,10,281,216,532,283,109',
'194,593,678,298,117,117,102,729,733,545,548,207,662,552,2,353,837,818',
'1,567,406,407,408,409,384,924,360,13,114,404,893,208,208,208,208,13',
'13,644,193,361,709,840,114,716,412,485,311,720,609,12,885,347,347,501',
'619,347,397,248,263,264,5,672,680,10,506,860,861,381,410,5,657,10,10',
'317,386,388,429,430,395,12,320,321,359,671,597,433,438,443,768,380,666',
'668,670,681,682,604,310,347,347,347,347,766,350,268,275,277,841,351',
'924,313,313,842,744,423,423,944,749,601,912,769,370,753,411,13,208,208',
'208,208,208,603,772,926,208,208,208,322,553,719,662,864,866,868,13,208',
'284,247,486,509,12,496,497,498,510,959,737,114,12,12,609,10,822,897',
'383,390,618,442,393,872,659,659,774,775,855,917,418,424,427,916,10,250',
'250,920,446,528,835,,504,251,250,,,,295,,,251,,208,208,448,449,543,',
'544,,295,208,,734,458,13,494,,,289,13,,568,687,947,725,,556,332,102',
',,289,,698,,,746,513,,,,,13,,768,489,,,12,,10,281,972,723,515,10,281',
'514,,521,960,519,,,533,,,12,,952,713,580,581,,,,766,,10,910,295,,208',
'208,,,777,602,721,252,252,252,,,769,644,,949,950,951,,102,365,,,,272',
'276,503,507,582,,,417,208,,598,511,788,,901,318,,791,,,793,,,,,,284',
'649,650,12,,,433,438,12,974,,,,,,,347,347,,,921,,922,828,662,,832,833',
'966,14,,12,,,313,313,,,,,,,,,568,,,114,607,,,114,208,208,,659,813,,',
'14,291,291,,673,,850,803,,284,853,854,689,,284,696,825,625,,,692,626',
'117,697,768,,117,442,,,,,358,366,692,,,659,,295,,,,,,313,964,,313,208',
'295,,,,,13,,823,,,,289,,208,,,208,,,14,,,289,,,,738,14,14,743,295,208',
'909,,692,748,,,684,,,10,,692,533,13,13,902,,,442,,717,,,533,,,,313,773',
',313,,442,311,13,,313,,13,,,635,,13,,208,640,750,208,10,10,643,932,',
'208,,730,730,208,939,208,,,505,252,703,,938,,,10,,252,,10,803,751,,',
'10,,,442,14,,801,332,945,442,,,,208,208,12,,,,208,,961,272,14,276,665',
'667,669,,,,,,,,,,13,,,,,765,,295,347,,752,965,,,13,,,,12,12,295,,,,13',
'13,784,786,,289,,,789,,,,10,423,,12,,929,289,12,,,,,12,,10,870,,,14',
',,,291,14,10,10,533,,,,,,,845,,291,,,,816,848,,,,,,14,710,711,,,208',
',,,,13,,,,13,13,,,,,,,726,,,35,728,,851,,852,736,,,856,,13,,,12,,,637',
'208,208,,10,641,,,10,10,637,12,,35,288,288,,890,366,,,12,12,,,,114,',
',347,10,,,765,,,915,,,13,,,658,,,355,369,904,369,,,879,881,,,,,,208',
',13,13,802,637,637,637,,,,,,,,,,10,806,,,,,,35,442,730,,811,812,,12',
'35,35,,12,12,295,10,10,,,708,,,,,,,,,,,,,13,,12,,934,,,,,967,,347,,',
',13,,692,13,,,,,,918,,,918,765,,765,,765,,,,10,,13,,937,,313,,,13,,12',
',14,13,10,,,10,291,,,13,,208,,,,,35,291,877,12,12,,,,,10,,,,,,,10,325',
',35,,10,,,14,14,765,,,10,,366,442,,385,,387,387,391,394,387,,,,,14,',
'896,765,14,808,,,,14,,12,,,,,,,,,,,,906,907,,12,,,12,,,,,,,637,,,641',
',637,35,,,,288,35,,12,,,,,,,12,,,288,,12,,,,,,,,12,35,,,,,,931,,,,,',
'14,,,,,,,,,943,,,,,14,,,,,,,,,,14,14,,,,291,,,953,,,,,,,958,,,291,,962',
',,,369,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,14,,385,,14,14,,,',
',,502,,,,,,,,,,,,,,876,14,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
'559,,14,559,559,,,,,,,,,,,,,,,,,,,14,14,,,,,217,,35,,249,249,249,,288',
',,,,,,,,,,288,305,306,307,,,,,,,,,,,,,249,249,,,,,,35,35,,,,14,,369',
',936,,,,,,,,,,,14,35,,14,,35,,,,,35,,,,,636,,,,,,,,14,,636,,,,,14,,',
',,14,,,,,,,,14,,,,,,,,,,,,,,,,,,,,,,,,,654,,,,,,,,,,636,636,636,654',
',35,,,,,,,,654,654,,,,,35,,,,,,,,,,35,35,,,,288,319,,,420,249,428,249',
'249,,,,447,288,,,,,,,,,,,,,217,,460,461,462,463,464,465,466,467,468',
'469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,,,,',
',,,,,249,35,249,,,35,35,,249,,,,,,,249,249,,,,,,,,249,,,35,,,,,,,,,',
',,,,,,,,,,,,,,,,,539,,,,,,,,,,,,,,,,,,35,,,,,,,,,421,425,,,,,,,,,,,35',
'35,,,,,,636,,,,,636,,,,,,,819,824,,,,,,,,,,,559,,,559,559,,,,,,819,',
'819,,,491,,493,,,,,35,495,,,933,,,,,,,,,,,35,,,35,,,,249,,,,,,,,,,,',
',,,,35,,,,,,,35,,,,,35,,249,249,,447,651,428,35,,,,,,,,,,,,,,,,,,,,',
',895,,,,899,653,,,249,,249,,249,,,,,,,,,,,,,,,,676,,,,,,,,,,,,294,294',
'249,,,249,,294,294,294,,,,,700,701,702,,,,,,,294,,,249,,,249,,294,294',
',,,,,,,,629,,559,,,,,,,,,,,,,,,,,,,,,,,249,,,249,,,,,,249,,,,,,,,,,819',
',,,,,,,,,,,,,,819,,,,,,,660,779,319,249,663,,785,787,,,,,790,,,792,',
',,,677,,,,,,,,,,,,,,249,,,249,,,,,,,,,,249,249,,,,,,,,,,660,,,319,,',
',,,,,,,,,,,,,,249,,294,,294,294,294,294,294,294,294,294,294,294,294',
'294,294,294,294,294,294,294,294,294,294,294,294,294,294,,,,249,,,,,',
'294,,294,,,,,,294,,,,,,,,,,249,,,,,,,,780,,,,,,294,,,,,,249,880,882',
',,,,294,,,,,,785,787,790,294,,,804,,,805,,,,,,249,,,,660,319,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,821,,,,,,,,,,,,,,,294,,,,,,,,,,249,,,,,,,421,',
',,,,,882,880,928,,,,249,,,,,,,,,,,858,,,,,,,,249,,,294,,,,,,,,,878,',
',,,,,,,,249,,,,,,,,,,,,,,294,294,294,,421,,,,,,249,,,,,,,,,,,,,,,,,',
',,294,,,294,,294,,294,,,,,,,,,,,,,,,,,,,,,,,,,,,925,294,,,,,,,,,,,294',
',,294,294,294,,,319,,,,,,,294,,,294,,,,,,,,,942,,,294,,,,,,,,,,,,,,',
',,,,942,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,294,,294,,,,',
',,,,,,,294,,,,,,,,,,,,,,,,,,,294,,,294,,,,,,,,,,294,294,,,,,,,,,,,294',
',,,,,,,,,,,,294,,,,,,294,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,294,,,,,,,,',
',,,,,,,,,,,,,,,294,,,,,,,,,,,,,,,,,,,,294,,,,,,,,,,,,,294,294,294,,',
',,,,,,,,,,294,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,294,,,,,,,,,,,,,,294,294,294,,,,294,,,,,,,,,294,,,,,,,,,,294,,',
',,,,,,,,,,,,,,,,,,,294' ]
        racc_goto_table = arr = ::Array.new(2678, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'21,47,22,51,29,29,29,24,24,52,52,56,56,56,86,47,10,21,21,35,85,112,21',
'21,21,156,8,106,109,4,21,21,21,7,111,29,17,111,111,143,52,52,48,48,79',
'79,16,16,46,6,16,82,21,21,59,149,59,21,21,147,64,21,21,21,41,108,17',
'38,18,43,39,14,14,45,59,42,50,50,85,81,81,57,57,26,156,57,2,4,80,11',
'1,150,16,16,16,16,127,153,17,21,48,5,12,21,21,21,21,21,21,63,15,19,59',
'11,48,113,27,53,26,113,131,20,54,26,26,61,131,26,47,31,31,31,7,62,65',
'17,66,144,144,74,7,7,36,17,17,75,128,128,22,22,128,20,76,78,83,36,84',
'33,33,33,113,87,63,63,63,36,36,88,89,26,26,26,26,112,90,34,34,34,91',
'92,153,29,29,93,94,56,56,95,96,97,98,143,99,100,2,21,21,21,21,21,21',
'101,102,103,21,21,21,104,105,107,156,145,145,145,21,21,9,114,115,117',
'20,33,33,33,118,119,120,48,20,20,131,17,121,122,126,129,130,48,132,133',
'59,59,134,135,137,139,18,18,18,141,17,29,29,146,18,51,151,,56,56,29',
',,,52,,,56,,21,21,26,26,51,,51,,52,21,,82,26,21,127,,,21,21,,147,43',
'144,147,,106,109,85,,,21,,43,,,45,4,,,,,21,,113,64,,,20,,17,38,80,150',
'39,17,38,6,,39,11,42,,,41,,,20,,86,108,16,16,,,,112,,17,81,52,,21,21',
',,131,46,149,58,58,58,,,143,63,,145,145,145,,85,21,,,,60,60,31,31,4',
',,9,21,,85,31,35,,113,58,,35,,,35,,,,,,9,22,22,20,,,33,33,20,145,,,',
',,,26,26,,,113,,113,111,156,,111,111,10,23,,20,,,29,29,,,,,,,,,147,',
',48,26,,,48,21,21,,59,43,,,23,23,23,,51,,8,64,,9,8,8,22,,9,22,57,14',
',,33,14,50,33,113,,50,48,,,,,23,23,33,,,59,,52,,,,,,29,113,,29,21,52',
',,,,21,,24,,,,21,,21,,,21,,,23,,,21,,,,22,23,23,22,52,21,79,,33,22,',
',7,,,17,,33,41,21,21,147,,,48,,21,,,41,,,,29,51,,29,,48,26,21,,29,,21',
',,34,,21,,21,34,16,21,17,17,34,79,,21,,85,85,21,79,21,,,58,58,26,,111',
',,17,,58,,17,64,85,,,17,,,48,23,,106,109,8,48,,,,21,21,20,,,,21,,82',
'60,23,60,34,34,34,,,,,,,,,,21,,,,,110,,52,26,,26,8,,,21,,,,20,20,52',
',,,21,21,18,18,,21,,,18,,,,17,56,,20,,64,21,20,,,,,20,,17,47,,,23,,',
',23,23,17,17,41,,,,,,,56,,23,,,,41,16,,,,,,23,9,9,,,21,,,,,21,,,,21',
'21,,,,,,,9,,,44,9,,85,,85,9,,,85,,21,,,20,,,60,21,21,,17,60,,,17,17',
'60,20,,44,44,44,,56,23,,,20,20,,,,48,,,26,17,,,110,,,51,,,21,,,58,,',
'44,44,16,44,,,18,18,,,,,,21,,21,21,9,60,60,60,,,,,,,,,,17,9,,,,,,44',
'48,85,,9,9,,20,44,44,,20,20,52,17,17,,,58,,,,,,,,,,,,,21,,20,,21,,,',
',22,,26,,,,21,,33,21,,,,,,110,,,110,110,,110,,110,,,,17,,21,,17,,29',
',,21,,20,,23,21,17,,,17,23,,,21,,21,,,,,44,23,9,20,20,,,,,17,,,,,,,17',
'55,,44,,17,,,23,23,110,,,17,,23,48,,55,,55,55,55,55,55,,,,,23,,9,110',
'23,58,,,,23,,20,,,,,,,,,,,,9,9,,20,,,20,,,,,,,60,,,60,,60,44,,,,44,44',
',20,,,,,,,20,,,44,,20,,,,,,,,20,44,,,,,,9,,,,,,23,,,,,,,,,9,,,,,23,',
',,,,,,,,23,23,,,,23,,,9,,,,,,,9,,,23,,9,,,,44,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,23,,55,,23,23,,,,,,55,,,,,,,,,,,,,,23,23,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,55,,23,55,55,,,,,,,,,,,,,,,,,,,23',
'23,,,,,28,,44,,28,28,28,,44,,,,,,,,,,,44,28,28,28,,,,,,,,,,,,,28,28',
',,,,,44,44,,,,23,,44,,23,,,,,,,,,,,23,44,,23,,44,,,,,44,,,,,55,,,,,',
',,23,,55,,,,,23,,,,,23,,,,,,,,23,,,,,,,,,,,,,,,,,,,,,,,,,55,,,,,,,,',
',55,55,55,55,,44,,,,,,,,55,55,,,,,44,,,,,,,,,,44,44,,,,44,25,,,28,28',
'28,28,28,,,,28,44,,,,,,,,,,,,,28,,28,28,28,28,28,28,28,28,28,28,28,28',
'28,28,28,28,28,28,28,28,28,28,28,28,28,,,,,,,,,,28,44,28,,,44,44,,28',
',,,,,,28,28,,,,,,,,28,,,44,,,,,,,,,,,,,,,,,,,,,,,,,,,28,,,,,,,,,,,,',
',,,,,44,,,,,,,,,25,25,,,,,,,,,,,44,44,,,,,,55,,,,,55,,,,,,,55,55,,,',
',,,,,,,55,,,55,55,,,,,,55,,55,,,25,,25,,,,,44,25,,,44,,,,,,,,,,,44,',
',44,,,,28,,,,,,,,,,,,,,,,44,,,,,,,44,,,,,44,,28,28,,28,28,28,44,,,,',
',,,,,,,,,,,,,,,,,55,,,,55,28,,,28,,28,,28,,,,,,,,,,,,,,,,28,,,,,,,,',
',,,37,37,28,,,28,,37,37,37,,,,,28,28,28,,,,,,,37,,,28,,,28,,37,37,,',
',,,,,,25,,55,,,,,,,,,,,,,,,,,,,,,,,28,,,28,,,,,,28,,,,,,,,,,55,,,,,',
',,,,,,,,,55,,,,,,,25,28,25,28,25,,28,28,,,,,28,,,28,,,,,25,,,,,,,,,',
',,,,28,,,28,,,,,,,,,,28,28,,,,,,,,,,25,,,25,,,,,,,,,,,,,,,,,28,,37,',
'37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37',
'37,37,,,,28,,,,,,37,,37,,,,,,37,,,,,,,,,,28,,,,,,,,25,,,,,,37,,,,,,28',
'28,28,,,,,37,,,,,,28,28,28,37,,,25,,,25,,,,,,28,,,,25,25,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,25,,,,,,,,,,,,,,,37,,,,,,,,,,28,,,,,,,25,,,,,,,28',
'28,28,,,,28,,,,,,,,,,,25,,,,,,,,28,,,37,,,,,,,,,25,,,,,,,,,,28,,,,,',
',,,,,,,,37,37,37,,25,,,,,,28,,,,,,,,,,,,,,,,,,,,37,,,37,,37,,37,,,,',
',,,,,,,,,,,,,,,,,,,,,,25,37,,,,,,,,,,,37,,,37,37,37,,,25,,,,,,,37,,',
'37,,,,,,,,,25,,,37,,,,,,,,,,,,,,,,,,,25,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,37,,37,,,,,,,,,,,,37,,,,,,,,,,,,,,,,,,,37,,,37,,',
',,,,,,,37,37,,,,,,,,,,,37,,,,,,,,,,,,,37,,,,,,37,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,37,,,,,,,,,,,,,,,,,,,,,,,,37,,,,,,,,,,,,,,,,,,,,37,,,,,',
',,,,,,,37,37,37,,,,,,,,,,,,,37,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,37,,,,,,,,,,,,,,37,37,37,,,,37,,,,,,,,,37,,,,',
',,,,,37,,,,,,,,,,,,,,,,,,,,,,37' ]
        racc_goto_check = arr = ::Array.new(2678, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_goto_pointer = [
   nil,    90,    86,   nil,    26,     2,    46,    33,  -284,   186,
  -525,  -615,  -716,   nil,    64,   102,   -11,    36,    50,    49,
   121,     0,   -51,   429,  -189,  1397,    66,     7,  1258,   -18,
   nil,   107,   nil,   -44,   149,  -249,  -344,  1747,    37,    40,
   nil,    33,    43,  -230,   764,  -290,   -15,   -64,    35,   nil,
    69,   -38,   -22,  -128,  -677,   920,   -11,  -233,   335,  -434,
   348,  -144,  -368,  -334,  -192,  -374,  -134,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    74,    91,    97,   nil,    97,  -304,
  -638,  -501,  -302,    92,  -211,    17,  -589,    96,  -213,   117,
   115,  -551,   119,  -550,  -407,  -723,  -409,  -179,  -662,   128,
  -409,  -178,  -402,  -667,   151,  -114,   -29,  -353,  -493,   -28,
    59,  -293,  -582,  -443,   197,   -28,   nil,   -54,   -50,  -718,
  -359,  -473,  -589,   nil,   nil,   nil,   163,    23,    71,   158,
  -154,  -264,   160,  -535,  -369,  -369,   nil,  -511,   nil,  -614,
   nil,  -610,   nil,  -564,  -626,  -555,  -610,  -280,   nil,  -507,
  -248,  -468,   nil,  -768,   nil,   nil,  -465 ]

racc_goto_default = [
   nil,   nil,   nil,     3,   nil,     4,   354,   280,   nil,   541,
   nil,   838,   nil,   279,   nil,   nil,   nil,   212,    16,    11,
   213,   304,   nil,   211,   nil,   255,    15,   nil,    19,    20,
    21,   nil,    25,   695,   nil,   nil,   nil,    26,    29,   nil,
    31,    34,    33,   nil,   209,   364,   nil,   116,   436,   115,
    69,   nil,    42,   nil,   nil,   312,   314,   nil,   315,   253,
   434,   nil,   nil,   638,   487,   nil,   nil,   270,    43,    44,
    45,    46,    47,    48,    49,   nil,   271,    55,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   576,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   327,   326,   715,
   329,   nil,   330,   331,   nil,   nil,   440,   nil,   nil,   nil,
   nil,   nil,   nil,    68,    70,    71,    72,   nil,   nil,   nil,
   nil,   614,   nil,   nil,   nil,   nil,   396,   756,   759,   764,
   761,   762,   763,   919,   nil,   nil,   767,   338,   333,   340,
   nil,   570,   571,   771,   343,   346,   261 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 141, :_reduce_none,
  2, 142, :_reduce_2,
  0, 143, :_reduce_3,
  1, 143, :_reduce_4,
  3, 143, :_reduce_5,
  1, 145, :_reduce_none,
  4, 145, :_reduce_7,
  4, 148, :_reduce_8,
  2, 149, :_reduce_9,
  0, 153, :_reduce_10,
  1, 153, :_reduce_11,
  3, 153, :_reduce_12,
  0, 167, :_reduce_13,
  4, 147, :_reduce_14,
  3, 147, :_reduce_15,
  3, 147, :_reduce_none,
  3, 147, :_reduce_17,
  2, 147, :_reduce_18,
  3, 147, :_reduce_19,
  3, 147, :_reduce_20,
  3, 147, :_reduce_21,
  3, 147, :_reduce_22,
  3, 147, :_reduce_23,
  4, 147, :_reduce_none,
  3, 147, :_reduce_25,
  3, 147, :_reduce_26,
  3, 147, :_reduce_27,
  6, 147, :_reduce_none,
  6, 147, :_reduce_none,
  5, 147, :_reduce_30,
  5, 147, :_reduce_none,
  5, 147, :_reduce_none,
  3, 147, :_reduce_none,
  3, 147, :_reduce_34,
  3, 147, :_reduce_35,
  3, 147, :_reduce_36,
  1, 147, :_reduce_none,
  1, 166, :_reduce_none,
  3, 166, :_reduce_39,
  3, 166, :_reduce_40,
  2, 166, :_reduce_41,
  2, 166, :_reduce_42,
  1, 166, :_reduce_none,
  1, 156, :_reduce_none,
  1, 158, :_reduce_none,
  1, 158, :_reduce_none,
  2, 158, :_reduce_47,
  2, 158, :_reduce_48,
  2, 158, :_reduce_49,
  1, 170, :_reduce_none,
  4, 170, :_reduce_none,
  4, 170, :_reduce_none,
  4, 170, :_reduce_none,
  4, 175, :_reduce_none,
  2, 169, :_reduce_55,
  3, 169, :_reduce_none,
  4, 169, :_reduce_57,
  5, 169, :_reduce_none,
  4, 169, :_reduce_59,
  5, 169, :_reduce_none,
  4, 169, :_reduce_61,
  5, 169, :_reduce_none,
  2, 169, :_reduce_63,
  2, 169, :_reduce_64,
  1, 159, :_reduce_65,
  3, 159, :_reduce_66,
  1, 179, :_reduce_67,
  3, 179, :_reduce_68,
  1, 178, :_reduce_69,
  2, 178, :_reduce_70,
  3, 178, :_reduce_71,
  5, 178, :_reduce_72,
  2, 178, :_reduce_73,
  4, 178, :_reduce_74,
  2, 178, :_reduce_75,
  4, 178, :_reduce_76,
  1, 178, :_reduce_77,
  3, 178, :_reduce_78,
  1, 181, :_reduce_79,
  3, 181, :_reduce_80,
  2, 180, :_reduce_81,
  3, 180, :_reduce_82,
  1, 183, :_reduce_83,
  3, 183, :_reduce_84,
  1, 182, :_reduce_85,
  4, 182, :_reduce_86,
  3, 182, :_reduce_87,
  3, 182, :_reduce_none,
  3, 182, :_reduce_none,
  3, 182, :_reduce_none,
  2, 182, :_reduce_none,
  1, 182, :_reduce_none,
  1, 157, :_reduce_93,
  4, 157, :_reduce_94,
  4, 157, :_reduce_95,
  3, 157, :_reduce_96,
  3, 157, :_reduce_97,
  3, 157, :_reduce_98,
  3, 157, :_reduce_99,
  2, 157, :_reduce_100,
  1, 157, :_reduce_none,
  1, 185, :_reduce_none,
  2, 186, :_reduce_103,
  1, 186, :_reduce_104,
  3, 186, :_reduce_105,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_109,
  1, 187, :_reduce_110,
  1, 154, :_reduce_111,
  1, 154, :_reduce_none,
  1, 155, :_reduce_113,
  3, 155, :_reduce_114,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  3, 168, :_reduce_189,
  5, 168, :_reduce_190,
  3, 168, :_reduce_191,
  6, 168, :_reduce_192,
  6, 168, :_reduce_193,
  5, 168, :_reduce_194,
  5, 168, :_reduce_none,
  5, 168, :_reduce_none,
  5, 168, :_reduce_none,
  4, 168, :_reduce_none,
  3, 168, :_reduce_none,
  3, 168, :_reduce_200,
  3, 168, :_reduce_201,
  3, 168, :_reduce_202,
  3, 168, :_reduce_203,
  3, 168, :_reduce_204,
  3, 168, :_reduce_205,
  3, 168, :_reduce_206,
  3, 168, :_reduce_207,
  4, 168, :_reduce_208,
  4, 168, :_reduce_209,
  2, 168, :_reduce_210,
  2, 168, :_reduce_211,
  3, 168, :_reduce_212,
  3, 168, :_reduce_213,
  3, 168, :_reduce_214,
  3, 168, :_reduce_215,
  3, 168, :_reduce_216,
  3, 168, :_reduce_217,
  3, 168, :_reduce_218,
  3, 168, :_reduce_219,
  3, 168, :_reduce_220,
  3, 168, :_reduce_221,
  3, 168, :_reduce_222,
  3, 168, :_reduce_223,
  3, 168, :_reduce_224,
  2, 168, :_reduce_225,
  2, 168, :_reduce_226,
  3, 168, :_reduce_227,
  3, 168, :_reduce_228,
  3, 168, :_reduce_229,
  3, 168, :_reduce_230,
  3, 168, :_reduce_231,
  0, 193, :_reduce_232,
  0, 194, :_reduce_233,
  7, 168, :_reduce_234,
  1, 168, :_reduce_none,
  1, 165, :_reduce_none,
  1, 162, :_reduce_237,
  2, 162, :_reduce_238,
  2, 162, :_reduce_239,
  4, 162, :_reduce_240,
  2, 162, :_reduce_241,
  3, 162, :_reduce_242,
  3, 200, :_reduce_243,
  2, 202, :_reduce_none,
  1, 203, :_reduce_245,
  1, 203, :_reduce_none,
  1, 201, :_reduce_247,
  1, 201, :_reduce_none,
  2, 201, :_reduce_249,
  4, 201, :_reduce_250,
  2, 201, :_reduce_251,
  1, 171, :_reduce_252,
  2, 171, :_reduce_253,
  2, 171, :_reduce_254,
  4, 171, :_reduce_255,
  1, 171, :_reduce_256,
  4, 205, :_reduce_none,
  1, 205, :_reduce_none,
  0, 207, :_reduce_259,
  2, 174, :_reduce_260,
  1, 206, :_reduce_none,
  2, 206, :_reduce_262,
  3, 206, :_reduce_263,
  2, 199, :_reduce_264,
  2, 204, :_reduce_265,
  0, 204, :_reduce_266,
  1, 196, :_reduce_267,
  2, 196, :_reduce_268,
  3, 196, :_reduce_269,
  4, 196, :_reduce_270,
  3, 164, :_reduce_271,
  4, 164, :_reduce_272,
  2, 164, :_reduce_273,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  0, 229, :_reduce_283,
  4, 192, :_reduce_284,
  4, 192, :_reduce_285,
  3, 192, :_reduce_286,
  3, 192, :_reduce_287,
  2, 192, :_reduce_288,
  4, 192, :_reduce_289,
  4, 192, :_reduce_290,
  3, 192, :_reduce_291,
  3, 192, :_reduce_292,
  1, 192, :_reduce_293,
  4, 192, :_reduce_294,
  3, 192, :_reduce_295,
  1, 192, :_reduce_296,
  5, 192, :_reduce_297,
  4, 192, :_reduce_298,
  3, 192, :_reduce_299,
  2, 192, :_reduce_300,
  1, 192, :_reduce_none,
  2, 192, :_reduce_302,
  2, 192, :_reduce_303,
  6, 192, :_reduce_304,
  6, 192, :_reduce_305,
  0, 230, :_reduce_306,
  0, 231, :_reduce_307,
  7, 192, :_reduce_308,
  0, 232, :_reduce_309,
  0, 233, :_reduce_310,
  7, 192, :_reduce_311,
  5, 192, :_reduce_312,
  4, 192, :_reduce_313,
  5, 192, :_reduce_314,
  0, 234, :_reduce_315,
  0, 235, :_reduce_316,
  9, 192, :_reduce_317,
  0, 236, :_reduce_318,
  6, 192, :_reduce_319,
  0, 237, :_reduce_320,
  0, 238, :_reduce_321,
  8, 192, :_reduce_322,
  0, 239, :_reduce_323,
  0, 240, :_reduce_324,
  6, 192, :_reduce_325,
  0, 241, :_reduce_326,
  6, 192, :_reduce_327,
  0, 242, :_reduce_328,
  0, 243, :_reduce_329,
  9, 192, :_reduce_330,
  1, 192, :_reduce_331,
  1, 192, :_reduce_332,
  1, 192, :_reduce_333,
  1, 192, :_reduce_none,
  1, 161, :_reduce_none,
  1, 219, :_reduce_none,
  1, 219, :_reduce_none,
  1, 219, :_reduce_none,
  2, 219, :_reduce_none,
  1, 221, :_reduce_none,
  1, 221, :_reduce_none,
  1, 221, :_reduce_none,
  2, 218, :_reduce_343,
  3, 244, :_reduce_344,
  2, 244, :_reduce_345,
  1, 244, :_reduce_none,
  1, 244, :_reduce_none,
  3, 245, :_reduce_348,
  3, 245, :_reduce_349,
  1, 220, :_reduce_350,
  5, 220, :_reduce_351,
  1, 151, :_reduce_none,
  2, 151, :_reduce_353,
  1, 247, :_reduce_354,
  3, 247, :_reduce_355,
  3, 248, :_reduce_356,
  1, 176, :_reduce_none,
  2, 176, :_reduce_358,
  1, 176, :_reduce_359,
  3, 176, :_reduce_360,
  1, 249, :_reduce_361,
  2, 251, :_reduce_362,
  1, 251, :_reduce_363,
  6, 246, :_reduce_364,
  4, 246, :_reduce_365,
  4, 246, :_reduce_366,
  2, 246, :_reduce_367,
  2, 246, :_reduce_368,
  4, 246, :_reduce_369,
  2, 246, :_reduce_370,
  2, 246, :_reduce_371,
  1, 246, :_reduce_372,
  0, 255, :_reduce_373,
  5, 254, :_reduce_374,
  2, 172, :_reduce_375,
  4, 172, :_reduce_none,
  4, 172, :_reduce_none,
  4, 172, :_reduce_none,
  2, 217, :_reduce_379,
  4, 217, :_reduce_380,
  4, 217, :_reduce_381,
  3, 217, :_reduce_382,
  4, 217, :_reduce_383,
  3, 217, :_reduce_384,
  2, 217, :_reduce_385,
  1, 217, :_reduce_386,
  0, 257, :_reduce_387,
  5, 216, :_reduce_388,
  0, 258, :_reduce_389,
  5, 216, :_reduce_390,
  0, 260, :_reduce_391,
  6, 222, :_reduce_392,
  1, 259, :_reduce_393,
  1, 259, :_reduce_none,
  6, 150, :_reduce_395,
  0, 150, :_reduce_396,
  1, 261, :_reduce_397,
  1, 261, :_reduce_none,
  1, 261, :_reduce_none,
  2, 262, :_reduce_400,
  1, 262, :_reduce_401,
  2, 152, :_reduce_402,
  1, 152, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 209, :_reduce_407,
  1, 265, :_reduce_none,
  2, 265, :_reduce_409,
  3, 266, :_reduce_410,
  1, 266, :_reduce_411,
  3, 210, :_reduce_412,
  3, 211, :_reduce_413,
  3, 212, :_reduce_414,
  3, 212, :_reduce_415,
  1, 269, :_reduce_416,
  3, 269, :_reduce_417,
  1, 270, :_reduce_418,
  2, 270, :_reduce_419,
  3, 213, :_reduce_420,
  3, 213, :_reduce_421,
  1, 272, :_reduce_422,
  3, 272, :_reduce_423,
  1, 267, :_reduce_424,
  2, 267, :_reduce_425,
  1, 268, :_reduce_426,
  2, 268, :_reduce_427,
  1, 271, :_reduce_428,
  0, 274, :_reduce_429,
  3, 271, :_reduce_430,
  0, 275, :_reduce_431,
  4, 271, :_reduce_432,
  1, 273, :_reduce_433,
  1, 273, :_reduce_434,
  1, 273, :_reduce_435,
  1, 273, :_reduce_none,
  2, 190, :_reduce_437,
  1, 190, :_reduce_438,
  1, 276, :_reduce_none,
  1, 276, :_reduce_none,
  1, 276, :_reduce_none,
  1, 276, :_reduce_none,
  3, 264, :_reduce_443,
  1, 263, :_reduce_444,
  1, 263, :_reduce_445,
  2, 263, :_reduce_446,
  2, 263, :_reduce_447,
  2, 263, :_reduce_448,
  2, 263, :_reduce_449,
  1, 184, :_reduce_450,
  1, 184, :_reduce_451,
  1, 184, :_reduce_452,
  1, 184, :_reduce_453,
  1, 184, :_reduce_454,
  1, 184, :_reduce_455,
  1, 184, :_reduce_456,
  1, 184, :_reduce_457,
  1, 184, :_reduce_458,
  1, 184, :_reduce_459,
  1, 184, :_reduce_460,
  1, 214, :_reduce_461,
  1, 160, :_reduce_462,
  1, 163, :_reduce_463,
  1, 163, :_reduce_none,
  1, 224, :_reduce_465,
  3, 224, :_reduce_466,
  2, 224, :_reduce_467,
  4, 226, :_reduce_468,
  2, 226, :_reduce_469,
  1, 278, :_reduce_none,
  1, 278, :_reduce_none,
  2, 279, :_reduce_472,
  1, 279, :_reduce_473,
  1, 280, :_reduce_474,
  2, 281, :_reduce_475,
  1, 281, :_reduce_476,
  1, 282, :_reduce_477,
  3, 282, :_reduce_478,
  4, 283, :_reduce_479,
  2, 283, :_reduce_480,
  2, 283, :_reduce_481,
  1, 283, :_reduce_482,
  2, 285, :_reduce_483,
  0, 285, :_reduce_484,
  6, 277, :_reduce_485,
  4, 277, :_reduce_486,
  4, 277, :_reduce_487,
  2, 277, :_reduce_488,
  4, 277, :_reduce_489,
  2, 277, :_reduce_490,
  2, 277, :_reduce_491,
  1, 277, :_reduce_492,
  0, 277, :_reduce_493,
  1, 287, :_reduce_none,
  1, 287, :_reduce_495,
  1, 288, :_reduce_496,
  1, 288, :_reduce_497,
  1, 288, :_reduce_498,
  1, 288, :_reduce_499,
  1, 289, :_reduce_500,
  3, 289, :_reduce_501,
  1, 223, :_reduce_none,
  1, 223, :_reduce_none,
  1, 291, :_reduce_504,
  3, 291, :_reduce_none,
  1, 292, :_reduce_506,
  3, 292, :_reduce_507,
  1, 290, :_reduce_none,
  4, 290, :_reduce_none,
  3, 290, :_reduce_none,
  2, 290, :_reduce_none,
  1, 290, :_reduce_none,
  1, 252, :_reduce_513,
  3, 252, :_reduce_514,
  3, 293, :_reduce_515,
  1, 286, :_reduce_516,
  3, 286, :_reduce_517,
  1, 294, :_reduce_none,
  1, 294, :_reduce_none,
  2, 253, :_reduce_520,
  1, 253, :_reduce_521,
  1, 295, :_reduce_none,
  1, 295, :_reduce_none,
  2, 250, :_reduce_524,
  2, 284, :_reduce_525,
  0, 284, :_reduce_526,
  1, 227, :_reduce_527,
  4, 227, :_reduce_528,
  0, 215, :_reduce_529,
  2, 215, :_reduce_530,
  1, 198, :_reduce_531,
  3, 198, :_reduce_532,
  3, 296, :_reduce_533,
  2, 296, :_reduce_534,
  4, 296, :_reduce_535,
  1, 177, :_reduce_none,
  1, 177, :_reduce_none,
  1, 177, :_reduce_none,
  1, 173, :_reduce_none,
  1, 173, :_reduce_none,
  1, 173, :_reduce_none,
  1, 173, :_reduce_none,
  1, 256, :_reduce_none,
  1, 256, :_reduce_none,
  1, 256, :_reduce_none,
  1, 228, :_reduce_none,
  1, 228, :_reduce_none,
  0, 144, :_reduce_none,
  1, 144, :_reduce_none,
  0, 191, :_reduce_none,
  1, 191, :_reduce_none,
  0, 197, :_reduce_none,
  1, 197, :_reduce_none,
  1, 197, :_reduce_none,
  1, 225, :_reduce_none,
  1, 225, :_reduce_none,
  1, 146, :_reduce_none,
  2, 146, :_reduce_none,
  0, 195, :_reduce_559 ]

racc_reduce_n = 560

racc_shift_n = 977

racc_token_table = {
  false => 0,
  :error => 1,
  :kCLASS => 2,
  :kMODULE => 3,
  :kDEF => 4,
  :kUNDEF => 5,
  :kBEGIN => 6,
  :kRESCUE => 7,
  :kENSURE => 8,
  :kEND => 9,
  :kIF => 10,
  :kUNLESS => 11,
  :kTHEN => 12,
  :kELSIF => 13,
  :kELSE => 14,
  :kCASE => 15,
  :kWHEN => 16,
  :kWHILE => 17,
  :kUNTIL => 18,
  :kFOR => 19,
  :kBREAK => 20,
  :kNEXT => 21,
  :kREDO => 22,
  :kRETRY => 23,
  :kIN => 24,
  :kDO => 25,
  :kDO_COND => 26,
  :kDO_BLOCK => 27,
  :kDO_LAMBDA => 28,
  :kRETURN => 29,
  :kYIELD => 30,
  :kSUPER => 31,
  :kSELF => 32,
  :kNIL => 33,
  :kTRUE => 34,
  :kFALSE => 35,
  :kAND => 36,
  :kOR => 37,
  :kNOT => 38,
  :kIF_MOD => 39,
  :kUNLESS_MOD => 40,
  :kWHILE_MOD => 41,
  :kUNTIL_MOD => 42,
  :kRESCUE_MOD => 43,
  :kALIAS => 44,
  :kDEFINED => 45,
  :klBEGIN => 46,
  :klEND => 47,
  :k__LINE__ => 48,
  :k__FILE__ => 49,
  :tIDENTIFIER => 50,
  :tFID => 51,
  :tGVAR => 52,
  :tIVAR => 53,
  :tCONSTANT => 54,
  :tLABEL => 55,
  :tCVAR => 56,
  :tNTH_REF => 57,
  :tBACK_REF => 58,
  :tSTRING_CONTENT => 59,
  :tINTEGER => 60,
  :tFLOAT => 61,
  :tREGEXP_END => 62,
  :tUPLUS => 63,
  :tUMINUS => 64,
  :tPOW => 65,
  :tCMP => 66,
  :tEQ => 67,
  :tEQQ => 68,
  :tNEQ => 69,
  :tGEQ => 70,
  :tLEQ => 71,
  :tANDOP => 72,
  :tOROP => 73,
  :tMATCH => 74,
  :tNMATCH => 75,
  :tJSDOT => 76,
  :tDOT => 77,
  :tDOT2 => 78,
  :tDOT3 => 79,
  :tAREF => 80,
  :tASET => 81,
  :tLSHFT => 82,
  :tRSHFT => 83,
  :tCOLON2 => 84,
  :tCOLON3 => 85,
  :tOP_ASGN => 86,
  :tASSOC => 87,
  :tLPAREN => 88,
  :tLPAREN2 => 89,
  :tRPAREN => 90,
  :tLPAREN_ARG => 91,
  :tRBRACK => 92,
  :tLBRACE => 93,
  :tLBRACE_ARG => 94,
  :tSTAR => 95,
  :tSTAR2 => 96,
  :tAMPER => 97,
  :tAMPER2 => 98,
  :tTILDE => 99,
  :tPERCENT => 100,
  :tDIVIDE => 101,
  :tPLUS => 102,
  :tMINUS => 103,
  :tLT => 104,
  :tGT => 105,
  :tPIPE => 106,
  :tBANG => 107,
  :tCARET => 108,
  :tLCURLY => 109,
  :tRCURLY => 110,
  :tBACK_REF2 => 111,
  :tSYMBEG => 112,
  :tSTRING_BEG => 113,
  :tXSTRING_BEG => 114,
  :tREGEXP_BEG => 115,
  :tWORDS_BEG => 116,
  :tAWORDS_BEG => 117,
  :tSTRING_DBEG => 118,
  :tSTRING_DVAR => 119,
  :tSTRING_END => 120,
  :tSTRING => 121,
  :tSYMBOL => 122,
  :tNL => 123,
  :tEH => 124,
  :tCOLON => 125,
  :tCOMMA => 126,
  :tSPACE => 127,
  :tSEMI => 128,
  :tLAMBDA => 129,
  :tLAMBEG => 130,
  :tLBRACK2 => 131,
  :tLBRACK => 132,
  :tJSLBRACK => 133,
  :tDSTAR => 134,
  :tLABEL_END => 135,
  :tEQL => 136,
  :tLOWEST => 137,
  "-@NUM" => 138,
  "+@NUM" => 139 }

racc_nt_base = 140

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "kCLASS",
  "kMODULE",
  "kDEF",
  "kUNDEF",
  "kBEGIN",
  "kRESCUE",
  "kENSURE",
  "kEND",
  "kIF",
  "kUNLESS",
  "kTHEN",
  "kELSIF",
  "kELSE",
  "kCASE",
  "kWHEN",
  "kWHILE",
  "kUNTIL",
  "kFOR",
  "kBREAK",
  "kNEXT",
  "kREDO",
  "kRETRY",
  "kIN",
  "kDO",
  "kDO_COND",
  "kDO_BLOCK",
  "kDO_LAMBDA",
  "kRETURN",
  "kYIELD",
  "kSUPER",
  "kSELF",
  "kNIL",
  "kTRUE",
  "kFALSE",
  "kAND",
  "kOR",
  "kNOT",
  "kIF_MOD",
  "kUNLESS_MOD",
  "kWHILE_MOD",
  "kUNTIL_MOD",
  "kRESCUE_MOD",
  "kALIAS",
  "kDEFINED",
  "klBEGIN",
  "klEND",
  "k__LINE__",
  "k__FILE__",
  "tIDENTIFIER",
  "tFID",
  "tGVAR",
  "tIVAR",
  "tCONSTANT",
  "tLABEL",
  "tCVAR",
  "tNTH_REF",
  "tBACK_REF",
  "tSTRING_CONTENT",
  "tINTEGER",
  "tFLOAT",
  "tREGEXP_END",
  "tUPLUS",
  "tUMINUS",
  "tPOW",
  "tCMP",
  "tEQ",
  "tEQQ",
  "tNEQ",
  "tGEQ",
  "tLEQ",
  "tANDOP",
  "tOROP",
  "tMATCH",
  "tNMATCH",
  "tJSDOT",
  "tDOT",
  "tDOT2",
  "tDOT3",
  "tAREF",
  "tASET",
  "tLSHFT",
  "tRSHFT",
  "tCOLON2",
  "tCOLON3",
  "tOP_ASGN",
  "tASSOC",
  "tLPAREN",
  "tLPAREN2",
  "tRPAREN",
  "tLPAREN_ARG",
  "tRBRACK",
  "tLBRACE",
  "tLBRACE_ARG",
  "tSTAR",
  "tSTAR2",
  "tAMPER",
  "tAMPER2",
  "tTILDE",
  "tPERCENT",
  "tDIVIDE",
  "tPLUS",
  "tMINUS",
  "tLT",
  "tGT",
  "tPIPE",
  "tBANG",
  "tCARET",
  "tLCURLY",
  "tRCURLY",
  "tBACK_REF2",
  "tSYMBEG",
  "tSTRING_BEG",
  "tXSTRING_BEG",
  "tREGEXP_BEG",
  "tWORDS_BEG",
  "tAWORDS_BEG",
  "tSTRING_DBEG",
  "tSTRING_DVAR",
  "tSTRING_END",
  "tSTRING",
  "tSYMBOL",
  "tNL",
  "tEH",
  "tCOLON",
  "tCOMMA",
  "tSPACE",
  "tSEMI",
  "tLAMBDA",
  "tLAMBEG",
  "tLBRACK2",
  "tLBRACK",
  "tJSLBRACK",
  "tDSTAR",
  "tLABEL_END",
  "tEQL",
  "tLOWEST",
  "\"-@NUM\"",
  "\"+@NUM\"",
  "$start",
  "program",
  "top_compstmt",
  "top_stmts",
  "opt_terms",
  "top_stmt",
  "terms",
  "stmt",
  "bodystmt",
  "compstmt",
  "opt_rescue",
  "opt_else",
  "opt_ensure",
  "stmts",
  "fitem",
  "undef_list",
  "expr_value",
  "lhs",
  "command_call",
  "mlhs",
  "var_lhs",
  "primary_value",
  "aref_args",
  "backref",
  "mrhs",
  "arg_value",
  "expr",
  "@1",
  "arg",
  "command",
  "block_command",
  "call_args",
  "block_call",
  "operation2",
  "command_args",
  "cmd_brace_block",
  "opt_block_var",
  "operation",
  "mlhs_basic",
  "mlhs_entry",
  "mlhs_head",
  "mlhs_item",
  "mlhs_node",
  "mlhs_post",
  "variable",
  "cname",
  "cpath",
  "fname",
  "op",
  "reswords",
  "symbol",
  "opt_nl",
  "primary",
  "@2",
  "@3",
  "none",
  "args",
  "trailer",
  "assocs",
  "block_arg",
  "paren_args",
  "opt_call_args",
  "rparen",
  "opt_paren_args",
  "opt_block_arg",
  "call_args2",
  "open_args",
  "@4",
  "literal",
  "strings",
  "xstring",
  "regexp",
  "words",
  "awords",
  "var_ref",
  "assoc_list",
  "brace_block",
  "method_call",
  "lambda",
  "then",
  "if_tail",
  "do",
  "case_body",
  "for_var",
  "superclass",
  "term",
  "f_arglist",
  "singleton",
  "dot_or_colon",
  "@5",
  "@6",
  "@7",
  "@8",
  "@9",
  "@10",
  "@11",
  "@12",
  "@13",
  "@14",
  "@15",
  "@16",
  "@17",
  "@18",
  "@19",
  "f_larglist",
  "lambda_body",
  "block_param",
  "f_block_optarg",
  "f_block_opt",
  "block_args_tail",
  "f_block_arg",
  "opt_block_args_tail",
  "f_arg",
  "f_rest_arg",
  "do_block",
  "@20",
  "operation3",
  "@21",
  "@22",
  "cases",
  "@23",
  "exc_list",
  "exc_var",
  "numeric",
  "dsym",
  "string",
  "string1",
  "string_contents",
  "xstring_contents",
  "word_list",
  "word",
  "string_content",
  "qword_list",
  "string_dvar",
  "@24",
  "@25",
  "sym",
  "f_args",
  "kwrest_mark",
  "f_kwrest",
  "f_label",
  "f_kw",
  "f_kwarg",
  "args_tail",
  "opt_f_block_arg",
  "opt_args_tail",
  "f_optarg",
  "f_norm_arg",
  "f_bad_arg",
  "f_arg_item",
  "f_margs",
  "f_marg",
  "f_marg_list",
  "f_opt",
  "restarg_mark",
  "blkarg_mark",
  "assoc" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

def _reduce_2(val, _values, result)
                      result = new_compstmt val[0]
                    
    result
end

def _reduce_3(val, _values, result)
                      result = new_block
                    
    result
end

def _reduce_4(val, _values, result)
                      result = new_block val[0]
                    
    result
end

def _reduce_5(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

# reduce 6 omitted

def _reduce_7(val, _values, result)
                      result = val[2]
                    
    result
end

def _reduce_8(val, _values, result)
                      result = new_body(val[0], val[1], val[2], val[3])
                    
    result
end

def _reduce_9(val, _values, result)
                      result = new_compstmt val[0]
                    
    result
end

def _reduce_10(val, _values, result)
                      result = new_block
                    
    result
end

def _reduce_11(val, _values, result)
                      result = new_block val[0]
                    
    result
end

def _reduce_12(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_13(val, _values, result)
                      lexer.lex_state = :expr_fname
                    
    result
end

def _reduce_14(val, _values, result)
                      result = new_alias(val[0], val[1], val[3])
                    
    result
end

def _reduce_15(val, _values, result)
                      result = s(:valias, value(val[1]).to_sym, value(val[2]).to_sym)
                    
    result
end

# reduce 16 omitted

def _reduce_17(val, _values, result)
                      result = s(:valias, value(val[1]).to_sym, value(val[2]).to_sym)
                    
    result
end

def _reduce_18(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_19(val, _values, result)
                      result = new_if(val[1], val[2], val[0], nil)
                    
    result
end

def _reduce_20(val, _values, result)
                      result = new_if(val[1], val[2], nil, val[0])
                    
    result
end

def _reduce_21(val, _values, result)
                      result = new_while(val[1], val[2], val[0])
                    
    result
end

def _reduce_22(val, _values, result)
                      result = new_until(val[1], val[2], val[0])
                    
    result
end

def _reduce_23(val, _values, result)
                      result = new_rescue_mod(val[1], val[0], val[2])
                    
    result
end

# reduce 24 omitted

def _reduce_25(val, _values, result)
                      result = new_assign(val[0], val[1], val[2])
                    
    result
end

def _reduce_26(val, _values, result)
                      result = s(:masgn, val[0], s(:to_ary, val[2]))
                    
    result
end

def _reduce_27(val, _values, result)
                      result = new_op_asgn val[1], val[0], val[2]
                    
    result
end

# reduce 28 omitted

# reduce 29 omitted

def _reduce_30(val, _values, result)
                      result = s(:op_asgn2, val[0], op_to_setter(val[2]), value(val[3]).to_sym, val[4])
                    
    result
end

# reduce 31 omitted

# reduce 32 omitted

# reduce 33 omitted

def _reduce_34(val, _values, result)
                      result = new_assign val[0], val[1], s(:svalue, val[2])
                    
    result
end

def _reduce_35(val, _values, result)
                      result = s(:masgn, val[0], s(:to_ary, val[2]))
                    
    result
end

def _reduce_36(val, _values, result)
                      result = s(:masgn, val[0], val[2])
                    
    result
end

# reduce 37 omitted

# reduce 38 omitted

def _reduce_39(val, _values, result)
                      result = s(:and, val[0], val[2])
                    
    result
end

def _reduce_40(val, _values, result)
                      result = s(:or, val[0], val[2])
                    
    result
end

def _reduce_41(val, _values, result)
                      result = new_unary_call(['!', []], val[1])
                    
    result
end

def _reduce_42(val, _values, result)
                      result = new_unary_call(val[0], val[1])
                    
    result
end

# reduce 43 omitted

# reduce 44 omitted

# reduce 45 omitted

# reduce 46 omitted

def _reduce_47(val, _values, result)
                      result = new_return(val[0], val[1])
                    
    result
end

def _reduce_48(val, _values, result)
                      result = new_break(val[0], val[1])
                    
    result
end

def _reduce_49(val, _values, result)
                      result = new_next(val[0], val[1])
                    
    result
end

# reduce 50 omitted

# reduce 51 omitted

# reduce 52 omitted

# reduce 53 omitted

# reduce 54 omitted

def _reduce_55(val, _values, result)
                      result = new_call(nil, val[0], val[1])
                    
    result
end

# reduce 56 omitted

def _reduce_57(val, _values, result)
                      result = new_js_call(val[0], val[2], val[3])
                    
    result
end

# reduce 58 omitted

def _reduce_59(val, _values, result)
                      result = new_call(val[0], val[2], val[3])
                    
    result
end

# reduce 60 omitted

def _reduce_61(val, _values, result)
                    result = new_call(val[0], val[2], val[3])
                  
    result
end

# reduce 62 omitted

def _reduce_63(val, _values, result)
                      result = new_super(val[0], val[1])
                    
    result
end

def _reduce_64(val, _values, result)
                      result = new_yield val[1]
                    
    result
end

def _reduce_65(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_66(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_67(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_68(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_69(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_70(val, _values, result)
                      result = val[0] << val[1]
                    
    result
end

def _reduce_71(val, _values, result)
                      result = val[0] << s(:splat, val[2])
                    
    result
end

def _reduce_72(val, _values, result)
                     result = (val[0] << s(:splat, val[2])).concat(val[4].children)

    result
end

def _reduce_73(val, _values, result)
                      result = val[0] << s(:splat)
                    
    result
end

def _reduce_74(val, _values, result)
                      result = (val[0] << s(:splat)).concat(val[3].children)

    result
end

def _reduce_75(val, _values, result)
                      result = s(:array, s(:splat, val[1]))
                    
    result
end

def _reduce_76(val, _values, result)
                      result = s(:array, s(:splat, val[1])).concat(val[3].children)
                    
    result
end

def _reduce_77(val, _values, result)
                      result = s(:array, s(:splat))

    result
end

def _reduce_78(val, _values, result)
                      result = s(:array, s(:splat)).concat(val[2].children)
                    
    result
end

def _reduce_79(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_80(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_81(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

def _reduce_82(val, _values, result)
                      result = val[0] << val[1]

    result
end

def _reduce_83(val, _values, result)
                      result = s(:array, val[0])

    result
end

def _reduce_84(val, _values, result)
                      result = val[0] << val[2]
                    
    result
end

def _reduce_85(val, _values, result)
                      result = new_assignable val[0]

    result
end

def _reduce_86(val, _values, result)
                      args = val[2] ? val[2] : []
                      result = s(:attrasgn, val[0], :[]=, s(:arglist, *args))
                    
    result
end

def _reduce_87(val, _values, result)
                      result = new_call val[0], val[2], []
                    
    result
end

# reduce 88 omitted

# reduce 89 omitted

# reduce 90 omitted

# reduce 91 omitted

# reduce 92 omitted

def _reduce_93(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_94(val, _values, result)
                      result = new_js_attrasgn(val[0], val[2])
                    
    result
end

def _reduce_95(val, _values, result)
                      result = new_attrasgn(val[0], :[]=, val[2])
                    
    result
end

def _reduce_96(val, _values, result)
                      result = new_attrasgn(val[0], op_to_setter(val[2]))
                    
    result
end

def _reduce_97(val, _values, result)
                      result = new_attrasgn(val[0], op_to_setter(val[2]))
                    
    result
end

def _reduce_98(val, _values, result)
                      result = new_attrasgn(val[0], op_to_setter(val[2]))
                    
    result
end

def _reduce_99(val, _values, result)
                      result = new_colon2(val[0], val[1], val[2])
                    
    result
end

def _reduce_100(val, _values, result)
                      result = new_colon3(val[0], val[1])

    result
end

# reduce 101 omitted

# reduce 102 omitted

def _reduce_103(val, _values, result)
                      result = new_colon3(val[0], val[1])
                    
    result
end

def _reduce_104(val, _values, result)
                      result = new_const(val[0])
                    
    result
end

def _reduce_105(val, _values, result)
                      result = new_colon2(val[0], val[1], val[2])

    result
end

# reduce 106 omitted

# reduce 107 omitted

# reduce 108 omitted

def _reduce_109(val, _values, result)
                      lexer.lex_state = :expr_end
                      result = val[0]
                    
    result
end

def _reduce_110(val, _values, result)
                      lexer.lex_state = :expr_end
                      result = val[0]

    result
end

def _reduce_111(val, _values, result)
                      result = new_sym(val[0])
                    
    result
end

# reduce 112 omitted

def _reduce_113(val, _values, result)
                      result = s(:undef, val[0])
                    
    result
end

def _reduce_114(val, _values, result)
                      result = val[0] << val[2]

    result
end

# reduce 115 omitted

# reduce 116 omitted

# reduce 117 omitted

# reduce 118 omitted

# reduce 119 omitted

# reduce 120 omitted

# reduce 121 omitted

# reduce 122 omitted

# reduce 123 omitted

# reduce 124 omitted

# reduce 125 omitted

# reduce 126 omitted

# reduce 127 omitted

# reduce 128 omitted

# reduce 129 omitted

# reduce 130 omitted

# reduce 131 omitted

# reduce 132 omitted

# reduce 133 omitted

# reduce 134 omitted

# reduce 135 omitted

# reduce 136 omitted

# reduce 137 omitted

# reduce 138 omitted

# reduce 139 omitted

# reduce 140 omitted

# reduce 141 omitted

# reduce 142 omitted

# reduce 143 omitted

# reduce 144 omitted

# reduce 145 omitted

# reduce 146 omitted

# reduce 147 omitted

# reduce 148 omitted

# reduce 149 omitted

# reduce 150 omitted

# reduce 151 omitted

# reduce 152 omitted

# reduce 153 omitted

# reduce 154 omitted

# reduce 155 omitted

# reduce 156 omitted

# reduce 157 omitted

# reduce 158 omitted

# reduce 159 omitted

# reduce 160 omitted

# reduce 161 omitted

# reduce 162 omitted

# reduce 163 omitted

# reduce 164 omitted

# reduce 165 omitted

# reduce 166 omitted

# reduce 167 omitted

# reduce 168 omitted

# reduce 169 omitted

# reduce 170 omitted

# reduce 171 omitted

# reduce 172 omitted

# reduce 173 omitted

# reduce 174 omitted

# reduce 175 omitted

# reduce 176 omitted

# reduce 177 omitted

# reduce 178 omitted

# reduce 179 omitted

# reduce 180 omitted

# reduce 181 omitted

# reduce 182 omitted

# reduce 183 omitted

# reduce 184 omitted

# reduce 185 omitted

# reduce 186 omitted

# reduce 187 omitted

# reduce 188 omitted

def _reduce_189(val, _values, result)
                      result = new_assign(val[0], val[1], val[2])
                    
    result
end

def _reduce_190(val, _values, result)
                      result = new_assign val[0], val[1], s(:rescue_mod, val[2], val[4])
                    
    result
end

def _reduce_191(val, _values, result)
                      result = new_op_asgn val[1], val[0], val[2]
                    
    result
end

def _reduce_192(val, _values, result)
                      result = new_op_asgn1(val[0], val[2], val[4], val[5])
                    
    result
end

def _reduce_193(val, _values, result)
                      raise ".JS[...] #{val[4]} is not supported"
                    
    result
end

def _reduce_194(val, _values, result)
                      result = s(:op_asgn2, val[0], op_to_setter(val[2]), value(val[3]).to_sym, val[4])

    result
end

# reduce 195 omitted

# reduce 196 omitted

# reduce 197 omitted

# reduce 198 omitted

# reduce 199 omitted

def _reduce_200(val, _values, result)
                      result = new_irange(val[0], val[1], val[2])
                    
    result
end

def _reduce_201(val, _values, result)
                      result = new_erange(val[0], val[1], val[2])
                    
    result
end

def _reduce_202(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_203(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_204(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_205(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_206(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_207(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_208(val, _values, result)
                      result = new_call new_binary_call(new_int(val[1]), val[2], val[3]), [:"-@", []], []
                    
    result
end

def _reduce_209(val, _values, result)
                      result = new_call new_binary_call(new_float(val[1]), val[2], val[3]), [:"-@", []], []

    result
end

def _reduce_210(val, _values, result)
                      result = new_call val[1], [:"+@", []], []
                      if [:int, :float].include? val[1].type
                        result = val[1]
                      end
                    
    result
end

def _reduce_211(val, _values, result)
                      result = new_call val[1], [:"-@", []], []
                      if val[1].type == :int
                        val[1][1] = -val[1][1]
                        result = val[1]
                      elsif val[1].type == :float
                        val[1][1] = -val[1][1].to_f
                        result = val[1]
                      end
                    
    result
end

def _reduce_212(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_213(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_214(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_215(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_216(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_217(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_218(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_219(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_220(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_221(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_222(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_223(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_224(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_225(val, _values, result)
                      result = new_unary_call(val[0], val[1])
                    
    result
end

def _reduce_226(val, _values, result)
                      result = new_unary_call(val[0], val[1])
                    
    result
end

def _reduce_227(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_228(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_229(val, _values, result)
                      result = new_and(val[0], val[1], val[2])
                    
    result
end

def _reduce_230(val, _values, result)
                      result = new_or(val[0], val[1], val[2])
                    
    result
end

def _reduce_231(val, _values, result)
                      result = s(:defined, val[2])

    result
end

def _reduce_232(val, _values, result)
 lexer.cond_push 1
    result
end

def _reduce_233(val, _values, result)
 lexer.cond_pop
    result
end

def _reduce_234(val, _values, result)
                      result = new_if(val[1], val[0], val[3], val[6])
                    
    result
end

# reduce 235 omitted

# reduce 236 omitted

def _reduce_237(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_238(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_239(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_240(val, _values, result)
                      val[0] << s(:hash, *val[2])
                      result = val[0]
                    
    result
end

def _reduce_241(val, _values, result)
                      result = [s(:hash, *val[0])]
                    
    result
end

def _reduce_242(val, _values, result)
                      result = val[0] << val[2]

    result
end

def _reduce_243(val, _values, result)
                      result = val[1]
                    
    result
end

# reduce 244 omitted

def _reduce_245(val, _values, result)
                      result = []
                    
    result
end

# reduce 246 omitted

def _reduce_247(val, _values, result)
                      result = []
                    
    result
end

# reduce 248 omitted

def _reduce_249(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_250(val, _values, result)
                      result = val[0]
                      result << new_hash(nil, val[2], nil)
                    
    result
end

def _reduce_251(val, _values, result)
                      result = [new_hash(nil, val[0], nil)]
                    
    result
end

def _reduce_252(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_253(val, _values, result)
                      result = val[0]
                      add_block_pass val[0], val[1]
                    
    result
end

def _reduce_254(val, _values, result)
                      result = [new_hash(nil, val[0], nil)]
                      add_block_pass result, val[1]
                    
    result
end

def _reduce_255(val, _values, result)
                      result = val[0]
                      result << new_hash(nil, val[2], nil)
                      result << val[3] if val[3]

    result
end

def _reduce_256(val, _values, result)
                      result = []
                      add_block_pass result, val[0]
                    
    result
end

# reduce 257 omitted

# reduce 258 omitted

def _reduce_259(val, _values, result)
                      lexer.cmdarg_push 1

    result
end

def _reduce_260(val, _values, result)
                      lexer.cmdarg_pop
                      result = val[1]
                    
    result
end

# reduce 261 omitted

def _reduce_262(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_263(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_264(val, _values, result)
                      result = new_block_pass(val[0], val[1])
                    
    result
end

def _reduce_265(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_266(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_267(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_268(val, _values, result)
                      result = [new_splat(val[0], val[1])]
                    
    result
end

def _reduce_269(val, _values, result)
                      result = val[0] << val[2]
                    
    result
end

def _reduce_270(val, _values, result)
                      result  = val[0] << new_splat(val[2], val[3])
                    
    result
end

def _reduce_271(val, _values, result)
                      val[0] << val[2]
                      result = s(:array, *val[0])
                    
    result
end

def _reduce_272(val, _values, result)
                      val[0] << s(:splat, val[3])
                      result = s(:array, *val[0])

    result
end

def _reduce_273(val, _values, result)
                      result = s(:splat, val[1])
                    
    result
end

# reduce 274 omitted

# reduce 275 omitted

# reduce 276 omitted

# reduce 277 omitted

# reduce 278 omitted

# reduce 279 omitted

# reduce 280 omitted

# reduce 281 omitted

# reduce 282 omitted

def _reduce_283(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_284(val, _values, result)
                      result = s(:begin, val[2])
                    
    result
end

def _reduce_285(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_286(val, _values, result)
                      result = new_paren(val[0], val[1], val[2])
                    
    result
end

def _reduce_287(val, _values, result)
                      result = new_colon2(val[0], val[1], val[2])
                    
    result
end

def _reduce_288(val, _values, result)
                      result = new_colon3(val[0], val[1])
                    
    result
end

def _reduce_289(val, _values, result)
                      result = new_call val[0], [:[], []], val[2]
                    
    result
end

def _reduce_290(val, _values, result)
                      result = new_js_call val[0], [:[], []], val[2]
                    
    result
end

def _reduce_291(val, _values, result)
                      result = new_array(val[0], val[1], val[2])
                    
    result
end

def _reduce_292(val, _values, result)
                      result = new_hash(val[0], val[1], val[2])
                    
    result
end

def _reduce_293(val, _values, result)
                      result = new_return(val[0])
                    
    result
end

def _reduce_294(val, _values, result)
                      result = new_yield val[2]
                    
    result
end

def _reduce_295(val, _values, result)
                      result = s(:yield)
                    
    result
end

def _reduce_296(val, _values, result)
                      result = s(:yield)
                    
    result
end

def _reduce_297(val, _values, result)
                      result = s(:defined, val[3])
                    
    result
end

def _reduce_298(val, _values, result)
                      result = new_unary_call(['!', []], val[2])
                    
    result
end

def _reduce_299(val, _values, result)
                      result = new_unary_call(['!', []], new_nil(val[0]))

    result
end

def _reduce_300(val, _values, result)
                      result = new_call(nil, val[0], [])
                      result << val[1]
                    
    result
end

# reduce 301 omitted

def _reduce_302(val, _values, result)
                      val[0] << val[1]
                      result = val[0]
                    
    result
end

def _reduce_303(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_304(val, _values, result)
                      result = new_if(val[0], val[1], val[3], val[4])
                    
    result
end

def _reduce_305(val, _values, result)
                      result = new_if(val[0], val[1], val[4], val[3])
                    
    result
end

def _reduce_306(val, _values, result)
                      lexer.cond_push 1
                      result = lexer.line
                    
    result
end

def _reduce_307(val, _values, result)
                      lexer.cond_pop
                    
    result
end

def _reduce_308(val, _values, result)
                      result = s(:while, val[2], val[5])
                    
    result
end

def _reduce_309(val, _values, result)
                      lexer.cond_push 1
                      result = lexer.line
                    
    result
end

def _reduce_310(val, _values, result)
                      lexer.cond_pop
                    
    result
end

def _reduce_311(val, _values, result)
                      result = s(:until, val[2], val[5])
                    
    result
end

def _reduce_312(val, _values, result)
                      result = s(:case, val[1], *val[3])
                    
    result
end

def _reduce_313(val, _values, result)
                      result = s(:case, nil, *val[2])
                    
    result
end

def _reduce_314(val, _values, result)
                      result = s(:case, nil, val[3])
                    
    result
end

def _reduce_315(val, _values, result)
                      lexer.cond_push 1
                      result = lexer.line
                    
    result
end

def _reduce_316(val, _values, result)
                      lexer.cond_pop
                    
    result
end

def _reduce_317(val, _values, result)
                      result = s(:for, val[4], val[1], val[7])
                    
    result
end

def _reduce_318(val, _values, result)
                      # ...
                    
    result
end

def _reduce_319(val, _values, result)
                      result = new_class val[0], val[1], val[2], val[4], val[5]
                    
    result
end

def _reduce_320(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_321(val, _values, result)
                      # ...
                    
    result
end

def _reduce_322(val, _values, result)
                      result = new_sclass(val[0], val[3], val[6], val[7])
                    
    result
end

def _reduce_323(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_324(val, _values, result)
                      # ...
                    
    result
end

def _reduce_325(val, _values, result)
                      result = new_module(val[0], val[2], val[4], val[5])
                    
    result
end

def _reduce_326(val, _values, result)
                      push_scope
                      lexer.lex_state = :expr_endfn
                    
    result
end

def _reduce_327(val, _values, result)
                      result = new_def(val[0], nil, val[1], val[3], val[4], val[5])
                      pop_scope
                    
    result
end

def _reduce_328(val, _values, result)
                       lexer.lex_state = :expr_fname
                    
    result
end

def _reduce_329(val, _values, result)
                      push_scope
                      lexer.lex_state = :expr_endfn
                    
    result
end

def _reduce_330(val, _values, result)
                      result = new_def(val[0], val[1], val[4], val[6], val[7], val[8])
                      pop_scope
                    
    result
end

def _reduce_331(val, _values, result)
                      result = new_break(val[0])
                    
    result
end

def _reduce_332(val, _values, result)
                      result = s(:next)

    result
end

def _reduce_333(val, _values, result)
                      result = s(:redo)
                    
    result
end

# reduce 334 omitted

# reduce 335 omitted

# reduce 336 omitted

# reduce 337 omitted

# reduce 338 omitted

# reduce 339 omitted

# reduce 340 omitted

# reduce 341 omitted

# reduce 342 omitted

def _reduce_343(val, _values, result)
                      result = new_call nil, [:lambda, []], []
                      result << new_iter(val[0], val[1])

    result
end

def _reduce_344(val, _values, result)
                      result = val[1]

    result
end

def _reduce_345(val, _values, result)
                      result = nil

    result
end

# reduce 346 omitted

# reduce 347 omitted

def _reduce_348(val, _values, result)
                      result = val[1]

    result
end

def _reduce_349(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_350(val, _values, result)
                      result = val[0]

    result
end

def _reduce_351(val, _values, result)
                      result = new_if(val[0], val[1], val[3], val[4])
                    
    result
end

# reduce 352 omitted

def _reduce_353(val, _values, result)
                      result = val[1]

    result
end

def _reduce_354(val, _values, result)
                      result = s(:block, val[0])

    result
end

def _reduce_355(val, _values, result)
                      val[0] << val[2]
                      result = val[0]

    result
end

def _reduce_356(val, _values, result)
                      result = new_assign(new_assignable(new_ident(
                                  val[0])), val[1], val[2])
                    
    result
end

# reduce 357 omitted

def _reduce_358(val, _values, result)
                      result = nil

    result
end

def _reduce_359(val, _values, result)
                      result = nil

    result
end

def _reduce_360(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_361(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_362(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_363(val, _values, result)
                      nil
                    
    result
end

def _reduce_364(val, _values, result)
                      result = new_block_args(val[0], val[2], val[4], val[5])
                    
    result
end

def _reduce_365(val, _values, result)
                      result = new_block_args(val[0], val[2], nil, val[3])
                    
    result
end

def _reduce_366(val, _values, result)
                      result = new_block_args(val[0], nil, val[2], val[3])
                    
    result
end

def _reduce_367(val, _values, result)
                      result = new_block_args(val[0], nil, nil, nil)
                    
    result
end

def _reduce_368(val, _values, result)
                      result = new_block_args(val[0], nil, nil, val[1])
                    
    result
end

def _reduce_369(val, _values, result)
                      result = new_block_args(nil, val[0], val[2], val[3])
                    
    result
end

def _reduce_370(val, _values, result)
                      result = new_block_args(nil, val[0], nil, val[1])
                    
    result
end

def _reduce_371(val, _values, result)
                      result = new_block_args(nil, nil, val[0], val[1])
                    
    result
end

def _reduce_372(val, _values, result)
                      result = new_block_args(nil, nil, nil, val[0])
                    
    result
end

def _reduce_373(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_374(val, _values, result)
                      result = new_iter val[2], val[3]
                      pop_scope

    result
end

def _reduce_375(val, _values, result)
                      val[0] << val[1]
                      result = val[0]
                    
    result
end

# reduce 376 omitted

# reduce 377 omitted

# reduce 378 omitted

def _reduce_379(val, _values, result)
                      result = new_call(nil, val[0], val[1])

    result
end

def _reduce_380(val, _values, result)
                      result = new_call(val[0], val[2], val[3])

    result
end

def _reduce_381(val, _values, result)
                      result = new_js_call(val[0], val[2], val[3])
                    
    result
end

def _reduce_382(val, _values, result)
                      result = new_call(val[0], [:call, []], val[2])
                    
    result
end

def _reduce_383(val, _values, result)
                      result = new_call(val[0], val[2], val[3])
                    
    result
end

def _reduce_384(val, _values, result)
                      result = new_call(val[0], val[2])
                    
    result
end

def _reduce_385(val, _values, result)
                      result = new_super(val[0], val[1])
                    
    result
end

def _reduce_386(val, _values, result)
                      result = new_super(val[0], nil)
                    
    result
end

def _reduce_387(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_388(val, _values, result)
                      result = new_iter val[2], val[3]
                      pop_scope
                    
    result
end

def _reduce_389(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_390(val, _values, result)
                      result = new_iter val[2], val[3]
                      pop_scope
                    
    result
end

def _reduce_391(val, _values, result)
                      result = lexer.line

    result
end

def _reduce_392(val, _values, result)
                      part = s(:when, s(:array, *val[2]), val[4])
                      result = [part]
                      result.push(*val[5]) if val[5]
                    
    result
end

def _reduce_393(val, _values, result)
                      result = [val[0]]

    result
end

# reduce 394 omitted

def _reduce_395(val, _values, result)
                      exc = val[1] || s(:array)
                      exc << new_assign(val[2], val[2], s(:gvar, '$!'.intern)) if val[2]
                      result = [s(:resbody, exc, val[4])]
                      result.push val[5].first if val[5]
                    
    result
end

def _reduce_396(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_397(val, _values, result)
                      result = s(:array, val[0])

    result
end

# reduce 398 omitted

# reduce 399 omitted

def _reduce_400(val, _values, result)
                      result = val[1]

    result
end

def _reduce_401(val, _values, result)
                      result = nil

    result
end

def _reduce_402(val, _values, result)
                      result = val[1].nil? ? s(:nil) : val[1]
                    
    result
end

# reduce 403 omitted

# reduce 404 omitted

# reduce 405 omitted

# reduce 406 omitted

def _reduce_407(val, _values, result)
                      result = new_str val[0]

    result
end

# reduce 408 omitted

def _reduce_409(val, _values, result)
                    result = str_append val[0], val[1]

    result
end

def _reduce_410(val, _values, result)
                      result = val[1]

    result
end

def _reduce_411(val, _values, result)
                      result = s(:str, value(val[0]))

    result
end

def _reduce_412(val, _values, result)
                      result = new_xstr(val[0], val[1], val[2])
                    
    result
end

def _reduce_413(val, _values, result)
                      result = new_regexp val[1], val[2]
                    
    result
end

def _reduce_414(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_415(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_416(val, _values, result)
                      result = s(:array)

    result
end

def _reduce_417(val, _values, result)
                      part = val[1]
                      part = s(:dstr, "", val[1]) if part.type == :evstr
                      result = val[0] << part
                    
    result
end

def _reduce_418(val, _values, result)
                      result = val[0]

    result
end

def _reduce_419(val, _values, result)
                      result = val[0].concat([val[1]])

    result
end

def _reduce_420(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_421(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_422(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_423(val, _values, result)
                      result = val[0] << s(:str, value(val[1]))
                    
    result
end

def _reduce_424(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_425(val, _values, result)
                      result = str_append val[0], val[1]
                    
    result
end

def _reduce_426(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_427(val, _values, result)
                      result = str_append val[0], val[1]
                    
    result
end

def _reduce_428(val, _values, result)
                      result = new_str_content(val[0])
                    
    result
end

def _reduce_429(val, _values, result)
                      result = lexer.strterm
                      lexer.strterm = nil
                    
    result
end

def _reduce_430(val, _values, result)
                      lexer.strterm = val[1]
                      result = new_evstr(val[2])

    result
end

def _reduce_431(val, _values, result)
                      lexer.cond_push 0
                      lexer.cmdarg_push 0
                      result = lexer.strterm
                      lexer.strterm = nil
                      lexer.lex_state = :expr_beg
                    
    result
end

def _reduce_432(val, _values, result)
                      lexer.strterm = val[1]
                      lexer.cond_lexpop
                      lexer.cmdarg_lexpop
                      result = new_evstr(val[2])
                    
    result
end

def _reduce_433(val, _values, result)
                      result = new_gvar(val[0])

    result
end

def _reduce_434(val, _values, result)
                      result = new_ivar(val[0])

    result
end

def _reduce_435(val, _values, result)
                      result = new_cvar(val[0])
                    
    result
end

# reduce 436 omitted

def _reduce_437(val, _values, result)
                      result = new_sym(val[1])
                      lexer.lex_state = :expr_end
                    
    result
end

def _reduce_438(val, _values, result)
                      result = new_sym(val[0])

    result
end

# reduce 439 omitted

# reduce 440 omitted

# reduce 441 omitted

# reduce 442 omitted

def _reduce_443(val, _values, result)
                      result = new_dsym val[1]
                    
    result
end

def _reduce_444(val, _values, result)
                      result = new_int(val[0])
                    
    result
end

def _reduce_445(val, _values, result)
                      result = new_float(val[0])

    result
end

def _reduce_446(val, _values, result)
                    result = negate_num(new_int(val[1]))
                  
    result
end

def _reduce_447(val, _values, result)
                    result = negate_num(new_float(val[1]))
                  
    result
end

def _reduce_448(val, _values, result)
                    result = new_int(val[1])
                  
    result
end

def _reduce_449(val, _values, result)
                    result = new_float(val[1])

    result
end

def _reduce_450(val, _values, result)
                      result = new_ident(val[0])

    result
end

def _reduce_451(val, _values, result)
                      result = new_ivar(val[0])

    result
end

def _reduce_452(val, _values, result)
                      result = new_gvar(val[0])
                    
    result
end

def _reduce_453(val, _values, result)
                      result = new_const(val[0])
                    
    result
end

def _reduce_454(val, _values, result)
                      result = new_cvar(val[0])
                    
    result
end

def _reduce_455(val, _values, result)
                      result = new_nil(val[0])
                    
    result
end

def _reduce_456(val, _values, result)
                      result = new_self(val[0])
                    
    result
end

def _reduce_457(val, _values, result)
                      result = new_true(val[0])
                    
    result
end

def _reduce_458(val, _values, result)
                      result = new_false(val[0])
                    
    result
end

def _reduce_459(val, _values, result)
                      result = new___FILE__(val[0])
                    
    result
end

def _reduce_460(val, _values, result)
                      result = new___LINE__(val[0])
                    
    result
end

def _reduce_461(val, _values, result)
                      result = new_var_ref(val[0])
                    
    result
end

def _reduce_462(val, _values, result)
                      result = new_assignable val[0]

    result
end

def _reduce_463(val, _values, result)
                      result = s(:nth_ref, value(val[0]))
                    
    result
end

# reduce 464 omitted

def _reduce_465(val, _values, result)
                      result = nil

    result
end

def _reduce_466(val, _values, result)
                      result = val[1]

    result
end

def _reduce_467(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_468(val, _values, result)
                      result = val[1]
                      lexer.lex_state = :expr_beg
                    
    result
end

def _reduce_469(val, _values, result)
                      result = val[0]
                      lexer.lex_state = :expr_beg

    result
end

# reduce 470 omitted

# reduce 471 omitted

def _reduce_472(val, _values, result)
                      result = new_kwrestarg(val[1])
                    
    result
end

def _reduce_473(val, _values, result)
                      result = new_kwrestarg()

    result
end

def _reduce_474(val, _values, result)
                      result = new_sym(val[0])

    result
end

def _reduce_475(val, _values, result)
                      result = new_kwoptarg(val[0], val[1])

    result
end

def _reduce_476(val, _values, result)
                      result = new_kwarg(val[0])
                    
    result
end

def _reduce_477(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_478(val, _values, result)
                      result = val[0]
                      result << val[2]
                    
    result
end

def _reduce_479(val, _values, result)
                      result = new_args_tail(val[0], val[2], val[3])
                    
    result
end

def _reduce_480(val, _values, result)
                      result = new_args_tail(val[0], nil, val[1])
                    
    result
end

def _reduce_481(val, _values, result)
                      result = new_args_tail(nil, val[0], val[1])
                    
    result
end

def _reduce_482(val, _values, result)
                      result = new_args_tail(nil, nil, val[0])
                    
    result
end

def _reduce_483(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_484(val, _values, result)
                      result = new_args_tail(nil, nil, nil)
                    
    result
end

def _reduce_485(val, _values, result)
                      result = new_args(val[0], val[2], val[4], val[5])
                    
    result
end

def _reduce_486(val, _values, result)
                      result = new_args(val[0], val[2], nil, val[3])
                    
    result
end

def _reduce_487(val, _values, result)
                      result = new_args(val[0], nil, val[2], val[3])
                    
    result
end

def _reduce_488(val, _values, result)
                      result = new_args(val[0], nil, nil, val[1])
                    
    result
end

def _reduce_489(val, _values, result)
                      result = new_args(nil, val[0], val[2], val[3])
                    
    result
end

def _reduce_490(val, _values, result)
                      result = new_args(nil, val[0], nil, val[1])
                    
    result
end

def _reduce_491(val, _values, result)
                      result = new_args(nil, nil, val[0], val[1])
                    
    result
end

def _reduce_492(val, _values, result)
                      result = new_args(nil, nil, nil, val[0])

    result
end

def _reduce_493(val, _values, result)
                      result = new_args(nil, nil, nil, nil)
                    
    result
end

# reduce 494 omitted

def _reduce_495(val, _values, result)
                      result = value(val[0]).to_sym
                      scope.add_local result
                    
    result
end

def _reduce_496(val, _values, result)
                      raise 'formal argument cannot be a constant'
                    
    result
end

def _reduce_497(val, _values, result)
                      raise 'formal argument cannot be an instance variable'
                    
    result
end

def _reduce_498(val, _values, result)
                      raise 'formal argument cannot be a class variable'
                    
    result
end

def _reduce_499(val, _values, result)
                      raise 'formal argument cannot be a global variable'
                    
    result
end

def _reduce_500(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_501(val, _values, result)
                      result = val[1]

    result
end

# reduce 502 omitted

# reduce 503 omitted

def _reduce_504(val, _values, result)
                      result = s(:lasgn, val[0])

    result
end

# reduce 505 omitted

def _reduce_506(val, _values, result)
                      result = s(:array, val[0])

    result
end

def _reduce_507(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

# reduce 508 omitted

# reduce 509 omitted

# reduce 510 omitted

# reduce 511 omitted

# reduce 512 omitted

def _reduce_513(val, _values, result)
                      result = [val[0]]

    result
end

def _reduce_514(val, _values, result)
                      val[0] << val[2]
                      result = val[0]

    result
end

def _reduce_515(val, _values, result)
                      result = new_assign(new_assignable(new_ident(val[0])), val[1], val[2])
                    
    result
end

def _reduce_516(val, _values, result)
                      result = s(:block, val[0])

    result
end

def _reduce_517(val, _values, result)
                      result = val[0]
                      val[0] << val[2]
                    
    result
end

# reduce 518 omitted

# reduce 519 omitted

def _reduce_520(val, _values, result)
                      result = "*#{value(val[1])}".to_sym

    result
end

def _reduce_521(val, _values, result)
                      result = :"*"
                    
    result
end

# reduce 522 omitted

# reduce 523 omitted

def _reduce_524(val, _values, result)
                      result = "&#{value(val[1])}".to_sym

    result
end

def _reduce_525(val, _values, result)
                      result = val[1]

    result
end

def _reduce_526(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_527(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_528(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_529(val, _values, result)
                      result = []
                    
    result
end

def _reduce_530(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_531(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_532(val, _values, result)
                      result = val[0].push(*val[2])
                    
    result
end

def _reduce_533(val, _values, result)
                      result = [val[0], val[2]]
                    
    result
end

def _reduce_534(val, _values, result)
                      result = [new_sym(val[0]), val[1]]

    result
end

def _reduce_535(val, _values, result)
                      result = [s(:sym, source(val[1]).to_sym), val[3]]
                    
    result
end

# reduce 536 omitted

# reduce 537 omitted

# reduce 538 omitted

# reduce 539 omitted

# reduce 540 omitted

# reduce 541 omitted

# reduce 542 omitted

# reduce 543 omitted

# reduce 544 omitted

# reduce 545 omitted

# reduce 546 omitted

# reduce 547 omitted

# reduce 548 omitted

# reduce 549 omitted

# reduce 550 omitted

# reduce 551 omitted

# reduce 552 omitted

# reduce 553 omitted

# reduce 554 omitted

# reduce 555 omitted

# reduce 556 omitted

# reduce 557 omitted

# reduce 558 omitted

def _reduce_559(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module Opal
