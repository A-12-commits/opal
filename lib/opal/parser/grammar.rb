#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.10
# from Racc grammer file "".
#

require 'racc/parser.rb'
module Opal
  class Parser < Racc::Parser


##### State transition tables begin ###

clist = [
'63,64,65,8,51,-82,-84,693,57,58,201,202,268,61,590,59,60,62,23,24,66',
'67,-83,600,201,202,22,28,27,89,88,90,91,578,268,17,583,521,201,202,523',
'7,41,6,9,93,92,83,50,85,84,86,87,94,95,540,81,82,693,38,39,37,708,-64',
'-82,521,201,202,523,-82,-84,260,554,-90,263,73,589,616,261,554,-90,36',
'660,74,30,-504,-83,52,554,201,202,762,32,580,579,267,40,100,-92,554',
'-75,693,99,100,18,692,-82,-84,99,79,73,75,76,77,78,-82,-84,267,74,80',
'63,64,65,-83,51,303,743,56,57,58,620,53,-83,61,54,59,60,62,254,255,66',
'67,764,268,476,-91,253,286,290,89,88,90,91,303,100,215,692,521,578,99',
'525,554,41,619,707,93,92,83,50,85,84,86,87,94,95,263,81,82,-440,38,39',
'37,100,100,553,-440,427,99,99,100,-90,553,-90,428,99,-90,431,100,100',
'692,553,206,99,99,210,263,-445,52,-92,100,-92,553,508,-92,99,704,40',
'578,580,579,-504,578,702,272,214,578,267,724,-508,79,73,75,76,77,78',
'-508,-508,-508,74,80,741,-508,-508,429,-508,573,-95,56,767,303,561,53',
'574,-508,54,-91,-88,-91,620,560,-91,561,-94,-508,-508,263,-508,-508',
'-508,-508,-508,100,703,553,847,100,99,580,579,581,99,580,579,576,740',
'580,579,591,620,824,-92,619,-508,-508,-508,-508,-508,-508,-508,-508',
'-508,-508,-508,-508,-508,-508,-273,620,-508,-508,-508,200,606,-273,-273',
'-273,-508,601,263,-273,-273,619,-273,-508,476,-508,223,-508,-508,-508',
'-508,-508,-508,-508,-90,-508,-508,-508,578,-89,619,-273,-273,730,-273',
'-273,-273,-273,-273,-433,-508,-508,-87,-83,223,-508,-433,198,-84,-444',
'-508,-95,-91,752,199,767,-444,-92,-502,469,-273,-273,-273,-273,-273',
'-273,-273,-273,-273,-273,-273,-273,-273,-273,-81,508,-273,-273,-273',
'892,609,339,338,-89,-273,511,893,-443,580,579,585,-273,512,-273,-443',
'-273,-273,-273,-273,-273,-273,-273,-436,-273,197,-273,-444,-274,-436',
'-436,-275,201,202,476,-274,-436,-86,-275,-273,-273,-502,-85,637,-273',
'521,-94,773,523,-273,638,-93,63,64,65,8,51,891,774,704,57,58,-502,429',
'537,61,776,59,60,62,23,24,66,67,-445,296,297,540,22,28,27,89,88,90,91',
'-274,-436,17,-275,521,303,509,520,7,41,223,9,93,92,83,50,85,84,86,87',
'94,95,637,81,82,-273,38,39,37,638,-80,703,-273,-267,777,500,-274,-505',
'778,-88,-267,220,501,-274,540,222,221,100,36,-438,-441,30,99,-274,52',
'-444,-438,-441,-442,32,-274,781,-444,40,510,-442,-321,-267,-275,303',
'467,18,767,-321,-267,-275,79,73,75,76,77,78,-273,504,505,74,80,-506',
'-506,-506,-267,-506,499,-274,56,-506,-506,790,53,791,-506,54,-506,-506',
'-506,-506,-506,-506,-506,467,-274,464,-444,-506,-506,-506,-506,-506',
'-506,-506,223,-439,-506,-321,-267,-275,100,-254,-439,-506,861,99,-506',
'-506,-506,-506,-506,-506,-506,-506,-506,-506,675,-506,-506,-273,-506',
'-506,-506,100,726,220,-273,-273,99,222,221,-505,223,542,-273,331,329',
'328,330,-505,786,767,-506,201,202,-506,-506,303,-506,336,335,339,338',
'-506,100,-506,211,-506,861,99,700,336,335,339,338,-506,339,338,530,531',
'-506,-506,-506,-506,-506,-506,-273,786,767,-506,-506,-507,-507,-507',
'-273,-507,100,-506,-506,-507,-507,99,-506,433,-507,-506,-507,-507,-507',
'-507,-507,-507,-507,336,335,339,338,-507,-507,-507,-507,-507,-507,-507',
'432,542,-507,331,329,328,330,524,696,-507,675,561,-507,-507,-507,-507',
'-507,-507,-507,-507,-507,-507,806,-507,-507,808,-507,-507,-507,542,811',
'331,329,328,330,812,816,817,545,818,94,95,430,814,527,394,783,469,-507',
'396,395,-507,-507,688,-507,336,335,339,338,-507,-255,-507,685,-507,683',
'542,545,331,329,328,330,-507,-63,534,548,673,-507,-507,-507,-507,-507',
'-507,537,538,397,-507,-507,63,64,65,540,51,549,-507,-507,57,58,668,-507',
'825,61,-507,59,60,62,254,255,66,67,826,827,263,263,253,28,27,89,88,90',
'91,667,542,215,331,329,328,330,242,384,41,830,831,93,92,83,50,85,84',
'86,87,94,95,660,81,82,666,38,39,37,223,102,103,104,105,106,833,375,223',
'545,102,103,104,105,106,-253,837,548,550,206,493,758,210,842,844,52',
'372,660,351,514,252,220,386,-504,40,222,221,218,219,220,850,652,214',
'222,221,218,219,79,73,75,76,77,78,562,854,855,74,80,63,64,65,8,51,303',
'257,56,57,58,650,53,-75,61,54,59,60,62,23,24,66,67,757,303,865,-256',
'22,28,27,89,88,90,91,649,469,17,102,103,104,105,106,7,41,866,9,93,92',
'83,50,85,84,86,87,94,95,868,81,82,295,38,39,37,223,647,294,-505,502',
'242,878,879,242,639,882,494,884,885,811,811,237,238,812,36,303,634,30',
'223,223,52,223,894,223,196,32,220,495,226,40,222,221,218,219,195,900',
'224,18,225,584,194,666,79,73,75,76,77,78,193,263,588,74,80,63,64,65',
'8,51,599,107,56,57,58,910,53,811,61,54,59,60,62,23,24,66,67,912,913',
'-253,598,22,28,27,89,88,90,91,96,592,17,751,595,,,,7,41,,9,93,92,83',
'50,85,84,86,87,94,95,,81,82,,38,39,37,223,-526,-526,-526,-526,229,231',
',,-526,-526,,,,,,237,238,,36,,,30,,,52,,,,,32,220,,226,40,222,221,218',
'219,230,228,224,18,225,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,',
'56,57,58,,53,,61,54,59,60,62,254,255,66,67,,,,,253,28,27,89,88,90,91',
',,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,223',
'-526,-526,-526,-526,229,231,,,-526,-526,,,,,,237,238,,206,,,210,,,52',
',,,,252,220,,226,40,222,221,218,219,230,228,224,214,225,,,,79,73,75',
'76,77,78,,,,74,80,63,64,65,8,51,,257,56,57,58,,53,,61,54,59,60,62,23',
'24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,83,50,85,84',
'86,87,94,95,,81,82,,38,39,37,223,-526,-526,-526,-526,229,231,,,-526',
'-526,,,,,,237,238,,36,,,30,,,52,,,,,32,220,,226,40,222,221,218,219,230',
'228,224,18,225,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58',
',53,,61,54,59,60,62,254,255,66,67,,,,,253,286,290,89,88,90,91,,,215',
',,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,223,-526,-526',
'-526,-526,229,231,,,-526,-526,,,,,,237,238,,206,,,210,,,52,,,,,625,220',
'250,226,40,222,221,218,219,230,228,224,214,225,,,,79,73,75,76,77,78',
',,,74,80,63,64,65,8,51,,,56,57,58,,53,,61,54,59,60,62,23,24,66,67,,',
',,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,83,50,85,84,86,87,94',
'95,,81,82,,38,39,37,223,227,232,233,234,229,231,239,240,235,236,,-526',
'-526,,,237,238,,36,,,30,,,52,,,,,32,220,,226,40,222,221,218,219,230',
'228,224,18,225,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58',
',53,,61,54,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,',
'41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,223,-526,-526,-526',
'-526,229,231,,,-526,-526,,,,,,237,238,,206,,,210,211,,52,,,,,,220,,226',
'40,222,221,218,219,230,228,224,18,225,,,,79,73,75,76,77,78,,,,74,80',
'63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,23,24,66,67,,,,,22,28,27',
'89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38',
'39,37,223,,,,,,,,,,,,,,,,237,238,,206,,,210,,,52,,,,,,220,,226,40,222',
'221,218,219,,,224,214,225,,,,79,73,75,76,77,78,,,,74,80,63,64,65,8,51',
',,56,57,58,,53,,61,54,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91',
',,17,,,,,,7,41,,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,223',
',,,,,,,,,,,,,,,237,238,,36,,,30,,,52,,,,,32,220,,226,40,222,221,218',
'219,,,224,18,225,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57',
'58,,53,,61,54,59,60,62,254,255,66,67,,,,,253,286,290,89,88,90,91,,,215',
',,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,223,227,232',
'233,234,229,231,239,,235,236,,,,,,237,238,,206,,,210,,,52,,,,,625,220',
',226,40,222,221,218,219,230,228,224,214,225,,,,79,73,75,76,77,78,,,',
'74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,254,255,66,67,,,,',
'253,28,27,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95',
',81,82,,38,39,37,223,227,232,233,234,229,231,,,235,236,,,,,,237,238',
',206,,,210,,,52,,,,,252,220,250,226,40,222,221,218,219,230,228,224,214',
'225,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,257,56,57,58,,53,,61',
'54,59,60,62,254,255,66,67,,,,,253,28,27,89,88,90,91,,,215,,,,,,,41,',
',93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,223,-526,-526,-526,-526',
'229,231,,,-526,-526,,,,,,237,238,,206,,,210,,,52,,,,,252,220,250,226',
'40,222,221,218,219,230,228,224,214,225,,,,79,73,75,76,77,78,,,,74,80',
'63,64,65,,51,,257,56,57,58,,53,,61,54,59,60,62,254,255,66,67,,,,,253',
'28,27,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81',
'82,,38,39,37,223,227,232,233,234,229,231,239,240,235,236,,-526,-526',
',,237,238,,206,,,210,,,52,,,,,252,220,250,226,40,222,221,218,219,230',
'228,224,214,225,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,257,56,57',
'58,,53,,61,54,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,',
',,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,223,,,,,,,,,',
',,,,,,237,238,,206,,,210,,,52,,,,,,220,,226,40,222,221,218,219,,,224',
'18,225,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61',
'54,59,60,62,254,255,66,67,,,,,253,286,290,89,88,90,91,,,215,,,,,,,41',
',,93,92,83,50,85,84,86,87,94,95,223,81,82,,38,39,37,,,,,,,,,,237,238',
',,,,,,,,206,,,210,,220,52,,,222,221,218,219,,,40,,,,,,,,214,,,,,79,73',
'75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,23',
'24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,83,50,85,84',
'86,87,94,95,223,81,82,,38,39,37,,,,,,,,,,237,238,,,,,,,,,206,,,210,',
'220,52,226,,222,221,218,219,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,',
'74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,254,255,66,67,,,,',
'253,286,290,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94',
'95,223,81,82,,38,39,37,,,,,,,,,,237,238,,,,,,,,,206,,,210,,220,52,226',
',222,221,218,219,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,63,64',
'65,8,51,,,56,57,58,,53,,61,54,59,60,62,23,24,66,67,,,,,22,28,27,89,88',
'90,91,,,17,,,,,,7,41,,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39',
'37,,,,,,,,,,,,,,,,,,,,36,,,276,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73',
'75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,254',
'255,66,67,,,,,253,286,290,89,88,90,91,,,215,,,,,,,287,,,93,92,83,50',
'85,84,86,87,94,95,,81,82,,,323,291,331,329,328,330,,,,,,,,,,,,,,,,284',
',,281,,,52,,,,,280,,,,,333,,,,,,,,336,335,339,338,79,73,75,76,77,78',
',745,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,254,255,66,67',
',,,,253,286,290,89,88,90,91,,,215,,,,,,,287,,,93,92,83,50,85,84,86,87',
'94,95,,81,82,,,718,291,331,329,328,330,,,,,,,,,,,,,,,,284,,,210,,,52',
',,,,,,,,,333,,,,,,,,336,335,339,338,79,73,75,76,77,78,,,,74,80,63,64',
'65,293,51,,,56,57,58,,53,,61,54,59,60,62,254,255,66,67,,,,,253,286,290',
'89,88,90,91,,,215,,,,,,,287,,,93,92,83,50,85,84,86,87,94,95,,81,82,',
',323,291,331,329,328,330,,,,,,,,,,,,,,,,873,,,210,,,52,,,,,,,,,,333',
'318,,,,,,,336,335,339,338,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,',
'56,57,58,,53,,61,54,59,60,62,254,255,66,67,,,,,253,286,290,89,88,90',
'91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,',
',,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75',
'76,77,78,,,,74,80,63,64,65,8,51,,,56,57,58,,53,,61,54,59,60,62,23,24',
'66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,83,50,85,84,86',
'87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,',
'40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58',
',53,,61,54,59,60,62,254,255,66,67,,,,,253,286,290,89,88,90,91,,,215',
',,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,',
',,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78',
',,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,254,255,66,67,',
',,,253,286,290,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87',
'94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40',
',,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53',
',61,54,59,60,62,254,255,66,67,,,,,253,286,290,89,88,90,91,,,215,,,,',
',,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,',
',,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74',
'80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,254,255,66,67,,,,,253',
'286,290,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,',
'214,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54',
'59,60,62,254,255,66,67,,,,,253,286,290,89,88,90,91,,,215,,,,,,,41,,',
'93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206',
',,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,63,64',
'65,8,51,,,56,57,58,,53,,61,54,59,60,62,23,24,66,67,,,,,22,28,27,89,88',
'90,91,,,17,,,,,,7,41,,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39',
'37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73',
'75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,254',
'255,66,67,,,,,253,286,290,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85',
'84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,',
',,625,,250,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51',
',257,56,57,58,,53,,61,54,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90',
'91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,',
',,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76',
'77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,254,255,66',
'67,,,,,253,28,27,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87',
'94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,252,,,',
'40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,257,56,57',
'58,,53,,61,54,59,60,62,254,255,66,67,,,,,253,286,290,89,88,90,91,,,215',
',,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,',
',,,,,,,,,206,,,210,,,52,,,,,252,,,,40,,,,,,,,214,,,,,79,73,75,76,77',
'78,,,,74,80,63,64,65,,51,,257,56,57,58,,53,,61,54,59,60,62,254,255,66',
'67,,,,,253,286,290,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86',
'87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,250',
',40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,257,56,57',
'58,,53,,61,54,59,60,62,254,255,66,67,,,,,253,286,290,89,88,90,91,,,215',
',,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,',
',,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78',
',,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,23,24,66,67,,,',
',22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95',
',81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,',
',18,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54',
'59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92',
'83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210',
',,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51',
',,56,57,58,,53,,61,54,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91',
',,17,,,,,596,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,223',
'227,232,233,234,229,231,239,240,235,236,,216,217,,,237,238,,206,,,210',
',,52,,,,,,220,,226,40,222,221,218,219,230,228,224,18,225,,,,79,73,75',
'76,77,78,,,,74,80,100,241,,-226,,99,,56,63,64,65,53,51,,54,,57,58,,',
',61,,59,60,62,254,255,66,67,,,,,253,286,290,89,88,90,91,,,215,,,,,,',
'287,,,93,92,83,50,85,84,86,87,94,95,,81,82,,,718,291,331,329,328,330',
',,,,,,,,,,,,,,,284,,,30,,,52,,,,,32,,,,,333,712,,,,,,,336,335,339,338',
'79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60',
'62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,83,50',
'85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,643',
'52,,,,,,,250,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,8',
'51,,,56,57,58,,53,,61,54,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90',
'91,,,17,,,,,,7,41,,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37',
',,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75',
'76,77,78,,,,74,80,63,64,65,8,51,386,,56,57,58,,53,,61,54,59,60,62,23',
'24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,83,50,85,84',
'86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32',
',,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,8,51,,,56,57',
'58,,53,,61,54,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,',
',,7,41,,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,',
',,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,',
',74,80,63,64,65,8,51,,,56,57,58,,53,,61,54,59,60,62,23,24,66,67,,,,',
'22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,83,50,85,84,86,87,94,95',
',81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,',
',18,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54',
'59,60,62,254,255,66,67,,,,,253,286,290,89,88,90,91,,,215,,,,,,,287,',
',93,92,83,50,85,84,563,87,94,95,,81,82,,,718,291,331,329,328,330,,,',
',,,,,,,,,,,,564,,,210,,,52,,,,,,,,,,333,,,,,,,,336,335,339,338,79,73',
'75,76,77,78,,,,74,80,-501,-501,-501,,-501,,,56,-501,-501,,53,,-501,54',
'-501,-501,-501,-501,-501,-501,-501,,-501,,,-501,-501,-501,-501,-501',
'-501,-501,,,-501,,,,,,,-501,,,-501,-501,-501,-501,-501,-501,-501,-501',
'-501,-501,,-501,-501,,-501,-501,-501,,,,,,,,,,,,,,,,,,,,-501,,,-501',
'-501,,-501,,,,,-501,,-501,,-501,,,,,,,,-501,,-501,,,-501,-501,-501,-501',
'-501,-501,,,,-501,-501,-502,-502,-502,,-502,,-501,-501,-502,-502,,-501',
',-502,-501,-502,-502,-502,-502,-502,-502,-502,,-502,,,-502,-502,-502',
'-502,-502,-502,-502,,,-502,,,,,,,-502,,,-502,-502,-502,-502,-502,-502',
'-502,-502,-502,-502,,-502,-502,,-502,-502,-502,,,,,,,,,,,,,,,,,,,,-502',
',,-502,-502,,-502,,,,,-502,,-502,,-502,,,,,,,,-502,,-502,,,-502,-502',
'-502,-502,-502,-502,,,,-502,-502,63,64,65,,51,,-502,-502,57,58,,-502',
',61,-502,59,60,62,254,255,66,67,,,,,253,286,290,89,88,90,91,,,215,,',
',,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,',
',,,,,,,206,,,210,,,52,,,,,252,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78',
',,,74,80,63,64,65,8,51,,,56,57,58,,53,,61,54,59,60,62,23,24,66,67,,',
',,22,28,27,89,88,90,91,,,17,,,,,,7,41,6,9,93,92,83,50,85,84,86,87,94',
'95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,',
',,,,18,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,386,,56,57,58,,53',
',61,54,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,',
',93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206',
',,210,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,63,64',
'65,,51,,,56,57,58,,53,,61,54,59,60,62,23,24,66,67,,,,,22,28,27,89,88',
'90,91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37',
',,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75',
'76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,23,24',
'66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,83,50,85,84,86',
'87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,',
'40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58',
',53,,61,54,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,',
'41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,',
',,,206,,,210,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80',
'63,64,65,8,51,,,56,57,58,,53,,61,54,59,60,62,23,24,66,67,,,,,22,28,27',
'89,88,90,91,,,17,,,,,,7,41,,9,93,92,83,50,85,84,86,87,94,95,,81,82,',
'38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,',
'79,73,75,76,77,78,,,,74,80,63,64,65,8,51,,,56,57,58,,53,,61,54,59,60',
'62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,6,9,93,92,83',
'50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52',
',,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,',
',56,57,58,,53,,61,54,59,60,62,254,255,66,67,,,,,253,286,290,89,88,90',
'91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,',
',,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75',
'76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,254,255',
'66,67,,,,,253,286,290,89,88,90,91,,,215,,,,,,,287,,,93,92,83,50,85,84',
'563,87,94,95,,81,82,,,323,291,331,329,328,330,,,,,,,,,,,,,,,,564,,,210',
',,52,,,,,,,,,,333,,,,,,,,336,335,339,338,79,73,75,76,77,78,,,,74,80',
'63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,254,255,66,67,,,,,253,286',
'290,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82',
',38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,',
',,79,73,75,76,77,78,,,,74,80,63,64,65,8,51,,,56,57,58,,53,,61,54,59',
'60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,83',
'50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52',
',,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,',
',56,57,58,,53,,61,54,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,',
',215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,',
',,,,,,,,,,,,,,206,,,210,,,52,,,,,403,,,,40,,,,,,,,214,,,,,79,73,75,76',
'77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,23,24,66',
'67,,,,,22,28,27,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87',
'94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,403,,,',
'40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58',
',53,,61,54,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,215,,,,,',
',41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,',
',,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74',
'80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,254,255,66,67,,,,,253',
'28,27,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81',
'82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,252,,,,40,,,,,,,',
'214,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,257,56,57,58,,53,,61',
'54,59,60,62,254,255,66,67,,,,,253,286,290,89,88,90,91,,,215,,,,,,,41',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,',
'206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80',
'63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,23,24,66,67,,,,,22,28,27',
'89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38',
'39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79',
'73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62',
'23,24,66,67,,,,,22,28,27,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85',
'84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,',
',,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56',
'57,58,,53,,61,54,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17',
',,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,',
',,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,',
',,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,23,24,66,67,,,,',
'22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,',
'18,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54',
'59,60,62,254,255,66,67,,,,,253,286,290,89,88,90,91,,,215,,,,,,,41,,',
'93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206',
',,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,63,64',
'65,8,51,,,56,57,58,,53,,61,54,59,60,62,23,24,66,67,,,,,22,28,27,89,88',
'90,91,,,17,,,,,,7,41,,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39',
'37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73',
'75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,254',
'255,66,67,,,,,253,286,290,89,88,90,91,,,215,,,,,,,287,,,93,92,83,50',
'85,84,86,87,94,95,,81,82,,,323,291,331,329,328,330,,,,,,,,,,,,,,,,284',
',,281,,,52,,,,,,,,,,333,,533,,,,,,336,335,339,338,79,73,75,76,77,78',
',,,74,80,63,64,65,8,51,,,56,57,58,,53,,61,54,59,60,62,23,24,66,67,,',
',,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,83,50,85,84,86,87,94',
'95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,',
',,,,18,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,8,51,,,56,57,58,,53,',
'61,54,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,',
'9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,',
'36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,63',
'64,65,,51,,,56,57,58,,53,,61,54,59,60,62,254,255,66,67,,,,,253,28,27',
'89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38',
'39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,252,,,,40,,,,,,,,214,,,',
',79,73,75,76,77,78,,,,74,80,63,64,65,8,51,,257,56,57,58,,53,,61,54,59',
'60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,83',
'50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52',
',,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,',
',56,57,58,,53,,61,54,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,',
',17,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,',
',,,,,,,,,,,,,206,,,210,,435,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76',
'77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,254,255,66',
'67,,,,,253,286,290,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86',
'87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,',
'40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58',
',53,,61,54,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,',
'41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,',
',,,206,,,210,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80',
'63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,254,255,66,67,,,,,253,286',
'290,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82',
',38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,',
',,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60',
'62,254,255,66,67,,,,,253,286,290,89,88,90,91,,,215,,,,,,,41,,,93,92',
'83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210',
',,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,',
'51,,,56,57,58,,53,,61,54,59,60,62,254,255,66,67,,,,,253,286,290,89,88',
'90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37',
',,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75',
'76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,254,255',
'66,67,,,,,253,286,290,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84',
'86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,',
',,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57',
'58,,53,,61,54,59,60,62,254,255,66,67,,,,,253,286,290,89,88,90,91,,,215',
',,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,',
',,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78',
',,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,254,255,66,67,',
',,,253,286,290,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87',
'94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40',
',,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53',
',61,54,59,60,62,254,255,66,67,,,,,253,286,290,89,88,90,91,,,215,,,,',
',,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,',
',,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74',
'80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,254,255,66,67,,,,,253',
'286,290,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,',
'214,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54',
'59,60,62,254,255,66,67,,,,,253,286,290,89,88,90,91,,,215,,,,,,,41,,',
'93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206',
',,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,63,64',
'65,,51,,,56,57,58,,53,,61,54,59,60,62,254,255,66,67,,,,,253,286,290',
'89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38',
'39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79',
'73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62',
'254,255,66,67,,,,,253,286,290,89,88,90,91,,,215,,,,,,,41,,,93,92,83',
'50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,',
',52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51',
',,56,57,58,,53,,61,54,59,60,62,254,255,66,67,,,,,253,286,290,89,88,90',
'91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,',
',,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75',
'76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,254,255',
'66,67,,,,,253,286,290,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84',
'86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,',
',,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57',
'58,,53,,61,54,59,60,62,254,255,66,67,,,,,253,286,290,89,88,90,91,,,215',
',,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,',
',,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78',
',,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,254,255,66,67,',
',,,253,286,290,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87',
'94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40',
',,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53',
',61,54,59,60,62,254,255,66,67,,,,,253,286,290,89,88,90,91,,,215,,,,',
',,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,',
',,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74',
'80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,254,255,66,67,,,,,253',
'286,290,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,',
'214,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54',
'59,60,62,254,255,66,67,,,,,253,286,290,89,88,90,91,,,215,,,,,,,41,,',
'93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206',
',,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,63,64',
'65,,51,,,56,57,58,,53,,61,54,59,60,62,254,255,66,67,,,,,253,286,290',
'89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38',
'39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79',
'73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62',
'254,255,66,67,,,,,253,286,290,89,88,90,91,,,215,,,,,,,41,,,93,92,83',
'50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,',
',52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51',
',,56,57,58,,53,,61,54,59,60,62,254,255,66,67,,,,,253,286,290,89,88,90',
'91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,',
',,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75',
'76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,254,255',
'66,67,,,,,253,286,290,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84',
'86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,',
',,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57',
'58,,53,,61,54,59,60,62,254,255,66,67,,,,,253,286,290,89,88,90,91,,,215',
',,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,',
',,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78',
',,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,254,255,66,67,',
',,,253,286,290,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87',
'94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40',
',,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53',
',61,54,59,60,62,254,255,66,67,,,,,253,286,290,89,88,90,91,,,215,,,,',
',,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,',
',,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74',
'80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,254,255,66,67,,,,,253',
'286,290,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,',
'214,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54',
'59,60,62,254,255,66,67,,,,,253,28,27,89,88,90,91,,,215,,,,,,,41,,,93',
'92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,',
',210,,,52,,,,,252,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,63',
'64,65,,51,,257,56,57,58,,53,,61,54,59,60,62,23,24,66,67,,,,,22,28,27',
'89,88,90,91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38',
'39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,18,,,,,79',
'73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62',
'254,255,66,67,,,,,253,286,290,89,88,90,91,,,215,,,,,,,41,,,93,92,83',
'50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,',
',52,,,,,252,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,63,64,65',
',51,,,56,57,58,,53,,61,54,59,60,62,254,255,66,67,,,,,253,286,290,89',
'88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39',
'37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73',
'75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,254',
'255,66,67,,,,,253,286,290,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85',
'84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,',
',,403,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,',
',56,57,58,,53,,61,54,59,60,62,254,255,66,67,,,,,253,286,290,89,88,90',
'91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,',
',,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75',
'76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,254,255',
'66,67,,,,,253,286,290,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84',
'86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,',
',,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57',
'58,,53,,61,54,59,60,62,254,255,66,67,,,,,253,286,290,89,88,90,91,,,215',
',,,,,,287,,,93,92,83,50,85,84,86,87,94,95,,81,82,,,718,291,331,329,328',
'330,,,,,,,,,,,,,,,,284,,,281,,,52,,,,,,,,,,333,712,,,,,,,336,335,339',
'338,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59',
'60,62,254,255,66,67,,,,,253,286,290,89,88,90,91,,,215,,,,,,,41,,,93',
'92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,',
',210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,63,64',
'65,,51,,,56,57,58,,53,,61,54,59,60,62,254,255,66,67,,,,,253,286,290',
'89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38',
'39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79',
'73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62',
'254,255,66,67,,,,,253,28,27,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50',
'85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52',
',,,,252,,250,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,63,64,65',
',51,,257,56,57,58,,53,,61,54,59,60,62,254,255,66,67,,,,,253,28,27,89',
'88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39',
'37,,,,,,,,,,,,,,,,,,,,206,,,210,,,485,,,,,252,,250,,40,,,,,,,,214,,',
',,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,257,56,57,58,,53,,61,54,59',
'60,62,254,255,66,67,,,,,253,28,27,89,88,90,91,,,215,,,,,,,41,,,93,92',
'83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210',
',489,52,,,,,252,,250,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,63',
'64,65,,51,,257,56,57,58,,53,,61,54,59,60,62,23,24,66,67,,,,,22,28,27',
'89,88,90,91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38',
'39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,18,,,,,79',
'73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62',
'254,255,66,67,,,,,253,286,290,89,88,90,91,,,215,,,,,,,287,,,93,92,83',
'50,85,84,86,87,94,95,,81,82,,,,291,,,,,,,,,,,,,,,,,,,,284,,,281,,,52',
',,,,,,,,,,,,,,,,,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,8,51,,,56,57',
'58,,53,,61,54,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,',
',,7,41,,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,',
',,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,',
',74,80,63,64,65,8,51,,,56,57,58,,53,,61,54,59,60,62,23,24,66,67,,,,',
'22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,83,50,85,84,86,87,94,95',
',81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,276,,,52,,,,,32,,,,40,,,,,',
',,18,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,8,51,,,56,57,58,,53,,61',
'54,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93',
'92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,',
'30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,63,64',
'65,,51,,,56,57,58,,53,,61,54,59,60,62,254,255,66,67,,,,,253,28,27,89',
'88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39',
'37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,625,,250,,40,,,,,,,,214,,,',
',79,73,75,76,77,78,,,,74,80,63,64,65,8,51,,257,56,57,58,,53,,61,54,59',
'60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,83',
'50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52',
',,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,',
',56,57,58,,53,,61,54,59,60,62,254,255,66,67,,,,,253,286,290,89,88,90',
'91,,,215,,,,,596,,287,,,93,92,83,50,85,84,86,87,94,95,,81,82,,,,291',
'223,227,232,233,234,229,231,239,240,235,236,,216,217,,,237,238,,284',
',,210,,,52,,,,,,220,,226,,222,221,218,219,230,228,224,,225,,,,79,73',
'75,76,77,78,,,,74,80,,241,,497,,,,56,,,,53,,,54,63,64,65,8,51,,,,57',
'58,,,,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,7',
'41,,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,',
',,,,36,,,276,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74',
'80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,254,255,66,67,,,,,253',
'286,290,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,',
'214,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,8,51,,,56,57,58,,53,,61',
'54,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93',
'92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,',
'30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,63,64',
'65,,51,,,56,57,58,,53,,61,54,59,60,62,254,255,66,67,,,,,253,286,290',
'89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38',
'39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79',
'73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62',
'23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,83,50,85',
'84,86,87,94,95,,81,82,,38,39,37,223,227,232,233,234,229,231,239,240',
'235,236,,216,217,,,237,238,,206,,,210,,,52,,,,,,220,,226,40,222,221',
'218,219,230,228,224,18,225,,,,79,73,75,76,77,78,,-273,,74,80,,241,617',
'-273,-273,-273,,56,-273,-273,-273,53,-273,,54,,,,,,,,-273,-273,,,,,',
',,-273,-273,,-273,-273,-273,-273,-273,,,,,,,,,,,,,,,,,,,,,,-273,-273',
'-273,-273,-273,-273,-273,-273,-273,-273,-273,-273,-273,-273,,,-273,-273',
'-273,,609,-273,,,-273,,,-273,,-273,,-273,,-273,,-273,-273,-273,-273',
'-273,-273,-273,,-273,,-273,,,,,,,,,,,,,-273,-273,-273,-273,,-273,-508',
',,,-273,,-93,-508,-508,-508,,,-508,-508,-508,,-508,,,,,,,,,-508,-508',
'-508,,,,,,,,-508,-508,,-508,-508,-508,-508,-508,,,,,,,,,,,,,,,,,,,,',
',-508,-508,-508,-508,-508,-508,-508,-508,-508,-508,-508,-508,-508,-508',
',,-508,-508,-508,,742,-508,,,-508,,,-508,,-508,,-508,,-508,,-508,-508',
'-508,-508,-508,-508,-508,,-508,-508,-508,,,,,,,,,,,,,-508,-508,-508',
'-508,,-508,,63,64,65,-508,51,-91,,,57,58,,,,61,,59,60,62,254,255,66',
'67,,,,,253,286,290,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86',
'87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,',
'40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58',
',53,,61,54,59,60,62,254,255,66,67,,,,,253,286,290,89,88,90,91,,,215',
',,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,',
',,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78',
',,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,23,24,66,67,,,',
',22,28,27,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95',
',81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,',
',214,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61',
'54,59,60,62,254,255,66,67,,,,,253,286,290,89,88,90,91,,,215,,,,,,,287',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,,,291,,,,,,,,,,,,,,,,,,,,284',
',,281,,,52,,,,,,,,,,,,,,,,,,,,,,79,73,75,76,77,78,,,,74,80,63,64,65',
',51,,,56,57,58,,53,,61,54,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90',
'91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,',
',,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75',
'76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,23,24',
'66,67,,,,,22,28,27,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86',
'87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,',
'40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58',
',53,,61,54,59,60,62,254,255,66,67,,,,,253,286,290,89,88,90,91,,,215',
',,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,',
',,,,,,,,,206,,,210,,,52,,,,,729,,,,40,,,,,,,,214,,,,,79,73,75,76,77',
'78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,254,255,66,67',
',,,,253,286,290,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87',
'94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40',
',,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53',
',61,54,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,',
',93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206',
',,210,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,63,64',
'65,,51,,,56,57,58,,53,,61,54,59,60,62,254,255,66,67,,,,,253,286,290',
'89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38',
'39,37,,,,,,,,,,,,,,,,,,,,206,,,210,514,,52,,,,,,,,,40,,,,,,,,214,,,',
',79,73,75,76,77,78,,,,74,80,63,64,65,8,51,,,56,57,58,,53,,61,54,59,60',
'62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,83,50',
'85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,',
',,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,',
'56,57,58,,53,,61,54,59,60,62,254,255,66,67,,,,,253,286,290,89,88,90',
'91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,',
',,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,625,,,,40,,,,,,,,214,,,,,79,73',
'75,76,77,78,,,,74,80,63,64,65,,51,,257,56,57,58,,53,,61,54,59,60,62',
'254,255,66,67,,,,,253,286,290,89,88,90,91,,,215,,,,,,,41,,,93,92,83',
'50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,',
',52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51',
',257,56,57,58,,53,,61,54,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90',
'91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,',
',,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76',
'77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,254,255,66',
'67,,,,,253,286,290,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86',
'87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,625',
',,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,8,51,,,56,57',
'58,,53,,61,54,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,',
',,7,41,,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,',
',,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,',
',74,80,63,64,65,8,51,,,56,57,58,,53,,61,54,59,60,62,23,24,66,67,,,,',
'22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,83,50,85,84,86,87,94,95',
',81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,',
',18,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,8,51,,,56,57,58,,53,,61',
'54,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93',
'92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,',
'30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,63,64',
'65,,51,,,56,57,58,,53,,61,54,59,60,62,254,255,66,67,,,,,253,286,290',
'89,88,90,91,,,215,,,,,,,287,,,93,92,83,50,85,84,86,87,94,95,,81,82,',
',,291,,,,,,,,,,,,,,,,,,,,679,,,210,,,52,,,,,,,,,,,,,,,,,,,,,,79,73,75',
'76,77,78,,,,74,80,63,64,65,8,51,,,56,57,58,,53,,61,54,59,60,62,23,24',
'66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,83,50,85,84,86',
'87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,',
'40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,8,51,,,56,57,58',
',53,,61,54,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,7',
'41,,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,223,227,232,233',
'234,229,231,239,240,235,236,,216,217,,,237,238,,36,,,30,,,52,,,,,32',
'220,,226,40,222,221,218,219,230,228,224,18,225,,,,79,73,75,76,77,78',
',-281,,74,80,,241,,-281,-281,-281,,56,-281,-281,-281,53,-281,,54,,,',
',,,,-281,-281,,,,,,,,-281,-281,,-281,-281,-281,-281,-281,,,,,,,,,,,',
',,,,,,,,,,-281,-281,-281,-281,-281,-281,-281,-281,-281,-281,-281,-281',
'-281,-281,,,-281,-281,-281,,,-281,,272,-281,,,-281,,-281,,-281,,-281',
',-281,-281,-281,-281,-281,-281,-281,,-281,,-281,,,,,,,,,,,,-371,-281',
'-281,-281,-281,,-281,-371,-371,-371,,-281,-371,-371,-371,,-371,,,,,',
',,,-371,-371,-371,,,,,,,,-371,-371,,-371,-371,-371,-371,-371,,,,,,,',
',,,,,,,,,,,,,,-371,-371,-371,-371,-371,-371,-371,-371,-371,-371,-371',
'-371,-371,-371,,,-371,-371,-371,,,-371,,263,-371,,,-371,,-371,,-371',
',-371,,-371,-371,-371,-371,-371,-371,-371,,-371,-371,-371,,,,,,,,,,',
',-524,-371,-371,-371,-371,,-371,-524,-524,-524,,-371,-524,-524,-524',
',-524,,,,,,,,,-524,-524,-524,,,,,,,,-524,-524,,-524,-524,-524,-524,-524',
',,,,,,,,,,,,,,,,,,,,,-524,-524,-524,-524,-524,-524,-524,-524,-524,-524',
'-524,-524,-524,-524,,,-524,-524,-524,,,-524,,263,-524,,,-524,,-524,',
'-524,,-524,,-524,-524,-524,-524,-524,-524,-524,,-524,-524,-524,,,,,',
',,,,,,-268,-524,-524,-524,-524,,-524,-268,-268,-268,,-524,-268,-268',
'-268,,-268,,,,,,,,,,-268,-268,,,,,,,,-268,-268,,-268,-268,-268,-268',
'-268,,,,,,,,,,,,,,,,,,,,,,-268,-268,-268,-268,-268,-268,-268,-268,-268',
'-268,-268,-268,-268,-268,,,-268,-268,-268,,,-268,,,-268,,,-268,,-268',
',-268,,-268,,-268,-268,-268,-268,-268,-268,-268,,-268,,-268,,,,,,,,',
',,,,-268,-268,-268,-268,-524,-268,,,-268,-268,-268,-524,-524,-524,,-524',
'-524,-524,-524,,-524,,-524,-524,-524,,,-524,-524,-524,-524,-524,,,,',
',,,-524,-524,-524,-524,-524,-524,-524,-524,,,,-524,-524,,-524,-524,-524',
'-524,-524,,,,,,,,,,,,,,,,,,,,,,-524,,,,,,,-524,,,,-524,263,-524,,,,',
'-524,,,,,263,-524,,,,,,,,,,-524,,,,,,,,,,,-524,,-524,,-524,,,-524,,',
',,,-524,,-524,,,-524,154,165,155,178,151,171,161,160,186,189,176,159',
'158,153,179,187,188,163,152,166,170,172,164,157,,,173,180,175,174,167',
'177,162,150,169,168,181,182,183,184,185,149,156,147,148,145,146,110',
'112,109,,111,,,,,,,,138,139,,136,120,121,122,144,125,127,,,123,,,,,140',
'141,128,129,,,,,,,,,,,,,133,132,,119,137,135,134,130,131,126,124,117',
'143,118,,,142,190,,,,,,,,,,80,154,165,155,178,151,171,161,160,186,189',
'176,159,158,153,179,187,188,163,152,166,170,172,164,157,,,173,180,175',
'174,167,177,162,150,169,168,181,182,183,184,185,149,156,147,148,145',
'146,110,112,,,111,,,,,,,,138,139,,136,120,121,122,144,125,127,,,123',
',,,,140,141,128,129,,,,,,,,,,,,,133,132,,119,137,135,134,130,131,126',
'124,117,143,118,,,142,190,,,,,,,,,,80,154,165,155,178,151,171,161,160',
'186,189,176,159,158,153,179,187,188,163,152,166,170,172,164,157,,,173',
'180,175,174,167,177,162,150,169,168,181,182,183,184,185,149,156,147',
'148,145,146,110,112,,,111,,,,,,,,138,139,,136,120,121,122,144,125,127',
',,123,,,,,140,141,128,129,,,,,,,,,,,,,133,132,,119,137,135,134,130,131',
'126,124,117,143,118,,,142,190,,,,,,,,,,80,154,165,155,178,151,171,161',
'160,186,189,176,159,158,153,179,187,188,163,152,166,170,172,164,157',
',,173,180,175,174,167,177,162,150,169,168,181,182,183,184,185,149,156',
'147,148,145,146,110,112,,,111,,,,,,,,138,139,,136,120,121,122,144,125',
'127,,,123,,,,,140,141,128,129,,,,,,,,,,,,,133,132,,119,137,135,134,130',
'131,126,124,117,143,118,,,142,190,,,,,,,,,,80,154,165,155,178,151,171',
'161,160,186,189,176,159,158,153,179,187,188,163,152,166,170,172,164',
'157,,,173,180,175,174,167,177,162,150,169,168,181,182,183,184,185,149',
'156,147,148,145,146,110,112,,,111,,,,,,,,138,139,,136,120,121,122,144',
'125,127,,,123,,,,,140,141,128,129,,,,,,,,,,,,,133,132,,119,137,135,134',
'130,131,126,124,117,143,118,,,142,154,165,155,178,151,171,161,160,186',
'189,176,159,158,153,179,187,188,163,152,166,170,172,164,157,,,173,180',
'175,359,358,360,357,150,169,168,181,182,183,184,185,149,156,147,148',
'355,356,353,112,85,84,354,87,,,,,,,138,139,,136,120,121,122,144,125',
'127,,,123,,,,,140,141,128,129,,,,,,365,,,,,,,133,132,,119,137,135,134',
'130,131,126,124,117,143,118,,,142,154,165,155,178,151,171,161,160,186',
'189,176,159,158,153,179,187,188,163,152,166,170,172,164,157,,,173,180',
'175,174,167,177,162,150,169,168,181,182,183,184,185,149,156,147,148',
'145,146,110,112,382,381,111,383,,,,,,,138,139,,136,120,121,122,144,125',
'127,,,123,,,,,140,141,128,129,,,,,,,,,,,,,133,132,,119,137,135,134,130',
'131,126,124,117,143,118,,,142,154,165,155,178,151,171,161,160,186,189',
'176,159,158,153,179,187,188,163,152,166,170,172,164,157,,,173,180,175',
'174,167,177,162,150,169,168,181,182,183,184,185,149,156,147,148,145',
'146,110,112,382,381,111,383,,,,,,,138,139,,136,120,121,122,144,125,127',
',,123,,,,,140,141,128,129,,,,,,,,,,,,,133,132,,119,137,135,134,130,131',
'126,124,117,143,118,473,415,142,,474,,,,,,,,138,139,,136,120,121,122',
'144,125,127,,,123,,,,,140,141,128,129,,,,,,,,,,,,,133,132,,119,137,135',
'134,130,131,126,124,117,143,118,610,415,142,,611,,,,,,,,138,139,,136',
'120,121,122,144,125,127,,,123,,,,,140,141,128,129,,,,,,263,,,,,,,133',
'132,,119,137,135,134,130,131,126,124,117,143,118,473,415,142,,474,,',
',,,,,138,139,,136,120,121,122,144,125,127,,,123,,,,,140,141,128,129',
',,,,,,,,,,,,133,132,,119,137,135,134,130,131,126,124,117,143,118,612',
'421,142,,613,,,,,,,,138,139,,136,120,121,122,144,125,127,,,123,,,,,140',
'141,128,129,,,,,,,,,,,,,133,132,,119,137,135,134,130,131,126,124,117',
'143,118,657,421,142,,658,,,,,,,,138,139,,136,120,121,122,144,125,127',
',,123,,,,,140,141,128,129,,,,,,,,,,,,,133,132,,119,137,135,134,130,131',
'126,124,117,143,118,907,421,142,,908,,,,,,,,138,139,,136,120,121,122',
'144,125,127,,,123,,,,,140,141,128,129,,,,,,,,,,,,,133,132,,119,137,135',
'134,130,131,126,124,117,143,118,905,415,142,,906,,,,,,,,138,139,,136',
'120,121,122,144,125,127,,,123,,,,,140,141,128,129,,,,,,263,,,,,,,133',
'132,,119,137,135,134,130,131,126,124,117,143,118,,,142,223,227,232,233',
'234,229,231,239,240,235,236,,216,217,,,237,238,,,,,,,,,,,,,,220,,226',
',222,221,218,219,230,228,224,,225,,,,,,,473,415,,,474,,,,,241,,-226',
'138,139,,136,120,121,122,144,125,127,,,123,,,,,140,141,128,129,,,,,',
',,,,,,,133,132,,119,137,135,134,130,131,126,124,117,143,118,473,415',
'142,,474,,,,,,,,138,139,,136,120,121,122,144,125,127,,,123,,,,,140,141',
'128,129,,,,,,263,,,,,,,133,132,,119,137,135,134,130,131,126,124,117',
'143,118,610,415,142,,611,,,,,,,,138,139,,136,120,121,122,144,125,127',
',,123,,,,,140,141,128,129,,,,,,263,,,,,,,133,132,,119,137,135,134,130',
'131,126,124,117,143,118,612,421,142,,613,,,,,,,,138,139,,136,120,121',
'122,144,125,127,,,123,,,,,140,141,128,129,,,,,,,,,,,,,133,132,,119,137',
'135,134,130,131,126,124,117,143,118,417,421,142,,419,,,,,,,,138,139',
',136,120,121,122,144,125,127,,,123,,,,,140,141,128,129,,,,,,,,,,,,,133',
'132,,119,137,135,134,130,131,126,124,117,143,118,796,421,142,,794,,',
',,,,,138,139,,136,120,121,122,144,125,127,,,123,,,,,140,141,128,129',
',,,,,,,,,,,,133,132,,119,137,135,134,130,131,126,124,117,143,118,654',
'415,142,,655,,,,,,,,138,139,,136,120,121,122,144,125,127,,,123,,,,,140',
'141,128,129,,,,,,263,,,,,,,133,132,,119,137,135,134,130,131,126,124',
'117,143,118,796,421,142,,839,,,,,,,,138,139,,136,120,121,122,144,125',
'127,,,123,,,,,140,141,128,129,,,,,,,,,,,,,133,132,,119,137,135,134,130',
'131,126,124,117,143,118,411,415,142,,412,,,,,,,,138,139,,136,120,121',
'122,144,125,127,,,123,,,,,140,141,128,129,,,,,,263,,,,,,,133,132,,119',
'137,135,134,130,131,126,124,117,143,118,473,415,142,,474,,,,,,,,138',
'139,,136,120,121,122,144,125,127,,,123,,,,,140,141,128,129,,,,,,,,,',
',,,133,132,,119,137,135,134,130,131,126,124,117,143,118,,,142,223,227',
'232,233,234,229,231,239,240,235,236,,216,217,,,237,238,,,,,,,,,,,,,',
'220,,226,,222,221,218,219,230,228,224,,225,223,227,232,233,234,229,231',
'239,240,235,236,,216,217,,241,237,238,,,,,,,,,,,,,,220,,226,,222,221',
'218,219,230,228,224,,225,223,227,232,233,234,229,231,239,240,235,236',
',216,217,,241,237,238,,,,,,,,,,,,,,220,,226,,222,221,218,219,230,228',
'224,,225,223,227,232,233,234,229,231,239,240,235,236,,216,217,,241,237',
'238,,,,,,,,,,,,,,220,,226,,222,221,218,219,230,228,224,,225,223,227',
'232,233,234,229,231,239,240,235,236,,216,217,,241,237,238,,,,,,,,,,',
',,,220,,226,,222,221,218,219,230,228,224,,225,223,227,232,233,234,229',
'231,239,240,235,236,,216,217,,241,237,238,,,,,,,,,,,,,,220,,226,,222',
'221,218,219,230,228,224,,225,223,227,232,233,234,229,231,239,240,235',
'236,,216,217,,241,237,238,,,,,,,,,,,,,,220,,226,,222,221,218,219,230',
'228,224,,225,223,227,232,233,234,229,231,239,240,235,236,,216,217,,241',
'237,238,,,,,,,,,,,,,,220,,226,,222,221,218,219,230,228,224,,225,223',
'227,232,233,234,229,231,239,240,235,236,,216,217,,241,237,238,,,,,,',
',,,,,,,220,,226,,222,221,218,219,230,228,224,,225,223,227,232,233,234',
'229,231,239,240,235,236,,216,217,,241,237,238,,,,,,,,,,,,,,220,,226',
',222,221,218,219,230,228,224,,225,223,227,232,233,234,229,231,239,240',
'235,236,,216,217,,241,237,238,,,,,,,,,,,,,,220,,226,,222,221,218,219',
'230,228,224,,225,223,227,232,233,234,229,231,239,240,235,236,,216,217',
',241,237,238,,,,,,,,,,,,,,220,,226,,222,221,218,219,230,228,224,,225',
',,,,,,,,,,,,,,,241' ]
        racc_action_table = arr = ::Array.new(22457, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'0,0,0,0,0,654,655,793,0,0,709,709,288,0,376,0,0,0,0,0,0,0,657,411,434',
'434,0,0,0,0,0,0,0,371,55,0,371,309,305,305,309,0,0,0,0,0,0,0,0,0,0,0',
'0,0,0,840,0,0,557,0,0,0,568,649,411,314,575,575,314,654,655,25,877,411',
'288,71,376,434,25,342,905,0,651,71,0,657,657,0,836,664,664,653,0,371',
'371,288,0,709,906,343,649,556,709,793,0,793,654,655,793,0,0,0,0,0,0',
'654,655,55,0,0,403,403,403,657,403,305,614,0,403,403,486,0,657,403,0',
'403,403,403,403,403,403,403,664,26,262,907,403,403,403,403,403,403,403',
'575,557,403,557,311,586,557,311,792,403,486,568,403,403,403,403,403',
'403,403,403,403,403,656,403,403,360,403,403,403,877,568,877,360,204',
'877,568,342,905,342,905,204,342,905,207,556,836,556,836,403,556,836',
'403,26,205,403,906,343,906,343,430,906,343,566,403,369,586,586,907,367',
'566,286,403,378,26,586,417,403,403,403,403,403,403,417,417,417,403,403',
'611,417,417,204,417,362,207,403,880,287,880,403,362,417,403,907,205',
'907,476,347,907,347,430,417,417,659,417,417,417,417,417,792,566,792',
'792,713,792,369,369,369,713,367,367,367,610,378,378,378,462,743,611',
'476,417,417,417,417,417,417,417,417,417,417,417,417,417,417,419,487',
'417,417,417,14,417,419,419,419,417,412,290,419,419,462,419,417,607,417',
'662,417,417,417,417,417,417,417,610,417,417,417,373,743,487,419,419',
'599,419,419,419,419,419,353,417,417,14,417,663,417,353,13,412,871,417',
'14,417,636,13,665,871,412,563,251,419,419,419,419,419,419,419,419,419',
'419,419,419,419,419,599,295,419,419,419,872,419,811,811,599,419,298',
'872,355,373,373,373,419,298,419,355,419,419,419,419,419,419,419,354',
'419,13,419,871,700,563,354,762,15,15,602,700,563,295,762,419,419,563',
'419,480,419,669,295,671,669,419,480,419,895,895,895,895,895,872,672',
'678,895,895,563,298,675,895,678,895,895,895,895,895,895,895,35,37,37',
'677,895,895,895,895,895,895,895,700,563,895,762,308,480,296,308,895',
'895,439,895,895,895,895,895,895,895,895,895,895,895,755,895,895,658',
'895,895,895,755,35,678,658,285,679,283,894,658,680,35,285,439,283,894',
'681,439,439,799,895,358,357,895,799,502,895,282,358,357,356,895,502',
'684,282,895,297,356,42,874,913,755,622,895,689,42,874,913,895,895,895',
'895,895,895,658,291,291,895,895,421,421,421,285,421,283,894,895,421',
'421,695,895,697,421,895,421,421,421,421,421,421,421,248,502,247,282',
'421,421,421,421,421,421,421,438,359,421,42,874,913,708,597,359,421,808',
'708,421,421,421,421,421,421,421,421,421,421,534,421,421,908,421,421',
'421,3,590,438,908,794,3,438,438,908,300,548,794,548,548,548,548,794',
'909,909,421,341,341,421,421,307,421,808,808,808,808,421,273,421,215',
'421,885,273,564,534,534,534,534,421,540,540,317,317,421,421,421,421',
'421,421,908,687,687,421,421,422,422,422,794,422,346,421,421,422,422',
'346,421,209,422,421,422,422,422,422,422,422,422,885,885,885,885,422',
'422,422,422,422,422,422,208,685,422,685,685,685,685,310,559,422,778',
'558,422,422,422,422,422,422,422,422,422,422,714,422,422,715,422,422',
'422,333,716,333,333,333,333,718,722,722,685,722,722,722,206,721,312',
'109,685,624,422,109,109,422,422,552,422,778,778,778,778,422,728,422',
'547,422,543,783,333,783,783,783,783,422,275,322,333,532,422,422,422',
'422,422,422,323,325,191,422,422,891,891,891,326,891,337,422,422,891',
'891,517,422,746,891,422,891,891,891,891,891,891,891,747,750,753,754',
'891,891,891,891,891,891,891,516,545,891,545,545,545,545,756,96,891,759',
'760,891,891,891,891,891,891,891,891,891,891,761,891,891,515,891,891',
'891,458,274,274,274,274,274,765,78,457,545,5,5,5,5,5,768,769,545,340',
'891,277,644,891,784,787,891,77,506,63,503,891,458,348,796,891,458,458',
'458,458,457,797,498,891,457,457,457,457,891,891,891,891,891,891,349',
'802,803,891,891,889,889,889,889,889,804,891,891,889,889,496,891,493',
'889,891,889,889,889,889,889,889,889,641,41,820,821,889,889,889,889,889',
'889,889,492,627,889,648,648,648,648,648,889,889,828,889,889,889,889',
'889,889,889,889,889,889,889,829,889,889,36,889,889,889,449,488,34,839',
'284,482,845,846,20,481,851,278,856,857,858,860,449,449,861,889,479,478',
'889,443,442,889,441,873,440,12,889,449,279,449,889,449,449,449,449,11',
'883,449,889,449,372,10,890,889,889,889,889,889,889,9,418,375,889,889',
'881,881,881,881,881,410,6,889,881,881,899,889,901,881,889,881,881,881',
'881,881,881,881,902,904,406,404,881,881,881,881,881,881,881,1,392,881',
'635,398,,,,881,881,,881,881,881,881,881,881,881,881,881,881,881,,881',
'881,,881,881,881,447,447,447,447,447,447,447,,,447,447,,,,,,447,447',
',881,,,881,,,881,,,,,881,447,,447,881,447,447,447,447,447,447,447,881',
'447,,,,881,881,881,881,881,881,,,,881,881,429,429,429,,429,,,881,429',
'429,,881,,429,881,429,429,429,429,429,429,429,,,,,429,429,429,429,429',
'429,429,,,429,,,,,,,429,,,429,429,429,429,429,429,429,429,429,429,,429',
'429,,429,429,429,455,455,455,455,455,455,455,,,455,455,,,,,,455,455',
',429,,,429,,,429,,,,,429,455,,455,429,455,455,455,455,455,455,455,429',
'455,,,,429,429,429,429,429,429,,,,429,429,870,870,870,870,870,,429,429',
'870,870,,429,,870,429,870,870,870,870,870,870,870,,,,,870,870,870,870',
'870,870,870,,,870,,,,,,870,870,,870,870,870,870,870,870,870,870,870',
'870,870,,870,870,,870,870,870,454,454,454,454,454,454,454,,,454,454',
',,,,,454,454,,870,,,870,,,870,,,,,870,454,,454,870,454,454,454,454,454',
'454,454,870,454,,,,870,870,870,870,870,870,,,,870,870,868,868,868,,868',
',,870,868,868,,870,,868,870,868,868,868,868,868,868,868,,,,,868,868',
'868,868,868,868,868,,,868,,,,,,,868,,,868,868,868,868,868,868,868,868',
'868,868,,868,868,,868,868,868,453,453,453,453,453,453,453,,,453,453',
',,,,,453,453,,868,,,868,,,868,,,,,868,453,868,453,868,453,453,453,453',
'453,453,453,868,453,,,,868,868,868,868,868,868,,,,868,868,853,853,853',
'853,853,,,868,853,853,,868,,853,868,853,853,853,853,853,853,853,,,,',
'853,853,853,853,853,853,853,,,853,,,,,,853,853,,853,853,853,853,853',
'853,853,853,853,853,853,,853,853,,853,853,853,437,437,437,437,437,437',
'437,437,437,437,437,,437,437,,,437,437,,853,,,853,,,853,,,,,853,437',
',437,853,437,437,437,437,437,437,437,853,437,,,,853,853,853,853,853',
'853,,,,853,853,17,17,17,,17,,,853,17,17,,853,,17,853,17,17,17,17,17',
'17,17,,,,,17,17,17,17,17,17,17,,,17,,,,,,,17,,,17,17,17,17,17,17,17',
'17,17,17,,17,17,,17,17,17,452,452,452,452,452,452,452,,,452,452,,,,',
',452,452,,17,,,17,17,,17,,,,,,452,,452,17,452,452,452,452,452,452,452',
'17,452,,,,17,17,17,17,17,17,,,,17,17,18,18,18,,18,,,17,18,18,,17,,18',
'17,18,18,18,18,18,18,18,,,,,18,18,18,18,18,18,18,,,18,,,,,,,18,,,18',
'18,18,18,18,18,18,18,18,18,,18,18,,18,18,18,448,,,,,,,,,,,,,,,,448,448',
',18,,,18,,,18,,,,,,448,,448,18,448,448,448,448,,,448,18,448,,,,18,18',
'18,18,18,18,,,,18,18,848,848,848,848,848,,,18,848,848,,18,,848,18,848',
'848,848,848,848,848,848,,,,,848,848,848,848,848,848,848,,,848,,,,,,848',
'848,,848,848,848,848,848,848,848,848,848,848,848,,848,848,,848,848,848',
'451,,,,,,,,,,,,,,,,451,451,,848,,,848,,,848,,,,,848,451,,451,848,451',
'451,451,451,,,451,848,451,,,,848,848,848,848,848,848,,,,848,848,847',
'847,847,,847,,,848,847,847,,848,,847,848,847,847,847,847,847,847,847',
',,,,847,847,847,847,847,847,847,,,847,,,,,,,847,,,847,847,847,847,847',
'847,847,847,847,847,,847,847,,847,847,847,460,460,460,460,460,460,460',
'460,,460,460,,,,,,460,460,,847,,,847,,,847,,,,,847,460,,460,847,460',
'460,460,460,460,460,460,847,460,,,,847,847,847,847,847,847,,,,847,847',
'22,22,22,,22,,,847,22,22,,847,,22,847,22,22,22,22,22,22,22,,,,,22,22',
'22,22,22,22,22,,,22,,,,,,,22,,,22,22,22,22,22,22,22,22,22,22,,22,22',
',22,22,22,459,459,459,459,459,459,459,,,459,459,,,,,,459,459,,22,,,22',
',,22,,,,,22,459,22,459,22,459,459,459,459,459,459,459,22,459,,,,22,22',
'22,22,22,22,,,,22,22,23,23,23,,23,,22,22,23,23,,22,,23,22,23,23,23,23',
'23,23,23,,,,,23,23,23,23,23,23,23,,,23,,,,,,,23,,,23,23,23,23,23,23',
'23,23,23,23,,23,23,,23,23,23,456,456,456,456,456,456,456,,,456,456,',
',,,,456,456,,23,,,23,,,23,,,,,23,456,23,456,23,456,456,456,456,456,456',
'456,23,456,,,,23,23,23,23,23,23,,,,23,23,24,24,24,,24,,23,23,24,24,',
'23,,24,23,24,24,24,24,24,24,24,,,,,24,24,24,24,24,24,24,,,24,,,,,,,24',
',,24,24,24,24,24,24,24,24,24,24,,24,24,,24,24,24,436,436,436,436,436',
'436,436,436,436,436,436,,436,436,,,436,436,,24,,,24,,,24,,,,,24,436',
'24,436,24,436,436,436,436,436,436,436,24,436,,,,24,24,24,24,24,24,,',
',24,24,843,843,843,,843,,24,24,843,843,,24,,843,24,843,843,843,843,843',
'843,843,,,,,843,843,843,843,843,843,843,,,843,,,,,,,843,,,843,843,843',
'843,843,843,843,843,843,843,,843,843,,843,843,843,450,,,,,,,,,,,,,,',
',450,450,,843,,,843,,,843,,,,,,450,,450,843,450,450,450,450,,,450,843',
'450,,,,843,843,843,843,843,843,,,,843,843,431,431,431,,431,,,843,431',
'431,,843,,431,843,431,431,431,431,431,431,431,,,,,431,431,431,431,431',
'431,431,,,431,,,,,,,431,,,431,431,431,431,431,431,431,431,431,431,446',
'431,431,,431,431,431,,,,,,,,,,446,446,,,,,,,,,431,,,431,,446,431,,,446',
'446,446,446,,,431,,,,,,,,431,,,,,431,431,431,431,431,431,,,,431,431',
'365,365,365,,365,,,431,365,365,,431,,365,431,365,365,365,365,365,365',
'365,,,,,365,365,365,365,365,365,365,,,365,,,,,,,365,,,365,365,365,365',
'365,365,365,365,365,365,445,365,365,,365,365,365,,,,,,,,,,445,445,,',
',,,,,,365,,,365,,445,365,445,,445,445,445,445,,,365,,,,,,,,365,,,,,365',
'365,365,365,365,365,,,,365,365,432,432,432,,432,,,365,432,432,,365,',
'432,365,432,432,432,432,432,432,432,,,,,432,432,432,432,432,432,432',
',,432,,,,,,,432,,,432,432,432,432,432,432,432,432,432,432,444,432,432',
',432,432,432,,,,,,,,,,444,444,,,,,,,,,432,,,432,,444,432,444,,444,444',
'444,444,,,432,,,,,,,,432,,,,,432,432,432,432,432,432,,,,432,432,30,30',
'30,30,30,,,432,30,30,,432,,30,432,30,30,30,30,30,30,30,,,,,30,30,30',
'30,30,30,30,,,30,,,,,,30,30,,30,30,30,30,30,30,30,30,30,30,30,,30,30',
',30,30,30,,,,,,,,,,,,,,,,,,,,30,,,30,,,30,,,,,30,,,,30,,,,,,,,30,,,',
',30,30,30,30,30,30,,,,30,30,31,31,31,,31,,,30,31,31,,30,,31,30,31,31',
'31,31,31,31,31,,,,,31,31,31,31,31,31,31,,,31,,,,,,,31,,,31,31,31,31',
'31,31,31,31,31,31,,31,31,,,619,31,619,619,619,619,,,,,,,,,,,,,,,,31',
',,31,,,31,,,,,31,,,,,619,,,,,,,,619,619,619,619,31,31,31,31,31,31,,619',
',31,31,32,32,32,,32,,,31,32,32,,31,,32,31,32,32,32,32,32,32,32,,,,,32',
'32,32,32,32,32,32,,,32,,,,,,,32,,,32,32,32,32,32,32,32,32,32,32,,32',
'32,,,806,32,806,806,806,806,,,,,,,,,,,,,,,,32,,,32,,,32,,,,,,,,,,806',
',,,,,,,806,806,806,806,32,32,32,32,32,32,,,,32,32,837,837,837,32,837',
',,32,837,837,,32,,837,32,837,837,837,837,837,837,837,,,,,837,837,837',
'837,837,837,837,,,837,,,,,,,837,,,837,837,837,837,837,837,837,837,837',
'837,,837,837,,,56,837,56,56,56,56,,,,,,,,,,,,,,,,837,,,837,,,837,,,',
',,,,,,56,56,,,,,,,56,56,56,56,837,837,837,837,837,837,,,,837,837,433',
'433,433,,433,,,837,433,433,,837,,433,837,433,433,433,433,433,433,433',
',,,,433,433,433,433,433,433,433,,,433,,,,,,,433,,,433,433,433,433,433',
'433,433,433,433,433,,433,433,,433,433,433,,,,,,,,,,,,,,,,,,,,433,,,433',
',,433,,,,,,,,,433,,,,,,,,433,,,,,433,433,433,433,433,433,,,,433,433',
'833,833,833,833,833,,,433,833,833,,433,,833,433,833,833,833,833,833',
'833,833,,,,,833,833,833,833,833,833,833,,,833,,,,,,833,833,,833,833',
'833,833,833,833,833,833,833,833,833,,833,833,,833,833,833,,,,,,,,,,',
',,,,,,,,,833,,,833,,,833,,,,,833,,,,833,,,,,,,,833,,,,,833,833,833,833',
'833,833,,,,833,833,824,824,824,,824,,,833,824,824,,833,,824,833,824',
'824,824,824,824,824,824,,,,,824,824,824,824,824,824,824,,,824,,,,,,',
'824,,,824,824,824,824,824,824,824,824,824,824,,824,824,,824,824,824',
',,,,,,,,,,,,,,,,,,,824,,,824,,,824,,,,,,,,,824,,,,,,,,824,,,,,824,824',
'824,824,824,824,,,,824,824,38,38,38,,38,,,824,38,38,,824,,38,824,38',
'38,38,38,38,38,38,,,,,38,38,38,38,38,38,38,,,38,,,,,,,38,,,38,38,38',
'38,38,38,38,38,38,38,,38,38,,38,38,38,,,,,,,,,,,,,,,,,,,,38,,,38,,,38',
',,,,,,,,38,,,,,,,,38,,,,,38,38,38,38,38,38,,,,38,38,39,39,39,,39,,,38',
'39,39,,38,,39,38,39,39,39,39,39,39,39,,,,,39,39,39,39,39,39,39,,,39',
',,,,,,39,,,39,39,39,39,39,39,39,39,39,39,,39,39,,39,39,39,,,,,,,,,,',
',,,,,,,,,39,,,39,,,39,,,,,,,,,39,,,,,,,,39,,,,,39,39,39,39,39,39,,,',
'39,39,40,40,40,,40,,,39,40,40,,39,,40,39,40,40,40,40,40,40,40,,,,,40',
'40,40,40,40,40,40,,,40,,,,,,,40,,,40,40,40,40,40,40,40,40,40,40,,40',
'40,,40,40,40,,,,,,,,,,,,,,,,,,,,40,,,40,,,40,,,,,,,,,40,,,,,,,,40,,',
',,40,40,40,40,40,40,,,,40,40,812,812,812,,812,,,40,812,812,,40,,812',
'40,812,812,812,812,812,812,812,,,,,812,812,812,812,812,812,812,,,812',
',,,,,,812,,,812,812,812,812,812,812,812,812,812,812,,812,812,,812,812',
'812,,,,,,,,,,,,,,,,,,,,812,,,812,,,812,,,,,,,,,812,,,,,,,,812,,,,,812',
'812,812,812,812,812,,,,812,812,798,798,798,798,798,,,812,798,798,,812',
',798,812,798,798,798,798,798,798,798,,,,,798,798,798,798,798,798,798',
',,798,,,,,,798,798,,798,798,798,798,798,798,798,798,798,798,798,,798',
'798,,798,798,798,,,,,,,,,,,,,,,,,,,,798,,,798,,,798,,,,,798,,,,798,',
',,,,,,798,,,,,798,798,798,798,798,798,,,,798,798,464,464,464,,464,,',
'798,464,464,,798,,464,798,464,464,464,464,464,464,464,,,,,464,464,464',
'464,464,464,464,,,464,,,,,,,464,,,464,464,464,464,464,464,464,464,464',
'464,,464,464,,464,464,464,,,,,,,,,,,,,,,,,,,,464,,,464,,,464,,,,,464',
',464,,464,,,,,,,,464,,,,,464,464,464,464,464,464,,,,464,464,52,52,52',
',52,,464,464,52,52,,464,,52,464,52,52,52,52,52,52,52,,,,,52,52,52,52',
'52,52,52,,,52,,,,,,,52,,,52,52,52,52,52,52,52,52,52,52,,52,52,,52,52',
'52,,,,,,,,,,,,,,,,,,,,52,,,52,,,52,,,,,,,,,52,,,,,,,,52,,,,,52,52,52',
'52,52,52,,,,52,52,53,53,53,,53,,,52,53,53,,52,,53,52,53,53,53,53,53',
'53,53,,,,,53,53,53,53,53,53,53,,,53,,,,,,,53,,,53,53,53,53,53,53,53',
'53,53,53,,53,53,,53,53,53,,,,,,,,,,,,,,,,,,,,53,,,53,,,53,,,,,53,,,',
'53,,,,,,,,53,,,,,53,53,53,53,53,53,,,,53,53,54,54,54,,54,,53,53,54,54',
',53,,54,53,54,54,54,54,54,54,54,,,,,54,54,54,54,54,54,54,,,54,,,,,,',
'54,,,54,54,54,54,54,54,54,54,54,54,,54,54,,54,54,54,,,,,,,,,,,,,,,,',
',,,54,,,54,,,54,,,,,54,,,,54,,,,,,,,54,,,,,54,54,54,54,54,54,,,,54,54',
'467,467,467,,467,,54,54,467,467,,54,,467,54,467,467,467,467,467,467',
'467,,,,,467,467,467,467,467,467,467,,,467,,,,,,,467,,,467,467,467,467',
'467,467,467,467,467,467,,467,467,,467,467,467,,,,,,,,,,,,,,,,,,,,467',
',,467,,,467,,,,,,,467,,467,,,,,,,,467,,,,,467,467,467,467,467,467,,',
',467,467,469,469,469,,469,,467,467,469,469,,467,,469,467,469,469,469',
'469,469,469,469,,,,,469,469,469,469,469,469,469,,,469,,,,,,,469,,,469',
'469,469,469,469,469,469,469,469,469,,469,469,,469,469,469,,,,,,,,,,',
',,,,,,,,,469,,,469,,,469,,,,,,,,,469,,,,,,,,469,,,,,469,469,469,469',
'469,469,,,,469,469,57,57,57,,57,,,469,57,57,,469,,57,469,57,57,57,57',
'57,57,57,,,,,57,57,57,57,57,57,57,,,57,,,,,,,57,,,57,57,57,57,57,57',
'57,57,57,57,,57,57,,57,57,57,,,,,,,,,,,,,,,,,,,,57,,,57,,,57,,,,,,,',
',57,,,,,,,,57,,,,,57,57,57,57,57,57,,,,57,57,58,58,58,,58,,,57,58,58',
',57,,58,57,58,58,58,58,58,58,58,,,,,58,58,58,58,58,58,58,,,58,,,,,,',
'58,,,58,58,58,58,58,58,58,58,58,58,,58,58,,58,58,58,,,,,,,,,,,,,,,,',
',,,58,,,58,,,58,,,,,,,,,58,,,,,,,,58,,,,,58,58,58,58,58,58,,,,58,58',
'61,61,61,,61,,,58,61,61,,58,,61,58,61,61,61,61,61,61,61,,,,,61,61,61',
'61,61,61,61,,,61,,,,,401,,61,,,61,61,61,61,61,61,61,61,61,61,,61,61',
',61,61,61,401,401,401,401,401,401,401,401,401,401,401,,401,401,,,401',
'401,,61,,,61,,,61,,,,,,401,,401,61,401,401,401,401,401,401,401,61,401',
',,,61,61,61,61,61,61,,,,61,61,61,401,,401,,61,,61,62,62,62,61,62,,61',
',62,62,,,,62,,62,62,62,62,62,62,62,,,,,62,62,62,62,62,62,62,,,62,,,',
',,,62,,,62,62,62,62,62,62,62,62,62,62,,62,62,,,571,62,571,571,571,571',
',,,,,,,,,,,,,,,62,,,62,,,62,,,,,62,,,,,571,571,,,,,,,571,571,571,571',
'62,62,62,62,62,62,,,,62,62,485,485,485,,485,,,62,485,485,,62,,485,62',
'485,485,485,485,485,485,485,,,,,485,485,485,485,485,485,485,,,485,,',
',,,,485,,,485,485,485,485,485,485,485,485,485,485,,485,485,,485,485',
'485,,,,,,,,,,,,,,,,,,,,485,,,485,,485,485,,,,,,,485,,485,,,,,,,,485',
',,,,485,485,485,485,485,485,,,,485,485,491,491,491,491,491,,,485,491',
'491,,485,,491,485,491,491,491,491,491,491,491,,,,,491,491,491,491,491',
'491,491,,,491,,,,,,491,491,,491,491,491,491,491,491,491,491,491,491',
'491,,491,491,,491,491,491,,,,,,,,,,,,,,,,,,,,491,,,491,,,491,,,,,491',
',,,491,,,,,,,,491,,,,,491,491,491,491,491,491,,,,491,491,551,551,551',
'551,551,491,,491,551,551,,491,,551,491,551,551,551,551,551,551,551,',
',,,551,551,551,551,551,551,551,,,551,,,,,,551,551,,551,551,551,551,551',
'551,551,551,551,551,551,,551,551,,551,551,551,,,,,,,,,,,,,,,,,,,,551',
',,551,,,551,,,,,551,,,,551,,,,,,,,551,,,,,551,551,551,551,551,551,,',
',551,551,788,788,788,788,788,,,551,788,788,,551,,788,551,788,788,788',
'788,788,788,788,,,,,788,788,788,788,788,788,788,,,788,,,,,,788,788,',
'788,788,788,788,788,788,788,788,788,788,788,,788,788,,788,788,788,,',
',,,,,,,,,,,,,,,,,788,,,788,,,788,,,,,788,,,,788,,,,,,,,788,,,,,788,788',
'788,788,788,788,,,,788,788,767,767,767,767,767,,,788,767,767,,788,,767',
'788,767,767,767,767,767,767,767,,,,,767,767,767,767,767,767,767,,,767',
',,,,,767,767,,767,767,767,767,767,767,767,767,767,767,767,,767,767,',
'767,767,767,,,,,,,,,,,,,,,,,,,,767,,,767,,,767,,,,,767,,,,767,,,,,,',
',767,,,,,767,767,767,767,767,767,,,,767,767,352,352,352,,352,,,767,352',
'352,,767,,352,767,352,352,352,352,352,352,352,,,,,352,352,352,352,352',
'352,352,,,352,,,,,,,352,,,352,352,352,352,352,352,352,352,352,352,,352',
'352,,,712,352,712,712,712,712,,,,,,,,,,,,,,,,352,,,352,,,352,,,,,,,',
',,712,,,,,,,,712,712,712,712,352,352,352,352,352,352,,,,352,352,83,83',
'83,,83,,,352,83,83,,352,,83,352,83,83,83,83,83,83,83,,83,,,83,83,83',
'83,83,83,83,,,83,,,,,,,83,,,83,83,83,83,83,83,83,83,83,83,,83,83,,83',
'83,83,,,,,,,,,,,,,,,,,,,,83,,,83,83,,83,,,,,83,,83,,83,,,,,,,,83,,83',
',,83,83,83,83,83,83,,,,83,83,86,86,86,,86,,83,83,86,86,,83,,86,83,86',
'86,86,86,86,86,86,,86,,,86,86,86,86,86,86,86,,,86,,,,,,,86,,,86,86,86',
'86,86,86,86,86,86,86,,86,86,,86,86,86,,,,,,,,,,,,,,,,,,,,86,,,86,86',
',86,,,,,86,,86,,86,,,,,,,,86,,86,,,86,86,86,86,86,86,,,,86,86,757,757',
'757,,757,,86,86,757,757,,86,,757,86,757,757,757,757,757,757,757,,,,',
'757,757,757,757,757,757,757,,,757,,,,,,,757,,,757,757,757,757,757,757',
'757,757,757,757,,757,757,,757,757,757,,,,,,,,,,,,,,,,,,,,757,,,757,',
',757,,,,,757,,,,757,,,,,,,,757,,,,,757,757,757,757,757,757,,,,757,757',
'98,98,98,98,98,,,757,98,98,,757,,98,757,98,98,98,98,98,98,98,,,,,98',
'98,98,98,98,98,98,,,98,,,,,,98,98,98,98,98,98,98,98,98,98,98,98,98,98',
',98,98,,98,98,98,,,,,,,,,,,,,,,,,,,,98,,,98,,,98,,,,,98,,,,98,,,,,,',
',98,,,,,98,98,98,98,98,98,,,,98,98,102,102,102,,102,98,,98,102,102,',
'98,,102,98,102,102,102,102,102,102,102,,,,,102,102,102,102,102,102,102',
',,102,,,,,,,102,,,102,102,102,102,102,102,102,102,102,102,,102,102,',
'102,102,102,,,,,,,,,,,,,,,,,,,,102,,,102,,,102,,,,,,,,,102,,,,,,,,102',
',,,,102,102,102,102,102,102,,,,102,102,103,103,103,,103,,,102,103,103',
',102,,103,102,103,103,103,103,103,103,103,,,,,103,103,103,103,103,103',
'103,,,103,,,,,,,103,,,103,103,103,103,103,103,103,103,103,103,,103,103',
',103,103,103,,,,,,,,,,,,,,,,,,,,103,,,103,,,103,,,,,,,,,103,,,,,,,,103',
',,,,103,103,103,103,103,103,,,,103,103,104,104,104,,104,,,103,104,104',
',103,,104,103,104,104,104,104,104,104,104,,,,,104,104,104,104,104,104',
'104,,,104,,,,,,,104,,,104,104,104,104,104,104,104,104,104,104,,104,104',
',104,104,104,,,,,,,,,,,,,,,,,,,,104,,,104,,,104,,,,,,,,,104,,,,,,,,104',
',,,,104,104,104,104,104,104,,,,104,104,105,105,105,,105,,,104,105,105',
',104,,105,104,105,105,105,105,105,105,105,,,,,105,105,105,105,105,105',
'105,,,105,,,,,,,105,,,105,105,105,105,105,105,105,105,105,105,,105,105',
',105,105,105,,,,,,,,,,,,,,,,,,,,105,,,105,,,105,,,,,,,,,105,,,,,,,,105',
',,,,105,105,105,105,105,105,,,,105,105,106,106,106,106,106,,,105,106',
'106,,105,,106,105,106,106,106,106,106,106,106,,,,,106,106,106,106,106',
'106,106,,,106,,,,,,106,106,,106,106,106,106,106,106,106,106,106,106',
'106,,106,106,,106,106,106,,,,,,,,,,,,,,,,,,,,106,,,106,,,106,,,,,106',
',,,106,,,,,,,,106,,,,,106,106,106,106,106,106,,,,106,106,107,107,107',
'107,107,,,106,107,107,,106,,107,106,107,107,107,107,107,107,107,,,,',
'107,107,107,107,107,107,107,,,107,,,,,,107,107,107,107,107,107,107,107',
'107,107,107,107,107,107,,107,107,,107,107,107,,,,,,,,,,,,,,,,,,,,107',
',,107,,,107,,,,,107,,,,107,,,,,,,,107,,,,,107,107,107,107,107,107,,',
',107,107,742,742,742,,742,,,107,742,742,,107,,742,107,742,742,742,742',
'742,742,742,,,,,742,742,742,742,742,742,742,,,742,,,,,,,742,,,742,742',
'742,742,742,742,742,742,742,742,,742,742,,742,742,742,,,,,,,,,,,,,,',
',,,,,742,,,742,,,742,,,,,,,,,742,,,,,,,,742,,,,,742,742,742,742,742',
'742,,,,742,742,350,350,350,,350,,,742,350,350,,742,,350,742,350,350',
'350,350,350,350,350,,,,,350,350,350,350,350,350,350,,,350,,,,,,,350',
',,350,350,350,350,350,350,350,350,350,350,,350,350,,,538,350,538,538',
'538,538,,,,,,,,,,,,,,,,350,,,350,,,350,,,,,,,,,,538,,,,,,,,538,538,538',
'538,350,350,350,350,350,350,,,,350,350,741,741,741,,741,,,350,741,741',
',350,,741,350,741,741,741,741,741,741,741,,,,,741,741,741,741,741,741',
'741,,,741,,,,,,,741,,,741,741,741,741,741,741,741,741,741,741,,741,741',
',741,741,741,,,,,,,,,,,,,,,,,,,,741,,,741,,,741,,,,,,,,,741,,,,,,,,741',
',,,,741,741,741,741,741,741,,,,741,741,193,193,193,193,193,,,741,193',
'193,,741,,193,741,193,193,193,193,193,193,193,,,,,193,193,193,193,193',
'193,193,,,193,,,,,,193,193,,193,193,193,193,193,193,193,193,193,193',
'193,,193,193,,193,193,193,,,,,,,,,,,,,,,,,,,,193,,,193,,,193,,,,,193',
',,,193,,,,,,,,193,,,,,193,193,193,193,193,193,,,,193,193,194,194,194',
',194,,,193,194,194,,193,,194,193,194,194,194,194,194,194,194,,,,,194',
'194,194,194,194,194,194,,,194,,,,,,,194,,,194,194,194,194,194,194,194',
'194,194,194,,194,194,,194,194,194,,,,,,,,,,,,,,,,,,,,194,,,194,,,194',
',,,,194,,,,194,,,,,,,,194,,,,,194,194,194,194,194,194,,,,194,194,195',
'195,195,,195,,,194,195,195,,194,,195,194,195,195,195,195,195,195,195',
',,,,195,195,195,195,195,195,195,,,195,,,,,,,195,,,195,195,195,195,195',
'195,195,195,195,195,,195,195,,195,195,195,,,,,,,,,,,,,,,,,,,,195,,,195',
',,195,,,,,195,,,,195,,,,,,,,195,,,,,195,195,195,195,195,195,,,,195,195',
'196,196,196,,196,,,195,196,196,,195,,196,195,196,196,196,196,196,196',
'196,,,,,196,196,196,196,196,196,196,,,196,,,,,,,196,,,196,196,196,196',
'196,196,196,196,196,196,,196,196,,196,196,196,,,,,,,,,,,,,,,,,,,,196',
',,196,,,196,,,,,,,,,196,,,,,,,,196,,,,,196,196,196,196,196,196,,,,196',
'196,197,197,197,,197,,,196,197,197,,196,,197,196,197,197,197,197,197',
'197,197,,,,,197,197,197,197,197,197,197,,,197,,,,,,,197,,,197,197,197',
'197,197,197,197,197,197,197,,197,197,,197,197,197,,,,,,,,,,,,,,,,,,',
',197,,,197,,,197,,,,,197,,,,197,,,,,,,,197,,,,,197,197,197,197,197,197',
',,,197,197,740,740,740,,740,,197,197,740,740,,197,,740,197,740,740,740',
'740,740,740,740,,,,,740,740,740,740,740,740,740,,,740,,,,,,,740,,,740',
'740,740,740,740,740,740,740,740,740,,740,740,,740,740,740,,,,,,,,,,',
',,,,,,,,,740,,,740,,,740,,,,,,,,,740,,,,,,,,740,,,,,740,740,740,740',
'740,740,,,,740,740,730,730,730,,730,,,740,730,730,,740,,730,740,730',
'730,730,730,730,730,730,,,,,730,730,730,730,730,730,730,,,730,,,,,,',
'730,,,730,730,730,730,730,730,730,730,730,730,,730,730,,730,730,730',
',,,,,,,,,,,,,,,,,,,730,,,730,,,730,,,,,,,,,730,,,,,,,,730,,,,,730,730',
'730,730,730,730,,,,730,730,200,200,200,,200,,,730,200,200,,730,,200',
'730,200,200,200,200,200,200,200,,,,,200,200,200,200,200,200,200,,,200',
',,,,,,200,,,200,200,200,200,200,200,200,200,200,200,,200,200,,200,200',
'200,,,,,,,,,,,,,,,,,,,,200,,,200,,,200,,,,,,,,,200,,,,,,,,200,,,,,200',
'200,200,200,200,200,,,,200,200,201,201,201,,201,,,200,201,201,,200,',
'201,200,201,201,201,201,201,201,201,,,,,201,201,201,201,201,201,201',
',,201,,,,,,,201,,,201,201,201,201,201,201,201,201,201,201,,201,201,',
'201,201,201,,,,,,,,,,,,,,,,,,,,201,,,201,,,201,,,,,,,,,201,,,,,,,,201',
',,,,201,201,201,201,201,201,,,,201,201,202,202,202,,202,,,201,202,202',
',201,,202,201,202,202,202,202,202,202,202,,,,,202,202,202,202,202,202',
'202,,,202,,,,,,,202,,,202,202,202,202,202,202,202,202,202,202,,202,202',
',202,202,202,,,,,,,,,,,,,,,,,,,,202,,,202,,,202,,,,,,,,,202,,,,,,,,202',
',,,,202,202,202,202,202,202,,,,202,202,729,729,729,,729,,,202,729,729',
',202,,729,202,729,729,729,729,729,729,729,,,,,729,729,729,729,729,729',
'729,,,729,,,,,,,729,,,729,729,729,729,729,729,729,729,729,729,,729,729',
',729,729,729,,,,,,,,,,,,,,,,,,,,729,,,729,,,729,,,,,,,,,729,,,,,,,,729',
',,,,729,729,729,729,729,729,,,,729,729,723,723,723,723,723,,,729,723',
'723,,729,,723,729,723,723,723,723,723,723,723,,,,,723,723,723,723,723',
'723,723,,,723,,,,,,723,723,,723,723,723,723,723,723,723,723,723,723',
'723,,723,723,,723,723,723,,,,,,,,,,,,,,,,,,,,723,,,723,,,723,,,,,723',
',,,723,,,,,,,,723,,,,,723,723,723,723,723,723,,,,723,723,497,497,497',
',497,,,723,497,497,,723,,497,723,497,497,497,497,497,497,497,,,,,497',
'497,497,497,497,497,497,,,497,,,,,,,497,,,497,497,497,497,497,497,497',
'497,497,497,,497,497,,,318,497,318,318,318,318,,,,,,,,,,,,,,,,497,,',
'497,,,497,,,,,,,,,,318,,318,,,,,,318,318,318,318,497,497,497,497,497',
'497,,,,497,497,711,711,711,711,711,,,497,711,711,,497,,711,497,711,711',
'711,711,711,711,711,,,,,711,711,711,711,711,711,711,,,711,,,,,,711,711',
',711,711,711,711,711,711,711,711,711,711,711,,711,711,,711,711,711,',
',,,,,,,,,,,,,,,,,,711,,,711,,,711,,,,,711,,,,711,,,,,,,,711,,,,,711',
'711,711,711,711,711,,,,711,711,710,710,710,710,710,,,711,710,710,,711',
',710,711,710,710,710,710,710,710,710,,,,,710,710,710,710,710,710,710',
',,710,,,,,,710,710,,710,710,710,710,710,710,710,710,710,710,710,,710',
'710,,710,710,710,,,,,,,,,,,,,,,,,,,,710,,,710,,,710,,,,,710,,,,710,',
',,,,,,710,,,,,710,710,710,710,710,710,,,,710,710,499,499,499,,499,,',
'710,499,499,,710,,499,710,499,499,499,499,499,499,499,,,,,499,499,499',
'499,499,499,499,,,499,,,,,,,499,,,499,499,499,499,499,499,499,499,499',
'499,,499,499,,499,499,499,,,,,,,,,,,,,,,,,,,,499,,,499,,,499,,,,,499',
',,,499,,,,,,,,499,,,,,499,499,499,499,499,499,,,,499,499,210,210,210',
'210,210,,499,499,210,210,,499,,210,499,210,210,210,210,210,210,210,',
',,,210,210,210,210,210,210,210,,,210,,,,,,210,210,,210,210,210,210,210',
'210,210,210,210,210,210,,210,210,,210,210,210,,,,,,,,,,,,,,,,,,,,210',
',,210,,,210,,,,,210,,,,210,,,,,,,,210,,,,,210,210,210,210,210,210,,',
',210,210,211,211,211,,211,,,210,211,211,,210,,211,210,211,211,211,211',
'211,211,211,,,,,211,211,211,211,211,211,211,,,211,,,,,,,211,,,211,211',
'211,211,211,211,211,211,211,211,,211,211,,211,211,211,,,,,,,,,,,,,,',
',,,,,211,,,211,,211,211,,,,,,,,,211,,,,,,,,211,,,,,211,211,211,211,211',
'211,,,,211,211,214,214,214,,214,,,211,214,214,,211,,214,211,214,214',
'214,214,214,214,214,,,,,214,214,214,214,214,214,214,,,214,,,,,,,214',
',,214,214,214,214,214,214,214,214,214,214,,214,214,,214,214,214,,,,',
',,,,,,,,,,,,,,,214,,,214,,,214,,,,,,,,,214,,,,,,,,214,,,,,214,214,214',
'214,214,214,,,,214,214,707,707,707,,707,,,214,707,707,,214,,707,214',
'707,707,707,707,707,707,707,,,,,707,707,707,707,707,707,707,,,707,,',
',,,,707,,,707,707,707,707,707,707,707,707,707,707,,707,707,,707,707',
'707,,,,,,,,,,,,,,,,,,,,707,,,707,,,707,,,,,,,,,707,,,,,,,,707,,,,,707',
'707,707,707,707,707,,,,707,707,216,216,216,,216,,,707,216,216,,707,',
'216,707,216,216,216,216,216,216,216,,,,,216,216,216,216,216,216,216',
',,216,,,,,,,216,,,216,216,216,216,216,216,216,216,216,216,,216,216,',
'216,216,216,,,,,,,,,,,,,,,,,,,,216,,,216,,,216,,,,,,,,,216,,,,,,,,216',
',,,,216,216,216,216,216,216,,,,216,216,217,217,217,,217,,,216,217,217',
',216,,217,216,217,217,217,217,217,217,217,,,,,217,217,217,217,217,217',
'217,,,217,,,,,,,217,,,217,217,217,217,217,217,217,217,217,217,,217,217',
',217,217,217,,,,,,,,,,,,,,,,,,,,217,,,217,,,217,,,,,,,,,217,,,,,,,,217',
',,,,217,217,217,217,217,217,,,,217,217,218,218,218,,218,,,217,218,218',
',217,,218,217,218,218,218,218,218,218,218,,,,,218,218,218,218,218,218',
'218,,,218,,,,,,,218,,,218,218,218,218,218,218,218,218,218,218,,218,218',
',218,218,218,,,,,,,,,,,,,,,,,,,,218,,,218,,,218,,,,,,,,,218,,,,,,,,218',
',,,,218,218,218,218,218,218,,,,218,218,219,219,219,,219,,,218,219,219',
',218,,219,218,219,219,219,219,219,219,219,,,,,219,219,219,219,219,219',
'219,,,219,,,,,,,219,,,219,219,219,219,219,219,219,219,219,219,,219,219',
',219,219,219,,,,,,,,,,,,,,,,,,,,219,,,219,,,219,,,,,,,,,219,,,,,,,,219',
',,,,219,219,219,219,219,219,,,,219,219,220,220,220,,220,,,219,220,220',
',219,,220,219,220,220,220,220,220,220,220,,,,,220,220,220,220,220,220',
'220,,,220,,,,,,,220,,,220,220,220,220,220,220,220,220,220,220,,220,220',
',220,220,220,,,,,,,,,,,,,,,,,,,,220,,,220,,,220,,,,,,,,,220,,,,,,,,220',
',,,,220,220,220,220,220,220,,,,220,220,221,221,221,,221,,,220,221,221',
',220,,221,220,221,221,221,221,221,221,221,,,,,221,221,221,221,221,221',
'221,,,221,,,,,,,221,,,221,221,221,221,221,221,221,221,221,221,,221,221',
',221,221,221,,,,,,,,,,,,,,,,,,,,221,,,221,,,221,,,,,,,,,221,,,,,,,,221',
',,,,221,221,221,221,221,221,,,,221,221,222,222,222,,222,,,221,222,222',
',221,,222,221,222,222,222,222,222,222,222,,,,,222,222,222,222,222,222',
'222,,,222,,,,,,,222,,,222,222,222,222,222,222,222,222,222,222,,222,222',
',222,222,222,,,,,,,,,,,,,,,,,,,,222,,,222,,,222,,,,,,,,,222,,,,,,,,222',
',,,,222,222,222,222,222,222,,,,222,222,223,223,223,,223,,,222,223,223',
',222,,223,222,223,223,223,223,223,223,223,,,,,223,223,223,223,223,223',
'223,,,223,,,,,,,223,,,223,223,223,223,223,223,223,223,223,223,,223,223',
',223,223,223,,,,,,,,,,,,,,,,,,,,223,,,223,,,223,,,,,,,,,223,,,,,,,,223',
',,,,223,223,223,223,223,223,,,,223,223,224,224,224,,224,,,223,224,224',
',223,,224,223,224,224,224,224,224,224,224,,,,,224,224,224,224,224,224',
'224,,,224,,,,,,,224,,,224,224,224,224,224,224,224,224,224,224,,224,224',
',224,224,224,,,,,,,,,,,,,,,,,,,,224,,,224,,,224,,,,,,,,,224,,,,,,,,224',
',,,,224,224,224,224,224,224,,,,224,224,225,225,225,,225,,,224,225,225',
',224,,225,224,225,225,225,225,225,225,225,,,,,225,225,225,225,225,225',
'225,,,225,,,,,,,225,,,225,225,225,225,225,225,225,225,225,225,,225,225',
',225,225,225,,,,,,,,,,,,,,,,,,,,225,,,225,,,225,,,,,,,,,225,,,,,,,,225',
',,,,225,225,225,225,225,225,,,,225,225,226,226,226,,226,,,225,226,226',
',225,,226,225,226,226,226,226,226,226,226,,,,,226,226,226,226,226,226',
'226,,,226,,,,,,,226,,,226,226,226,226,226,226,226,226,226,226,,226,226',
',226,226,226,,,,,,,,,,,,,,,,,,,,226,,,226,,,226,,,,,,,,,226,,,,,,,,226',
',,,,226,226,226,226,226,226,,,,226,226,227,227,227,,227,,,226,227,227',
',226,,227,226,227,227,227,227,227,227,227,,,,,227,227,227,227,227,227',
'227,,,227,,,,,,,227,,,227,227,227,227,227,227,227,227,227,227,,227,227',
',227,227,227,,,,,,,,,,,,,,,,,,,,227,,,227,,,227,,,,,,,,,227,,,,,,,,227',
',,,,227,227,227,227,227,227,,,,227,227,228,228,228,,228,,,227,228,228',
',227,,228,227,228,228,228,228,228,228,228,,,,,228,228,228,228,228,228',
'228,,,228,,,,,,,228,,,228,228,228,228,228,228,228,228,228,228,,228,228',
',228,228,228,,,,,,,,,,,,,,,,,,,,228,,,228,,,228,,,,,,,,,228,,,,,,,,228',
',,,,228,228,228,228,228,228,,,,228,228,229,229,229,,229,,,228,229,229',
',228,,229,228,229,229,229,229,229,229,229,,,,,229,229,229,229,229,229',
'229,,,229,,,,,,,229,,,229,229,229,229,229,229,229,229,229,229,,229,229',
',229,229,229,,,,,,,,,,,,,,,,,,,,229,,,229,,,229,,,,,,,,,229,,,,,,,,229',
',,,,229,229,229,229,229,229,,,,229,229,230,230,230,,230,,,229,230,230',
',229,,230,229,230,230,230,230,230,230,230,,,,,230,230,230,230,230,230',
'230,,,230,,,,,,,230,,,230,230,230,230,230,230,230,230,230,230,,230,230',
',230,230,230,,,,,,,,,,,,,,,,,,,,230,,,230,,,230,,,,,,,,,230,,,,,,,,230',
',,,,230,230,230,230,230,230,,,,230,230,231,231,231,,231,,,230,231,231',
',230,,231,230,231,231,231,231,231,231,231,,,,,231,231,231,231,231,231',
'231,,,231,,,,,,,231,,,231,231,231,231,231,231,231,231,231,231,,231,231',
',231,231,231,,,,,,,,,,,,,,,,,,,,231,,,231,,,231,,,,,,,,,231,,,,,,,,231',
',,,,231,231,231,231,231,231,,,,231,231,232,232,232,,232,,,231,232,232',
',231,,232,231,232,232,232,232,232,232,232,,,,,232,232,232,232,232,232',
'232,,,232,,,,,,,232,,,232,232,232,232,232,232,232,232,232,232,,232,232',
',232,232,232,,,,,,,,,,,,,,,,,,,,232,,,232,,,232,,,,,,,,,232,,,,,,,,232',
',,,,232,232,232,232,232,232,,,,232,232,233,233,233,,233,,,232,233,233',
',232,,233,232,233,233,233,233,233,233,233,,,,,233,233,233,233,233,233',
'233,,,233,,,,,,,233,,,233,233,233,233,233,233,233,233,233,233,,233,233',
',233,233,233,,,,,,,,,,,,,,,,,,,,233,,,233,,,233,,,,,,,,,233,,,,,,,,233',
',,,,233,233,233,233,233,233,,,,233,233,234,234,234,,234,,,233,234,234',
',233,,234,233,234,234,234,234,234,234,234,,,,,234,234,234,234,234,234',
'234,,,234,,,,,,,234,,,234,234,234,234,234,234,234,234,234,234,,234,234',
',234,234,234,,,,,,,,,,,,,,,,,,,,234,,,234,,,234,,,,,,,,,234,,,,,,,,234',
',,,,234,234,234,234,234,234,,,,234,234,235,235,235,,235,,,234,235,235',
',234,,235,234,235,235,235,235,235,235,235,,,,,235,235,235,235,235,235',
'235,,,235,,,,,,,235,,,235,235,235,235,235,235,235,235,235,235,,235,235',
',235,235,235,,,,,,,,,,,,,,,,,,,,235,,,235,,,235,,,,,,,,,235,,,,,,,,235',
',,,,235,235,235,235,235,235,,,,235,235,236,236,236,,236,,,235,236,236',
',235,,236,235,236,236,236,236,236,236,236,,,,,236,236,236,236,236,236',
'236,,,236,,,,,,,236,,,236,236,236,236,236,236,236,236,236,236,,236,236',
',236,236,236,,,,,,,,,,,,,,,,,,,,236,,,236,,,236,,,,,,,,,236,,,,,,,,236',
',,,,236,236,236,236,236,236,,,,236,236,237,237,237,,237,,,236,237,237',
',236,,237,236,237,237,237,237,237,237,237,,,,,237,237,237,237,237,237',
'237,,,237,,,,,,,237,,,237,237,237,237,237,237,237,237,237,237,,237,237',
',237,237,237,,,,,,,,,,,,,,,,,,,,237,,,237,,,237,,,,,,,,,237,,,,,,,,237',
',,,,237,237,237,237,237,237,,,,237,237,238,238,238,,238,,,237,238,238',
',237,,238,237,238,238,238,238,238,238,238,,,,,238,238,238,238,238,238',
'238,,,238,,,,,,,238,,,238,238,238,238,238,238,238,238,238,238,,238,238',
',238,238,238,,,,,,,,,,,,,,,,,,,,238,,,238,,,238,,,,,,,,,238,,,,,,,,238',
',,,,238,238,238,238,238,238,,,,238,238,239,239,239,,239,,,238,239,239',
',238,,239,238,239,239,239,239,239,239,239,,,,,239,239,239,239,239,239',
'239,,,239,,,,,,,239,,,239,239,239,239,239,239,239,239,239,239,,239,239',
',239,239,239,,,,,,,,,,,,,,,,,,,,239,,,239,,,239,,,,,,,,,239,,,,,,,,239',
',,,,239,239,239,239,239,239,,,,239,239,240,240,240,,240,,,239,240,240',
',239,,240,239,240,240,240,240,240,240,240,,,,,240,240,240,240,240,240',
'240,,,240,,,,,,,240,,,240,240,240,240,240,240,240,240,240,240,,240,240',
',240,240,240,,,,,,,,,,,,,,,,,,,,240,,,240,,,240,,,,,,,,,240,,,,,,,,240',
',,,,240,240,240,240,240,240,,,,240,240,241,241,241,,241,,,240,241,241',
',240,,241,240,241,241,241,241,241,241,241,,,,,241,241,241,241,241,241',
'241,,,241,,,,,,,241,,,241,241,241,241,241,241,241,241,241,241,,241,241',
',241,241,241,,,,,,,,,,,,,,,,,,,,241,,,241,,,241,,,,,,,,,241,,,,,,,,241',
',,,,241,241,241,241,241,241,,,,241,241,703,703,703,,703,,,241,703,703',
',241,,703,241,703,703,703,703,703,703,703,,,,,703,703,703,703,703,703',
'703,,,703,,,,,,,703,,,703,703,703,703,703,703,703,703,703,703,,703,703',
',703,703,703,,,,,,,,,,,,,,,,,,,,703,,,703,,,703,,,,,703,,,,703,,,,,',
',,703,,,,,703,703,703,703,703,703,,,,703,703,699,699,699,,699,,703,703',
'699,699,,703,,699,703,699,699,699,699,699,699,699,,,,,699,699,699,699',
'699,699,699,,,699,,,,,,,699,,,699,699,699,699,699,699,699,699,699,699',
',699,699,,699,699,699,,,,,,,,,,,,,,,,,,,,699,,,699,,,699,,,,,,,,,699',
',,,,,,,699,,,,,699,699,699,699,699,699,,,,699,699,698,698,698,,698,',
',699,698,698,,699,,698,699,698,698,698,698,698,698,698,,,,,698,698,698',
'698,698,698,698,,,698,,,,,,,698,,,698,698,698,698,698,698,698,698,698',
'698,,698,698,,698,698,698,,,,,,,,,,,,,,,,,,,,698,,,698,,,698,,,,,698',
',,,698,,,,,,,,698,,,,,698,698,698,698,698,698,,,,698,698,250,250,250',
',250,,,698,250,250,,698,,250,698,250,250,250,250,250,250,250,,,,,250',
'250,250,250,250,250,250,,,250,,,,,,,250,,,250,250,250,250,250,250,250',
'250,250,250,,250,250,,250,250,250,,,,,,,,,,,,,,,,,,,,250,,,250,,,250',
',,,,,,,,250,,,,,,,,250,,,,,250,250,250,250,250,250,,,,250,250,666,666',
'666,,666,,,250,666,666,,250,,666,250,666,666,666,666,666,666,666,,,',
',666,666,666,666,666,666,666,,,666,,,,,,,666,,,666,666,666,666,666,666',
'666,666,666,666,,666,666,,666,666,666,,,,,,,,,,,,,,,,,,,,666,,,666,',
',666,,,,,666,,,,666,,,,,,,,666,,,,,666,666,666,666,666,666,,,,666,666',
'252,252,252,,252,,,666,252,252,,666,,252,666,252,252,252,252,252,252',
'252,,,,,252,252,252,252,252,252,252,,,252,,,,,,,252,,,252,252,252,252',
'252,252,252,252,252,252,,252,252,,252,252,252,,,,,,,,,,,,,,,,,,,,252',
',,252,,,252,,,,,,,,,252,,,,,,,,252,,,,,252,252,252,252,252,252,,,,252',
'252,257,257,257,,257,,,252,257,257,,252,,257,252,257,257,257,257,257',
'257,257,,,,,257,257,257,257,257,257,257,,,257,,,,,,,257,,,257,257,257',
'257,257,257,257,257,257,257,,257,257,,257,257,257,,,,,,,,,,,,,,,,,,',
',257,,,257,,,257,,,,,,,,,257,,,,,,,,257,,,,,257,257,257,257,257,257',
',,,257,257,660,660,660,,660,,,257,660,660,,257,,660,257,660,660,660',
'660,660,660,660,,,,,660,660,660,660,660,660,660,,,660,,,,,,,660,,,660',
'660,660,660,660,660,660,660,660,660,,660,660,,,864,660,864,864,864,864',
',,,,,,,,,,,,,,,660,,,660,,,660,,,,,,,,,,864,864,,,,,,,864,864,864,864',
'660,660,660,660,660,660,,,,660,660,508,508,508,,508,,,660,508,508,,660',
',508,660,508,508,508,508,508,508,508,,,,,508,508,508,508,508,508,508',
',,508,,,,,,,508,,,508,508,508,508,508,508,508,508,508,508,,508,508,',
'508,508,508,,,,,,,,,,,,,,,,,,,,508,,,508,,,508,,,,,,,,,508,,,,,,,,508',
',,,,508,508,508,508,508,508,,,,508,508,509,509,509,,509,,,508,509,509',
',508,,509,508,509,509,509,509,509,509,509,,,,,509,509,509,509,509,509',
'509,,,509,,,,,,,509,,,509,509,509,509,509,509,509,509,509,509,,509,509',
',509,509,509,,,,,,,,,,,,,,,,,,,,509,,,509,,,509,,,,,,,,,509,,,,,,,,509',
',,,,509,509,509,509,509,509,,,,509,509,263,263,263,,263,,,509,263,263',
',509,,263,509,263,263,263,263,263,263,263,,,,,263,263,263,263,263,263',
'263,,,263,,,,,,,263,,,263,263,263,263,263,263,263,263,263,263,,263,263',
',263,263,263,,,,,,,,,,,,,,,,,,,,263,,,263,,,263,,,,,263,,263,,263,,',
',,,,,263,,,,,263,263,263,263,263,263,,,,263,263,264,264,264,,264,,263',
'263,264,264,,263,,264,263,264,264,264,264,264,264,264,,,,,264,264,264',
'264,264,264,264,,,264,,,,,,,264,,,264,264,264,264,264,264,264,264,264',
'264,,264,264,,264,264,264,,,,,,,,,,,,,,,,,,,,264,,,264,,,264,,,,,264',
',264,,264,,,,,,,,264,,,,,264,264,264,264,264,264,,,,264,264,272,272',
'272,,272,,264,264,272,272,,264,,272,264,272,272,272,272,272,272,272',
',,,,272,272,272,272,272,272,272,,,272,,,,,,,272,,,272,272,272,272,272',
'272,272,272,272,272,,272,272,,272,272,272,,,,,,,,,,,,,,,,,,,,272,,,272',
',272,272,,,,,272,,272,,272,,,,,,,,272,,,,,272,272,272,272,272,272,,',
',272,272,345,345,345,,345,,272,272,345,345,,272,,345,272,345,345,345',
'345,345,345,345,,,,,345,345,345,345,345,345,345,,,345,,,,,,,345,,,345',
'345,345,345,345,345,345,345,345,345,,345,345,,345,345,345,,,,,,,,,,',
',,,,,,,,,345,,,345,,,345,,,,,,,,,345,,,,,,,,345,,,,,345,345,345,345',
'345,345,,,,345,345,650,650,650,,650,,,345,650,650,,345,,650,345,650',
'650,650,650,650,650,650,,,,,650,650,650,650,650,650,650,,,650,,,,,,',
'650,,,650,650,650,650,650,650,650,650,650,650,,650,650,,,,650,,,,,,',
',,,,,,,,,,,,,650,,,650,,,650,,,,,,,,,,,,,,,,,,,,,,650,650,650,650,650',
'650,,,,650,650,646,646,646,646,646,,,650,646,646,,650,,646,650,646,646',
'646,646,646,646,646,,,,,646,646,646,646,646,646,646,,,646,,,,,,646,646',
',646,646,646,646,646,646,646,646,646,646,646,,646,646,,646,646,646,',
',,,,,,,,,,,,,,,,,,646,,,646,,,646,,,,,646,,,,646,,,,,,,,646,,,,,646',
'646,646,646,646,646,,,,646,646,276,276,276,276,276,,,646,276,276,,646',
',276,646,276,276,276,276,276,276,276,,,,,276,276,276,276,276,276,276',
',,276,,,,,,276,276,,276,276,276,276,276,276,276,276,276,276,276,,276',
'276,,276,276,276,,,,,,,,,,,,,,,,,,,,276,,,276,,,276,,,,,276,,,,276,',
',,,,,,276,,,,,276,276,276,276,276,276,,,,276,276,645,645,645,645,645',
',,276,645,645,,276,,645,276,645,645,645,645,645,645,645,,,,,645,645',
'645,645,645,645,645,,,645,,,,,,645,645,,645,645,645,645,645,645,645',
'645,645,645,645,,645,645,,645,645,645,,,,,,,,,,,,,,,,,,,,645,,,645,',
',645,,,,,645,,,,645,,,,,,,,645,,,,,645,645,645,645,645,645,,,,645,645',
'639,639,639,,639,,,645,639,639,,645,,639,645,639,639,639,639,639,639',
'639,,,,,639,639,639,639,639,639,639,,,639,,,,,,,639,,,639,639,639,639',
'639,639,639,639,639,639,,639,639,,639,639,639,,,,,,,,,,,,,,,,,,,,639',
',,639,,,639,,,,,639,,639,,639,,,,,,,,639,,,,,639,639,639,639,639,639',
',,,639,639,633,633,633,633,633,,639,639,633,633,,639,,633,639,633,633',
'633,633,633,633,633,,,,,633,633,633,633,633,633,633,,,633,,,,,,633,633',
',633,633,633,633,633,633,633,633,633,633,633,,633,633,,633,633,633,',
',,,,,,,,,,,,,,,,,,633,,,633,,,633,,,,,633,,,,633,,,,,,,,633,,,,,633',
'633,633,633,633,633,,,,633,633,280,280,280,,280,,,633,280,280,,633,',
'280,633,280,280,280,280,280,280,280,,,,,280,280,280,280,280,280,280',
',,280,,,,,615,,280,,,280,280,280,280,280,280,280,280,280,280,,280,280',
',,,280,615,615,615,615,615,615,615,615,615,615,615,,615,615,,,615,615',
',280,,,280,,,280,,,,,,615,,615,,615,615,615,615,615,615,615,,615,,,',
'280,280,280,280,280,280,,,,280,280,,615,,280,,,,280,,,,280,,,280,281',
'281,281,281,281,,,,281,281,,,,281,,281,281,281,281,281,281,281,,,,,281',
'281,281,281,281,281,281,,,281,,,,,,281,281,,281,281,281,281,281,281',
'281,281,281,281,281,,281,281,,281,281,281,,,,,,,,,,,,,,,,,,,,281,,,281',
',,281,,,,,281,,,,281,,,,,,,,281,,,,,281,281,281,281,281,281,,,,281,281',
'625,625,625,,625,,,281,625,625,,281,,625,281,625,625,625,625,625,625',
'625,,,,,625,625,625,625,625,625,625,,,625,,,,,,,625,,,625,625,625,625',
'625,625,625,625,625,625,,625,625,,625,625,625,,,,,,,,,,,,,,,,,,,,625',
',,625,,,625,,,,,,,,,625,,,,,,,,625,,,,,625,625,625,625,625,625,,,,625',
'625,621,621,621,621,621,,,625,621,621,,625,,621,625,621,621,621,621',
'621,621,621,,,,,621,621,621,621,621,621,621,,,621,,,,,,621,621,,621',
'621,621,621,621,621,621,621,621,621,621,,621,621,,621,621,621,,,,,,',
',,,,,,,,,,,,,621,,,621,,,621,,,,,621,,,,621,,,,,,,,621,,,,,621,621,621',
'621,621,621,,,,621,621,617,617,617,,617,,,621,617,617,,621,,617,621',
'617,617,617,617,617,617,617,,,,,617,617,617,617,617,617,617,,,617,,',
',,,,617,,,617,617,617,617,617,617,617,617,617,617,,617,617,,617,617',
'617,,,,,,,,,,,,,,,,,,,,617,,,617,,,617,,,,,,,,,617,,,,,,,,617,,,,,617',
'617,617,617,617,617,,,,617,617,344,344,344,,344,,,617,344,344,,617,',
'344,617,344,344,344,344,344,344,344,,,,,344,344,344,344,344,344,344',
',,344,,,,,,,344,,,344,344,344,344,344,344,344,344,344,344,,344,344,',
'344,344,344,461,461,461,461,461,461,461,461,461,461,461,,461,461,,,461',
'461,,344,,,344,,,344,,,,,,461,,461,344,461,461,461,461,461,461,461,344',
'461,,,,344,344,344,344,344,344,,613,,344,344,,461,461,613,613,613,,344',
'613,613,613,344,613,,344,,,,,,,,613,613,,,,,,,,613,613,,613,613,613',
'613,613,,,,,,,,,,,,,,,,,,,,,,613,613,613,613,613,613,613,613,613,613',
'613,613,613,613,,,613,613,613,,613,613,,,613,,,613,,613,,613,,613,,613',
'613,613,613,613,613,613,,613,,613,,,,,,,,,,,,,613,613,613,613,,613,612',
',,,613,,613,612,612,612,,,612,612,612,,612,,,,,,,,,612,612,612,,,,,',
',,612,612,,612,612,612,612,612,,,,,,,,,,,,,,,,,,,,,,612,612,612,612',
'612,612,612,612,612,612,612,612,612,612,,,612,612,612,,612,612,,,612',
',,612,,612,,612,,612,,612,612,612,612,612,612,612,,612,612,612,,,,,',
',,,,,,,612,612,612,612,,612,,510,510,510,612,510,612,,,510,510,,,,510',
',510,510,510,510,510,510,510,,,,,510,510,510,510,510,510,510,,,510,',
',,,,,510,,,510,510,510,510,510,510,510,510,510,510,,510,510,,510,510',
'510,,,,,,,,,,,,,,,,,,,,510,,,510,,,510,,,,,,,,,510,,,,,,,,510,,,,,510',
'510,510,510,510,510,,,,510,510,609,609,609,,609,,,510,609,609,,510,',
'609,510,609,609,609,609,609,609,609,,,,,609,609,609,609,609,609,609',
',,609,,,,,,,609,,,609,609,609,609,609,609,609,609,609,609,,609,609,',
'609,609,609,,,,,,,,,,,,,,,,,,,,609,,,609,,,609,,,,,,,,,609,,,,,,,,609',
',,,,609,609,609,609,609,609,,,,609,609,606,606,606,,606,,,609,606,606',
',609,,606,609,606,606,606,606,606,606,606,,,,,606,606,606,606,606,606',
'606,,,606,,,,,,,606,,,606,606,606,606,606,606,606,606,606,606,,606,606',
',606,606,606,,,,,,,,,,,,,,,,,,,,606,,,606,,,606,,,,,,,,,606,,,,,,,,606',
',,,,606,606,606,606,606,606,,,,606,606,293,293,293,,293,,,606,293,293',
',606,,293,606,293,293,293,293,293,293,293,,,,,293,293,293,293,293,293',
'293,,,293,,,,,,,293,,,293,293,293,293,293,293,293,293,293,293,,293,293',
',,,293,,,,,,,,,,,,,,,,,,,,293,,,293,,,293,,,,,,,,,,,,,,,,,,,,,,293,293',
'293,293,293,293,,,,293,293,601,601,601,,601,,,293,601,601,,293,,601',
'293,601,601,601,601,601,601,601,,,,,601,601,601,601,601,601,601,,,601',
',,,,,,601,,,601,601,601,601,601,601,601,601,601,601,,601,601,,601,601',
'601,,,,,,,,,,,,,,,,,,,,601,,,601,,,601,,,,,,,,,601,,,,,,,,601,,,,,601',
'601,601,601,601,601,,,,601,601,600,600,600,,600,,,601,600,600,,601,',
'600,601,600,600,600,600,600,600,600,,,,,600,600,600,600,600,600,600',
',,600,,,,,,,600,,,600,600,600,600,600,600,600,600,600,600,,600,600,',
'600,600,600,,,,,,,,,,,,,,,,,,,,600,,,600,,,600,,,,,,,,,600,,,,,,,,600',
',,,,600,600,600,600,600,600,,,,600,600,598,598,598,,598,,,600,598,598',
',600,,598,600,598,598,598,598,598,598,598,,,,,598,598,598,598,598,598',
'598,,,598,,,,,,,598,,,598,598,598,598,598,598,598,598,598,598,,598,598',
',598,598,598,,,,,,,,,,,,,,,,,,,,598,,,598,,,598,,,,,598,,,,598,,,,,',
',,598,,,,,598,598,598,598,598,598,,,,598,598,596,596,596,,596,,,598',
'596,596,,598,,596,598,596,596,596,596,596,596,596,,,,,596,596,596,596',
'596,596,596,,,596,,,,,,,596,,,596,596,596,596,596,596,596,596,596,596',
',596,596,,596,596,596,,,,,,,,,,,,,,,,,,,,596,,,596,,,596,,,,,,,,,596',
',,,,,,,596,,,,,596,596,596,596,596,596,,,,596,596,514,514,514,,514,',
',596,514,514,,596,,514,596,514,514,514,514,514,514,514,,,,,514,514,514',
'514,514,514,514,,,514,,,,,,,514,,,514,514,514,514,514,514,514,514,514',
'514,,514,514,,514,514,514,,,,,,,,,,,,,,,,,,,,514,,,514,,,514,,,,,,,',
',514,,,,,,,,514,,,,,514,514,514,514,514,514,,,,514,514,302,302,302,',
'302,,,514,302,302,,514,,302,514,302,302,302,302,302,302,302,,,,,302',
'302,302,302,302,302,302,,,302,,,,,,,302,,,302,302,302,302,302,302,302',
'302,302,302,,302,302,,302,302,302,,,,,,,,,,,,,,,,,,,,302,,,302,302,',
'302,,,,,,,,,302,,,,,,,,302,,,,,302,302,302,302,302,302,,,,302,302,304',
'304,304,304,304,,,302,304,304,,302,,304,302,304,304,304,304,304,304',
'304,,,,,304,304,304,304,304,304,304,,,304,,,,,,304,304,,304,304,304',
'304,304,304,304,304,304,304,304,,304,304,,304,304,304,,,,,,,,,,,,,,',
',,,,,304,,,304,,,304,,,,,304,,,,304,,,,,,,,304,,,,,304,304,304,304,304',
'304,,,,304,304,520,520,520,,520,,,304,520,520,,304,,520,304,520,520',
'520,520,520,520,520,,,,,520,520,520,520,520,520,520,,,520,,,,,,,520',
',,520,520,520,520,520,520,520,520,520,520,,520,520,,520,520,520,,,,',
',,,,,,,,,,,,,,,520,,,520,,,520,,,,,520,,,,520,,,,,,,,520,,,,,520,520',
'520,520,520,520,,,,520,520,523,523,523,,523,,520,520,523,523,,520,,523',
'520,523,523,523,523,523,523,523,,,,,523,523,523,523,523,523,523,,,523',
',,,,,,523,,,523,523,523,523,523,523,523,523,523,523,,523,523,,523,523',
'523,,,,,,,,,,,,,,,,,,,,523,,,523,,,523,,,,,,,,,523,,,,,,,,523,,,,,523',
'523,523,523,523,523,,,,523,523,569,569,569,,569,,523,523,569,569,,523',
',569,523,569,569,569,569,569,569,569,,,,,569,569,569,569,569,569,569',
',,569,,,,,,,569,,,569,569,569,569,569,569,569,569,569,569,,569,569,',
'569,569,569,,,,,,,,,,,,,,,,,,,,569,,,569,,,569,,,,,,,,,569,,,,,,,,569',
',,,,569,569,569,569,569,569,,,,569,569,525,525,525,,525,,,569,525,525',
',569,,525,569,525,525,525,525,525,525,525,,,,,525,525,525,525,525,525',
'525,,,525,,,,,,,525,,,525,525,525,525,525,525,525,525,525,525,,525,525',
',525,525,525,,,,,,,,,,,,,,,,,,,,525,,,525,,,525,,,,,525,,,,525,,,,,',
',,525,,,,,525,525,525,525,525,525,,,,525,525,530,530,530,530,530,,,525',
'530,530,,525,,530,525,530,530,530,530,530,530,530,,,,,530,530,530,530',
'530,530,530,,,530,,,,,,530,530,,530,530,530,530,530,530,530,530,530',
'530,530,,530,530,,530,530,530,,,,,,,,,,,,,,,,,,,,530,,,530,,,530,,,',
',530,,,,530,,,,,,,,530,,,,,530,530,530,530,530,530,,,,530,530,560,560',
'560,560,560,,,530,560,560,,530,,560,530,560,560,560,560,560,560,560',
',,,,560,560,560,560,560,560,560,,,560,,,,,,560,560,,560,560,560,560',
'560,560,560,560,560,560,560,,560,560,,560,560,560,,,,,,,,,,,,,,,,,,',
',560,,,560,,,560,,,,,560,,,,560,,,,,,,,560,,,,,560,560,560,560,560,560',
',,,560,560,531,531,531,531,531,,,560,531,531,,560,,531,560,531,531,531',
'531,531,531,531,,,,,531,531,531,531,531,531,531,,,531,,,,,,531,531,',
'531,531,531,531,531,531,531,531,531,531,531,,531,531,,531,531,531,,',
',,,,,,,,,,,,,,,,,531,,,531,,,531,,,,,531,,,,531,,,,,,,,531,,,,,531,531',
'531,531,531,531,,,,531,531,537,537,537,,537,,,531,537,537,,531,,537',
'531,537,537,537,537,537,537,537,,,,,537,537,537,537,537,537,537,,,537',
',,,,,,537,,,537,537,537,537,537,537,537,537,537,537,,537,537,,,,537',
',,,,,,,,,,,,,,,,,,,537,,,537,,,537,,,,,,,,,,,,,,,,,,,,,,537,537,537',
'537,537,537,,,,537,537,555,555,555,555,555,,,537,555,555,,537,,555,537',
'555,555,555,555,555,555,555,,,,,555,555,555,555,555,555,555,,,555,,',
',,,555,555,,555,555,555,555,555,555,555,555,555,555,555,,555,555,,555',
'555,555,,,,,,,,,,,,,,,,,,,,555,,,555,,,555,,,,,555,,,,555,,,,,,,,555',
',,,,555,555,555,555,555,555,,,,555,555,789,789,789,789,789,,,555,789',
'789,,555,,789,555,789,789,789,789,789,789,789,,,,,789,789,789,789,789',
'789,789,,,789,,,,,,789,789,,789,789,789,789,789,789,789,789,789,789',
'789,,789,789,,789,789,789,737,737,737,737,737,737,737,737,737,737,737',
',737,737,,,737,737,,789,,,789,,,789,,,,,789,737,,737,789,737,737,737',
'737,737,737,737,789,737,,,,789,789,789,789,789,789,,28,,789,789,,737',
',28,28,28,,789,28,28,28,789,28,,789,,,,,,,,28,28,,,,,,,,28,28,,28,28',
'28,28,28,,,,,,,,,,,,,,,,,,,,,,28,28,28,28,28,28,28,28,28,28,28,28,28',
'28,,,28,28,28,,,28,,28,28,,,28,,28,,28,,28,,28,28,28,28,28,28,28,,28',
',28,,,,,,,,,,,,27,28,28,28,28,,28,27,27,27,,28,27,27,27,,27,,,,,,,,',
'27,27,27,,,,,,,,27,27,,27,27,27,27,27,,,,,,,,,,,,,,,,,,,,,,27,27,27',
'27,27,27,27,27,27,27,27,27,27,27,,,27,27,27,,,27,,27,27,,,27,,27,,27',
',27,,27,27,27,27,27,27,27,,27,27,27,,,,,,,,,,,,413,27,27,27,27,,27,413',
'413,413,,27,413,413,413,,413,,,,,,,,,413,413,413,,,,,,,,413,413,,413',
'413,413,413,413,,,,,,,,,,,,,,,,,,,,,,413,413,413,413,413,413,413,413',
'413,413,413,413,413,413,,,413,413,413,,,413,,413,413,,,413,,413,,413',
',413,,413,413,413,413,413,413,413,,413,413,413,,,,,,,,,,,,50,413,413',
'413,413,,413,50,50,50,,413,50,50,50,,50,,,,,,,,,,50,50,,,,,,,,50,50',
',50,50,50,50,50,,,,,,,,,,,,,,,,,,,,,,50,50,50,50,50,50,50,50,50,50,50',
'50,50,50,,,50,50,50,,,50,,,50,,,50,,50,,50,,50,,50,50,50,50,50,50,50',
',50,,50,,,,,,,,,,,,,50,50,50,50,475,50,,,50,50,50,475,475,475,,472,475',
'475,475,,475,,472,472,472,,,472,472,472,475,472,,,,,,,,475,475,472,475',
'475,475,475,475,,,,472,472,,472,472,472,472,472,,,,,,,,,,,,,,,,,,,,',
',475,,,,,,,475,,,,472,475,475,,,,,472,,,,,472,472,,,,,,,,,,475,,,,,',
',,,,,472,,475,,475,,,475,,,,,,472,,472,,,472,7,7,7,7,7,7,7,7,7,7,7,7',
'7,7,7,7,7,7,7,7,7,7,7,7,,,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7',
'7,7,7,,7,,,,,,,,7,7,,7,7,7,7,7,7,7,,,7,,,,,7,7,7,7,,,,,,,,,,,,,7,7,',
'7,7,7,7,7,7,7,7,7,7,7,,,7,7,,,,,,,,,,7,397,397,397,397,397,397,397,397',
'397,397,397,397,397,397,397,397,397,397,397,397,397,397,397,397,,,397',
'397,397,397,397,397,397,397,397,397,397,397,397,397,397,397,397,397',
'397,397,397,397,397,,,397,,,,,,,,397,397,,397,397,397,397,397,397,397',
',,397,,,,,397,397,397,397,,,,,,,,,,,,,397,397,,397,397,397,397,397,397',
'397,397,397,397,397,,,397,397,,,,,,,,,,397,8,8,8,8,8,8,8,8,8,8,8,8,8',
'8,8,8,8,8,8,8,8,8,8,8,,,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8',
'8,,,8,,,,,,,,8,8,,8,8,8,8,8,8,8,,,8,,,,,8,8,8,8,,,,,,,,,,,,,8,8,,8,8',
'8,8,8,8,8,8,8,8,8,,,8,8,,,,,,,,,,8,393,393,393,393,393,393,393,393,393',
'393,393,393,393,393,393,393,393,393,393,393,393,393,393,393,,,393,393',
'393,393,393,393,393,393,393,393,393,393,393,393,393,393,393,393,393',
'393,393,393,393,,,393,,,,,,,,393,393,,393,393,393,393,393,393,393,,',
'393,,,,,393,393,393,393,,,,,,,,,,,,,393,393,,393,393,393,393,393,393',
'393,393,393,393,393,,,393,393,,,,,,,,,,393,720,720,720,720,720,720,720',
'720,720,720,720,720,720,720,720,720,720,720,720,720,720,720,720,720',
',,720,720,720,720,720,720,720,720,720,720,720,720,720,720,720,720,720',
'720,720,720,720,720,720,,,720,,,,,,,,720,720,,720,720,720,720,720,720',
'720,,,720,,,,,720,720,720,720,,,,,,,,,,,,,720,720,,720,720,720,720,720',
'720,720,720,720,720,720,,,720,65,65,65,65,65,65,65,65,65,65,65,65,65',
'65,65,65,65,65,65,65,65,65,65,65,,,65,65,65,65,65,65,65,65,65,65,65',
'65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,,,,,,,65,65,,65,65,65',
'65,65,65,65,,,65,,,,,65,65,65,65,,,,,,65,,,,,,,65,65,,65,65,65,65,65',
'65,65,65,65,65,65,,,65,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79',
'79,79,79,79,79,79,79,79,79,,,79,79,79,79,79,79,79,79,79,79,79,79,79',
'79,79,79,79,79,79,79,79,79,79,79,79,79,79,,,,,,,79,79,,79,79,79,79,79',
'79,79,,,79,,,,,79,79,79,79,,,,,,,,,,,,,79,79,,79,79,79,79,79,79,79,79',
'79,79,79,,,79,190,190,190,190,190,190,190,190,190,190,190,190,190,190',
'190,190,190,190,190,190,190,190,190,190,,,190,190,190,190,190,190,190',
'190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190',
'190,190,190,,,,,,,190,190,,190,190,190,190,190,190,190,,,190,,,,,190',
'190,190,190,,,,,,,,,,,,,190,190,,190,190,190,190,190,190,190,190,190',
'190,190,638,638,190,,638,,,,,,,,638,638,,638,638,638,638,638,638,638',
',,638,,,,,638,638,638,638,,,,,,,,,,,,,638,638,,638,638,638,638,638,638',
'638,638,638,638,638,511,511,638,,511,,,,,,,,511,511,,511,511,511,511',
'511,511,511,,,511,,,,,511,511,511,511,,,,,,511,,,,,,,511,511,,511,511',
'511,511,511,511,511,511,511,511,511,637,637,511,,637,,,,,,,,637,637',
',637,637,637,637,637,637,637,,,637,,,,,637,637,637,637,,,,,,,,,,,,,637',
'637,,637,637,637,637,637,637,637,637,637,637,637,512,512,637,,512,,',
',,,,,512,512,,512,512,512,512,512,512,512,,,512,,,,,512,512,512,512',
',,,,,,,,,,,,512,512,,512,512,512,512,512,512,512,512,512,512,512,501',
'501,512,,501,,,,,,,,501,501,,501,501,501,501,501,501,501,,,501,,,,,501',
'501,501,501,,,,,,,,,,,,,501,501,,501,501,501,501,501,501,501,501,501',
'501,501,893,893,501,,893,,,,,,,,893,893,,893,893,893,893,893,893,893',
',,893,,,,,893,893,893,893,,,,,,,,,,,,,893,893,,893,893,893,893,893,893',
'893,893,893,893,893,892,892,893,,892,,,,,,,,892,892,,892,892,892,892',
'892,892,892,,,892,,,,,892,892,892,892,,,,,,892,,,,,,,892,892,,892,892',
'892,892,892,892,892,892,892,892,892,,,892,640,640,640,640,640,640,640',
'640,640,640,640,,640,640,,,640,640,,,,,,,,,,,,,,640,,640,,640,640,640',
'640,640,640,640,,640,,,,,,,261,261,,,261,,,,,640,,640,261,261,,261,261',
'261,261,261,261,261,,,261,,,,,261,261,261,261,,,,,,,,,,,,,261,261,,261',
'261,261,261,261,261,261,261,261,261,261,704,704,261,,704,,,,,,,,704',
'704,,704,704,704,704,704,704,704,,,704,,,,,704,704,704,704,,,,,,704',
',,,,,,704,704,,704,704,704,704,704,704,704,704,704,704,704,427,427,704',
',427,,,,,,,,427,427,,427,427,427,427,427,427,427,,,427,,,,,427,427,427',
'427,,,,,,427,,,,,,,427,427,,427,427,427,427,427,427,427,427,427,427',
'427,428,428,427,,428,,,,,,,,428,428,,428,428,428,428,428,428,428,,,428',
',,,,428,428,428,428,,,,,,,,,,,,,428,428,,428,428,428,428,428,428,428',
'428,428,428,428,199,199,428,,199,,,,,,,,199,199,,199,199,199,199,199',
'199,199,,,199,,,,,199,199,199,199,,,,,,,,,,,,,199,199,,199,199,199,199',
'199,199,199,199,199,199,199,702,702,199,,702,,,,,,,,702,702,,702,702',
'702,702,702,702,702,,,702,,,,,702,702,702,702,,,,,,,,,,,,,702,702,,702',
'702,702,702,702,702,702,702,702,702,702,500,500,702,,500,,,,,,,,500',
'500,,500,500,500,500,500,500,500,,,500,,,,,500,500,500,500,,,,,,500',
',,,,,,500,500,,500,500,500,500,500,500,500,500,500,500,500,776,776,500',
',776,,,,,,,,776,776,,776,776,776,776,776,776,776,,,776,,,,,776,776,776',
'776,,,,,,,,,,,,,776,776,,776,776,776,776,776,776,776,776,776,776,776',
'198,198,776,,198,,,,,,,,198,198,,198,198,198,198,198,198,198,,,198,',
',,,198,198,198,198,,,,,,198,,,,,,,198,198,,198,198,198,198,198,198,198',
'198,198,198,198,260,260,198,,260,,,,,,,,260,260,,260,260,260,260,260',
'260,260,,,260,,,,,260,260,260,260,,,,,,,,,,,,,260,260,,260,260,260,260',
'260,260,260,260,260,260,260,,,260,513,513,513,513,513,513,513,513,513',
'513,513,,513,513,,,513,513,,,,,,,,,,,,,,513,,513,,513,513,513,513,513',
'513,513,,513,245,245,245,245,245,245,245,245,245,245,245,,245,245,,513',
'245,245,,,,,,,,,,,,,,245,,245,,245,245,245,245,245,245,245,,245,409',
'409,409,409,409,409,409,409,409,409,409,,409,409,,245,409,409,,,,,,',
',,,,,,,409,,409,,409,409,409,409,409,409,409,,409,739,739,739,739,739',
'739,739,739,739,739,739,,739,739,,409,739,739,,,,,,,,,,,,,,739,,739',
',739,739,739,739,739,739,739,,739,661,661,661,661,661,661,661,661,661',
'661,661,,661,661,,739,661,661,,,,,,,,,,,,,,661,,661,,661,661,661,661',
'661,661,661,,661,734,734,734,734,734,734,734,734,734,734,734,,734,734',
',661,734,734,,,,,,,,,,,,,,734,,734,,734,734,734,734,734,734,734,,734',
'424,424,424,424,424,424,424,424,424,424,424,,424,424,,734,424,424,,',
',,,,,,,,,,,424,,424,,424,424,424,424,424,424,424,,424,744,744,744,744',
'744,744,744,744,744,744,744,,744,744,,424,744,744,,,,,,,,,,,,,,744,',
'744,,744,744,744,744,744,744,744,,744,732,732,732,732,732,732,732,732',
'732,732,732,,732,732,,744,732,732,,,,,,,,,,,,,,732,,732,,732,732,732',
'732,732,732,732,,732,19,19,19,19,19,19,19,19,19,19,19,,19,19,,732,19',
'19,,,,,,,,,,,,,,19,,19,,19,19,19,19,19,19,19,,19,727,727,727,727,727',
'727,727,727,727,727,727,,727,727,,19,727,727,,,,,,,,,,,,,,727,,727,',
'727,727,727,727,727,727,727,,727,823,823,823,823,823,823,823,823,823',
'823,823,,823,823,,727,823,823,,,,,,,,,,,,,,823,,823,,823,823,823,823',
'823,823,823,,823,,,,,,,,,,,,,,,,823' ]
        racc_action_check = arr = ::Array.new(22457, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_action_pointer = [
    -2,  1074,   nil,   501,   nil,   835,   939, 19939, 20179,   928,
   894,   888,   928,   282,   227,   386,   nil,  1639,  1759, 22245,
   964,   nil,  2119,  2239,  2359,    -4,   118, 19434, 19313,   nil,
  2959,  3079,  3199,   nil,   860,   379,   926,   406,  3799,  3919,
  4039,   822,   465,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
 19676,   nil,  4519,  4639,  4759,     9,  3332,  5119,  5239,   nil,
   nil,  5359,  5487,   811,   nil, 20528,   nil,   nil,   nil,   nil,
   nil,   -37,   nil,   nil,   nil,   nil,   nil,   763,   744, 20637,
   nil,   nil,   nil,  6327,   nil,   nil,  6447,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   842,   nil,  6687,   nil,
   nil,   nil,  6807,  6927,  7047,  7167,  7287,  7407,   nil,   708,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
 20746,   673,   nil,  7887,  8007,  8127,  8247,  8367, 21743, 21507,
  8727,  8847,  8967,   nil,   111,   122,   703,   112,   580,   609,
  9807,  9927,   nil,   nil, 10047,   569, 10287, 10407, 10527, 10647,
 10767, 10887, 11007, 11127, 11247, 11367, 11487, 11607, 11727, 11847,
 11967, 12087, 12207, 12327, 12447, 12567, 12687, 12807, 12927, 13047,
 13167, 13287,   nil,   nil,   nil, 21893,   nil,   460,   458,   nil,
 13767,   284, 14007,   nil,   nil,   nil,   nil, 14127,   nil,   nil,
 21802, 21271,    51, 14607, 14727,   nil,   nil,   nil,   nil,   nil,
   nil,   nil, 14847,   532,   826,   698, 15327,   795,   906,   890,
 15807, 15942,   454,   434,   934,   432,   136,   127,   -13,   nil,
   231,   499,   nil, 17155,   nil,   301,   416,   474,   320,   nil,
   568,   nil, 17875,   nil, 17995,     3,   nil,   525,   356,   -85,
   630,    35,   649,   nil,   -57,   nil,   nil,   538,  9340,   nil,
   nil,   nil,   662,   662,   nil,   672,   679,   nil,   nil,   nil,
   nil,   nil,   nil,   694,   nil,   nil,   nil,   757,   nil,   nil,
   832,   608,    67,    87, 16422, 14967,   564,   245,   768,   892,
  7647,   nil,  6207,   274,   337,   322,   457,   449,   448,   520,
   103,   nil,   170,   nil,   nil,  2719,   nil,   164,   nil,   160,
   nil,   -24,   908,   281,   nil,   919,   -43,   nil,   168,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   966, 20299,   nil,   nil,   nil, 20059,   969,   nil,
   nil,  5359,   nil,   118,   941,   nil,   940,   nil,   nil, 21937,
   955,   -61,   233, 19555,   nil,   nil,   nil,   228,   950,   306,
   nil,   559,   679,   nil, 22113,   nil,   nil, 21389, 21448,  1159,
   128,  2599,  2839,  3439,   -11,   nil,  2359,  1519,   530,   420,
   947,   945,   943,   942,  2832,  2712,  2592,  1039,  1759,   919,
  2479,  1879,  1639,  1399,  1279,  1159,  2239,   807,   799,  2119,
  1999, 16422,   216,   nil,  4399,   nil,   nil,  4879,   nil,  4999,
   nil,   nil, 19813,   nil,   nil, 19802,   186,   nil,   916,   881,
   357,   867,   961,   nil,   nil,  5607,    58,   235,   896,   nil,
   nil,  5727,   866,   808,   nil,   nil,   806,  9327,   816,  9687,
 21625, 21041,   452,   805,   nil,   nil,   765,   nil, 14367, 14487,
 16795, 20864, 20982, 21849, 17755,   852,   825,   723,   nil,   nil,
 18115,   nil,   nil, 18235,   nil, 18475,   nil,   nil,   nil,   nil,
 18595, 18835,   701,   nil,   567,   nil,   nil, 18955,  7660,   nil,
   570,   nil,   nil,   690,   nil,   786,   nil,   651,   584,   nil,
   nil,  5847,   755,   nil,   nil, 19075,    75,    32,   709,   713,
 18715,   nil,   nil,   343,   607,   nil,   140,   nil,    61, 18355,
   nil,  5500,   nil,   nil,   nil,    31,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   101,   nil,   nil,   nil,
   498,   nil,   nil,   nil,   nil,   nil, 17635,   476, 17515,   259,
 17395, 17275,   330,   nil,   nil,   nil, 17035,   231,   nil, 16915,
   200,   156, 16668, 16540,    35, 15807,   nil, 16302,   nil,  3092,
   nil, 16182,   419,   nil,   676, 16062,   nil,   870,   nil,   nil,
   nil,   nil,   nil, 15687,   nil,   989,   275, 20923, 20805, 15567,
 21206,   818,   nil,   nil,   796, 15447, 15207,   nil,   919,   -25,
 15087,   -43,   nil,     0,   -19,   -18,    88,    -2,   424,   178,
 14247, 22025,   262,   290,    54,   351, 13887,   nil,   nil,   312,
   nil,   327,   438,   nil,   nil,   319,   nil,   341,   373,   455,
   387,   393,   nil,   nil,   447,   666,   nil,   664,   nil,   532,
   nil,   nil,   nil,   nil,   nil,   562,   nil,   564, 13647, 13527,
   342,   nil, 21566, 13407, 21330,   nil,   nil, 10167,   478,   -25,
  9567,  9447,  6220,   153,   611,   614,   619,   nil,   615,   nil,
 20419,   669,   699,  9207,   nil,   nil,   nil, 22289,   649,  9087,
  8607,   nil, 22201,   nil, 22069,   nil,   nil, 19195,   nil, 21981,
  8487,  7767,  7527,   205, 22157,   nil,   708,   814,   nil,   nil,
   715,   nil,   nil,   738,   739,   421,   814,  6567,   nil,   735,
   836,   731,   345,   nil,   nil,   861,   nil,  6087,   753,   794,
   nil,   nil,   nil,   nil,   nil,   nil, 21684,   nil,   675,   nil,
   nil,   nil,   nil,   730,   877,   nil,   nil,   878,  5967, 19195,
   nil,   nil,   149,   -19,   552,   nil,   809,   812,  4279,   399,
   nil,   nil,   908,   909,   804,   nil,  3212,   nil,   555,   nil,
   nil,   295,  4159,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   836,   821,   nil, 22333,  3679,   nil,   nil,   nil,   876,   851,
   nil,   nil,   nil,  3559,   nil,   nil,    76,  3319,   nil,   899,
   -70,   nil,   nil,  2479,   nil,   980,   981,  1999,  1879,   nil,
   nil,   984,   nil,  1519,   nil,   nil,   907,   871,   872,   nil,
   873,   867,   nil,   nil, 14260,   nil,   nil,   nil,  1399,   nil,
  1279,   284,   314,   957,   466,   nil,   nil,    60,   nil,   nil,
   234,  1039,   nil,  1014,   nil,   609,   nil,   nil,   nil,   919,
  1022,   799, 21159, 21100,   435,   439,   nil,   nil,   nil,  1042,
   nil,   928,  1054,   nil,   973,    68,    86,   133,   544,   627,
   nil,   nil,   nil,   467,   nil ]

racc_action_default = [
    -3,  -526,    -1,  -513,    -4,    -6,  -526,  -526,  -526,  -526,
  -526,  -526,  -526,  -526,  -267,   -36,   -37,  -526,  -526,   -42,
   -44,   -45,  -278,  -317,  -318,   -49,  -245,  -245,  -245,   -61,
   -10,   -65,   -72,   -74,  -526,  -444,  -526,  -526,  -526,  -526,
  -526,  -515,  -225,  -260,  -261,  -262,  -263,  -264,  -265,  -266,
  -503,  -269,  -526,  -524,  -524,  -286,  -524,  -526,  -526,  -291,
  -294,  -513,  -526,  -303,  -309,  -526,  -319,  -320,  -389,  -390,
  -391,  -392,  -393,  -524,  -396,  -524,  -524,  -524,  -524,  -524,
  -423,  -429,  -430,  -433,  -434,  -435,  -436,  -437,  -438,  -439,
  -440,  -441,  -442,  -443,  -446,  -447,  -526,    -2,  -514,  -520,
  -521,  -522,  -526,  -526,  -526,  -526,  -526,    -3,   -13,  -526,
  -100,  -101,  -102,  -103,  -104,  -105,  -106,  -109,  -110,  -111,
  -112,  -113,  -114,  -115,  -116,  -117,  -118,  -119,  -120,  -121,
  -122,  -123,  -124,  -125,  -126,  -127,  -128,  -129,  -130,  -131,
  -132,  -133,  -134,  -135,  -136,  -137,  -138,  -139,  -140,  -141,
  -142,  -143,  -144,  -145,  -146,  -147,  -148,  -149,  -150,  -151,
  -152,  -153,  -154,  -155,  -156,  -157,  -158,  -159,  -160,  -161,
  -162,  -163,  -164,  -165,  -166,  -167,  -168,  -169,  -170,  -171,
  -172,  -173,  -174,  -175,  -176,  -177,  -178,  -179,  -180,  -181,
  -526,   -18,  -107,   -10,  -526,  -526,  -526,  -524,  -526,  -526,
  -526,  -526,  -526,   -40,  -526,  -444,  -526,  -267,  -526,  -526,
   -10,  -526,   -41,  -217,  -526,  -526,  -526,  -526,  -526,  -526,
  -526,  -526,  -526,  -526,  -526,  -526,  -526,  -526,  -526,  -526,
  -526,  -526,  -526,  -526,  -526,  -526,  -526,  -526,  -526,  -526,
  -526,  -526,  -360,  -362,   -46,  -226,  -238,  -525,  -525,  -242,
  -526,  -253,  -526,  -278,  -317,  -318,  -497,  -526,   -47,   -48,
  -526,  -526,   -53,  -524,  -526,  -285,  -365,  -372,  -374,   -59,
  -370,   -60,  -526,  -513,   -11,   -61,   -10,  -526,  -526,   -66,
   -69,   -10,   -80,  -526,  -526,   -87,  -281,  -515,  -526,  -321,
  -371,  -526,   -71,  -526,   -76,  -274,  -431,  -432,  -526,  -202,
  -203,  -218,  -526,  -516,   -10,  -515,  -227,  -515,  -517,  -517,
  -526,  -517,  -526,  -494,  -517,  -287,  -288,  -526,  -526,  -332,
  -333,  -341,  -524,  -466,  -348,  -524,  -524,  -359,  -462,  -463,
  -464,  -465,  -467,  -526,  -478,  -483,  -484,  -486,  -487,  -488,
  -526,   -43,  -526,  -526,  -526,  -526,  -513,  -526,  -514,  -526,
  -526,  -306,  -526,  -100,  -101,  -137,  -138,  -154,  -159,  -166,
  -169,  -312,  -526,  -444,  -492,  -526,  -394,  -526,  -409,  -526,
  -411,  -526,  -526,  -526,  -401,  -526,  -526,  -407,  -526,  -422,
  -424,  -425,  -426,  -427,   915,    -5,  -523,   -19,   -20,   -21,
   -22,   -23,  -526,  -526,   -15,   -16,   -17,  -526,  -526,   -25,
   -33,  -182,  -253,  -526,  -526,   -26,   -34,   -35,   -27,  -184,
  -526,  -504,  -505,  -245,  -367,  -506,  -507,  -504,  -245,  -505,
  -369,  -509,  -510,   -32,  -191,   -38,   -39,  -526,  -526,  -524,
  -274,  -526,  -526,  -526,  -526,  -284,  -192,  -193,  -194,  -195,
  -196,  -197,  -198,  -199,  -204,  -205,  -206,  -207,  -208,  -209,
  -210,  -211,  -212,  -213,  -214,  -215,  -216,  -219,  -220,  -221,
  -222,  -526,  -524,  -239,  -526,  -252,  -240,  -526,  -250,  -526,
  -254,  -500,  -245,  -504,  -505,  -245,  -524,   -54,  -526,  -515,
  -515,  -525,  -238,  -246,  -247,  -526,  -524,  -524,  -526,  -280,
    -9,  -514,  -526,   -62,  -272,   -77,   -67,  -526,  -526,  -524,
  -526,  -526,   -86,  -526,  -431,  -432,   -73,   -78,  -526,  -526,
  -526,  -526,  -526,  -223,  -526,  -381,  -526,  -526,  -228,  -229,
  -519,  -518,  -231,  -519,  -276,  -519,  -496,  -277,  -495,  -329,
   -10,   -10,  -526,  -331,  -526,  -350,  -357,  -526,  -354,  -355,
  -526,  -358,  -466,  -526,  -469,  -526,  -471,  -473,  -477,  -485,
  -489,   -10,  -322,  -323,  -324,   -10,  -526,  -526,  -526,  -526,
   -10,  -376,  -300,   -96,  -526,   -98,  -526,  -267,  -526,  -526,
  -310,  -461,  -314,  -511,  -512,  -515,  -395,  -410,  -413,  -414,
  -416,  -397,  -412,  -398,  -399,  -400,  -526,  -403,  -405,  -406,
  -526,  -428,    -7,   -14,  -108,   -24,  -526,  -259,  -526,  -275,
  -526,  -526,   -55,  -236,  -237,  -366,  -526,   -57,  -368,  -526,
  -504,  -505,  -504,  -505,  -526,  -182,  -283,  -526,  -344,  -526,
  -346,   -10,  -525,  -251,  -255,  -526,  -498,  -526,  -499,   -50,
  -363,   -51,  -364,   -10,  -232,  -526,  -526,  -526,  -526,  -526,
   -42,  -526,  -244,  -248,  -526,   -10,   -10,  -279,   -12,   -62,
  -526,   -70,   -75,  -526,  -504,  -505,  -524,  -508,   -85,  -526,
  -526,  -190,  -200,  -201,  -526,  -524,  -524,  -270,  -271,  -517,
  -255,  -526,  -526,  -330,  -342,  -526,  -349,  -524,  -343,  -526,
  -524,  -524,  -479,  -468,  -526,  -526,  -476,  -524,  -325,  -524,
  -292,  -326,  -327,  -328,  -295,  -526,  -298,  -526,  -526,  -526,
   -96,   -97,  -526,  -524,  -526,  -304,  -448,  -526,  -526,  -526,
   -10,   -10,  -461,  -526,  -491,  -491,  -491,  -460,  -466,  -481,
  -526,  -526,  -526,   -10,  -402,  -404,  -408,  -183,  -257,  -526,
  -526,   -29,  -186,   -30,  -187,   -56,   -31,  -188,   -58,  -189,
  -526,  -526,  -526,  -275,  -224,  -345,  -526,  -526,  -241,  -256,
  -526,  -233,  -234,  -524,  -524,  -515,  -526,  -526,  -249,  -526,
  -526,   -68,   -81,   -79,  -282,  -524,  -339,   -10,  -382,  -524,
  -383,  -384,  -230,  -334,  -335,  -356,  -526,  -274,  -526,  -352,
  -353,  -470,  -472,  -475,  -526,  -336,  -337,  -526,   -10,   -10,
  -297,  -299,  -526,  -526,   -96,   -99,  -508,  -526,   -10,  -526,
  -450,  -307,  -526,  -526,  -515,  -452,  -526,  -456,  -526,  -458,
  -459,  -526,  -526,  -315,  -493,  -415,  -418,  -419,  -420,  -421,
  -526,  -258,   -28,  -185,  -526,  -347,  -361,   -52,  -526,  -525,
  -373,  -375,    -8,   -10,  -388,  -340,  -526,  -526,  -386,  -273,
  -524,  -474,  -289,  -526,  -290,  -526,  -526,  -526,   -10,  -301,
  -275,  -526,  -449,   -10,  -311,  -313,  -526,  -491,  -491,  -490,
  -491,  -526,  -482,  -480,  -461,  -417,  -235,  -243,  -526,  -387,
   -10,   -88,  -526,  -526,   -95,  -385,  -351,  -526,  -293,  -296,
  -524,   -10,  -305,  -526,  -451,  -526,  -454,  -455,  -457,   -10,
  -381,  -524,  -526,  -526,   -94,   -10,  -377,  -378,  -379,  -526,
  -308,  -491,  -526,  -380,  -526,  -504,  -505,  -508,   -93,  -524,
  -302,  -453,  -316,   -89,  -338 ]

clist = [
'12,310,246,246,246,309,314,278,113,113,413,418,516,559,361,289,289,319',
'477,466,302,400,407,279,623,327,13,623,380,5,12,116,116,307,544,551',
'555,480,506,665,108,192,711,204,204,642,289,714,204,204,204,262,269',
'271,98,292,13,283,283,519,522,682,526,342,343,528,113,346,543,277,275',
'784,472,475,717,577,690,694,204,204,113,587,674,204,204,2,536,204,283',
'539,541,630,97,765,632,701,212,862,12,626,644,344,244,258,259,788,12',
'12,387,388,389,390,345,807,809,810,789,787,266,270,699,369,371,621,13',
'378,881,5,204,204,204,204,13,13,350,391,5,633,568,380,570,798,569,853',
'352,410,710,645,646,309,347,571,720,677,864,626,317,681,529,316,843',
'680,315,312,364,247,247,247,483,304,398,705,462,486,862,487,896,307',
'698,769,836,366,367,572,373,586,362,278,714,376,716,113,392,12,815,722',
'723,311,804,623,422,857,393,349,191,832,782,385,1,,12,,,,,717,,,,13',
'204,204,204,204,695,101,204,204,204,,,,,795,,,13,204,,413,418,,651,482',
'246,,544,,,686,,,246,278,,,886,887,278,888,,,,,289,,503,,,,,,399,405',
'408,,12,289,423,532,684,12,,101,517,507,518,327,,204,204,,,914,725,',
',,204,,911,,13,496,12,,283,13,897,859,,859,656,849,859,492,275,,,283',
'498,275,,656,491,35,674,,,682,13,716,,,289,889,289,404,404,,714,,,479',
'484,,,,,,556,557,488,,,35,282,282,735,,,,490,738,,,,717,,,204,204,630',
'632,,,566,614,566,,266,309,270,,,,544,282,859,,363,204,10,748,113,761',
',840,113,,,,,,,,481,247,,307,,,,755,903,247,622,116,802,803,772,116',
'10,35,,858,593,860,623,422,594,35,35,,,558,,,602,,,775,,607,779,780',
',653,,753,754,309,,,,204,,,635,636,,,,,,,,,,,,,669,,,,,,,307,,289,,716',
'841,848,,,,507,10,12,,770,,101,,629,10,10,631,,422,,901,604,851,671',
'672,,608,204,,422,,,656,13,35,,648,289,,283,,204,,,687,870,12,12,689',
',,35,,697,,,204,,,,,,898,,,,,12,,,721,12,13,13,,,12,883,,678,604,,,604',
'101,,895,,,,,,203,13,,,746,13,,,,10,13,,327,,,622,,,,204,,902,747,,867',
'35,10,,876,282,35,,,,750,305,,,,,341,341,282,756,341,12,759,760,,,204',
'204,,35,,,204,12,289,,,,,,,,507,,289,12,12,13,,,,797,763,,,309,,14,',
'13,,341,341,341,341,204,,,10,813,,13,13,10,,363,283,363,731,733,,,,307',
'736,,283,14,285,285,,,,,,,10,,,,820,,,422,656,793,,,,,12,12,,799,,,',
',,285,,113,,12,,204,,,,204,,,,204,828,,13,13,,,,,,,835,,,,604,13,,608',
',,,14,204,,,,425,426,,14,14,845,846,12,,,434,,,,,,,422,691,691,,,,856',
',,,,12,12,706,,,13,,,,,12,,,,,,,,,,822,404,869,,,,13,13,35,,,,,289,282',
',13,880,,,,,,,,12,402,406,,,,904,,792,,309,,604,604,890,12,877,14,,',
'12,,35,35,,899,13,,,363,872,,,,14,,204,12,307,909,,13,,35,,,13,35,12',
',10,,35,,,,12,468,,470,,422,12,13,471,,,829,,,341,341,,,13,,,,,,,,13',
',204,,,,13,10,10,575,,,,,,800,801,,14,,805,,285,14,,,,,10,,,35,10,,',
'285,,10,,,,,,35,,,14,,,,,,,,,35,35,,,,282,,,,,,,,,,282,,,,,,,,,306,313',
',320,,,,,,,,,,567,,567,,,,10,368,691,370,370,374,377,370,852,,,,10,',
',,,,,,,,35,35,10,10,,,,,597,305,,,,35,,,,,,,,,,,,,,,,,,,,,,,,,664,,',
',,,,,,,,,,,,,,,,35,,,,,,,,,,10,10,624,,,627,,628,,,,35,35,10,,,,,,,',
'35,,641,,,709,,,,,,,,,,306,,,,,,,,,,14,,,,,,285,,,,35,10,624,,871,627',
',670,,,,,,,,35,,,,,35,,10,10,,,,,,14,14,,10,,,,567,35,,,,,,,,,478,,35',
',14,,,,14,,35,,,14,,,35,,,,,10,,,,875,,,,,,,,,728,,10,,,,,10,,,,,,,',
',,,,,341,,,,10,,,749,341,,,,,,,10,,,,,14,624,,10,,,,,,10,,,14,,,,,,',
',,,,,14,14,,,768,285,,,,,,,,,,285,,,,,,,,,,,,,,,,,,,,,402,,,,,,,,,,',
',,,,,603,213,,,,245,245,245,,,,,,14,14,821,306,,,,,299,300,301,,819',
'14,,,,,,,,,,245,245,,,,,,402,,,,,341,618,,,,,,,,,,603,,,603,618,,,,',
',,14,,,618,618,,,,,,,,,,,,306,,,,,14,14,,,,,,863,,,14,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,670,,,14,,,,874,,,,,,,,,,,14,,,670,,14,,,,,,,,,,,,',
',,,,14,,,,401,245,409,245,,,424,14,,,,,,,,14,,,,,213,14,436,437,438',
'439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455',
'456,457,458,459,460,461,,,,,,,,,245,,245,,,,,245,,,603,,,245,245,,,',
',766,771,,245,,,,,,,,,,,,,,,,,,,766,,766,,,,,,,,,513,,,,,306,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,288,288,,,,,,288,288,288,,,,,603,603,,,',
',,,,288,,,834,,,,838,288,,,,,,,,,,,,,,,,,,,,,,,,,,,,,245,,,,,,,,,,,',
',,,,,,,,,,,,,,245,,424,615,409,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,245,,,245',
',245,,,,,,,,,,,,,,,766,640,,,,,,,,,,306,,,,245,,,,,,,,,661,662,663,',
',766,,,,,,,245,,,245,,245,288,,288,288,288,288,288,288,288,288,288,288',
'288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,,,,',
',,,,288,,288,,,,,288,,,,,,,,,,,,,,,,,,,,,,,288,,,,727,,245,,732,734',
',,,288,737,,,739,,,,,288,,,744,,,,,,,,245,,,,,,,,,,,,,,245,,,,,,,,,',
',,,,,,,,,,,,,288,,288,,245,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,245,,,,,245',
',,,,,,,,,,,288,,,,,,,,,,,,,,245,823,,,,,,,,,,732,734,737,288,288,288',
',,,,,,,,,,,245,,,,,,,,,,,,,,,,,,,288,,,288,,288,,,,,,,,,,,,,,,,,,,,',
',,,,,,,288,,,245,,,,,,,,288,288,288,,823,,,,,,,,288,,,288,,288,,,,,',
',,,,245,,288,,,,,,,,,,,,,,,,,,,245,,,,,,,,,,,,,,,,,,,,,,,245,,,,,,,',
',,,,,,,,,288,,288,,,,,,,,,,,288,,,,,,,,288,,,,,,,,288,,,,,,,,,,,,,,',
',,,,,,,,,,288,,,,,,,,,,288,,,,,,288,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,288',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,288,,,,,,,,,,,288,288,288,,,,,,,,,,,,',
',,288,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,288,,,,',
',,,,,,,288,,,,,,,,,,,,,288,,,,,,,,,,288,,,,,,,,,,,,,,,,,,,,,288' ]
        racc_goto_table = arr = ::Array.new(2518, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'20,22,29,29,29,56,56,9,48,48,33,33,8,79,47,52,52,103,35,59,51,24,24',
'41,60,107,21,60,47,7,20,50,50,29,138,76,76,32,43,10,14,14,82,21,21,60',
'52,110,21,21,21,34,34,34,6,42,21,21,21,55,55,139,55,16,16,55,48,16,140',
'39,38,77,33,33,108,129,78,78,21,21,48,129,106,21,21,2,109,21,21,109',
'109,58,4,11,58,45,18,143,20,146,61,86,31,31,31,87,20,20,16,16,16,16',
'88,137,137,137,89,11,57,57,90,126,126,36,21,126,91,7,21,21,21,21,21',
'21,92,7,7,36,46,47,46,93,94,95,96,22,97,36,36,56,4,98,99,111,100,146',
'101,111,102,75,104,105,73,72,71,54,54,54,62,85,9,80,113,115,143,116',
'117,29,118,119,120,124,125,84,127,128,83,9,110,130,111,48,2,20,131,132',
'133,54,135,60,48,136,27,19,15,12,141,5,1,,20,,,,,108,,,,21,21,21,21',
'21,79,81,21,21,21,,,,,45,,,21,21,,33,33,,43,29,29,,138,,,138,,,29,9',
',,137,137,9,137,,,,,52,,51,,,,,,18,18,18,,20,52,18,103,140,20,,81,51',
'41,51,107,,21,21,,,77,129,,,,21,,137,,21,42,20,,21,21,11,108,,108,33',
'78,108,39,38,,,21,39,38,,33,6,44,106,,,139,21,111,,,52,82,52,54,54,',
'110,,,31,31,,,,,,16,16,31,,,44,44,44,35,,,,4,35,,,,108,,,21,21,58,58',
',,21,22,21,,57,56,57,,,,138,44,108,,44,21,17,59,48,43,,111,48,,,,,,',
',54,54,,29,,,,32,10,54,56,50,8,8,55,50,17,44,,111,14,111,60,48,14,44',
'44,,,4,,,34,,,109,,34,109,109,,22,,33,33,56,,,,21,,,51,51,,,,,,,,,,',
',,56,,,,,,,29,,52,,111,138,76,,,,41,17,20,,24,,81,,34,17,17,34,,48,',
'111,57,8,9,9,,57,21,,48,,,33,21,44,,7,52,,21,,21,,,9,76,20,20,9,,,44',
',9,,,21,,,,,,79,,,,,20,,,51,20,21,21,,,20,8,,21,57,,,57,81,,76,,,,,',
'26,21,,,103,21,,,,17,21,,107,,,56,,,,21,,8,9,,59,44,17,,109,44,44,,',
',9,26,,,,,26,26,44,29,26,20,9,9,,,21,21,,44,,,21,20,52,,,,,,,,41,,52',
'20,20,21,,,,22,41,,,56,,23,,21,,26,26,26,26,21,,,17,47,,21,21,17,,44',
'21,44,18,18,,,,29,18,,21,23,23,23,,,,,,,17,,,,9,,,48,33,16,,,,,20,20',
',16,,,,,,23,,48,,20,,21,,,,21,,,,21,51,,21,21,,,,,,,9,,,,57,21,,57,',
',,23,21,,,,26,26,,23,23,9,9,20,,,26,,,,,,,48,81,81,,,,51,,,,,20,20,81',
',,21,,,,,20,,,,,,,,,,18,54,9,,,,21,21,44,,,,,52,44,,21,9,,,,,,,,20,25',
'25,,,,22,,54,,56,,57,57,9,20,16,23,,,20,,44,44,,9,21,,,44,21,,,,23,',
'21,20,29,9,,21,,44,,,21,44,20,,17,,44,,,,20,25,,25,,48,20,21,25,,,54',
',,26,26,,,21,,,,,,,,21,,21,,,,21,17,17,26,,,,,,81,81,,23,,81,,23,23',
',,,,17,,,44,17,,,23,,17,,,,,,44,,,23,,,,,,,,,44,44,,,,44,,,,,,,,,,44',
',,,,,,,,53,53,,53,,,,,,,,,,23,,23,,,,17,53,81,53,53,53,53,53,81,,,,17',
',,,,,,,,,44,44,17,17,,,,,25,26,,,,44,,,,,,,,,,,,,,,,,,,,,,,,,26,,,,',
',,,,,,,,,,,,,,44,,,,,,,,,,17,17,25,,,25,,25,,,,44,44,17,,,,,,,,44,,25',
',,26,,,,,,,,,,53,,,,,,,,,,23,,,,,,23,,,,44,17,25,,44,25,,25,,,,,,,,44',
',,,,44,,17,17,,,,,,23,23,,17,,,,23,44,,,,,,,,,53,,44,,23,,,,23,,44,',
',23,,,44,,,,,17,,,,17,,,,,,,,,25,,17,,,,,17,,,,,,,,,,,,,26,,,,17,,,25',
'26,,,,,,,17,,,,,23,25,,17,,,,,,17,,,23,,,,,,,,,,,,23,23,,,25,23,,,,',
',,,,,23,,,,,,,,,,,,,,,,,,,,,25,,,,,,,,,,,,,,,,53,28,,,,28,28,28,,,,',
',23,23,25,53,,,,,28,28,28,,23,23,,,,,,,,,,28,28,,,,,,25,,,,,26,53,,',
',,,,,,,53,,,53,53,,,,,,,23,,,53,53,,,,,,,,,,,,53,,,,,23,23,,,,,,25,',
',23,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,25,,,23,,,,23,,,,,,,,,,,23,,,25,',
'23,,,,,,,,,,,,,,,,,23,,,,28,28,28,28,,,28,23,,,,,,,,23,,,,,28,23,28',
'28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28',
'28,28,,,,,,,,,28,,28,,,,,28,,,53,,,28,28,,,,,53,53,,28,,,,,,,,,,,,,',
',,,,,53,,53,,,,,,,,,28,,,,,53,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,37',
'37,,,,,,37,37,37,,,,,53,53,,,,,,,,37,,,53,,,,53,37,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,28,,,,,,,,,,,,,,,,,,,,,,,,,,28,,28,28,28,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,28,,,28,,28,,,,,,,,,,,,,,,53,28,,,,,,,,,,53,,,,28,,,,',
',,,,28,28,28,,,53,,,,,,,28,,,28,,28,37,,37,37,37,37,37,37,37,37,37,37',
'37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,,,,,,,,,37,,37,,,,,37',
',,,,,,,,,,,,,,,,,,,,,,37,,,,28,,28,,28,28,,,,37,28,,,28,,,,,37,,,28',
',,,,,,,28,,,,,,,,,,,,,,28,,,,,,,,,,,,,,,,,,,,,,,37,,37,,28,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,28,,,,,28,,,,,,,,,,,,37,,,,,,,,,,,,,,28,28,,,',
',,,,,,28,28,28,37,37,37,,,,,,,,,,,,28,,,,,,,,,,,,,,,,,,,37,,,37,,37',
',,,,,,,,,,,,,,,,,,,,,,,,,,,37,,,28,,,,,,,,37,37,37,,28,,,,,,,,37,,,37',
',37,,,,,,,,,,28,,37,,,,,,,,,,,,,,,,,,,28,,,,,,,,,,,,,,,,,,,,,,,28,,',
',,,,,,,,,,,,,,37,,37,,,,,,,,,,,37,,,,,,,,37,,,,,,,,37,,,,,,,,,,,,,,',
',,,,,,,,,,37,,,,,,,,,,37,,,,,,37,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,37,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,37,,,,,,,,,,,37,37,37,,,,,,,,,,,,,,,37',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,37,,,,,,,,,,,',
'37,,,,,,,,,,,,,37,,,,,,,,,,37,,,,,,,,,,,,,,,,,,,,,37' ]
        racc_goto_check = arr = ::Array.new(2518, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_goto_pointer = [
   nil,   208,    85,   nil,    89,   109,    51,    29,  -292,   -23,
  -476,  -572,  -560,   nil,    33,   196,     6,   392,    78,   141,
     0,    26,   -52,   657,  -173,   640,   559,    94,  1337,   -20,
   nil,    80,  -226,  -188,    25,  -244,  -339,  1649,    40,    39,
   nil,    -8,    23,  -255,   325,  -469,  -212,   -51,     1,   nil,
    24,   -21,   -16,   941,   143,  -249,   -48,    92,  -381,  -229,
  -440,  -385,   -96,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    99,   109,   107,   nil,   103,  -307,  -616,  -480,  -334,
  -397,   222,  -529,   121,  -179,   118,    42,  -585,    52,  -578,
  -442,  -723,    71,  -564,  -209,  -658,    80,  -424,  -210,  -420,
  -659,   100,  -159,   -39,  -626,  -377,  -452,   -31,  -497,  -236,
  -524,  -381,   nil,   -70,   nil,   -94,   -93,  -704,  -383,  -487,
  -589,   nil,   nil,   nil,   110,   109,    46,   107,  -188,  -292,
   111,  -528,  -384,  -384,   nil,  -514,  -605,  -601,  -299,  -477,
  -265,  -479,   nil,  -711,   nil,   nil,  -368 ]

racc_goto_default = [
   nil,   nil,   nil,     3,   nil,     4,   348,   274,   nil,   515,
   nil,   785,   nil,   273,   nil,   nil,   nil,   208,    16,    11,
   209,   298,   nil,   207,   nil,   251,    15,   nil,    19,    20,
    21,   nil,    25,   659,   nil,   nil,   nil,    26,    29,   nil,
    31,    34,    33,   nil,   205,   565,   nil,   115,   416,   114,
    69,   nil,    42,   535,   308,   nil,   248,   414,   605,   463,
   249,   nil,   nil,   264,   465,    43,    44,    45,    46,    47,
    48,    49,   nil,   265,    55,   nil,   nil,   nil,   nil,   nil,
   nil,   552,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   322,   321,   676,   324,   nil,
   325,   326,   243,   nil,   420,   nil,   nil,   nil,   nil,   nil,
   nil,    68,    70,    71,    72,   nil,   nil,   nil,   nil,   582,
   nil,   nil,   nil,   nil,   379,   713,   715,   nil,   332,   334,
   nil,   546,   547,   719,   337,   340,   256 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 138, :_reduce_1,
  2, 139, :_reduce_2,
  0, 140, :_reduce_3,
  1, 140, :_reduce_4,
  3, 140, :_reduce_5,
  1, 142, :_reduce_none,
  4, 142, :_reduce_7,
  4, 145, :_reduce_8,
  2, 146, :_reduce_9,
  0, 150, :_reduce_10,
  1, 150, :_reduce_11,
  3, 150, :_reduce_12,
  0, 164, :_reduce_13,
  4, 144, :_reduce_14,
  3, 144, :_reduce_15,
  3, 144, :_reduce_none,
  3, 144, :_reduce_17,
  2, 144, :_reduce_18,
  3, 144, :_reduce_19,
  3, 144, :_reduce_20,
  3, 144, :_reduce_21,
  3, 144, :_reduce_22,
  3, 144, :_reduce_23,
  4, 144, :_reduce_none,
  3, 144, :_reduce_25,
  3, 144, :_reduce_26,
  3, 144, :_reduce_27,
  6, 144, :_reduce_none,
  5, 144, :_reduce_29,
  5, 144, :_reduce_none,
  5, 144, :_reduce_none,
  3, 144, :_reduce_none,
  3, 144, :_reduce_33,
  3, 144, :_reduce_34,
  3, 144, :_reduce_35,
  1, 144, :_reduce_none,
  1, 163, :_reduce_none,
  3, 163, :_reduce_38,
  3, 163, :_reduce_39,
  2, 163, :_reduce_40,
  2, 163, :_reduce_41,
  1, 163, :_reduce_none,
  1, 153, :_reduce_none,
  1, 155, :_reduce_none,
  1, 155, :_reduce_none,
  2, 155, :_reduce_46,
  2, 155, :_reduce_47,
  2, 155, :_reduce_48,
  1, 167, :_reduce_none,
  4, 167, :_reduce_none,
  4, 167, :_reduce_none,
  4, 172, :_reduce_none,
  2, 166, :_reduce_53,
  3, 166, :_reduce_none,
  4, 166, :_reduce_55,
  5, 166, :_reduce_none,
  4, 166, :_reduce_57,
  5, 166, :_reduce_none,
  2, 166, :_reduce_59,
  2, 166, :_reduce_60,
  1, 156, :_reduce_61,
  3, 156, :_reduce_62,
  1, 176, :_reduce_63,
  3, 176, :_reduce_64,
  1, 175, :_reduce_65,
  2, 175, :_reduce_66,
  3, 175, :_reduce_67,
  5, 175, :_reduce_none,
  2, 175, :_reduce_69,
  4, 175, :_reduce_none,
  2, 175, :_reduce_71,
  1, 175, :_reduce_72,
  3, 175, :_reduce_none,
  1, 178, :_reduce_74,
  3, 178, :_reduce_75,
  2, 177, :_reduce_76,
  3, 177, :_reduce_77,
  1, 180, :_reduce_none,
  3, 180, :_reduce_none,
  1, 179, :_reduce_80,
  4, 179, :_reduce_81,
  3, 179, :_reduce_82,
  3, 179, :_reduce_none,
  3, 179, :_reduce_none,
  3, 179, :_reduce_none,
  2, 179, :_reduce_none,
  1, 179, :_reduce_none,
  1, 154, :_reduce_88,
  4, 154, :_reduce_89,
  3, 154, :_reduce_90,
  3, 154, :_reduce_91,
  3, 154, :_reduce_92,
  3, 154, :_reduce_93,
  2, 154, :_reduce_94,
  1, 154, :_reduce_none,
  1, 182, :_reduce_none,
  2, 183, :_reduce_97,
  1, 183, :_reduce_98,
  3, 183, :_reduce_99,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_103,
  1, 184, :_reduce_104,
  1, 151, :_reduce_105,
  1, 151, :_reduce_none,
  1, 152, :_reduce_107,
  3, 152, :_reduce_108,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  3, 165, :_reduce_182,
  5, 165, :_reduce_183,
  3, 165, :_reduce_184,
  6, 165, :_reduce_185,
  5, 165, :_reduce_186,
  5, 165, :_reduce_none,
  5, 165, :_reduce_none,
  5, 165, :_reduce_none,
  4, 165, :_reduce_none,
  3, 165, :_reduce_none,
  3, 165, :_reduce_192,
  3, 165, :_reduce_193,
  3, 165, :_reduce_194,
  3, 165, :_reduce_195,
  3, 165, :_reduce_196,
  3, 165, :_reduce_197,
  3, 165, :_reduce_198,
  3, 165, :_reduce_199,
  4, 165, :_reduce_none,
  4, 165, :_reduce_none,
  2, 165, :_reduce_202,
  2, 165, :_reduce_203,
  3, 165, :_reduce_204,
  3, 165, :_reduce_205,
  3, 165, :_reduce_206,
  3, 165, :_reduce_207,
  3, 165, :_reduce_208,
  3, 165, :_reduce_209,
  3, 165, :_reduce_210,
  3, 165, :_reduce_211,
  3, 165, :_reduce_212,
  3, 165, :_reduce_213,
  3, 165, :_reduce_214,
  3, 165, :_reduce_215,
  3, 165, :_reduce_216,
  2, 165, :_reduce_217,
  2, 165, :_reduce_218,
  3, 165, :_reduce_219,
  3, 165, :_reduce_220,
  3, 165, :_reduce_221,
  3, 165, :_reduce_222,
  3, 165, :_reduce_223,
  5, 165, :_reduce_224,
  1, 165, :_reduce_none,
  1, 162, :_reduce_none,
  1, 159, :_reduce_227,
  2, 159, :_reduce_228,
  2, 159, :_reduce_229,
  4, 159, :_reduce_230,
  2, 159, :_reduce_231,
  3, 194, :_reduce_232,
  4, 194, :_reduce_233,
  4, 194, :_reduce_none,
  6, 194, :_reduce_none,
  1, 195, :_reduce_none,
  1, 195, :_reduce_none,
  1, 168, :_reduce_238,
  2, 168, :_reduce_239,
  2, 168, :_reduce_240,
  4, 168, :_reduce_241,
  1, 168, :_reduce_242,
  4, 198, :_reduce_none,
  1, 198, :_reduce_none,
  0, 200, :_reduce_245,
  2, 171, :_reduce_246,
  1, 199, :_reduce_none,
  2, 199, :_reduce_248,
  3, 199, :_reduce_249,
  2, 197, :_reduce_250,
  2, 196, :_reduce_251,
  1, 196, :_reduce_252,
  1, 191, :_reduce_253,
  2, 191, :_reduce_254,
  3, 191, :_reduce_255,
  4, 191, :_reduce_256,
  3, 161, :_reduce_257,
  4, 161, :_reduce_none,
  2, 161, :_reduce_259,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  0, 222, :_reduce_269,
  4, 189, :_reduce_270,
  4, 189, :_reduce_271,
  3, 189, :_reduce_272,
  3, 189, :_reduce_273,
  2, 189, :_reduce_274,
  4, 189, :_reduce_275,
  3, 189, :_reduce_276,
  3, 189, :_reduce_277,
  1, 189, :_reduce_278,
  4, 189, :_reduce_279,
  3, 189, :_reduce_280,
  1, 189, :_reduce_281,
  5, 189, :_reduce_282,
  4, 189, :_reduce_283,
  3, 189, :_reduce_284,
  2, 189, :_reduce_285,
  1, 189, :_reduce_none,
  2, 189, :_reduce_287,
  2, 189, :_reduce_288,
  6, 189, :_reduce_289,
  6, 189, :_reduce_290,
  0, 223, :_reduce_291,
  0, 224, :_reduce_292,
  7, 189, :_reduce_293,
  0, 225, :_reduce_294,
  0, 226, :_reduce_295,
  7, 189, :_reduce_296,
  5, 189, :_reduce_297,
  4, 189, :_reduce_298,
  5, 189, :_reduce_299,
  0, 227, :_reduce_300,
  0, 228, :_reduce_301,
  9, 189, :_reduce_none,
  0, 229, :_reduce_303,
  0, 230, :_reduce_304,
  7, 189, :_reduce_305,
  0, 231, :_reduce_306,
  0, 232, :_reduce_307,
  8, 189, :_reduce_308,
  0, 233, :_reduce_309,
  0, 234, :_reduce_310,
  6, 189, :_reduce_311,
  0, 235, :_reduce_312,
  6, 189, :_reduce_313,
  0, 236, :_reduce_314,
  0, 237, :_reduce_315,
  9, 189, :_reduce_316,
  1, 189, :_reduce_317,
  1, 189, :_reduce_318,
  1, 189, :_reduce_319,
  1, 189, :_reduce_none,
  1, 158, :_reduce_none,
  1, 213, :_reduce_none,
  1, 213, :_reduce_none,
  1, 213, :_reduce_none,
  2, 213, :_reduce_none,
  1, 215, :_reduce_none,
  1, 215, :_reduce_none,
  1, 215, :_reduce_none,
  2, 212, :_reduce_329,
  3, 238, :_reduce_330,
  2, 238, :_reduce_331,
  1, 238, :_reduce_none,
  1, 238, :_reduce_none,
  3, 239, :_reduce_334,
  3, 239, :_reduce_335,
  1, 214, :_reduce_336,
  0, 241, :_reduce_337,
  6, 214, :_reduce_338,
  1, 148, :_reduce_none,
  2, 148, :_reduce_340,
  1, 242, :_reduce_341,
  3, 242, :_reduce_342,
  3, 243, :_reduce_343,
  1, 173, :_reduce_none,
  2, 173, :_reduce_345,
  1, 173, :_reduce_346,
  3, 173, :_reduce_347,
  1, 244, :_reduce_348,
  2, 246, :_reduce_349,
  1, 246, :_reduce_350,
  6, 240, :_reduce_351,
  4, 240, :_reduce_352,
  4, 240, :_reduce_353,
  2, 240, :_reduce_354,
  2, 240, :_reduce_355,
  4, 240, :_reduce_356,
  2, 240, :_reduce_357,
  2, 240, :_reduce_358,
  1, 240, :_reduce_359,
  0, 250, :_reduce_360,
  5, 249, :_reduce_361,
  2, 169, :_reduce_362,
  4, 169, :_reduce_none,
  4, 169, :_reduce_none,
  2, 211, :_reduce_365,
  4, 211, :_reduce_366,
  3, 211, :_reduce_367,
  4, 211, :_reduce_368,
  3, 211, :_reduce_369,
  2, 211, :_reduce_370,
  1, 211, :_reduce_371,
  0, 252, :_reduce_372,
  5, 210, :_reduce_373,
  0, 253, :_reduce_374,
  5, 210, :_reduce_375,
  0, 255, :_reduce_376,
  6, 216, :_reduce_377,
  1, 254, :_reduce_378,
  1, 254, :_reduce_none,
  6, 147, :_reduce_380,
  0, 147, :_reduce_381,
  1, 256, :_reduce_382,
  1, 256, :_reduce_none,
  1, 256, :_reduce_none,
  2, 257, :_reduce_385,
  1, 257, :_reduce_386,
  2, 149, :_reduce_387,
  1, 149, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 203, :_reduce_392,
  1, 260, :_reduce_none,
  2, 260, :_reduce_none,
  3, 261, :_reduce_395,
  1, 261, :_reduce_396,
  3, 204, :_reduce_397,
  3, 205, :_reduce_398,
  3, 206, :_reduce_399,
  3, 206, :_reduce_400,
  1, 264, :_reduce_401,
  3, 264, :_reduce_402,
  1, 265, :_reduce_403,
  2, 265, :_reduce_404,
  3, 207, :_reduce_405,
  3, 207, :_reduce_406,
  1, 267, :_reduce_407,
  3, 267, :_reduce_408,
  1, 262, :_reduce_409,
  2, 262, :_reduce_410,
  1, 263, :_reduce_411,
  2, 263, :_reduce_412,
  1, 266, :_reduce_413,
  0, 269, :_reduce_414,
  3, 266, :_reduce_415,
  0, 270, :_reduce_416,
  4, 266, :_reduce_417,
  1, 268, :_reduce_418,
  1, 268, :_reduce_419,
  1, 268, :_reduce_420,
  1, 268, :_reduce_none,
  2, 187, :_reduce_422,
  1, 187, :_reduce_423,
  1, 271, :_reduce_none,
  1, 271, :_reduce_none,
  1, 271, :_reduce_none,
  1, 271, :_reduce_none,
  3, 259, :_reduce_428,
  1, 258, :_reduce_429,
  1, 258, :_reduce_430,
  2, 258, :_reduce_none,
  2, 258, :_reduce_none,
  1, 181, :_reduce_433,
  1, 181, :_reduce_434,
  1, 181, :_reduce_435,
  1, 181, :_reduce_436,
  1, 181, :_reduce_437,
  1, 181, :_reduce_438,
  1, 181, :_reduce_439,
  1, 181, :_reduce_440,
  1, 181, :_reduce_441,
  1, 181, :_reduce_442,
  1, 181, :_reduce_443,
  1, 208, :_reduce_444,
  1, 157, :_reduce_445,
  1, 160, :_reduce_446,
  1, 160, :_reduce_none,
  1, 217, :_reduce_448,
  3, 217, :_reduce_449,
  2, 217, :_reduce_450,
  4, 219, :_reduce_451,
  2, 219, :_reduce_452,
  6, 272, :_reduce_453,
  4, 272, :_reduce_454,
  4, 272, :_reduce_455,
  2, 272, :_reduce_456,
  4, 272, :_reduce_457,
  2, 272, :_reduce_458,
  2, 272, :_reduce_459,
  1, 272, :_reduce_460,
  0, 272, :_reduce_461,
  1, 275, :_reduce_462,
  1, 275, :_reduce_463,
  1, 275, :_reduce_464,
  1, 275, :_reduce_465,
  1, 275, :_reduce_466,
  1, 276, :_reduce_467,
  3, 276, :_reduce_468,
  1, 278, :_reduce_469,
  3, 278, :_reduce_none,
  1, 279, :_reduce_471,
  3, 279, :_reduce_472,
  1, 277, :_reduce_none,
  4, 277, :_reduce_none,
  3, 277, :_reduce_none,
  2, 277, :_reduce_none,
  1, 277, :_reduce_none,
  1, 247, :_reduce_478,
  3, 247, :_reduce_479,
  3, 280, :_reduce_480,
  1, 273, :_reduce_481,
  3, 273, :_reduce_482,
  1, 281, :_reduce_none,
  1, 281, :_reduce_none,
  2, 248, :_reduce_485,
  1, 248, :_reduce_486,
  1, 282, :_reduce_none,
  1, 282, :_reduce_none,
  2, 245, :_reduce_489,
  2, 274, :_reduce_490,
  0, 274, :_reduce_491,
  1, 220, :_reduce_492,
  4, 220, :_reduce_493,
  1, 209, :_reduce_494,
  2, 209, :_reduce_495,
  2, 209, :_reduce_496,
  1, 193, :_reduce_497,
  3, 193, :_reduce_498,
  3, 283, :_reduce_499,
  2, 283, :_reduce_500,
  1, 174, :_reduce_none,
  1, 174, :_reduce_none,
  1, 174, :_reduce_none,
  1, 170, :_reduce_none,
  1, 170, :_reduce_none,
  1, 170, :_reduce_none,
  1, 170, :_reduce_none,
  1, 251, :_reduce_none,
  1, 251, :_reduce_none,
  1, 251, :_reduce_none,
  1, 221, :_reduce_none,
  1, 221, :_reduce_none,
  0, 141, :_reduce_none,
  1, 141, :_reduce_none,
  0, 188, :_reduce_none,
  1, 188, :_reduce_none,
  0, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 218, :_reduce_none,
  1, 218, :_reduce_none,
  1, 143, :_reduce_none,
  2, 143, :_reduce_none,
  0, 190, :_reduce_none,
  0, 201, :_reduce_none ]

racc_reduce_n = 526

racc_shift_n = 915

racc_token_table = {
  false => 0,
  :error => 1,
  :kCLASS => 2,
  :kMODULE => 3,
  :kDEF => 4,
  :kUNDEF => 5,
  :kBEGIN => 6,
  :kRESCUE => 7,
  :kENSURE => 8,
  :kEND => 9,
  :kIF => 10,
  :kUNLESS => 11,
  :kTHEN => 12,
  :kELSIF => 13,
  :kELSE => 14,
  :kCASE => 15,
  :kWHEN => 16,
  :kWHILE => 17,
  :kUNTIL => 18,
  :kFOR => 19,
  :kBREAK => 20,
  :kNEXT => 21,
  :kREDO => 22,
  :kRETRY => 23,
  :kIN => 24,
  :kDO => 25,
  :kDO_COND => 26,
  :kDO_BLOCK => 27,
  :kRETURN => 28,
  :kYIELD => 29,
  :kSUPER => 30,
  :kSELF => 31,
  :kNIL => 32,
  :kTRUE => 33,
  :kFALSE => 34,
  :kAND => 35,
  :kOR => 36,
  :kNOT => 37,
  :kIF_MOD => 38,
  :kUNLESS_MOD => 39,
  :kWHILE_MOD => 40,
  :kUNTIL_MOD => 41,
  :kRESCUE_MOD => 42,
  :kALIAS => 43,
  :kDEFINED => 44,
  :klBEGIN => 45,
  :klEND => 46,
  :k__LINE__ => 47,
  :k__FILE__ => 48,
  :tIDENTIFIER => 49,
  :tFID => 50,
  :tGVAR => 51,
  :tIVAR => 52,
  :tCONSTANT => 53,
  :tCVAR => 54,
  :tNTH_REF => 55,
  :tBACK_REF => 56,
  :tSTRING_CONTENT => 57,
  :tINTEGER => 58,
  :tFLOAT => 59,
  :tREGEXP_END => 60,
  "+@" => 61,
  "-@" => 62,
  "-@NUM" => 63,
  :tPOW => 64,
  :tCMP => 65,
  :tEQ => 66,
  :tEQQ => 67,
  :tNEQ => 68,
  :tGEQ => 69,
  :tLEQ => 70,
  :tANDOP => 71,
  :tOROP => 72,
  :tMATCH => 73,
  :tNMATCH => 74,
  :tDOT => 75,
  :tDOT2 => 76,
  :tDOT3 => 77,
  "[]" => 78,
  "[]=" => 79,
  :tLSHFT => 80,
  :tRSHFT => 81,
  :tCOLON2 => 82,
  :tCOLON3 => 83,
  :tOP_ASGN => 84,
  :tASSOC => 85,
  :tLPAREN => 86,
  "(" => 87,
  :tRPAREN => 88,
  :tLPAREN_ARG => 89,
  :ARRAY_BEG => 90,
  :tRBRACK => 91,
  :tLBRACE => 92,
  :tLBRACE_ARG => 93,
  :tSTAR => 94,
  :tSTAR2 => 95,
  :tAMPER => 96,
  :tAMPER2 => 97,
  :tTILDE => 98,
  :tPERCENT => 99,
  :tDIVIDE => 100,
  "+" => 101,
  "-" => 102,
  :tLT => 103,
  :tGT => 104,
  :tPIPE => 105,
  :tBANG => 106,
  :tCARET => 107,
  :tLCURLY => 108,
  :tRCURLY => 109,
  :tBACK_REF2 => 110,
  :tSYMBEG => 111,
  :tSTRING_BEG => 112,
  :tXSTRING_BEG => 113,
  :tREGEXP_BEG => 114,
  :tWORDS_BEG => 115,
  :tAWORDS_BEG => 116,
  :tSTRING_DBEG => 117,
  :tSTRING_DVAR => 118,
  :tSTRING_END => 119,
  :tSTRING => 120,
  :tSYMBOL => 121,
  :tNL => 122,
  :tEH => 123,
  :tCOLON => 124,
  :tCOMMA => 125,
  :tSPACE => 126,
  :tSEMI => 127,
  :tLABEL => 128,
  :tLAMBDA => 129,
  :tLAMBEG => 130,
  :kDO_LAMBDA => 131,
  :tLBRACK2 => 132,
  :tLBRACK => 133,
  :tEQL => 134,
  :tLOWEST => 135,
  "{" => 136 }

racc_nt_base = 137

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "kCLASS",
  "kMODULE",
  "kDEF",
  "kUNDEF",
  "kBEGIN",
  "kRESCUE",
  "kENSURE",
  "kEND",
  "kIF",
  "kUNLESS",
  "kTHEN",
  "kELSIF",
  "kELSE",
  "kCASE",
  "kWHEN",
  "kWHILE",
  "kUNTIL",
  "kFOR",
  "kBREAK",
  "kNEXT",
  "kREDO",
  "kRETRY",
  "kIN",
  "kDO",
  "kDO_COND",
  "kDO_BLOCK",
  "kRETURN",
  "kYIELD",
  "kSUPER",
  "kSELF",
  "kNIL",
  "kTRUE",
  "kFALSE",
  "kAND",
  "kOR",
  "kNOT",
  "kIF_MOD",
  "kUNLESS_MOD",
  "kWHILE_MOD",
  "kUNTIL_MOD",
  "kRESCUE_MOD",
  "kALIAS",
  "kDEFINED",
  "klBEGIN",
  "klEND",
  "k__LINE__",
  "k__FILE__",
  "tIDENTIFIER",
  "tFID",
  "tGVAR",
  "tIVAR",
  "tCONSTANT",
  "tCVAR",
  "tNTH_REF",
  "tBACK_REF",
  "tSTRING_CONTENT",
  "tINTEGER",
  "tFLOAT",
  "tREGEXP_END",
  "\"+@\"",
  "\"-@\"",
  "\"-@NUM\"",
  "tPOW",
  "tCMP",
  "tEQ",
  "tEQQ",
  "tNEQ",
  "tGEQ",
  "tLEQ",
  "tANDOP",
  "tOROP",
  "tMATCH",
  "tNMATCH",
  "tDOT",
  "tDOT2",
  "tDOT3",
  "\"[]\"",
  "\"[]=\"",
  "tLSHFT",
  "tRSHFT",
  "tCOLON2",
  "tCOLON3",
  "tOP_ASGN",
  "tASSOC",
  "tLPAREN",
  "\"(\"",
  "tRPAREN",
  "tLPAREN_ARG",
  "ARRAY_BEG",
  "tRBRACK",
  "tLBRACE",
  "tLBRACE_ARG",
  "tSTAR",
  "tSTAR2",
  "tAMPER",
  "tAMPER2",
  "tTILDE",
  "tPERCENT",
  "tDIVIDE",
  "\"+\"",
  "\"-\"",
  "tLT",
  "tGT",
  "tPIPE",
  "tBANG",
  "tCARET",
  "tLCURLY",
  "tRCURLY",
  "tBACK_REF2",
  "tSYMBEG",
  "tSTRING_BEG",
  "tXSTRING_BEG",
  "tREGEXP_BEG",
  "tWORDS_BEG",
  "tAWORDS_BEG",
  "tSTRING_DBEG",
  "tSTRING_DVAR",
  "tSTRING_END",
  "tSTRING",
  "tSYMBOL",
  "tNL",
  "tEH",
  "tCOLON",
  "tCOMMA",
  "tSPACE",
  "tSEMI",
  "tLABEL",
  "tLAMBDA",
  "tLAMBEG",
  "kDO_LAMBDA",
  "tLBRACK2",
  "tLBRACK",
  "tEQL",
  "tLOWEST",
  "\"{\"",
  "$start",
  "program",
  "top_compstmt",
  "top_stmts",
  "opt_terms",
  "top_stmt",
  "terms",
  "stmt",
  "bodystmt",
  "compstmt",
  "opt_rescue",
  "opt_else",
  "opt_ensure",
  "stmts",
  "fitem",
  "undef_list",
  "expr_value",
  "lhs",
  "command_call",
  "mlhs",
  "var_lhs",
  "primary_value",
  "aref_args",
  "backref",
  "mrhs",
  "arg_value",
  "expr",
  "@1",
  "arg",
  "command",
  "block_command",
  "call_args",
  "block_call",
  "operation2",
  "command_args",
  "cmd_brace_block",
  "opt_block_var",
  "operation",
  "mlhs_basic",
  "mlhs_entry",
  "mlhs_head",
  "mlhs_item",
  "mlhs_node",
  "mlhs_post",
  "variable",
  "cname",
  "cpath",
  "fname",
  "op",
  "reswords",
  "symbol",
  "opt_nl",
  "primary",
  "none",
  "args",
  "trailer",
  "assocs",
  "paren_args",
  "opt_paren_args",
  "opt_block_arg",
  "block_arg",
  "call_args2",
  "open_args",
  "@2",
  "none_block_pass",
  "literal",
  "strings",
  "xstring",
  "regexp",
  "words",
  "awords",
  "var_ref",
  "assoc_list",
  "brace_block",
  "method_call",
  "lambda",
  "then",
  "if_tail",
  "do",
  "case_body",
  "superclass",
  "term",
  "f_arglist",
  "singleton",
  "dot_or_colon",
  "@3",
  "@4",
  "@5",
  "@6",
  "@7",
  "@8",
  "@9",
  "@10",
  "@11",
  "@12",
  "@13",
  "@14",
  "@15",
  "@16",
  "@17",
  "@18",
  "f_larglist",
  "lambda_body",
  "block_param",
  "@19",
  "f_block_optarg",
  "f_block_opt",
  "block_args_tail",
  "f_block_arg",
  "opt_block_args_tail",
  "f_arg",
  "f_rest_arg",
  "do_block",
  "@20",
  "operation3",
  "@21",
  "@22",
  "cases",
  "@23",
  "exc_list",
  "exc_var",
  "numeric",
  "dsym",
  "string",
  "string1",
  "string_contents",
  "xstring_contents",
  "word_list",
  "word",
  "string_content",
  "qword_list",
  "string_dvar",
  "@24",
  "@25",
  "sym",
  "f_args",
  "f_optarg",
  "opt_f_block_arg",
  "f_norm_arg",
  "f_arg_item",
  "f_margs",
  "f_marg",
  "f_marg_list",
  "f_opt",
  "restarg_mark",
  "blkarg_mark",
  "assoc" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

def _reduce_1(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_2(val, _values, result)
                      comp = new_compstmt val[0]
                      if comp and comp.type == :begin and comp.size == 2
                        result = comp[1]
                        result.line = comp.line
                      else
                        result = comp
                      end
                    
    result
end

def _reduce_3(val, _values, result)
                      result = new_block
                    
    result
end

def _reduce_4(val, _values, result)
                      result = new_block val[0]
                    
    result
end

def _reduce_5(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

# reduce 6 omitted

def _reduce_7(val, _values, result)
                      result = val[2]
                    
    result
end

def _reduce_8(val, _values, result)
                      result = new_body val[0], val[1], val[2], val[3]
                    
    result
end

def _reduce_9(val, _values, result)
                      comp = new_compstmt val[0]
                      if comp and comp.type == :begin and comp.size == 2
                        result = comp[1]
                        result.line = comp.line
                      else
                        result = comp
                      end
                    
    result
end

def _reduce_10(val, _values, result)
                      result = new_block
                    
    result
end

def _reduce_11(val, _values, result)
                      result = new_block val[0]
                    
    result
end

def _reduce_12(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_13(val, _values, result)
                      lexer.lex_state = :expr_fname
                    
    result
end

def _reduce_14(val, _values, result)
                      result = s(:alias, val[1], val[3])
                    
    result
end

def _reduce_15(val, _values, result)
                      result = s(:valias, val[1].intern, val[2].intern)
                    
    result
end

# reduce 16 omitted

def _reduce_17(val, _values, result)
                      result = s(:valias, val[1].intern, val[2].intern)
                    
    result
end

def _reduce_18(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_19(val, _values, result)
                      result = new_if val[2], val[0], nil
                    
    result
end

def _reduce_20(val, _values, result)
                      result = new_if val[2], nil, val[0]
                    
    result
end

def _reduce_21(val, _values, result)
                      result = s(:while, val[2], val[0], true)
                    
    result
end

def _reduce_22(val, _values, result)
                      result = s(:until, val[2], val[0], true)
                    
    result
end

def _reduce_23(val, _values, result)
                      result = s(:rescue_mod, val[0], val[2])
                    
    result
end

# reduce 24 omitted

def _reduce_25(val, _values, result)
                      result = new_assign val[0], val[2]
                    
    result
end

def _reduce_26(val, _values, result)
                      result = s(:masgn, val[0], s(:to_ary, val[2]))
                    
    result
end

def _reduce_27(val, _values, result)
                      result = new_op_asgn val[1].intern, val[0], val[2]
                    
    result
end

# reduce 28 omitted

def _reduce_29(val, _values, result)
                      result = s(:op_asgn2, val[0], "#{val[2]}=".intern, val[3].intern, val[4])
                    
    result
end

# reduce 30 omitted

# reduce 31 omitted

# reduce 32 omitted

def _reduce_33(val, _values, result)
                      result = new_assign val[0], s(:svalue, val[2])
                    
    result
end

def _reduce_34(val, _values, result)
                      result = s(:masgn, val[0], s(:to_ary, val[2]))
                    
    result
end

def _reduce_35(val, _values, result)
                      result = s(:masgn, val[0], val[2])
                    
    result
end

# reduce 36 omitted

# reduce 37 omitted

def _reduce_38(val, _values, result)
                      result = s(:and, val[0], val[2])
                      result.line = val[0].line
                    
    result
end

def _reduce_39(val, _values, result)
                      result = s(:or, val[0], val[2])
                      result.line = val[0].line
                    
    result
end

def _reduce_40(val, _values, result)
                      result = s(:not, val[1])
                      result.line = val[1].line
                    
    result
end

def _reduce_41(val, _values, result)
                      result = s(:not, val[1])
                    
    result
end

# reduce 42 omitted

# reduce 43 omitted

# reduce 44 omitted

# reduce 45 omitted

def _reduce_46(val, _values, result)
                      args = val[1]
                      args = args[1] if args.size == 2
                      result = s(:return, args)
                    
    result
end

def _reduce_47(val, _values, result)
                      args = val[1]
                      args = args[1] if args.size == 2
                      result = s(:break, args)
                    
    result
end

def _reduce_48(val, _values, result)
                      args = val[1]
                      args = args[1] if args.size == 2
                      result = s(:next, args)
                    
    result
end

# reduce 49 omitted

# reduce 50 omitted

# reduce 51 omitted

# reduce 52 omitted

def _reduce_53(val, _values, result)
                      result = new_call nil, val[0].intern, val[1]
                    
    result
end

# reduce 54 omitted

def _reduce_55(val, _values, result)
                      result = new_call val[0], val[2].intern, val[3]
                    
    result
end

# reduce 56 omitted

def _reduce_57(val, _values, result)
                    result = new_call val[0], val[2].intern, val[3]
                  
    result
end

# reduce 58 omitted

def _reduce_59(val, _values, result)
                      result = new_super val[1]
                    
    result
end

def _reduce_60(val, _values, result)
                      result = new_yield val[1]
                    
    result
end

def _reduce_61(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_62(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_63(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_64(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_65(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_66(val, _values, result)
                      result = val[0] << val[1]
                    
    result
end

def _reduce_67(val, _values, result)
                      result = val[0] << s(:splat, val[2])
                    
    result
end

# reduce 68 omitted

def _reduce_69(val, _values, result)
                      result = val[0] << s(:splat)
                    
    result
end

# reduce 70 omitted

def _reduce_71(val, _values, result)
                      result = s(:array, s(:splat, val[1]))
                    
    result
end

def _reduce_72(val, _values, result)
                      result = s(:array, s(:splat))
                    
    result
end

# reduce 73 omitted

def _reduce_74(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_75(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_76(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

def _reduce_77(val, _values, result)
                      result = val[0] << val[1]
                    
    result
end

# reduce 78 omitted

# reduce 79 omitted

def _reduce_80(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_81(val, _values, result)
                      args = val[2]
                      args.type = :arglist if args.type == :array
                      result = s(:attrasgn, val[0], :[]=, args)
                    
    result
end

def _reduce_82(val, _values, result)
                      result = new_call val[0], val[2].intern, s(:arglist)
                    
    result
end

# reduce 83 omitted

# reduce 84 omitted

# reduce 85 omitted

# reduce 86 omitted

# reduce 87 omitted

def _reduce_88(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_89(val, _values, result)
                      args = val[2]
                      args.type = :arglist if args.type == :array
                      result = s(:attrasgn, val[0], :[]=, args)
                    
    result
end

def _reduce_90(val, _values, result)
                      result = s(:attrasgn, val[0], "#{val[2]}=".intern, s(:arglist))
                    
    result
end

def _reduce_91(val, _values, result)
                      result = s(:attrasgn, val[0], "#{val[2]}=".intern, s(:arglist))
                    
    result
end

def _reduce_92(val, _values, result)
                      result = s(:attrasgn, val[0], "#{val[2]}=".intern, s(:arglist))
                    
    result
end

def _reduce_93(val, _values, result)
                      result = s(:colon2, val[0], val[2].intern)
                    
    result
end

def _reduce_94(val, _values, result)
                      result = s(:colon3, val[1].intern)
                    
    result
end

# reduce 95 omitted

# reduce 96 omitted

def _reduce_97(val, _values, result)
                      result = s(:colon3, val[1].intern)
                    
    result
end

def _reduce_98(val, _values, result)
                      result = val[0].intern
                    
    result
end

def _reduce_99(val, _values, result)
                      result = s(:colon2, val[0], val[2].intern)
                    
    result
end

# reduce 100 omitted

# reduce 101 omitted

# reduce 102 omitted

def _reduce_103(val, _values, result)
                      lexer.lex_state = :expr_end
                      result = val[0]
                    
    result
end

def _reduce_104(val, _values, result)
                      lexer.lex_state = :expr_end
                      result = val[0]
                    
    result
end

def _reduce_105(val, _values, result)
                      result = s(:sym, val[0].intern)
                    
    result
end

# reduce 106 omitted

def _reduce_107(val, _values, result)
                      result = s(:undef, val[0])
                    
    result
end

def _reduce_108(val, _values, result)
                      result = val[0] << val[2]
                    
    result
end

# reduce 109 omitted

# reduce 110 omitted

# reduce 111 omitted

# reduce 112 omitted

# reduce 113 omitted

# reduce 114 omitted

# reduce 115 omitted

# reduce 116 omitted

# reduce 117 omitted

# reduce 118 omitted

# reduce 119 omitted

# reduce 120 omitted

# reduce 121 omitted

# reduce 122 omitted

# reduce 123 omitted

# reduce 124 omitted

# reduce 125 omitted

# reduce 126 omitted

# reduce 127 omitted

# reduce 128 omitted

# reduce 129 omitted

# reduce 130 omitted

# reduce 131 omitted

# reduce 132 omitted

# reduce 133 omitted

# reduce 134 omitted

# reduce 135 omitted

# reduce 136 omitted

# reduce 137 omitted

# reduce 138 omitted

# reduce 139 omitted

# reduce 140 omitted

# reduce 141 omitted

# reduce 142 omitted

# reduce 143 omitted

# reduce 144 omitted

# reduce 145 omitted

# reduce 146 omitted

# reduce 147 omitted

# reduce 148 omitted

# reduce 149 omitted

# reduce 150 omitted

# reduce 151 omitted

# reduce 152 omitted

# reduce 153 omitted

# reduce 154 omitted

# reduce 155 omitted

# reduce 156 omitted

# reduce 157 omitted

# reduce 158 omitted

# reduce 159 omitted

# reduce 160 omitted

# reduce 161 omitted

# reduce 162 omitted

# reduce 163 omitted

# reduce 164 omitted

# reduce 165 omitted

# reduce 166 omitted

# reduce 167 omitted

# reduce 168 omitted

# reduce 169 omitted

# reduce 170 omitted

# reduce 171 omitted

# reduce 172 omitted

# reduce 173 omitted

# reduce 174 omitted

# reduce 175 omitted

# reduce 176 omitted

# reduce 177 omitted

# reduce 178 omitted

# reduce 179 omitted

# reduce 180 omitted

# reduce 181 omitted

def _reduce_182(val, _values, result)
                      result = new_assign val[0], val[2]
                    
    result
end

def _reduce_183(val, _values, result)
                      result = new_assign val[0], s(:rescue_mod, val[2], val[4])
                    
    result
end

def _reduce_184(val, _values, result)
                      result = new_op_asgn val[1].intern, val[0], val[2]
                    
    result
end

def _reduce_185(val, _values, result)
                      args = val[2]
                      args.type = :arglist if args.type == :array
                      result = s(:op_asgn1, val[0], val[2], val[4].intern, val[5])
                      result.line = val[0].line
                    
    result
end

def _reduce_186(val, _values, result)
                      result = s(:op_asgn2, val[0], "#{val[2]}=".intern, val[3].intern, val[4])
                    
    result
end

# reduce 187 omitted

# reduce 188 omitted

# reduce 189 omitted

# reduce 190 omitted

# reduce 191 omitted

def _reduce_192(val, _values, result)
                      result = s(:dot2, val[0], val[2])
                      result.line = val[0].line
                    
    result
end

def _reduce_193(val, _values, result)
                      result = s(:dot3, val[0], val[2])
                      result.line = val[0].line
                    
    result
end

def _reduce_194(val, _values, result)
                      result = new_call val[0], :"+", s(:arglist, val[2])
                    
    result
end

def _reduce_195(val, _values, result)
                      result = new_call val[0], :"-", s(:arglist, val[2])
                    
    result
end

def _reduce_196(val, _values, result)
                      result = new_call val[0], :"*", s(:arglist, val[2])
                    
    result
end

def _reduce_197(val, _values, result)
                      result = new_call val[0], :"/", s(:arglist, val[2])
                    
    result
end

def _reduce_198(val, _values, result)
                      result = new_call val[0], :"%", s(:arglist, val[2])
                    
    result
end

def _reduce_199(val, _values, result)
                      result = new_call val[0], :"**", s(:arglist, val[2])
                    
    result
end

# reduce 200 omitted

# reduce 201 omitted

def _reduce_202(val, _values, result)
                      result = new_call val[1], :"+@", s(:arglist)
                      result = val[1] if [:int, :float].include? val[1].type
                    
    result
end

def _reduce_203(val, _values, result)
                      result = new_call val[1], :"-@", s(:arglist)
                      if val[1].type == :int
                        val[1][1] = -val[1][1]
                        result = val[1]
                      elsif val[1].type == :float
                        val[1][1] = -val[1][1].to_f
                        result = val[1]
                      end
                    
    result
end

def _reduce_204(val, _values, result)
                      result = new_call val[0], :"|", s(:arglist, val[2])
                    
    result
end

def _reduce_205(val, _values, result)
                      result = new_call val[0], :"^", s(:arglist, val[2])
                    
    result
end

def _reduce_206(val, _values, result)
                      result = new_call val[0], :"&", s(:arglist, val[2])
                    
    result
end

def _reduce_207(val, _values, result)
                      result = new_call val[0], :"<=>", s(:arglist, val[2])
                    
    result
end

def _reduce_208(val, _values, result)
                      result = new_call val[0], :">", s(:arglist, val[2])
                    
    result
end

def _reduce_209(val, _values, result)
                      result = new_call val[0], :">=", s(:arglist, val[2])
                    
    result
end

def _reduce_210(val, _values, result)
                      result = new_call val[0], :"<", s(:arglist, val[2])
                    
    result
end

def _reduce_211(val, _values, result)
                      result = new_call val[0], :"<=", s(:arglist, val[2])
                    
    result
end

def _reduce_212(val, _values, result)
                      result = new_call val[0], :"==", s(:arglist, val[2])
                    
    result
end

def _reduce_213(val, _values, result)
                      result = new_call val[0], :"===", s(:arglist, val[2])
                    
    result
end

def _reduce_214(val, _values, result)
                      result = s(:not, new_call(val[0], :"==", s(:arglist, val[2])))
                    
    result
end

def _reduce_215(val, _values, result)
                      result = new_call val[0], :"=~", s(:arglist, val[2])
                    
    result
end

def _reduce_216(val, _values, result)
                      result = s(:not, new_call(val[0], :"=~", s(:arglist, val[2])))
                    
    result
end

def _reduce_217(val, _values, result)
                      result = s(:not, val[1])
                    
    result
end

def _reduce_218(val, _values, result)
                      result = new_call val[1], :"~", s(:arglist)
                    
    result
end

def _reduce_219(val, _values, result)
                      result = new_call val[0], :"<<", s(:arglist, val[2])
                    
    result
end

def _reduce_220(val, _values, result)
                      result = new_call val[0], :">>", s(:arglist, val[2])
                    
    result
end

def _reduce_221(val, _values, result)
                      result = s(:and, val[0], val[2])
                      result.line = val[0].line
                    
    result
end

def _reduce_222(val, _values, result)
                      result = s(:or, val[0], val[2])
                      result.line = val[0].line
                    
    result
end

def _reduce_223(val, _values, result)
                      result = s(:defined, val[2])
                    
    result
end

def _reduce_224(val, _values, result)
                      result = s(:if, val[0], val[2], val[4])
                      result.line = val[0].line
                    
    result
end

# reduce 225 omitted

# reduce 226 omitted

def _reduce_227(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_228(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

def _reduce_229(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_230(val, _values, result)
                      val[0] << s(:hash, *val[2])
                      result = val[0]
                    
    result
end

def _reduce_231(val, _values, result)
                      result = s(:array, s(:hash, *val[0]))
                    
    result
end

def _reduce_232(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_233(val, _values, result)
                      result = val[1]
                    
    result
end

# reduce 234 omitted

# reduce 235 omitted

# reduce 236 omitted

# reduce 237 omitted

def _reduce_238(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

def _reduce_239(val, _values, result)
                      result = val[0]
                      add_block_pass val[0], val[1]
                    
    result
end

def _reduce_240(val, _values, result)
                      result = s(:arglist, s(:hash, *val[0]))
                      add_block_pass result, val[1]
                    
    result
end

def _reduce_241(val, _values, result)
                      result = val[0]
                      result << s(:hash, *val[2])
                    
    result
end

def _reduce_242(val, _values, result)
                      result = s(:arglist)
                      add_block_pass result, val[0]
                    
    result
end

# reduce 243 omitted

# reduce 244 omitted

def _reduce_245(val, _values, result)
                      lexer.cmdarg_push 1
                    
    result
end

def _reduce_246(val, _values, result)
                      lexer.cmdarg_pop
                      result = val[1]
                    
    result
end

# reduce 247 omitted

def _reduce_248(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_249(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_250(val, _values, result)
                      result = s(:block_pass, val[1])
                    
    result
end

def _reduce_251(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_252(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_253(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

def _reduce_254(val, _values, result)
                      result = s(:array, s(:splat, val[1]))
                    
    result
end

def _reduce_255(val, _values, result)
                      result = val[0] << val[2]
                    
    result
end

def _reduce_256(val, _values, result)
                      result  = val[0] << s(:splat, val[3])
                    
    result
end

def _reduce_257(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

# reduce 258 omitted

def _reduce_259(val, _values, result)
                      result = s(:splat, val[1])
                    
    result
end

# reduce 260 omitted

# reduce 261 omitted

# reduce 262 omitted

# reduce 263 omitted

# reduce 264 omitted

# reduce 265 omitted

# reduce 266 omitted

# reduce 267 omitted

# reduce 268 omitted

def _reduce_269(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_270(val, _values, result)
                      result = s(:begin, val[2])
                      result.line = val[1]
                    
    result
end

def _reduce_271(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_272(val, _values, result)
                      result = s(:paren, val[1] || s(:nil))
                    
    result
end

def _reduce_273(val, _values, result)
                      result = s(:colon2, val[0], val[2].intern)
                    
    result
end

def _reduce_274(val, _values, result)
                      result = s(:colon3, val[1])
                    
    result
end

def _reduce_275(val, _values, result)
                      result = new_call val[0], :[], val[2]
                    
    result
end

def _reduce_276(val, _values, result)
                      result = val[1] || s(:array)
                    
    result
end

def _reduce_277(val, _values, result)
                      result = s(:hash, *val[1])
                    
    result
end

def _reduce_278(val, _values, result)
                      result = s(:return)
                    
    result
end

def _reduce_279(val, _values, result)
                      result = new_yield val[2]
                    
    result
end

def _reduce_280(val, _values, result)
                      result = s(:yield)
                    
    result
end

def _reduce_281(val, _values, result)
                      result = s(:yield)
                    
    result
end

def _reduce_282(val, _values, result)
                      result = s(:defined, val[3])
                    
    result
end

def _reduce_283(val, _values, result)
                      result = s(:not, val[2])
                      result.line = val[2].line
                    
    result
end

def _reduce_284(val, _values, result)
                      result = s(:not, s(:nil))
                    
    result
end

def _reduce_285(val, _values, result)
                      result = new_call nil, val[0].intern, s(:arglist)
                      result << val[1]
                    
    result
end

# reduce 286 omitted

def _reduce_287(val, _values, result)
                      val[0] << val[1]
                      result = val[0]
                    
    result
end

def _reduce_288(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_289(val, _values, result)
                      result = new_if val[1], val[3], val[4]
                    
    result
end

def _reduce_290(val, _values, result)
                      result = new_if val[1], val[4], val[3]
                    
    result
end

def _reduce_291(val, _values, result)
                      lexer.cond_push 1
                      result = lexer.line
                    
    result
end

def _reduce_292(val, _values, result)
                      lexer.cond_pop
                    
    result
end

def _reduce_293(val, _values, result)
                      result = s(:while, val[2], val[5], true)
                      result.line = val[1]
                    
    result
end

def _reduce_294(val, _values, result)
                      lexer.cond_push 1
                      result = lexer.line
                    
    result
end

def _reduce_295(val, _values, result)
                      lexer.cond_pop
                    
    result
end

def _reduce_296(val, _values, result)
                      result = s(:until, val[2], val[5], true)
                      result.line = val[1]
                    
    result
end

def _reduce_297(val, _values, result)
                      result = s(:case, val[1], *val[3])
                      result.line = val[1].line
                    
    result
end

def _reduce_298(val, _values, result)
                      result = s(:case, nil, *val[2])
                      # result.line = val[2].line
                    
    result
end

def _reduce_299(val, _values, result)
                      result = s(:case, nil, val[3])
                      # result.line = val[3].line
                    
    result
end

def _reduce_300(val, _values, result)
                      # ...
                    
    result
end

def _reduce_301(val, _values, result)
                      # ...
                    
    result
end

# reduce 302 omitted

def _reduce_303(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_304(val, _values, result)
                      # ...
                    
    result
end

def _reduce_305(val, _values, result)
                      result = new_class val[2], val[3], val[5]
                      result.line = val[1]
                      result.end_line = lexer.line
                    
    result
end

def _reduce_306(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_307(val, _values, result)
                      # ...
                    
    result
end

def _reduce_308(val, _values, result)
                      result = new_sclass val[3], val[6]
                      result.line = val[2]
                    
    result
end

def _reduce_309(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_310(val, _values, result)
                      # ...
                    
    result
end

def _reduce_311(val, _values, result)
                      result = new_module val[2], val[4]
                      result.line = val[1]
                      result.end_line = lexer.line
                    
    result
end

def _reduce_312(val, _values, result)
                      result = lexer.scope_line
                      push_scope
                    
    result
end

def _reduce_313(val, _values, result)
                      result = new_def val[2], nil, val[1], val[3], val[4]
                      pop_scope
                    
    result
end

def _reduce_314(val, _values, result)
                       lexer.lex_state = :expr_fname
                    
    result
end

def _reduce_315(val, _values, result)
                      result = lexer.scope_line
                      push_scope
                    
    result
end

def _reduce_316(val, _values, result)
                      result = new_def val[5], val[1], val[4], val[6], val[7]
                      pop_scope
                    
    result
end

def _reduce_317(val, _values, result)
                      result = s(:break)
                    
    result
end

def _reduce_318(val, _values, result)
                      result = s(:next)
                    
    result
end

def _reduce_319(val, _values, result)
                      result = s(:redo)
                    
    result
end

# reduce 320 omitted

# reduce 321 omitted

# reduce 322 omitted

# reduce 323 omitted

# reduce 324 omitted

# reduce 325 omitted

# reduce 326 omitted

# reduce 327 omitted

# reduce 328 omitted

def _reduce_329(val, _values, result)
                      result = new_call nil, :lambda, s(:arglist)
                      result << new_iter(val[0], val[1])
                    
    result
end

def _reduce_330(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_331(val, _values, result)
                      result = nil
                    
    result
end

# reduce 332 omitted

# reduce 333 omitted

def _reduce_334(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_335(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_336(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_337(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_338(val, _values, result)
                      result = s(:if, val[2], val[4], val[5])
                      result.line = val[1]
                    
    result
end

# reduce 339 omitted

def _reduce_340(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_341(val, _values, result)
                      result = s(:block, val[0])
                    
    result
end

def _reduce_342(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_343(val, _values, result)
                      result = new_assign new_assignable(s(:identifier, val[0].intern)), val[2]
                    
    result
end

# reduce 344 omitted

def _reduce_345(val, _values, result)
                      result = 0
                    
    result
end

def _reduce_346(val, _values, result)
                      result = 0
                    
    result
end

def _reduce_347(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_348(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_349(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_350(val, _values, result)
                      nil
                    
    result
end

def _reduce_351(val, _values, result)
                      result = new_block_args val[0], val[2], val[4], val[5]
                    
    result
end

def _reduce_352(val, _values, result)
                      result = new_block_args val[0], val[2], nil, val[3]
                    
    result
end

def _reduce_353(val, _values, result)
                      result = new_block_args val[0], nil, val[2], val[3]
                    
    result
end

def _reduce_354(val, _values, result)
                      result = new_block_args val[0], nil, nil, nil
                    
    result
end

def _reduce_355(val, _values, result)
                      result = new_block_args val[0], nil, nil, val[1]
                    
    result
end

def _reduce_356(val, _values, result)
                      result = new_block_args nil, val[0], val[2], val[3]
                    
    result
end

def _reduce_357(val, _values, result)
                      result = new_block_args nil, val[0], nil, val[1]
                    
    result
end

def _reduce_358(val, _values, result)
                      result = new_block_args nil, nil, val[0], val[1]
                    
    result
end

def _reduce_359(val, _values, result)
                      result = new_block_args nil, nil, nil, val[0]
                    
    result
end

def _reduce_360(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_361(val, _values, result)
                      result = new_iter val[2], val[3]
                      result.line = val[1]
                      pop_scope
                    
    result
end

def _reduce_362(val, _values, result)
                      val[0] << val[1]
                      result = val[0]
                    
    result
end

# reduce 363 omitted

# reduce 364 omitted

def _reduce_365(val, _values, result)
                      result = new_call nil, val[0].intern, val[1]
                    
    result
end

def _reduce_366(val, _values, result)
                      result = new_call val[0], val[2].intern, val[3]
                    
    result
end

def _reduce_367(val, _values, result)
                      result = new_call val[0], :call, val[2]
                    
    result
end

def _reduce_368(val, _values, result)
                      result = new_call val[0], val[2].intern, val[3]
                    
    result
end

def _reduce_369(val, _values, result)
                      result = new_call val[0], val[2].intern, s(:arglist)
                    
    result
end

def _reduce_370(val, _values, result)
                      result = new_super val[1]
                    
    result
end

def _reduce_371(val, _values, result)
                      result = s(:super, nil)
                    
    result
end

def _reduce_372(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_373(val, _values, result)
                      result = new_iter val[2], val[3]
                      result.line = val[1]
                      pop_scope
                    
    result
end

def _reduce_374(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_375(val, _values, result)
                      result = new_iter val[2], val[3]
                      result.line = val[1]
                      pop_scope
                    
    result
end

def _reduce_376(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_377(val, _values, result)
                      part = s(:when, val[2], val[4])
                      part.line = val[2].line
                      result = [part]
                      result.push *val[5] if val[5]
                    
    result
end

def _reduce_378(val, _values, result)
                      result = [val[0]]
                    
    result
end

# reduce 379 omitted

def _reduce_380(val, _values, result)
                      exc = val[1] || s(:array)
                      exc << new_assign(val[2], s(:gvar, '$!'.intern)) if val[2]
                      result = [s(:resbody, exc, val[4])]
                      result.push val[5].first if val[5]
                    
    result
end

def _reduce_381(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_382(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

# reduce 383 omitted

# reduce 384 omitted

def _reduce_385(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_386(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_387(val, _values, result)
                      result = val[1].nil? ? s(:nil) : val[1]
                    
    result
end

# reduce 388 omitted

# reduce 389 omitted

# reduce 390 omitted

# reduce 391 omitted

def _reduce_392(val, _values, result)
                      result = new_str val[0]
                    
    result
end

# reduce 393 omitted

# reduce 394 omitted

def _reduce_395(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_396(val, _values, result)
                      result = s(:str, val[0])
                    
    result
end

def _reduce_397(val, _values, result)
                      result = new_xstr val[1]
                    
    result
end

def _reduce_398(val, _values, result)
                      result = new_regexp val[1], val[2]
                    
    result
end

def _reduce_399(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_400(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_401(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_402(val, _values, result)
                      part = val[1]
                      part = s(:dstr, "", val[1]) if part.type == :evstr
                      result = val[0] << part
                    
    result
end

def _reduce_403(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_404(val, _values, result)
                      result = val[0].concat([val[1]])
                    
    result
end

def _reduce_405(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_406(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_407(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_408(val, _values, result)
                      result = val[0] << s(:str, val[1])
                    
    result
end

def _reduce_409(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_410(val, _values, result)
                      result = str_append val[0], val[1]
                    
    result
end

def _reduce_411(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_412(val, _values, result)
                      result = str_append val[0], val[1]
                    
    result
end

def _reduce_413(val, _values, result)
                      result = s(:str, val[0])
                    
    result
end

def _reduce_414(val, _values, result)
                      result = lexer.strterm
                      lexer.strterm = nil
                    
    result
end

def _reduce_415(val, _values, result)
                      lexer.strterm = val[1]
                      result = s(:evstr, val[2])
                    
    result
end

def _reduce_416(val, _values, result)
                      lexer.cond_push 0
                      lexer.cmdarg_push 0
                      result = lexer.strterm
                      lexer.strterm = nil
                      lexer.lex_state = :expr_beg
                    
    result
end

def _reduce_417(val, _values, result)
                      lexer.strterm = val[1]
                      lexer.cond_lexpop
                      lexer.cmdarg_lexpop
                      result = s(:evstr, val[2])
                    
    result
end

def _reduce_418(val, _values, result)
                      result = s(:gvar, val[0].intern)
                    
    result
end

def _reduce_419(val, _values, result)
                      result = s(:ivar, val[0].intern)
                    
    result
end

def _reduce_420(val, _values, result)
                      result = s(:cvar, val[0].intern)
                    
    result
end

# reduce 421 omitted

def _reduce_422(val, _values, result)
                      result = s(:sym, val[1].intern)
                      lexer.lex_state = :expr_end
                    
    result
end

def _reduce_423(val, _values, result)
                      result = s(:sym, val[0].intern)
                    
    result
end

# reduce 424 omitted

# reduce 425 omitted

# reduce 426 omitted

# reduce 427 omitted

def _reduce_428(val, _values, result)
                      result = new_dsym val[1]
                    
    result
end

def _reduce_429(val, _values, result)
                      result = s(:int, val[0])
                    
    result
end

def _reduce_430(val, _values, result)
                      result = s(:float, val[0])
                    
    result
end

# reduce 431 omitted

# reduce 432 omitted

def _reduce_433(val, _values, result)
                      result = s(:identifier, val[0].intern)
                    
    result
end

def _reduce_434(val, _values, result)
                      result = s(:ivar, val[0].intern)
                    
    result
end

def _reduce_435(val, _values, result)
                      result = s(:gvar, val[0].intern)
                    
    result
end

def _reduce_436(val, _values, result)
                      result = s(:const, val[0].intern)
                    
    result
end

def _reduce_437(val, _values, result)
                      result = s(:cvar, val[0].intern)
                    
    result
end

def _reduce_438(val, _values, result)
                      result = s(:nil)
                    
    result
end

def _reduce_439(val, _values, result)
                      result = s(:self)
                    
    result
end

def _reduce_440(val, _values, result)
                      result = s(:true)
                    
    result
end

def _reduce_441(val, _values, result)
                      result = s(:false)
                    
    result
end

def _reduce_442(val, _values, result)
                      result = s(:str, self.file)
                    
    result
end

def _reduce_443(val, _values, result)
                      result = s(:int, lexer.line)
                    
    result
end

def _reduce_444(val, _values, result)
                      result = new_var_ref val[0]
                    
    result
end

def _reduce_445(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_446(val, _values, result)
                      result = s(:nth_ref, val[0])
                    
    result
end

# reduce 447 omitted

def _reduce_448(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_449(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_450(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_451(val, _values, result)
                      result = val[1]
                      lexer.lex_state = :expr_beg
                    
    result
end

def _reduce_452(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_453(val, _values, result)
                      result = new_args val[0], val[2], val[4], val[5]
                    
    result
end

def _reduce_454(val, _values, result)
                      result = new_args val[0], val[2], nil, val[3]
                    
    result
end

def _reduce_455(val, _values, result)
                      result = new_args val[0], nil, val[2], val[3]
                    
    result
end

def _reduce_456(val, _values, result)
                      result = new_args val[0], nil, nil, val[1]
                    
    result
end

def _reduce_457(val, _values, result)
                      result = new_args nil, val[0], val[2], val[3]
                    
    result
end

def _reduce_458(val, _values, result)
                      result = new_args nil, val[0], nil, val[1]
                    
    result
end

def _reduce_459(val, _values, result)
                      result = new_args nil, nil, val[0], val[1]
                    
    result
end

def _reduce_460(val, _values, result)
                      result = new_args nil, nil, nil, val[0]
                    
    result
end

def _reduce_461(val, _values, result)
                      result = s(:args)
                    
    result
end

def _reduce_462(val, _values, result)
                      raise 'formal argument cannot be a constant'
                    
    result
end

def _reduce_463(val, _values, result)
                      raise 'formal argument cannot be an instance variable'
                    
    result
end

def _reduce_464(val, _values, result)
                      raise 'formal argument cannot be a class variable'
                    
    result
end

def _reduce_465(val, _values, result)
                      raise 'formal argument cannot be a global variable'
                    
    result
end

def _reduce_466(val, _values, result)
                      result = val[0].intern
                      scope.add_local result
                    
    result
end

def _reduce_467(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_468(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_469(val, _values, result)
                      result = s(:lasgn, val[0])
                    
    result
end

# reduce 470 omitted

def _reduce_471(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

def _reduce_472(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

# reduce 473 omitted

# reduce 474 omitted

# reduce 475 omitted

# reduce 476 omitted

# reduce 477 omitted

def _reduce_478(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_479(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_480(val, _values, result)
                      result = new_assign new_assignable(s(:identifier, val[0].intern)), val[2]
                    
    result
end

def _reduce_481(val, _values, result)
                      result = s(:block, val[0])
                    
    result
end

def _reduce_482(val, _values, result)
                      result = val[0]
                      val[0] << val[2]
                    
    result
end

# reduce 483 omitted

# reduce 484 omitted

def _reduce_485(val, _values, result)
                      result = "*#{val[1]}".intern
                    
    result
end

def _reduce_486(val, _values, result)
                      result = :"*"
                    
    result
end

# reduce 487 omitted

# reduce 488 omitted

def _reduce_489(val, _values, result)
                      result = "&#{val[1]}".intern
                    
    result
end

def _reduce_490(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_491(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_492(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_493(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_494(val, _values, result)
                      result = []
                    
    result
end

def _reduce_495(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_496(val, _values, result)
                      raise "unsupported assoc list type (#@line_number)"
                    
    result
end

def _reduce_497(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_498(val, _values, result)
                      result = val[0].push *val[2]
                    
    result
end

def _reduce_499(val, _values, result)
                      result = [val[0], val[2]]
                    
    result
end

def _reduce_500(val, _values, result)
                      result = [s(:sym, val[0].intern), val[1]]
                    
    result
end

# reduce 501 omitted

# reduce 502 omitted

# reduce 503 omitted

# reduce 504 omitted

# reduce 505 omitted

# reduce 506 omitted

# reduce 507 omitted

# reduce 508 omitted

# reduce 509 omitted

# reduce 510 omitted

# reduce 511 omitted

# reduce 512 omitted

# reduce 513 omitted

# reduce 514 omitted

# reduce 515 omitted

# reduce 516 omitted

# reduce 517 omitted

# reduce 518 omitted

# reduce 519 omitted

# reduce 520 omitted

# reduce 521 omitted

# reduce 522 omitted

# reduce 523 omitted

# reduce 524 omitted

# reduce 525 omitted

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module Opal
