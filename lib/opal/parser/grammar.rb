#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.9
# from Racc grammer file "".
#

require 'racc/parser.rb'
module Opal
  class Parser < Racc::Parser


##### State transition tables begin ###

clist = [
'64,65,66,8,52,598,258,568,58,59,-479,258,598,62,258,60,61,63,28,29,67',
'68,-95,467,-103,98,642,27,26,25,91,90,92,93,560,547,18,559,109,677,-102',
'-87,7,42,6,9,95,94,85,51,87,86,88,-98,89,96,97,598,82,83,-95,39,40,-94',
'-100,-70,677,206,207,620,206,207,676,-103,-97,253,560,102,253,562,206',
'207,101,37,598,-102,31,641,598,53,257,55,-95,33,196,257,-103,41,257',
'676,-102,-82,206,207,-99,19,197,-87,-98,567,80,74,76,77,78,79,102,198',
'597,75,81,101,-100,102,-87,597,-94,57,101,-94,54,64,65,66,673,52,38',
'84,205,58,59,-97,-93,-87,62,-101,60,61,63,28,29,67,68,-87,311,-89,841',
'311,27,26,25,91,90,92,93,-94,-91,18,102,-570,597,944,619,101,42,-94',
'-88,95,94,85,51,87,86,88,805,89,96,97,-99,82,83,102,39,40,-93,102,101',
'597,247,102,101,597,302,-95,101,-95,-90,-103,-95,-103,-571,-102,-103',
'-102,211,303,-102,215,216,-98,53,-98,55,-101,-98,-467,630,311,41,759',
'759,-89,-467,-100,-96,-100,19,399,-100,677,677,80,74,76,77,78,79,-92',
'206,207,75,81,-97,-91,-97,759,-88,-97,57,402,-93,54,64,65,66,-570,52',
'38,84,102,58,59,676,676,101,62,-90,60,61,63,28,29,67,68,-92,632,631',
'628,817,27,26,25,91,90,92,93,-93,-89,220,-99,-571,-99,704,630,-99,42',
'-93,74,95,94,85,51,87,86,88,75,89,96,97,-91,82,83,-88,39,40,228,102',
'102,758,758,204,101,101,-89,-101,102,-101,818,-98,-101,101,-570,-90',
'-89,630,211,206,207,215,-571,-92,53,102,55,758,-91,225,101,-88,41,227',
'226,632,631,604,-91,605,219,-88,912,-94,799,80,74,76,77,78,79,-90,413',
'-103,75,81,426,913,958,-92,-100,-90,57,340,466,54,64,65,66,-92,52,38',
'84,337,58,59,632,631,628,62,468,60,61,63,28,29,67,68,560,-568,340,562',
'-96,27,26,25,91,90,92,93,337,469,220,352,351,355,354,-97,228,42,-479',
'216,95,94,85,51,87,86,88,274,89,96,97,630,82,83,502,39,40,249,250,-470',
'355,354,844,517,605,251,-470,225,-470,-470,338,227,226,223,224,519,-470',
'211,-87,630,215,-568,635,53,521,55,-69,271,-95,269,586,41,347,345,344',
'630,346,338,102,219,529,-568,530,101,80,272,76,77,78,79,632,631,633',
'75,81,531,586,547,347,345,344,57,346,-470,54,-470,275,340,-477,540,38',
'84,64,65,66,-477,52,337,632,631,58,59,262,560,311,62,562,60,61,63,28',
'29,67,68,632,631,637,-93,253,27,26,25,91,90,92,93,752,-102,220,355,354',
'423,544,665,652,42,425,424,95,94,85,51,87,86,88,274,89,96,97,630,82',
'83,936,39,40,228,232,237,238,239,234,236,244,245,240,241,338,548,221',
'222,-476,102,242,243,-89,211,101,-476,215,311,549,53,1005,55,-98,271',
'225,269,231,41,227,226,223,224,235,233,229,219,230,304,305,228,80,272',
'76,77,78,79,632,631,643,75,81,-475,246,653,-238,203,201,57,-475,311',
'54,563,275,202,-472,564,38,84,64,65,66,-472,52,-473,102,-474,58,59,521',
'101,-473,62,-474,60,61,63,28,29,67,68,411,412,571,-91,574,27,26,25,91',
'90,92,93,102,-100,220,575,804,101,578,665,199,42,200,579,95,94,85,51',
'87,86,88,274,89,96,97,581,82,83,583,39,40,228,232,237,238,239,234,236',
'244,245,240,241,-337,-337,221,222,-88,593,242,243,-337,211,594,625,215',
'415,-97,53,228,55,626,271,225,269,231,41,227,226,223,224,235,233,229',
'219,230,542,543,610,80,272,76,77,78,79,206,207,611,75,81,225,246,355',
'354,227,226,57,612,-337,54,-337,275,870,844,636,38,84,64,65,66,8,52',
'640,902,903,58,59,904,96,97,62,644,60,61,63,28,29,67,68,104,105,106',
'107,108,27,26,25,91,90,92,93,647,967,18,347,345,344,-269,346,7,42,649',
'9,95,94,85,51,87,86,88,650,89,96,97,651,82,83,253,39,40,664,586,228',
'347,345,344,586,346,347,345,344,340,346,967,228,347,345,344,228,346',
'37,337,228,281,228,311,53,688,55,689,33,870,844,697,41,706,-82,203,462',
'589,707,709,19,553,349,463,592,80,74,76,77,78,79,355,354,225,75,81,720',
'227,226,223,224,726,57,727,728,54,64,65,66,733,52,38,84,747,58,59,748',
'750,754,62,605,60,61,63,295,296,67,68,338,762,465,801,464,291,292,298',
'91,90,92,93,-270,502,220,539,536,502,502,820,821,293,828,537,95,94,85',
'51,87,86,88,830,89,96,97,831,82,83,519,330,521,347,345,344,340,346,720',
'539,550,104,105,106,107,108,337,551,586,838,347,345,344,289,346,253',
'286,253,839,53,253,55,535,285,538,720,228,228,844,349,325,104,105,106',
'107,108,352,351,355,354,80,74,76,77,78,79,589,850,851,75,81,852,854',
'592,465,578,464,57,857,859,54,64,65,66,854,52,299,84,863,58,59,866,844',
'874,62,338,60,61,63,295,296,67,68,875,877,878,-570,880,291,292,298,91',
'90,92,93,889,578,220,539,607,892,894,896,898,293,900,608,95,94,85,51',
'87,86,88,-271,89,96,97,915,82,83,916,330,311,347,345,344,340,346,918',
'919,920,539,616,922,923,720,337,925,586,614,347,345,344,289,346,-269',
'215,929,-571,53,938,55,606,939,609,941,947,949,950,349,311,570,963,-272',
'969,971,352,351,355,354,80,74,76,77,78,79,589,854,980,75,81,854,854',
'865,301,984,615,57,538,938,54,64,65,66,987,52,299,84,988,58,59,993,578',
'995,62,338,60,61,63,295,296,67,68,997,999,898,1001,1010,291,292,298',
'91,90,92,93,938,1018,220,539,616,726,854,938,1033,42,1034,746,95,94',
'85,51,87,86,88,1001,89,96,97,1001,82,83,1001,39,40,1039,586,1040,347',
'345,344,586,346,347,345,344,340,346,1001,,,,,,,211,337,,215,,,53,,55',
'615,,538,,,41,,,-290,-290,589,,,219,,349,-290,,80,74,76,77,78,79,355',
'354,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,295',
'296,67,68,338,,-290,,-290,291,292,298,91,90,92,93,,,220,539,616,,,,',
'42,,746,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,586,,347,345,344',
'586,346,347,345,344,340,346,,,,,,,,211,337,,215,,,53,,55,615,,538,,',
'41,,,-292,-292,589,,,219,,349,-292,,80,74,76,77,78,79,355,354,,75,81',
',,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,295,296,67,68',
'338,,-292,,-292,291,292,298,91,90,92,93,,,220,539,1008,,,,,42,,1009',
'95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,228,,,,,586,,347,345,344',
'340,346,,,,,,242,243,211,337,,215,,,53,,55,1007,,609,225,,41,,227,226',
'223,224,,,219,,349,,,80,74,76,77,78,79,355,354,,75,81,,,,,,,57,,,54',
'64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,28,29,67,68,338,,,,,27,26',
'25,91,90,92,93,,,18,,586,,347,345,344,42,346,,95,94,85,51,87,86,88,',
'89,96,97,,82,83,,39,40,228,586,,347,345,344,586,346,347,345,344,340',
'346,589,,,,242,243,,211,337,,215,,,53,,55,,,225,,231,41,227,226,223',
'224,589,,229,19,230,349,,,80,74,76,77,78,79,355,354,,75,81,,,,,,,57',
',,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,28,29,67,68,338,,,,,27',
'26,25,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,274,89,96,97',
',82,83,,39,40,228,232,237,238,239,234,236,244,245,240,241,-289,-289',
'221,222,,,242,243,-289,211,,,215,-571,,53,,55,,271,225,,231,41,227,226',
'223,224,235,233,229,219,230,,,,80,272,76,77,78,79,,,,75,81,,246,,-238',
',,57,,-289,54,-289,275,,,,38,84,64,65,66,,52,,,,58,59,,,,62,,60,61,63',
'295,296,67,68,,,,,,291,292,298,91,90,92,93,,,220,,,,,,,42,,,95,94,85',
'51,87,86,88,274,89,96,97,,82,83,,39,40,228,232,237,238,239,234,236,244',
'245,240,241,,,221,222,,,242,243,,211,,,215,,,53,,55,,,225,,231,41,227',
'226,223,224,235,233,229,219,230,,,,80,272,76,77,78,79,,,,75,81,,246',
'822,,,,57,,,54,,275,,,,38,84,64,65,66,,52,,,,58,59,,,,62,,60,61,63,28',
'29,67,68,,,,,,27,26,25,91,90,92,93,,,18,,586,,347,345,344,42,346,,95',
'94,85,51,87,86,88,,89,96,97,,82,83,,39,40,228,,,,,,586,,347,345,344',
'340,346,589,,,,242,243,,211,337,,215,,,53,,55,,,225,,231,41,227,226',
'223,224,,,229,19,230,349,,,80,74,76,77,78,79,355,354,,75,81,,,,,,,57',
',,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,28,29,67,68,338,,,,,27',
'26,25,91,90,92,93,,,18,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97,,82',
'83,,39,40,228,,,,,,586,,347,345,344,340,346,,,,,242,243,,211,337,,215',
',,53,,55,,,225,,231,41,227,226,223,224,,,229,19,230,349,,,80,74,76,77',
'78,79,355,354,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,',
'60,61,63,28,29,67,68,338,,,,,27,26,25,91,90,92,93,,,18,,,,,,,42,,,95',
'94,85,51,87,86,88,,89,96,97,,82,83,,39,40,228,,,,,,586,,347,345,344',
'340,346,,,,,242,243,,211,337,,215,,,53,,55,,,225,,231,41,227,226,223',
'224,,,229,19,230,349,,,80,74,76,77,78,79,355,354,,75,81,102,,,,,101',
'57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,295,296,67,68,338',
',,,,291,292,298,91,90,92,93,,,220,,,,,,,293,,,95,94,85,51,87,86,88,',
'89,96,97,,82,83,,330,,347,345,344,340,346,,,,,,,,,337,,,,,,,367,,,31',
',,53,,55,,33,,,,,,349,,,,,,,352,351,355,354,80,74,76,77,78,79,,,,75',
'81,,,,,,,57,,,54,64,65,66,,52,299,84,,58,59,,,,62,338,60,61,63,295,296',
'67,68,,,,,,291,292,298,91,90,92,93,,,220,,,,,,,293,,,95,94,85,51,87',
'86,372,,89,96,97,228,82,83,,330,,347,345,344,340,346,,,,,,,242,243,337',
',,,378,,,373,,,215,,225,53,231,55,227,226,223,224,,,,349,,,,,,,352,351',
'355,354,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,-567,-567,-567,,-567',
'299,84,,-567,-567,,,,-567,338,-567,-567,-567,-567,-567,-567,-567,,-567',
',,,-567,-567,-567,-567,-567,-567,-567,,,-567,,,,,,,-567,,,-567,-567',
'-567,-567,-567,-567,-567,-567,-567,-567,-567,,-567,-567,,-567,-567,228',
'232,237,238,239,234,236,244,245,240,241,,,221,222,,,242,243,,-567,,',
'-567,-567,,-567,,-567,,-567,225,-567,231,-567,227,226,223,224,235,233',
'229,-567,230,-567,,,-567,-567,-567,-567,-567,-567,,,,-567,-567,,246',
',,,,-567,,,-567,,-567,,,,-567,-567,-568,-568,-568,,-568,,,,-568,-568',
',,,-568,,-568,-568,-568,-568,-568,-568,-568,,-568,,,,-568,-568,-568',
'-568,-568,-568,-568,,,-568,,,,,,,-568,,,-568,-568,-568,-568,-568,-568',
'-568,-568,-568,-568,-568,,-568,-568,,-568,-568,228,232,237,238,239,234',
'236,244,245,240,241,,,221,222,,,242,243,,-568,,,-568,-568,,-568,,-568',
',-568,225,-568,231,-568,227,226,223,224,235,233,229,-568,230,-568,,',
'-568,-568,-568,-568,-568,-568,,,,-568,-568,,246,,,,,-568,,,-568,,-568',
',,,-568,-568,64,65,66,8,52,,,,58,59,,,,62,,60,61,63,28,29,67,68,,,,',
',27,26,25,91,90,92,93,,,18,,,,,,7,42,6,9,95,94,85,51,87,86,88,,89,96',
'97,,82,83,,39,40,228,,,,,,586,,347,345,344,340,346,,,,,242,243,,37,337',
',31,,,53,,55,,33,225,,231,41,227,226,223,224,,,,19,,349,,,80,74,76,77',
'78,79,355,354,,75,81,,,,,,415,57,,,54,64,65,66,,52,38,84,,58,59,,,,62',
',60,61,63,28,29,67,68,338,,,,,27,26,25,91,90,92,93,,,18,,,,,,,42,,,95',
'94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,586,,347,345,344,340',
'346,,,,,,,,211,337,,215,,,53,,55,,,,,,41,,,,,,,,19,,349,,,80,74,76,77',
'78,79,355,354,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,',
'60,61,63,28,29,67,68,338,,,,,27,26,25,91,90,92,93,,,18,,,,,,,42,,,95',
'94,85,51,87,86,88,,89,96,97,,82,83,,39,40,228,232,237,238,239,234,236',
'244,245,240,241,,,221,222,,,242,243,,211,,,215,,,53,,55,,,225,,231,41',
'227,226,223,224,235,233,229,19,230,,,,80,74,76,77,78,79,,,,75,81,,246',
',,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,28,29,67,68,,',
',,,27,26,25,91,90,92,93,,,18,,,,,,,42,,,95,94,85,51,87,86,88,,89,96',
'97,,82,83,,39,40,228,232,237,238,239,234,236,244,245,240,241,,,221,222',
',,242,243,,211,,,215,,,53,,55,,,225,,231,41,227,226,223,224,235,233',
'229,19,230,,,,80,74,76,77,78,79,,,,75,81,,246,,,,,57,,,54,64,65,66,',
'52,38,84,,58,59,,,,62,,60,61,63,28,29,67,68,,,,,,27,26,25,91,90,92,93',
',,18,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,228,232',
'237,238,239,234,236,244,245,240,241,,,221,222,,,242,243,,211,,,215,',
',53,,55,,,225,,231,41,227,226,223,224,235,233,229,19,230,,,,80,74,76',
'77,78,79,,,,75,81,,246,,,,,57,,,54,64,65,66,8,52,38,84,,58,59,,,,62',
',60,61,63,28,29,67,68,,,,,,27,26,25,91,90,92,93,,,18,,,,,,7,42,,9,95',
'94,85,51,87,86,88,,89,96,97,,82,83,,39,40,228,232,237,238,239,234,236',
'244,245,240,241,,,221,222,,,242,243,,37,,,31,,,53,,55,,33,225,,231,41',
'227,226,223,224,235,233,229,19,230,,,,80,74,76,77,78,79,,,,75,81,,246',
',,,,57,,,54,64,65,66,8,52,38,84,,58,59,,,,62,,60,61,63,28,29,67,68,',
',,,,27,26,25,91,90,92,93,,,18,,,,,,7,42,6,9,95,94,85,51,87,86,88,,89',
'96,97,,82,83,,39,40,228,232,237,238,239,234,236,244,245,240,241,,,221',
'222,,,242,243,,37,,,31,,,53,,55,,33,225,,231,41,227,226,223,224,235',
'233,229,19,230,,,,80,74,76,77,78,79,,,,75,81,,246,,,,,57,,,54,64,65',
'66,8,52,38,84,,58,59,,,,62,,60,61,63,28,29,67,68,,,,,,27,26,25,91,90',
'92,93,,,18,,,,,,7,42,,9,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40',
'228,232,237,238,239,234,236,244,245,240,241,,,221,222,,,242,243,,37',
',,31,,,53,,55,,33,225,,231,41,227,226,223,224,235,233,229,19,230,,,',
'80,74,76,77,78,79,,,,75,81,,246,,,,,57,,,54,64,65,66,,52,38,84,,58,59',
',,,62,,60,61,63,28,29,67,68,,,,,,27,26,25,91,90,92,93,,,220,,,,,,,42',
',,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,228,232,237,238,239,234',
'236,244,245,240,241,,,221,222,,,242,243,,211,,,215,,,53,,55,,431,225',
',231,41,227,226,223,224,235,233,229,219,230,,,,80,74,76,77,78,79,,,',
'75,81,,246,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,28',
'29,67,68,,,,,,27,26,25,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86',
'88,,89,96,97,,82,83,,39,40,228,232,237,238,239,234,236,244,245,240,241',
',,221,222,,,242,243,,211,,,215,,,53,,55,,,225,,231,41,227,226,223,224',
'235,233,229,219,230,,,,80,74,76,77,78,79,,,,75,81,,246,,,,,57,,,54,64',
'65,66,,52,38,84,,58,59,,,,62,,60,61,63,28,29,67,68,,,,,,27,26,25,91',
'90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,274,89,96,97,,82,83,',
'39,40,228,232,237,238,239,234,236,244,245,240,241,,,221,222,,,242,243',
',211,,,215,,,53,,55,,271,225,,231,41,227,226,223,224,235,233,229,219',
'230,,,,80,272,76,77,78,79,,,,75,81,,246,,,,,57,,,54,,275,,,,38,84,64',
'65,66,,52,,,,58,59,,,,62,,60,61,63,28,29,67,68,,,,,,27,26,25,91,90,92',
'93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,274,89,96,97,,82,83,,39,40',
'228,232,237,238,239,234,236,244,245,240,241,,,221,222,,,242,243,,211',
',,215,,,53,,55,,271,225,,231,41,227,226,223,224,235,233,229,219,230',
',,,80,272,76,77,78,79,,,,75,81,,246,,,,,57,,,54,,275,,,,38,84,64,65',
'66,,52,,,,58,59,,,,62,,60,61,63,28,29,67,68,,,,,,27,26,25,91,90,92,93',
',,220,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,228,232',
'237,238,239,234,236,244,245,240,241,,,221,222,,,242,243,,211,,,215,',
',53,,55,,,225,,231,41,227,226,223,224,235,233,229,219,230,,,,80,74,76',
'77,78,79,,,,75,81,,246,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,',
'60,61,63,28,29,67,68,,,,,,27,26,25,91,90,92,93,,,220,,,,,,,42,,,95,94',
'85,51,87,86,88,,89,96,97,,82,83,,39,40,228,232,237,238,239,234,236,244',
'245,240,241,,,221,222,,,242,243,,211,,,215,,,53,,55,,431,225,,231,41',
'227,226,223,224,235,233,229,219,230,,,,80,74,76,77,78,79,,,,75,81,,246',
',,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,28,29,67,68,,',
',,,27,26,25,91,90,92,93,,,18,,,,,,,42,,,95,94,85,51,87,86,88,,89,96',
'97,,82,83,,39,40,228,232,237,238,239,234,236,244,245,240,241,,,-591',
'-591,,,242,243,,211,,,215,,,53,,55,,,225,,231,41,227,226,223,224,235',
'233,229,19,230,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66',
',52,38,84,,58,59,,,,62,,60,61,63,28,29,67,68,,,,,,27,26,25,91,90,92',
'93,,,18,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,228',
'232,237,238,239,234,236,244,245,240,241,,,-591,-591,,,242,243,,211,',
',215,,,53,,55,,,225,,231,41,227,226,223,224,235,233,229,19,230,,,,80',
'74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,8,52,38,84,,58,59,,,',
'62,,60,61,63,28,29,67,68,,,,,,27,26,25,91,90,92,93,,,18,,,,,,7,42,,9',
'95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,228,-591,-591,-591,-591',
'234,236,,,-591,-591,,,,,,,242,243,,37,,,31,,,53,,55,,33,225,,231,41',
'227,226,223,224,235,233,229,19,230,,,,80,74,76,77,78,79,,,,75,81,,,',
',,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,28,29,67,68,,,',
',,27,26,25,91,90,92,93,,,18,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97',
',82,83,,39,40,228,-591,-591,-591,-591,234,236,,,-591,-591,,,,,,,242',
'243,,211,,,215,,471,53,,55,,,225,,231,41,227,226,223,224,235,233,229',
'19,230,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84',
',58,59,,,,62,,60,61,63,295,296,67,68,,,,,,291,292,298,91,90,92,93,,',
'220,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,228,-591',
'-591,-591,-591,234,236,,,-591,-591,,,,,,,242,243,,211,,,215,,,53,,55',
',,225,,231,41,227,226,223,224,235,233,229,219,230,,,,80,74,76,77,78',
'79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63',
'295,296,67,68,,,,,,291,292,298,91,90,92,93,,,220,,,,,,,42,,,95,94,85',
'51,87,86,88,,89,96,97,,82,83,,39,40,228,-591,-591,-591,-591,234,236',
',,-591,-591,,,,,,,242,243,,211,,,215,,,53,,55,,,225,,231,41,227,226',
'223,224,235,233,229,219,230,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,',
',54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,295,296,67,68,,,,,,291',
'292,298,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97',
',82,83,,39,40,228,-591,-591,-591,-591,234,236,,,-591,-591,,,,,,,242',
'243,,211,,,215,,,53,,55,,,225,,231,41,227,226,223,224,235,233,229,219',
'230,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,',
'58,59,,,,62,,60,61,63,295,296,67,68,,,,,,291,292,298,91,90,92,93,,,220',
',,,,,,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,228,-591,-591',
'-591,-591,234,236,,,-591,-591,,,,,,,242,243,,211,,,215,,,53,,55,,,225',
',231,41,227,226,223,224,235,233,229,219,230,,,,80,74,76,77,78,79,,,',
'75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,295,296',
'67,68,,,,,,291,292,298,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86',
'88,,89,96,97,,82,83,,39,40,228,232,237,238,239,234,236,,,240,241,,,',
',,,242,243,,211,,,215,,,53,,55,,,225,,231,41,227,226,223,224,235,233',
'229,219,230,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52',
'38,84,,58,59,,,,62,,60,61,63,295,296,67,68,,,,,,291,292,298,91,90,92',
'93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,228',
'232,237,238,239,234,236,244,,240,241,,,,,,,242,243,,211,,,215,,,53,',
'55,,,225,,231,41,227,226,223,224,235,233,229,219,230,,,,80,74,76,77',
'78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61',
'63,295,296,67,68,,,,,,291,292,298,91,90,92,93,,,220,,,,,,,42,,,95,94',
'85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215',
',,53,,55,,,,,,41,,,,,,,,219,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57',
',,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,295,296,67,68,,,,,,291',
'292,298,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97',
',82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,,,,,,,',
'219,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84',
',58,59,,,,62,,60,61,63,295,296,67,68,,,,,,291,292,298,91,90,92,93,,',
'220,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,',
',,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,,,,,,,,219,,,,,80,74,76,77,78',
'79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63',
'295,296,67,68,,,,,,291,292,298,91,90,92,93,,,220,,,,,,,42,,,95,94,85',
'51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,',
'53,,55,,,,,,41,,,,,,,,219,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,',
'54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,295,296,67,68,,,,,,291',
'292,298,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97',
',82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,,,,,,,',
'219,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84',
',58,59,,,,62,,60,61,63,295,296,67,68,,,,,,291,292,298,91,90,92,93,,',
'220,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,',
',,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,,,,,,,,219,,,,,80,74,76,77,78',
'79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63',
'295,296,67,68,,,,,,291,292,298,91,90,92,93,,,220,,,,,,,42,,,95,94,85',
'51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,',
'53,,55,,,,,,41,,,,,,,,219,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,',
'54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,295,296,67,68,,,,,,291',
'292,298,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97',
',82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,,,,,,,',
'219,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84',
',58,59,,,,62,,60,61,63,295,296,67,68,,,,,,291,292,298,91,90,92,93,,',
'220,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,',
',,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,,,,,,,,219,,,,,80,74,76,77,78',
'79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63',
'295,296,67,68,,,,,,291,292,298,91,90,92,93,,,220,,,,,,,42,,,95,94,85',
'51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,',
'53,,55,,,,,,41,,,,,,,,219,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,',
'54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,295,296,67,68,,,,,,291',
'292,298,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97',
',82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,,,,,,,',
'219,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84',
',58,59,,,,62,,60,61,63,295,296,67,68,,,,,,291,292,298,91,90,92,93,,',
'220,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,',
',,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,,,,,,,,219,,,,,80,74,76,77,78',
'79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63',
'295,296,67,68,,,,,,291,292,298,91,90,92,93,,,220,,,,,,,42,,,95,94,85',
'51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,',
'53,,55,,,,,,41,,,,,,,,219,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,',
'54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,295,296,67,68,,,,,,291',
'292,298,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97',
',82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,,,,,,,',
'219,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84',
',58,59,,,,62,,60,61,63,295,296,67,68,,,,,,291,292,298,91,90,92,93,,',
'220,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,',
',,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,,,,,,,,219,,,,,80,74,76,77,78',
'79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63',
'295,296,67,68,,,,,,291,292,298,91,90,92,93,,,220,,,,,,,42,,,95,94,85',
'51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,',
'53,,55,,,,,,41,,,,,,,,219,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,',
'54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,295,296,67,68,,,,,,291',
'292,298,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97',
',82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,,,,,,,',
'219,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84',
',58,59,,,,62,,60,61,63,295,296,67,68,,,,,,291,292,298,91,90,92,93,,',
'220,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,',
',,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,,,,,,,,219,,,,,80,74,76,77,78',
'79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63',
'295,296,67,68,,,,,,291,292,298,91,90,92,93,,,220,,,,,,,42,,,95,94,85',
'51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,',
'53,,55,,,,,,41,,,,,,,,219,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,',
'54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,295,296,67,68,,,,,,291',
'292,298,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97',
',82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,,,,,,,',
'219,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84',
',58,59,,,,62,,60,61,63,28,29,67,68,,,,,,27,26,25,91,90,92,93,,,220,',
',,,,,42,,,95,94,85,51,87,86,88,274,89,96,97,,82,83,,39,40,,,,,,,,,,',
',,,,,,,,,,211,,,215,,,53,,55,,271,,269,,41,,,,,,,,219,,,,,80,272,76',
'77,78,79,,,,75,81,,,,,,,57,,,54,,275,,,,38,84,64,65,66,,52,,,,58,59',
',,,62,,60,61,63,28,29,67,68,,,,,,27,26,25,91,90,92,93,,,220,,,,,,,42',
',,95,94,85,51,87,86,88,274,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,',
',,211,,,215,,,511,,55,,271,,269,,41,,,,,,,,219,,,,,80,272,76,77,78,79',
',,,75,81,,,,,,,57,,,54,,275,,,,38,84,64,65,66,,52,,,,58,59,,,,62,,60',
'61,63,28,29,67,68,,,,,,27,26,25,91,90,92,93,,,220,,,,,,,42,,,95,94,85',
'51,87,86,88,274,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215',
',515,53,,55,,271,,269,,41,,,,,,,,219,,,,,80,272,76,77,78,79,,,,75,81',
',,,,,,57,,,54,,275,,,,38,84,64,65,66,,52,,,,58,59,,,,62,,60,61,63,295',
'296,67,68,,,,,,291,292,298,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51',
'87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53',
',55,,,,,,41,,,,,,,,219,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54',
'64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,295,296,67,68,,,,,,291,292',
'298,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97,,82',
'83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,,,,,,,,219',
',,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58',
'59,,,,62,,60,61,63,295,296,67,68,,,,,,291,292,298,91,90,92,93,,,220',
',,,,,,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,',
',,,,,,,,211,,,215,,,53,,55,,,,,,41,,,,,,,,219,,,,,80,74,76,77,78,79',
',,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,295',
'296,67,68,,,,,,291,292,298,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51',
'87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53',
',55,,,,,,41,,,,,,,,219,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54',
'64,65,66,8,52,38,84,,58,59,,,,62,,60,61,63,28,29,67,68,,,,,,27,26,25',
'91,90,92,93,,,18,,,,,,7,42,,9,95,94,85,51,87,86,88,,89,96,97,,82,83',
',39,40,,,,,,,,,,,,,,,,,,,,,37,,,281,,,53,,55,,33,,,,41,,,,,,,,19,,,',
',80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59',
',,,62,,60,61,63,295,296,67,68,,,,,,291,292,298,91,90,92,93,,,220,,,',
',,,293,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,793,,347,345,344,340',
'346,,,,,,,,,337,,,,,,,289,,,215,,,53,,55,,,,,,,,349,782,,,,,,352,351',
'355,354,80,74,76,77,78,79,,,,75,81,,,,533,,,57,,,54,64,65,66,8,52,299',
'84,,58,59,,,,62,338,60,61,63,28,29,67,68,,,,,,27,26,25,91,90,92,93,',
',18,,,,,,7,42,,9,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,',
',,,,,,,,,,,,,,37,,,281,,,53,,55,,33,,,,41,,,,,,,,19,,,,,80,74,76,77',
'78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61',
'63,295,296,67,68,,,,,,291,292,298,91,90,92,93,,,220,,,,,,,293,,,95,94',
'85,51,87,86,88,,89,96,97,,82,83,,330,,347,345,344,340,346,,,,,,,,,337',
',,,,,,289,,,286,,,53,,55,,,,,,,,349,,,,,,,352,351,355,354,80,74,76,77',
'78,79,,,,75,81,,,,,,,57,,,54,64,65,66,311,52,299,84,,58,59,,,,62,338',
'60,61,63,295,296,67,68,,,,,,291,292,298,91,90,92,93,,,220,,,,,,,42,',
',95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211',
',,215,553,,53,,55,,,,,,41,,,,,,,,219,,,,,80,74,76,77,78,79,,,,75,81',
',,,,,,57,,,54,64,65,66,8,52,38,84,,58,59,,,,62,,60,61,63,28,29,67,68',
',,,,,27,26,25,91,90,92,93,,,18,,,,,,7,42,,9,95,94,85,51,87,86,88,,89',
'96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,37,,,31,,,53,,55,,33,,,,41,',
',,,,,,19,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38',
'84,,58,59,,,,62,,60,61,63,295,296,67,68,,,,,,291,292,298,91,90,92,93',
',,220,,,,,,,293,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,793,,347,345',
'344,340,346,,,,,,,,,337,,,,,,,585,,,215,,,53,,55,,,,,,,,349,,,,,,,352',
'351,355,354,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,299',
'84,,58,59,,,,62,338,60,61,63,28,29,67,68,,,,,,27,26,25,91,90,92,93,',
',18,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,',
',,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,,,,,,,,19,,,,,80,74,76,77,78',
'79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63',
'28,29,67,68,,,,,,27,26,25,91,90,92,93,,,18,,,,,,,42,,,95,94,85,51,87',
'86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55',
',,,,,41,,,,,,,,19,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65',
'66,,52,38,84,,58,59,,,,62,,60,61,63,295,296,67,68,,,,,,291,292,298,91',
'90,92,93,,,220,,,,,,,293,,,95,94,85,51,87,86,372,,89,96,97,,82,83,,330',
',347,345,344,340,346,,,,,,,,,337,,,,,,,373,,,215,,,53,,55,,,,,,,,349',
',,,,,,352,351,355,354,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65',
'66,,52,299,84,,58,59,,,,62,338,60,61,63,28,29,67,68,,,,,,27,26,25,91',
'90,92,93,,,18,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40',
',,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,,,,,,,,19,,,,,80,74,76',
'77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60',
'61,63,295,296,67,68,,,,,,291,292,298,91,90,92,93,,,220,,,,,,,42,,,95',
'94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,',
'215,,,53,,55,,,,,,41,,,,,,,,219,,,,,80,74,76,77,78,79,,,,75,81,,,,,',
',57,,,54,-572,-572,-572,,-572,38,84,,-572,-572,,,,-572,,-572,-572,-572',
'-572,-572,-572,-572,,,,,,-572,-572,-572,-572,-572,-572,-572,,,-572,',
',,,,,-572,,,-572,-572,-572,-572,-572,-572,-572,-572,-572,-572,-572,',
'-572,-572,,-572,-572,,,,,,,,,,,,,,,,,,,,,-572,,,-572,-572,,-572,,-572',
',-572,,-572,,-572,,,,,,,,-572,,,,,-572,-572,-572,-572,-572,-572,,,,-572',
'-572,,,,,,,-572,,,-572,,-572,,,,-572,-572,-573,-573,-573,,-573,,,,-573',
'-573,,,,-573,,-573,-573,-573,-573,-573,-573,-573,,,,,,-573,-573,-573',
'-573,-573,-573,-573,,,-573,,,,,,,-573,,,-573,-573,-573,-573,-573,-573',
'-573,-573,-573,-573,-573,,-573,-573,,-573,-573,,,,,,,,,,,,,,,,,,,,,-573',
',,-573,-573,,-573,,-573,,-573,,-573,,-573,,,,,,,,-573,,,,,-573,-573',
'-573,-573,-573,-573,,,,-573,-573,,,,,,,-573,,,-573,,-573,,,,-573,-573',
'64,65,66,,52,,,,58,59,,,,62,,60,61,63,28,29,67,68,,,,,,27,26,25,91,90',
'92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,274,89,96,97,,82,83,,39',
'40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,271,,,,41,,,,,,,,219,,,,',
'80,272,76,77,78,79,,,,75,81,,,,,,,57,,,54,,275,,,,38,84,64,65,66,,52',
',,,58,59,,,,62,,60,61,63,28,29,67,68,,,,,,27,26,25,91,90,92,93,,,220',
',,,,,,42,,,95,94,85,51,87,86,88,274,89,96,97,,82,83,,39,40,,,,,,,,,',
',,,,,,,,,,,211,,,215,,,53,,55,,271,,,,41,,,,,,,,219,,,,,80,272,76,77',
'78,79,,,,75,81,,,,,,,57,,,54,,275,,,,38,84,64,65,66,,52,,,,58,59,,,',
'62,,60,61,63,295,296,67,68,,,,,,291,292,298,91,90,92,93,,,220,,,,,,',
'42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,',
',,211,,,215,,,53,,55,,,,,,41,,,,,,,,219,,,,,80,74,76,77,78,79,,,,75',
'81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,295,296,67',
'68,,,,,,291,292,298,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88',
',89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,,',
'41,,,,,,,,219,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66',
',52,38,84,,58,59,,,,62,,60,61,63,295,296,67,68,,,,,,291,292,298,91,90',
'92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40',
',,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,,,,,,,,219,,,,,80,74',
'76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,',
'60,61,63,295,296,67,68,,,,,,291,292,298,91,90,92,93,,,220,,,,,,,42,',
',95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211',
',,215,,,53,,55,,,,,,41,,,,,,,,219,,,,,80,74,76,77,78,79,,,,75,81,,,',
',,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,28,29,67,68,,,',
',,27,26,25,91,90,92,93,,,18,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97',
',82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,693,53,,55,,,,269,,41,',
',,,,,,19,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38',
'84,,58,59,,,,62,,60,61,63,295,296,67,68,,,,,,291,292,298,91,90,92,93',
',,220,,,,,,,42,,,95,94,85,51,87,86,88,274,89,96,97,,82,83,,39,40,,,',
',,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,701,,269,,41,,,,,,,,219,,,,,80',
'272,76,77,78,79,,,,75,81,,,,,,,57,,,54,,275,,,,38,84,64,65,66,,52,,',
',58,59,,,,62,,60,61,63,295,296,67,68,,,,,,291,292,298,91,90,92,93,,',
'220,,,,,,,42,,,95,94,85,51,87,86,88,274,89,96,97,,82,83,,39,40,,,,,',
',,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,269,,41,,,,,,,,219,,,,,80,272,76',
'77,78,79,,,,75,81,,,,,,,57,,,54,,275,,,,38,84,64,65,66,,52,,,,58,59',
',,,62,,60,61,63,295,296,67,68,,,,,,291,292,298,91,90,92,93,,,220,,,',
',,,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,',
',,,,,211,,,215,,,53,,55,,,,,,41,,,,,,,,219,,,,,80,74,76,77,78,79,,,',
'75,81,,,,,,,57,,,54,64,65,66,8,52,38,84,,58,59,,,,62,,60,61,63,28,29',
'67,68,,,,,,27,26,25,91,90,92,93,,,18,,,,,,7,42,,9,95,94,85,51,87,86',
'88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,37,,,31,,,53,,55,,33',
',,,41,,,,,,,,19,,,,,80,74,76,77,78,79,,,,75,81,,,,,,415,57,,,54,64,65',
'66,,52,38,84,,58,59,,,,62,,60,61,63,295,296,67,68,,,,,,291,292,298,91',
'90,92,93,,,220,,,,,,,293,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,793',
',347,345,344,340,346,,,,,,,,,337,,,,,,,289,,,286,,,53,,55,,,,,,,,349',
',,,,,,352,351,355,354,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65',
'66,,52,299,84,,58,59,,,,62,338,60,61,63,28,29,67,68,,,,,,27,26,25,91',
'90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,274,89,96,97,,82,83,',
'39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,271,,,,41,,,,,,,,219,',
',,,80,272,76,77,78,79,,,,75,81,,,,,,,57,,,54,,275,,,,38,84,64,65,66',
',52,,,,58,59,,,,62,,60,61,63,28,29,67,68,,,,,,27,26,25,91,90,92,93,',
',220,,,,,,,42,,,95,94,85,51,87,86,88,274,89,96,97,,82,83,,39,40,,,,',
',,,,,,,,,,,,,,,,211,,,215,,,53,,55,,271,,,,41,,,,,,,,219,,,,,80,272',
'76,77,78,79,,,,75,81,,,,,,,57,,,54,,275,,,,38,84,64,65,66,,52,,,,58',
'59,,,,62,,60,61,63,295,296,67,68,,,,,,291,292,298,91,90,92,93,,,220',
',,,,,,293,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,793,,347,345,344',
'340,346,,,,,,,,,337,,,,,,,289,,,286,,,53,,55,,,,,,,,349,782,,,,,,352',
'351,355,354,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,299',
'84,,58,59,,,,62,338,60,61,63,295,296,67,68,,,,,,291,292,298,91,90,92',
'93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,',
',,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,,,,,,,,219,,,,,80,74,76',
'77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60',
'61,63,295,296,67,68,,,,,,291,292,298,91,90,92,93,,,220,,,,,,,42,,,95',
'94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,',
'215,,,53,,55,,,,,,41,,,,,,,,219,,,,,80,74,76,77,78,79,,,,75,81,,,,,',
',57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,295,296,67,68,,,',
',,291,292,298,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,,89',
'96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,',
',,,,,,219,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52',
'38,84,,58,59,,,,62,,60,61,63,28,29,67,68,,,,,,27,26,25,91,90,92,93,',
',18,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,',
',,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,,,,,,,,19,,,,,80,74,76,77,78',
'79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63',
'295,296,67,68,,,,,,291,292,298,91,90,92,93,,,220,,,,,,,42,,,95,94,85',
'51,87,86,88,274,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215',
',,53,,55,,701,,269,,41,,,,,,,,219,,,,,80,272,76,77,78,79,,,,75,81,,',
',,,,57,,,54,,275,,,,38,84,64,65,66,,52,,,,58,59,,,,62,,60,61,63,295',
'296,67,68,,,,,,291,292,298,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51',
'87,86,88,274,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,',
'53,,55,,,,,,41,,,,,,,,219,,,,,80,272,76,77,78,79,,,,75,81,,,,,,,57,',
',54,,275,,,,38,84,64,65,66,8,52,,,,58,59,,,,62,,60,61,63,28,29,67,68',
',,,,,27,26,25,91,90,92,93,,,18,,,,,,7,42,,9,95,94,85,51,87,86,88,,89',
'96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,37,,,31,,,53,,55,,33,,,,41,',
',,,,,,19,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,8,52',
'38,84,,58,59,,,,62,,60,61,63,28,29,67,68,,,,,,27,26,25,91,90,92,93,',
',18,,,,,,7,42,,9,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,',
',,,,,,,,,,,,,,37,,,31,,,53,,55,,33,,,,41,,,,,,,,19,,,,,80,74,76,77,78',
'79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63',
'295,296,67,68,,,,,,291,292,298,91,90,92,93,,,220,,,,,,,293,,,95,94,85',
'51,87,86,88,,89,96,97,,82,83,,793,,347,345,344,340,346,,,,,,,,,337,',
',,,,,585,,,215,,,53,,55,,,,,,,,349,,,,,,,352,351,355,354,80,74,76,77',
'78,79,,,,75,81,,,,,,,57,,,54,64,65,66,8,52,299,84,,58,59,,,,62,338,60',
'61,63,28,29,67,68,,,,,,27,26,25,91,90,92,93,,,18,,,,,,7,42,,9,95,94',
'85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,37,,,31,',
',53,,55,,33,,,,41,,,,,,,,19,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57',
',,54,64,65,66,8,52,38,84,,58,59,,,,62,,60,61,63,28,29,67,68,,,,,,27',
'26,25,91,90,92,93,,,18,,,,,,7,42,,9,95,94,85,51,87,86,88,,89,96,97,',
'82,83,,39,40,,,,,,,,,,,,,,,,,,,,,37,,,31,,,53,,55,,33,,,,41,,,,,,,,19',
',,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,8,52,38,84,,58',
'59,,,,62,,60,61,63,28,29,67,68,,,,,,27,26,25,91,90,92,93,,,18,,,,,,7',
'42,,9,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,',
',,,37,,,31,,,53,,55,,33,,,,41,,,,,,,,19,,,,,80,74,76,77,78,79,,,,75',
'81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,28,29,67',
'68,,,,,,27,26,25,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,274',
'89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,271,',
',,41,,,,,,,,219,,,,,80,272,76,77,78,79,,,,75,81,,,,,,,57,,,54,,275,',
',,38,84,64,65,66,,52,,,,58,59,,,,62,,60,61,63,28,29,67,68,,,,,,27,26',
'25,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,274,89,96,97,,82',
'83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,271,,,,41,,,,,,,,219',
',,,,80,272,76,77,78,79,,,,75,81,,,,,,,57,,,54,,275,,,,38,84,64,65,66',
',52,,,,58,59,,,,62,,60,61,63,28,29,67,68,,,,,,27,26,25,91,90,92,93,',
',220,,,,,,,42,,,95,94,85,51,87,86,88,274,89,96,97,,82,83,,39,40,,,,',
',,,,,,,,,,,,,,,,211,,,215,,,53,,55,,271,,,,41,,,,,,,,219,,,,,80,272',
'76,77,78,79,,,,75,81,,,,,,,57,,,54,,275,,,,38,84,64,65,66,,52,,,,58',
'59,,,,62,,60,61,63,28,29,67,68,,,,,,27,26,25,91,90,92,93,,,18,,,,,,',
'42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,',
',,211,,,215,,,53,,55,,,,,,41,,,,,,,,19,,,,,80,74,76,77,78,79,,,,75,81',
',,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,28,29,67,68',
',,,,,27,26,25,91,90,92,93,,,18,,,,,,,42,,,95,94,85,51,87,86,88,,89,96',
'97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,,,,',
',,,19,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84',
',58,59,,,,62,,60,61,63,295,296,67,68,,,,,,291,292,298,91,90,92,93,,',
'220,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,',
',,,,,,,,,,,,211,,,215,,,53,,55,,803,,,,41,,,,,,,,219,,,,,80,74,76,77',
'78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61',
'63,28,29,67,68,,,,,,27,26,25,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51',
'87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53',
',55,,,,,,41,,,,,,,,219,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54',
'64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,28,29,67,68,,,,,,27,26,25',
'91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,',
'39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,,,,,,,,219,,,,',
'80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59,',
',,62,,60,61,63,28,29,67,68,,,,,,27,26,25,91,90,92,93,,,220,,,,,,,42',
',,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211',
',,215,,,53,,55,,,,,,41,,,,,,,,219,,,,,80,74,76,77,78,79,,,,75,81,,,',
',,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,295,296,67,68,',
',,,,291,292,298,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,,89',
'96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,',
',,,,,,219,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52',
'38,84,,58,59,,,,62,,60,61,63,28,29,67,68,,,,,,27,26,25,91,90,92,93,',
',220,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,',
',,,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,,,,,,,,219,,,,,80,74,76,77,78',
'79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63',
'295,296,67,68,,,,,,291,292,298,91,90,92,93,,,220,,,,,,,42,,,95,94,85',
'51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,',
'53,,55,,,,,,41,,,,,,,,219,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,',
'54,64,65,66,8,52,38,84,,58,59,,,,62,,60,61,63,28,29,67,68,,,,,,27,26',
'25,91,90,92,93,,,18,,,,,,7,42,,9,95,94,85,51,87,86,88,,89,96,97,,82',
'83,,39,40,,,,,,,,,,,,,,,,,,,,,37,,,31,,,53,,55,,33,,,,41,,,,,,,,19,',
',,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,8,52,38,84,,58',
'59,,,,62,,60,61,63,28,29,67,68,,,,,,27,26,25,91,90,92,93,,,18,,,,,,7',
'42,,9,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,',
',,,37,,,31,,,53,,55,,33,,,,41,,,,,,,,19,,,,,80,74,76,77,78,79,,,,75',
'81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,295,296,67',
'68,,,,,,291,292,298,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88',
'274,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,701',
',269,,41,,,,,,,,219,,,,,80,272,76,77,78,79,,,,75,81,,,,,,,57,,,54,,275',
',,,38,84,64,65,66,,52,,,,58,59,,,,62,,60,61,63,295,296,67,68,,,,,,291',
'292,298,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,274,89,96',
'97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,269,,41,',
',,,,,,219,,,,,80,272,76,77,78,79,,,,75,81,,,,,,,57,,,54,,275,,,,38,84',
'64,65,66,8,52,,,,58,59,,,,62,,60,61,63,28,29,67,68,,,,,,27,26,25,91',
'90,92,93,,,18,,,,,,7,42,,9,95,94,85,51,87,86,88,,89,96,97,,82,83,,39',
'40,,,,,,,,,,,,,,,,,,,,,37,,,31,,,53,,55,,33,,,,41,,,,,,,,19,,,,,80,74',
'76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,8,52,38,84,,58,59,,,,62',
',60,61,63,28,29,67,68,,,,,,27,26,25,91,90,92,93,,,18,,,,,,7,42,,9,95',
'94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,37,,,31',
',,53,,55,,33,,,,41,,,,,,,,19,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57',
',,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,295,296,67,68,,,,,,291',
'292,298,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97',
',82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,,,,,,,',
'219,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84',
',58,59,,,,62,,60,61,63,295,296,67,68,,,,,,291,292,298,91,90,92,93,,',
'220,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,',
',,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,,,,,,,,219,,,,,80,74,76,77,78',
'79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63',
'295,296,67,68,,,,,,291,292,298,91,90,92,93,,,220,,,,,,,293,,,95,94,85',
'51,87,86,88,,89,96,97,,82,83,,,,,,,,,,,,,,,,,,,,,,,,289,,,286,,,53,',
'55,,,,,,,,,,,,,,,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65',
'66,,52,299,84,,58,59,,,,62,,60,61,63,295,296,67,68,,,,,,291,292,298',
'91,90,92,93,,,220,,,,,,,293,,,95,94,85,51,87,86,88,,89,96,97,,82,83',
',,,,,,,,,,,,,,,,,,,,,,,289,,,286,,,53,,55,,,,,,,,,,,,,,,,,,,80,74,76',
'77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,299,84,,58,59,,,,62,,60',
'61,63,295,296,67,68,,,,,,291,292,298,91,90,92,93,,,220,,,,,,,42,,,95',
'94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,',
'215,,,53,,55,,431,,,,41,,,,,,,,219,,,,,80,74,76,77,78,79,,,,75,81,,',
',,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,295,296,67,68',
',,,,,291,292,298,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,',
'89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,271,',
',,41,,,,,,,,219,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66',
',52,38,84,,58,59,,,,62,,60,61,63,28,29,67,68,,,,,,27,26,25,91,90,92',
'93,,,18,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,',
',,,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,,,,,,,,19,,,,,80,74,76,77',
'78,79,,,,75,81,,,,,,,57,,,54,64,65,66,8,52,38,84,,58,59,,,,62,,60,61',
'63,28,29,67,68,,,,,,27,26,25,91,90,92,93,,,18,,,,,,7,42,,9,95,94,85',
'51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,37,,,31,,,53',
',55,,33,,,,41,,,,,,,,19,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54',
'64,65,66,8,52,38,84,,58,59,,,,62,,60,61,63,28,29,67,68,,,,,,27,26,25',
'91,90,92,93,,,18,,,,,,7,42,,9,95,94,85,51,87,86,88,,89,96,97,,82,83',
',39,40,,,,,,,,,,,,,,,,,,,,,37,,,31,,,53,,55,,33,,,,41,,,,,,,,19,,,,',
'80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,8,52,38,84,,58,59',
',,,62,,60,61,63,28,29,67,68,,,,,,27,26,25,91,90,92,93,,,18,,,,,,7,42',
',9,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,',
'37,,,31,,,53,,55,,33,,,,41,,,,,,,,19,,,,,80,74,76,77,78,79,,,,75,81',
',,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,295,296,67,68',
',,,,,291,292,298,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,',
'89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41',
',,,,,,,219,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,8,52',
'38,84,,58,59,,,,62,,60,61,63,28,29,67,68,,,,,,27,26,25,91,90,92,93,',
',18,,,,,,7,42,,9,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,',
',,,,,,,,,,,,,,37,,,31,,,53,,55,,33,,,,41,,,,,,,,19,,,,,80,74,76,77,78',
'79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63',
'295,296,67,68,,,,,,291,292,298,91,90,92,93,,,220,,,,,,,42,,,95,94,85',
'51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,',
'53,,55,,,,,,41,,,,,,,,219,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,',
'54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,28,29,67,68,,,,,,27,26',
'25,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83',
',39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,,,,,,,,219,,,',
',80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59',
',,,62,,60,61,63,28,29,67,68,,,,,,27,26,25,91,90,92,93,,,220,,,,,,,42',
',,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211',
',,215,,,53,,55,,,,,,41,,,,,,,,219,,,,,80,74,76,77,78,79,,,,75,81,,,',
',,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,295,296,67,68,',
',,,,291,292,298,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,,89',
'96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,',
',,,,,,219,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52',
'38,84,,58,59,,,,62,,60,61,63,295,296,67,68,,,,,,291,292,298,91,90,92',
'93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,',
',,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,,,,,,,,219,,,,,80,74,76',
'77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60',
'61,63,295,296,67,68,,,,,,291,292,298,91,90,92,93,,,220,,,,,,,42,,,95',
'94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,',
'215,,,53,,55,,,,,,41,,,,,,,,219,,,,,80,74,76,77,78,79,,,,75,81,,,,,',
',57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,295,296,67,68,,,',
',,291,292,298,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,,89',
'96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,271,,,,41',
',,,,,,,219,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,8,52',
'38,84,,58,59,,,,62,,60,61,63,28,29,67,68,,,,,,27,26,25,91,90,92,93,',
',18,,,,,,7,42,,9,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,',
',,,,,,,,,,,,,,37,,,31,,,53,,55,,33,,,,41,,,,,,,,19,,,,,80,74,76,77,78',
'79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63',
'28,29,67,68,,,,,,27,26,25,91,90,92,93,,,18,,,,,,,42,,,95,94,85,51,87',
'86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55',
',,,,,41,,,,,,,,19,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65',
'66,8,52,38,84,,58,59,,,,62,,60,61,63,28,29,67,68,,,,,,27,26,25,91,90',
'92,93,,,18,,,,,,7,42,,9,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40',
',,,,,,,,,,,,,,,,,,,,37,,,31,,,53,,55,,33,,,,41,,,,,,,,19,,,,,80,74,76',
'77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,8,52,38,84,,58,59,,,,62,,60',
'61,63,28,29,67,68,,,,,,27,26,25,91,90,92,93,,,18,,,,,,7,42,,9,95,94',
'85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,37,,,31,',
',53,,55,,33,,,,41,,,,,,,,19,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57',
',,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,295,296,67,68,,,,,,291',
'292,298,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97',
',82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,,,,,,,',
'219,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84',
',58,59,,,,62,,60,61,63,295,296,67,68,,,,,,291,292,298,91,90,92,93,,',
'220,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,',
',,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,,,,,,,,219,,,,,80,74,76,77,78',
'79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63',
'295,296,67,68,,,,,,291,292,298,91,90,92,93,,,220,,,,,,,42,,,95,94,85',
'51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,',
'53,,55,,,,,,41,,,,,,,,219,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,',
'54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,295,296,67,68,,,,,,291',
'292,298,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97',
',82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,,,,,,,',
'219,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84',
',58,59,,,,62,,60,61,63,295,296,67,68,,,,,,291,292,298,91,90,92,93,,',
'220,,,,,,,42,,,95,94,85,51,87,86,88,274,89,96,97,,82,83,,39,40,,,,,',
',,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,269,,41,,,,,,,,219,,,,,80,272,76',
'77,78,79,,,,75,81,,,,,,,57,,,54,,275,,,,38,84,64,65,66,8,52,,,,58,59',
',,,62,,60,61,63,28,29,67,68,,,,,,27,26,25,91,90,92,93,,,18,,,,,,7,42',
',9,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,',
'37,,,31,,,53,,55,,33,,,,41,,,,,,,,19,,,,,80,74,76,77,78,79,,,,75,81',
',,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,295,296,67,68',
',,,,,291,292,298,91,90,92,93,,,220,,,,,,,293,,,95,94,85,51,87,86,88',
',89,96,97,,82,83,,,,,,,,,,,,,,,,,,,,,,,,976,,,215,,,53,,55,,,,,,,,,',
',,,,,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,299,84',
',58,59,,,,62,,60,61,63,295,296,67,68,,,,,,291,292,298,91,90,92,93,,',
'220,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,',
',,,,,,,,,,,,211,,,215,,,53,,55,,701,,,,41,,,,,,,,219,,,,,80,74,76,77',
'78,79,,,,75,81,,,,,,,57,,,54,64,65,66,8,52,38,84,,58,59,,,,62,,60,61',
'63,28,29,67,68,,,,,,27,26,25,91,90,92,93,,,18,,,,,,7,42,,9,95,94,85',
'51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,37,,,31,,,53',
',55,,33,,,,41,,,,,,,,19,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54',
'64,65,66,8,52,38,84,,58,59,,,,62,,60,61,63,28,29,67,68,,,,,,27,26,25',
'91,90,92,93,,,18,,,,,,7,42,,9,95,94,85,51,87,86,88,,89,96,97,,82,83',
',39,40,,,,,,,,,,,,,,,,,,,,,37,,,31,,,53,,55,,33,,,,41,,,,,,,,19,,,,',
'80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59,',
',,62,,60,61,63,295,296,67,68,,,,,,291,292,298,91,90,92,93,,,220,,,,',
',,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,',
',,,,211,,,215,,,53,,55,,701,,269,,41,,,,,,,,219,,,,,80,74,76,77,78,79',
',,,75,81,,,,,,,57,,,54,64,65,66,8,52,38,84,,58,59,,,,62,,60,61,63,28',
'29,67,68,,,,,,27,26,25,91,90,92,93,,,18,,,,,,7,42,,9,95,94,85,51,87',
'86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,37,,,31,,,53,,55,',
'33,,,,41,,,,,,,,19,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65',
'66,8,52,38,84,,58,59,,,,62,,60,61,63,28,29,67,68,,,,,,27,26,25,91,90',
'92,93,,,18,,,,,,7,42,,9,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40',
',,,,,,,,,,,,,,,,,,,,37,,,31,,,53,,55,,33,,,,41,,,,,,,,19,,,,,80,74,76',
'77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,8,52,38,84,,58,59,,,,62,,60',
'61,63,28,29,67,68,,,,,,27,26,25,91,90,92,93,,,18,,,,,,7,42,,9,95,94',
'85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,37,,,31,',
',53,,55,,33,,,,41,,,,,,,,19,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57',
',,54,64,65,66,8,52,38,84,,58,59,,,,62,,60,61,63,28,29,67,68,,,,,,27',
'26,25,91,90,92,93,,,18,,,,,,7,42,,9,95,94,85,51,87,86,88,,89,96,97,',
'82,83,,39,40,,,,,,,,,,,,,,,,,,,,,37,,,31,,,53,,55,,33,,,,41,,,,,,,,19',
',,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58',
'59,,,,62,,60,61,63,28,29,67,68,,,,,,27,26,25,91,90,92,93,,,220,,,,,',
',42,,,95,94,85,51,87,86,88,274,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,',
',,,,,,211,,,215,,,53,,55,,271,,,,41,,,,,,,,219,,,,-574,80,272,76,77',
'78,79,-574,-574,-574,75,81,,-574,-574,,-574,,57,,,54,,275,,-574,,38',
'84,,,,,,,,-574,-574,,-574,-574,-574,-574,-574,,,,,,,,,,,,,,,,,,,,,,-574',
'-574,-574,-574,-574,-574,-574,-574,-574,-574,-574,-574,-574,-574,-574',
',,-574,-574,-574,,658,,,,-574,,,,,,-574,,-574,,-574,-574,-574,-574,-574',
'-574,-574,,-574,-574,-574,,,,,,,,,,,,,-574,-574,,-90,,-574,,-289,-574',
',-574,,,-99,-289,-289,-289,,,,-289,-289,,-289,,,,,,,,,,,,,,,,,,,,-289',
'-289,,-289,-289,-289,-289,-289,,,,,,,,,,,,,,,,,,,,,,-289,-289,-289,-289',
'-289,-289,-289,-289,-289,-289,-289,-289,-289,-289,-289,,,-289,-289,-289',
',661,,,,-289,,,,,,-289,,-289,,-289,-289,-289,-289,-289,-289,-289,,-289',
',-289,,,,,,,,,,,,,-289,-289,,-92,,-289,,-574,-289,,-289,,,-101,-574',
'-574,-574,,,-574,-574,-574,,-574,,,,,,,,,-574,-574,-574,,,,,,,,,-574',
'-574,,-574,-574,-574,-574,-574,,,,,,,,,,,,,,,,,,,,,,-574,-574,-574,-574',
'-574,-574,-574,-574,-574,-574,-574,-574,-574,-574,-574,,,-574,-574,-574',
',819,-574,,,-574,,-574,,-574,,-574,,-574,,-574,-574,-574,-574,-574,-574',
'-574,,-574,-574,-574,,,,,,,,,,,,,-574,-574,-574,-574,,-574,,-289,-574',
',-574,,,-99,-289,-289,-289,,,-289,-289,-289,,-289,,,,,,,,,,-289,-289',
',,,,,,,,-289,-289,,-289,-289,-289,-289,-289,,,,,,,,,,,,,,,,,,,,,,-289',
'-289,-289,-289,-289,-289,-289,-289,-289,-289,-289,-289,-289,-289,-289',
',,-289,-289,-289,,661,-289,,,-289,,-289,,-289,,-289,,-289,,-289,-289',
'-289,-289,-289,-289,-289,,-289,,-289,,,,,,,,,,,,,-289,-289,-289,-289',
',-289,,-403,-289,,-289,,,-101,-403,-403,-403,,,-403,-403,-403,,-403',
',,,,,,,,-403,-403,-403,,,,,,,,,-403,-403,,-403,-403,-403,-403,-403,',
',,,,,,,,,,,,,,,,,,,,-403,-403,-403,-403,-403,-403,-403,-403,-403,-403',
'-403,-403,-403,-403,-403,,,-403,-403,-403,,,-403,,253,-403,,-403,,-403',
',-403,,-403,,-403,-403,-403,-403,-403,-403,-403,,-403,-403,-403,,,,',
',,,,,,,,-403,-403,-403,-403,-298,-403,,,-403,,-403,-298,-298,-298,,',
'-298,-298,-298,,-298,,,,,,,,,,-298,-298,,,,,,,,,-298,-298,,-298,-298',
'-298,-298,-298,,,,,,,,,,,,,,,,,,,,,,-298,-298,-298,-298,-298,-298,-298',
'-298,-298,-298,-298,-298,-298,-298,-298,,,-298,-298,-298,,,-298,,262',
'-298,,-298,,-298,,-298,,-298,,-298,-298,-298,-298,-298,-298,-298,,-298',
',-298,,,,,,,,,,,,,-298,-298,-298,-298,-284,-298,,,-298,,-298,-284,-284',
'-284,,,-284,-284,-284,,-284,,,,,,,,,,-284,-284,-284,,,,,,,,-284,-284',
',-284,-284,-284,-284,-284,,,,,,,,,,,,,,,,,,,,,,-284,-284,-284,-284,-284',
'-284,-284,-284,-284,-284,-284,-284,-284,-284,-284,,,-284,-284,-284,',
',-284,,,-284,,-284,,-284,,-284,,-284,,-284,-284,-284,-284,-284,-284',
'-284,,-284,,-284,,,,,,,,,,,,,-284,-284,-284,-284,-590,-284,,-284,-284',
',-284,-590,-590,-590,,,-590,-590,-590,,-590,,,,,,,,,-590,-590,-590,',
',,,,,,,-590,-590,,-590,-590,-590,-590,-590,,,,,,,,,,,,,,,,,,,,,,-590',
'-590,-590,-590,-590,-590,-590,-590,-590,-590,-590,-590,-590,-590,-590',
',,-590,-590,-590,,,-590,,253,-590,,-590,,-590,,-590,,-590,,-590,-590',
'-590,-590,-590,-590,-590,,-590,-590,-590,,,,,,,,,,,,,-590,-590,-590',
'-590,-590,-590,,,-590,,-590,-590,-590,-590,,,-590,-590,-590,,-590,,',
',,,,,,-590,-590,-590,,,,,,,,,-590,-590,,-590,-590,-590,-590,-590,,,',
',,,,,,,,,,,,,,,,,,-590,-590,-590,-590,-590,-590,-590,-590,-590,-590',
'-590,-590,-590,-590,-590,,,-590,-590,-590,,,-590,,253,-590,,-590,,-590',
',-590,,-590,,-590,-590,-590,-590,-590,-590,-590,,-590,-590,-590,,,,',
',,,,,,,,-590,-590,-590,-590,-590,-590,,,-590,,-590,-590,-590,-590,,',
'-590,-590,-590,,-590,,,,,,,,,,-590,,,,,,,,,,-590,-590,,-590,-590,-590',
'-590,-590,,,,,,,,,,,,-590,,,,,,,-590,-590,-590,,,-590,-590,-590,,-590',
',,,,-590,-590,,,,-590,,,-590,,,,,253,-590,-590,-590,,-590,-590,-590',
'-590,-590,,,,,,,,,,,,-590,,,,,,,,,,,,,-590,,-590,,,-590,,,-590,-590',
',-590,,,,,-590,,-590,-590,-590,253,-590,-590,-590,-590,,-590,,,,,,,',
',,-590,,,,,-590,,,,,-590,-590,,-590,-590,-590,-590,-590,-590,,-590,',
',-590,443,447,,,445,,,,,,,,,143,144,140,122,123,124,131,128,130,,,125',
'126,-590,-590,,,145,146,132,133,-590,,,,,253,-590,,,,,137,136,,121,142',
'139,138,134,135,129,127,119,141,120,,-590,147,,,,,,,,,,,,-590,,-590',
',,-590,157,168,158,181,154,174,164,163,189,192,179,162,161,156,182,190',
'191,166,155,169,173,175,167,160,,,,176,183,178,177,170,180,165,153,172',
'171,184,185,186,187,188,152,159,150,151,148,149,112,114,111,,113,,,',
',,,,,143,144,140,122,123,124,131,128,130,,,125,126,,,,,145,146,132,133',
',,,,,,,,,,,137,136,,121,142,139,138,134,135,129,127,119,141,120,,,147',
'193,,,,,,,,,,81,157,168,158,181,154,174,164,163,189,192,179,162,161',
'156,182,190,191,166,155,169,173,175,167,160,,,,176,183,178,177,170,180',
'165,153,172,171,184,185,186,187,188,152,159,150,151,148,149,112,114',
',,113,,,,,,,,,143,144,140,122,123,124,131,128,130,,,125,126,,,,,145',
'146,132,133,,,,,,,,,,,,137,136,,121,142,139,138,134,135,129,127,119',
'141,120,,,147,193,,,,,,,,,,81,157,168,158,181,154,174,164,163,189,192',
'179,162,161,156,182,190,191,166,155,169,173,175,167,160,,,,176,183,178',
'177,170,180,165,153,172,171,184,185,186,187,188,152,159,150,151,148',
'149,112,114,,,113,,,,,,,,,143,144,140,122,123,124,131,128,130,,,125',
'126,,,,,145,146,132,133,,,,,,,,,,,,137,136,,121,142,139,138,134,135',
'129,127,119,141,120,,,147,193,,,,,,,,,,81,157,168,158,181,154,174,164',
'163,189,192,179,162,161,156,182,190,191,166,155,169,173,175,167,160',
',,,176,183,178,177,170,180,165,153,172,171,184,185,186,187,188,152,159',
'150,151,148,149,112,114,,,113,,,,,,,,,143,144,140,122,123,124,131,128',
'130,,,125,126,,,,,145,146,132,133,,,,,,,,,,,,137,136,,121,142,139,138',
'134,135,129,127,119,141,120,,,147,193,,,,,,,,,,81,157,168,158,181,154',
'174,164,163,189,192,179,162,161,156,182,190,191,166,155,169,173,175',
'167,160,,,,176,183,178,387,386,388,385,153,172,171,184,185,186,187,188',
'152,159,150,151,383,384,381,114,87,86,382,,89,,,,,,,143,144,140,122',
'123,124,131,128,130,,,125,126,,,,,145,146,132,133,,,,,,392,,,,,,137',
'136,,121,142,139,138,134,135,129,127,119,141,120,,,147,157,168,158,181',
'154,174,164,163,189,192,179,162,161,156,182,190,191,166,155,169,173',
'175,167,160,,,,176,183,178,177,170,180,165,153,172,171,184,185,186,187',
'188,152,159,150,151,148,149,112,114,409,408,113,,410,,,,,,,143,144,140',
'122,123,124,131,128,130,,,125,126,,,,,145,146,132,133,,,,,,,,,,,,137',
'136,,121,142,139,138,134,135,129,127,119,141,120,,,147,157,168,158,181',
'154,174,164,163,189,192,179,162,161,156,182,190,191,166,155,169,173',
'175,167,160,,,,176,183,178,177,170,180,165,153,172,171,184,185,186,187',
'188,152,159,150,151,148,149,112,114,409,408,113,,410,,,,,,,143,144,140',
'122,123,124,131,128,130,,,125,126,,,,,145,146,132,133,,,,,,,,,,,,137',
'136,,121,142,139,138,134,135,129,127,119,141,120,,,147,157,168,158,181',
'154,174,164,163,189,192,179,162,161,156,182,190,191,166,155,169,173',
'175,167,160,,,,176,183,178,177,170,180,165,153,172,171,184,185,186,187',
'188,152,159,150,151,148,149,112,114,,,113,,,,,,,,,143,144,140,122,123',
'124,131,128,130,,,125,126,,,,,145,146,132,133,,,,,,,,,,,,137,136,,121',
'142,139,138,134,135,129,127,119,141,120,437,441,147,,438,,,,,,,,,143',
'144,140,122,123,124,131,128,130,,,125,126,,,,,145,146,132,133,,,,,,253',
',,,,,137,136,,121,142,139,138,134,135,129,127,119,141,120,450,441,147',
',451,,,,,,,,,143,144,140,122,123,124,131,128,130,,,125,126,,,,,145,146',
'132,133,,,,,,,,,,,,137,136,,121,142,139,138,134,135,129,127,119,141',
'120,450,441,147,,451,,,,,,,,,143,144,140,122,123,124,131,128,130,,,125',
'126,,,,,145,146,132,133,,,,,,,,,,,,137,136,,121,142,139,138,134,135',
'129,127,119,141,120,450,441,147,,451,,,,,,,,,143,144,140,122,123,124',
'131,128,130,,,125,126,,,,,145,146,132,133,,,,,,,,,,,,137,136,,121,142',
'139,138,134,135,129,127,119,141,120,450,441,147,,451,,,,,,,,,143,144',
'140,122,123,124,131,128,130,,,125,126,,,,,145,146,132,133,,,,,,,,,,',
',137,136,,121,142,139,138,134,135,129,127,119,141,120,666,441,147,,667',
',,,,,,,,143,144,140,122,123,124,131,128,130,,,125,126,,,,,145,146,132',
'133,,,,,,253,,,,,,137,136,,121,142,139,138,134,135,129,127,119,141,120',
'668,447,147,,669,,,,,,,,,143,144,140,122,123,124,131,128,130,,,125,126',
',,,,145,146,132,133,,,,,,,,,,,,137,136,,121,142,139,138,134,135,129',
'127,119,141,120,711,441,147,,712,,,,,,,,,143,144,140,122,123,124,131',
'128,130,,,125,126,,,,,145,146,132,133,,,,,,253,,,,,,137,136,,121,142',
'139,138,134,135,129,127,119,141,120,714,447,147,,715,,,,,,,,,143,144',
'140,122,123,124,131,128,130,,,125,126,,,,,145,146,132,133,,,,,,,,,,',
',137,136,,121,142,139,138,134,135,129,127,119,141,120,450,441,147,,451',
',,,,,,,,143,144,140,122,123,124,131,128,130,,,125,126,,,,,145,146,132',
'133,,,,,,,,,,,,137,136,,121,142,139,138,134,135,129,127,119,141,120',
'666,441,147,,667,,,,,,,,,143,144,140,122,123,124,131,128,130,,,125,126',
',,,,145,146,132,133,,,,,,253,,,,,,137,136,,121,142,139,138,134,135,129',
'127,119,141,120,668,447,147,,669,,,,,,,,,143,144,140,122,123,124,131',
'128,130,,,125,126,,,,,145,146,132,133,,,,,,,,,,,,137,136,,121,142,139',
'138,134,135,129,127,119,141,120,766,441,147,,767,,,,,,,,,143,144,140',
'122,123,124,131,128,130,,,125,126,,,,,145,146,132,133,,,,,,253,,,,,',
'137,136,,121,142,139,138,134,135,129,127,119,141,120,768,447,147,,769',
',,,,,,,,143,144,140,122,123,124,131,128,130,,,125,126,,,,,145,146,132',
'133,,,,,,,,,,,,137,136,,121,142,139,138,134,135,129,127,119,141,120',
'774,447,147,,772,,,,,,,,,143,144,140,122,123,124,131,128,130,,,125,126',
',,,,145,146,132,133,,,,,,,,,,,,137,136,,121,142,139,138,134,135,129',
'127,119,141,120,450,441,147,,451,,,,,,,,,143,144,140,122,123,124,131',
'128,130,,,125,126,,,,,145,146,132,133,,,,,,253,,,,,,137,136,,121,142',
'139,138,134,135,129,127,119,141,120,774,447,147,,862,,,,,,,,,143,144',
'140,122,123,124,131,128,130,,,125,126,,,,,145,146,132,133,,,,,,,,,,',
',137,136,,121,142,139,138,134,135,129,127,119,141,120,1027,441,147,',
'1028,,,,,,,,,143,144,140,122,123,124,131,128,130,,,125,126,,,,,145,146',
'132,133,,,,,,253,,,,,,137,136,,121,142,139,138,134,135,129,127,119,141',
'120,1029,447,147,,1030,,,,,,,,,143,144,140,122,123,124,131,128,130,',
',125,126,,,,,145,146,132,133,,,,,,,,,,,,137,136,,121,142,139,138,134',
'135,129,127,119,141,120,,,147' ]
        racc_action_table = arr = ::Array.new(26038, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'0,0,0,0,0,358,56,324,0,0,210,24,359,0,294,0,0,0,0,0,0,0,365,212,368',
'1,403,0,0,0,0,0,0,0,316,466,0,316,6,498,610,287,0,0,0,0,0,0,0,0,0,0',
'0,766,0,0,0,876,0,0,210,0,0,290,767,706,502,313,313,377,627,627,498',
'212,877,24,317,3,294,317,470,470,3,0,928,466,0,403,940,0,56,0,974,0',
'9,24,977,0,294,502,1010,706,724,724,768,0,11,287,1027,324,0,0,0,0,0',
'0,358,12,358,0,0,358,1028,359,365,359,368,0,359,290,0,18,18,18,470,18',
'0,0,15,18,18,1040,610,287,18,769,18,18,18,18,18,18,18,287,313,766,724',
'627,18,18,18,18,18,18,18,290,767,18,876,768,876,876,377,876,18,290,877',
'18,18,18,18,18,18,18,651,18,18,18,1029,18,18,377,18,18,540,928,377,928',
'21,940,928,940,35,974,940,974,768,977,974,977,769,1010,977,1010,18,37',
'1010,18,18,1027,18,1027,18,1030,1027,381,523,42,18,600,601,711,381,1028',
'651,1028,18,78,1028,512,513,18,18,18,18,18,18,769,779,779,18,18,1040',
'712,1040,879,838,1040,18,79,540,18,19,19,19,1029,19,18,18,278,19,19',
'512,513,278,19,714,19,19,19,19,19,19,19,715,523,523,523,666,19,19,19',
'19,19,19,19,540,711,19,1029,1030,1029,523,638,1029,19,540,72,19,19,19',
'19,19,19,19,72,19,19,19,712,19,19,838,19,19,474,600,601,600,601,14,600',
'601,711,1030,779,1030,667,666,1030,779,714,714,711,394,19,16,16,19,715',
'715,19,879,19,879,712,474,879,838,19,474,474,638,638,363,712,363,19',
'838,820,14,638,19,19,19,19,19,19,714,98,14,19,19,194,821,894,715,667',
'714,19,894,211,19,27,27,27,715,27,19,19,894,27,27,394,394,394,27,213',
'27,27,27,27,27,27,27,320,372,575,320,820,27,27,27,27,27,27,27,575,214',
'27,894,894,894,894,821,493,27,36,220,27,27,27,27,27,27,27,27,27,27,27',
'396,27,27,252,27,27,23,23,382,575,575,990,266,990,23,382,493,372,372',
'894,493,493,493,493,267,372,27,36,398,27,372,398,27,270,27,280,27,36',
'27,592,27,592,592,592,400,592,575,362,27,282,372,283,362,27,27,27,27',
'27,27,396,396,396,27,27,284,865,303,865,865,865,27,865,372,27,372,27',
'889,383,289,27,27,28,28,28,383,28,889,398,398,28,28,292,729,293,28,729',
'28,28,28,28,28,28,28,400,400,400,303,298,28,28,28,28,28,28,28,592,303',
'28,889,889,111,300,458,437,28,111,111,28,28,28,28,28,28,28,28,28,28',
'28,405,28,28,865,28,28,458,458,458,458,458,458,458,458,458,458,458,889',
'304,458,458,384,620,458,458,437,28,620,384,28,965,305,28,965,28,437',
'28,458,28,458,28,458,458,458,458,458,458,458,28,458,38,38,308,28,28',
'28,28,28,28,405,405,405,28,28,385,458,438,458,13,13,28,385,315,28,318',
'28,13,386,319,28,28,29,29,29,386,29,387,777,388,29,29,321,777,387,29',
'388,29,29,29,29,29,29,29,84,84,329,438,330,29,29,29,29,29,29,29,783',
'438,29,331,650,783,332,672,13,29,13,334,29,29,29,29,29,29,29,29,29,29',
'29,335,29,29,339,29,29,672,672,672,672,672,672,672,672,672,672,672,43',
'43,672,672,650,353,672,672,43,29,356,390,29,364,650,29,475,29,390,29',
'672,29,672,29,672,672,672,672,672,672,672,29,672,299,299,367,29,29,29',
'29,29,29,357,357,369,29,29,475,672,578,578,475,475,29,373,43,29,43,29',
'753,753,399,29,29,31,31,31,31,31,402,797,797,31,31,797,797,797,31,421',
'31,31,31,31,31,31,31,5,5,5,5,5,31,31,31,31,31,31,31,427,915,31,915,915',
'915,429,915,31,31,432,31,31,31,31,31,31,31,31,435,31,31,31,436,31,31',
'444,31,31,455,349,476,349,349,349,581,349,581,581,581,581,581,1005,477',
'1005,1005,1005,478,1005,31,581,479,31,494,504,31,507,31,508,31,1013',
'1013,514,31,528,529,209,209,349,532,534,31,541,581,209,349,31,31,31',
'31,31,31,581,581,494,31,31,545,494,494,494,494,554,31,555,556,31,32',
'32,32,569,32,31,31,585,32,32,587,591,596,32,602,32,32,32,32,32,32,32',
'581,603,209,642,209,32,32,32,32,32,32,32,648,654,32,288,288,659,662',
'670,671,32,687,288,32,32,32,32,32,32,32,691,32,32,32,694,32,32,698,57',
'700,57,57,57,57,57,708,306,306,279,279,279,279,279,57,306,589,710,589',
'589,589,32,589,713,32,716,717,32,718,32,288,32,288,719,722,723,725,57',
'57,705,705,705,705,705,57,57,57,57,32,32,32,32,32,32,589,731,732,32',
'32,736,737,589,306,739,306,32,742,743,32,33,33,33,745,33,32,32,749,33',
'33,751,755,761,33,57,33,33,33,33,33,33,33,763,765,770,774,775,33,33',
'33,33,33,33,33,786,787,33,366,366,789,790,791,793,33,796,366,33,33,33',
'33,33,33,33,802,33,33,33,823,33,33,824,325,825,325,325,325,325,325,826',
'827,829,375,375,832,833,837,325,842,750,375,750,750,750,33,750,845,33',
'846,862,33,867,33,366,868,366,871,881,884,885,325,886,325,906,907,917',
'921,325,325,325,325,33,33,33,33,33,33,750,931,932,33,33,933,934,750',
'33,935,375,33,375,937,33,39,39,39,942,39,33,33,943,39,39,951,953,955',
'39,325,39,39,39,39,39,39,39,956,957,958,960,976,39,39,39,39,39,39,39',
'985,992,39,584,584,1006,1011,1012,1017,39,1019,584,39,39,39,39,39,39',
'39,1020,39,39,39,1021,39,39,1022,39,39,1023,752,1026,752,752,752,852',
'752,852,852,852,852,852,1041,,,,,,,39,852,,39,,,39,,39,584,,584,,,39',
',,612,612,752,,,39,,852,612,,39,39,39,39,39,39,852,852,,39,39,,,,,,',
'39,,,39,40,40,40,,40,39,39,,40,40,,,,40,,40,40,40,40,40,40,40,852,,612',
',612,40,40,40,40,40,40,40,,,40,738,738,,,,,40,,738,40,40,40,40,40,40',
'40,,40,40,40,,40,40,,40,40,,866,,866,866,866,854,866,854,854,854,854',
'854,,,,,,,,40,854,,40,,,40,,40,738,,738,,,40,,,878,878,866,,,40,,854',
'878,,40,40,40,40,40,40,854,854,,40,40,,,,,,,40,,,40,41,41,41,,41,40',
'40,,41,41,,,,41,,41,41,41,41,41,41,41,854,,878,,878,41,41,41,41,41,41',
'41,,,41,975,975,,,,,41,,975,41,41,41,41,41,41,41,,41,41,41,,41,41,,41',
'41,,482,,,,,859,,859,859,859,859,859,,,,,,482,482,41,859,,41,,,41,,41',
'975,,975,482,,41,,482,482,482,482,,,41,,859,,,41,41,41,41,41,41,859',
'859,,41,41,,,,,,,41,,,41,53,53,53,,53,41,41,,53,53,,,,53,,53,53,53,53',
'53,53,53,859,,,,,53,53,53,53,53,53,53,,,53,,936,,936,936,936,53,936',
',53,53,53,53,53,53,53,,53,53,53,,53,53,,53,53,484,938,,938,938,938,896',
'938,896,896,896,896,896,936,,,,484,484,,53,896,,53,,,53,,53,,,484,,484',
'53,484,484,484,484,938,,484,53,484,896,,,53,53,53,53,53,53,896,896,',
'53,53,,,,,,,53,,,53,54,54,54,,54,53,53,,54,54,,,,54,,54,54,54,54,54',
'54,54,896,,,,,54,54,54,54,54,54,54,,,54,,,,,,,54,,,54,54,54,54,54,54',
'54,54,54,54,54,,54,54,,54,54,690,690,690,690,690,690,690,690,690,690',
'690,772,772,690,690,,,690,690,772,54,,,54,772,,54,,54,,54,690,,690,54',
'690,690,690,690,690,690,690,54,690,,,,54,54,54,54,54,54,,,,54,54,,690',
',690,,,54,,772,54,772,54,,,,54,54,55,55,55,,55,,,,55,55,,,,55,,55,55',
'55,55,55,55,55,,,,,,55,55,55,55,55,55,55,,,55,,,,,,,55,,,55,55,55,55',
'55,55,55,55,55,55,55,,55,55,,55,55,674,674,674,674,674,674,674,674,674',
'674,674,,,674,674,,,674,674,,55,,,55,,,55,,55,,,674,,674,55,674,674',
'674,674,674,674,674,55,674,,,,55,55,55,55,55,55,,,,55,55,,674,674,,',
',55,,,55,,55,,,,55,55,58,58,58,,58,,,,58,58,,,,58,,58,58,58,58,58,58',
'58,,,,,,58,58,58,58,58,58,58,,,58,,984,,984,984,984,58,984,,58,58,58',
'58,58,58,58,,58,58,58,,58,58,,58,58,485,,,,,,980,,980,980,980,980,980',
'984,,,,485,485,,58,980,,58,,,58,,58,,,485,,485,58,485,485,485,485,,',
'485,58,485,980,,,58,58,58,58,58,58,980,980,,58,58,,,,,,,58,,,58,59,59',
'59,,59,58,58,,59,59,,,,59,,59,59,59,59,59,59,59,980,,,,,59,59,59,59',
'59,59,59,,,59,,,,,,,59,,,59,59,59,59,59,59,59,,59,59,59,,59,59,,59,59',
'486,,,,,,997,,997,997,997,997,997,,,,,486,486,,59,997,,59,,,59,,59,',
',486,,486,59,486,486,486,486,,,486,59,486,997,,,59,59,59,59,59,59,997',
'997,,59,59,,,,,,,59,,,59,62,62,62,,62,59,59,,62,62,,,,62,,62,62,62,62',
'62,62,62,997,,,,,62,62,62,62,62,62,62,,,62,,,,,,,62,,,62,62,62,62,62',
'62,62,,62,62,62,,62,62,,62,62,487,,,,,,999,,999,999,999,999,999,,,,',
'487,487,,62,999,,62,,,62,,62,,,487,,487,62,487,487,487,487,,,487,62',
'487,999,,,62,62,62,62,62,62,999,999,,62,62,62,,,,,62,62,,,62,63,63,63',
',63,62,62,,63,63,,,,63,,63,63,63,63,63,63,63,999,,,,,63,63,63,63,63',
'63,63,,,63,,,,,,,63,,,63,63,63,63,63,63,63,,63,63,63,,63,63,,571,,571',
'571,571,571,571,,,,,,,,,571,,,,,,,63,,,63,,,63,,63,,63,,,,,,571,,,,',
',,571,571,571,571,63,63,63,63,63,63,,,,63,63,,,,,,,63,,,63,64,64,64',
',64,63,63,,64,64,,,,64,571,64,64,64,64,64,64,64,,,,,,64,64,64,64,64',
'64,64,,,64,,,,,,,64,,,64,64,64,64,64,64,64,,64,64,64,480,64,64,,579',
',579,579,579,579,579,,,,,,,480,480,579,,,,64,,,64,,,64,,480,64,480,64',
'480,480,480,480,,,,579,,,,,,,579,579,579,579,64,64,64,64,64,64,,,,64',
'64,,,,,,,64,,,64,85,85,85,,85,64,64,,85,85,,,,85,579,85,85,85,85,85',
'85,85,,85,,,,85,85,85,85,85,85,85,,,85,,,,,,,85,,,85,85,85,85,85,85',
'85,85,85,85,85,,85,85,,85,85,20,20,20,20,20,20,20,20,20,20,20,,,20,20',
',,20,20,,85,,,85,85,,85,,85,,85,20,85,20,85,20,20,20,20,20,20,20,85',
'20,85,,,85,85,85,85,85,85,,,,85,85,,20,,,,,85,,,85,,85,,,,85,85,88,88',
'88,,88,,,,88,88,,,,88,,88,88,88,88,88,88,88,,88,,,,88,88,88,88,88,88',
'88,,,88,,,,,,,88,,,88,88,88,88,88,88,88,88,88,88,88,,88,88,,88,88,264',
'264,264,264,264,264,264,264,264,264,264,,,264,264,,,264,264,,88,,,88',
'88,,88,,88,,88,264,88,264,88,264,264,264,264,264,264,264,88,264,88,',
',88,88,88,88,88,88,,,,88,88,,264,,,,,88,,,88,,88,,,,88,88,100,100,100',
'100,100,,,,100,100,,,,100,,100,100,100,100,100,100,100,,,,,,100,100',
'100,100,100,100,100,,,100,,,,,,100,100,100,100,100,100,100,100,100,100',
'100,,100,100,100,,100,100,,100,100,481,,,,,,1001,,1001,1001,1001,1001',
'1001,,,,,481,481,,100,1001,,100,,,100,,100,,100,481,,481,100,481,481',
'481,481,,,,100,,1001,,,100,100,100,100,100,100,1001,1001,,100,100,,',
',,,100,100,,,100,104,104,104,,104,100,100,,104,104,,,,104,,104,104,104',
'104,104,104,104,1001,,,,,104,104,104,104,104,104,104,,,104,,,,,,,104',
',,104,104,104,104,104,104,104,,104,104,104,,104,104,,104,104,,,,,,,1034',
',1034,1034,1034,1034,1034,,,,,,,,104,1034,,104,,,104,,104,,,,,,104,',
',,,,,,104,,1034,,,104,104,104,104,104,104,1034,1034,,104,104,,,,,,,104',
',,104,105,105,105,,105,104,104,,105,105,,,,105,,105,105,105,105,105',
'105,105,1034,,,,,105,105,105,105,105,105,105,,,105,,,,,,,105,,,105,105',
'105,105,105,105,105,,105,105,105,,105,105,,105,105,434,434,434,434,434',
'434,434,434,434,434,434,,,434,434,,,434,434,,105,,,105,,,105,,105,,',
'434,,434,105,434,434,434,434,434,434,434,105,434,,,,105,105,105,105',
'105,105,,,,105,105,,434,,,,,105,,,105,106,106,106,,106,105,105,,106',
'106,,,,106,,106,106,106,106,106,106,106,,,,,,106,106,106,106,106,106',
'106,,,106,,,,,,,106,,,106,106,106,106,106,106,106,,106,106,106,,106',
'106,,106,106,453,453,453,453,453,453,453,453,453,453,453,,,453,453,',
',453,453,,106,,,106,,,106,,106,,,453,,453,106,453,453,453,453,453,453',
'453,106,453,,,,106,106,106,106,106,106,,,,106,106,,453,,,,,106,,,106',
'107,107,107,,107,106,106,,107,107,,,,107,,107,107,107,107,107,107,107',
',,,,,107,107,107,107,107,107,107,,,107,,,,,,,107,,,107,107,107,107,107',
'107,107,,107,107,107,,107,107,,107,107,552,552,552,552,552,552,552,552',
'552,552,552,,,552,552,,,552,552,,107,,,107,,,107,,107,,,552,,552,107',
'552,552,552,552,552,552,552,107,552,,,,107,107,107,107,107,107,,,,107',
'107,,552,,,,,107,,,107,108,108,108,108,108,107,107,,108,108,,,,108,',
'108,108,108,108,108,108,108,,,,,,108,108,108,108,108,108,108,,,108,',
',,,,108,108,,108,108,108,108,108,108,108,108,,108,108,108,,108,108,',
'108,108,721,721,721,721,721,721,721,721,721,721,721,,,721,721,,,721',
'721,,108,,,108,,,108,,108,,108,721,,721,108,721,721,721,721,721,721',
'721,108,721,,,,108,108,108,108,108,108,,,,108,108,,721,,,,,108,,,108',
'109,109,109,109,109,108,108,,109,109,,,,109,,109,109,109,109,109,109',
'109,,,,,,109,109,109,109,109,109,109,,,109,,,,,,109,109,109,109,109',
'109,109,109,109,109,109,,109,109,109,,109,109,,109,109,807,807,807,807',
'807,807,807,807,807,807,807,,,807,807,,,807,807,,109,,,109,,,109,,109',
',109,807,,807,109,807,807,807,807,807,807,807,109,807,,,,109,109,109',
'109,109,109,,,,109,109,,807,,,,,109,,,109,196,196,196,196,196,109,109',
',196,196,,,,196,,196,196,196,196,196,196,196,,,,,,196,196,196,196,196',
'196,196,,,196,,,,,,196,196,,196,196,196,196,196,196,196,196,,196,196',
'196,,196,196,,196,196,809,809,809,809,809,809,809,809,809,809,809,,',
'809,809,,,809,809,,196,,,196,,,196,,196,,196,809,,809,196,809,809,809',
'809,809,809,809,196,809,,,,196,196,196,196,196,196,,,,196,196,,809,',
',,,196,,,196,197,197,197,,197,196,196,,197,197,,,,197,,197,197,197,197',
'197,197,197,,,,,,197,197,197,197,197,197,197,,,197,,,,,,,197,,,197,197',
'197,197,197,197,197,,197,197,197,,197,197,,197,197,812,812,812,812,812',
'812,812,812,812,812,812,,,812,812,,,812,812,,197,,,197,,,197,,197,,197',
'812,,812,197,812,812,812,812,812,812,812,197,812,,,,197,197,197,197',
'197,197,,,,197,197,,812,,,,,197,,,197,198,198,198,,198,197,197,,198',
'198,,,,198,,198,198,198,198,198,198,198,,,,,,198,198,198,198,198,198',
'198,,,198,,,,,,,198,,,198,198,198,198,198,198,198,,198,198,198,,198',
'198,,198,198,814,814,814,814,814,814,814,814,814,814,814,,,814,814,',
',814,814,,198,,,198,,,198,,198,,,814,,814,198,814,814,814,814,814,814',
'814,198,814,,,,198,198,198,198,198,198,,,,198,198,,814,,,,,198,,,198',
'199,199,199,,199,198,198,,199,199,,,,199,,199,199,199,199,199,199,199',
',,,,,199,199,199,199,199,199,199,,,199,,,,,,,199,,,199,199,199,199,199',
'199,199,199,199,199,199,,199,199,,199,199,816,816,816,816,816,816,816',
'816,816,816,816,,,816,816,,,816,816,,199,,,199,,,199,,199,,199,816,',
'816,199,816,816,816,816,816,816,816,199,816,,,,199,199,199,199,199,199',
',,,199,199,,816,,,,,199,,,199,,199,,,,199,199,200,200,200,,200,,,,200',
'200,,,,200,,200,200,200,200,200,200,200,,,,,,200,200,200,200,200,200',
'200,,,200,,,,,,,200,,,200,200,200,200,200,200,200,200,200,200,200,,200',
'200,,200,200,909,909,909,909,909,909,909,909,909,909,909,,,909,909,',
',909,909,,200,,,200,,,200,,200,,200,909,,909,200,909,909,909,909,909',
'909,909,200,909,,,,200,200,200,200,200,200,,,,200,200,,909,,,,,200,',
',200,,200,,,,200,200,204,204,204,,204,,,,204,204,,,,204,,204,204,204',
'204,204,204,204,,,,,,204,204,204,204,204,204,204,,,204,,,,,,,204,,,204',
'204,204,204,204,204,204,,204,204,204,,204,204,,204,204,911,911,911,911',
'911,911,911,911,911,911,911,,,911,911,,,911,911,,204,,,204,,,204,,204',
',,911,,911,204,911,911,911,911,911,911,911,204,911,,,,204,204,204,204',
'204,204,,,,204,204,,911,,,,,204,,,204,205,205,205,,205,204,204,,205',
'205,,,,205,,205,205,205,205,205,205,205,,,,,,205,205,205,205,205,205',
'205,,,205,,,,,,,205,,,205,205,205,205,205,205,205,,205,205,205,,205',
'205,,205,205,964,964,964,964,964,964,964,964,964,964,964,,,964,964,',
',964,964,,205,,,205,,,205,,205,,205,964,,964,205,964,964,964,964,964',
'964,964,205,964,,,,205,205,205,205,205,205,,,,205,205,,964,,,,,205,',
',205,206,206,206,,206,205,205,,206,206,,,,206,,206,206,206,206,206,206',
'206,,,,,,206,206,206,206,206,206,206,,,206,,,,,,,206,,,206,206,206,206',
'206,206,206,,206,206,206,,206,206,,206,206,472,472,472,472,472,472,472',
'472,472,472,472,,,472,472,,,472,472,,206,,,206,,,206,,206,,,472,,472',
'206,472,472,472,472,472,472,472,206,472,,,,206,206,206,206,206,206,',
',,206,206,,,,,,,206,,,206,207,207,207,,207,206,206,,207,207,,,,207,',
'207,207,207,207,207,207,207,,,,,,207,207,207,207,207,207,207,,,207,',
',,,,,207,,,207,207,207,207,207,207,207,,207,207,207,,207,207,,207,207',
'473,473,473,473,473,473,473,473,473,473,473,,,473,473,,,473,473,,207',
',,207,,,207,,207,,,473,,473,207,473,473,473,473,473,473,473,207,473',
',,,207,207,207,207,207,207,,,,207,207,,,,,,,207,,,207,215,215,215,215',
'215,207,207,,215,215,,,,215,,215,215,215,215,215,215,215,,,,,,215,215',
'215,215,215,215,215,,,215,,,,,,215,215,,215,215,215,215,215,215,215',
'215,,215,215,215,,215,215,,215,215,483,483,483,483,483,483,483,,,483',
'483,,,,,,,483,483,,215,,,215,,,215,,215,,215,483,,483,215,483,483,483',
'483,483,483,483,215,483,,,,215,215,215,215,215,215,,,,215,215,,,,,,',
'215,,,215,216,216,216,,216,215,215,,216,216,,,,216,,216,216,216,216',
'216,216,216,,,,,,216,216,216,216,216,216,216,,,216,,,,,,,216,,,216,216',
'216,216,216,216,216,,216,216,216,,216,216,,216,216,488,488,488,488,488',
'488,488,,,488,488,,,,,,,488,488,,216,,,216,,216,216,,216,,,488,,488',
'216,488,488,488,488,488,488,488,216,488,,,,216,216,216,216,216,216,',
',,216,216,,,,,,,216,,,216,219,219,219,,219,216,216,,219,219,,,,219,',
'219,219,219,219,219,219,219,,,,,,219,219,219,219,219,219,219,,,219,',
',,,,,219,,,219,219,219,219,219,219,219,,219,219,219,,219,219,,219,219',
'489,489,489,489,489,489,489,,,489,489,,,,,,,489,489,,219,,,219,,,219',
',219,,,489,,489,219,489,489,489,489,489,489,489,219,489,,,,219,219,219',
'219,219,219,,,,219,219,,,,,,,219,,,219,221,221,221,,221,219,219,,221',
'221,,,,221,,221,221,221,221,221,221,221,,,,,,221,221,221,221,221,221',
'221,,,221,,,,,,,221,,,221,221,221,221,221,221,221,,221,221,221,,221',
'221,,221,221,490,490,490,490,490,490,490,,,490,490,,,,,,,490,490,,221',
',,221,,,221,,221,,,490,,490,221,490,490,490,490,490,490,490,221,490',
',,,221,221,221,221,221,221,,,,221,221,,,,,,,221,,,221,222,222,222,,222',
'221,221,,222,222,,,,222,,222,222,222,222,222,222,222,,,,,,222,222,222',
'222,222,222,222,,,222,,,,,,,222,,,222,222,222,222,222,222,222,,222,222',
'222,,222,222,,222,222,491,491,491,491,491,491,491,,,491,491,,,,,,,491',
'491,,222,,,222,,,222,,222,,,491,,491,222,491,491,491,491,491,491,491',
'222,491,,,,222,222,222,222,222,222,,,,222,222,,,,,,,222,,,222,223,223',
'223,,223,222,222,,223,223,,,,223,,223,223,223,223,223,223,223,,,,,,223',
'223,223,223,223,223,223,,,223,,,,,,,223,,,223,223,223,223,223,223,223',
',223,223,223,,223,223,,223,223,492,492,492,492,492,492,492,,,492,492',
',,,,,,492,492,,223,,,223,,,223,,223,,,492,,492,223,492,492,492,492,492',
'492,492,223,492,,,,223,223,223,223,223,223,,,,223,223,,,,,,,223,,,223',
'224,224,224,,224,223,223,,224,224,,,,224,,224,224,224,224,224,224,224',
',,,,,224,224,224,224,224,224,224,,,224,,,,,,,224,,,224,224,224,224,224',
'224,224,,224,224,224,,224,224,,224,224,495,495,495,495,495,495,495,',
',495,495,,,,,,,495,495,,224,,,224,,,224,,224,,,495,,495,224,495,495',
'495,495,495,495,495,224,495,,,,224,224,224,224,224,224,,,,224,224,,',
',,,,224,,,224,225,225,225,,225,224,224,,225,225,,,,225,,225,225,225',
'225,225,225,225,,,,,,225,225,225,225,225,225,225,,,225,,,,,,,225,,,225',
'225,225,225,225,225,225,,225,225,225,,225,225,,225,225,496,496,496,496',
'496,496,496,496,,496,496,,,,,,,496,496,,225,,,225,,,225,,225,,,496,',
'496,225,496,496,496,496,496,496,496,225,496,,,,225,225,225,225,225,225',
',,,225,225,,,,,,,225,,,225,226,226,226,,226,225,225,,226,226,,,,226',
',226,226,226,226,226,226,226,,,,,,226,226,226,226,226,226,226,,,226',
',,,,,,226,,,226,226,226,226,226,226,226,,226,226,226,,226,226,,226,226',
',,,,,,,,,,,,,,,,,,,,226,,,226,,,226,,226,,,,,,226,,,,,,,,226,,,,,226',
'226,226,226,226,226,,,,226,226,,,,,,,226,,,226,227,227,227,,227,226',
'226,,227,227,,,,227,,227,227,227,227,227,227,227,,,,,,227,227,227,227',
'227,227,227,,,227,,,,,,,227,,,227,227,227,227,227,227,227,,227,227,227',
',227,227,,227,227,,,,,,,,,,,,,,,,,,,,,227,,,227,,,227,,227,,,,,,227',
',,,,,,,227,,,,,227,227,227,227,227,227,,,,227,227,,,,,,,227,,,227,228',
'228,228,,228,227,227,,228,228,,,,228,,228,228,228,228,228,228,228,,',
',,,228,228,228,228,228,228,228,,,228,,,,,,,228,,,228,228,228,228,228',
'228,228,,228,228,228,,228,228,,228,228,,,,,,,,,,,,,,,,,,,,,228,,,228',
',,228,,228,,,,,,228,,,,,,,,228,,,,,228,228,228,228,228,228,,,,228,228',
',,,,,,228,,,228,229,229,229,,229,228,228,,229,229,,,,229,,229,229,229',
'229,229,229,229,,,,,,229,229,229,229,229,229,229,,,229,,,,,,,229,,,229',
'229,229,229,229,229,229,,229,229,229,,229,229,,229,229,,,,,,,,,,,,,',
',,,,,,,229,,,229,,,229,,229,,,,,,229,,,,,,,,229,,,,,229,229,229,229',
'229,229,,,,229,229,,,,,,,229,,,229,230,230,230,,230,229,229,,230,230',
',,,230,,230,230,230,230,230,230,230,,,,,,230,230,230,230,230,230,230',
',,230,,,,,,,230,,,230,230,230,230,230,230,230,,230,230,230,,230,230',
',230,230,,,,,,,,,,,,,,,,,,,,,230,,,230,,,230,,230,,,,,,230,,,,,,,,230',
',,,,230,230,230,230,230,230,,,,230,230,,,,,,,230,,,230,231,231,231,',
'231,230,230,,231,231,,,,231,,231,231,231,231,231,231,231,,,,,,231,231',
'231,231,231,231,231,,,231,,,,,,,231,,,231,231,231,231,231,231,231,,231',
'231,231,,231,231,,231,231,,,,,,,,,,,,,,,,,,,,,231,,,231,,,231,,231,',
',,,,231,,,,,,,,231,,,,,231,231,231,231,231,231,,,,231,231,,,,,,,231',
',,231,232,232,232,,232,231,231,,232,232,,,,232,,232,232,232,232,232',
'232,232,,,,,,232,232,232,232,232,232,232,,,232,,,,,,,232,,,232,232,232',
'232,232,232,232,,232,232,232,,232,232,,232,232,,,,,,,,,,,,,,,,,,,,,232',
',,232,,,232,,232,,,,,,232,,,,,,,,232,,,,,232,232,232,232,232,232,,,',
'232,232,,,,,,,232,,,232,233,233,233,,233,232,232,,233,233,,,,233,,233',
'233,233,233,233,233,233,,,,,,233,233,233,233,233,233,233,,,233,,,,,',
',233,,,233,233,233,233,233,233,233,,233,233,233,,233,233,,233,233,,',
',,,,,,,,,,,,,,,,,,233,,,233,,,233,,233,,,,,,233,,,,,,,,233,,,,,233,233',
'233,233,233,233,,,,233,233,,,,,,,233,,,233,234,234,234,,234,233,233',
',234,234,,,,234,,234,234,234,234,234,234,234,,,,,,234,234,234,234,234',
'234,234,,,234,,,,,,,234,,,234,234,234,234,234,234,234,,234,234,234,',
'234,234,,234,234,,,,,,,,,,,,,,,,,,,,,234,,,234,,,234,,234,,,,,,234,',
',,,,,,234,,,,,234,234,234,234,234,234,,,,234,234,,,,,,,234,,,234,235',
'235,235,,235,234,234,,235,235,,,,235,,235,235,235,235,235,235,235,,',
',,,235,235,235,235,235,235,235,,,235,,,,,,,235,,,235,235,235,235,235',
'235,235,,235,235,235,,235,235,,235,235,,,,,,,,,,,,,,,,,,,,,235,,,235',
',,235,,235,,,,,,235,,,,,,,,235,,,,,235,235,235,235,235,235,,,,235,235',
',,,,,,235,,,235,236,236,236,,236,235,235,,236,236,,,,236,,236,236,236',
'236,236,236,236,,,,,,236,236,236,236,236,236,236,,,236,,,,,,,236,,,236',
'236,236,236,236,236,236,,236,236,236,,236,236,,236,236,,,,,,,,,,,,,',
',,,,,,,236,,,236,,,236,,236,,,,,,236,,,,,,,,236,,,,,236,236,236,236',
'236,236,,,,236,236,,,,,,,236,,,236,237,237,237,,237,236,236,,237,237',
',,,237,,237,237,237,237,237,237,237,,,,,,237,237,237,237,237,237,237',
',,237,,,,,,,237,,,237,237,237,237,237,237,237,,237,237,237,,237,237',
',237,237,,,,,,,,,,,,,,,,,,,,,237,,,237,,,237,,237,,,,,,237,,,,,,,,237',
',,,,237,237,237,237,237,237,,,,237,237,,,,,,,237,,,237,238,238,238,',
'238,237,237,,238,238,,,,238,,238,238,238,238,238,238,238,,,,,,238,238',
'238,238,238,238,238,,,238,,,,,,,238,,,238,238,238,238,238,238,238,,238',
'238,238,,238,238,,238,238,,,,,,,,,,,,,,,,,,,,,238,,,238,,,238,,238,',
',,,,238,,,,,,,,238,,,,,238,238,238,238,238,238,,,,238,238,,,,,,,238',
',,238,239,239,239,,239,238,238,,239,239,,,,239,,239,239,239,239,239',
'239,239,,,,,,239,239,239,239,239,239,239,,,239,,,,,,,239,,,239,239,239',
'239,239,239,239,,239,239,239,,239,239,,239,239,,,,,,,,,,,,,,,,,,,,,239',
',,239,,,239,,239,,,,,,239,,,,,,,,239,,,,,239,239,239,239,239,239,,,',
'239,239,,,,,,,239,,,239,240,240,240,,240,239,239,,240,240,,,,240,,240',
'240,240,240,240,240,240,,,,,,240,240,240,240,240,240,240,,,240,,,,,',
',240,,,240,240,240,240,240,240,240,,240,240,240,,240,240,,240,240,,',
',,,,,,,,,,,,,,,,,,240,,,240,,,240,,240,,,,,,240,,,,,,,,240,,,,,240,240',
'240,240,240,240,,,,240,240,,,,,,,240,,,240,241,241,241,,241,240,240',
',241,241,,,,241,,241,241,241,241,241,241,241,,,,,,241,241,241,241,241',
'241,241,,,241,,,,,,,241,,,241,241,241,241,241,241,241,,241,241,241,',
'241,241,,241,241,,,,,,,,,,,,,,,,,,,,,241,,,241,,,241,,241,,,,,,241,',
',,,,,,241,,,,,241,241,241,241,241,241,,,,241,241,,,,,,,241,,,241,242',
'242,242,,242,241,241,,242,242,,,,242,,242,242,242,242,242,242,242,,',
',,,242,242,242,242,242,242,242,,,242,,,,,,,242,,,242,242,242,242,242',
'242,242,,242,242,242,,242,242,,242,242,,,,,,,,,,,,,,,,,,,,,242,,,242',
',,242,,242,,,,,,242,,,,,,,,242,,,,,242,242,242,242,242,242,,,,242,242',
',,,,,,242,,,242,243,243,243,,243,242,242,,243,243,,,,243,,243,243,243',
'243,243,243,243,,,,,,243,243,243,243,243,243,243,,,243,,,,,,,243,,,243',
'243,243,243,243,243,243,,243,243,243,,243,243,,243,243,,,,,,,,,,,,,',
',,,,,,,243,,,243,,,243,,243,,,,,,243,,,,,,,,243,,,,,243,243,243,243',
'243,243,,,,243,243,,,,,,,243,,,243,244,244,244,,244,243,243,,244,244',
',,,244,,244,244,244,244,244,244,244,,,,,,244,244,244,244,244,244,244',
',,244,,,,,,,244,,,244,244,244,244,244,244,244,,244,244,244,,244,244',
',244,244,,,,,,,,,,,,,,,,,,,,,244,,,244,,,244,,244,,,,,,244,,,,,,,,244',
',,,,244,244,244,244,244,244,,,,244,244,,,,,,,244,,,244,245,245,245,',
'245,244,244,,245,245,,,,245,,245,245,245,245,245,245,245,,,,,,245,245',
'245,245,245,245,245,,,245,,,,,,,245,,,245,245,245,245,245,245,245,,245',
'245,245,,245,245,,245,245,,,,,,,,,,,,,,,,,,,,,245,,,245,,,245,,245,',
',,,,245,,,,,,,,245,,,,,245,245,245,245,245,245,,,,245,245,,,,,,,245',
',,245,253,253,253,,253,245,245,,253,253,,,,253,,253,253,253,253,253',
'253,253,,,,,,253,253,253,253,253,253,253,,,253,,,,,,,253,,,253,253,253',
'253,253,253,253,253,253,253,253,,253,253,,253,253,,,,,,,,,,,,,,,,,,',
',,253,,,253,,,253,,253,,253,,253,,253,,,,,,,,253,,,,,253,253,253,253',
'253,253,,,,253,253,,,,,,,253,,,253,,253,,,,253,253,254,254,254,,254',
',,,254,254,,,,254,,254,254,254,254,254,254,254,,,,,,254,254,254,254',
'254,254,254,,,254,,,,,,,254,,,254,254,254,254,254,254,254,254,254,254',
'254,,254,254,,254,254,,,,,,,,,,,,,,,,,,,,,254,,,254,,,254,,254,,254',
',254,,254,,,,,,,,254,,,,,254,254,254,254,254,254,,,,254,254,,,,,,,254',
',,254,,254,,,,254,254,262,262,262,,262,,,,262,262,,,,262,,262,262,262',
'262,262,262,262,,,,,,262,262,262,262,262,262,262,,,262,,,,,,,262,,,262',
'262,262,262,262,262,262,262,262,262,262,,262,262,,262,262,,,,,,,,,,',
',,,,,,,,,,262,,,262,,262,262,,262,,262,,262,,262,,,,,,,,262,,,,,262',
'262,262,262,262,262,,,,262,262,,,,,,,262,,,262,,262,,,,262,262,269,269',
'269,,269,,,,269,269,,,,269,,269,269,269,269,269,269,269,,,,,,269,269',
'269,269,269,269,269,,,269,,,,,,,269,,,269,269,269,269,269,269,269,,269',
'269,269,,269,269,,269,269,,,,,,,,,,,,,,,,,,,,,269,,,269,,,269,,269,',
',,,,269,,,,,,,,269,,,,,269,269,269,269,269,269,,,,269,269,,,,,,,269',
',,269,271,271,271,,271,269,269,,271,271,,,,271,,271,271,271,271,271',
'271,271,,,,,,271,271,271,271,271,271,271,,,271,,,,,,,271,,,271,271,271',
'271,271,271,271,,271,271,271,,271,271,,271,271,,,,,,,,,,,,,,,,,,,,,271',
',,271,,,271,,271,,,,,,271,,,,,,,,271,,,,,271,271,271,271,271,271,,,',
'271,271,,,,,,,271,,,271,274,274,274,,274,271,271,,274,274,,,,274,,274',
'274,274,274,274,274,274,,,,,,274,274,274,274,274,274,274,,,274,,,,,',
',274,,,274,274,274,274,274,274,274,,274,274,274,,274,274,,274,274,,',
',,,,,,,,,,,,,,,,,,274,,,274,,,274,,274,,,,,,274,,,,,,,,274,,,,,274,274',
'274,274,274,274,,,,274,274,,,,,,,274,,,274,275,275,275,,275,274,274',
',275,275,,,,275,,275,275,275,275,275,275,275,,,,,,275,275,275,275,275',
'275,275,,,275,,,,,,,275,,,275,275,275,275,275,275,275,,275,275,275,',
'275,275,,275,275,,,,,,,,,,,,,,,,,,,,,275,,,275,,,275,,275,,,,,,275,',
',,,,,,275,,,,,275,275,275,275,275,275,,,,275,275,,,,,,,275,,,275,281',
'281,281,281,281,275,275,,281,281,,,,281,,281,281,281,281,281,281,281',
',,,,,281,281,281,281,281,281,281,,,281,,,,,,281,281,,281,281,281,281',
'281,281,281,281,,281,281,281,,281,281,,281,281,,,,,,,,,,,,,,,,,,,,,281',
',,281,,,281,,281,,281,,,,281,,,,,,,,281,,,,,281,281,281,281,281,281',
',,,281,281,,,,,,,281,,,281,285,285,285,,285,281,281,,285,285,,,,285',
',285,285,285,285,285,285,285,,,,,,285,285,285,285,285,285,285,,,285',
',,,,,,285,,,285,285,285,285,285,285,285,,285,285,285,,285,285,,623,',
'623,623,623,623,623,,,,,,,,,623,,,,,,,285,,,285,,,285,,285,,,,,,,,623',
'623,,,,,,623,623,623,623,285,285,285,285,285,285,,,,285,285,,,,285,',
',285,,,285,286,286,286,286,286,285,285,,286,286,,,,286,623,286,286,286',
'286,286,286,286,,,,,,286,286,286,286,286,286,286,,,286,,,,,,286,286',
',286,286,286,286,286,286,286,286,,286,286,286,,286,286,,286,286,,,,',
',,,,,,,,,,,,,,,,286,,,286,,,286,,286,,286,,,,286,,,,,,,,286,,,,,286',
'286,286,286,286,286,,,,286,286,,,,,,,286,,,286,301,301,301,,301,286',
'286,,301,301,,,,301,,301,301,301,301,301,301,301,,,,,,301,301,301,301',
'301,301,301,,,301,,,,,,,301,,,301,301,301,301,301,301,301,,301,301,301',
',301,301,,676,,676,676,676,676,676,,,,,,,,,676,,,,,,,301,,,301,,,301',
',301,,,,,,,,676,,,,,,,676,676,676,676,301,301,301,301,301,301,,,,301',
'301,,,,,,,301,,,301,310,310,310,676,310,301,301,,310,310,,,,310,676',
'310,310,310,310,310,310,310,,,,,,310,310,310,310,310,310,310,,,310,',
',,,,,310,,,310,310,310,310,310,310,310,,310,310,310,,310,310,,310,310',
',,,,,,,,,,,,,,,,,,,,310,,,310,310,,310,,310,,,,,,310,,,,,,,,310,,,,',
'310,310,310,310,310,310,,,,310,310,,,,,,,310,,,310,312,312,312,312,312',
'310,310,,312,312,,,,312,,312,312,312,312,312,312,312,,,,,,312,312,312',
'312,312,312,312,,,312,,,,,,312,312,,312,312,312,312,312,312,312,312',
',312,312,312,,312,312,,312,312,,,,,,,,,,,,,,,,,,,,,312,,,312,,,312,',
'312,,312,,,,312,,,,,,,,312,,,,,312,312,312,312,312,312,,,,312,312,,',
',,,,312,,,312,341,341,341,,341,312,312,,341,341,,,,341,,341,341,341',
'341,341,341,341,,,,,,341,341,341,341,341,341,341,,,341,,,,,,,341,,,341',
'341,341,341,341,341,341,,341,341,341,,341,341,,782,,782,782,782,782',
'782,,,,,,,,,782,,,,,,,341,,,341,,,341,,341,,,,,,,,782,,,,,,,782,782',
'782,782,341,341,341,341,341,341,,,,341,341,,,,,,,341,,,341,360,360,360',
',360,341,341,,360,360,,,,360,782,360,360,360,360,360,360,360,,,,,,360',
'360,360,360,360,360,360,,,360,,,,,,,360,,,360,360,360,360,360,360,360',
',360,360,360,,360,360,,360,360,,,,,,,,,,,,,,,,,,,,,360,,,360,,,360,',
'360,,,,,,360,,,,,,,,360,,,,,360,360,360,360,360,360,,,,360,360,,,,,',
',360,,,360,361,361,361,,361,360,360,,361,361,,,,361,,361,361,361,361',
'361,361,361,,,,,,361,361,361,361,361,361,361,,,361,,,,,,,361,,,361,361',
'361,361,361,361,361,,361,361,361,,361,361,,361,361,,,,,,,,,,,,,,,,,',
',,,361,,,361,,,361,,361,,,,,,361,,,,,,,,361,,,,,361,361,361,361,361',
'361,,,,361,361,,,,,,,361,,,361,380,380,380,,380,361,361,,380,380,,,',
'380,,380,380,380,380,380,380,380,,,,,,380,380,380,380,380,380,380,,',
'380,,,,,,,380,,,380,380,380,380,380,380,380,,380,380,380,,380,380,,857',
',857,857,857,857,857,,,,,,,,,857,,,,,,,380,,,380,,,380,,380,,,,,,,,857',
',,,,,,857,857,857,857,380,380,380,380,380,380,,,,380,380,,,,,,,380,',
',380,392,392,392,,392,380,380,,392,392,,,,392,857,392,392,392,392,392',
'392,392,,,,,,392,392,392,392,392,392,392,,,392,,,,,,,392,,,392,392,392',
'392,392,392,392,,392,392,392,,392,392,,392,392,,,,,,,,,,,,,,,,,,,,,392',
',,392,,,392,,392,,,,,,392,,,,,,,,392,,,,,392,392,392,392,392,392,,,',
'392,392,,,,,,,392,,,392,431,431,431,,431,392,392,,431,431,,,,431,,431',
'431,431,431,431,431,431,,,,,,431,431,431,431,431,431,431,,,431,,,,,',
',431,,,431,431,431,431,431,431,431,,431,431,431,,431,431,,431,431,,',
',,,,,,,,,,,,,,,,,,431,,,431,,,431,,431,,,,,,431,,,,,,,,431,,,,,431,431',
'431,431,431,431,,,,431,431,,,,,,,431,,,431,447,447,447,,447,431,431',
',447,447,,,,447,,447,447,447,447,447,447,447,,,,,,447,447,447,447,447',
'447,447,,,447,,,,,,,447,,,447,447,447,447,447,447,447,447,447,447,447',
',447,447,,447,447,,,,,,,,,,,,,,,,,,,,,447,,,447,447,,447,,447,,447,',
'447,,447,,,,,,,,447,,,,,447,447,447,447,447,447,,,,447,447,,,,,,,447',
',,447,,447,,,,447,447,448,448,448,,448,,,,448,448,,,,448,,448,448,448',
'448,448,448,448,,,,,,448,448,448,448,448,448,448,,,448,,,,,,,448,,,448',
'448,448,448,448,448,448,448,448,448,448,,448,448,,448,448,,,,,,,,,,',
',,,,,,,,,,448,,,448,448,,448,,448,,448,,448,,448,,,,,,,,448,,,,,448',
'448,448,448,448,448,,,,448,448,,,,,,,448,,,448,,448,,,,448,448,464,464',
'464,,464,,,,464,464,,,,464,,464,464,464,464,464,464,464,,,,,,464,464',
'464,464,464,464,464,,,464,,,,,,,464,,,464,464,464,464,464,464,464,464',
'464,464,464,,464,464,,464,464,,,,,,,,,,,,,,,,,,,,,464,,,464,,,464,,464',
',464,,,,464,,,,,,,,464,,,,,464,464,464,464,464,464,,,,464,464,,,,,,',
'464,,,464,,464,,,,464,464,465,465,465,,465,,,,465,465,,,,465,,465,465',
'465,465,465,465,465,,,,,,465,465,465,465,465,465,465,,,465,,,,,,,465',
',,465,465,465,465,465,465,465,465,465,465,465,,465,465,,465,465,,,,',
',,,,,,,,,,,,,,,,465,,,465,,,465,,465,,465,,,,465,,,,,,,,465,,,,,465',
'465,465,465,465,465,,,,465,465,,,,,,,465,,,465,,465,,,,465,465,467,467',
'467,,467,,,,467,467,,,,467,,467,467,467,467,467,467,467,,,,,,467,467',
'467,467,467,467,467,,,467,,,,,,,467,,,467,467,467,467,467,467,467,,467',
'467,467,,467,467,,467,467,,,,,,,,,,,,,,,,,,,,,467,,,467,,,467,,467,',
',,,,467,,,,,,,,467,,,,,467,467,467,467,467,467,,,,467,467,,,,,,,467',
',,467,468,468,468,,468,467,467,,468,468,,,,468,,468,468,468,468,468',
'468,468,,,,,,468,468,468,468,468,468,468,,,468,,,,,,,468,,,468,468,468',
'468,468,468,468,,468,468,468,,468,468,,468,468,,,,,,,,,,,,,,,,,,,,,468',
',,468,,,468,,468,,,,,,468,,,,,,,,468,,,,,468,468,468,468,468,468,,,',
'468,468,,,,,,,468,,,468,469,469,469,,469,468,468,,469,469,,,,469,,469',
'469,469,469,469,469,469,,,,,,469,469,469,469,469,469,469,,,469,,,,,',
',469,,,469,469,469,469,469,469,469,,469,469,469,,469,469,,469,469,,',
',,,,,,,,,,,,,,,,,,469,,,469,,,469,,469,,,,,,469,,,,,,,,469,,,,,469,469',
'469,469,469,469,,,,469,469,,,,,,,469,,,469,497,497,497,,497,469,469',
',497,497,,,,497,,497,497,497,497,497,497,497,,,,,,497,497,497,497,497',
'497,497,,,497,,,,,,,497,,,497,497,497,497,497,497,497,,497,497,497,',
'497,497,,497,497,,,,,,,,,,,,,,,,,,,,,497,,,497,,,497,,497,,,,,,497,',
',,,,,,497,,,,,497,497,497,497,497,497,,,,497,497,,,,,,,497,,,497,511',
'511,511,,511,497,497,,511,511,,,,511,,511,511,511,511,511,511,511,,',
',,,511,511,511,511,511,511,511,,,511,,,,,,,511,,,511,511,511,511,511',
'511,511,,511,511,511,,511,511,,511,511,,,,,,,,,,,,,,,,,,,,,511,,,511',
',511,511,,511,,,,511,,511,,,,,,,,511,,,,,511,511,511,511,511,511,,,',
'511,511,,,,,,,511,,,511,517,517,517,,517,511,511,,517,517,,,,517,,517',
'517,517,517,517,517,517,,,,,,517,517,517,517,517,517,517,,,517,,,,,',
',517,,,517,517,517,517,517,517,517,517,517,517,517,,517,517,,517,517',
',,,,,,,,,,,,,,,,,,,,517,,,517,,,517,,517,,517,,517,,517,,,,,,,,517,',
',,,517,517,517,517,517,517,,,,517,517,,,,,,,517,,,517,,517,,,,517,517',
'519,519,519,,519,,,,519,519,,,,519,,519,519,519,519,519,519,519,,,,',
',519,519,519,519,519,519,519,,,519,,,,,,,519,,,519,519,519,519,519,519',
'519,519,519,519,519,,519,519,,519,519,,,,,,,,,,,,,,,,,,,,,519,,,519',
',,519,,519,,,,519,,519,,,,,,,,519,,,,,519,519,519,519,519,519,,,,519',
'519,,,,,,,519,,,519,,519,,,,519,519,521,521,521,,521,,,,521,521,,,,521',
',521,521,521,521,521,521,521,,,,,,521,521,521,521,521,521,521,,,521',
',,,,,,521,,,521,521,521,521,521,521,521,,521,521,521,,521,521,,521,521',
',,,,,,,,,,,,,,,,,,,,521,,,521,,,521,,521,,,,,,521,,,,,,,,521,,,,,521',
'521,521,521,521,521,,,,521,521,,,,,,,521,,,521,527,527,527,527,527,521',
'521,,527,527,,,,527,,527,527,527,527,527,527,527,,,,,,527,527,527,527',
'527,527,527,,,527,,,,,,527,527,,527,527,527,527,527,527,527,527,,527',
'527,527,,527,527,,527,527,,,,,,,,,,,,,,,,,,,,,527,,,527,,,527,,527,',
'527,,,,527,,,,,,,,527,,,,,527,527,527,527,527,527,,,,527,527,,,,,,527',
'527,,,527,533,533,533,,533,527,527,,533,533,,,,533,,533,533,533,533',
'533,533,533,,,,,,533,533,533,533,533,533,533,,,533,,,,,,,533,,,533,533',
'533,533,533,533,533,,533,533,533,,533,533,,892,,892,892,892,892,892',
',,,,,,,,892,,,,,,,533,,,533,,,533,,533,,,,,,,,892,,,,,,,892,892,892',
'892,533,533,533,533,533,533,,,,533,533,,,,,,,533,,,533,535,535,535,',
'535,533,533,,535,535,,,,535,892,535,535,535,535,535,535,535,,,,,,535',
'535,535,535,535,535,535,,,535,,,,,,,535,,,535,535,535,535,535,535,535',
'535,535,535,535,,535,535,,535,535,,,,,,,,,,,,,,,,,,,,,535,,,535,,,535',
',535,,535,,,,535,,,,,,,,535,,,,,535,535,535,535,535,535,,,,535,535,',
',,,,,535,,,535,,535,,,,535,535,538,538,538,,538,,,,538,538,,,,538,,538',
'538,538,538,538,538,538,,,,,,538,538,538,538,538,538,538,,,538,,,,,',
',538,,,538,538,538,538,538,538,538,538,538,538,538,,538,538,,538,538',
',,,,,,,,,,,,,,,,,,,,538,,,538,,,538,,538,,538,,,,538,,,,,,,,538,,,,',
'538,538,538,538,538,538,,,,538,538,,,,,,,538,,,538,,538,,,,538,538,544',
'544,544,,544,,,,544,544,,,,544,,544,544,544,544,544,544,544,,,,,,544',
'544,544,544,544,544,544,,,544,,,,,,,544,,,544,544,544,544,544,544,544',
',544,544,544,,544,544,,962,,962,962,962,962,962,,,,,,,,,962,,,,,,,544',
',,544,,,544,,544,,,,,,,,962,962,,,,,,962,962,962,962,544,544,544,544',
'544,544,,,,544,544,,,,,,,544,,,544,547,547,547,,547,544,544,,547,547',
',,,547,962,547,547,547,547,547,547,547,,,,,,547,547,547,547,547,547',
'547,,,547,,,,,,,547,,,547,547,547,547,547,547,547,,547,547,547,,547',
'547,,547,547,,,,,,,,,,,,,,,,,,,,,547,,,547,,,547,,547,,,,,,547,,,,,',
',,547,,,,,547,547,547,547,547,547,,,,547,547,,,,,,,547,,,547,548,548',
'548,,548,547,547,,548,548,,,,548,,548,548,548,548,548,548,548,,,,,,548',
'548,548,548,548,548,548,,,548,,,,,,,548,,,548,548,548,548,548,548,548',
',548,548,548,,548,548,,548,548,,,,,,,,,,,,,,,,,,,,,548,,,548,,,548,',
'548,,,,,,548,,,,,,,,548,,,,,548,548,548,548,548,548,,,,548,548,,,,,',
',548,,,548,549,549,549,,549,548,548,,549,549,,,,549,,549,549,549,549',
'549,549,549,,,,,,549,549,549,549,549,549,549,,,549,,,,,,,549,,,549,549',
'549,549,549,549,549,,549,549,549,,549,549,,549,549,,,,,,,,,,,,,,,,,',
',,,549,,,549,,,549,,549,,,,,,549,,,,,,,,549,,,,,549,549,549,549,549',
'549,,,,549,549,,,,,,,549,,,549,553,553,553,,553,549,549,,553,553,,,',
'553,,553,553,553,553,553,553,553,,,,,,553,553,553,553,553,553,553,,',
'553,,,,,,,553,,,553,553,553,553,553,553,553,,553,553,553,,553,553,,553',
'553,,,,,,,,,,,,,,,,,,,,,553,,,553,,,553,,553,,,,,,553,,,,,,,,553,,,',
',553,553,553,553,553,553,,,,553,553,,,,,,,553,,,553,559,559,559,,559',
'553,553,,559,559,,,,559,,559,559,559,559,559,559,559,,,,,,559,559,559',
'559,559,559,559,,,559,,,,,,,559,,,559,559,559,559,559,559,559,559,559',
'559,559,,559,559,,559,559,,,,,,,,,,,,,,,,,,,,,559,,,559,,,559,,559,',
'559,,559,,559,,,,,,,,559,,,,,559,559,559,559,559,559,,,,559,559,,,,',
',,559,,,559,,559,,,,559,559,562,562,562,,562,,,,562,562,,,,562,,562',
'562,562,562,562,562,562,,,,,,562,562,562,562,562,562,562,,,562,,,,,',
',562,,,562,562,562,562,562,562,562,562,562,562,562,,562,562,,562,562',
',,,,,,,,,,,,,,,,,,,,562,,,562,,,562,,562,,,,,,562,,,,,,,,562,,,,,562',
'562,562,562,562,562,,,,562,562,,,,,,,562,,,562,,562,,,,562,562,567,567',
'567,567,567,,,,567,567,,,,567,,567,567,567,567,567,567,567,,,,,,567',
'567,567,567,567,567,567,,,567,,,,,,567,567,,567,567,567,567,567,567',
'567,567,,567,567,567,,567,567,,567,567,,,,,,,,,,,,,,,,,,,,,567,,,567',
',,567,,567,,567,,,,567,,,,,,,,567,,,,,567,567,567,567,567,567,,,,567',
'567,,,,,,,567,,,567,568,568,568,568,568,567,567,,568,568,,,,568,,568',
'568,568,568,568,568,568,,,,,,568,568,568,568,568,568,568,,,568,,,,,',
'568,568,,568,568,568,568,568,568,568,568,,568,568,568,,568,568,,568',
'568,,,,,,,,,,,,,,,,,,,,,568,,,568,,,568,,568,,568,,,,568,,,,,,,,568',
',,,,568,568,568,568,568,568,,,,568,568,,,,,,,568,,,568,574,574,574,',
'574,568,568,,574,574,,,,574,,574,574,574,574,574,574,574,,,,,,574,574',
'574,574,574,574,574,,,574,,,,,,,574,,,574,574,574,574,574,574,574,,574',
'574,574,,574,574,,995,,995,995,995,995,995,,,,,,,,,995,,,,,,,574,,,574',
',,574,,574,,,,,,,,995,,,,,,,995,995,995,995,574,574,574,574,574,574',
',,,574,574,,,,,,,574,,,574,595,595,595,595,595,574,574,,595,595,,,,595',
'995,595,595,595,595,595,595,595,,,,,,595,595,595,595,595,595,595,,,595',
',,,,,595,595,,595,595,595,595,595,595,595,595,,595,595,595,,595,595',
',595,595,,,,,,,,,,,,,,,,,,,,,595,,,595,,,595,,595,,595,,,,595,,,,,,',
',595,,,,,595,595,595,595,595,595,,,,595,595,,,,,,,595,,,595,599,599',
'599,599,599,595,595,,599,599,,,,599,,599,599,599,599,599,599,599,,,',
',,599,599,599,599,599,599,599,,,599,,,,,,599,599,,599,599,599,599,599',
'599,599,599,,599,599,599,,599,599,,599,599,,,,,,,,,,,,,,,,,,,,,599,',
',599,,,599,,599,,599,,,,599,,,,,,,,599,,,,,599,599,599,599,599,599,',
',,599,599,,,,,,,599,,,599,604,604,604,604,604,599,599,,604,604,,,,604',
',604,604,604,604,604,604,604,,,,,,604,604,604,604,604,604,604,,,604',
',,,,,604,604,,604,604,604,604,604,604,604,604,,604,604,604,,604,604',
',604,604,,,,,,,,,,,,,,,,,,,,,604,,,604,,,604,,604,,604,,,,604,,,,,,',
',604,,,,,604,604,604,604,604,604,,,,604,604,,,,,,,604,,,604,606,606',
'606,,606,604,604,,606,606,,,,606,,606,606,606,606,606,606,606,,,,,,606',
'606,606,606,606,606,606,,,606,,,,,,,606,,,606,606,606,606,606,606,606',
'606,606,606,606,,606,606,,606,606,,,,,,,,,,,,,,,,,,,,,606,,,606,,,606',
',606,,606,,,,606,,,,,,,,606,,,,,606,606,606,606,606,606,,,,606,606,',
',,,,,606,,,606,,606,,,,606,606,609,609,609,,609,,,,609,609,,,,609,,609',
'609,609,609,609,609,609,,,,,,609,609,609,609,609,609,609,,,609,,,,,',
',609,,,609,609,609,609,609,609,609,609,609,609,609,,609,609,,609,609',
',,,,,,,,,,,,,,,,,,,,609,,,609,,,609,,609,,609,,,,609,,,,,,,,609,,,,',
'609,609,609,609,609,609,,,,609,609,,,,,,,609,,,609,,609,,,,609,609,615',
'615,615,,615,,,,615,615,,,,615,,615,615,615,615,615,615,615,,,,,,615',
'615,615,615,615,615,615,,,615,,,,,,,615,,,615,615,615,615,615,615,615',
'615,615,615,615,,615,615,,615,615,,,,,,,,,,,,,,,,,,,,,615,,,615,,,615',
',615,,615,,,,615,,,,,,,,615,,,,,615,615,615,615,615,615,,,,615,615,',
',,,,,615,,,615,,615,,,,615,615,619,619,619,,619,,,,619,619,,,,619,,619',
'619,619,619,619,619,619,,,,,,619,619,619,619,619,619,619,,,619,,,,,',
',619,,,619,619,619,619,619,619,619,,619,619,619,,619,619,,619,619,,',
',,,,,,,,,,,,,,,,,,619,,,619,,,619,,619,,,,,,619,,,,,,,,619,,,,,619,619',
'619,619,619,619,,,,619,619,,,,,,,619,,,619,621,621,621,,621,619,619',
',621,621,,,,621,,621,621,621,621,621,621,621,,,,,,621,621,621,621,621',
'621,621,,,621,,,,,,,621,,,621,621,621,621,621,621,621,,621,621,621,',
'621,621,,621,621,,,,,,,,,,,,,,,,,,,,,621,,,621,,,621,,621,,,,,,621,',
',,,,,,621,,,,,621,621,621,621,621,621,,,,621,621,,,,,,,621,,,621,649',
'649,649,,649,621,621,,649,649,,,,649,,649,649,649,649,649,649,649,,',
',,,649,649,649,649,649,649,649,,,649,,,,,,,649,,,649,649,649,649,649',
'649,649,,649,649,649,,649,649,,649,649,,,,,,,,,,,,,,,,,,,,,649,,,649',
',,649,,649,,649,,,,649,,,,,,,,649,,,,,649,649,649,649,649,649,,,,649',
'649,,,,,,,649,,,649,652,652,652,,652,649,649,,652,652,,,,652,,652,652',
'652,652,652,652,652,,,,,,652,652,652,652,652,652,652,,,652,,,,,,,652',
',,652,652,652,652,652,652,652,,652,652,652,,652,652,,652,652,,,,,,,',
',,,,,,,,,,,,,652,,,652,,,652,,652,,,,,,652,,,,,,,,652,,,,,652,652,652',
'652,652,652,,,,652,652,,,,,,,652,,,652,653,653,653,,653,652,652,,653',
'653,,,,653,,653,653,653,653,653,653,653,,,,,,653,653,653,653,653,653',
'653,,,653,,,,,,,653,,,653,653,653,653,653,653,653,,653,653,653,,653',
'653,,653,653,,,,,,,,,,,,,,,,,,,,,653,,,653,,,653,,653,,,,,,653,,,,,',
',,653,,,,,653,653,653,653,653,653,,,,653,653,,,,,,,653,,,653,658,658',
'658,,658,653,653,,658,658,,,,658,,658,658,658,658,658,658,658,,,,,,658',
'658,658,658,658,658,658,,,658,,,,,,,658,,,658,658,658,658,658,658,658',
',658,658,658,,658,658,,658,658,,,,,,,,,,,,,,,,,,,,,658,,,658,,,658,',
'658,,,,,,658,,,,,,,,658,,,,,658,658,658,658,658,658,,,,658,658,,,,,',
',658,,,658,661,661,661,,661,658,658,,661,661,,,,661,,661,661,661,661',
'661,661,661,,,,,,661,661,661,661,661,661,661,,,661,,,,,,,661,,,661,661',
'661,661,661,661,661,,661,661,661,,661,661,,661,661,,,,,,,,,,,,,,,,,',
',,,661,,,661,,,661,,661,,,,,,661,,,,,,,,661,,,,,661,661,661,661,661',
'661,,,,661,661,,,,,,,661,,,661,664,664,664,,664,661,661,,664,664,,,',
'664,,664,664,664,664,664,664,664,,,,,,664,664,664,664,664,664,664,,',
'664,,,,,,,664,,,664,664,664,664,664,664,664,,664,664,664,,664,664,,664',
'664,,,,,,,,,,,,,,,,,,,,,664,,,664,,,664,,664,,,,,,664,,,,,,,,664,,,',
',664,664,664,664,664,664,,,,664,664,,,,,,,664,,,664,665,665,665,,665',
'664,664,,665,665,,,,665,,665,665,665,665,665,665,665,,,,,,665,665,665',
'665,665,665,665,,,665,,,,,,,665,,,665,665,665,665,665,665,665,,665,665',
'665,,665,665,,665,665,,,,,,,,,,,,,,,,,,,,,665,,,665,,,665,,665,,,,,',
'665,,,,,,,,665,,,,,665,665,665,665,665,665,,,,665,665,,,,,,,665,,,665',
'678,678,678,678,678,665,665,,678,678,,,,678,,678,678,678,678,678,678',
'678,,,,,,678,678,678,678,678,678,678,,,678,,,,,,678,678,,678,678,678',
'678,678,678,678,678,,678,678,678,,678,678,,678,678,,,,,,,,,,,,,,,,,',
',,,678,,,678,,,678,,678,,678,,,,678,,,,,,,,678,,,,,678,678,678,678,678',
'678,,,,678,678,,,,,,,678,,,678,685,685,685,685,685,678,678,,685,685',
',,,685,,685,685,685,685,685,685,685,,,,,,685,685,685,685,685,685,685',
',,685,,,,,,685,685,,685,685,685,685,685,685,685,685,,685,685,685,,685',
'685,,685,685,,,,,,,,,,,,,,,,,,,,,685,,,685,,,685,,685,,685,,,,685,,',
',,,,,685,,,,,685,685,685,685,685,685,,,,685,685,,,,,,,685,,,685,688',
'688,688,,688,685,685,,688,688,,,,688,,688,688,688,688,688,688,688,,',
',,,688,688,688,688,688,688,688,,,688,,,,,,,688,,,688,688,688,688,688',
'688,688,688,688,688,688,,688,688,,688,688,,,,,,,,,,,,,,,,,,,,,688,,',
'688,,,688,,688,,688,,688,,688,,,,,,,,688,,,,,688,688,688,688,688,688',
',,,688,688,,,,,,,688,,,688,,688,,,,688,688,689,689,689,,689,,,,689,689',
',,,689,,689,689,689,689,689,689,689,,,,,,689,689,689,689,689,689,689',
',,689,,,,,,,689,,,689,689,689,689,689,689,689,689,689,689,689,,689,689',
',689,689,,,,,,,,,,,,,,,,,,,,,689,,,689,,,689,,689,,,,689,,689,,,,,,',
',689,,,,,689,689,689,689,689,689,,,,689,689,,,,,,,689,,,689,,689,,,',
'689,689,695,695,695,695,695,,,,695,695,,,,695,,695,695,695,695,695,695',
'695,,,,,,695,695,695,695,695,695,695,,,695,,,,,,695,695,,695,695,695',
'695,695,695,695,695,,695,695,695,,695,695,,695,695,,,,,,,,,,,,,,,,,',
',,,695,,,695,,,695,,695,,695,,,,695,,,,,,,,695,,,,,695,695,695,695,695',
'695,,,,695,695,,,,,,,695,,,695,696,696,696,696,696,695,695,,696,696',
',,,696,,696,696,696,696,696,696,696,,,,,,696,696,696,696,696,696,696',
',,696,,,,,,696,696,,696,696,696,696,696,696,696,696,,696,696,696,,696',
'696,,696,696,,,,,,,,,,,,,,,,,,,,,696,,,696,,,696,,696,,696,,,,696,,',
',,,,,696,,,,,696,696,696,696,696,696,,,,696,696,,,,,,,696,,,696,701',
'701,701,,701,696,696,,701,701,,,,701,,701,701,701,701,701,701,701,,',
',,,701,701,701,701,701,701,701,,,701,,,,,,,701,,,701,701,701,701,701',
'701,701,,701,701,701,,701,701,,701,701,,,,,,,,,,,,,,,,,,,,,701,,,701',
',,701,,701,,,,,,701,,,,,,,,701,,,,,701,701,701,701,701,701,,,,701,701',
',,,,,,701,,,701,704,704,704,,704,701,701,,704,704,,,,704,,704,704,704',
'704,704,704,704,,,,,,704,704,704,704,704,704,704,,,704,,,,,,,704,,,704',
'704,704,704,704,704,704,,704,704,704,,704,704,,704,704,,,,,,,,,,,,,',
',,,,,,,704,,,704,,,704,,704,,,,,,704,,,,,,,,704,,,,,704,704,704,704',
'704,704,,,,704,704,,,,,,,704,,,704,707,707,707,,707,704,704,,707,707',
',,,707,,707,707,707,707,707,707,707,,,,,,707,707,707,707,707,707,707',
',,707,,,,,,,707,,,707,707,707,707,707,707,707,,707,707,707,,707,707',
',,,,,,,,,,,,,,,,,,,,,,,707,,,707,,,707,,707,,,,,,,,,,,,,,,,,,,707,707',
'707,707,707,707,,,,707,707,,,,,,,707,,,707,720,720,720,,720,707,707',
',720,720,,,,720,,720,720,720,720,720,720,720,,,,,,720,720,720,720,720',
'720,720,,,720,,,,,,,720,,,720,720,720,720,720,720,720,,720,720,720,',
'720,720,,,,,,,,,,,,,,,,,,,,,,,,720,,,720,,,720,,720,,,,,,,,,,,,,,,,',
',,720,720,720,720,720,720,,,,720,720,,,,,,,720,,,720,726,726,726,,726',
'720,720,,726,726,,,,726,,726,726,726,726,726,726,726,,,,,,726,726,726',
'726,726,726,726,,,726,,,,,,,726,,,726,726,726,726,726,726,726,,726,726',
'726,,726,726,,726,726,,,,,,,,,,,,,,,,,,,,,726,,,726,,,726,,726,,726',
',,,726,,,,,,,,726,,,,,726,726,726,726,726,726,,,,726,726,,,,,,,726,',
',726,764,764,764,,764,726,726,,764,764,,,,764,,764,764,764,764,764,764',
'764,,,,,,764,764,764,764,764,764,764,,,764,,,,,,,764,,,764,764,764,764',
'764,764,764,,764,764,764,,764,764,,764,764,,,,,,,,,,,,,,,,,,,,,764,',
',764,,,764,,764,,764,,,,764,,,,,,,,764,,,,,764,764,764,764,764,764,',
',,764,764,,,,,,,764,,,764,771,771,771,,771,764,764,,771,771,,,,771,',
'771,771,771,771,771,771,771,,,,,,771,771,771,771,771,771,771,,,771,',
',,,,,771,,,771,771,771,771,771,771,771,,771,771,771,,771,771,,771,771',
',,,,,,,,,,,,,,,,,,,,771,,,771,,,771,,771,,,,,,771,,,,,,,,771,,,,,771',
'771,771,771,771,771,,,,771,771,,,,,,,771,,,771,776,776,776,776,776,771',
'771,,776,776,,,,776,,776,776,776,776,776,776,776,,,,,,776,776,776,776',
'776,776,776,,,776,,,,,,776,776,,776,776,776,776,776,776,776,776,,776',
'776,776,,776,776,,776,776,,,,,,,,,,,,,,,,,,,,,776,,,776,,,776,,776,',
'776,,,,776,,,,,,,,776,,,,,776,776,776,776,776,776,,,,776,776,,,,,,,776',
',,776,780,780,780,780,780,776,776,,780,780,,,,780,,780,780,780,780,780',
'780,780,,,,,,780,780,780,780,780,780,780,,,780,,,,,,780,780,,780,780',
'780,780,780,780,780,780,,780,780,780,,780,780,,780,780,,,,,,,,,,,,,',
',,,,,,,780,,,780,,,780,,780,,780,,,,780,,,,,,,,780,,,,,780,780,780,780',
'780,780,,,,780,780,,,,,,,780,,,780,781,781,781,781,781,780,780,,781',
'781,,,,781,,781,781,781,781,781,781,781,,,,,,781,781,781,781,781,781',
'781,,,781,,,,,,781,781,,781,781,781,781,781,781,781,781,,781,781,781',
',781,781,,781,781,,,,,,,,,,,,,,,,,,,,,781,,,781,,,781,,781,,781,,,,781',
',,,,,,,781,,,,,781,781,781,781,781,781,,,,781,781,,,,,,,781,,,781,784',
'784,784,,784,781,781,,784,784,,,,784,,784,784,784,784,784,784,784,,',
',,,784,784,784,784,784,784,784,,,784,,,,,,,784,,,784,784,784,784,784',
'784,784,,784,784,784,,784,784,,784,784,,,,,,,,,,,,,,,,,,,,,784,,,784',
',,784,,784,,,,,,784,,,,,,,,784,,,,,784,784,784,784,784,784,,,,784,784',
',,,,,,784,,,784,798,798,798,798,798,784,784,,798,798,,,,798,,798,798',
'798,798,798,798,798,,,,,,798,798,798,798,798,798,798,,,798,,,,,,798',
'798,,798,798,798,798,798,798,798,798,,798,798,798,,798,798,,798,798',
',,,,,,,,,,,,,,,,,,,,798,,,798,,,798,,798,,798,,,,798,,,,,,,,798,,,,',
'798,798,798,798,798,798,,,,798,798,,,,,,,798,,,798,803,803,803,,803',
'798,798,,803,803,,,,803,,803,803,803,803,803,803,803,,,,,,803,803,803',
'803,803,803,803,,,803,,,,,,,803,,,803,803,803,803,803,803,803,,803,803',
'803,,803,803,,803,803,,,,,,,,,,,,,,,,,,,,,803,,,803,,,803,,803,,,,,',
'803,,,,,,,,803,,,,,803,803,803,803,803,803,,,,803,803,,,,,,,803,,,803',
'804,804,804,,804,803,803,,804,804,,,,804,,804,804,804,804,804,804,804',
',,,,,804,804,804,804,804,804,804,,,804,,,,,,,804,,,804,804,804,804,804',
'804,804,,804,804,804,,804,804,,804,804,,,,,,,,,,,,,,,,,,,,,804,,,804',
',,804,,804,,,,,,804,,,,,,,,804,,,,,804,804,804,804,804,804,,,,804,804',
',,,,,,804,,,804,805,805,805,,805,804,804,,805,805,,,,805,,805,805,805',
'805,805,805,805,,,,,,805,805,805,805,805,805,805,,,805,,,,,,,805,,,805',
'805,805,805,805,805,805,,805,805,805,,805,805,,805,805,,,,,,,,,,,,,',
',,,,,,,805,,,805,,,805,,805,,,,,,805,,,,,,,,805,,,,,805,805,805,805',
'805,805,,,,805,805,,,,,,,805,,,805,817,817,817,,817,805,805,,817,817',
',,,817,,817,817,817,817,817,817,817,,,,,,817,817,817,817,817,817,817',
',,817,,,,,,,817,,,817,817,817,817,817,817,817,,817,817,817,,817,817',
',817,817,,,,,,,,,,,,,,,,,,,,,817,,,817,,,817,,817,,,,,,817,,,,,,,,817',
',,,,817,817,817,817,817,817,,,,817,817,,,,,,,817,,,817,818,818,818,',
'818,817,817,,818,818,,,,818,,818,818,818,818,818,818,818,,,,,,818,818',
'818,818,818,818,818,,,818,,,,,,,818,,,818,818,818,818,818,818,818,,818',
'818,818,,818,818,,818,818,,,,,,,,,,,,,,,,,,,,,818,,,818,,,818,,818,',
',,,,818,,,,,,,,818,,,,,818,818,818,818,818,818,,,,818,818,,,,,,,818',
',,818,819,819,819,,819,818,818,,819,819,,,,819,,819,819,819,819,819',
'819,819,,,,,,819,819,819,819,819,819,819,,,819,,,,,,,819,,,819,819,819',
'819,819,819,819,,819,819,819,,819,819,,819,819,,,,,,,,,,,,,,,,,,,,,819',
',,819,,,819,,819,,,,,,819,,,,,,,,819,,,,,819,819,819,819,819,819,,,',
'819,819,,,,,,,819,,,819,830,830,830,,830,819,819,,830,830,,,,830,,830',
'830,830,830,830,830,830,,,,,,830,830,830,830,830,830,830,,,830,,,,,',
',830,,,830,830,830,830,830,830,830,,830,830,830,,830,830,,830,830,,',
',,,,,,,,,,,,,,,,,,830,,,830,,,830,,830,,830,,,,830,,,,,,,,830,,,,,830',
'830,830,830,830,830,,,,830,830,,,,,,,830,,,830,844,844,844,844,844,830',
'830,,844,844,,,,844,,844,844,844,844,844,844,844,,,,,,844,844,844,844',
'844,844,844,,,844,,,,,,844,844,,844,844,844,844,844,844,844,844,,844',
'844,844,,844,844,,844,844,,,,,,,,,,,,,,,,,,,,,844,,,844,,,844,,844,',
'844,,,,844,,,,,,,,844,,,,,844,844,844,844,844,844,,,,844,844,,,,,,,844',
',,844,870,870,870,,870,844,844,,870,870,,,,870,,870,870,870,870,870',
'870,870,,,,,,870,870,870,870,870,870,870,,,870,,,,,,,870,,,870,870,870',
'870,870,870,870,,870,870,870,,870,870,,870,870,,,,,,,,,,,,,,,,,,,,,870',
',,870,,,870,,870,,,,,,870,,,,,,,,870,,,,,870,870,870,870,870,870,,,',
'870,870,,,,,,,870,,,870,872,872,872,872,872,870,870,,872,872,,,,872',
',872,872,872,872,872,872,872,,,,,,872,872,872,872,872,872,872,,,872',
',,,,,872,872,,872,872,872,872,872,872,872,872,,872,872,872,,872,872',
',872,872,,,,,,,,,,,,,,,,,,,,,872,,,872,,,872,,872,,872,,,,872,,,,,,',
',872,,,,,872,872,872,872,872,872,,,,872,872,,,,,,,872,,,872,873,873',
'873,873,873,872,872,,873,873,,,,873,,873,873,873,873,873,873,873,,,',
',,873,873,873,873,873,873,873,,,873,,,,,,873,873,,873,873,873,873,873',
'873,873,873,,873,873,873,,873,873,,873,873,,,,,,,,,,,,,,,,,,,,,873,',
',873,,,873,,873,,873,,,,873,,,,,,,,873,,,,,873,873,873,873,873,873,',
',,873,873,,,,,,,873,,,873,898,898,898,,898,873,873,,898,898,,,,898,',
'898,898,898,898,898,898,898,,,,,,898,898,898,898,898,898,898,,,898,',
',,,,,898,,,898,898,898,898,898,898,898,,898,898,898,,898,898,,898,898',
',,,,,,,,,,,,,,,,,,,,898,,,898,,,898,,898,,,,,,898,,,,,,,,898,,,,,898',
'898,898,898,898,898,,,,898,898,,,,,,,898,,,898,912,912,912,,912,898',
'898,,912,912,,,,912,,912,912,912,912,912,912,912,,,,,,912,912,912,912',
'912,912,912,,,912,,,,,,,912,,,912,912,912,912,912,912,912,,912,912,912',
',912,912,,912,912,,,,,,,,,,,,,,,,,,,,,912,,,912,,,912,,912,,,,,,912',
',,,,,,,912,,,,,912,912,912,912,912,912,,,,912,912,,,,,,,912,,,912,913',
'913,913,,913,912,912,,913,913,,,,913,,913,913,913,913,913,913,913,,',
',,,913,913,913,913,913,913,913,,,913,,,,,,,913,,,913,913,913,913,913',
'913,913,,913,913,913,,913,913,,913,913,,,,,,,,,,,,,,,,,,,,,913,,,913',
',,913,,913,,,,,,913,,,,,,,,913,,,,,913,913,913,913,913,913,,,,913,913',
',,,,,,913,,,913,914,914,914,,914,913,913,,914,914,,,,914,,914,914,914',
'914,914,914,914,,,,,,914,914,914,914,914,914,914,,,914,,,,,,,914,,,914',
'914,914,914,914,914,914,,914,914,914,,914,914,,914,914,,,,,,,,,,,,,',
',,,,,,,914,,,914,,,914,,914,,,,,,914,,,,,,,,914,,,,,914,914,914,914',
'914,914,,,,914,914,,,,,,,914,,,914,920,920,920,,920,914,914,,920,920',
',,,920,,920,920,920,920,920,920,920,,,,,,920,920,920,920,920,920,920',
',,920,,,,,,,920,,,920,920,920,920,920,920,920,920,920,920,920,,920,920',
',920,920,,,,,,,,,,,,,,,,,,,,,920,,,920,,,920,,920,,,,920,,920,,,,,,',
',920,,,,,920,920,920,920,920,920,,,,920,920,,,,,,,920,,,920,,920,,,',
'920,920,925,925,925,925,925,,,,925,925,,,,925,,925,925,925,925,925,925',
'925,,,,,,925,925,925,925,925,925,925,,,925,,,,,,925,925,,925,925,925',
'925,925,925,925,925,,925,925,925,,925,925,,925,925,,,,,,,,,,,,,,,,,',
',,,925,,,925,,,925,,925,,925,,,,925,,,,,,,,925,,,,,925,925,925,925,925',
'925,,,,925,925,,,,,,,925,,,925,929,929,929,,929,925,925,,929,929,,,',
'929,,929,929,929,929,929,929,929,,,,,,929,929,929,929,929,929,929,,',
'929,,,,,,,929,,,929,929,929,929,929,929,929,,929,929,929,,929,929,,',
',,,,,,,,,,,,,,,,,,,,,929,,,929,,,929,,929,,,,,,,,,,,,,,,,,,,929,929',
'929,929,929,929,,,,929,929,,,,,,,929,,,929,944,944,944,,944,929,929',
',944,944,,,,944,,944,944,944,944,944,944,944,,,,,,944,944,944,944,944',
'944,944,,,944,,,,,,,944,,,944,944,944,944,944,944,944,,944,944,944,',
'944,944,,944,944,,,,,,,,,,,,,,,,,,,,,944,,,944,,,944,,944,,944,,,,944',
',,,,,,,944,,,,,944,944,944,944,944,944,,,,944,944,,,,,,,944,,,944,945',
'945,945,945,945,944,944,,945,945,,,,945,,945,945,945,945,945,945,945',
',,,,,945,945,945,945,945,945,945,,,945,,,,,,945,945,,945,945,945,945',
'945,945,945,945,,945,945,945,,945,945,,945,945,,,,,,,,,,,,,,,,,,,,,945',
',,945,,,945,,945,,945,,,,945,,,,,,,,945,,,,,945,945,945,945,945,945',
',,,945,945,,,,,,,945,,,945,948,948,948,948,948,945,945,,948,948,,,,948',
',948,948,948,948,948,948,948,,,,,,948,948,948,948,948,948,948,,,948',
',,,,,948,948,,948,948,948,948,948,948,948,948,,948,948,948,,948,948',
',948,948,,,,,,,,,,,,,,,,,,,,,948,,,948,,,948,,948,,948,,,,948,,,,,,',
',948,,,,,948,948,948,948,948,948,,,,948,948,,,,,,,948,,,948,971,971',
'971,,971,948,948,,971,971,,,,971,,971,971,971,971,971,971,971,,,,,,971',
'971,971,971,971,971,971,,,971,,,,,,,971,,,971,971,971,971,971,971,971',
',971,971,971,,971,971,,971,971,,,,,,,,,,,,,,,,,,,,,971,,,971,,,971,',
'971,,971,,971,,971,,,,,,,,971,,,,,971,971,971,971,971,971,,,,971,971',
',,,,,,971,,,971,973,973,973,973,973,971,971,,973,973,,,,973,,973,973',
'973,973,973,973,973,,,,,,973,973,973,973,973,973,973,,,973,,,,,,973',
'973,,973,973,973,973,973,973,973,973,,973,973,973,,973,973,,973,973',
',,,,,,,,,,,,,,,,,,,,973,,,973,,,973,,973,,973,,,,973,,,,,,,,973,,,,',
'973,973,973,973,973,973,,,,973,973,,,,,,,973,,,973,986,986,986,986,986',
'973,973,,986,986,,,,986,,986,986,986,986,986,986,986,,,,,,986,986,986',
'986,986,986,986,,,986,,,,,,986,986,,986,986,986,986,986,986,986,986',
',986,986,986,,986,986,,986,986,,,,,,,,,,,,,,,,,,,,,986,,,986,,,986,',
'986,,986,,,,986,,,,,,,,986,,,,,986,986,986,986,986,986,,,,986,986,,',
',,,,986,,,986,991,991,991,991,991,986,986,,991,991,,,,991,,991,991,991',
'991,991,991,991,,,,,,991,991,991,991,991,991,991,,,991,,,,,,991,991',
',991,991,991,991,991,991,991,991,,991,991,991,,991,991,,991,991,,,,',
',,,,,,,,,,,,,,,,991,,,991,,,991,,991,,991,,,,991,,,,,,,,991,,,,,991',
'991,991,991,991,991,,,,991,991,,,,,,,991,,,991,1003,1003,1003,1003,1003',
'991,991,,1003,1003,,,,1003,,1003,1003,1003,1003,1003,1003,1003,,,,,',
'1003,1003,1003,1003,1003,1003,1003,,,1003,,,,,,1003,1003,,1003,1003',
'1003,1003,1003,1003,1003,1003,,1003,1003,1003,,1003,1003,,1003,1003',
',,,,,,,,,,,,,,,,,,,,1003,,,1003,,,1003,,1003,,1003,,,,1003,,,,,,,,1003',
',,,,1003,1003,1003,1003,1003,1003,,,,1003,1003,,,,,,,1003,,,1003,1007',
'1007,1007,,1007,1003,1003,,1007,1007,,,,1007,,1007,1007,1007,1007,1007',
'1007,1007,,,,,,1007,1007,1007,1007,1007,1007,1007,,,1007,,,,,,,1007',
',,1007,1007,1007,1007,1007,1007,1007,1007,1007,1007,1007,,1007,1007',
',1007,1007,,,,,,,,,,,,,,,,,,,,,1007,,,1007,,,1007,,1007,,1007,,,,1007',
',,,,,,,1007,,,,443,1007,1007,1007,1007,1007,1007,443,443,443,1007,1007',
',443,443,,443,,1007,,,1007,,1007,,443,,1007,1007,,,,,,,,443,443,,443',
'443,443,443,443,,,,,,,,,,,,,,,,,,,,,,443,443,443,443,443,443,443,443',
'443,443,443,443,443,443,443,,,443,443,443,,443,,,,443,,,,,,443,,443',
',443,443,443,443,443,443,443,,443,443,443,,,,,,,,,,,,,443,443,,443,',
'443,,445,443,,443,,,443,445,445,445,,,,445,445,,445,,,,,,,,,,,,,,,,',
',,,445,445,,445,445,445,445,445,,,,,,,,,,,,,,,,,,,,,,445,445,445,445',
'445,445,445,445,445,445,445,445,445,445,445,,,445,445,445,,445,,,,445',
',,,,,445,,445,,445,445,445,445,445,445,445,,445,,445,,,,,,,,,,,,,445',
'445,,445,,445,,668,445,,445,,,445,668,668,668,,,668,668,668,,668,,,',
',,,,,668,668,668,,,,,,,,,668,668,,668,668,668,668,668,,,,,,,,,,,,,,',
',,,,,,,668,668,668,668,668,668,668,668,668,668,668,668,668,668,668,',
',668,668,668,,668,668,,,668,,668,,668,,668,,668,,668,668,668,668,668',
'668,668,,668,668,668,,,,,,,,,,,,,668,668,668,668,,668,,669,668,,668',
',,668,669,669,669,,,669,669,669,,669,,,,,,,,,,669,669,,,,,,,,,669,669',
',669,669,669,669,669,,,,,,,,,,,,,,,,,,,,,,669,669,669,669,669,669,669',
'669,669,669,669,669,669,669,669,,,669,669,669,,669,669,,,669,,669,,669',
',669,,669,,669,669,669,669,669,669,669,,669,,669,,,,,,,,,,,,,669,669',
'669,669,,669,,25,669,,669,,,669,25,25,25,,,25,25,25,,25,,,,,,,,,25,25',
'25,,,,,,,,,25,25,,25,25,25,25,25,,,,,,,,,,,,,,,,,,,,,,25,25,25,25,25',
'25,25,25,25,25,25,25,25,25,25,,,25,25,25,,,25,,25,25,,25,,25,,25,,25',
',25,25,25,25,25,25,25,,25,25,25,,,,,,,,,,,,,25,25,25,25,26,25,,,25,',
'25,26,26,26,,,26,26,26,,26,,,,,,,,,,26,26,,,,,,,,,26,26,,26,26,26,26',
'26,,,,,,,,,,,,,,,,,,,,,,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26',
',,26,26,26,,,26,,26,26,,26,,26,,26,,26,,26,26,26,26,26,26,26,,26,,26',
',,,,,,,,,,,,26,26,26,26,51,26,,,26,,26,51,51,51,,,51,51,51,,51,,,,,',
',,,,51,51,51,,,,,,,,51,51,,51,51,51,51,51,,,,,,,,,,,,,,,,,,,,,,51,51',
'51,51,51,51,51,51,51,51,51,51,51,51,51,,,51,51,51,,,51,,,51,,51,,51',
',51,,51,,51,51,51,51,51,51,51,,51,,51,,,,,,,,,,,,,51,51,51,51,439,51',
',51,51,,51,439,439,439,,,439,439,439,,439,,,,,,,,,439,439,439,,,,,,',
',,439,439,,439,439,439,439,439,,,,,,,,,,,,,,,,,,,,,,439,439,439,439',
'439,439,439,439,439,439,439,439,439,439,439,,,439,439,439,,,439,,439',
'439,,439,,439,,439,,439,,439,439,439,439,439,439,439,,439,439,439,,',
',,,,,,,,,,439,439,439,439,449,439,,,439,,439,449,449,449,,,449,449,449',
',449,,,,,,,,,449,449,449,,,,,,,,,449,449,,449,449,449,449,449,,,,,,',
',,,,,,,,,,,,,,,449,449,449,449,449,449,449,449,449,449,449,449,449,449',
'449,,,449,449,449,,,449,,449,449,,449,,449,,449,,449,,449,449,449,449',
'449,449,449,,449,449,449,,,,,,,,,,,,,449,449,449,449,499,449,,,449,',
'449,499,499,499,,,499,499,499,,499,,,,,,,,,,499,,,,,,,,,,499,499,,499',
'499,499,499,499,,,,,,,,,,,,500,,,,,,,500,500,500,,,500,500,500,,500',
',,,,499,499,,,,500,,,499,,,,,499,499,500,500,,500,500,500,500,500,,',
',,,,,,,,,499,,,,,,,,,,,,,499,,499,,,499,,,500,500,,501,,,,,500,,501',
'501,501,500,500,501,501,501,,501,,,,,,,,,,501,,,,,500,,,,,501,501,,501',
'501,501,501,501,500,,500,,,500,202,202,,,202,,,,,,,,,202,202,202,202',
'202,202,202,202,202,,,202,202,501,501,,,202,202,202,202,501,,,,,501',
'501,,,,,202,202,,202,202,202,202,202,202,202,202,202,202,202,,501,202',
',,,,,,,,,,,501,,501,,,501,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7',
'7,7,7,,,,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,,7,,,,,,,,',
'7,7,7,7,7,7,7,7,7,,,7,7,,,,,7,7,7,7,,,,,,,,,,,,7,7,,7,7,7,7,7,7,7,7',
'7,7,7,,,7,7,,,,,,,,,,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8',
'8,,,,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,,,8,,,,,,,,,8,8,8',
'8,8,8,8,8,8,,,8,8,,,,,8,8,8,8,,,,,,,,,,,,8,8,,8,8,8,8,8,8,8,8,8,8,8',
',,8,8,,,,,,,,,,8,422,422,422,422,422,422,422,422,422,422,422,422,422',
'422,422,422,422,422,422,422,422,422,422,422,,,,422,422,422,422,422,422',
'422,422,422,422,422,422,422,422,422,422,422,422,422,422,422,422,422',
',,422,,,,,,,,,422,422,422,422,422,422,422,422,422,,,422,422,,,,,422',
'422,422,422,,,,,,,,,,,,422,422,,422,422,422,422,422,422,422,422,422',
'422,422,,,422,422,,,,,,,,,,422,426,426,426,426,426,426,426,426,426,426',
'426,426,426,426,426,426,426,426,426,426,426,426,426,426,,,,426,426,426',
'426,426,426,426,426,426,426,426,426,426,426,426,426,426,426,426,426',
'426,426,426,,,426,,,,,,,,,426,426,426,426,426,426,426,426,426,,,426',
'426,,,,,426,426,426,426,,,,,,,,,,,,426,426,,426,426,426,426,426,426',
'426,426,426,426,426,,,426,426,,,,,,,,,,426,66,66,66,66,66,66,66,66,66',
'66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,,,,66,66,66,66,66,66,66',
'66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,,66,,,,,,,66',
'66,66,66,66,66,66,66,66,,,66,66,,,,,66,66,66,66,,,,,,66,,,,,,66,66,',
'66,66,66,66,66,66,66,66,66,66,66,,,66,80,80,80,80,80,80,80,80,80,80',
'80,80,80,80,80,80,80,80,80,80,80,80,80,80,,,,80,80,80,80,80,80,80,80',
'80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,,80,,,,,,,80,80',
'80,80,80,80,80,80,80,,,80,80,,,,,80,80,80,80,,,,,,,,,,,,80,80,,80,80',
'80,80,80,80,80,80,80,80,80,,,80,193,193,193,193,193,193,193,193,193',
'193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,,,,193,193',
'193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193',
'193,193,193,193,193,193,193,,193,,,,,,,193,193,193,193,193,193,193,193',
'193,,,193,193,,,,,193,193,193,193,,,,,,,,,,,,193,193,,193,193,193,193',
'193,193,193,193,193,193,193,,,193,795,795,795,795,795,795,795,795,795',
'795,795,795,795,795,795,795,795,795,795,795,795,795,795,795,,,,795,795',
'795,795,795,795,795,795,795,795,795,795,795,795,795,795,795,795,795',
'795,795,795,795,,,795,,,,,,,,,795,795,795,795,795,795,795,795,795,,',
'795,795,,,,,795,795,795,795,,,,,,,,,,,,795,795,,795,795,795,795,795',
'795,795,795,795,795,795,201,201,795,,201,,,,,,,,,201,201,201,201,201',
'201,201,201,201,,,201,201,,,,,201,201,201,201,,,,,,201,,,,,,201,201',
',201,201,201,201,201,201,201,201,201,201,201,203,203,201,,203,,,,,,',
',,203,203,203,203,203,203,203,203,203,,,203,203,,,,,203,203,203,203',
',,,,,,,,,,,203,203,,203,203,203,203,203,203,203,203,203,203,203,249',
'249,203,,249,,,,,,,,,249,249,249,249,249,249,249,249,249,,,249,249,',
',,,249,249,249,249,,,,,,,,,,,,249,249,,249,249,249,249,249,249,249,249',
'249,249,249,250,250,249,,250,,,,,,,,,250,250,250,250,250,250,250,250',
'250,,,250,250,,,,,250,250,250,250,,,,,,,,,,,,250,250,,250,250,250,250',
'250,250,250,250,250,250,250,251,251,250,,251,,,,,,,,,251,251,251,251',
'251,251,251,251,251,,,251,251,,,,,251,251,251,251,,,,,,,,,,,,251,251',
',251,251,251,251,251,251,251,251,251,251,251,462,462,251,,462,,,,,,',
',,462,462,462,462,462,462,462,462,462,,,462,462,,,,,462,462,462,462',
',,,,,462,,,,,,462,462,,462,462,462,462,462,462,462,462,462,462,462,463',
'463,462,,463,,,,,,,,,463,463,463,463,463,463,463,463,463,,,463,463,',
',,,463,463,463,463,,,,,,,,,,,,463,463,,463,463,463,463,463,463,463,463',
'463,463,463,536,536,463,,536,,,,,,,,,536,536,536,536,536,536,536,536',
'536,,,536,536,,,,,536,536,536,536,,,,,,536,,,,,,536,536,,536,536,536',
'536,536,536,536,536,536,536,536,537,537,536,,537,,,,,,,,,537,537,537',
'537,537,537,537,537,537,,,537,537,,,,,537,537,537,537,,,,,,,,,,,,537',
'537,,537,537,537,537,537,537,537,537,537,537,537,539,539,537,,539,,',
',,,,,,539,539,539,539,539,539,539,539,539,,,539,539,,,,,539,539,539',
'539,,,,,,,,,,,,539,539,,539,539,539,539,539,539,539,539,539,539,539',
'550,550,539,,550,,,,,,,,,550,550,550,550,550,550,550,550,550,,,550,550',
',,,,550,550,550,550,,,,,,550,,,,,,550,550,,550,550,550,550,550,550,550',
'550,550,550,550,551,551,550,,551,,,,,,,,,551,551,551,551,551,551,551',
'551,551,,,551,551,,,,,551,551,551,551,,,,,,,,,,,,551,551,,551,551,551',
'551,551,551,551,551,551,551,551,607,607,551,,607,,,,,,,,,607,607,607',
'607,607,607,607,607,607,,,607,607,,,,,607,607,607,607,,,,,,607,,,,,',
'607,607,,607,607,607,607,607,607,607,607,607,607,607,608,608,607,,608',
',,,,,,,,608,608,608,608,608,608,608,608,608,,,608,608,,,,,608,608,608',
'608,,,,,,,,,,,,608,608,,608,608,608,608,608,608,608,608,608,608,608',
'614,614,608,,614,,,,,,,,,614,614,614,614,614,614,614,614,614,,,614,614',
',,,,614,614,614,614,,,,,,,,,,,,614,614,,614,614,614,614,614,614,614',
'614,614,614,614,616,616,614,,616,,,,,,,,,616,616,616,616,616,616,616',
'616,616,,,616,616,,,,,616,616,616,616,,,,,,616,,,,,,616,616,,616,616',
'616,616,616,616,616,616,616,616,616,746,746,616,,746,,,,,,,,,746,746',
'746,746,746,746,746,746,746,,,746,746,,,,,746,746,746,746,,,,,,,,,,',
',746,746,,746,746,746,746,746,746,746,746,746,746,746,1008,1008,746',
',1008,,,,,,,,,1008,1008,1008,1008,1008,1008,1008,1008,1008,,,1008,1008',
',,,,1008,1008,1008,1008,,,,,,1008,,,,,,1008,1008,,1008,1008,1008,1008',
'1008,1008,1008,1008,1008,1008,1008,1009,1009,1008,,1009,,,,,,,,,1009',
'1009,1009,1009,1009,1009,1009,1009,1009,,,1009,1009,,,,,1009,1009,1009',
'1009,,,,,,,,,,,,1009,1009,,1009,1009,1009,1009,1009,1009,1009,1009,1009',
'1009,1009,,,1009' ]
        racc_action_check = arr = ::Array.new(26038, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_action_pointer = [
    -2,    25,   nil,   -46,   nil,   790,   -71, 23991, 24112,   -15,
   nil,   -30,    31,   580,   244,     2,   310,   nil,   129,   260,
  2653,   171,   nil,   380,   -14, 23095, 23222,   391,   529,   667,
   nil,   805,   936,  1067,   nil,    76,   351,   161,   578,  1198,
  1329,  1460,   104,   667,   nil,   nil,   nil,   nil,   nil,   nil,
   nil, 23349,   nil,  1591,  1722,  1860,   -19,   949,  1998,  2129,
   nil,   nil,  2260,  2391,  2522,   nil, 24475,   nil,   nil,   nil,
   nil,   nil,   194,   nil,   nil,   nil,   nil,   nil,   110,   132,
 24585,   nil,   nil,   nil,   631,  2653,   nil,   nil,  2791,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   379,   nil,
  2929,   nil,   nil,   nil,  3060,  3191,  3322,  3453,  3584,  3715,
   nil,   518,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil, 24695,   257,   nil,  3846,  3977,  4108,  4239,
  4377, 24864, 23864, 24923,  4515,  4646,  4777,  4908,   nil,   831,
   -76,   337,   -63,   271,   342,  5039,  5170,   nil,   nil,  5301,
   349,  5432,  5563,  5694,  5825,  5956,  6087,  6218,  6349,  6480,
  6611,  6742,  6873,  7004,  7135,  7266,  7397,  7528,  7659,  7790,
  7921,  8052,  8183,  8314,  8445,  8576,   nil,   nil,   nil, 24982,
 25041, 25100,   359,  8707,  8845,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,  8983,   nil,  2791,   nil,   336,   348,   nil,  9121,
   396,  9252,   nil,   nil,  9383,  9514,   nil,   nil,   146,   970,
   395,  9645,   409,   411,   388,  9776,  9907,    17,   899,   474,
    39,   nil,   452,   420,   -11,   nil,   nil,   nil,   468,   716,
   445, 10038,   nil,   430,   541,   554,   931,   nil,   575,   nil,
 10169,   nil, 10300,    31,   nil,   537,   -89,   -47,   570,   556,
   292,   592,   nil,   nil,   -21,  1080,   nil,   nil,   nil,   567,
   559,   580,   583,   nil,   588,   600,   nil,   nil,   nil,   679,
   nil, 10431,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   821,
   nil,   nil,   nil,   698,   nil,   nil,   703,   749,    -7,     0,
 10562, 10693,   374,   350,   628,    -2,  1030,   724,     0,   763,
   nil,   nil,   391,   743,   nil,  1064,   nil,    68,   nil,   nil,
 10824,   148,   381,   450,   532,   575,   588,   597,   599,   nil,
   677,   nil, 10955,   nil,   285,   nil,   391,   nil,   419,   684,
   435,   nil,   692,   -33,   nil,   529,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   711, 24233,   nil,   nil,   nil, 24354,   731,   nil,   721,
   nil, 11086,   725,   nil,  3191,   768,   772,   487,   568, 23476,
   nil,   nil,   nil, 22575,   778, 22705,   nil, 11217, 11355, 23603,
   nil,   nil,   nil,  3322,   nil,   734,   nil,   nil,   529,   nil,
   nil,   nil, 25159, 25218, 11493, 11631,   -51, 11769, 11900, 12031,
    44,   nil,  4777,  4908,   260,   694,   807,   819,   823,   827,
  2516,  2929,  1461,  5039,  1591,  1998,  2129,  2260,  5170,  5301,
  5432,  5563,  5694,   370,   829,  5825,  5956, 12162,   -34, 23730,
 23785, 23864,    -7,   nil,   772,   nil,   nil,   771,   773,   nil,
   nil, 12293,   166,   167,   813,   nil,   nil, 12424,   nil, 12562,
   nil, 12700,   nil,   167,   nil,   nil,   nil, 12831,   815,   780,
   nil,   nil,   784, 12962,   821, 13093, 25277, 25336, 13231, 25395,
   170,   824,   nil,   nil, 13369,   802,   nil, 13500, 13631, 13762,
 25454, 25513,  3453, 13893,   926,   926,   846,   nil,   nil, 14024,
   nil,   nil, 14162,   nil,   nil,   nil,   nil, 14300, 14431,   851,
   nil,  2404,   nil,   nil, 14562,   362,   nil,   nil,   695,  2535,
   nil,   826,   nil,   nil,  1161,   891,   nil,   858,   nil,   966,
   nil,   823,   439,   nil,   nil, 14693,   938,   nil,   nil, 14824,
   203,   204,   936,   952, 14955,   nil, 15086, 25572, 25631, 15224,
    16,   nil,  1224,   nil, 25690, 15362, 25749,   nil,   nil, 15500,
   487, 15631,   nil,  9789,   nil,   nil,   nil,    34,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   244,   nil,
   nil,   nil,   836,   nil,   nil,   nil,   nil,   nil,   846, 15762,
   621,    98, 15893, 16024,   879,   nil,   nil,   nil, 16155,   883,
   nil, 16286,   884,   nil, 16417, 16548,   202,   251, 22835, 22965,
   887,   888,   667,   nil,  1860,   nil, 10051,   nil, 16679,   nil,
   nil,   nil,   nil,   nil,   nil, 16810,   nil,   892, 16941, 17079,
  1722,   865,   nil,   nil,   905, 17217, 17348,   nil,   872,   nil,
   913, 17479,   nil,   nil, 17610,  1000,   -25, 17741,   880,   nil,
   925,   207,   229,   934,   252,   260,   936,   934,   939,   907,
 17872,  3584,   969,   970,    66,  1022, 18003,   nil,   nil,   419,
   nil,   945,  1047,   nil,   nil,   nil,   933,   934,  1292,   937,
   nil,   nil,   940,   941,   nil,   946, 25808,   nil,   nil,   986,
  1097,   953,  1214,   789,   nil,  1066,   nil,   nil,   nil,   nil,
   nil,  1072,   nil,  1082, 18134,  1000,    29,    40,    80,   121,
  1001, 18265,  1722,   nil,  1005,  1003, 18396,   552,   nil,   212,
 18527, 18658, 10444,   580, 18789,   nil,   977,   978,   nil,   982,
   983,   984,   nil,   975,   nil, 24805,  1023,   761, 18920,   nil,
   nil,   nil,   996, 19051, 19182, 19313,   nil,  3715,   nil,  3846,
   nil,   nil,  3977,   nil,  4108,   nil,  4239, 19444, 19575, 19706,
   283,   298,   nil,   998,  1023,  1008,  1128,  1028,   nil,  1013,
 19837,   nil,  1032,  1134,   nil,   nil,   nil,  1018,   232,   nil,
   nil,   nil,  1138,   nil, 19968,  1028,  1069,   nil,   nil,   nil,
   nil,   nil,  1219,   nil,  1350,   nil,   nil, 10837,   nil,  1481,
   nil,   nil,  1068,   nil,   nil,   465,  1345,  1033,  1153,   nil,
 20099,  1155, 20230, 20361,   nil,   nil,    45,    50,  1355,   229,
   nil,  1156,   nil,   nil,  1157,  1158,  1046,   nil,   nil,   471,
   nil,   nil, 12975,   nil,   335,   nil,  1612,   nil, 20492,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,  1061,  1046,   nil,  4377,
   nil,  4515, 20623, 20754, 20885,   792,   nil,  1067,   nil,   nil,
 21016,  1048,   nil,   nil,   nil, 21154,   nil,   nil,    72, 21285,
   nil,  1060,  1061,  1064,  1065,  1068,  1581,  1072,  1607,   nil,
    76,   nil,  1194,  1198, 21416, 21547,   nil,   nil, 21678,   nil,
   nil,  1120,   nil,  1085,   nil,  1086,  1096,  1097,  1088,   nil,
  1099,   nil, 13382,   nil,  4646,   495,   nil,   nil,   nil,   nil,
   nil, 21809,   nil, 21940,    80,  1423,  1172,    84,   nil,   nil,
  2019,   nil,   nil,   nil,  1988,  1108, 22071,   nil,   nil,   nil,
   447, 22202,  1226,   nil,   nil, 14575,   nil,  2150,   nil,  2281,
   nil,  2950,   nil, 22333,   nil,   833,  1232, 22464, 25867, 25926,
    88,  1114,  1115,   888,   nil,   nil,   nil,  1233,   nil,  1118,
  1127,  1131,  1134,  1254,   nil,   nil,  1173,    96,   110,   176,
   211,   nil,   nil,   nil,  3081,   nil,   nil,   nil,   nil,   nil,
   129,  1150,   nil ]

racc_action_default = [
    -3,  -591,    -1,  -579,    -4,    -6,  -591,  -591,  -591,  -591,
   -25,  -591,  -591,  -591,  -283,  -591,   -37,   -40,  -591,  -591,
   -45,   -47,   -48,   -49,  -261,  -261,  -261,  -295,  -333,  -334,
   -67,   -10,   -71,   -79,   -81,  -591,  -478,  -591,  -591,  -591,
  -591,  -591,  -581,  -237,  -276,  -277,  -278,  -279,  -280,  -281,
  -282,  -569,  -285,  -591,  -590,  -559,  -303,  -590,  -591,  -591,
  -308,  -311,  -579,  -591,  -591,  -325,  -591,  -335,  -336,  -421,
  -422,  -423,  -424,  -425,  -590,  -428,  -590,  -590,  -590,  -590,
  -590,  -455,  -461,  -462,  -591,  -467,  -468,  -469,  -470,  -471,
  -472,  -473,  -474,  -475,  -476,  -477,  -480,  -481,  -591,    -2,
  -580,  -586,  -587,  -588,  -591,  -591,  -591,  -591,  -591,    -3,
   -13,  -591,  -108,  -109,  -110,  -111,  -112,  -113,  -114,  -117,
  -118,  -119,  -120,  -121,  -122,  -123,  -124,  -125,  -126,  -127,
  -128,  -129,  -130,  -131,  -132,  -133,  -134,  -135,  -136,  -137,
  -138,  -139,  -140,  -141,  -142,  -143,  -144,  -145,  -146,  -147,
  -148,  -149,  -150,  -151,  -152,  -153,  -154,  -155,  -156,  -157,
  -158,  -159,  -160,  -161,  -162,  -163,  -164,  -165,  -166,  -167,
  -168,  -169,  -170,  -171,  -172,  -173,  -174,  -175,  -176,  -177,
  -178,  -179,  -180,  -181,  -182,  -183,  -184,  -185,  -186,  -187,
  -188,  -189,  -190,  -591,   -18,  -115,   -10,  -591,  -591,  -590,
  -590,  -591,  -591,  -591,  -591,  -591,  -591,  -591,   -43,  -591,
  -478,  -591,  -283,  -591,  -591,   -10,  -591,   -44,  -227,  -591,
  -591,  -591,  -591,  -591,  -591,  -591,  -591,  -591,  -591,  -591,
  -591,  -591,  -591,  -591,  -591,  -591,  -591,  -591,  -591,  -591,
  -591,  -591,  -591,  -591,  -591,  -591,  -234,  -390,  -392,  -591,
  -591,  -591,   -54,  -590,  -591,  -302,  -396,  -404,  -406,   -62,
  -402,   -63,  -591,   -64,  -238,  -254,  -268,  -268,  -258,  -591,
  -269,  -591,  -590,  -561,  -591,  -591,   -65,   -66,  -579,   -11,
   -67,   -10,  -591,  -591,   -72,   -75,   -10,  -478,  -591,  -591,
  -283,  -295,  -298,  -581,  -591,  -333,  -334,  -337,  -403,  -591,
   -77,  -591,   -83,  -290,  -463,  -464,  -591,  -212,  -213,  -228,
  -591,  -582,   -10,  -581,  -239,  -581,  -583,  -583,  -591,  -591,
  -583,  -591,  -304,  -305,  -591,  -591,  -354,  -355,  -362,  -590,
  -521,  -556,  -556,  -372,  -590,  -590,  -389,  -487,  -488,  -490,
  -491,  -495,  -496,  -520,  -522,  -523,  -524,  -525,  -526,  -591,
  -543,  -548,  -549,  -551,  -552,  -553,  -591,   -46,  -591,  -591,
  -591,  -591,  -579,  -591,  -580,  -478,  -591,  -591,  -283,  -591,
  -528,  -529,  -104,  -591,  -106,  -591,  -283,  -591,  -322,  -478,
  -591,  -108,  -109,  -146,  -147,  -163,  -168,  -175,  -178,  -328,
  -591,  -557,  -591,  -426,  -591,  -441,  -591,  -443,  -591,  -591,
  -591,  -433,  -591,  -591,  -439,  -591,  -454,  -456,  -457,  -458,
  -459,  -465,  -466,  1043,    -5,  -589,   -19,   -20,   -21,   -22,
   -23,  -591,  -591,   -15,   -16,   -17,  -591,  -591,   -26,   -35,
   -36,  -591,  -591,   -27,  -193,  -591,  -591,  -570,  -571,  -261,
  -399,  -572,  -573,  -570,  -261,  -571,  -401,  -575,  -576,  -261,
  -570,  -571,   -33,  -201,   -34,  -591,   -38,   -39,  -191,  -269,
   -41,   -42,  -591,  -591,  -590,  -590,  -290,  -591,  -591,  -591,
  -591,  -301,  -202,  -203,  -204,  -205,  -206,  -207,  -208,  -209,
  -214,  -215,  -216,  -217,  -218,  -219,  -220,  -221,  -222,  -223,
  -224,  -225,  -226,  -229,  -230,  -231,  -232,  -591,  -590,  -261,
  -261,  -261,  -590,   -55,  -581,  -249,  -250,  -268,  -268,  -262,
  -263,  -591,  -590,  -590,  -591,  -297,  -255,  -591,  -256,  -591,
  -266,  -591,  -270,  -591,  -564,  -566,    -9,  -580,  -591,   -68,
  -288,   -84,   -73,  -591,  -591,  -590,  -591,  -591,  -590,  -591,
  -290,  -591,  -463,  -464,  -591,   -80,   -85,  -591,  -591,  -591,
  -591,  -591,  -233,  -591,  -413,  -591,  -591,  -240,  -241,  -585,
  -584,  -243,  -585,  -293,  -294,  -560,  -351,   -10,   -10,  -591,
  -353,  -591,  -374,  -385,  -591,  -591,  -370,  -371,  -591,  -380,
  -382,  -591,  -387,  -489,  -494,  -591,  -521,  -591,  -530,  -591,
  -532,  -534,  -541,  -550,  -554,   -10,  -338,  -339,  -340,   -10,
  -591,  -591,  -591,  -591,   -10,  -408,  -590,  -591,  -591,  -590,
  -290,  -317,  -104,  -105,  -591,  -590,  -591,  -320,  -482,  -591,
  -591,  -591,  -326,  -519,  -330,  -577,  -578,  -581,  -427,  -442,
  -445,  -446,  -448,  -429,  -444,  -430,  -431,  -432,  -591,  -435,
  -437,  -438,  -591,  -460,    -7,   -14,  -116,   -24,  -275,  -591,
  -291,  -292,  -591,  -591,   -58,  -247,  -248,  -397,  -591,   -60,
  -400,  -591,   -56,  -398,  -591,  -591,  -570,  -571,  -570,  -571,
  -591,  -591,  -191,  -300,  -591,  -365,  -581,  -367,   -10,   -50,
  -393,   -51,  -394,   -52,  -395,   -10,  -245,  -591,  -251,  -253,
   -45,  -591,  -260,  -264,  -591,   -10,   -10,  -296,  -268,  -267,
  -271,  -591,  -562,  -563,  -591,   -12,   -68,  -591,   -76,   -82,
  -591,  -570,  -571,  -590,  -574,  -289,  -591,  -591,  -590,   -78,
  -591,  -200,  -210,  -211,  -591,  -590,  -590,  -286,  -287,  -583,
  -244,  -591,  -591,  -352,  -363,  -373,  -590,  -590,  -364,  -556,
  -497,  -555,  -590,  -590,  -544,  -590,  -591,  -290,  -527,  -591,
  -591,  -539,  -591,  -590,  -341,  -590,  -309,  -342,  -343,  -344,
  -312,  -591,  -315,  -591,  -591,  -591,  -570,  -571,  -574,  -289,
  -591,  -591,  -104,  -107,  -574,  -591,   -10,  -591,  -484,  -591,
   -10,   -10,  -519,  -591,  -493,  -498,  -556,  -556,  -503,  -505,
  -505,  -505,  -518,  -521,  -546,  -591,  -591,  -591,   -10,  -434,
  -436,  -440,  -273,  -591,  -591,  -591,   -30,  -196,   -31,  -197,
   -59,   -32,  -198,   -61,  -199,   -57,  -192,  -591,  -591,  -591,
  -292,  -291,  -235,  -345,  -591,  -581,  -591,  -591,  -246,  -268,
  -591,  -265,  -591,  -591,  -257,  -272,  -565,   -74,  -291,  -292,
   -86,  -299,  -590,  -360,   -10,  -414,  -590,  -415,  -416,  -242,
  -356,  -357,  -591,  -383,  -591,  -386,  -369,  -591,  -377,  -591,
  -379,  -388,  -289,  -531,  -533,  -537,  -591,  -542,  -591,  -358,
  -591,  -591,   -10,   -10,  -314,  -316,  -591,  -291,   -96,  -591,
  -291,  -591,  -483,  -323,  -591,  -591,  -581,  -486,  -492,  -591,
  -501,  -502,  -591,  -512,  -591,  -515,  -591,  -516,  -591,  -331,
  -558,  -447,  -450,  -451,  -452,  -453,  -591,  -274,   -28,  -194,
   -29,  -195,  -591,  -591,  -591,  -591,  -366,  -591,  -391,   -53,
  -252,  -268,  -405,  -407,    -8,   -10,  -420,  -361,  -591,  -591,
  -418,  -590,  -590,  -590,  -590,  -535,  -591,  -540,  -591,  -306,
  -591,  -307,  -591,  -591,  -591,   -10,  -318,  -321,   -10,  -327,
  -329,  -591,  -499,  -556,  -504,  -505,  -505,  -505,  -591,  -547,
  -505,  -545,  -519,  -449,  -236,  -581,  -347,  -349,  -350,  -368,
  -259,  -591,  -419,   -10,  -478,  -591,  -591,  -283,  -417,  -384,
  -591,  -375,  -378,  -381,  -591,  -538,   -10,  -310,  -313,  -271,
  -590,   -10,  -591,  -485,  -500,  -591,  -508,  -591,  -510,  -591,
  -513,  -591,  -517,   -10,  -346,  -591,  -413,  -590,  -591,  -591,
  -290,  -590,  -536,  -590,  -409,  -410,  -411,  -591,  -324,  -505,
  -505,  -505,  -505,  -591,  -348,  -412,  -591,  -570,  -571,  -574,
  -289,  -376,  -359,  -319,  -591,  -506,  -509,  -511,  -514,  -332,
  -291,  -505,  -507 ]

clist = [
'13,518,284,358,359,310,389,362,603,457,265,265,265,5,297,297,103,725',
'209,209,407,377,115,115,326,318,336,209,209,209,300,13,288,288,439,444',
'449,315,781,267,267,267,266,266,266,297,297,110,195,416,417,418,419',
'209,209,555,702,587,209,209,595,599,209,366,375,430,573,320,792,868',
'99,580,582,454,100,103,576,577,734,756,760,115,499,500,501,558,561,663',
'744,565,503,864,824,118,118,115,867,613,966,702,13,842,394,968,209,209',
'209,209,13,13,2,1,959,5,545,280,396,398,282,414,405,420,5,924,194,371',
'422,497,914,363,504,871,686,407,629,694,692,680,682,684,639,678,699',
'509,699,685,391,319,322,323,369,617,390,624,217,695,696,312,360,872',
'361,873,771,991,776,621,948,380,780,623,435,436,795,263,276,277,962',
'965,324,566,742,248,315,315,730,256,260,498,1024,512,12,513,1014,968',
'764,846,13,209,209,209,209,928,393,400,209,209,209,209,115,638,937,403',
'432,959,901,13,209,448,797,421,432,12,798,886,952,740,702,792,955,,',
',,,,,265,265,,,,917,518,,,265,,761,,,,,,209,209,,541,,,,,,209,629,,508',
'267,297,507,266,,546,,,267,,556,266,557,864,985,13,532,297,,288,13,',
',24,12,103,569,,336,439,444,749,12,12,523,288,951,,,600,601,24,24,,',
',13,699,699,,24,24,24,,24,,,297,,,,,1012,1032,,,428,433,,,,622,773,452',
'456,584,24,24,588,526,708,24,24,527,,24,,252,259,261,663,719,946,,209',
'209,297,744,734,280,1015,,528,713,280,736,718,534,,103,,1003,800,743',
'375,,,713,,,12,,,24,618,,209,24,24,24,24,24,24,506,510,744,,,,12,,792',
'514,,,,,,,,,,,,,,,791,,,,,,602,,,834,,,670,671,115,,,713,115,,,,,,315',
'315,713,,,,,,256,,702,,260,,,645,,209,209,646,687,457,1025,,12,,853',
'855,283,12,,448,858,860,,861,,856,24,24,24,24,24,,,810,24,24,24,24,813',
'849,,815,,12,546,24,24,710,,118,717,744,209,118,,546,297,,,315,881,837',
'315,,884,885,,297,13,15,698,,890,891,288,,209,,,209,,705,,24,24,288',
'699,,,,,,24,448,209,,,297,,,15,,,,834,777,,448,13,13,,24,729,,,738,24',
',765,945,,770,,791,,588,,775,751,,315,796,370,315,,847,13,699,,315,13',
'656,24,,,13,660,209,,,209,656,,,757,757,209,,,,209,,209,,448,,,,,15',
'448,973,,,778,,1016,15,15,,,427,,986,825,,336,,,,24,24,14,209,209,,970',
',932,209,283,656,656,656,,209,,,,979,981,982,983,,,,,,546,13,,,24,14',
'290,290,13,,,,297,840,992,956,,957,13,13,,994,,829,,297,,321,,,288,',
',,,,,368,376,879,12,,,288,,,,15,283,,,,,283,,,455,,899,,,,,,432,,15',
',588,1023,588,1031,,,14,,24,24,,,12,12,14,14,448,791,,,,,,654,,,209',
',659,,,13,,662,876,13,13,,,,12,,806,808,12,882,,883,811,12,1019,887',
',13,456,24,,,,209,209,,,,15,115,,,,15,940,24,,,,,,,,24,,,24,679,681',
'683,,,,739,,,,,,15,713,24,,13,921,429,14,,,,,,,459,,24,24,,,935,588',
',,,,14,,12,,209,,13,13,656,12,,660,,656,,,787,,24,12,12,,24,,,,757,24',
',24,,,24,,,,,,24,,,,24,,24,297,,,,,,,520,,522,,,524,525,13,,,1004,975',
',588,14,588,,,290,14,,908,910,24,24,,,13,,24,13,,,,290,24,,,,741,,,741',
',,14,,,12,24,,,12,12,,13,24,,,,1026,588,,,,36,24,24,13,,12,,315,13,376',
',,,,,,,,,,13,,788,,209,,,,731,732,,36,287,287,,,,,,,,448,,,,,,,376,',
',12,,,,,753,,787,,755,,,365,379,763,379,,,,,,15,,,,,24,,12,12,,24,,',
',24,24,,,,,,,,,,648,,,36,,,,24,,,,36,36,24,24,15,15,,,,,208,,,,,,,,',
',,,,,12,,,,,,,826,15,,,,15,,827,,,15,24,,12,313,,12,832,833,357,357',
',,357,,,953,,,787,,787,,787,,,,24,691,24,24,12,788,,700,,321,,703,,',
',,,12,,14,36,,12,,,290,,737,357,357,357,357,,455,12,,290,745,,36,,,',
',,,,15,,700,,,321,,15,24,,,,14,14,,787,,15,15,376,,,,,,,,784,24,,,24',
'789,,,,906,,,,14,,,,14,,,,787,14,787,,787,,787,,24,,36,,,,287,36,,741',
',,788,24,788,,788,,24,,,,287,,,,927,460,461,,24,787,,36,24,,802,470',
',,,,15,,,,15,15,,,,,,,942,943,,,,,,,379,,15,,,14,,,,,,,14,700,321,,',
',,,788,,14,14,,,835,,,836,,,,,290,,,,,379,,,,,,972,,290,15,,,845,,788',
',788,,788,,788,,,,,,990,,,784,,,,,789,,,15,15,,,,,,,,,,,,459,,,788,1006',
',,,,,,,,,14,,,1013,14,14,888,,1017,,,,314,,,327,357,357,,,,905,14,,',
'907,15,,,,978,,395,,397,397,401,404,397,,931,,,,,933,15,934,627,15,',
',459,,,,,,,,,,,,,,,,14,,,,784,,15,784,,784,,784,,,,36,960,,,15,,287',
',,15,,,,14,14,,,287,,,,15,218,,,,,,,,264,264,264,,,,,961,,,36,36,307',
'308,309,,,379,,893,895,897,,,,,,264,264,321,,,784,,,,14,789,36,,977',
',36,,314,314,,36,,,,,,989,313,1011,14,,,14,,,,,,784,,784,,784,1020,784',
'1021,,1022,,,,,,989,,,,14,,,,,,,,,,,,724,14,505,,,,14,,784,,,,,1041',
',,,,14,,,395,,,,36,,,,,,,36,,,,,,,,,,36,36,,,,,,,,,,,287,,,,,,,,,,,',
'357,287,779,,,,,,264,434,264,264,,,,453,458,,,,,,,996,998,1000,,,1002',
',218,,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487',
'488,489,490,491,492,493,494,495,496,36,,,,36,36,,264,264,,,,,,,,264',
',,,,,36,264,,264,,,264,264,1035,1036,1037,1038,,,,,,,,,,,,,,,,,,,1042',
',,,,,,,,,,,552,655,,,36,,,,,,,655,,,,,,,,,,,,,,,314,314,,,,357,36,36',
',,,,,,,,,,,,,,,,,,,,,,,,,,675,655,655,655,675,,,,,,,,,,675,675,,,,,',
',,,,36,,,,974,,,,,,,,314,,,314,,,,,36,,,36,,,,,,,,,,,,,264,,,,,,,,,357',
',,36,,,,,,,,,,,,,36,,,,,36,,,264,264,,453,672,434,,,,36,,,,,314,,,314',
',,,,,314,,,,,,,,,,674,,,,,,,,,,,,,,690,,,,,,264,,264,,264,,,,,,,,,,',
',,,264,,,264,,,,,,,,,721,722,723,,,,,,,,,,264,,,264,,,,,,,,,,,,,,,,',
',,,,,,655,,,,,655,,,,,,,843,848,,,,,,,,264,,,264,,,,,,264,,,,,,,,,,843',
',843,,,,,,,,,,,,,,,,,,,,,,264,,,807,809,,,,,812,,,814,,,672,816,,,,',
',,,,,,,,,,,,,,,,,,264,264,,,,,,,,,,,,264,,,264,,,,,,,,,,926,,,,930,',
',,,,,,264,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,264,,,,,,,,,,,,,,,,,',
',,264,,,,,,,,,,,,,,,,,,,264,909,911,,,,,,,,,,,,807,809,812,,,,,,,,,',
',264,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,843,,,,,,,,,,,,,,,,,314,,,,,,843',
',,,,,,,,,,,,264,,,,,,,,,,,,,,911,909,964,,,,,,264,,,,,,,,,,,,,,,,,,',
',,,,,264,,,,,,,,,,,,,,,,,,,,,,,,,,,264,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,264' ]
        racc_goto_table = arr = ::Array.new(2521, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'21,65,42,16,16,52,48,16,83,17,30,30,30,7,53,53,86,10,21,21,48,47,49',
'49,111,22,114,21,21,21,43,21,21,21,33,33,33,30,87,59,59,59,57,57,57',
'53,53,14,14,16,16,16,16,21,21,8,162,156,21,21,80,80,21,21,21,25,119',
'59,151,81,4,119,119,25,6,86,117,117,113,82,82,49,33,33,33,58,58,64,155',
'58,35,157,105,51,51,49,158,46,107,162,21,11,135,108,21,21,21,21,21,21',
'2,1,159,7,44,39,136,136,40,5,136,7,7,12,15,18,28,54,55,4,62,11,63,48',
'139,66,60,64,64,64,139,36,60,67,60,36,75,76,77,79,84,85,88,89,19,36',
'36,90,91,92,93,94,95,96,97,98,99,100,101,102,22,22,103,38,38,38,104',
'106,109,110,112,122,30,30,60,61,61,123,107,125,20,126,127,108,128,129',
'21,21,21,21,21,130,134,137,21,21,21,21,49,138,158,140,57,159,141,21',
'21,49,142,2,57,20,143,145,148,149,162,151,153,,,,,,,,30,30,,,,105,65',
',,30,,83,,,,,,21,21,,52,,,,,,21,139,,59,59,53,57,57,,42,,,59,,52,57',
'52,157,158,21,43,53,,21,21,,,37,20,86,111,,114,33,33,156,20,20,135,21',
'105,,,16,16,37,37,,,,21,60,60,,37,37,37,,37,,,53,,,,,158,81,,,19,19',
',,,47,46,19,19,21,37,37,154,4,44,37,37,6,,37,,34,34,34,64,44,82,,21',
'21,53,155,113,39,11,,40,33,39,121,33,40,,86,,87,139,121,21,,,33,,,20',
',,37,86,,21,37,37,37,37,37,37,38,38,155,,,,20,,151,38,,,,,,,,,,,,,,',
'121,,,,,,4,,,65,,,22,22,49,,,33,49,,,,,,30,30,33,,,,,,61,,162,,61,,',
'14,,21,21,14,52,17,10,,20,,119,119,9,20,,49,119,119,,119,,117,37,37',
'37,37,37,,,35,37,37,37,37,35,58,,35,,20,42,37,37,22,,51,22,155,21,51',
',42,53,,,30,8,44,30,,8,8,,53,21,24,59,,117,117,21,,21,,,21,,7,,37,37',
'21,60,,,,,,37,49,21,,,53,,,24,,,,65,16,,49,21,21,,37,59,,,21,37,,22',
'80,,22,,121,,154,,22,154,,30,52,24,30,,25,21,60,,30,21,61,37,,,21,61',
'21,,,21,61,,,86,86,21,,,,21,,21,,49,,,,,24,49,80,,,86,,83,24,24,,,9',
',80,111,,114,,,,37,37,23,21,21,,65,,121,21,9,61,61,61,,21,,,,119,119',
'119,119,,,,,,42,21,,,37,23,23,23,21,,,,53,42,8,121,,121,21,21,,117,',
'59,,53,,26,,,21,,,,,,,23,23,16,20,,,21,,,,24,9,,,,,9,,,24,,48,,,,,,57',
',24,,154,8,154,119,,,23,,37,37,,,20,20,23,23,49,121,,,,,,34,,,21,,34',
',,21,,34,57,21,21,,,,20,,19,19,20,86,,86,19,20,121,86,,21,19,37,,,,21',
'21,,,,24,49,,,,24,16,37,,,,,,,,37,,,37,34,34,34,,,,116,,,,,,24,33,37',
',21,57,26,23,,,,,,,26,,37,37,,,154,154,,,,,23,,20,,21,,21,21,61,20,',
'61,,61,,,116,,37,20,20,,37,,,,86,37,,37,,,37,,,,,,37,,,,37,,37,53,,',
',,,,26,,26,,,26,26,21,,,52,21,,154,23,154,,,23,23,,19,19,37,37,,,21',
',37,21,,,,23,37,,,,118,,,118,,,23,,,20,37,,,20,20,,21,37,,,,22,154,',
',,45,37,37,21,,20,,30,21,23,,,,,,,,,,,21,,118,,21,,,,9,9,,45,45,45,',
',,,,,,49,,,,,,,23,,,20,,,,,9,,116,,9,,,45,45,9,45,,,,,,24,,,,,37,,20',
'20,,37,,,,37,37,,,,,,,,,,26,,,45,,,,37,,,,45,45,37,37,24,24,,,,,27,',
',,,,,,,,,,,,20,,,,,,,9,24,,,,24,,9,,,24,37,,20,27,,20,9,9,27,27,,,27',
',,116,,,116,,116,,116,,,,37,26,37,37,20,118,,26,,26,,26,,,,,,20,,23',
'45,,20,,,23,,120,27,27,27,27,,24,20,,23,120,,45,,,,,,,,24,,26,,,26,',
'24,37,,,,23,23,,116,,24,24,23,,,,,,,,147,37,,,37,120,,,,9,,,,23,,,,23',
',,,116,23,116,,116,,116,,37,,45,,,,45,45,,118,,,118,37,118,,118,,37',
',,,45,,,,9,27,27,,37,116,,45,37,,26,27,,,,,24,,,,24,24,,,,,,,9,9,,,',
',,,45,,24,,,23,,,,,,,23,26,26,,,,,,118,,23,23,,,26,,,26,,,,,23,,,,,45',
',,,,,9,,23,24,,,26,,118,,118,,118,,118,,,,,,9,,,147,,,,,120,,,24,24',
',,,,,,,,,,,26,,,118,9,,,,,,,,,,23,,,9,23,23,26,,9,,,,56,,,56,27,27,',
',,23,23,,,26,24,,,,24,,56,,56,56,56,56,56,,120,,,,,120,24,120,27,24',
',,26,,,,,,,,,,,,,,,,23,,,,147,,24,147,,147,,147,,,,45,120,,,24,,45,',
',24,,,,23,23,,,45,,,,24,29,,,,,,,,29,29,29,,,,,26,,,45,45,29,29,29,',
',45,,152,152,152,,,,,,29,29,26,,,147,,,,23,120,45,,23,,45,,56,56,,45',
',,,,,26,27,120,23,,,23,,,,,,147,,147,,147,120,147,120,,120,,,,,,26,',
',,23,,,,,,,,,,,,27,23,56,,,,23,,147,,,,,120,,,,,23,,,56,,,,45,,,,,,',
'45,,,,,,,,,,45,45,,,,,,,,,,,45,,,,,,,,,,,,27,45,27,,,,,,29,29,29,29',
',,,29,29,,,,,,,152,152,152,,,152,,29,,29,29,29,29,29,29,29,29,29,29',
'29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,45,,,,45,45,,29,29,,,,',
',,,29,,,,,,45,29,,29,,,29,29,152,152,152,152,,,,,,,,,,,,,,,,,,,152,',
',,,,,,,,,,29,56,,,45,,,,,,,56,,,,,,,,,,,,,,,56,56,,,,27,45,45,,,,,,',
',,,,,,,,,,,,,,,,,,,,56,56,56,56,56,,,,,,,,,,56,56,,,,,,,,,,45,,,,45',
',,,,,,,56,,,56,,,,,45,,,45,,,,,,,,,,,,,29,,,,,,,,,27,,,45,,,,,,,,,,',
',,45,,,,,45,,,29,29,,29,29,29,,,,45,,,,,56,,,56,,,,,,56,,,,,,,,,,29',
',,,,,,,,,,,,,29,,,,,,29,,29,,29,,,,,,,,,,,,,,29,,,29,,,,,,,,,29,29,29',
',,,,,,,,,29,,,29,,,,,,,,,,,,,,,,,,,,,,,56,,,,,56,,,,,,,56,56,,,,,,,',
'29,,,29,,,,,,29,,,,,,,,,,56,,56,,,,,,,,,,,,,,,,,,,,,,29,,,29,29,,,,',
'29,,,29,,,29,29,,,,,,,,,,,,,,,,,,,,,,,29,29,,,,,,,,,,,,29,,,29,,,,,',
',,,,56,,,,56,,,,,,,,29,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,29,,,,,',
',,,,,,,,,,,,,,29,,,,,,,,,,,,,,,,,,,29,29,29,,,,,,,,,,,,29,29,29,,,,',
',,,,,,29,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,56,,,,,,,,,,,,,,,,,56,,,,,,56',
',,,,,,,,,,,,29,,,,,,,,,,,,,,29,29,29,,,,,,29,,,,,,,,,,,,,,,,,,,,,,,',
'29,,,,,,,,,,,,,,,,,,,,,,,,,,,29,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,29' ]
        racc_goto_check = arr = ::Array.new(2521, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_goto_pointer = [
   nil,   111,   110,   nil,    67,    19,    71,    13,  -257,   444,
  -537,  -624,  -719,   nil,    40,   116,   -55,  -196,    62,   135,
   190,     0,   -29,   651,   528,  -132,   649,  1083,    16,  1513,
   -17,   nil,   nil,  -167,   329,  -162,  -357,   289,   146,    84,
    87,   nil,   -30,    -3,  -187,   983,  -276,   -43,   -60,    15,
   nil,    86,   -37,   -18,  -119,  -694,  1385,    15,  -231,    12,
  -375,   161,  -123,  -372,  -362,  -266,  -376,  -111,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    80,    92,    92,   nil,    92,
  -298,  -684,  -521,  -355,    87,  -226,    13,  -585,    86,  -237,
   105,    98,  -597,    99,  -599,  -449,  -783,  -453,  -213,  -717,
   102,  -454,  -220,  -452,  -723,  -584,  -738,  -817,  -812,   121,
  -145,   -33,  -399,  -493,   -31,   nil,   259,  -255,   382,  -263,
   615,  -200,   160,   -60,   nil,   -68,   -67,  -798,  -411,  -531,
  -645,   nil,   nil,   nil,   130,    28,    40,   125,  -191,  -260,
   132,  -583,  -413,  -410,   nil,  -559,   nil,   610,  -665,  -350,
   nil,  -555,   770,  -664,    -5,  -491,  -292,  -659,  -656,  -782,
   nil,   nil,  -463 ]

racc_goto_default = [
   nil,   nil,   nil,     3,   nil,     4,   364,   279,   nil,   554,
   nil,   869,   nil,   278,   nil,   nil,   nil,    10,    11,    17,
   214,   306,   nil,   212,   213,   nil,   270,    16,   nil,    20,
    21,    22,    23,   716,   nil,   nil,   nil,   294,   nil,    30,
   nil,    32,    35,    34,   nil,   210,   374,   nil,   117,   442,
   116,    70,   823,    43,   nil,   nil,   572,   316,   nil,   317,
   268,   440,   nil,   nil,   657,   516,   nil,   nil,   254,    44,
    45,    46,    47,    48,    49,    50,   nil,   255,    56,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   596,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   343,   nil,
   nil,   nil,   329,   328,   735,   331,   332,   nil,   333,   nil,
   334,   335,   nil,   nil,   446,   nil,   nil,   nil,   nil,   nil,
   nil,    69,    71,    72,    73,   nil,   nil,   nil,   nil,   634,
   nil,   nil,   nil,   nil,   406,   783,   339,   341,   785,   342,
   786,   954,   nil,   790,   348,   350,   nil,   590,   591,   794,
   353,   356,   273 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 141, :_reduce_none,
  2, 142, :_reduce_2,
  0, 143, :_reduce_3,
  1, 143, :_reduce_4,
  3, 143, :_reduce_5,
  1, 145, :_reduce_none,
  4, 145, :_reduce_7,
  4, 148, :_reduce_8,
  2, 149, :_reduce_9,
  0, 153, :_reduce_10,
  1, 153, :_reduce_11,
  3, 153, :_reduce_12,
  0, 168, :_reduce_13,
  4, 147, :_reduce_14,
  3, 147, :_reduce_15,
  3, 147, :_reduce_none,
  3, 147, :_reduce_17,
  2, 147, :_reduce_18,
  3, 147, :_reduce_19,
  3, 147, :_reduce_20,
  3, 147, :_reduce_21,
  3, 147, :_reduce_22,
  3, 147, :_reduce_23,
  4, 147, :_reduce_none,
  1, 147, :_reduce_none,
  3, 147, :_reduce_26,
  3, 147, :_reduce_27,
  6, 147, :_reduce_none,
  6, 147, :_reduce_none,
  5, 147, :_reduce_30,
  5, 147, :_reduce_none,
  5, 147, :_reduce_none,
  3, 147, :_reduce_none,
  3, 147, :_reduce_34,
  3, 147, :_reduce_35,
  3, 147, :_reduce_36,
  1, 147, :_reduce_none,
  3, 157, :_reduce_38,
  3, 157, :_reduce_39,
  1, 167, :_reduce_none,
  3, 167, :_reduce_41,
  3, 167, :_reduce_42,
  2, 167, :_reduce_43,
  2, 167, :_reduce_44,
  1, 167, :_reduce_none,
  1, 156, :_reduce_none,
  1, 159, :_reduce_none,
  1, 159, :_reduce_none,
  1, 171, :_reduce_none,
  4, 171, :_reduce_none,
  4, 171, :_reduce_none,
  4, 171, :_reduce_none,
  4, 175, :_reduce_53,
  2, 170, :_reduce_54,
  3, 170, :_reduce_55,
  4, 170, :_reduce_56,
  5, 170, :_reduce_none,
  4, 170, :_reduce_58,
  5, 170, :_reduce_none,
  4, 170, :_reduce_60,
  5, 170, :_reduce_none,
  2, 170, :_reduce_62,
  2, 170, :_reduce_63,
  2, 170, :_reduce_64,
  2, 170, :_reduce_65,
  2, 170, :_reduce_66,
  1, 158, :_reduce_67,
  3, 158, :_reduce_68,
  1, 180, :_reduce_69,
  3, 180, :_reduce_70,
  1, 179, :_reduce_71,
  2, 179, :_reduce_72,
  3, 179, :_reduce_73,
  5, 179, :_reduce_74,
  2, 179, :_reduce_75,
  4, 179, :_reduce_76,
  2, 179, :_reduce_77,
  4, 179, :_reduce_78,
  1, 179, :_reduce_79,
  3, 179, :_reduce_80,
  1, 182, :_reduce_81,
  3, 182, :_reduce_82,
  2, 181, :_reduce_83,
  3, 181, :_reduce_84,
  1, 184, :_reduce_85,
  3, 184, :_reduce_86,
  1, 183, :_reduce_87,
  4, 183, :_reduce_88,
  3, 183, :_reduce_89,
  3, 183, :_reduce_none,
  3, 183, :_reduce_none,
  3, 183, :_reduce_none,
  2, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 164, :_reduce_95,
  4, 164, :_reduce_96,
  4, 164, :_reduce_97,
  3, 164, :_reduce_98,
  3, 164, :_reduce_99,
  3, 164, :_reduce_100,
  3, 164, :_reduce_101,
  2, 164, :_reduce_102,
  1, 164, :_reduce_none,
  1, 186, :_reduce_none,
  2, 187, :_reduce_105,
  1, 187, :_reduce_106,
  3, 187, :_reduce_107,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_111,
  1, 188, :_reduce_112,
  1, 154, :_reduce_113,
  1, 154, :_reduce_none,
  1, 155, :_reduce_115,
  3, 155, :_reduce_116,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  3, 169, :_reduce_191,
  5, 169, :_reduce_192,
  3, 169, :_reduce_193,
  6, 169, :_reduce_194,
  6, 169, :_reduce_195,
  5, 169, :_reduce_196,
  5, 169, :_reduce_none,
  5, 169, :_reduce_none,
  5, 169, :_reduce_none,
  4, 169, :_reduce_none,
  3, 169, :_reduce_none,
  3, 169, :_reduce_202,
  3, 169, :_reduce_203,
  3, 169, :_reduce_204,
  3, 169, :_reduce_205,
  3, 169, :_reduce_206,
  3, 169, :_reduce_207,
  3, 169, :_reduce_208,
  3, 169, :_reduce_209,
  4, 169, :_reduce_210,
  4, 169, :_reduce_211,
  2, 169, :_reduce_212,
  2, 169, :_reduce_213,
  3, 169, :_reduce_214,
  3, 169, :_reduce_215,
  3, 169, :_reduce_216,
  3, 169, :_reduce_217,
  3, 169, :_reduce_218,
  3, 169, :_reduce_219,
  3, 169, :_reduce_220,
  3, 169, :_reduce_221,
  3, 169, :_reduce_222,
  3, 169, :_reduce_223,
  3, 169, :_reduce_224,
  3, 169, :_reduce_225,
  3, 169, :_reduce_226,
  2, 169, :_reduce_227,
  2, 169, :_reduce_228,
  3, 169, :_reduce_229,
  3, 169, :_reduce_230,
  3, 169, :_reduce_231,
  3, 169, :_reduce_232,
  3, 169, :_reduce_233,
  0, 194, :_reduce_234,
  0, 195, :_reduce_235,
  7, 169, :_reduce_236,
  1, 169, :_reduce_none,
  1, 166, :_reduce_none,
  1, 162, :_reduce_239,
  2, 162, :_reduce_240,
  2, 162, :_reduce_241,
  4, 162, :_reduce_242,
  2, 162, :_reduce_243,
  3, 162, :_reduce_244,
  3, 201, :_reduce_245,
  2, 203, :_reduce_none,
  1, 204, :_reduce_247,
  1, 204, :_reduce_none,
  1, 202, :_reduce_249,
  1, 202, :_reduce_none,
  2, 202, :_reduce_251,
  4, 202, :_reduce_252,
  2, 202, :_reduce_253,
  1, 178, :_reduce_254,
  2, 178, :_reduce_255,
  2, 178, :_reduce_256,
  4, 178, :_reduce_257,
  1, 178, :_reduce_258,
  4, 206, :_reduce_none,
  1, 206, :_reduce_none,
  0, 208, :_reduce_261,
  2, 174, :_reduce_262,
  1, 207, :_reduce_none,
  2, 207, :_reduce_264,
  3, 207, :_reduce_265,
  2, 200, :_reduce_266,
  2, 205, :_reduce_267,
  0, 205, :_reduce_268,
  1, 197, :_reduce_269,
  2, 197, :_reduce_270,
  3, 197, :_reduce_271,
  4, 197, :_reduce_272,
  3, 165, :_reduce_273,
  4, 165, :_reduce_274,
  2, 165, :_reduce_275,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  0, 230, :_reduce_285,
  4, 193, :_reduce_286,
  4, 193, :_reduce_287,
  3, 193, :_reduce_288,
  3, 193, :_reduce_289,
  2, 193, :_reduce_290,
  4, 193, :_reduce_291,
  4, 193, :_reduce_292,
  3, 193, :_reduce_293,
  3, 193, :_reduce_294,
  1, 193, :_reduce_295,
  4, 193, :_reduce_296,
  3, 193, :_reduce_297,
  1, 193, :_reduce_298,
  5, 193, :_reduce_299,
  4, 193, :_reduce_300,
  3, 193, :_reduce_301,
  2, 193, :_reduce_302,
  1, 193, :_reduce_none,
  2, 193, :_reduce_304,
  2, 193, :_reduce_305,
  6, 193, :_reduce_306,
  6, 193, :_reduce_307,
  0, 231, :_reduce_308,
  0, 232, :_reduce_309,
  7, 193, :_reduce_310,
  0, 233, :_reduce_311,
  0, 234, :_reduce_312,
  7, 193, :_reduce_313,
  5, 193, :_reduce_314,
  4, 193, :_reduce_315,
  5, 193, :_reduce_316,
  0, 235, :_reduce_317,
  0, 236, :_reduce_318,
  9, 193, :_reduce_319,
  0, 237, :_reduce_320,
  6, 193, :_reduce_321,
  0, 238, :_reduce_322,
  0, 239, :_reduce_323,
  8, 193, :_reduce_324,
  0, 240, :_reduce_325,
  0, 241, :_reduce_326,
  6, 193, :_reduce_327,
  0, 242, :_reduce_328,
  6, 193, :_reduce_329,
  0, 243, :_reduce_330,
  0, 244, :_reduce_331,
  9, 193, :_reduce_332,
  1, 193, :_reduce_333,
  1, 193, :_reduce_334,
  1, 193, :_reduce_335,
  1, 193, :_reduce_none,
  1, 161, :_reduce_none,
  1, 220, :_reduce_none,
  1, 220, :_reduce_none,
  1, 220, :_reduce_none,
  2, 220, :_reduce_none,
  1, 222, :_reduce_none,
  1, 222, :_reduce_none,
  1, 222, :_reduce_none,
  1, 245, :_reduce_345,
  4, 245, :_reduce_346,
  1, 246, :_reduce_347,
  3, 246, :_reduce_348,
  1, 247, :_reduce_349,
  1, 247, :_reduce_none,
  2, 219, :_reduce_351,
  3, 249, :_reduce_352,
  2, 249, :_reduce_353,
  1, 249, :_reduce_354,
  1, 249, :_reduce_none,
  3, 250, :_reduce_356,
  3, 250, :_reduce_357,
  1, 221, :_reduce_358,
  5, 221, :_reduce_359,
  1, 151, :_reduce_none,
  2, 151, :_reduce_361,
  1, 252, :_reduce_362,
  3, 252, :_reduce_363,
  3, 253, :_reduce_364,
  1, 176, :_reduce_none,
  3, 176, :_reduce_366,
  1, 176, :_reduce_367,
  4, 176, :_reduce_368,
  4, 254, :_reduce_369,
  2, 254, :_reduce_370,
  2, 254, :_reduce_371,
  1, 254, :_reduce_372,
  2, 259, :_reduce_373,
  1, 259, :_reduce_374,
  6, 251, :_reduce_375,
  8, 251, :_reduce_376,
  4, 251, :_reduce_377,
  6, 251, :_reduce_378,
  4, 251, :_reduce_379,
  2, 251, :_reduce_380,
  6, 251, :_reduce_381,
  2, 251, :_reduce_382,
  4, 251, :_reduce_383,
  6, 251, :_reduce_384,
  2, 251, :_reduce_385,
  4, 251, :_reduce_386,
  2, 251, :_reduce_387,
  4, 251, :_reduce_388,
  1, 251, :_reduce_389,
  0, 263, :_reduce_390,
  5, 262, :_reduce_391,
  2, 172, :_reduce_392,
  4, 172, :_reduce_none,
  4, 172, :_reduce_none,
  4, 172, :_reduce_none,
  2, 218, :_reduce_396,
  4, 218, :_reduce_397,
  4, 218, :_reduce_398,
  3, 218, :_reduce_399,
  4, 218, :_reduce_400,
  3, 218, :_reduce_401,
  2, 218, :_reduce_402,
  1, 218, :_reduce_403,
  0, 265, :_reduce_404,
  5, 217, :_reduce_405,
  0, 266, :_reduce_406,
  5, 217, :_reduce_407,
  0, 268, :_reduce_408,
  6, 223, :_reduce_409,
  1, 267, :_reduce_410,
  1, 267, :_reduce_none,
  6, 150, :_reduce_412,
  0, 150, :_reduce_413,
  1, 269, :_reduce_414,
  1, 269, :_reduce_none,
  1, 269, :_reduce_none,
  2, 270, :_reduce_417,
  1, 270, :_reduce_418,
  2, 152, :_reduce_419,
  1, 152, :_reduce_none,
  1, 209, :_reduce_none,
  1, 209, :_reduce_none,
  1, 209, :_reduce_none,
  1, 210, :_reduce_424,
  1, 273, :_reduce_none,
  2, 273, :_reduce_426,
  3, 274, :_reduce_427,
  1, 274, :_reduce_428,
  3, 211, :_reduce_429,
  3, 212, :_reduce_430,
  3, 213, :_reduce_431,
  3, 213, :_reduce_432,
  1, 277, :_reduce_433,
  3, 277, :_reduce_434,
  1, 278, :_reduce_435,
  2, 278, :_reduce_436,
  3, 214, :_reduce_437,
  3, 214, :_reduce_438,
  1, 280, :_reduce_439,
  3, 280, :_reduce_440,
  1, 275, :_reduce_441,
  2, 275, :_reduce_442,
  1, 276, :_reduce_443,
  2, 276, :_reduce_444,
  1, 279, :_reduce_445,
  0, 282, :_reduce_446,
  3, 279, :_reduce_447,
  0, 283, :_reduce_448,
  4, 279, :_reduce_449,
  1, 281, :_reduce_450,
  1, 281, :_reduce_451,
  1, 281, :_reduce_452,
  1, 281, :_reduce_none,
  2, 191, :_reduce_454,
  1, 191, :_reduce_455,
  1, 284, :_reduce_none,
  1, 284, :_reduce_none,
  1, 284, :_reduce_none,
  1, 284, :_reduce_none,
  3, 272, :_reduce_460,
  1, 271, :_reduce_461,
  1, 271, :_reduce_462,
  2, 271, :_reduce_463,
  2, 271, :_reduce_464,
  2, 271, :_reduce_465,
  2, 271, :_reduce_466,
  1, 185, :_reduce_467,
  1, 185, :_reduce_468,
  1, 185, :_reduce_469,
  1, 185, :_reduce_470,
  1, 185, :_reduce_471,
  1, 185, :_reduce_472,
  1, 185, :_reduce_473,
  1, 185, :_reduce_474,
  1, 185, :_reduce_475,
  1, 185, :_reduce_476,
  1, 185, :_reduce_477,
  1, 215, :_reduce_478,
  1, 160, :_reduce_479,
  1, 163, :_reduce_480,
  1, 163, :_reduce_none,
  1, 225, :_reduce_482,
  3, 225, :_reduce_483,
  2, 225, :_reduce_484,
  4, 227, :_reduce_485,
  2, 227, :_reduce_486,
  1, 286, :_reduce_none,
  1, 286, :_reduce_none,
  2, 256, :_reduce_489,
  1, 256, :_reduce_490,
  1, 287, :_reduce_491,
  2, 288, :_reduce_492,
  1, 288, :_reduce_493,
  2, 289, :_reduce_494,
  1, 289, :_reduce_495,
  1, 255, :_reduce_496,
  3, 255, :_reduce_497,
  1, 290, :_reduce_498,
  3, 290, :_reduce_499,
  4, 291, :_reduce_500,
  2, 291, :_reduce_501,
  2, 291, :_reduce_502,
  1, 291, :_reduce_503,
  2, 292, :_reduce_504,
  0, 292, :_reduce_505,
  6, 285, :_reduce_506,
  8, 285, :_reduce_507,
  4, 285, :_reduce_508,
  6, 285, :_reduce_509,
  4, 285, :_reduce_510,
  6, 285, :_reduce_511,
  2, 285, :_reduce_512,
  4, 285, :_reduce_513,
  6, 285, :_reduce_514,
  2, 285, :_reduce_515,
  2, 285, :_reduce_516,
  4, 285, :_reduce_517,
  1, 285, :_reduce_518,
  0, 285, :_reduce_519,
  1, 294, :_reduce_none,
  1, 294, :_reduce_521,
  1, 248, :_reduce_522,
  1, 248, :_reduce_523,
  1, 248, :_reduce_524,
  1, 248, :_reduce_525,
  1, 295, :_reduce_526,
  3, 295, :_reduce_527,
  1, 224, :_reduce_none,
  1, 224, :_reduce_none,
  1, 297, :_reduce_530,
  3, 297, :_reduce_531,
  1, 298, :_reduce_532,
  3, 298, :_reduce_533,
  1, 296, :_reduce_none,
  4, 296, :_reduce_535,
  6, 296, :_reduce_536,
  3, 296, :_reduce_537,
  5, 296, :_reduce_538,
  2, 296, :_reduce_539,
  4, 296, :_reduce_540,
  1, 296, :_reduce_541,
  3, 296, :_reduce_542,
  1, 260, :_reduce_543,
  3, 260, :_reduce_544,
  3, 299, :_reduce_545,
  1, 293, :_reduce_546,
  3, 293, :_reduce_547,
  1, 300, :_reduce_none,
  1, 300, :_reduce_none,
  2, 261, :_reduce_550,
  1, 261, :_reduce_551,
  1, 301, :_reduce_none,
  1, 301, :_reduce_none,
  2, 258, :_reduce_554,
  2, 257, :_reduce_555,
  0, 257, :_reduce_556,
  1, 228, :_reduce_557,
  4, 228, :_reduce_558,
  0, 216, :_reduce_559,
  2, 216, :_reduce_560,
  1, 199, :_reduce_561,
  3, 199, :_reduce_562,
  3, 302, :_reduce_563,
  2, 302, :_reduce_564,
  4, 302, :_reduce_565,
  2, 302, :_reduce_566,
  1, 177, :_reduce_none,
  1, 177, :_reduce_none,
  1, 177, :_reduce_none,
  1, 173, :_reduce_none,
  1, 173, :_reduce_none,
  1, 173, :_reduce_none,
  1, 173, :_reduce_none,
  1, 264, :_reduce_none,
  1, 264, :_reduce_none,
  1, 264, :_reduce_none,
  1, 229, :_reduce_none,
  1, 229, :_reduce_none,
  0, 144, :_reduce_none,
  1, 144, :_reduce_none,
  0, 192, :_reduce_none,
  1, 192, :_reduce_none,
  0, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 226, :_reduce_none,
  1, 226, :_reduce_none,
  1, 146, :_reduce_none,
  2, 146, :_reduce_none,
  0, 196, :_reduce_590 ]

racc_reduce_n = 591

racc_shift_n = 1043

racc_token_table = {
  false => 0,
  :error => 1,
  :kCLASS => 2,
  :kMODULE => 3,
  :kDEF => 4,
  :kUNDEF => 5,
  :kBEGIN => 6,
  :kRESCUE => 7,
  :kENSURE => 8,
  :kEND => 9,
  :kIF => 10,
  :kUNLESS => 11,
  :kTHEN => 12,
  :kELSIF => 13,
  :kELSE => 14,
  :kCASE => 15,
  :kWHEN => 16,
  :kWHILE => 17,
  :kUNTIL => 18,
  :kFOR => 19,
  :kBREAK => 20,
  :kNEXT => 21,
  :kREDO => 22,
  :kRETRY => 23,
  :kIN => 24,
  :kDO => 25,
  :kDO_COND => 26,
  :kDO_BLOCK => 27,
  :kDO_LAMBDA => 28,
  :kRETURN => 29,
  :kYIELD => 30,
  :kSUPER => 31,
  :kSELF => 32,
  :kNIL => 33,
  :kTRUE => 34,
  :kFALSE => 35,
  :kAND => 36,
  :kOR => 37,
  :kNOT => 38,
  :kIF_MOD => 39,
  :kUNLESS_MOD => 40,
  :kWHILE_MOD => 41,
  :kUNTIL_MOD => 42,
  :kRESCUE_MOD => 43,
  :kALIAS => 44,
  :kDEFINED => 45,
  :klBEGIN => 46,
  :klEND => 47,
  :k__LINE__ => 48,
  :k__FILE__ => 49,
  :tIDENTIFIER => 50,
  :tFID => 51,
  :tGVAR => 52,
  :tIVAR => 53,
  :tCONSTANT => 54,
  :tLABEL => 55,
  :tCVAR => 56,
  :tNTH_REF => 57,
  :tBACK_REF => 58,
  :tSTRING_CONTENT => 59,
  :tINTEGER => 60,
  :tFLOAT => 61,
  :tREGEXP_END => 62,
  :tUPLUS => 63,
  :tUMINUS => 64,
  :tPOW => 65,
  :tCMP => 66,
  :tEQ => 67,
  :tEQQ => 68,
  :tNEQ => 69,
  :tGEQ => 70,
  :tLEQ => 71,
  :tANDOP => 72,
  :tOROP => 73,
  :tMATCH => 74,
  :tNMATCH => 75,
  :tJSDOT => 76,
  :tDOT => 77,
  :tDOT2 => 78,
  :tDOT3 => 79,
  :tAREF => 80,
  :tASET => 81,
  :tLSHFT => 82,
  :tRSHFT => 83,
  :tCOLON2 => 84,
  :tCOLON3 => 85,
  :tOP_ASGN => 86,
  :tASSOC => 87,
  :tLPAREN => 88,
  :tLPAREN2 => 89,
  :tRPAREN => 90,
  :tLPAREN_ARG => 91,
  :tRBRACK => 92,
  :tLBRACE => 93,
  :tLBRACE_ARG => 94,
  :tSTAR => 95,
  :tSTAR2 => 96,
  :tAMPER => 97,
  :tAMPER2 => 98,
  :tTILDE => 99,
  :tPERCENT => 100,
  :tDIVIDE => 101,
  :tPLUS => 102,
  :tMINUS => 103,
  :tLT => 104,
  :tGT => 105,
  :tPIPE => 106,
  :tBANG => 107,
  :tCARET => 108,
  :tLCURLY => 109,
  :tRCURLY => 110,
  :tBACK_REF2 => 111,
  :tSYMBEG => 112,
  :tSTRING_BEG => 113,
  :tXSTRING_BEG => 114,
  :tREGEXP_BEG => 115,
  :tWORDS_BEG => 116,
  :tAWORDS_BEG => 117,
  :tSTRING_DBEG => 118,
  :tSTRING_DVAR => 119,
  :tSTRING_END => 120,
  :tSTRING => 121,
  :tSYMBOL => 122,
  :tNL => 123,
  :tEH => 124,
  :tCOLON => 125,
  :tCOMMA => 126,
  :tSPACE => 127,
  :tSEMI => 128,
  :tLAMBDA => 129,
  :tLAMBEG => 130,
  :tLBRACK2 => 131,
  :tLBRACK => 132,
  :tJSLBRACK => 133,
  :tDSTAR => 134,
  :tLABEL_END => 135,
  :tEQL => 136,
  :tLOWEST => 137,
  "-@NUM" => 138,
  "+@NUM" => 139 }

racc_nt_base = 140

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "kCLASS",
  "kMODULE",
  "kDEF",
  "kUNDEF",
  "kBEGIN",
  "kRESCUE",
  "kENSURE",
  "kEND",
  "kIF",
  "kUNLESS",
  "kTHEN",
  "kELSIF",
  "kELSE",
  "kCASE",
  "kWHEN",
  "kWHILE",
  "kUNTIL",
  "kFOR",
  "kBREAK",
  "kNEXT",
  "kREDO",
  "kRETRY",
  "kIN",
  "kDO",
  "kDO_COND",
  "kDO_BLOCK",
  "kDO_LAMBDA",
  "kRETURN",
  "kYIELD",
  "kSUPER",
  "kSELF",
  "kNIL",
  "kTRUE",
  "kFALSE",
  "kAND",
  "kOR",
  "kNOT",
  "kIF_MOD",
  "kUNLESS_MOD",
  "kWHILE_MOD",
  "kUNTIL_MOD",
  "kRESCUE_MOD",
  "kALIAS",
  "kDEFINED",
  "klBEGIN",
  "klEND",
  "k__LINE__",
  "k__FILE__",
  "tIDENTIFIER",
  "tFID",
  "tGVAR",
  "tIVAR",
  "tCONSTANT",
  "tLABEL",
  "tCVAR",
  "tNTH_REF",
  "tBACK_REF",
  "tSTRING_CONTENT",
  "tINTEGER",
  "tFLOAT",
  "tREGEXP_END",
  "tUPLUS",
  "tUMINUS",
  "tPOW",
  "tCMP",
  "tEQ",
  "tEQQ",
  "tNEQ",
  "tGEQ",
  "tLEQ",
  "tANDOP",
  "tOROP",
  "tMATCH",
  "tNMATCH",
  "tJSDOT",
  "tDOT",
  "tDOT2",
  "tDOT3",
  "tAREF",
  "tASET",
  "tLSHFT",
  "tRSHFT",
  "tCOLON2",
  "tCOLON3",
  "tOP_ASGN",
  "tASSOC",
  "tLPAREN",
  "tLPAREN2",
  "tRPAREN",
  "tLPAREN_ARG",
  "tRBRACK",
  "tLBRACE",
  "tLBRACE_ARG",
  "tSTAR",
  "tSTAR2",
  "tAMPER",
  "tAMPER2",
  "tTILDE",
  "tPERCENT",
  "tDIVIDE",
  "tPLUS",
  "tMINUS",
  "tLT",
  "tGT",
  "tPIPE",
  "tBANG",
  "tCARET",
  "tLCURLY",
  "tRCURLY",
  "tBACK_REF2",
  "tSYMBEG",
  "tSTRING_BEG",
  "tXSTRING_BEG",
  "tREGEXP_BEG",
  "tWORDS_BEG",
  "tAWORDS_BEG",
  "tSTRING_DBEG",
  "tSTRING_DVAR",
  "tSTRING_END",
  "tSTRING",
  "tSYMBOL",
  "tNL",
  "tEH",
  "tCOLON",
  "tCOMMA",
  "tSPACE",
  "tSEMI",
  "tLAMBDA",
  "tLAMBEG",
  "tLBRACK2",
  "tLBRACK",
  "tJSLBRACK",
  "tDSTAR",
  "tLABEL_END",
  "tEQL",
  "tLOWEST",
  "\"-@NUM\"",
  "\"+@NUM\"",
  "$start",
  "program",
  "top_compstmt",
  "top_stmts",
  "opt_terms",
  "top_stmt",
  "terms",
  "stmt",
  "bodystmt",
  "compstmt",
  "opt_rescue",
  "opt_else",
  "opt_ensure",
  "stmts",
  "fitem",
  "undef_list",
  "expr_value",
  "command_asgn",
  "mlhs",
  "command_call",
  "var_lhs",
  "primary_value",
  "aref_args",
  "backref",
  "lhs",
  "mrhs",
  "arg_value",
  "expr",
  "@1",
  "arg",
  "command",
  "block_command",
  "block_call",
  "operation2",
  "command_args",
  "cmd_brace_block",
  "opt_block_var",
  "operation",
  "call_args",
  "mlhs_basic",
  "mlhs_entry",
  "mlhs_head",
  "mlhs_item",
  "mlhs_node",
  "mlhs_post",
  "variable",
  "cname",
  "cpath",
  "fname",
  "op",
  "reswords",
  "symbol",
  "opt_nl",
  "primary",
  "@2",
  "@3",
  "none",
  "args",
  "trailer",
  "assocs",
  "block_arg",
  "paren_args",
  "opt_call_args",
  "rparen",
  "opt_paren_args",
  "opt_block_arg",
  "call_args2",
  "open_args",
  "@4",
  "literal",
  "strings",
  "xstring",
  "regexp",
  "words",
  "awords",
  "var_ref",
  "assoc_list",
  "brace_block",
  "method_call",
  "lambda",
  "then",
  "if_tail",
  "do",
  "case_body",
  "for_var",
  "superclass",
  "term",
  "f_arglist",
  "singleton",
  "dot_or_colon",
  "@5",
  "@6",
  "@7",
  "@8",
  "@9",
  "@10",
  "@11",
  "@12",
  "@13",
  "@14",
  "@15",
  "@16",
  "@17",
  "@18",
  "@19",
  "opt_bv_decl",
  "bv_decls",
  "bvar",
  "f_bad_arg",
  "f_larglist",
  "lambda_body",
  "block_param",
  "f_block_optarg",
  "f_block_opt",
  "block_args_tail",
  "f_block_kwarg",
  "f_kwrest",
  "opt_f_block_arg",
  "f_block_arg",
  "opt_block_args_tail",
  "f_arg",
  "f_rest_arg",
  "do_block",
  "@20",
  "operation3",
  "@21",
  "@22",
  "cases",
  "@23",
  "exc_list",
  "exc_var",
  "numeric",
  "dsym",
  "string",
  "string1",
  "string_contents",
  "xstring_contents",
  "word_list",
  "word",
  "string_content",
  "qword_list",
  "string_dvar",
  "@24",
  "@25",
  "sym",
  "f_args",
  "kwrest_mark",
  "f_label",
  "f_kw",
  "f_block_kw",
  "f_kwarg",
  "args_tail",
  "opt_args_tail",
  "f_optarg",
  "f_norm_arg",
  "f_arg_item",
  "f_margs",
  "f_marg",
  "f_marg_list",
  "f_opt",
  "restarg_mark",
  "blkarg_mark",
  "assoc" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

def _reduce_2(val, _values, result)
                      result = new_compstmt val[0]
                    
    result
end

def _reduce_3(val, _values, result)
                      result = new_block
                    
    result
end

def _reduce_4(val, _values, result)
                      result = new_block val[0]
                    
    result
end

def _reduce_5(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

# reduce 6 omitted

def _reduce_7(val, _values, result)
                      result = val[2]
                    
    result
end

def _reduce_8(val, _values, result)
                      result = new_body(val[0], val[1], val[2], val[3])
                    
    result
end

def _reduce_9(val, _values, result)
                      result = new_compstmt val[0]
                    
    result
end

def _reduce_10(val, _values, result)
                      result = new_block
                    
    result
end

def _reduce_11(val, _values, result)
                      result = new_block val[0]
                    
    result
end

def _reduce_12(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_13(val, _values, result)
                      lexer.lex_state = :expr_fname
                    
    result
end

def _reduce_14(val, _values, result)
                      result = new_alias(val[0], val[1], val[3])
                    
    result
end

def _reduce_15(val, _values, result)
                      result = s(:valias, value(val[1]).to_sym, value(val[2]).to_sym)
                    
    result
end

# reduce 16 omitted

def _reduce_17(val, _values, result)
                      result = s(:valias, value(val[1]).to_sym, value(val[2]).to_sym)
                    
    result
end

def _reduce_18(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_19(val, _values, result)
                      result = new_if(val[1], val[2], val[0], nil)
                    
    result
end

def _reduce_20(val, _values, result)
                      result = new_if(val[1], val[2], nil, val[0])
                    
    result
end

def _reduce_21(val, _values, result)
                      result = new_while(val[1], val[2], val[0])
                    
    result
end

def _reduce_22(val, _values, result)
                      result = new_until(val[1], val[2], val[0])
                    
    result
end

def _reduce_23(val, _values, result)
                      result = new_rescue_mod(val[1], val[0], val[2])
                    
    result
end

# reduce 24 omitted

# reduce 25 omitted

def _reduce_26(val, _values, result)
                      result = s(:masgn, val[0], s(:to_ary, val[2]))
                    
    result
end

def _reduce_27(val, _values, result)
                      result = new_op_asgn val[1], val[0], val[2]
                    
    result
end

# reduce 28 omitted

# reduce 29 omitted

def _reduce_30(val, _values, result)
                      result = s(:op_asgn2, val[0], op_to_setter(val[2]), value(val[3]).to_sym, val[4])
                    
    result
end

# reduce 31 omitted

# reduce 32 omitted

# reduce 33 omitted

def _reduce_34(val, _values, result)
                      result = new_assign val[0], val[1], s(:svalue, val[2])
                    
    result
end

def _reduce_35(val, _values, result)
                      result = s(:masgn, val[0], s(:to_ary, val[2]))
                    
    result
end

def _reduce_36(val, _values, result)
                      result = s(:masgn, val[0], val[2])
                    
    result
end

# reduce 37 omitted

def _reduce_38(val, _values, result)
                      result = new_assign(val[0], val[1], val[2])
                    
    result
end

def _reduce_39(val, _values, result)
                      result = new_assign(val[0], val[1], val[2])
                    
    result
end

# reduce 40 omitted

def _reduce_41(val, _values, result)
                      result = s(:and, val[0], val[2])
                    
    result
end

def _reduce_42(val, _values, result)
                      result = s(:or, val[0], val[2])
                    
    result
end

def _reduce_43(val, _values, result)
                      result = new_unary_call(['!', []], val[1])
                    
    result
end

def _reduce_44(val, _values, result)
                      result = new_unary_call(val[0], val[1])
                    
    result
end

# reduce 45 omitted

# reduce 46 omitted

# reduce 47 omitted

# reduce 48 omitted

# reduce 49 omitted

# reduce 50 omitted

# reduce 51 omitted

# reduce 52 omitted

def _reduce_53(val, _values, result)
                      result = new_iter(val[1], val[2])
                    
    result
end

def _reduce_54(val, _values, result)
                      result = new_call(nil, val[0], val[1])
                    
    result
end

def _reduce_55(val, _values, result)
                      result = new_call(nil, val[0], val[1]) << val[2]
                    
    result
end

def _reduce_56(val, _values, result)
                      result = new_js_call(val[0], val[2], val[3])
                    
    result
end

# reduce 57 omitted

def _reduce_58(val, _values, result)
                      result = new_call(val[0], val[2], val[3])
                    
    result
end

# reduce 59 omitted

def _reduce_60(val, _values, result)
                    result = new_call(val[0], val[2], val[3])
                  
    result
end

# reduce 61 omitted

def _reduce_62(val, _values, result)
                      result = new_super(val[0], val[1])
                    
    result
end

def _reduce_63(val, _values, result)
                      result = new_yield val[1]
                    
    result
end

def _reduce_64(val, _values, result)
                      result = new_return(val[0], val[1])
                    
    result
end

def _reduce_65(val, _values, result)
                      result = new_break(val[0], val[1])
                    
    result
end

def _reduce_66(val, _values, result)
                      result = new_next(val[0], val[1])
                    
    result
end

def _reduce_67(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_68(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_69(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_70(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_71(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_72(val, _values, result)
                      result = val[0] << val[1]
                    
    result
end

def _reduce_73(val, _values, result)
                      result = val[0] << s(:splat, val[2])
                    
    result
end

def _reduce_74(val, _values, result)
                     result = (val[0] << s(:splat, val[2])).concat(val[4].children)
                   
    result
end

def _reduce_75(val, _values, result)
                      result = val[0] << s(:splat)
                    
    result
end

def _reduce_76(val, _values, result)
                      result = (val[0] << s(:splat)).concat(val[3].children)
                    
    result
end

def _reduce_77(val, _values, result)
                      result = s(:array, s(:splat, val[1]))
                    
    result
end

def _reduce_78(val, _values, result)
                      result = s(:array, s(:splat, val[1])).concat(val[3].children)
                    
    result
end

def _reduce_79(val, _values, result)
                      result = s(:array, s(:splat))
                    
    result
end

def _reduce_80(val, _values, result)
                      result = s(:array, s(:splat)).concat(val[2].children)
                    
    result
end

def _reduce_81(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_82(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_83(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

def _reduce_84(val, _values, result)
                      result = val[0] << val[1]
                    
    result
end

def _reduce_85(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

def _reduce_86(val, _values, result)
                      result = val[0] << val[2]
                    
    result
end

def _reduce_87(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_88(val, _values, result)
                      args = val[2] ? val[2] : []
                      result = s(:attrasgn, val[0], :[]=, s(:arglist, *args))
                    
    result
end

def _reduce_89(val, _values, result)
                      result = new_call val[0], val[2], []
                    
    result
end

# reduce 90 omitted

# reduce 91 omitted

# reduce 92 omitted

# reduce 93 omitted

# reduce 94 omitted

def _reduce_95(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_96(val, _values, result)
                      result = new_js_attrasgn(val[0], val[2])
                    
    result
end

def _reduce_97(val, _values, result)
                      result = new_attrasgn(val[0], :[]=, val[2])
                    
    result
end

def _reduce_98(val, _values, result)
                      result = new_attrasgn(val[0], op_to_setter(val[2]))
                    
    result
end

def _reduce_99(val, _values, result)
                      result = new_attrasgn(val[0], op_to_setter(val[2]))
                    
    result
end

def _reduce_100(val, _values, result)
                      result = new_attrasgn(val[0], op_to_setter(val[2]))
                    
    result
end

def _reduce_101(val, _values, result)
                      result = new_colon2(val[0], val[1], val[2])
                    
    result
end

def _reduce_102(val, _values, result)
                      result = new_colon3(val[0], val[1])
                    
    result
end

# reduce 103 omitted

# reduce 104 omitted

def _reduce_105(val, _values, result)
                      result = new_colon3(val[0], val[1])
                    
    result
end

def _reduce_106(val, _values, result)
                      result = new_const(val[0])
                    
    result
end

def _reduce_107(val, _values, result)
                      result = new_colon2(val[0], val[1], val[2])
                    
    result
end

# reduce 108 omitted

# reduce 109 omitted

# reduce 110 omitted

def _reduce_111(val, _values, result)
                      lexer.lex_state = :expr_end
                      result = val[0]
                    
    result
end

def _reduce_112(val, _values, result)
                      lexer.lex_state = :expr_end
                      result = val[0]
                    
    result
end

def _reduce_113(val, _values, result)
                      result = new_sym(val[0])
                    
    result
end

# reduce 114 omitted

def _reduce_115(val, _values, result)
                      result = s(:undef, val[0])
                    
    result
end

def _reduce_116(val, _values, result)
                      result = val[0] << val[2]
                    
    result
end

# reduce 117 omitted

# reduce 118 omitted

# reduce 119 omitted

# reduce 120 omitted

# reduce 121 omitted

# reduce 122 omitted

# reduce 123 omitted

# reduce 124 omitted

# reduce 125 omitted

# reduce 126 omitted

# reduce 127 omitted

# reduce 128 omitted

# reduce 129 omitted

# reduce 130 omitted

# reduce 131 omitted

# reduce 132 omitted

# reduce 133 omitted

# reduce 134 omitted

# reduce 135 omitted

# reduce 136 omitted

# reduce 137 omitted

# reduce 138 omitted

# reduce 139 omitted

# reduce 140 omitted

# reduce 141 omitted

# reduce 142 omitted

# reduce 143 omitted

# reduce 144 omitted

# reduce 145 omitted

# reduce 146 omitted

# reduce 147 omitted

# reduce 148 omitted

# reduce 149 omitted

# reduce 150 omitted

# reduce 151 omitted

# reduce 152 omitted

# reduce 153 omitted

# reduce 154 omitted

# reduce 155 omitted

# reduce 156 omitted

# reduce 157 omitted

# reduce 158 omitted

# reduce 159 omitted

# reduce 160 omitted

# reduce 161 omitted

# reduce 162 omitted

# reduce 163 omitted

# reduce 164 omitted

# reduce 165 omitted

# reduce 166 omitted

# reduce 167 omitted

# reduce 168 omitted

# reduce 169 omitted

# reduce 170 omitted

# reduce 171 omitted

# reduce 172 omitted

# reduce 173 omitted

# reduce 174 omitted

# reduce 175 omitted

# reduce 176 omitted

# reduce 177 omitted

# reduce 178 omitted

# reduce 179 omitted

# reduce 180 omitted

# reduce 181 omitted

# reduce 182 omitted

# reduce 183 omitted

# reduce 184 omitted

# reduce 185 omitted

# reduce 186 omitted

# reduce 187 omitted

# reduce 188 omitted

# reduce 189 omitted

# reduce 190 omitted

def _reduce_191(val, _values, result)
                      result = new_assign(val[0], val[1], val[2])
                    
    result
end

def _reduce_192(val, _values, result)
                      result = new_assign val[0], val[1], s(:rescue_mod, val[2], val[4])
                    
    result
end

def _reduce_193(val, _values, result)
                      result = new_op_asgn val[1], val[0], val[2]
                    
    result
end

def _reduce_194(val, _values, result)
                      result = new_op_asgn1(val[0], val[2], val[4], val[5])
                    
    result
end

def _reduce_195(val, _values, result)
                      raise ".JS[...] #{val[4]} is not supported"
                    
    result
end

def _reduce_196(val, _values, result)
                      result = s(:op_asgn2, val[0], op_to_setter(val[2]), value(val[3]).to_sym, val[4])
                    
    result
end

# reduce 197 omitted

# reduce 198 omitted

# reduce 199 omitted

# reduce 200 omitted

# reduce 201 omitted

def _reduce_202(val, _values, result)
                      result = new_irange(val[0], val[1], val[2])
                    
    result
end

def _reduce_203(val, _values, result)
                      result = new_erange(val[0], val[1], val[2])
                    
    result
end

def _reduce_204(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_205(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_206(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_207(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_208(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_209(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_210(val, _values, result)
                      result = new_call new_binary_call(new_int(val[1]), val[2], val[3]), [:"-@", []], []
                    
    result
end

def _reduce_211(val, _values, result)
                      result = new_call new_binary_call(new_float(val[1]), val[2], val[3]), [:"-@", []], []
                    
    result
end

def _reduce_212(val, _values, result)
                      result = new_call val[1], [:"+@", []], []
                      if [:int, :float].include? val[1].type
                        result = val[1]
                      end
                    
    result
end

def _reduce_213(val, _values, result)
                      result = new_call val[1], [:"-@", []], []
                      if val[1].type == :int
                        val[1][1] = -val[1][1]
                        result = val[1]
                      elsif val[1].type == :float
                        val[1][1] = -val[1][1].to_f
                        result = val[1]
                      end
                    
    result
end

def _reduce_214(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_215(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_216(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_217(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_218(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_219(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_220(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_221(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_222(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_223(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_224(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_225(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_226(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_227(val, _values, result)
                      result = new_unary_call(val[0], val[1])
                    
    result
end

def _reduce_228(val, _values, result)
                      result = new_unary_call(val[0], val[1])
                    
    result
end

def _reduce_229(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_230(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_231(val, _values, result)
                      result = new_and(val[0], val[1], val[2])
                    
    result
end

def _reduce_232(val, _values, result)
                      result = new_or(val[0], val[1], val[2])
                    
    result
end

def _reduce_233(val, _values, result)
                      result = s(:defined, val[2])
                    
    result
end

def _reduce_234(val, _values, result)
 lexer.cond_push 1 
    result
end

def _reduce_235(val, _values, result)
 lexer.cond_pop 
    result
end

def _reduce_236(val, _values, result)
                      result = new_if(val[1], val[0], val[3], val[6])
                    
    result
end

# reduce 237 omitted

# reduce 238 omitted

def _reduce_239(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_240(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_241(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_242(val, _values, result)
                      val[0] << s(:hash, *val[2])
                      result = val[0]
                    
    result
end

def _reduce_243(val, _values, result)
                      result = [s(:hash, *val[0])]
                    
    result
end

def _reduce_244(val, _values, result)
                      result = val[0] << val[2]
                    
    result
end

def _reduce_245(val, _values, result)
                      result = val[1]
                    
    result
end

# reduce 246 omitted

def _reduce_247(val, _values, result)
                      result = []
                    
    result
end

# reduce 248 omitted

def _reduce_249(val, _values, result)
                      result = []
                    
    result
end

# reduce 250 omitted

def _reduce_251(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_252(val, _values, result)
                      result = val[0]
                      result << new_hash(nil, val[2], nil)
                    
    result
end

def _reduce_253(val, _values, result)
                      result = [new_hash(nil, val[0], nil)]
                    
    result
end

def _reduce_254(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_255(val, _values, result)
                      result = val[0]
                      add_block_pass val[0], val[1]
                    
    result
end

def _reduce_256(val, _values, result)
                      result = [new_hash(nil, val[0], nil)]
                      add_block_pass result, val[1]
                    
    result
end

def _reduce_257(val, _values, result)
                      result = val[0]
                      result << new_hash(nil, val[2], nil)
                      result << val[3] if val[3]
                    
    result
end

def _reduce_258(val, _values, result)
                      result = []
                      add_block_pass result, val[0]
                    
    result
end

# reduce 259 omitted

# reduce 260 omitted

def _reduce_261(val, _values, result)
                      lexer.cmdarg_push 1
                    
    result
end

def _reduce_262(val, _values, result)
                      lexer.cmdarg_pop
                      result = val[1]
                    
    result
end

# reduce 263 omitted

def _reduce_264(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_265(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_266(val, _values, result)
                      result = new_block_pass(val[0], val[1])
                    
    result
end

def _reduce_267(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_268(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_269(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_270(val, _values, result)
                      result = [new_splat(val[0], val[1])]
                    
    result
end

def _reduce_271(val, _values, result)
                      result = val[0] << val[2]
                    
    result
end

def _reduce_272(val, _values, result)
                      result  = val[0] << new_splat(val[2], val[3])
                    
    result
end

def _reduce_273(val, _values, result)
                      val[0] << val[2]
                      result = s(:array, *val[0])
                    
    result
end

def _reduce_274(val, _values, result)
                      val[0] << s(:splat, val[3])
                      result = s(:array, *val[0])
                    
    result
end

def _reduce_275(val, _values, result)
                      result = s(:splat, val[1])
                    
    result
end

# reduce 276 omitted

# reduce 277 omitted

# reduce 278 omitted

# reduce 279 omitted

# reduce 280 omitted

# reduce 281 omitted

# reduce 282 omitted

# reduce 283 omitted

# reduce 284 omitted

def _reduce_285(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_286(val, _values, result)
                      result = s(:begin, val[2])
                    
    result
end

def _reduce_287(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_288(val, _values, result)
                      result = new_paren(val[0], val[1], val[2])
                    
    result
end

def _reduce_289(val, _values, result)
                      result = new_colon2(val[0], val[1], val[2])
                    
    result
end

def _reduce_290(val, _values, result)
                      result = new_colon3(val[0], val[1])
                    
    result
end

def _reduce_291(val, _values, result)
                      result = new_call val[0], [:[], []], val[2]
                    
    result
end

def _reduce_292(val, _values, result)
                      result = new_js_call val[0], [:[], []], val[2]
                    
    result
end

def _reduce_293(val, _values, result)
                      result = new_array(val[0], val[1], val[2])
                    
    result
end

def _reduce_294(val, _values, result)
                      result = new_hash(val[0], val[1], val[2])
                    
    result
end

def _reduce_295(val, _values, result)
                      result = new_return(val[0])
                    
    result
end

def _reduce_296(val, _values, result)
                      result = new_yield val[2]
                    
    result
end

def _reduce_297(val, _values, result)
                      result = s(:yield)
                    
    result
end

def _reduce_298(val, _values, result)
                      result = s(:yield)
                    
    result
end

def _reduce_299(val, _values, result)
                      result = s(:defined, val[3])
                    
    result
end

def _reduce_300(val, _values, result)
                      result = new_unary_call(['!', []], val[2])
                    
    result
end

def _reduce_301(val, _values, result)
                      result = new_unary_call(['!', []], new_nil(val[0]))
                    
    result
end

def _reduce_302(val, _values, result)
                      result = new_call(nil, val[0], [])
                      result << val[1]
                    
    result
end

# reduce 303 omitted

def _reduce_304(val, _values, result)
                      val[0] << val[1]
                      result = val[0]
                    
    result
end

def _reduce_305(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_306(val, _values, result)
                      result = new_if(val[0], val[1], val[3], val[4])
                    
    result
end

def _reduce_307(val, _values, result)
                      result = new_if(val[0], val[1], val[4], val[3])
                    
    result
end

def _reduce_308(val, _values, result)
                      lexer.cond_push 1
                      result = lexer.line
                    
    result
end

def _reduce_309(val, _values, result)
                      lexer.cond_pop
                    
    result
end

def _reduce_310(val, _values, result)
                      result = s(:while, val[2], val[5])
                    
    result
end

def _reduce_311(val, _values, result)
                      lexer.cond_push 1
                      result = lexer.line
                    
    result
end

def _reduce_312(val, _values, result)
                      lexer.cond_pop
                    
    result
end

def _reduce_313(val, _values, result)
                      result = s(:until, val[2], val[5])
                    
    result
end

def _reduce_314(val, _values, result)
                      result = s(:case, val[1], *val[3])
                    
    result
end

def _reduce_315(val, _values, result)
                      result = s(:case, nil, *val[2])
                    
    result
end

def _reduce_316(val, _values, result)
                      result = s(:case, nil, val[3])
                    
    result
end

def _reduce_317(val, _values, result)
                      lexer.cond_push 1
                      result = lexer.line
                    
    result
end

def _reduce_318(val, _values, result)
                      lexer.cond_pop
                    
    result
end

def _reduce_319(val, _values, result)
                      result = s(:for, val[4], val[1], val[7])
                    
    result
end

def _reduce_320(val, _values, result)
                      # ...
                    
    result
end

def _reduce_321(val, _values, result)
                      result = new_class val[0], val[1], val[2], val[4], val[5]
                    
    result
end

def _reduce_322(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_323(val, _values, result)
                      # ...
                    
    result
end

def _reduce_324(val, _values, result)
                      result = new_sclass(val[0], val[3], val[6], val[7])
                    
    result
end

def _reduce_325(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_326(val, _values, result)
                      # ...
                    
    result
end

def _reduce_327(val, _values, result)
                      result = new_module(val[0], val[2], val[4], val[5])
                    
    result
end

def _reduce_328(val, _values, result)
                      push_scope
                      lexer.lex_state = :expr_endfn
                    
    result
end

def _reduce_329(val, _values, result)
                      result = new_def(val[0], nil, val[1], val[3], val[4], val[5])
                      pop_scope
                    
    result
end

def _reduce_330(val, _values, result)
                       lexer.lex_state = :expr_fname
                    
    result
end

def _reduce_331(val, _values, result)
                      push_scope
                      lexer.lex_state = :expr_endfn
                    
    result
end

def _reduce_332(val, _values, result)
                      result = new_def(val[0], val[1], val[4], val[6], val[7], val[8])
                      pop_scope
                    
    result
end

def _reduce_333(val, _values, result)
                      result = new_break(val[0])
                    
    result
end

def _reduce_334(val, _values, result)
                      result = s(:next)
                    
    result
end

def _reduce_335(val, _values, result)
                      result = s(:redo)
                    
    result
end

# reduce 336 omitted

# reduce 337 omitted

# reduce 338 omitted

# reduce 339 omitted

# reduce 340 omitted

# reduce 341 omitted

# reduce 342 omitted

# reduce 343 omitted

# reduce 344 omitted

def _reduce_345(val, _values, result)
                      result = []
                    
    result
end

def _reduce_346(val, _values, result)
                      result = val[2]
                    
    result
end

def _reduce_347(val, _values, result)
                      result = [ val[0] ]
                    
    result
end

def _reduce_348(val, _values, result)
                      result = val[0] << val[2]
                    
    result
end

def _reduce_349(val, _values, result)
                      result = new_shadowarg(val[0])
                    
    result
end

# reduce 350 omitted

def _reduce_351(val, _values, result)
                      result = new_call nil, [:lambda, []], []
                      result << new_iter(val[0], val[1])
                    
    result
end

def _reduce_352(val, _values, result)
                      result = new_block_args(*val[1])
                    
    result
end

def _reduce_353(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_354(val, _values, result)
                      result = new_block_args(*val[0])
                    
    result
end

# reduce 355 omitted

def _reduce_356(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_357(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_358(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_359(val, _values, result)
                      result = new_if(val[0], val[1], val[3], val[4])
                    
    result
end

# reduce 360 omitted

def _reduce_361(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_362(val, _values, result)
                      result = s(:block, val[0])
                    
    result
end

def _reduce_363(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_364(val, _values, result)
                      result = new_assign(new_assignable(new_ident(
                                  val[0])), val[1], val[2])
                    
    result
end

# reduce 365 omitted

def _reduce_366(val, _values, result)
                      result = new_block_args(nil, [val[1]])
                    
    result
end

def _reduce_367(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_368(val, _values, result)
                      val[1] << val[2]
                      result = new_block_args(*val[1])
                    
    result
end

def _reduce_369(val, _values, result)
                      result = [val[0], val[2], val[3]]
                    
    result
end

def _reduce_370(val, _values, result)
                      result = [val[0], nil, val[1]]
                    
    result
end

def _reduce_371(val, _values, result)
                      result = [nil, val[0], val[1]]
                    
    result
end

def _reduce_372(val, _values, result)
                      result = [nil, nil, val[0]]
                    
    result
end

def _reduce_373(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_374(val, _values, result)
                      nil
                    
    result
end

def _reduce_375(val, _values, result)
                      optarg = new_optarg(val[2])
                      restarg = new_restarg(val[4])
                      result = [val[0] + optarg + restarg, val[5]]
                    
    result
end

def _reduce_376(val, _values, result)
                      optarg = new_optarg(val[2])
                      restarg = new_restarg(val[4])
                      result = [val[0] + optarg + restarg + val[6], val[7]]
                    
    result
end

def _reduce_377(val, _values, result)
                      optarg = new_optarg(val[2])
                      result = [val[0] + optarg, val[3]]
                    
    result
end

def _reduce_378(val, _values, result)
                      optarg = new_optarg(val[2])
                      result = [val[0] + optarg + val[4], val[5]]
                    
    result
end

def _reduce_379(val, _values, result)
                      restarg = new_restarg(val[2])
                      result = [val[0] + restarg, val[3]]
                    
    result
end

def _reduce_380(val, _values, result)
                      result = [val[0], nil]
                    
    result
end

def _reduce_381(val, _values, result)
                      restarg = new_restarg(val[2])
                      result = [val[0] + restarg + val[4], val[5]]
                    
    result
end

def _reduce_382(val, _values, result)
                      result = [val[0], val[1]]
                    
    result
end

def _reduce_383(val, _values, result)
                      optarg = new_optarg(val[0])
                      restarg = new_restarg(val[2])
                      result = [optarg + restarg, val[3]]
                    
    result
end

def _reduce_384(val, _values, result)
                      optarg = new_optarg(val[0])
                      restarg = new_restarg(val[2])
                      result = [optarg + restarg + val[4], val[5]]
                    
    result
end

def _reduce_385(val, _values, result)
                      optarg= new_optarg(val[0])
                      result = [optarg, val[1]]
                    
    result
end

def _reduce_386(val, _values, result)
                      optarg = new_optarg(val[0])
                      result = [optarg + val[2], val[3]]
                    
    result
end

def _reduce_387(val, _values, result)
                      restarg = new_restarg(val[0])
                      result = [restarg, val[1]]
                    
    result
end

def _reduce_388(val, _values, result)
                      restarg = new_restarg(val[0])
                      result = [restarg + val[2], val[3]]
                    
    result
end

def _reduce_389(val, _values, result)
                      result = [nil, val[0]]
                    
    result
end

def _reduce_390(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_391(val, _values, result)
                      result = new_iter val[2], val[3]
                      pop_scope
                    
    result
end

def _reduce_392(val, _values, result)
                      val[0] << val[1]
                      result = val[0]
                    
    result
end

# reduce 393 omitted

# reduce 394 omitted

# reduce 395 omitted

def _reduce_396(val, _values, result)
                      result = new_call(nil, val[0], val[1])
                    
    result
end

def _reduce_397(val, _values, result)
                      result = new_call(val[0], val[2], val[3])
                    
    result
end

def _reduce_398(val, _values, result)
                      result = new_js_call(val[0], val[2], val[3])
                    
    result
end

def _reduce_399(val, _values, result)
                      result = new_call(val[0], [:call, []], val[2])
                    
    result
end

def _reduce_400(val, _values, result)
                      result = new_call(val[0], val[2], val[3])
                    
    result
end

def _reduce_401(val, _values, result)
                      result = new_call(val[0], val[2])
                    
    result
end

def _reduce_402(val, _values, result)
                      result = new_super(val[0], val[1])
                    
    result
end

def _reduce_403(val, _values, result)
                      result = new_super(val[0], nil)
                    
    result
end

def _reduce_404(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_405(val, _values, result)
                      result = new_iter val[2], val[3]
                      pop_scope
                    
    result
end

def _reduce_406(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_407(val, _values, result)
                      result = new_iter val[2], val[3]
                      pop_scope
                    
    result
end

def _reduce_408(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_409(val, _values, result)
                      part = s(:when, s(:array, *val[2]), val[4])
                      result = [part]
                      result.push(*val[5]) if val[5]
                    
    result
end

def _reduce_410(val, _values, result)
                      result = [val[0]]
                    
    result
end

# reduce 411 omitted

def _reduce_412(val, _values, result)
                      exc = val[1] || s(:array)
                      exc << new_assign(val[2], val[2], s(:gvar, '$!'.intern)) if val[2]
                      result = [s(:resbody, exc, val[4])]
                      result.concat val[5] if val[5]
                    
    result
end

def _reduce_413(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_414(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

# reduce 415 omitted

# reduce 416 omitted

def _reduce_417(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_418(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_419(val, _values, result)
                      result = val[1].nil? ? s(:nil) : val[1]
                    
    result
end

# reduce 420 omitted

# reduce 421 omitted

# reduce 422 omitted

# reduce 423 omitted

def _reduce_424(val, _values, result)
                      result = new_str val[0]
                    
    result
end

# reduce 425 omitted

def _reduce_426(val, _values, result)
                    result = str_append val[0], val[1]
                  
    result
end

def _reduce_427(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_428(val, _values, result)
                      result = s(:str, value(val[0]))
                    
    result
end

def _reduce_429(val, _values, result)
                      result = new_xstr(val[0], val[1], val[2])
                    
    result
end

def _reduce_430(val, _values, result)
                      result = new_regexp val[1], val[2]
                    
    result
end

def _reduce_431(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_432(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_433(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_434(val, _values, result)
                      part = val[1]
                      part = s(:dstr, "", val[1]) if part.type == :evstr
                      result = val[0] << part
                    
    result
end

def _reduce_435(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_436(val, _values, result)
                      result = val[0].concat([val[1]])
                    
    result
end

def _reduce_437(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_438(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_439(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_440(val, _values, result)
                      result = val[0] << s(:str, value(val[1]))
                    
    result
end

def _reduce_441(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_442(val, _values, result)
                      result = str_append val[0], val[1]
                    
    result
end

def _reduce_443(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_444(val, _values, result)
                      result = str_append val[0], val[1]
                    
    result
end

def _reduce_445(val, _values, result)
                      result = new_str_content(val[0])
                    
    result
end

def _reduce_446(val, _values, result)
                      result = lexer.strterm
                      lexer.strterm = nil
                    
    result
end

def _reduce_447(val, _values, result)
                      lexer.strterm = val[1]
                      result = new_evstr(val[2])
                    
    result
end

def _reduce_448(val, _values, result)
                      lexer.cond_push 0
                      lexer.cmdarg_push 0
                      result = lexer.strterm
                      lexer.strterm = nil
                      lexer.lex_state = :expr_beg
                    
    result
end

def _reduce_449(val, _values, result)
                      lexer.strterm = val[1]
                      lexer.cond_lexpop
                      lexer.cmdarg_lexpop
                      result = new_evstr(val[2])
                    
    result
end

def _reduce_450(val, _values, result)
                      result = new_gvar(val[0])
                    
    result
end

def _reduce_451(val, _values, result)
                      result = new_ivar(val[0])
                    
    result
end

def _reduce_452(val, _values, result)
                      result = new_cvar(val[0])
                    
    result
end

# reduce 453 omitted

def _reduce_454(val, _values, result)
                      result = new_sym(val[1])
                      lexer.lex_state = :expr_end
                    
    result
end

def _reduce_455(val, _values, result)
                      result = new_sym(val[0])
                    
    result
end

# reduce 456 omitted

# reduce 457 omitted

# reduce 458 omitted

# reduce 459 omitted

def _reduce_460(val, _values, result)
                      result = new_dsym val[1]
                    
    result
end

def _reduce_461(val, _values, result)
                      result = new_int(val[0])
                    
    result
end

def _reduce_462(val, _values, result)
                      result = new_float(val[0])
                    
    result
end

def _reduce_463(val, _values, result)
                    result = negate_num(new_int(val[1]))
                  
    result
end

def _reduce_464(val, _values, result)
                    result = negate_num(new_float(val[1]))
                  
    result
end

def _reduce_465(val, _values, result)
                    result = new_int(val[1])
                  
    result
end

def _reduce_466(val, _values, result)
                    result = new_float(val[1])
                  
    result
end

def _reduce_467(val, _values, result)
                      result = new_ident(val[0])
                    
    result
end

def _reduce_468(val, _values, result)
                      result = new_ivar(val[0])
                    
    result
end

def _reduce_469(val, _values, result)
                      result = new_gvar(val[0])
                    
    result
end

def _reduce_470(val, _values, result)
                      result = new_const(val[0])
                    
    result
end

def _reduce_471(val, _values, result)
                      result = new_cvar(val[0])
                    
    result
end

def _reduce_472(val, _values, result)
                      result = new_nil(val[0])
                    
    result
end

def _reduce_473(val, _values, result)
                      result = new_self(val[0])
                    
    result
end

def _reduce_474(val, _values, result)
                      result = new_true(val[0])
                    
    result
end

def _reduce_475(val, _values, result)
                      result = new_false(val[0])
                    
    result
end

def _reduce_476(val, _values, result)
                      result = new___FILE__(val[0])
                    
    result
end

def _reduce_477(val, _values, result)
                      result = new___LINE__(val[0])
                    
    result
end

def _reduce_478(val, _values, result)
                      result = new_var_ref(val[0])
                    
    result
end

def _reduce_479(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_480(val, _values, result)
                      result = s(:nth_ref, value(val[0]))
                    
    result
end

# reduce 481 omitted

def _reduce_482(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_483(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_484(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_485(val, _values, result)
                      result = val[1]
                      lexer.lex_state = :expr_beg
                    
    result
end

def _reduce_486(val, _values, result)
                      result = val[0]
                      lexer.lex_state = :expr_beg
                    
    result
end

# reduce 487 omitted

# reduce 488 omitted

def _reduce_489(val, _values, result)
                      result = new_kwrestarg(val[1])
                    
    result
end

def _reduce_490(val, _values, result)
                      result = new_kwrestarg()
                    
    result
end

def _reduce_491(val, _values, result)
                      result = new_sym(val[0])
                    
    result
end

def _reduce_492(val, _values, result)
                      result = new_kwoptarg(val[0], val[1])
                    
    result
end

def _reduce_493(val, _values, result)
                      result = new_kwarg(val[0])
                    
    result
end

def _reduce_494(val, _values, result)
                      result = new_kwoptarg(val[0], val[1])
                    
    result
end

def _reduce_495(val, _values, result)
                      result = new_kwarg(val[0])
                    
    result
end

def _reduce_496(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_497(val, _values, result)
                      result = val[0]
                      result << val[2]
                    
    result
end

def _reduce_498(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_499(val, _values, result)
                      result = val[0]
                      result << val[2]
                    
    result
end

def _reduce_500(val, _values, result)
                      result = new_args_tail(val[0], val[2], val[3])
                    
    result
end

def _reduce_501(val, _values, result)
                      result = new_args_tail(val[0], nil, val[1])
                    
    result
end

def _reduce_502(val, _values, result)
                      result = new_args_tail(nil, val[0], val[1])
                    
    result
end

def _reduce_503(val, _values, result)
                      result = new_args_tail(nil, nil, val[0])
                    
    result
end

def _reduce_504(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_505(val, _values, result)
                      result = new_args_tail(nil, nil, nil)
                    
    result
end

def _reduce_506(val, _values, result)
                      optarg = new_optarg(val[2])
                      restarg = new_restarg(val[4])
                      result = new_args(val[0] + optarg + restarg, val[5])
                    
    result
end

def _reduce_507(val, _values, result)
                      optarg = new_optarg(val[2])
                      restarg = new_restarg(val[4])
                      result = new_args(val[0] + optarg + restarg + val[6], val[7])
                    
    result
end

def _reduce_508(val, _values, result)
                      optarg = new_optarg(val[2])
                      result = new_args(val[0] + optarg, val[3])
                    
    result
end

def _reduce_509(val, _values, result)
                      optarg = new_optarg(val[2])
                      result = new_args(val[0] + optarg + val[4], val[5])
                    
    result
end

def _reduce_510(val, _values, result)
                      restarg = new_restarg(val[2])
                      result = new_args(val[0] + restarg, val[3])
                    
    result
end

def _reduce_511(val, _values, result)
                      restarg = new_restarg(val[2])
                      result = new_args(val[0] + restarg + val[4], val[5])
                    
    result
end

def _reduce_512(val, _values, result)
                      result = new_args(val[0], val[1])
                    
    result
end

def _reduce_513(val, _values, result)
                      optarg = new_optarg(val[0])
                      restarg = new_restarg(val[2])
                      result = new_args(optarg + restarg, val[3])
                    
    result
end

def _reduce_514(val, _values, result)
                      optarg = new_optarg(val[0])
                      restarg = new_restarg(val[2])
                      result = new_args(optarg + restarg + val[4], val[5])
                    
    result
end

def _reduce_515(val, _values, result)
                      optarg = new_optarg(val[0])
                      result = new_args(optarg, val[1])
                    
    result
end

def _reduce_516(val, _values, result)
                      optarg = new_restarg(val[0])
                      result = new_args(optarg, val[1])
                    
    result
end

def _reduce_517(val, _values, result)
                      restarg = new_restarg(val[0])
                      result = new_args(restarg + val[2], val[3])
                    
    result
end

def _reduce_518(val, _values, result)
                      result = new_args(nil, val[0])
                    
    result
end

def _reduce_519(val, _values, result)
                      result = new_args(nil, nil)
                    
    result
end

# reduce 520 omitted

def _reduce_521(val, _values, result)
                      result = value(val[0]).to_sym
                      scope.add_local result
                    
    result
end

def _reduce_522(val, _values, result)
                      raise 'formal argument cannot be a constant'
                    
    result
end

def _reduce_523(val, _values, result)
                      raise 'formal argument cannot be an instance variable'
                    
    result
end

def _reduce_524(val, _values, result)
                      raise 'formal argument cannot be a class variable'
                    
    result
end

def _reduce_525(val, _values, result)
                      raise 'formal argument cannot be a global variable'
                    
    result
end

def _reduce_526(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_527(val, _values, result)
                      result = val[1]
                    
    result
end

# reduce 528 omitted

# reduce 529 omitted

def _reduce_530(val, _values, result)
                      result = s(:arg, val[0])
                    
    result
end

def _reduce_531(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_532(val, _values, result)
                      result = s(:mlhs, val[0])
                    
    result
end

def _reduce_533(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

# reduce 534 omitted

def _reduce_535(val, _values, result)
                      result = val[0].push(s(:restarg, val[3]))
                    
    result
end

def _reduce_536(val, _values, result)
                      result = val[0].push(s(:restarg, val[3])).concat(val[5][1..-1])
                    
    result
end

def _reduce_537(val, _values, result)
                      result = val[0].push(s(:restarg))
                    
    result
end

def _reduce_538(val, _values, result)
                      result = val[0].push(s(:restarg)).concat(val[4][1..-1])
                    
    result
end

def _reduce_539(val, _values, result)
                      result = s(:mlhs, s(:restarg, val[1]))
                    
    result
end

def _reduce_540(val, _values, result)
                      val[3].insert(1, s(:restarg, val[1]))
                      result = val[3]
                    
    result
end

def _reduce_541(val, _values, result)
                      result = s(:mlhs, s(:restarg))
                    
    result
end

def _reduce_542(val, _values, result)
                      val[2].insert(1, s(:restarg))
                      result = val[2]
                    
    result
end

def _reduce_543(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_544(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_545(val, _values, result)
                      result = new_assign(new_assignable(new_ident(val[0])), val[1], val[2])
                    
    result
end

def _reduce_546(val, _values, result)
                      result = s(:block, val[0])
                    
    result
end

def _reduce_547(val, _values, result)
                      result = val[0]
                      val[0] << val[2]
                    
    result
end

# reduce 548 omitted

# reduce 549 omitted

def _reduce_550(val, _values, result)
                      result = "*#{value(val[1])}".to_sym
                    
    result
end

def _reduce_551(val, _values, result)
                      result = :"*"
                    
    result
end

# reduce 552 omitted

# reduce 553 omitted

def _reduce_554(val, _values, result)
                      result = "&#{value(val[1])}".to_sym
                    
    result
end

def _reduce_555(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_556(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_557(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_558(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_559(val, _values, result)
                      result = []
                    
    result
end

def _reduce_560(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_561(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_562(val, _values, result)
                      result = val[0].concat(val[2])
                    
    result
end

def _reduce_563(val, _values, result)
                      result = [val[0], val[2]]
                    
    result
end

def _reduce_564(val, _values, result)
                      result = [new_sym(val[0]), val[1]]
                    
    result
end

def _reduce_565(val, _values, result)
                      result = [s(:sym, source(val[1]).to_sym), val[3]]
                    
    result
end

def _reduce_566(val, _values, result)
                      result = [new_kwsplat(val[1])]
                    
    result
end

# reduce 567 omitted

# reduce 568 omitted

# reduce 569 omitted

# reduce 570 omitted

# reduce 571 omitted

# reduce 572 omitted

# reduce 573 omitted

# reduce 574 omitted

# reduce 575 omitted

# reduce 576 omitted

# reduce 577 omitted

# reduce 578 omitted

# reduce 579 omitted

# reduce 580 omitted

# reduce 581 omitted

# reduce 582 omitted

# reduce 583 omitted

# reduce 584 omitted

# reduce 585 omitted

# reduce 586 omitted

# reduce 587 omitted

# reduce 588 omitted

# reduce 589 omitted

def _reduce_590(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module Opal
