#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.11
# from Racc grammer file "".
#

require 'racc/parser.rb'
module Opal
  class Parser < Racc::Parser


##### State transition tables begin ###

clist = [
'63,64,65,8,51,-90,-93,543,57,58,203,204,566,61,270,59,60,62,23,24,66',
'67,-95,-505,-89,597,828,22,28,27,90,89,91,92,446,639,17,577,-88,-92',
'-91,-64,7,41,6,9,94,93,639,84,50,86,85,87,270,88,95,96,-90,81,82,270',
'38,39,101,784,678,-83,638,100,203,204,-508,710,587,639,-437,-94,-75',
'265,782,638,-95,-437,36,599,598,30,-505,566,52,298,299,54,744,32,566',
'-91,609,40,269,761,203,204,-92,566,-507,18,638,-505,-85,542,79,73,75',
'76,77,78,-90,265,-90,74,80,-90,566,101,-87,565,-81,56,100,-437,53,-507',
'-83,37,83,63,64,65,269,51,-80,-84,-83,57,58,269,535,-92,61,537,59,60',
'62,23,24,66,67,305,608,710,-82,401,22,28,27,90,89,91,92,-83,101,17,709',
'-507,579,100,-83,586,41,-86,265,94,93,760,84,50,86,85,87,305,88,95,96',
'597,81,82,101,38,39,655,101,100,565,639,200,100,656,101,-91,565,-91',
'201,100,-91,778,-92,101,-92,565,208,-92,100,212,-268,661,52,203,204',
'54,-84,-268,-90,252,73,40,101,638,565,864,-82,100,74,18,710,518,519',
'305,79,73,75,76,77,78,599,598,604,74,80,101,199,709,-268,907,100,56',
'777,-446,53,-268,908,37,83,63,64,65,575,51,597,-268,592,57,58,576,203',
'204,61,593,59,60,62,256,257,66,67,597,265,-84,602,841,255,28,27,90,89',
'91,92,-82,-80,217,397,398,203,204,597,-88,41,-268,906,94,93,597,84,50',
'86,85,87,259,88,95,96,574,81,82,-84,38,39,562,599,598,610,-84,-274,101',
'-82,709,-445,-89,100,-274,619,-82,-321,-445,-508,599,598,208,-276,-321',
'212,561,-275,52,-441,-276,54,635,254,-275,225,-441,40,101,599,598,600',
'514,100,225,216,599,598,595,515,79,73,75,76,77,78,-82,-275,583,74,80',
'-446,-274,-90,-275,796,-445,56,772,202,53,522,-321,37,83,63,64,65,-276',
'51,262,101,-275,57,58,787,100,263,61,552,59,60,62,256,257,66,67,513',
'535,203,204,534,255,288,292,90,89,91,92,-88,-87,217,-275,582,771,101',
'615,-95,41,-94,100,94,93,793,84,50,86,85,87,-275,88,95,96,794,81,82',
'-275,38,39,549,225,229,234,235,236,231,233,241,242,237,238,-274,218',
'219,-445,552,239,240,-274,208,583,-445,212,-508,409,52,550,581,54,411',
'410,222,797,228,40,224,223,220,221,232,230,226,216,227,-275,798,-439',
'79,73,75,76,77,78,-439,552,525,74,80,-440,243,801,-227,526,101,56,-440',
'-274,53,100,-445,37,83,63,64,65,582,51,-444,101,-443,57,58,483,100,-444',
'61,-443,59,60,62,256,257,66,67,103,104,105,106,107,255,288,292,90,89',
'91,92,101,-437,217,442,444,100,481,615,-437,41,443,535,94,93,537,84',
'50,86,85,87,-276,88,95,96,787,81,82,-276,38,39,810,225,229,234,235,236',
'231,233,241,242,237,238,-274,218,219,692,811,239,240,-274,208,549,535',
'212,-508,537,52,813,444,54,546,787,222,573,228,40,224,223,220,221,232',
'230,226,216,227,-276,603,-434,79,73,75,76,77,78,-434,341,340,74,80,483',
'243,338,337,341,340,56,692,-274,53,750,522,37,83,63,64,65,-442,51,806',
'787,655,57,58,-442,341,340,61,656,59,60,62,256,257,66,67,103,104,105',
'106,107,255,288,292,90,89,91,92,607,620,217,-81,-86,338,337,341,340',
'41,-89,-94,94,93,539,84,50,86,85,87,305,88,95,96,538,81,82,-507,38,39',
'815,225,229,234,235,236,231,233,241,242,237,238,-84,218,219,806,787',
'239,240,-92,208,763,572,212,573,611,52,614,305,54,225,617,222,490,228',
'40,224,223,220,221,232,230,226,216,227,823,825,828,79,73,75,76,77,78',
'829,524,831,74,80,-254,243,523,-227,490,876,56,-256,618,53,265,305,37',
'83,63,64,65,274,51,516,833,834,57,58,835,95,96,61,509,59,60,62,256,257',
'66,67,103,104,105,106,107,255,288,292,90,89,91,92,508,507,217,338,337',
'341,340,-63,-255,41,265,842,94,93,843,84,50,86,85,87,259,88,95,96,844',
'81,82,265,38,39,265,225,229,234,235,236,231,233,241,242,237,238,746',
'218,219,244,225,239,240,847,208,848,678,212,490,850,52,483,-254,54,854',
'225,222,252,228,40,224,223,220,221,232,230,226,216,227,481,225,225,79',
'73,75,76,77,78,859,479,861,74,80,213,243,636,222,448,876,56,224,223',
'53,447,225,37,83,63,64,65,445,51,867,869,870,57,58,305,713,573,61,705',
'59,60,62,256,257,66,67,702,880,-257,412,700,255,288,292,90,89,91,92',
'881,883,217,338,337,341,340,399,690,41,388,-508,94,93,552,84,50,86,85',
'87,259,88,95,96,385,81,82,893,38,39,894,225,229,234,235,236,231,233',
'241,242,237,238,686,218,219,685,305,239,240,899,208,900,578,212,828',
'829,52,684,225,54,652,644,222,252,228,40,224,223,220,221,232,230,226',
'216,227,297,678,296,79,73,75,76,77,78,909,528,244,74,80,222,243,305',
'657,224,223,56,915,244,53,670,684,37,83,63,64,65,225,51,198,197,196',
'57,58,195,668,925,61,828,59,60,62,256,257,66,67,927,928,108,-75,667',
'255,288,292,90,89,91,92,222,97,217,665,224,223,220,221,,41,,,94,93,',
'84,50,86,85,87,,88,95,96,,81,82,,38,39,,225,229,234,235,236,231,233',
'241,242,237,238,,218,219,,,239,240,,208,,,212,,,52,,,54,,,222,,228,40',
'224,223,220,221,232,230,226,216,227,,,,79,73,75,76,77,78,,,,74,80,,243',
',,,,56,,,53,,,37,83,63,64,65,225,51,,,,57,58,,,,61,,59,60,62,23,24,66',
'67,,,,,,22,28,27,90,89,91,92,222,,17,,224,223,220,221,,41,,,94,93,,84',
'50,86,85,87,,88,95,96,,81,82,,38,39,,225,229,234,235,236,231,233,241',
'242,237,238,,218,219,,,239,240,,208,,,212,,,52,,,54,,,222,,228,40,224',
'223,220,221,232,230,226,18,227,,,,79,73,75,76,77,78,,,,74,80,,243,,',
',,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,256,257,66,67',
',,,,,255,28,27,90,89,91,92,,554,217,333,331,330,,332,,41,,,94,93,,84',
'50,86,85,87,259,88,95,96,,81,82,,38,39,,225,229,234,235,236,231,233',
'241,242,237,238,,218,219,,,239,240,,208,,,212,,,52,,,54,,254,222,,228',
'40,224,223,220,221,232,230,226,216,227,,,,79,73,75,76,77,78,,,,74,80',
',243,,,,,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,256,257',
'66,67,,,,,,255,288,292,90,89,91,92,,554,217,333,331,330,,332,,41,,,94',
'93,,84,50,86,85,87,259,88,95,96,,81,82,,38,39,,225,229,234,235,236,231',
'233,241,242,237,238,,218,219,,,239,240,,208,,,212,,,52,,,54,,644,222',
',228,40,224,223,220,221,232,230,226,216,227,,,,79,73,75,76,77,78,,,',
'74,80,,243,,,,,56,,,53,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,,225,229,234,235,236,231,233,241,242',
'237,238,,218,219,,,239,240,,36,,,30,,,52,,,54,,32,222,,228,40,224,223',
'220,221,232,230,226,18,227,,,,79,73,75,76,77,78,,,,74,80,,243,,,,,56',
',,53,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,',
',22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88,95',
'96,,81,82,,38,39,,225,229,234,235,236,231,233,241,242,237,238,,218,219',
',,239,240,,36,,,30,,,52,,,54,,32,222,,228,40,224,223,220,221,232,230',
'226,18,227,,,,79,73,75,76,77,78,,,,74,80,,243,,,,,56,,,53,,,37,83,63',
'64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91',
'92,,,17,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,225',
'229,234,235,236,231,233,241,242,237,238,,218,219,,,239,240,,208,,,212',
'213,,52,,,54,,,222,,228,40,224,223,220,221,232,230,226,18,227,,,,79',
'73,75,76,77,78,,,,74,80,,243,,,,,56,,,53,,,37,83,63,64,65,,51,,,,57',
'58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,217,,,,,',
',41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,225,229,234,235',
'236,231,233,241,242,237,238,,218,219,,,239,240,,208,,,212,,,52,,,54',
',,222,,228,40,224,223,220,221,232,230,226,216,227,,,,79,73,75,76,77',
'78,,,,74,80,,243,,,,,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59',
'60,62,256,257,66,67,,,,,,255,288,292,90,89,91,92,,,217,,,,,,,41,,,94',
'93,,84,50,86,85,87,259,88,95,96,,81,82,,38,39,,225,229,234,235,236,231',
'233,241,242,237,238,,218,219,,,239,240,,208,,,212,,,52,,,54,,,222,,228',
'40,224,223,220,221,232,230,226,216,227,,,,79,73,75,76,77,78,,,,74,80',
',243,,,,,56,,,53,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24',
'66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85',
'87,,88,95,96,,81,82,,38,39,,225,229,234,235,236,231,233,241,242,237',
'238,,218,219,,,239,240,,36,,,30,,,52,,,54,,32,222,,228,40,224,223,220',
'221,232,230,226,18,227,,,,79,73,75,76,77,78,,,,74,80,,243,,,,,56,,,53',
',,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255',
'28,27,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,259,88,95,96',
',81,82,,38,39,,225,229,234,235,236,231,233,241,242,237,238,,218,219',
',,239,240,,208,,,212,,,52,,,54,,254,222,252,228,40,224,223,220,221,232',
'230,226,216,227,,,,79,73,75,76,77,78,,,,74,80,,243,,,,,56,,,53,,,37',
'83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,28,27',
'90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,259,88,95,96,,81',
'82,,38,39,,225,229,234,235,236,231,233,241,242,237,238,,218,219,,,239',
'240,,208,,,212,,,52,,,54,,254,222,252,228,40,224,223,220,221,232,230',
'226,216,227,,,,79,73,75,76,77,78,,,,74,80,,243,,,,,56,,,53,,,37,83,63',
'64,65,,51,,,,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,28,27,90,89',
'91,92,,554,217,333,331,330,,332,,41,,,94,93,,84,50,86,85,87,259,88,95',
'96,,81,82,,38,39,554,,333,331,330,,332,,,557,,,,,,,,803,,,208,,,212',
'225,,52,,,54,,254,,252,,40,,,557,,239,240,,216,,,560,,79,73,75,76,77',
'78,,222,,74,80,224,223,220,221,,,56,,,53,,,37,83,63,64,65,8,51,,,,57',
'58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,554,17,333',
'331,330,,332,7,41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,',
',,,,,,,,557,,,,,,,,560,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79',
'73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,8,51,,,,57,58',
',,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41',
',9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,225,-528,-528,-528',
'-528,231,233,,,-528,-528,,,,,,239,240,,36,,,30,,,52,,,54,,32,222,,228',
'40,224,223,220,221,232,230,226,18,227,,,,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,256,257',
'66,67,,,,,,255,288,292,90,89,91,92,,,217,,,,,,,289,,,94,93,,84,50,86',
'85,87,,88,95,96,,81,82,324,,333,331,330,,332,,,,,,,,,,,,,,,,,696,,,212',
',,52,,,54,,,,,,335,,,,,,,,338,337,341,340,,79,73,75,76,77,78,765,,,74',
'80,,,,,,,56,,,53,,,293,83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23',
'24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86',
'85,87,,88,95,96,,81,82,,38,39,,225,-528,-528,-528,-528,231,233,,,-528',
'-528,,,,,,239,240,,36,,,30,,,52,,,54,,32,222,,228,40,224,223,220,221',
'232,230,226,18,227,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37',
'83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27',
'90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82',
',38,39,,225,-528,-528,-528,-528,231,233,,,-528,-528,,,,,,239,240,,36',
',,278,,,52,,,54,,32,222,,228,40,224,223,220,221,232,230,226,18,227,',
',,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,,51,,,,57',
'58,,,,61,,59,60,62,256,257,66,67,,,,,,255,288,292,90,89,91,92,,,217',
',,,,,,289,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,738,,333,331,330',
',332,,,,,,,,,,,,,,,,,286,,,283,,,52,,,54,,282,,,,335,732,,,,,,,338,337',
'341,340,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,293,83,63,64,65',
',51,,,,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,288,292,90,89,91',
'92,,,217,,,,,,,289,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,324,,333',
'331,330,,332,,,,,,,,,,,,,,,,,286,,,212,,,52,,,54,,,,,,335,,,,,,,,338',
'337,341,340,,79,73,75,76,77,78,,,,74,80,,,,295,,,56,,,53,,,293,83,63',
'64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89',
'91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39',
',225,-528,-528,-528,-528,231,233,,,-528,-528,,,,,,239,240,,36,,,30,',
',52,,,54,,32,222,,228,40,224,223,220,221,232,230,226,18,227,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,8,51,,,,57,58,,',
',61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,',
'9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,225,-528,-528,-528',
'-528,231,233,,,-528,-528,,,,,,239,240,,36,,,30,,,52,,,54,,32,222,,228',
'40,224,223,220,221,232,230,226,18,227,,,,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66',
'67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87',
',88,95,96,,81,82,,38,39,,225,229,234,235,236,231,233,241,242,237,238',
',-528,-528,,,239,240,,36,,,30,,,52,,,54,,32,222,,228,40,224,223,220',
'221,232,230,226,18,227,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,',
',37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255',
'288,292,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96',
',81,82,,38,39,,225,-528,-528,-528,-528,231,233,,,-528,-528,,,,,,239',
'240,,208,,,212,,,52,,,54,,644,222,252,228,40,224,223,220,221,232,230',
'226,216,227,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64',
'65,,51,,,,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,288,292,90,89',
'91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39',
',225,229,234,235,236,231,233,241,,237,238,,,,,,239,240,,208,,,212,,',
'52,,,54,,,222,,228,40,224,223,220,221,232,230,226,216,227,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,,61',
',59,60,62,256,257,66,67,,,,,,255,288,292,90,89,91,92,,,217,,,,,,,41',
',,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,225,,,,,,,,,,,,,,,',
'239,240,,208,,,212,,,52,,,54,,,222,,228,40,224,223,220,221,,,226,216',
'227,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,,51',
',,,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,288,292,90,89,91,92',
',,217,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,225',
'229,234,235,236,231,233,,,237,238,,,,,,239,240,,208,,,212,,,52,,,54',
',,222,,228,40,224,223,220,221,232,230,226,216,227,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60',
'62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84',
'50,86,85,87,,88,95,96,,81,82,,38,39,,225,,,,,,,,,,,,,,,,239,240,,36',
',,30,,,52,,,54,,32,222,,228,40,224,223,220,221,,,226,18,227,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,',
'61,,59,60,62,256,257,66,67,,,,,,255,28,27,90,89,91,92,,,217,,,,,,,41',
',,94,93,,84,50,86,85,87,259,88,95,96,,81,82,,38,39,,225,,,,,,,,,,,,',
',,,239,240,,208,,,212,,,52,,,54,,254,222,,228,40,224,223,220,221,,,226',
'216,227,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65',
',51,,,,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,28,27,90,89,91,92',
',,217,,,,,,,41,,,94,93,,84,50,86,85,87,259,88,95,96,,81,82,,38,39,,225',
',,,,,,,,,,,,,,,239,240,,208,,,212,,,52,,,54,,254,222,,228,40,224,223',
'220,221,,,226,216,227,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,',
'37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27',
'90,89,91,92,,,17,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,',
'38,39,,225,229,234,235,236,231,233,241,242,237,238,,-528,-528,,,239',
'240,,208,,,212,,,52,,,54,,,222,,228,40,224,223,220,221,232,230,226,18',
'227,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,,51',
',,,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,28,27,90,89,91,92,,',
'217,,,,,,,41,,,94,93,,84,50,86,85,87,259,88,95,96,,81,82,,38,39,,225',
',,,,,,,,,,,,,,,239,240,,208,,,212,,,52,,,54,,254,222,,228,40,224,223',
'220,221,,,,216,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83',
'63,64,65,,51,,,,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,288,292',
'90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,259,88,95,96,,81',
'82,,38,39,,225,,,,,,,,,,,,,,,,239,240,,208,,,212,,,52,,,54,,,222,,228',
'40,224,223,220,221,,,,216,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,',
'53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22',
'28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81',
'82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,18',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,8,51,',
',,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,',
',,,,7,41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,',
',,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78',
',,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,,84,50,86',
'85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54',
',,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37',
'83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90',
'89,91,92,,,17,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79',
'73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,,51,,,,57,58',
',,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41',
',,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,',
'208,,,212,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80',
'101,,,,,100,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,256',
'257,66,67,,,,,,255,288,292,90,89,91,92,,,217,,,,,,,289,,,94,93,,84,50',
'86,85,87,,88,95,96,,81,82,324,,333,331,330,,332,,,,,,,,,,,,,,,,,353',
',,30,,,52,,,54,,32,,,,335,319,,,,,,,338,337,341,340,,79,73,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,,,293,83,63,64,65,,51,,,,57,58,,,,61,,59,60',
'62,256,257,66,67,,,,,,255,288,292,90,89,91,92,,,217,,,,,,,289,,,94,93',
',84,50,86,85,358,,88,95,96,,81,82,738,,333,331,330,,332,,,,,,,,,,,,',
',364,,,359,,,212,,,52,,,54,,,,,,335,732,,,,,,,338,337,341,340,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,,,293,83,63,64,65,,51,,,,57,58,,',
',61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,',
'94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208',
',,212,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,',
',,,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,256,257,66',
'67,,,,,,255,288,292,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85',
'87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,',
'644,,,,40,,,,,,,,216,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,',
'37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,288',
'292,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81',
'82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,216',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,,51,,',
',57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,288,292,90,89,91,92,,',
'217,,,,,,,289,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,324,,333,331',
'330,,332,,,,,,,,,,,,,,,,,888,,,212,,,52,,,54,,,,,,335,,545,,,,,,338',
'337,341,340,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,293,83,63,64',
'65,,51,,,,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,288,292,90,89',
'91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,216,,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,',
'61,,59,60,62,256,257,66,67,,,,,,255,288,292,90,89,91,92,,,217,,,,,,',
'41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,',
',,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,216,,,,,79,73,75,76,77,78,,,,74',
'80,,,,,,,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,256,257',
'66,67,,,,,,255,28,27,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85',
'87,259,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54',
',254,,,,40,,,,,,,,216,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,',
',37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255',
'288,292,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,',
',216,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,8',
'51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,',
'17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,',
',,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59',
'60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,6,9,94,93',
',84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30',
',,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,401',
'56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,',
',,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95',
'96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,',
',,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65',
',51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,',
',17,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,',
',,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60',
'62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52',
',,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
',,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28',
'27,90,89,91,92,,,17,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,18,,,',
',79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,8,51,,,,57',
'58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7',
'41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,',
',,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74',
'80,,,,,,,56,,,53,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24',
'66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,6,9,94,93,,84,50,86,85',
'87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32',
',,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83',
'63,64,65,,51,,,,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,288,292',
'90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,216,,',
',,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,,51,,,,57',
'58,,,,61,,59,60,62,256,257,66,67,,,,,,255,288,292,90,89,91,92,,,217',
',,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,',
',,,,,,,,,208,,,212,,,52,,,54,,749,,,,40,,,,,,,,216,,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60',
'62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,217,,,,,,,41,,,94,93,,84',
'50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,',
'52,,,54,,,,,,40,,,,,,,,216,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,',
',53,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,',
'22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88,95',
'96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,',
',,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65',
',51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,',
',217,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,',
',,,,,,,,,,,,,,208,,,212,,,52,,,54,,418,,,,40,,,,,,,,216,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,,61',
',59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,217,,,,,,,41,,,94',
'93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,',
',212,,,52,,,54,,418,,,,40,,,,,,,,216,,,,,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66',
'67,,,,,,22,28,27,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87',
',88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,,,',
',40,,,,,,,,216,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83',
'63,64,65,,51,,,,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,28,27,90',
'89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,259,88,95,96,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,254,,,,40,,,,,,,,216',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,,51,,',
',57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,217,',
',,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,',
',,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,216,,,,,79,73,75,76,77,78',
',,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52',
',,54,,,,,,40,,,,,,,,216,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
',,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28',
'27,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81',
'82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,216',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,,51,,',
',57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,',
',,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,',
',,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,',
',,74,80,,,,,,,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,,84,50,86',
'85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54',
',,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37',
'83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,288',
'292,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81',
'82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,216',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,,51,,',
',57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,288,292,90,89,91,92,,',
'217,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,',
',,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,216,,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59',
'60,62,256,257,66,67,,,,,,255,288,292,90,89,91,92,,,217,,,,,,,41,,,94',
'93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,',
',212,,,52,,,54,,,,,,40,,,,,,,,216,,,,,79,73,75,76,77,78,,,,74,80,,,',
',,,56,,,53,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67',
',,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40',
',,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64',
'65,,51,,,,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,288,292,90,89',
'91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,216,,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,8,51,,,,57,58,,',
',61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,',
'9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,',
'36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66',
'67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87',
',88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,',
',40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63',
'64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91',
'92,,,17,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,',
',,,,,,,,,,,,,,,,,208,,,212,,450,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,',
'61,,59,60,62,256,257,66,67,,,,,,255,288,292,90,89,91,92,,,217,,,,,,',
'41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,',
',,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,216,,,,,79,73,75,76,77,78,,,,74',
'80,,,,,,,56,,,53,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24',
'66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85',
'87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32',
',,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83',
'63,64,65,,51,,,,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,288,292',
'90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,216,,',
',,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,,51,,,,57',
'58,,,,61,,59,60,62,256,257,66,67,,,,,,255,288,292,90,89,91,92,,,217',
',,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,',
',,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,216,,,,,79,73,75,76,77,78',
',,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62',
'256,257,66,67,,,,,,255,288,292,90,89,91,92,,,217,,,,,,,41,,,94,93,,84',
'50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,',
'52,,,54,,,,,,40,,,,,,,,216,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,',
',53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,256,257,66,67,,,,',
',255,288,292,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40',
',,,,,,,216,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64',
'65,,51,,,,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,288,292,90,89',
'91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,216,,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,',
'61,,59,60,62,256,257,66,67,,,,,,255,288,292,90,89,91,92,,,217,,,,,,',
'41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,',
',,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,216,,,,,79,73,75,76,77,78,,,,74',
'80,,,,,,,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,256,257',
'66,67,,,,,,255,288,292,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86',
'85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54',
',,,,,40,,,,,,,,216,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37',
'83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,288',
'292,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81',
'82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,216',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,,51,,',
',57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,288,292,90,89,91,92,,',
'217,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,',
',,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,216,,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59',
'60,62,256,257,66,67,,,,,,255,288,292,90,89,91,92,,,217,,,,,,,41,,,94',
'93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,',
',212,,,52,,,54,,,,,,40,,,,,,,,216,,,,,79,73,75,76,77,78,,,,74,80,,,',
',,,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,256,257,66',
'67,,,,,,255,288,292,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85',
'87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,',
',,,,40,,,,,,,,216,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37',
'83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,288',
'292,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81',
'82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,216',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,,51,,',
',57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,288,292,90,89,91,92,,',
'217,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,',
',,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,216,,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59',
'60,62,256,257,66,67,,,,,,255,288,292,90,89,91,92,,,217,,,,,,,41,,,94',
'93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,',
',212,,,52,,,54,,,,,,40,,,,,,,,216,,,,,79,73,75,76,77,78,,,,74,80,,,',
',,,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,256,257,66',
'67,,,,,,255,288,292,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85',
'87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,',
',,,,40,,,,,,,,216,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37',
'83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,288',
'292,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81',
'82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,216',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,,51,,',
',57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,288,292,90,89,91,92,,',
'217,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,',
',,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,216,,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59',
'60,62,256,257,66,67,,,,,,255,288,292,90,89,91,92,,,217,,,,,,,41,,,94',
'93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,',
',212,,,52,,,54,,,,,,40,,,,,,,,216,,,,,79,73,75,76,77,78,,,,74,80,,,',
',,,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,256,257,66',
'67,,,,,,255,288,292,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85',
'87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,',
',,,,40,,,,,,,,216,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37',
'83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,288',
'292,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81',
'82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,216',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,,51,,',
',57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,288,292,90,89,91,92,,',
'217,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,',
',,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,216,,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59',
'60,62,256,257,66,67,,,,,,255,288,292,90,89,91,92,,,217,,,,,,,41,,,94',
'93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,',
',212,,,52,,,54,,,,,,40,,,,,,,,216,,,,,79,73,75,76,77,78,,,,74,80,,,',
',,,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,256,257,66',
'67,,,,,,255,288,292,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85',
'87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,',
',,,,40,,,,,,,,216,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37',
'83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,288',
'292,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81',
'82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,216',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,,51,,',
',57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,288,292,90,89,91,92,,',
'217,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,',
',,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,216,,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59',
'60,62,256,257,66,67,,,,,,255,288,292,90,89,91,92,,,217,,,,,,,41,,,94',
'93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,',
',212,,,52,,,54,,,,,,40,,,,,,,,216,,,,,79,73,75,76,77,78,,,,74,80,,,',
',,,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67',
',,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40',
',,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64',
'65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92',
',,17,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,',
',,,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59',
'60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93',
',84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30',
',,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,401',
'56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,256,257,66,67',
',,,,,255,288,292,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87',
',88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,,,',
',40,,,,,,,,216,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83',
'63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90',
'89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79',
'73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,,51,,,,57,58',
',,,61,,59,60,62,256,257,66,67,,,,,,255,288,292,90,89,91,92,,,217,,,',
',,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,',
',,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,216,,,,,79,73,75,76,77,78,',
',,74,80,,,,,,,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62',
'256,257,66,67,,,,,,255,288,292,90,89,91,92,,,217,,,,,,,41,,,94,93,,84',
'50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,',
'52,,,54,,,,,,40,,,,,,,,216,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,',
',53,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,',
'22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88,95',
'96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,',
',,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65',
',51,,,,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,288,292,90,89,91',
'92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,',
',,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,216,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,8,51,,,,57,58,,,,61',
',59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94',
'93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,',
'30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,',
',,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,256,257,66,67',
',,,,,255,28,27,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,259',
'88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,254',
',252,,40,,,,,,,,216,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37',
'83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,28,27',
'90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,259,88,95,96,,81',
'82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,499,,,54,,254,,252,,40,,,',
',,,,216,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65',
',51,,,,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,28,27,90,89,91,92',
',,217,,,,,,,41,,,94,93,,84,50,86,85,87,259,88,95,96,,81,82,,38,39,,',
',,,,,,,,,,,,,,,,,,208,,,212,,503,52,,,54,,254,,252,,40,,,,,,,,216,,',
',,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,,51,,,,57',
'58,,,,61,,59,60,62,256,257,66,67,,,,,,255,288,292,90,89,91,92,,,217',
',,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,',
',,,,,,,,,208,,,212,,,52,,,54,,254,,,,40,,,,,,,,216,,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60',
'62,256,257,66,67,,,,,,255,28,27,90,89,91,92,,,217,,,,,,,41,,,94,93,',
'84,50,86,85,87,259,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,',
'212,,,52,,,54,,644,,252,,40,,,,,,,,216,,,,,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,256,257',
'66,67,,,,,,255,288,292,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86',
'85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54',
',,,,,40,,,,,,,,216,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37',
'83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27',
'90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,36,,,278,,,52,,,54,,32,,,,40,,,,,,,,18,,',
',,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,,51,,,,57',
'58,,,,61,,59,60,62,256,257,66,67,,,,,,255,288,292,90,89,91,92,,,217',
',,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,',
',,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,216,,,,,79,73,75,76,77,78',
',,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62',
'256,257,66,67,,,,,,255,288,292,90,89,91,92,,,217,,,,,,,41,,,94,93,,84',
'50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,',
'52,,,54,,,,,,40,,,,,,,,216,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,',
',53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,256,257,66,67,,,,',
',255,288,292,90,89,91,92,,,217,,,,,,,289,,,94,93,,84,50,86,85,358,,88',
'95,96,,81,82,738,,333,331,330,,332,,,,,,,,,,,,,,,,,359,,,212,,,52,,',
'54,,,,,,335,,,,,,,,338,337,341,340,,79,73,75,76,77,78,,,,74,80,,,,,',
',56,,,53,,,293,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,256,257,66,67',
',,,,,255,288,292,90,89,91,92,,,217,,,,,,,289,,,94,93,,84,50,86,85,87',
',88,95,96,,81,82,738,,333,331,330,,332,,,,,,,,,,,,,,,,,286,,,212,,,52',
',,54,,,,,,335,,,,,,,,338,337,341,340,,79,73,75,76,77,78,,,,74,80,,,',
'511,,,56,,,53,,,293,83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24',
'66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85',
'87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,278,,,52,,,54,,32',
',,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83',
'63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90',
'89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79',
'73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,8,51,,,,57,58',
',,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41',
',9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,',
',36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,256,257',
'66,67,,,,,,255,288,292,90,89,91,92,,,217,,,,,,,289,,,94,93,,84,50,86',
'85,87,,88,95,96,,81,82,,,,,,,,,,,,,,,,,,,,,,,,286,,,283,,,52,,,54,,',
',,,,,,,,,,,,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,293,83,63',
'64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91',
'92,,,17,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,',
',,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,,61',
',59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93',
',84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212',
',,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56',
',,53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,256,257,66,67,,,',
',,255,288,292,90,89,91,92,,,217,,,,,,,289,,,94,93,,84,50,86,85,87,,88',
'95,96,,81,82,,,,,,,,,,,,,,,,,,,,,,,,286,,,283,,,52,,,54,,,,,,,,,,,,',
',,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,293,83,63,64,65,,51',
',,,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,288,292,90,89,91,92',
',,217,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,',
',,,,,,,,,,,,,,,208,,,212,,,52,,,54,,418,,,,40,,,,,,,,216,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,,61',
',59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,217,,,,,,,41,,,94',
'93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,',
',212,,,52,,,54,,,,,,40,,,,,,,,216,,,,,79,73,75,76,77,78,,,,74,80,,,',
',,,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,256,257,66',
'67,,,,,,255,288,292,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85',
'87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,',
',,,,40,,,,,,,,216,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37',
'83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,288',
'292,90,89,91,92,,,217,,,,,,,289,,,94,93,,84,50,86,85,87,,88,95,96,,81',
'82,,,,,,,,,,,,,,,,,,,,,,,,286,,,283,,,52,,,54,,,,,,,,,,,,,,,,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,,,293,83,63,64,65,,51,,,,57,58,,',
',61,,59,60,62,256,257,66,67,,,,,,255,288,292,90,89,91,92,,,217,,,,,',
',41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,',
',,,,208,,,212,,,52,,,54,,254,,,,40,,,,,,,,216,,,,,79,73,75,76,77,78',
',,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,',
'54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
',,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28',
'27,90,89,91,92,,,17,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,18,,,',
',79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,8,51,,,,57',
'58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7',
'41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,',
',,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74',
'80,,,,,,,56,,,53,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24',
'66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85',
'87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32',
',,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83',
'63,64,65,,51,,,,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,288,292',
'90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,528,,52,,,54,,,,,,40,,,,,,,,216',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,8,51,',
',,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,',
',,,,7,41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,',
',,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78',
',,,74,80,,,,,,,56,,,53,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62',
'256,257,66,67,,,,,,255,288,292,90,89,91,92,,,217,,,,,,,289,,,94,93,',
'84,50,86,85,87,,88,95,96,,81,82,,-527,,,,,,,-527,-527,-527,,,-527,-527',
'-527,,-527,,,,,,286,,,283,-527,,52,,,54,,,,,-527,-527,,-527,-527,-527',
'-527,-527,,,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,-511,,53,,,293,83',
'-511,-511,-511,-527,,-511,-511,-511,,-511,-527,,,,,265,-527,,-511,-511',
'-511,,,,,,,,,-511,-511,,-511,-511,-511,-511,-511,-527,,,,,,,,,,,,,-527',
',-527,,,-527,,,,,-511,-511,-511,-511,-511,-511,-511,-511,-511,-511,-511',
'-511,-511,-511,,,-511,-511,-511,,762,-511,,,-511,,,-511,,-511,,-511',
',-511,,-511,-511,-511,-511,-511,-511,-511,,-511,-511,-511,,,,,,,,,,',
',,-511,-511,-511,-511,-511,-511,,,-511,,-91,-511,-511,-511,,,,-511,-511',
',-511,,,,,,,,,-511,,,,,,,,,,,-511,-511,,-511,-511,-511,-511,-511,,,',
',,,,,,,,,,,,,,,,,,,,-511,-511,-511,-511,-511,-511,-511,-511,-511,-511',
'-511,-511,-511,-511,,,-511,-511,-511,,625,,,,-511,,,,,,,-511,,-511,',
'-511,-511,-511,-511,-511,-511,-511,,-511,-511,-511,,,,,,,,,,,,,-511',
'-511,,-83,-437,-511,,,-511,,-91,-437,-437,-437,,,-437,-437,-437,,-437',
',,,,,,,-437,,-437,-437,-437,,,,,,,,-437,-437,,-437,-437,-437,-437,-437',
',,,,,,,,,,,,,,,,,,,,,,,-437,-437,-437,-437,-437,-437,-437,-437,-437',
'-437,-437,-437,-437,-437,,,-437,-437,-437,,-437,-437,,,-437,,,-437,',
'-437,,-437,,-437,,-437,-437,-437,-437,-437,-437,-437,,-437,,-437,,,',
',,,,,,,,,-437,-437,-437,-437,-274,-437,,-437,-437,,-437,-274,-274,-274',
',,,-274,-274,,-274,,,,,,,,,,,,,,,,,,,,-274,-274,,-274,-274,-274,-274',
'-274,,,,,,,,,,,,,,,,,,,,,,,,-274,-274,-274,-274,-274,-274,-274,-274',
'-274,-274,-274,-274,-274,-274,,,-274,-274,-274,,628,,,,-274,,,,,,,-274',
',-274,,-274,-274,-274,-274,-274,-274,-274,,-274,,-274,,,,,,,,,,,,,-274',
'-274,,-85,-274,-274,,,-274,,-93,-274,-274,-274,,,-274,-274,-274,,-274',
',,,,,,,,,-274,-274,,,,,,,,,-274,-274,,-274,-274,-274,-274,-274,,,,,',
',,,,,,,,,,,,,,,,,,-274,-274,-274,-274,-274,-274,-274,-274,-274,-274',
'-274,-274,-274,-274,,,-274,-274,-274,,628,-274,,,-274,,,-274,,-274,',
'-274,,-274,,-274,-274,-274,-274,-274,-274,-274,,-274,,-274,,,,,,,,,',
',,,-274,-274,-274,-274,-434,-274,,,-274,,-93,-434,-434,-434,,,-434,-434',
'-434,,-434,,,,,,,,-434,,-434,-434,-434,,,,,,,,-434,-434,,-434,-434,-434',
'-434,-434,,,,,,,,,,,,,,,,,,,,,,,,-434,-434,-434,-434,-434,-434,-434',
'-434,-434,-434,-434,-434,-434,-434,,,-434,-434,-434,,-434,-434,,,-434',
',,-434,,-434,,-434,,-434,,-434,-434,-434,-434,-434,-434,-434,,-434,',
'-434,,,,,,,,,,,,,-434,-434,-434,-434,-513,-434,,-434,-434,,-434,-513',
'-513,-513,,,-513,-513,-513,,-513,,,,,,,,,-513,-513,-513,-513,,,,,,,',
'-513,-513,,-513,-513,-513,-513,-513,,,,,,,,,,,,,,,,,,,,,,,,-513,-513',
'-513,-513,-513,-513,-513,-513,-513,-513,-513,-513,-513,-513,,,-513,-513',
'-513,,,-513,,,-513,,,-513,,-513,,-513,,-513,,-513,-513,-513,-513,-513',
'-513,-513,,-513,-513,-513,,,,,,,,,,,,,-513,-513,-513,-513,-269,-513',
',-513,-513,,,-269,-269,-269,,,-269,-269,-269,,-269,,,,,,,,,,-269,-269',
'-269,,,,,,,,-269,-269,,-269,-269,-269,-269,-269,,,,,,,,,,,,,,,,,,,,',
',,,-269,-269,-269,-269,-269,-269,-269,-269,-269,-269,-269,-269,-269',
'-269,,,-269,-269,-269,,,-269,,,-269,,,-269,,-269,,-269,,-269,,-269,-269',
'-269,-269,-269,-269,-269,,-269,,-269,,,,,,,,,,,,,-269,-269,-269,-269',
'-512,-269,,-269,-269,,,-512,-512,-512,,,-512,-512,-512,,-512,,,,,,,',
',-512,-512,-512,-512,,,,,,,,-512,-512,,-512,-512,-512,-512,-512,,,,',
',,,,,,,,,,,,,,,,,,,-512,-512,-512,-512,-512,-512,-512,-512,-512,-512',
'-512,-512,-512,-512,,,-512,-512,-512,,,-512,,,-512,,,-512,,-512,,-512',
',-512,,-512,-512,-512,-512,-512,-512,-512,,-512,-512,-512,,,,,,,,,,',
',,-512,-512,-512,-512,-282,-512,,-512,-512,,,-282,-282,-282,,,-282,-282',
'-282,,-282,,,,,,,,,,-282,-282,,,,,,,,,-282,-282,,-282,-282,-282,-282',
'-282,,,,,,,,,,,,,,,,,,,,,,,,-282,-282,-282,-282,-282,-282,-282,-282',
'-282,-282,-282,-282,-282,-282,,,-282,-282,-282,,,-282,,274,-282,,,-282',
',-282,,-282,,-282,,-282,-282,-282,-282,-282,-282,-282,,-282,,-282,,',
',,,,,,,,,,-282,-282,-282,-282,-370,-282,,,-282,,,-370,-370,-370,,,-370',
'-370,-370,,-370,,,,,,,,,-370,-370,-370,,,,,,,,,-370,-370,,-370,-370',
'-370,-370,-370,,,,,,,,,,,,,,,,,,,,,,,,-370,-370,-370,-370,-370,-370',
'-370,-370,-370,-370,-370,-370,-370,-370,,,-370,-370,-370,,,-370,,265',
'-370,,,-370,,-370,,-370,,-370,,-370,-370,-370,-370,-370,-370,-370,,-370',
'-370,-370,,,,,,,,,,,,,-370,-370,-370,-370,-527,-370,,,-370,,,-527,-527',
'-527,,,-527,-527,-527,,-527,,,,,,,,,-527,-527,-527,,,,,,,,,-527,-527',
',-527,-527,-527,-527,-527,,,,,,,,,,,,,,,,,,,,,,,,-527,-527,-527,-527',
'-527,-527,-527,-527,-527,-527,-527,-527,-527,-527,,,-527,-527,-527,',
',-527,,265,-527,,,-527,,-527,,-527,,-527,,-527,-527,-527,-527,-527,-527',
'-527,,-527,-527,-527,,,,,,,,,,,,,-527,-527,-527,-527,-527,-527,,,-527',
',,-527,-527,-527,,,-527,-527,-527,,-527,,,,,,,,,,-527,,,,,,,,,,-527',
'-527,,-527,-527,-527,-527,-527,,,,,,717,430,,,718,,,,,,,,,142,143,,139',
'121,122,123,130,127,129,,,124,125,,,-527,144,145,131,132,,,-527,,,265',
',265,-527,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119,,',
'146,-527,,,,,,,,,,,,,-527,,-527,,,-527,156,167,157,180,153,173,163,162',
'188,191,178,161,160,155,181,189,190,165,154,168,172,174,166,159,,,,175',
'182,177,176,169,179,164,152,171,170,183,184,185,186,187,151,158,149',
'150,147,148,,111,113,,,112,,,,,,,,,142,143,,139,121,122,123,130,127',
'129,,,124,125,,,,144,145,131,132,,,,,,,,,,,,,136,135,,120,141,138,137',
'133,134,128,126,118,140,119,,,146,192,,,,,,,,,,80,156,167,157,180,153',
'173,163,162,188,191,178,161,160,155,181,189,190,165,154,168,172,174',
'166,159,,,,175,182,177,176,169,179,164,152,171,170,183,184,185,186,187',
'151,158,149,150,147,148,,111,113,110,,112,,,,,,,,,142,143,,139,121,122',
'123,130,127,129,,,124,125,,,,144,145,131,132,,,,,,,,,,,,,136,135,,120',
'141,138,137,133,134,128,126,118,140,119,,,146,192,,,,,,,,,,80,156,167',
'157,180,153,173,163,162,188,191,178,161,160,155,181,189,190,165,154',
'168,172,174,166,159,,,,175,182,177,176,169,179,164,152,171,170,183,184',
'185,186,187,151,158,149,150,147,148,,111,113,,,112,,,,,,,,,142,143,',
'139,121,122,123,130,127,129,,,124,125,,,,144,145,131,132,,,,,,,,,,,',
',136,135,,120,141,138,137,133,134,128,126,118,140,119,,,146,192,,,,',
',,,,,80,156,167,157,180,153,173,163,162,188,191,178,161,160,155,181',
'189,190,165,154,168,172,174,166,159,,,,175,182,177,176,169,179,164,152',
'171,170,183,184,185,186,187,151,158,149,150,147,148,,111,113,,,112,',
',,,,,,,142,143,,139,121,122,123,130,127,129,,,124,125,,,,144,145,131',
'132,,,,,,,,,,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119',
',,146,192,,,,,,,,,,80,156,167,157,180,153,173,163,162,188,191,178,161',
'160,155,181,189,190,165,154,168,172,174,166,159,,,,175,182,177,176,169',
'179,164,152,171,170,183,184,185,186,187,151,158,149,150,147,148,,111',
'113,,,112,,,,,,,,,142,143,,139,121,122,123,130,127,129,,,124,125,,,',
'144,145,131,132,,,,,,,,,,,,,136,135,,120,141,138,137,133,134,128,126',
'118,140,119,,,146,156,167,157,180,153,173,163,162,188,191,178,161,160',
'155,181,189,190,165,154,168,172,174,166,159,,,,175,182,177,176,169,179',
'164,152,171,170,183,184,185,186,187,151,158,149,150,147,148,,111,113',
'395,394,112,,396,,,,,,,142,143,,139,121,122,123,130,127,129,,,124,125',
',,,144,145,131,132,,,,,,,,,,,,,136,135,,120,141,138,137,133,134,128',
'126,118,140,119,,,146,156,167,157,180,153,173,163,162,188,191,178,161',
'160,155,181,189,190,165,154,168,172,174,166,159,,,,175,182,177,373,372',
'374,371,152,171,170,183,184,185,186,187,151,158,149,150,369,370,,367',
'113,86,85,368,,88,,,,,,,142,143,,139,121,122,123,130,127,129,,,124,125',
',,,144,145,131,132,,,,,,378,,,,,,,136,135,,120,141,138,137,133,134,128',
'126,118,140,119,,,146,156,167,157,180,153,173,163,162,188,191,178,161',
'160,155,181,189,190,165,154,168,172,174,166,159,,,,175,182,177,176,169',
'179,164,152,171,170,183,184,185,186,187,151,158,149,150,147,148,,111',
'113,395,394,112,,396,,,,,,,142,143,,139,121,122,123,130,127,129,,,124',
'125,,,,144,145,131,132,,,,,,,,,,,,,136,135,,120,141,138,137,133,134',
'128,126,118,140,119,432,436,146,,434,,,,,,,,,142,143,,139,121,122,123',
'130,127,129,,,124,125,,,,144,145,131,132,,,,,,,,,,,,,136,135,,120,141',
'138,137,133,134,128,126,118,140,119,672,430,146,,673,,,,,,,,,142,143',
',139,121,122,123,130,127,129,,,124,125,,,,144,145,131,132,,,,,,265,',
',,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119,426,430,146',
',427,,,,,,,,,142,143,,139,121,122,123,130,127,129,,,124,125,,,,144,145',
'131,132,,,,,,265,,,,,,,136,135,,120,141,138,137,133,134,128,126,118',
'140,119,675,436,146,,676,,,,,,,,,142,143,,139,121,122,123,130,127,129',
',,124,125,,,,144,145,131,132,,,,,,,,,,,,,136,135,,120,141,138,137,133',
'134,128,126,118,140,119,922,436,146,,923,,,,,,,,,142,143,,139,121,122',
'123,130,127,129,,,124,125,,,,144,145,131,132,,,,,,,,,,,,,136,135,,120',
'141,138,137,133,134,128,126,118,140,119,487,430,146,,488,,,,,,,,,142',
'143,,139,121,122,123,130,127,129,,,124,125,,,,144,145,131,132,,,,,,265',
',,,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119,724,436,146',
',856,,,,,,,,,142,143,,139,121,122,123,130,127,129,,,124,125,,,,144,145',
'131,132,,,,,,,,,,,,,136,135,,120,141,138,137,133,134,128,126,118,140',
'119,631,436,146,,632,,,,,,,,,142,143,,139,121,122,123,130,127,129,,',
'124,125,,,,144,145,131,132,,,,,,,,,,,,,136,135,,120,141,138,137,133',
'134,128,126,118,140,119,487,430,146,,488,,,,,,,,,142,143,,139,121,122',
'123,130,127,129,,,124,125,,,,144,145,131,132,,,,,,,,,,,,,136,135,,120',
'141,138,137,133,134,128,126,118,140,119,920,430,146,,921,,,,,,,,,142',
'143,,139,121,122,123,130,127,129,,,124,125,,,,144,145,131,132,,,,,,265',
',,,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119,629,430,146',
',630,,,,,,,,,142,143,,139,121,122,123,130,127,129,,,124,125,,,,144,145',
'131,132,,,,,,265,,,,,,,136,135,,120,141,138,137,133,134,128,126,118',
'140,119,631,436,146,,632,,,,,,,,,142,143,,139,121,122,123,130,127,129',
',,124,125,,,,144,145,131,132,,,,,,,,,,,,,136,135,,120,141,138,137,133',
'134,128,126,118,140,119,487,430,146,,488,,,,,,,,,142,143,,139,121,122',
'123,130,127,129,,,124,125,,,,144,145,131,132,,,,,,,,,,,,,136,135,,120',
'141,138,137,133,134,128,126,118,140,119,487,430,146,,488,,,,,,,,,142',
'143,,139,121,122,123,130,127,129,,,124,125,,,,144,145,131,132,,,,,,',
',,,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119,487,430,146',
',488,,,,,,,,,142,143,,139,121,122,123,130,127,129,,,124,125,,,,144,145',
'131,132,,,,,,,,,,,,,136,135,,120,141,138,137,133,134,128,126,118,140',
'119,719,436,146,,720,,,,,,,,,142,143,,139,121,122,123,130,127,129,,',
'124,125,,,,144,145,131,132,,,,,,,,,,,,,136,135,,120,141,138,137,133',
'134,128,126,118,140,119,724,436,146,,722,,,,,,,,,142,143,,139,121,122',
'123,130,127,129,,,124,125,,,,144,145,131,132,,,,,,,,,,,,,136,135,,120',
'141,138,137,133,134,128,126,118,140,119,629,430,146,,630,,,,,,,,,142',
'143,,139,121,122,123,130,127,129,,,124,125,,,,144,145,131,132,,,,,,265',
',,,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119,,,146' ]
        racc_action_table = arr = ::Array.new(24653, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'0,0,0,0,0,920,720,318,0,0,682,682,345,0,290,0,0,0,0,0,0,0,354,358,813',
'605,873,0,0,0,0,0,0,0,209,500,0,353,351,718,719,667,0,0,0,0,0,0,477',
'0,0,0,0,0,26,0,0,0,717,0,0,55,0,0,733,682,669,675,500,733,307,307,720',
'569,363,490,358,577,667,290,671,477,209,358,0,605,605,0,358,860,0,37',
'37,0,605,0,344,922,389,0,290,630,594,594,921,853,719,0,490,358,720,318',
'0,0,0,0,0,0,920,26,920,0,0,920,812,345,354,345,813,0,345,358,0,675,675',
'0,0,499,499,499,26,499,351,718,719,499,499,55,314,630,499,314,499,499',
'499,499,499,499,499,307,389,568,717,350,499,499,499,499,499,499,499',
'675,569,499,569,922,359,569,675,363,499,577,674,499,499,629,499,499',
'499,499,499,594,499,499,499,386,499,499,363,499,499,494,860,363,860',
'501,13,860,494,344,922,344,922,13,344,922,662,921,853,921,853,499,921',
'853,499,889,499,499,15,15,499,673,889,629,499,71,499,812,501,812,812',
'672,812,71,499,814,293,293,494,499,499,499,499,499,499,386,386,386,499',
'499,568,13,568,287,887,568,499,659,35,499,287,887,499,499,513,513,513',
'352,513,391,889,376,513,513,352,729,729,513,376,513,513,513,513,513',
'513,513,384,677,673,384,763,513,513,513,513,513,513,513,672,35,513,83',
'83,449,449,382,35,513,287,887,513,513,380,513,513,513,513,513,513,513',
'513,513,352,513,513,673,513,513,342,391,391,391,673,676,814,672,814',
'886,763,814,676,426,672,42,886,676,384,384,513,782,42,513,339,909,513',
'374,782,513,449,513,909,680,374,513,729,382,382,382,285,729,681,513',
'380,380,380,285,513,513,513,513,513,513,426,579,695,513,513,207,676',
'426,579,695,886,513,654,14,513,445,42,513,513,522,522,522,782,522,25',
'587,909,522,522,683,587,25,522,327,522,522,522,522,522,522,522,285,310',
'343,343,310,522,522,522,522,522,522,522,207,14,522,579,695,653,275,416',
'14,522,445,275,522,522,688,522,522,522,522,522,516,522,522,522,689,522',
'522,516,522,522,692,416,416,416,416,416,416,416,416,416,416,416,722',
'416,416,284,694,416,416,722,522,361,284,522,722,110,522,326,361,522',
'110,110,416,696,416,522,416,416,416,416,416,416,416,522,416,516,697',
'372,522,522,522,522,522,522,372,698,300,522,522,373,416,701,416,300',
'727,522,373,722,522,727,284,522,522,523,523,523,361,523,369,3,370,523',
'523,643,3,369,523,370,523,523,523,523,523,523,523,276,276,276,276,276',
'523,523,523,523,523,523,523,348,368,523,206,300,348,641,634,368,523',
'206,687,523,523,687,523,523,523,523,523,928,523,523,523,706,523,523',
'928,523,523,712,634,634,634,634,634,634,634,634,634,634,634,923,634',
'634,546,714,634,634,923,523,324,311,523,923,311,523,716,206,523,323',
'896,634,896,634,523,634,634,634,634,634,634,634,523,634,928,385,367',
'523,523,523,523,523,523,367,552,552,523,523,315,634,546,546,546,546',
'523,798,923,523,618,297,523,523,483,483,483,371,483,910,910,775,483',
'483,371,828,828,483,775,483,483,483,483,483,483,483,5,5,5,5,5,483,483',
'483,483,483,483,483,388,427,483,618,297,798,798,798,798,483,618,297',
'483,483,313,483,483,483,483,483,775,483,483,483,312,483,483,724,483',
'483,725,658,658,658,658,658,658,658,658,658,658,658,427,658,658,704',
'704,658,658,427,483,633,349,483,349,407,483,413,309,483,302,419,658',
'626,658,483,658,658,658,658,658,658,658,483,658,734,735,736,483,483',
'483,483,483,483,738,299,741,483,483,421,658,298,658,621,825,483,748',
'425,483,292,289,483,483,481,481,481,288,481,286,742,742,481,481,742',
'742,742,481,281,481,481,481,481,481,481,481,666,666,666,666,666,481',
'481,481,481,481,481,481,280,279,481,825,825,825,825,277,616,481,433',
'766,481,481,767,481,481,481,481,481,481,481,481,481,770,481,481,773',
'481,481,774,476,476,476,476,476,476,476,476,476,476,476,609,476,476',
'776,455,476,476,779,481,780,781,481,264,785,481,253,788,481,789,454',
'476,481,476,481,476,476,476,476,476,476,476,481,476,250,456,457,481',
'481,481,481,481,481,804,249,807,481,481,217,476,476,454,211,900,481',
'454,454,481,210,458,481,481,479,479,479,208,479,816,819,820,479,479',
'821,571,570,479,564,479,479,479,479,479,479,479,559,837,838,193,555',
'479,479,479,479,479,479,479,845,846,479,900,900,900,900,97,544,479,78',
'856,479,479,857,479,479,479,479,479,479,479,479,479,77,479,479,862,479',
'479,863,759,759,759,759,759,759,759,759,759,759,759,531,759,759,530',
'41,759,759,871,479,872,355,479,875,876,479,529,453,479,492,479,759,479',
'759,479,759,759,759,759,759,759,759,479,759,36,520,34,479,479,479,479',
'479,479,888,517,20,479,479,453,759,493,495,453,453,479,898,496,479,512',
'905,479,479,524,524,524,473,524,12,11,10,524,524,9,510,914,524,916,524',
'524,524,524,524,524,524,917,919,6,507,506,524,524,524,524,524,524,524',
'473,1,524,502,473,473,473,473,,524,,,524,524,,524,524,524,524,524,,524',
'524,524,,524,524,,524,524,,747,747,747,747,747,747,747,747,747,747,747',
',747,747,,,747,747,,524,,,524,,,524,,,524,,,747,,747,524,747,747,747',
'747,747,747,747,524,747,,,,524,524,524,524,524,524,,,,524,524,,747,',
',,,524,,,524,,,524,524,528,528,528,472,528,,,,528,528,,,,528,,528,528',
'528,528,528,528,528,,,,,,528,528,528,528,528,528,528,472,,528,,472,472',
'472,472,,528,,,528,528,,528,528,528,528,528,,528,528,528,,528,528,,528',
'528,,679,679,679,679,679,679,679,679,679,679,679,,679,679,,,679,679',
',528,,,528,,,528,,,528,,,679,,679,528,679,679,679,679,679,679,679,528',
'679,,,,528,528,528,528,528,528,,,,528,528,,679,,,,,528,,,528,,,528,528',
'906,906,906,,906,,,,906,906,,,,906,,906,906,906,906,906,906,906,,,,',
',906,906,906,906,906,906,906,,560,906,560,560,560,,560,,906,,,906,906',
',906,906,906,906,906,906,906,906,906,,906,906,,906,906,,752,752,752',
'752,752,752,752,752,752,752,752,,752,752,,,752,752,,906,,,906,,,906',
',,906,,906,752,,752,906,752,752,752,752,752,752,752,906,752,,,,906,906',
'906,906,906,906,,,,906,906,,752,,,,,906,,,906,,,906,906,534,534,534',
',534,,,,534,534,,,,534,,534,534,534,534,534,534,534,,,,,,534,534,534',
'534,534,534,534,,803,534,803,803,803,,803,,534,,,534,534,,534,534,534',
'534,534,534,534,534,534,,534,534,,534,534,,764,764,764,764,764,764,764',
'764,764,764,764,,764,764,,,764,764,,534,,,534,,,534,,,534,,534,764,',
'764,534,764,764,764,764,764,764,764,534,764,,,,534,534,534,534,534,534',
',,,534,534,,764,,,,,534,,,534,,,534,534,904,904,904,904,904,,,,904,904',
',,,904,,904,904,904,904,904,904,904,,,,,,904,904,904,904,904,904,904',
',,904,,,,,,904,904,,904,904,904,,904,904,904,904,904,,904,904,904,,904',
'904,,904,904,,840,840,840,840,840,840,840,840,840,840,840,,840,840,',
',840,840,,904,,,904,,,904,,,904,,904,840,,840,904,840,840,840,840,840',
'840,840,904,840,,,,904,904,904,904,904,904,,,,904,904,,840,,,,,904,',
',904,,,904,904,897,897,897,897,897,,,,897,897,,,,897,,897,897,897,897',
'897,897,897,,,,,,897,897,897,897,897,897,897,,,897,,,,,,897,897,,897',
'897,897,,897,897,897,897,897,,897,897,897,,897,897,,897,897,,424,424',
'424,424,424,424,424,424,424,424,424,,424,424,,,424,424,,897,,,897,,',
'897,,,897,,897,424,,424,897,424,424,424,424,424,424,424,897,424,,,,897',
'897,897,897,897,897,,,,897,897,,424,,,,,897,,,897,,,897,897,17,17,17',
',17,,,,17,17,,,,17,,17,17,17,17,17,17,17,,,,,,17,17,17,17,17,17,17,',
',17,,,,,,,17,,,17,17,,17,17,17,17,17,,17,17,17,,17,17,,17,17,,754,754',
'754,754,754,754,754,754,754,754,754,,754,754,,,754,754,,17,,,17,17,',
'17,,,17,,,754,,754,17,754,754,754,754,754,754,754,17,754,,,,17,17,17',
'17,17,17,,,,17,17,,754,,,,,17,,,17,,,17,17,18,18,18,,18,,,,18,18,,,',
'18,,18,18,18,18,18,18,18,,,,,,18,18,18,18,18,18,18,,,18,,,,,,,18,,,18',
'18,,18,18,18,18,18,,18,18,18,,18,18,,18,18,,757,757,757,757,757,757',
'757,757,757,757,757,,757,757,,,757,757,,18,,,18,,,18,,,18,,,757,,757',
'18,757,757,757,757,757,757,757,18,757,,,,18,18,18,18,18,18,,,,18,18',
',757,,,,,18,,,18,,,18,18,537,537,537,,537,,,,537,537,,,,537,,537,537',
'537,537,537,537,537,,,,,,537,537,537,537,537,537,537,,,537,,,,,,,537',
',,537,537,,537,537,537,537,537,537,537,537,537,,537,537,,537,537,,19',
'19,19,19,19,19,19,19,19,19,19,,19,19,,,19,19,,537,,,537,,,537,,,537',
',,19,,19,537,19,19,19,19,19,19,19,537,19,,,,537,537,537,537,537,537',
',,,537,537,,19,,,,,537,,,537,,,537,537,892,892,892,892,892,,,,892,892',
',,,892,,892,892,892,892,892,892,892,,,,,,892,892,892,892,892,892,892',
',,892,,,,,,892,892,,892,892,892,,892,892,892,892,892,,892,892,892,,892',
'892,,892,892,,527,527,527,527,527,527,527,527,527,527,527,,527,527,',
',527,527,,892,,,892,,,892,,,892,,892,527,,527,892,527,527,527,527,527',
'527,527,892,527,,,,892,892,892,892,892,892,,,,892,892,,527,,,,,892,',
',892,,,892,892,22,22,22,,22,,,,22,22,,,,22,,22,22,22,22,22,22,22,,,',
',,22,22,22,22,22,22,22,,,22,,,,,,,22,,,22,22,,22,22,22,22,22,22,22,22',
'22,,22,22,,22,22,,439,439,439,439,439,439,439,439,439,439,439,,439,439',
',,439,439,,22,,,22,,,22,,,22,,22,439,22,439,22,439,439,439,439,439,439',
'439,22,439,,,,22,22,22,22,22,22,,,,22,22,,439,,,,,22,,,22,,,22,22,23',
'23,23,,23,,,,23,23,,,,23,,23,23,23,23,23,23,23,,,,,,23,23,23,23,23,23',
'23,,,23,,,,,,,23,,,23,23,,23,23,23,23,23,23,23,23,23,,23,23,,23,23,',
'247,247,247,247,247,247,247,247,247,247,247,,247,247,,,247,247,,23,',
',23,,,23,,,23,,23,247,23,247,23,247,247,247,247,247,247,247,23,247,',
',,23,23,23,23,23,23,,,,23,23,,247,,,,,23,,,23,,,23,23,24,24,24,,24,',
',,24,24,,,,24,,24,24,24,24,24,24,24,,,,,,24,24,24,24,24,24,24,,702,24',
'702,702,702,,702,,24,,,24,24,,24,24,24,24,24,24,24,24,24,,24,24,,24',
'24,335,,335,335,335,,335,,,702,,,,,,,,702,,,24,,,24,461,,24,,,24,,24',
',24,,24,,,335,,461,461,,24,,,335,,24,24,24,24,24,24,,461,,24,24,461',
'461,461,461,,,24,,,24,,,24,24,542,542,542,542,542,,,,542,542,,,,542',
',542,542,542,542,542,542,542,,,,,,542,542,542,542,542,542,542,,557,542',
'557,557,557,,557,542,542,,542,542,542,,542,542,542,542,542,,542,542',
'542,,542,542,,542,542,,,,,,,,,,557,,,,,,,,557,,,542,,,542,,,542,,,542',
',542,,,,542,,,,,,,,542,,,,,542,542,542,542,542,542,,,,542,542,,,,,,',
'542,,,542,,,542,542,543,543,543,543,543,,,,543,543,,,,543,,543,543,543',
'543,543,543,543,,,,,,543,543,543,543,543,543,543,,,543,,,,,,543,543',
',543,543,543,,543,543,543,543,543,,543,543,543,,543,543,,543,543,,471',
'471,471,471,471,471,471,,,471,471,,,,,,471,471,,543,,,543,,,543,,,543',
',543,471,,471,543,471,471,471,471,471,471,471,543,471,,,,543,543,543',
'543,543,543,,,,543,543,,,,,,,543,,,543,,,543,543,549,549,549,,549,,',
',549,549,,,,549,,549,549,549,549,549,549,549,,,,,,549,549,549,549,549',
'549,549,,,549,,,,,,,549,,,549,549,,549,549,549,549,549,,549,549,549',
',549,549,638,,638,638,638,,638,,,,,,,,,,,,,,,,,549,,,549,,,549,,,549',
',,,,,638,,,,,,,,638,638,638,638,,549,549,549,549,549,549,638,,,549,549',
',,,,,,549,,,549,,,549,549,563,563,563,563,563,,,,563,563,,,,563,,563',
'563,563,563,563,563,563,,,,,,563,563,563,563,563,563,563,,,563,,,,,',
'563,563,,563,563,563,,563,563,563,563,563,,563,563,563,,563,563,,563',
'563,,467,467,467,467,467,467,467,,,467,467,,,,,,467,467,,563,,,563,',
',563,,,563,,563,467,,467,563,467,467,467,467,467,467,467,563,467,,,',
'563,563,563,563,563,563,,,,563,563,,,,,,,563,,,563,,,563,563,30,30,30',
'30,30,,,,30,30,,,,30,,30,30,30,30,30,30,30,,,,,,30,30,30,30,30,30,30',
',,30,,,,,,30,30,,30,30,30,,30,30,30,30,30,,30,30,30,,30,30,,30,30,,468',
'468,468,468,468,468,468,,,468,468,,,,,,468,468,,30,,,30,,,30,,,30,,30',
'468,,468,30,468,468,468,468,468,468,468,30,468,,,,30,30,30,30,30,30',
',,,30,30,,,,,,,30,,,30,,,30,30,31,31,31,,31,,,,31,31,,,,31,,31,31,31',
'31,31,31,31,,,,,,31,31,31,31,31,31,31,,,31,,,,,,,31,,,31,31,,31,31,31',
'31,31,,31,31,31,,31,31,590,,590,590,590,,590,,,,,,,,,,,,,,,,,31,,,31',
',,31,,,31,,31,,,,590,590,,,,,,,590,590,590,590,,31,31,31,31,31,31,,',
',31,31,,,,,,,31,,,31,,,31,31,32,32,32,,32,,,,32,32,,,,32,,32,32,32,32',
'32,32,32,,,,,,32,32,32,32,32,32,32,,,32,,,,,,,32,,,32,32,,32,32,32,32',
'32,,32,32,32,,32,32,550,,550,550,550,,550,,,,,,,,,,,,,,,,,32,,,32,,',
'32,,,32,,,,,,550,,,,,,,,550,550,550,550,,32,32,32,32,32,32,,,,32,32',
',,,32,,,32,,,32,,,32,32,567,567,567,567,567,,,,567,567,,,,567,,567,567',
'567,567,567,567,567,,,,,,567,567,567,567,567,567,567,,,567,,,,,,567',
'567,,567,567,567,,567,567,567,567,567,,567,567,567,,567,567,,567,567',
',469,469,469,469,469,469,469,,,469,469,,,,,,469,469,,567,,,567,,,567',
',,567,,567,469,,469,567,469,469,469,469,469,469,469,567,469,,,,567,567',
'567,567,567,567,,,,567,567,,,,,,,567,,,567,,,567,567,572,572,572,572',
'572,,,,572,572,,,,572,,572,572,572,572,572,572,572,,,,,,572,572,572',
'572,572,572,572,,,572,,,,,,572,572,,572,572,572,,572,572,572,572,572',
',572,572,572,,572,572,,572,572,,470,470,470,470,470,470,470,,,470,470',
',,,,,470,470,,572,,,572,,,572,,,572,,572,470,,470,572,470,470,470,470',
'470,470,470,572,470,,,,572,572,572,572,572,572,,,,572,572,,,,,,,572',
',,572,,,572,572,885,885,885,885,885,,,,885,885,,,,885,,885,885,885,885',
'885,885,885,,,,,,885,885,885,885,885,885,885,,,885,,,,,,885,885,,885',
'885,885,,885,885,885,885,885,,885,885,885,,885,885,,885,885,,451,451',
'451,451,451,451,451,451,451,451,451,,451,451,,,451,451,,885,,,885,,',
'885,,,885,,885,451,,451,885,451,451,451,451,451,451,451,885,451,,,,885',
'885,885,885,885,885,,,,885,885,,,,,,,885,,,885,,,885,885,883,883,883',
',883,,,,883,883,,,,883,,883,883,883,883,883,883,883,,,,,,883,883,883',
'883,883,883,883,,,883,,,,,,,883,,,883,883,,883,883,883,883,883,,883',
'883,883,,883,883,,883,883,,462,462,462,462,462,462,462,,,462,462,,,',
',,462,462,,883,,,883,,,883,,,883,,883,462,883,462,883,462,462,462,462',
'462,462,462,883,462,,,,883,883,883,883,883,883,,,,883,883,,,,,,,883',
',,883,,,883,883,38,38,38,,38,,,,38,38,,,,38,,38,38,38,38,38,38,38,,',
',,,38,38,38,38,38,38,38,,,38,,,,,,,38,,,38,38,,38,38,38,38,38,,38,38',
'38,,38,38,,38,38,,475,475,475,475,475,475,475,475,,475,475,,,,,,475',
'475,,38,,,38,,,38,,,38,,,475,,475,38,475,475,475,475,475,475,475,38',
'475,,,,38,38,38,38,38,38,,,,38,38,,,,,,,38,,,38,,,38,38,39,39,39,,39',
',,,39,39,,,,39,,39,39,39,39,39,39,39,,,,,,39,39,39,39,39,39,39,,,39',
',,,,,,39,,,39,39,,39,39,39,39,39,,39,39,39,,39,39,,39,39,,466,,,,,,',
',,,,,,,,,466,466,,39,,,39,,,39,,,39,,,466,,466,39,466,466,466,466,,',
'466,39,466,,,,39,39,39,39,39,39,,,,39,39,,,,,,,39,,,39,,,39,39,40,40',
'40,,40,,,,40,40,,,,40,,40,40,40,40,40,40,40,,,,,,40,40,40,40,40,40,40',
',,40,,,,,,,40,,,40,40,,40,40,40,40,40,,40,40,40,,40,40,,40,40,,474,474',
'474,474,474,474,474,,,474,474,,,,,,474,474,,40,,,40,,,40,,,40,,,474',
',474,40,474,474,474,474,474,474,474,40,474,,,,40,40,40,40,40,40,,,,40',
'40,,,,,,,40,,,40,,,40,40,868,868,868,868,868,,,,868,868,,,,868,,868',
'868,868,868,868,868,868,,,,,,868,868,868,868,868,868,868,,,868,,,,,',
'868,868,,868,868,868,,868,868,868,868,868,,868,868,868,,868,868,,868',
'868,,465,,,,,,,,,,,,,,,,465,465,,868,,,868,,,868,,,868,,868,465,,465',
'868,465,465,465,465,,,465,868,465,,,,868,868,868,868,868,868,,,,868',
'868,,,,,,,868,,,868,,,868,868,574,574,574,,574,,,,574,574,,,,574,,574',
'574,574,574,574,574,574,,,,,,574,574,574,574,574,574,574,,,574,,,,,',
',574,,,574,574,,574,574,574,574,574,574,574,574,574,,574,574,,574,574',
',464,,,,,,,,,,,,,,,,464,464,,574,,,574,,,574,,,574,,574,464,,464,574',
'464,464,464,464,,,464,574,464,,,,574,574,574,574,574,574,,,,574,574',
',,,,,,574,,,574,,,574,574,582,582,582,,582,,,,582,582,,,,582,,582,582',
'582,582,582,582,582,,,,,,582,582,582,582,582,582,582,,,582,,,,,,,582',
',,582,582,,582,582,582,582,582,582,582,582,582,,582,582,,582,582,,463',
',,,,,,,,,,,,,,,463,463,,582,,,582,,,582,,,582,,582,463,,463,582,463',
'463,463,463,,,463,582,463,,,,582,582,582,582,582,582,,,,582,582,,,,',
',,582,,,582,,,582,582,52,52,52,,52,,,,52,52,,,,52,,52,52,52,52,52,52',
'52,,,,,,52,52,52,52,52,52,52,,,52,,,,,,,52,,,52,52,,52,52,52,52,52,',
'52,52,52,,52,52,,52,52,,452,452,452,452,452,452,452,452,452,452,452',
',452,452,,,452,452,,52,,,52,,,52,,,52,,,452,,452,52,452,452,452,452',
'452,452,452,52,452,,,,52,52,52,52,52,52,,,,52,52,,,,,,,52,,,52,,,52',
'52,53,53,53,,53,,,,53,53,,,,53,,53,53,53,53,53,53,53,,,,,,53,53,53,53',
'53,53,53,,,53,,,,,,,53,,,53,53,,53,53,53,53,53,53,53,53,53,,53,53,,53',
'53,,460,,,,,,,,,,,,,,,,460,460,,53,,,53,,,53,,,53,,53,460,,460,53,460',
'460,460,460,,,,53,,,,,53,53,53,53,53,53,,,,53,53,,,,,,,53,,,53,,,53',
'53,54,54,54,,54,,,,54,54,,,,54,,54,54,54,54,54,54,54,,,,,,54,54,54,54',
'54,54,54,,,54,,,,,,,54,,,54,54,,54,54,54,54,54,54,54,54,54,,54,54,,54',
'54,,459,,,,,,,,,,,,,,,,459,459,,54,,,54,,,54,,,54,,,459,,459,54,459',
'459,459,459,,,,54,,,,,54,54,54,54,54,54,,,,54,54,,,,,,,54,,,54,,,54',
'54,586,586,586,,586,,,,586,586,,,,586,,586,586,586,586,586,586,586,',
',,,,586,586,586,586,586,586,586,,,586,,,,,,,586,,,586,586,,586,586,586',
'586,586,,586,586,586,,586,586,,586,586,,,,,,,,,,,,,,,,,,,,,586,,,586',
',,586,,,586,,,,,,586,,,,,,,,586,,,,,586,586,586,586,586,586,,,,586,586',
',,,,,,586,,,586,,,586,586,865,865,865,865,865,,,,865,865,,,,865,,865',
'865,865,865,865,865,865,,,,,,865,865,865,865,865,865,865,,,865,,,,,',
'865,865,,865,865,865,,865,865,865,865,865,,865,865,865,,865,865,,865',
'865,,,,,,,,,,,,,,,,,,,,,865,,,865,,,865,,,865,,865,,,,865,,,,,,,,865',
',,,,865,865,865,865,865,865,,,,865,865,,,,,,,865,,,865,,,865,865,57',
'57,57,,57,,,,57,57,,,,57,,57,57,57,57,57,57,57,,,,,,57,57,57,57,57,57',
'57,,,57,,,,,,,57,,,57,57,,57,57,57,57,57,,57,57,57,,57,57,,57,57,,,',
',,,,,,,,,,,,,,,,,57,,,57,,,57,,,57,,,,,,57,,,,,,,,57,,,,,57,57,57,57',
'57,57,,,,57,57,,,,,,,57,,,57,,,57,57,58,58,58,,58,,,,58,58,,,,58,,58',
'58,58,58,58,58,58,,,,,,58,58,58,58,58,58,58,,,58,,,,,,,58,,,58,58,,58',
'58,58,58,58,,58,58,58,,58,58,,58,58,,,,,,,,,,,,,,,,,,,,,58,,,58,,,58',
',,58,,,,,,58,,,,,,,,58,,,,,58,58,58,58,58,58,,,,58,58,,,,,,,58,,,58',
',,58,58,61,61,61,,61,,,,61,61,,,,61,,61,61,61,61,61,61,61,,,,,,61,61',
'61,61,61,61,61,,,61,,,,,,,61,,,61,61,,61,61,61,61,61,,61,61,61,,61,61',
',61,61,,,,,,,,,,,,,,,,,,,,,61,,,61,,,61,,,61,,,,,,61,,,,,,,,61,,,,,61',
'61,61,61,61,61,,,,61,61,61,,,,,61,61,,,61,,,61,61,62,62,62,,62,,,,62',
'62,,,,62,,62,62,62,62,62,62,62,,,,,,62,62,62,62,62,62,62,,,62,,,,,,',
'62,,,62,62,,62,62,62,62,62,,62,62,62,,62,62,56,,56,56,56,,56,,,,,,,',
',,,,,,,,,62,,,62,,,62,,,62,,62,,,,56,56,,,,,,,56,56,56,56,,62,62,62',
'62,62,62,,,,62,62,,,,,,,62,,,62,,,62,62,63,63,63,,63,,,,63,63,,,,63',
',63,63,63,63,63,63,63,,,,,,63,63,63,63,63,63,63,,,63,,,,,,,63,,,63,63',
',63,63,63,63,63,,63,63,63,,63,63,879,,879,879,879,,879,,,,,,,,,,,,,',
'63,,,63,,,63,,,63,,,63,,,,,,879,879,,,,,,,879,879,879,879,,63,63,63',
'63,63,63,,,,63,63,,,,,,,63,,,63,,,63,63,588,588,588,,588,,,,588,588',
',,,588,,588,588,588,588,588,588,588,,,,,,588,588,588,588,588,588,588',
',,588,,,,,,,588,,,588,588,,588,588,588,588,588,,588,588,588,,588,588',
',588,588,,,,,,,,,,,,,,,,,,,,,588,,,588,,,588,,,588,,,,,,588,,,,,,,,588',
',,,,588,588,588,588,588,588,,,,588,588,,,,,,,588,,,588,,,588,588,864',
'864,864,,864,,,,864,864,,,,864,,864,864,864,864,864,864,864,,,,,,864',
'864,864,864,864,864,864,,,864,,,,,,,864,,,864,864,,864,864,864,864,864',
',864,864,864,,864,864,,864,864,,,,,,,,,,,,,,,,,,,,,864,,,864,,,864,',
',864,,864,,,,864,,,,,,,,864,,,,,864,864,864,864,864,864,,,,864,864,',
',,,,,864,,,864,,,864,864,448,448,448,,448,,,,448,448,,,,448,,448,448',
'448,448,448,448,448,,,,,,448,448,448,448,448,448,448,,,448,,,,,,,448',
',,448,448,,448,448,448,448,448,,448,448,448,,448,448,,448,448,,,,,,',
',,,,,,,,,,,,,,448,,,448,,,448,,,448,,,,,,448,,,,,,,,448,,,,,448,448',
'448,448,448,448,,,,448,448,,,,,,,448,,,448,,,448,448,854,854,854,,854',
',,,854,854,,,,854,,854,854,854,854,854,854,854,,,,,,854,854,854,854',
'854,854,854,,,854,,,,,,,854,,,854,854,,854,854,854,854,854,,854,854',
'854,,854,854,319,,319,319,319,,319,,,,,,,,,,,,,,,,,854,,,854,,,854,',
',854,,,,,,319,,319,,,,,,319,319,319,319,,854,854,854,854,854,854,,,',
'854,854,,,,,,,854,,,854,,,854,854,447,447,447,,447,,,,447,447,,,,447',
',447,447,447,447,447,447,447,,,,,,447,447,447,447,447,447,447,,,447',
',,,,,,447,,,447,447,,447,447,447,447,447,,447,447,447,,447,447,,447',
'447,,,,,,,,,,,,,,,,,,,,,447,,,447,,,447,,,447,,,,,,447,,,,,,,,447,,',
',,447,447,447,447,447,447,,,,447,447,,,,,,,447,,,447,,,447,447,446,446',
'446,,446,,,,446,446,,,,446,,446,446,446,446,446,446,446,,,,,,446,446',
'446,446,446,446,446,,,446,,,,,,,446,,,446,446,,446,446,446,446,446,',
'446,446,446,,446,446,,446,446,,,,,,,,,,,,,,,,,,,,,446,,,446,,,446,,',
'446,,,,,,446,,,,,,,,446,,,,,446,446,446,446,446,446,,,,446,446,,,,,',
',446,,,446,,,446,446,444,444,444,,444,,,,444,444,,,,444,,444,444,444',
'444,444,444,444,,,,,,444,444,444,444,444,444,444,,,444,,,,,,,444,,,444',
'444,,444,444,444,444,444,444,444,444,444,,444,444,,444,444,,,,,,,,,',
',,,,,,,,,,,444,,,444,,,444,,,444,,444,,,,444,,,,,,,,444,,,,,444,444',
'444,444,444,444,,,,444,444,,,,,,,444,,,444,,,444,444,615,615,615,,615',
',,,615,615,,,,615,,615,615,615,615,615,615,615,,,,,,615,615,615,615',
'615,615,615,,,615,,,,,,,615,,,615,615,,615,615,615,615,615,,615,615',
'615,,615,615,,615,615,,,,,,,,,,,,,,,,,,,,,615,,,615,,,615,,,615,,,,',
',615,,,,,,,,615,,,,,615,615,615,615,615,615,,,,615,615,,,,,,,615,,,615',
',,615,615,850,850,850,850,850,,,,850,850,,,,850,,850,850,850,850,850',
'850,850,,,,,,850,850,850,850,850,850,850,,,850,,,,,,850,850,,850,850',
'850,,850,850,850,850,850,,850,850,850,,850,850,,850,850,,,,,,,,,,,,',
',,,,,,,,850,,,850,,,850,,,850,,850,,,,850,,,,,,,,850,,,,,850,850,850',
'850,850,850,,,,850,850,,,,,,,850,,,850,,,850,850,99,99,99,99,99,,,,99',
'99,,,,99,,99,99,99,99,99,99,99,,,,,,99,99,99,99,99,99,99,,,99,,,,,,99',
'99,99,99,99,99,,99,99,99,99,99,,99,99,99,,99,99,,99,99,,,,,,,,,,,,,',
',,,,,,,99,,,99,,,99,,,99,,99,,,,99,,,,,,,,99,,,,,99,99,99,99,99,99,',
',,99,99,,,,,,99,99,,,99,,,99,99,103,103,103,,103,,,,103,103,,,,103,',
'103,103,103,103,103,103,103,,,,,,103,103,103,103,103,103,103,,,103,',
',,,,,103,,,103,103,,103,103,103,103,103,,103,103,103,,103,103,,103,103',
',,,,,,,,,,,,,,,,,,,,103,,,103,,,103,,,103,,,,,,103,,,,,,,,103,,,,,103',
'103,103,103,103,103,,,,103,103,,,,,,,103,,,103,,,103,103,104,104,104',
',104,,,,104,104,,,,104,,104,104,104,104,104,104,104,,,,,,104,104,104',
'104,104,104,104,,,104,,,,,,,104,,,104,104,,104,104,104,104,104,,104',
'104,104,,104,104,,104,104,,,,,,,,,,,,,,,,,,,,,104,,,104,,,104,,,104',
',,,,,104,,,,,,,,104,,,,,104,104,104,104,104,104,,,,104,104,,,,,,,104',
',,104,,,104,104,105,105,105,,105,,,,105,105,,,,105,,105,105,105,105',
'105,105,105,,,,,,105,105,105,105,105,105,105,,,105,,,,,,,105,,,105,105',
',105,105,105,105,105,,105,105,105,,105,105,,105,105,,,,,,,,,,,,,,,,',
',,,,105,,,105,,,105,,,105,,,,,,105,,,,,,,,105,,,,,105,105,105,105,105',
'105,,,,105,105,,,,,,,105,,,105,,,105,105,106,106,106,,106,,,,106,106',
',,,106,,106,106,106,106,106,106,106,,,,,,106,106,106,106,106,106,106',
',,106,,,,,,,106,,,106,106,,106,106,106,106,106,,106,106,106,,106,106',
',106,106,,,,,,,,,,,,,,,,,,,,,106,,,106,,,106,,,106,,,,,,106,,,,,,,,106',
',,,,106,106,106,106,106,106,,,,106,106,,,,,,,106,,,106,,,106,106,107',
'107,107,107,107,,,,107,107,,,,107,,107,107,107,107,107,107,107,,,,,',
'107,107,107,107,107,107,107,,,107,,,,,,107,107,,107,107,107,,107,107',
'107,107,107,,107,107,107,,107,107,,107,107,,,,,,,,,,,,,,,,,,,,,107,',
',107,,,107,,,107,,107,,,,107,,,,,,,,107,,,,,107,107,107,107,107,107',
',,,107,107,,,,,,,107,,,107,,,107,107,108,108,108,108,108,,,,108,108',
',,,108,,108,108,108,108,108,108,108,,,,,,108,108,108,108,108,108,108',
',,108,,,,,,108,108,108,108,108,108,,108,108,108,108,108,,108,108,108',
',108,108,,108,108,,,,,,,,,,,,,,,,,,,,,108,,,108,,,108,,,108,,108,,,',
'108,,,,,,,,108,,,,,108,108,108,108,108,108,,,,108,108,,,,,,,108,,,108',
',,108,108,841,841,841,,841,,,,841,841,,,,841,,841,841,841,841,841,841',
'841,,,,,,841,841,841,841,841,841,841,,,841,,,,,,,841,,,841,841,,841',
'841,841,841,841,,841,841,841,,841,841,,841,841,,,,,,,,,,,,,,,,,,,,,841',
',,841,,,841,,,841,,,,,,841,,,,,,,,841,,,,,841,841,841,841,841,841,,',
',841,841,,,,,,,841,,,841,,,841,841,617,617,617,,617,,,,617,617,,,,617',
',617,617,617,617,617,617,617,,,,,,617,617,617,617,617,617,617,,,617',
',,,,,,617,,,617,617,,617,617,617,617,617,,617,617,617,,617,617,,617',
'617,,,,,,,,,,,,,,,,,,,,,617,,,617,,,617,,,617,,617,,,,617,,,,,,,,617',
',,,,617,617,617,617,617,617,,,,617,617,,,,,,,617,,,617,,,617,617,619',
'619,619,,619,,,,619,619,,,,619,,619,619,619,619,619,619,619,,,,,,619',
'619,619,619,619,619,619,,,619,,,,,,,619,,,619,619,,619,619,619,619,619',
',619,619,619,,619,619,,619,619,,,,,,,,,,,,,,,,,,,,,619,,,619,,,619,',
',619,,,,,,619,,,,,,,,619,,,,,619,619,619,619,619,619,,,,619,619,,,,',
',,619,,,619,,,619,619,195,195,195,195,195,,,,195,195,,,,195,,195,195',
'195,195,195,195,195,,,,,,195,195,195,195,195,195,195,,,195,,,,,,195',
'195,,195,195,195,,195,195,195,195,195,,195,195,195,,195,195,,195,195',
',,,,,,,,,,,,,,,,,,,,195,,,195,,,195,,,195,,195,,,,195,,,,,,,,195,,,',
',195,195,195,195,195,195,,,,195,195,,,,,,,195,,,195,,,195,195,196,196',
'196,,196,,,,196,196,,,,196,,196,196,196,196,196,196,196,,,,,,196,196',
'196,196,196,196,196,,,196,,,,,,,196,,,196,196,,196,196,196,196,196,',
'196,196,196,,196,196,,196,196,,,,,,,,,,,,,,,,,,,,,196,,,196,,,196,,',
'196,,196,,,,196,,,,,,,,196,,,,,196,196,196,196,196,196,,,,196,196,,',
',,,,196,,,196,,,196,196,197,197,197,,197,,,,197,197,,,,197,,197,197',
'197,197,197,197,197,,,,,,197,197,197,197,197,197,197,,,197,,,,,,,197',
',,197,197,,197,197,197,197,197,,197,197,197,,197,197,,197,197,,,,,,',
',,,,,,,,,,,,,,197,,,197,,,197,,,197,,197,,,,197,,,,,,,,197,,,,,197,197',
'197,197,197,197,,,,197,197,,,,,,,197,,,197,,,197,197,198,198,198,,198',
',,,198,198,,,,198,,198,198,198,198,198,198,198,,,,,,198,198,198,198',
'198,198,198,,,198,,,,,,,198,,,198,198,,198,198,198,198,198,,198,198',
'198,,198,198,,198,198,,,,,,,,,,,,,,,,,,,,,198,,,198,,,198,,,198,,,,',
',198,,,,,,,,198,,,,,198,198,198,198,198,198,,,,198,198,,,,,,,198,,,198',
',,198,198,199,199,199,,199,,,,199,199,,,,199,,199,199,199,199,199,199',
'199,,,,,,199,199,199,199,199,199,199,,,199,,,,,,,199,,,199,199,,199',
'199,199,199,199,199,199,199,199,,199,199,,199,199,,,,,,,,,,,,,,,,,,',
',,199,,,199,,,199,,,199,,199,,,,199,,,,,,,,199,,,,,199,199,199,199,199',
'199,,,,199,199,,,,,,,199,,,199,,,199,199,620,620,620,,620,,,,620,620',
',,,620,,620,620,620,620,620,620,620,,,,,,620,620,620,620,620,620,620',
',,620,,,,,,,620,,,620,620,,620,620,620,620,620,,620,620,620,,620,620',
',620,620,,,,,,,,,,,,,,,,,,,,,620,,,620,,,620,,,620,,,,,,620,,,,,,,,620',
',,,,620,620,620,620,620,620,,,,620,620,,,,,,,620,,,620,,,620,620,625',
'625,625,,625,,,,625,625,,,,625,,625,625,625,625,625,625,625,,,,,,625',
'625,625,625,625,625,625,,,625,,,,,,,625,,,625,625,,625,625,625,625,625',
',625,625,625,,625,625,,625,625,,,,,,,,,,,,,,,,,,,,,625,,,625,,,625,',
',625,,,,,,625,,,,,,,,625,,,,,625,625,625,625,625,625,,,,625,625,,,,',
',,625,,,625,,,625,625,202,202,202,,202,,,,202,202,,,,202,,202,202,202',
'202,202,202,202,,,,,,202,202,202,202,202,202,202,,,202,,,,,,,202,,,202',
'202,,202,202,202,202,202,,202,202,202,,202,202,,202,202,,,,,,,,,,,,',
',,,,,,,,202,,,202,,,202,,,202,,,,,,202,,,,,,,,202,,,,,202,202,202,202',
'202,202,,,,202,202,,,,,,,202,,,202,,,202,202,203,203,203,,203,,,,203',
'203,,,,203,,203,203,203,203,203,203,203,,,,,,203,203,203,203,203,203',
'203,,,203,,,,,,,203,,,203,203,,203,203,203,203,203,,203,203,203,,203',
'203,,203,203,,,,,,,,,,,,,,,,,,,,,203,,,203,,,203,,,203,,,,,,203,,,,',
',,,203,,,,,203,203,203,203,203,203,,,,203,203,,,,,,,203,,,203,,,203',
'203,204,204,204,,204,,,,204,204,,,,204,,204,204,204,204,204,204,204',
',,,,,204,204,204,204,204,204,204,,,204,,,,,,,204,,,204,204,,204,204',
'204,204,204,,204,204,204,,204,204,,204,204,,,,,,,,,,,,,,,,,,,,,204,',
',204,,,204,,,204,,,,,,204,,,,,,,,204,,,,,204,204,204,204,204,204,,,',
'204,204,,,,,,,204,,,204,,,204,204,628,628,628,,628,,,,628,628,,,,628',
',628,628,628,628,628,628,628,,,,,,628,628,628,628,628,628,628,,,628',
',,,,,,628,,,628,628,,628,628,628,628,628,,628,628,628,,628,628,,628',
'628,,,,,,,,,,,,,,,,,,,,,628,,,628,,,628,,,628,,,,,,628,,,,,,,,628,,',
',,628,628,628,628,628,628,,,,628,628,,,,,,,628,,,628,,,628,628,829,829',
'829,,829,,,,829,829,,,,829,,829,829,829,829,829,829,829,,,,,,829,829',
'829,829,829,829,829,,,829,,,,,,,829,,,829,829,,829,829,829,829,829,',
'829,829,829,,829,829,,829,829,,,,,,,,,,,,,,,,,,,,,829,,,829,,,829,,',
'829,,,,,,829,,,,,,,,829,,,,,829,829,829,829,829,829,,,,829,829,,,,,',
',829,,,829,,,829,829,418,418,418,,418,,,,418,418,,,,418,,418,418,418',
'418,418,418,418,,,,,,418,418,418,418,418,418,418,,,418,,,,,,,418,,,418',
'418,,418,418,418,418,418,,418,418,418,,418,418,,418,418,,,,,,,,,,,,',
',,,,,,,,418,,,418,,,418,,,418,,,,,,418,,,,,,,,418,,,,,418,418,418,418',
'418,418,,,,418,418,,,,,,,418,,,418,,,418,418,730,730,730,730,730,,,',
'730,730,,,,730,,730,730,730,730,730,730,730,,,,,,730,730,730,730,730',
'730,730,,,730,,,,,,730,730,,730,730,730,,730,730,730,730,730,,730,730',
'730,,730,730,,730,730,,,,,,,,,,,,,,,,,,,,,730,,,730,,,730,,,730,,730',
',,,730,,,,,,,,730,,,,,730,730,730,730,730,730,,,,730,730,,,,,,,730,',
',730,,,730,730,636,636,636,,636,,,,636,636,,,,636,,636,636,636,636,636',
'636,636,,,,,,636,636,636,636,636,636,636,,,636,,,,,,,636,,,636,636,',
'636,636,636,636,636,,636,636,636,,636,636,,636,636,,,,,,,,,,,,,,,,,',
',,,636,,,636,,,636,,,636,,,,,,636,,,,,,,,636,,,,,636,636,636,636,636',
'636,,,,636,636,,,,,,,636,,,636,,,636,636,809,809,809,809,809,,,,809',
'809,,,,809,,809,809,809,809,809,809,809,,,,,,809,809,809,809,809,809',
'809,,,809,,,,,,809,809,,809,809,809,,809,809,809,809,809,,809,809,809',
',809,809,,809,809,,,,,,,,,,,,,,,,,,,,,809,,,809,,,809,,,809,,809,,,',
'809,,,,,,,,809,,,,,809,809,809,809,809,809,,,,809,809,,,,,,,809,,,809',
',,809,809,212,212,212,212,212,,,,212,212,,,,212,,212,212,212,212,212',
'212,212,,,,,,212,212,212,212,212,212,212,,,212,,,,,,212,212,,212,212',
'212,,212,212,212,212,212,,212,212,212,,212,212,,212,212,,,,,,,,,,,,',
',,,,,,,,212,,,212,,,212,,,212,,212,,,,212,,,,,,,,212,,,,,212,212,212',
'212,212,212,,,,212,212,,,,,,,212,,,212,,,212,212,213,213,213,,213,,',
',213,213,,,,213,,213,213,213,213,213,213,213,,,,,,213,213,213,213,213',
'213,213,,,213,,,,,,,213,,,213,213,,213,213,213,213,213,,213,213,213',
',213,213,,213,213,,,,,,,,,,,,,,,,,,,,,213,,,213,,213,213,,,213,,,,,',
'213,,,,,,,,213,,,,,213,213,213,213,213,213,,,,213,213,,,,,,,213,,,213',
',,213,213,216,216,216,,216,,,,216,216,,,,216,,216,216,216,216,216,216',
'216,,,,,,216,216,216,216,216,216,216,,,216,,,,,,,216,,,216,216,,216',
'216,216,216,216,,216,216,216,,216,216,,216,216,,,,,,,,,,,,,,,,,,,,,216',
',,216,,,216,,,216,,,,,,216,,,,,,,,216,,,,,216,216,216,216,216,216,,',
',216,216,,,,,,,216,,,216,,,216,216,808,808,808,808,808,,,,808,808,,',
',808,,808,808,808,808,808,808,808,,,,,,808,808,808,808,808,808,808,',
',808,,,,,,808,808,,808,808,808,,808,808,808,808,808,,808,808,808,,808',
'808,,808,808,,,,,,,,,,,,,,,,,,,,,808,,,808,,,808,,,808,,808,,,,808,',
',,,,,,808,,,,,808,808,808,808,808,808,,,,808,808,,,,,,,808,,,808,,,808',
'808,218,218,218,,218,,,,218,218,,,,218,,218,218,218,218,218,218,218',
',,,,,218,218,218,218,218,218,218,,,218,,,,,,,218,,,218,218,,218,218',
'218,218,218,,218,218,218,,218,218,,218,218,,,,,,,,,,,,,,,,,,,,,218,',
',218,,,218,,,218,,,,,,218,,,,,,,,218,,,,,218,218,218,218,218,218,,,',
'218,218,,,,,,,218,,,218,,,218,218,219,219,219,,219,,,,219,219,,,,219',
',219,219,219,219,219,219,219,,,,,,219,219,219,219,219,219,219,,,219',
',,,,,,219,,,219,219,,219,219,219,219,219,,219,219,219,,219,219,,219',
'219,,,,,,,,,,,,,,,,,,,,,219,,,219,,,219,,,219,,,,,,219,,,,,,,,219,,',
',,219,219,219,219,219,219,,,,219,219,,,,,,,219,,,219,,,219,219,220,220',
'220,,220,,,,220,220,,,,220,,220,220,220,220,220,220,220,,,,,,220,220',
'220,220,220,220,220,,,220,,,,,,,220,,,220,220,,220,220,220,220,220,',
'220,220,220,,220,220,,220,220,,,,,,,,,,,,,,,,,,,,,220,,,220,,,220,,',
'220,,,,,,220,,,,,,,,220,,,,,220,220,220,220,220,220,,,,220,220,,,,,',
',220,,,220,,,220,220,221,221,221,,221,,,,221,221,,,,221,,221,221,221',
'221,221,221,221,,,,,,221,221,221,221,221,221,221,,,221,,,,,,,221,,,221',
'221,,221,221,221,221,221,,221,221,221,,221,221,,221,221,,,,,,,,,,,,',
',,,,,,,,221,,,221,,,221,,,221,,,,,,221,,,,,,,,221,,,,,221,221,221,221',
'221,221,,,,221,221,,,,,,,221,,,221,,,221,221,222,222,222,,222,,,,222',
'222,,,,222,,222,222,222,222,222,222,222,,,,,,222,222,222,222,222,222',
'222,,,222,,,,,,,222,,,222,222,,222,222,222,222,222,,222,222,222,,222',
'222,,222,222,,,,,,,,,,,,,,,,,,,,,222,,,222,,,222,,,222,,,,,,222,,,,',
',,,222,,,,,222,222,222,222,222,222,,,,222,222,,,,,,,222,,,222,,,222',
'222,223,223,223,,223,,,,223,223,,,,223,,223,223,223,223,223,223,223',
',,,,,223,223,223,223,223,223,223,,,223,,,,,,,223,,,223,223,,223,223',
'223,223,223,,223,223,223,,223,223,,223,223,,,,,,,,,,,,,,,,,,,,,223,',
',223,,,223,,,223,,,,,,223,,,,,,,,223,,,,,223,223,223,223,223,223,,,',
'223,223,,,,,,,223,,,223,,,223,223,224,224,224,,224,,,,224,224,,,,224',
',224,224,224,224,224,224,224,,,,,,224,224,224,224,224,224,224,,,224',
',,,,,,224,,,224,224,,224,224,224,224,224,,224,224,224,,224,224,,224',
'224,,,,,,,,,,,,,,,,,,,,,224,,,224,,,224,,,224,,,,,,224,,,,,,,,224,,',
',,224,224,224,224,224,224,,,,224,224,,,,,,,224,,,224,,,224,224,225,225',
'225,,225,,,,225,225,,,,225,,225,225,225,225,225,225,225,,,,,,225,225',
'225,225,225,225,225,,,225,,,,,,,225,,,225,225,,225,225,225,225,225,',
'225,225,225,,225,225,,225,225,,,,,,,,,,,,,,,,,,,,,225,,,225,,,225,,',
'225,,,,,,225,,,,,,,,225,,,,,225,225,225,225,225,225,,,,225,225,,,,,',
',225,,,225,,,225,225,226,226,226,,226,,,,226,226,,,,226,,226,226,226',
'226,226,226,226,,,,,,226,226,226,226,226,226,226,,,226,,,,,,,226,,,226',
'226,,226,226,226,226,226,,226,226,226,,226,226,,226,226,,,,,,,,,,,,',
',,,,,,,,226,,,226,,,226,,,226,,,,,,226,,,,,,,,226,,,,,226,226,226,226',
'226,226,,,,226,226,,,,,,,226,,,226,,,226,226,227,227,227,,227,,,,227',
'227,,,,227,,227,227,227,227,227,227,227,,,,,,227,227,227,227,227,227',
'227,,,227,,,,,,,227,,,227,227,,227,227,227,227,227,,227,227,227,,227',
'227,,227,227,,,,,,,,,,,,,,,,,,,,,227,,,227,,,227,,,227,,,,,,227,,,,',
',,,227,,,,,227,227,227,227,227,227,,,,227,227,,,,,,,227,,,227,,,227',
'227,228,228,228,,228,,,,228,228,,,,228,,228,228,228,228,228,228,228',
',,,,,228,228,228,228,228,228,228,,,228,,,,,,,228,,,228,228,,228,228',
'228,228,228,,228,228,228,,228,228,,228,228,,,,,,,,,,,,,,,,,,,,,228,',
',228,,,228,,,228,,,,,,228,,,,,,,,228,,,,,228,228,228,228,228,228,,,',
'228,228,,,,,,,228,,,228,,,228,228,229,229,229,,229,,,,229,229,,,,229',
',229,229,229,229,229,229,229,,,,,,229,229,229,229,229,229,229,,,229',
',,,,,,229,,,229,229,,229,229,229,229,229,,229,229,229,,229,229,,229',
'229,,,,,,,,,,,,,,,,,,,,,229,,,229,,,229,,,229,,,,,,229,,,,,,,,229,,',
',,229,229,229,229,229,229,,,,229,229,,,,,,,229,,,229,,,229,229,230,230',
'230,,230,,,,230,230,,,,230,,230,230,230,230,230,230,230,,,,,,230,230',
'230,230,230,230,230,,,230,,,,,,,230,,,230,230,,230,230,230,230,230,',
'230,230,230,,230,230,,230,230,,,,,,,,,,,,,,,,,,,,,230,,,230,,,230,,',
'230,,,,,,230,,,,,,,,230,,,,,230,230,230,230,230,230,,,,230,230,,,,,',
',230,,,230,,,230,230,231,231,231,,231,,,,231,231,,,,231,,231,231,231',
'231,231,231,231,,,,,,231,231,231,231,231,231,231,,,231,,,,,,,231,,,231',
'231,,231,231,231,231,231,,231,231,231,,231,231,,231,231,,,,,,,,,,,,',
',,,,,,,,231,,,231,,,231,,,231,,,,,,231,,,,,,,,231,,,,,231,231,231,231',
'231,231,,,,231,231,,,,,,,231,,,231,,,231,231,232,232,232,,232,,,,232',
'232,,,,232,,232,232,232,232,232,232,232,,,,,,232,232,232,232,232,232',
'232,,,232,,,,,,,232,,,232,232,,232,232,232,232,232,,232,232,232,,232',
'232,,232,232,,,,,,,,,,,,,,,,,,,,,232,,,232,,,232,,,232,,,,,,232,,,,',
',,,232,,,,,232,232,232,232,232,232,,,,232,232,,,,,,,232,,,232,,,232',
'232,233,233,233,,233,,,,233,233,,,,233,,233,233,233,233,233,233,233',
',,,,,233,233,233,233,233,233,233,,,233,,,,,,,233,,,233,233,,233,233',
'233,233,233,,233,233,233,,233,233,,233,233,,,,,,,,,,,,,,,,,,,,,233,',
',233,,,233,,,233,,,,,,233,,,,,,,,233,,,,,233,233,233,233,233,233,,,',
'233,233,,,,,,,233,,,233,,,233,233,234,234,234,,234,,,,234,234,,,,234',
',234,234,234,234,234,234,234,,,,,,234,234,234,234,234,234,234,,,234',
',,,,,,234,,,234,234,,234,234,234,234,234,,234,234,234,,234,234,,234',
'234,,,,,,,,,,,,,,,,,,,,,234,,,234,,,234,,,234,,,,,,234,,,,,,,,234,,',
',,234,234,234,234,234,234,,,,234,234,,,,,,,234,,,234,,,234,234,235,235',
'235,,235,,,,235,235,,,,235,,235,235,235,235,235,235,235,,,,,,235,235',
'235,235,235,235,235,,,235,,,,,,,235,,,235,235,,235,235,235,235,235,',
'235,235,235,,235,235,,235,235,,,,,,,,,,,,,,,,,,,,,235,,,235,,,235,,',
'235,,,,,,235,,,,,,,,235,,,,,235,235,235,235,235,235,,,,235,235,,,,,',
',235,,,235,,,235,235,236,236,236,,236,,,,236,236,,,,236,,236,236,236',
'236,236,236,236,,,,,,236,236,236,236,236,236,236,,,236,,,,,,,236,,,236',
'236,,236,236,236,236,236,,236,236,236,,236,236,,236,236,,,,,,,,,,,,',
',,,,,,,,236,,,236,,,236,,,236,,,,,,236,,,,,,,,236,,,,,236,236,236,236',
'236,236,,,,236,236,,,,,,,236,,,236,,,236,236,237,237,237,,237,,,,237',
'237,,,,237,,237,237,237,237,237,237,237,,,,,,237,237,237,237,237,237',
'237,,,237,,,,,,,237,,,237,237,,237,237,237,237,237,,237,237,237,,237',
'237,,237,237,,,,,,,,,,,,,,,,,,,,,237,,,237,,,237,,,237,,,,,,237,,,,',
',,,237,,,,,237,237,237,237,237,237,,,,237,237,,,,,,,237,,,237,,,237',
'237,238,238,238,,238,,,,238,238,,,,238,,238,238,238,238,238,238,238',
',,,,,238,238,238,238,238,238,238,,,238,,,,,,,238,,,238,238,,238,238',
'238,238,238,,238,238,238,,238,238,,238,238,,,,,,,,,,,,,,,,,,,,,238,',
',238,,,238,,,238,,,,,,238,,,,,,,,238,,,,,238,238,238,238,238,238,,,',
'238,238,,,,,,,238,,,238,,,238,238,239,239,239,,239,,,,239,239,,,,239',
',239,239,239,239,239,239,239,,,,,,239,239,239,239,239,239,239,,,239',
',,,,,,239,,,239,239,,239,239,239,239,239,,239,239,239,,239,239,,239',
'239,,,,,,,,,,,,,,,,,,,,,239,,,239,,,239,,,239,,,,,,239,,,,,,,,239,,',
',,239,239,239,239,239,239,,,,239,239,,,,,,,239,,,239,,,239,239,240,240',
'240,,240,,,,240,240,,,,240,,240,240,240,240,240,240,240,,,,,,240,240',
'240,240,240,240,240,,,240,,,,,,,240,,,240,240,,240,240,240,240,240,',
'240,240,240,,240,240,,240,240,,,,,,,,,,,,,,,,,,,,,240,,,240,,,240,,',
'240,,,,,,240,,,,,,,,240,,,,,240,240,240,240,240,240,,,,240,240,,,,,',
',240,,,240,,,240,240,241,241,241,,241,,,,241,241,,,,241,,241,241,241',
'241,241,241,241,,,,,,241,241,241,241,241,241,241,,,241,,,,,,,241,,,241',
'241,,241,241,241,241,241,,241,241,241,,241,241,,241,241,,,,,,,,,,,,',
',,,,,,,,241,,,241,,,241,,,241,,,,,,241,,,,,,,,241,,,,,241,241,241,241',
'241,241,,,,241,241,,,,,,,241,,,241,,,241,241,242,242,242,,242,,,,242',
'242,,,,242,,242,242,242,242,242,242,242,,,,,,242,242,242,242,242,242',
'242,,,242,,,,,,,242,,,242,242,,242,242,242,242,242,,242,242,242,,242',
'242,,242,242,,,,,,,,,,,,,,,,,,,,,242,,,242,,,242,,,242,,,,,,242,,,,',
',,,242,,,,,242,242,242,242,242,242,,,,242,242,,,,,,,242,,,242,,,242',
'242,243,243,243,,243,,,,243,243,,,,243,,243,243,243,243,243,243,243',
',,,,,243,243,243,243,243,243,243,,,243,,,,,,,243,,,243,243,,243,243',
'243,243,243,,243,243,243,,243,243,,243,243,,,,,,,,,,,,,,,,,,,,,243,',
',243,,,243,,,243,,,,,,243,,,,,,,,243,,,,,243,243,243,243,243,243,,,',
'243,243,,,,,,,243,,,243,,,243,243,378,378,378,,378,,,,378,378,,,,378',
',378,378,378,378,378,378,378,,,,,,378,378,378,378,378,378,378,,,378',
',,,,,,378,,,378,378,,378,378,378,378,378,,378,378,378,,378,378,,378',
'378,,,,,,,,,,,,,,,,,,,,,378,,,378,,,378,,,378,,,,,,378,,,,,,,,378,,',
',,378,378,378,378,378,378,,,,378,378,,,,,,,378,,,378,,,378,378,806,806',
'806,,806,,,,806,806,,,,806,,806,806,806,806,806,806,806,,,,,,806,806',
'806,806,806,806,806,,,806,,,,,,,806,,,806,806,,806,806,806,806,806,',
'806,806,806,,806,806,,806,806,,,,,,,,,,,,,,,,,,,,,806,,,806,,,806,,',
'806,,,,,,806,,,,,,,,806,,,,,806,806,806,806,806,806,,,,806,806,,,,,',
',806,,,806,,,806,806,505,505,505,505,505,,,,505,505,,,,505,,505,505',
'505,505,505,505,505,,,,,,505,505,505,505,505,505,505,,,505,,,,,,505',
'505,,505,505,505,,505,505,505,505,505,,505,505,505,,505,505,,505,505',
',,,,,,,,,,,,,,,,,,,,505,,,505,,,505,,,505,,505,,,,505,,,,,,,,505,,,',
',505,505,505,505,505,505,,,,505,505,,,,,,505,505,,,505,,,505,505,252',
'252,252,,252,,,,252,252,,,,252,,252,252,252,252,252,252,252,,,,,,252',
'252,252,252,252,252,252,,,252,,,,,,,252,,,252,252,,252,252,252,252,252',
',252,252,252,,252,252,,252,252,,,,,,,,,,,,,,,,,,,,,252,,,252,,,252,',
',252,,,,,,252,,,,,,,,252,,,,,252,252,252,252,252,252,,,,252,252,,,,',
',,252,,,252,,,252,252,787,787,787,787,787,,,,787,787,,,,787,,787,787',
'787,787,787,787,787,,,,,,787,787,787,787,787,787,787,,,787,,,,,,787',
'787,,787,787,787,,787,787,787,787,787,,787,787,787,,787,787,,787,787',
',,,,,,,,,,,,,,,,,,,,787,,,787,,,787,,,787,,787,,,,787,,,,,,,,787,,,',
',787,787,787,787,787,787,,,,787,787,,,,,,,787,,,787,,,787,787,254,254',
'254,,254,,,,254,254,,,,254,,254,254,254,254,254,254,254,,,,,,254,254',
'254,254,254,254,254,,,254,,,,,,,254,,,254,254,,254,254,254,254,254,',
'254,254,254,,254,254,,254,254,,,,,,,,,,,,,,,,,,,,,254,,,254,,,254,,',
'254,,,,,,254,,,,,,,,254,,,,,254,254,254,254,254,254,,,,254,254,,,,,',
',254,,,254,,,254,254,259,259,259,,259,,,,259,259,,,,259,,259,259,259',
'259,259,259,259,,,,,,259,259,259,259,259,259,259,,,259,,,,,,,259,,,259',
'259,,259,259,259,259,259,,259,259,259,,259,259,,259,259,,,,,,,,,,,,',
',,,,,,,,259,,,259,,,259,,,259,,,,,,259,,,,,,,,259,,,,,259,259,259,259',
'259,259,,,,259,259,,,,,,,259,,,259,,,259,259,640,640,640,640,640,,,',
'640,640,,,,640,,640,640,640,640,640,640,640,,,,,,640,640,640,640,640',
'640,640,,,640,,,,,,640,640,,640,640,640,,640,640,640,640,640,,640,640',
'640,,640,640,,640,640,,,,,,,,,,,,,,,,,,,,,640,,,640,,,640,,,640,,640',
',,,640,,,,,,,,640,,,,,640,640,640,640,640,640,,,,640,640,,,,,,,640,',
',640,,,640,640,644,644,644,,644,,,,644,644,,,,644,,644,644,644,644,644',
'644,644,,,,,,644,644,644,644,644,644,644,,,644,,,,,,,644,,,644,644,',
'644,644,644,644,644,,644,644,644,,644,644,,644,644,,,,,,,,,,,,,,,,,',
',,,644,,,644,,,644,,,644,,,,,,644,,,,,,,,644,,,,,644,644,644,644,644',
'644,,,,644,644,,,,,,,644,,,644,,,644,644,651,651,651,651,651,,,,651',
'651,,,,651,,651,651,651,651,651,651,651,,,,,,651,651,651,651,651,651',
'651,,,651,,,,,,651,651,,651,651,651,,651,651,651,651,651,,651,651,651',
',651,651,,651,651,,,,,,,,,,,,,,,,,,,,,651,,,651,,,651,,,651,,651,,,',
'651,,,,,,,,651,,,,,651,651,651,651,651,651,,,,651,651,,,,,,,651,,,651',
',,651,651,265,265,265,,265,,,,265,265,,,,265,,265,265,265,265,265,265',
'265,,,,,,265,265,265,265,265,265,265,,,265,,,,,,,265,,,265,265,,265',
'265,265,265,265,265,265,265,265,,265,265,,265,265,,,,,,,,,,,,,,,,,,',
',,265,,,265,,,265,,,265,,265,,265,,265,,,,,,,,265,,,,,265,265,265,265',
'265,265,,,,265,265,,,,,,,265,,,265,,,265,265,266,266,266,,266,,,,266',
'266,,,,266,,266,266,266,266,266,266,266,,,,,,266,266,266,266,266,266',
'266,,,266,,,,,,,266,,,266,266,,266,266,266,266,266,266,266,266,266,',
'266,266,,266,266,,,,,,,,,,,,,,,,,,,,,266,,,266,,,266,,,266,,266,,266',
',266,,,,,,,,266,,,,,266,266,266,266,266,266,,,,266,266,,,,,,,266,,,266',
',,266,266,274,274,274,,274,,,,274,274,,,,274,,274,274,274,274,274,274',
'274,,,,,,274,274,274,274,274,274,274,,,274,,,,,,,274,,,274,274,,274',
'274,274,274,274,274,274,274,274,,274,274,,274,274,,,,,,,,,,,,,,,,,,',
',,274,,,274,,274,274,,,274,,274,,274,,274,,,,,,,,274,,,,,274,274,274',
'274,274,274,,,,274,274,,,,,,,274,,,274,,,274,274,777,777,777,,777,,',
',777,777,,,,777,,777,777,777,777,777,777,777,,,,,,777,777,777,777,777',
'777,777,,,777,,,,,,,777,,,777,777,,777,777,777,777,777,,777,777,777',
',777,777,,777,777,,,,,,,,,,,,,,,,,,,,,777,,,777,,,777,,,777,,777,,,',
'777,,,,,,,,777,,,,,777,777,777,777,777,777,,,,777,777,,,,,,,777,,,777',
',,777,777,657,657,657,,657,,,,657,657,,,,657,,657,657,657,657,657,657',
'657,,,,,,657,657,657,657,657,657,657,,,657,,,,,,,657,,,657,657,,657',
'657,657,657,657,657,657,657,657,,657,657,,657,657,,,,,,,,,,,,,,,,,,',
',,657,,,657,,,657,,,657,,657,,657,,657,,,,,,,,657,,,,,657,657,657,657',
'657,657,,,,657,657,,,,,,,657,,,657,,,657,657,762,762,762,,762,,,,762',
'762,,,,762,,762,762,762,762,762,762,762,,,,,,762,762,762,762,762,762',
'762,,,762,,,,,,,762,,,762,762,,762,762,762,762,762,,762,762,762,,762',
'762,,762,762,,,,,,,,,,,,,,,,,,,,,762,,,762,,,762,,,762,,,,,,762,,,,',
',,,762,,,,,762,762,762,762,762,762,,,,762,762,,,,,,,762,,,762,,,762',
'762,278,278,278,278,278,,,,278,278,,,,278,,278,278,278,278,278,278,278',
',,,,,278,278,278,278,278,278,278,,,278,,,,,,278,278,,278,278,278,,278',
'278,278,278,278,,278,278,278,,278,278,,278,278,,,,,,,,,,,,,,,,,,,,,278',
',,278,,,278,,,278,,278,,,,278,,,,,,,,278,,,,,278,278,278,278,278,278',
',,,278,278,,,,,,,278,,,278,,,278,278,761,761,761,,761,,,,761,761,,,',
'761,,761,761,761,761,761,761,761,,,,,,761,761,761,761,761,761,761,,',
'761,,,,,,,761,,,761,761,,761,761,761,761,761,,761,761,761,,761,761,',
'761,761,,,,,,,,,,,,,,,,,,,,,761,,,761,,,761,,,761,,,,,,761,,,,,,,,761',
',,,,761,761,761,761,761,761,,,,761,761,,,,,,,761,,,761,,,761,761,760',
'760,760,,760,,,,760,760,,,,760,,760,760,760,760,760,760,760,,,,,,760',
'760,760,760,760,760,760,,,760,,,,,,,760,,,760,760,,760,760,760,760,760',
',760,760,760,,760,760,,760,760,,,,,,,,,,,,,,,,,,,,,760,,,760,,,760,',
',760,,,,,,760,,,,,,,,760,,,,,760,760,760,760,760,760,,,,760,760,,,,',
',,760,,,760,,,760,760,366,366,366,,366,,,,366,366,,,,366,,366,366,366',
'366,366,366,366,,,,,,366,366,366,366,366,366,366,,,366,,,,,,,366,,,366',
'366,,366,366,366,366,366,,366,366,366,,366,366,823,,823,823,823,,823',
',,,,,,,,,,,,,,,,366,,,366,,,366,,,366,,,,,,823,,,,,,,,823,823,823,823',
',366,366,366,366,366,366,,,,366,366,,,,,,,366,,,366,,,366,366,282,282',
'282,,282,,,,282,282,,,,282,,282,282,282,282,282,282,282,,,,,,282,282',
'282,282,282,282,282,,,282,,,,,,,282,,,282,282,,282,282,282,282,282,',
'282,282,282,,282,282,732,,732,732,732,,732,,,,,,,,,,,,,,,,,282,,,282',
',,282,,,282,,,,,,732,,,,,,,,732,732,732,732,,282,282,282,282,282,282',
',,,282,282,,,,282,,,282,,,282,,,282,282,283,283,283,283,283,,,,283,283',
',,,283,,283,283,283,283,283,283,283,,,,,,283,283,283,283,283,283,283',
',,283,,,,,,283,283,,283,283,283,,283,283,283,283,283,,283,283,283,,283',
'283,,283,283,,,,,,,,,,,,,,,,,,,,,283,,,283,,,283,,,283,,283,,,,283,',
',,,,,,283,,,,,283,283,283,283,283,283,,,,283,283,,,,,,,283,,,283,,,283',
'283,663,663,663,663,663,,,,663,663,,,,663,,663,663,663,663,663,663,663',
',,,,,663,663,663,663,663,663,663,,,663,,,,,,663,663,,663,663,663,,663',
'663,663,663,663,,663,663,663,,663,663,,663,663,,,,,,,,,,,,,,,,,,,,,663',
',,663,,,663,,,663,,663,,,,663,,,,,,,,663,,,,,663,663,663,663,663,663',
',,,663,663,,,,,,,663,,,663,,,663,663,664,664,664,664,664,,,,664,664',
',,,664,,664,664,664,664,664,664,664,,,,,,664,664,664,664,664,664,664',
',,664,,,,,,664,664,,664,664,664,,664,664,664,664,664,,664,664,664,,664',
'664,,664,664,,,,,,,,,,,,,,,,,,,,,664,,,664,,,664,,,664,,664,,,,664,',
',,,,,,664,,,,,664,664,664,664,664,664,,,,664,664,,,,,,,664,,,664,,,664',
'664,668,668,668,,668,,,,668,668,,,,668,,668,668,668,668,668,668,668',
',,,,,668,668,668,668,668,668,668,,,668,,,,,,,668,,,668,668,,668,668',
'668,668,668,,668,668,668,,668,668,,,,,,,,,,,,,,,,,,,,,,,,668,,,668,',
',668,,,668,,,,,,,,,,,,,,,,,,,668,668,668,668,668,668,,,,668,668,,,,',
',,668,,,668,,,668,668,347,347,347,,347,,,,347,347,,,,347,,347,347,347',
'347,347,347,347,,,,,,347,347,347,347,347,347,347,,,347,,,,,,,347,,,347',
'347,,347,347,347,347,347,,347,347,347,,347,347,,347,347,,,,,,,,,,,,',
',,,,,,,,347,,,347,,,347,,,347,,,,,,347,,,,,,,,347,,,,,347,347,347,347',
'347,347,,,,347,347,,,,,,,347,,,347,,,347,347,346,346,346,,346,,,,346',
'346,,,,346,,346,346,346,346,346,346,346,,,,,,346,346,346,346,346,346',
'346,,,346,,,,,,,346,,,346,346,,346,346,346,346,346,,346,346,346,,346',
'346,,346,346,,,,,,,,,,,,,,,,,,,,,346,,,346,,,346,,,346,,,,,,346,,,,',
',,,346,,,,,346,346,346,346,346,346,,,,346,346,,,,,,,346,,,346,,,346',
'346,678,678,678,,678,,,,678,678,,,,678,,678,678,678,678,678,678,678',
',,,,,678,678,678,678,678,678,678,,,678,,,,,,,678,,,678,678,,678,678',
'678,678,678,,678,678,678,,678,678,,,,,,,,,,,,,,,,,,,,,,,,678,,,678,',
',678,,,678,,,,,,,,,,,,,,,,,,,678,678,678,678,678,678,,,,678,678,,,,',
',,678,,,678,,,678,678,684,684,684,,684,,,,684,684,,,,684,,684,684,684',
'684,684,684,684,,,,,,684,684,684,684,684,684,684,,,684,,,,,,,684,,,684',
'684,,684,684,684,684,684,,684,684,684,,684,684,,684,684,,,,,,,,,,,,',
',,,,,,,,684,,,684,,,684,,,684,,684,,,,684,,,,,,,,684,,,,,684,684,684',
'684,684,684,,,,684,684,,,,,,,684,,,684,,,684,684,750,750,750,,750,,',
',750,750,,,,750,,750,750,750,750,750,750,750,,,,,,750,750,750,750,750',
'750,750,,,750,,,,,,,750,,,750,750,,750,750,750,750,750,,750,750,750',
',750,750,,750,750,,,,,,,,,,,,,,,,,,,,,750,,,750,,,750,,,750,,,,,,750',
',,,,,,,750,,,,,750,750,750,750,750,750,,,,750,750,,,,,,,750,,,750,,',
'750,750,749,749,749,,749,,,,749,749,,,,749,,749,749,749,749,749,749',
'749,,,,,,749,749,749,749,749,749,749,,,749,,,,,,,749,,,749,749,,749',
'749,749,749,749,,749,749,749,,749,749,,749,749,,,,,,,,,,,,,,,,,,,,,749',
',,749,,,749,,,749,,,,,,749,,,,,,,,749,,,,,749,749,749,749,749,749,,',
',749,749,,,,,,,749,,,749,,,749,749,295,295,295,,295,,,,295,295,,,,295',
',295,295,295,295,295,295,295,,,,,,295,295,295,295,295,295,295,,,295',
',,,,,,295,,,295,295,,295,295,295,295,295,,295,295,295,,295,295,,,,,',
',,,,,,,,,,,,,,,,,,295,,,295,,,295,,,295,,,,,,,,,,,,,,,,,,,295,295,295',
'295,295,295,,,,295,295,,,,,,,295,,,295,,,295,295,715,715,715,,715,,',
',715,715,,,,715,,715,715,715,715,715,715,715,,,,,,715,715,715,715,715',
'715,715,,,715,,,,,,,715,,,715,715,,715,715,715,715,715,,715,715,715',
',715,715,,715,715,,,,,,,,,,,,,,,,,,,,,715,,,715,,,715,,,715,,715,,,',
'715,,,,,,,,715,,,,,715,715,715,715,715,715,,,,715,715,,,,,,,715,,,715',
',,715,715,743,743,743,743,743,,,,743,743,,,,743,,743,743,743,743,743',
'743,743,,,,,,743,743,743,743,743,743,743,,,743,,,,,,743,743,,743,743',
'743,,743,743,743,743,743,,743,743,743,,743,743,,743,743,,,,,,,,,,,,',
',,,,,,,,743,,,743,,,743,,,743,,743,,,,743,,,,,,,,743,,,,,743,743,743',
'743,743,743,,,,743,743,,,,,,,743,,,743,,,743,743,721,721,721,,721,,',
',721,721,,,,721,,721,721,721,721,721,721,721,,,,,,721,721,721,721,721',
'721,721,,,721,,,,,,,721,,,721,721,,721,721,721,721,721,,721,721,721',
',721,721,,721,721,,,,,,,,,,,,,,,,,,,,,721,,,721,,,721,,,721,,,,,,721',
',,,,,,,721,,,,,721,721,721,721,721,721,,,,721,721,,,,,,,721,,,721,,',
'721,721,726,726,726,726,726,,,,726,726,,,,726,,726,726,726,726,726,726',
'726,,,,,,726,726,726,726,726,726,726,,,726,,,,,,726,726,,726,726,726',
',726,726,726,726,726,,726,726,726,,726,726,,726,726,,,,,,,,,,,,,,,,',
',,,,726,,,726,,,726,,,726,,726,,,,726,,,,,,,,726,,,,,726,726,726,726',
'726,726,,,,726,726,,,,,,,726,,,726,,,726,726,731,731,731,731,731,,,',
'731,731,,,,731,,731,731,731,731,731,731,731,,,,,,731,731,731,731,731',
'731,731,,,731,,,,,,731,731,,731,731,731,,731,731,731,731,731,,731,731',
'731,,731,731,,731,731,,,,,,,,,,,,,,,,,,,,,731,,,731,,,731,,,731,,731',
',,,731,,,,,,,,731,,,,,731,731,731,731,731,731,,,,731,731,,,,,,,731,',
',731,,,731,731,304,304,304,,304,,,,304,304,,,,304,,304,304,304,304,304',
'304,304,,,,,,304,304,304,304,304,304,304,,,304,,,,,,,304,,,304,304,',
'304,304,304,304,304,,304,304,304,,304,304,,304,304,,,,,,,,,,,,,,,,,',
',,,304,,,304,304,,304,,,304,,,,,,304,,,,,,,,304,,,,,304,304,304,304',
'304,304,,,,304,304,,,,,,,304,,,304,,,304,304,306,306,306,306,306,,,',
'306,306,,,,306,,306,306,306,306,306,306,306,,,,,,306,306,306,306,306',
'306,306,,,306,,,,,,306,306,,306,306,306,,306,306,306,306,306,,306,306',
'306,,306,306,,306,306,,,,,,,,,,,,,,,,,,,,,306,,,306,,,306,,,306,,306',
',,,306,,,,,,,,306,,,,,306,306,306,306,306,306,,,,306,306,,,,,,,306,',
',306,,,306,306,511,511,511,,511,,,,511,511,,,,511,,511,511,511,511,511',
'511,511,,,,,,511,511,511,511,511,511,511,,,511,,,,,,,511,,,511,511,',
'511,511,511,511,511,,511,511,511,,511,511,,489,,,,,,,489,489,489,,,489',
'489,489,,489,,,,,,511,,,511,489,,511,,,511,,,,,489,489,,489,489,489',
'489,489,,,,,,,511,511,511,511,511,511,,,,511,511,,,,,,,511,631,,511',
',,511,511,631,631,631,489,,631,631,631,,631,489,,,,,489,489,,631,631',
'631,,,,,,,,,631,631,,631,631,631,631,631,489,,,,,,,,,,,,,489,,489,,',
'489,,,,,631,631,631,631,631,631,631,631,631,631,631,631,631,631,,,631',
'631,631,,631,631,,,631,,,631,,631,,631,,631,,631,631,631,631,631,631',
'631,,631,631,631,,,,,,,,,,,,,631,631,631,631,432,631,,,631,,631,432',
'432,432,,,,432,432,,432,,,,,,,,,432,,,,,,,,,,,432,432,,432,432,432,432',
'432,,,,,,,,,,,,,,,,,,,,,,,,432,432,432,432,432,432,432,432,432,432,432',
'432,432,432,,,432,432,432,,432,,,,432,,,,,,,432,,432,,432,432,432,432',
'432,432,432,,432,432,432,,,,,,,,,,,,,432,432,,432,87,432,,,432,,432',
'87,87,87,,,87,87,87,,87,,,,,,,,87,,87,87,87,,,,,,,,87,87,,87,87,87,87',
'87,,,,,,,,,,,,,,,,,,,,,,,,87,87,87,87,87,87,87,87,87,87,87,87,87,87',
',,87,87,87,,87,87,,,87,,,87,,87,,87,,87,,87,87,87,87,87,87,87,,87,,87',
',,,,,,,,,,,,87,87,87,87,434,87,,87,87,,87,434,434,434,,,,434,434,,434',
',,,,,,,,,,,,,,,,,,,434,434,,434,434,434,434,434,,,,,,,,,,,,,,,,,,,,',
',,,434,434,434,434,434,434,434,434,434,434,434,434,434,434,,,434,434',
'434,,434,,,,434,,,,,,,434,,434,,434,434,434,434,434,434,434,,434,,434',
',,,,,,,,,,,,434,434,,434,632,434,,,434,,434,632,632,632,,,632,632,632',
',632,,,,,,,,,,632,632,,,,,,,,,632,632,,632,632,632,632,632,,,,,,,,,',
',,,,,,,,,,,,,,632,632,632,632,632,632,632,632,632,632,632,632,632,632',
',,632,632,632,,632,632,,,632,,,632,,632,,632,,632,,632,632,632,632,632',
'632,632,,632,,632,,,,,,,,,,,,,632,632,632,632,84,632,,,632,,632,84,84',
'84,,,84,84,84,,84,,,,,,,,84,,84,84,84,,,,,,,,84,84,,84,84,84,84,84,',
',,,,,,,,,,,,,,,,,,,,,,84,84,84,84,84,84,84,84,84,84,84,84,84,84,,,84',
'84,84,,84,84,,,84,,,84,,84,,84,,84,,84,84,84,84,84,84,84,,84,,84,,,',
',,,,,,,,,84,84,84,84,437,84,,84,84,,84,437,437,437,,,437,437,437,,437',
',,,,,,,,437,437,437,437,,,,,,,,437,437,,437,437,437,437,437,,,,,,,,',
',,,,,,,,,,,,,,,437,437,437,437,437,437,437,437,437,437,437,437,437,437',
',,437,437,437,,,437,,,437,,,437,,437,,437,,437,,437,437,437,437,437',
'437,437,,437,437,437,,,,,,,,,,,,,437,437,437,437,50,437,,437,437,,,50',
'50,50,,,50,50,50,,50,,,,,,,,,,50,50,50,,,,,,,,50,50,,50,50,50,50,50',
',,,,,,,,,,,,,,,,,,,,,,,50,50,50,50,50,50,50,50,50,50,50,50,50,50,,,50',
'50,50,,,50,,,50,,,50,,50,,50,,50,,50,50,50,50,50,50,50,,50,,50,,,,,',
',,,,,,,50,50,50,50,436,50,,50,50,,,436,436,436,,,436,436,436,,436,,',
',,,,,,436,436,436,436,,,,,,,,436,436,,436,436,436,436,436,,,,,,,,,,',
',,,,,,,,,,,,,436,436,436,436,436,436,436,436,436,436,436,436,436,436',
',,436,436,436,,,436,,,436,,,436,,436,,436,,436,,436,436,436,436,436',
'436,436,,436,436,436,,,,,,,,,,,,,436,436,436,436,28,436,,436,436,,,28',
'28,28,,,28,28,28,,28,,,,,,,,,,28,28,,,,,,,,,28,28,,28,28,28,28,28,,',
',,,,,,,,,,,,,,,,,,,,,28,28,28,28,28,28,28,28,28,28,28,28,28,28,,,28',
'28,28,,,28,,28,28,,,28,,28,,28,,28,,28,28,28,28,28,28,28,,28,,28,,,',
',,,,,,,,,28,28,28,28,27,28,,,28,,,27,27,27,,,27,27,27,,27,,,,,,,,,27',
'27,27,,,,,,,,,27,27,,27,27,27,27,27,,,,,,,,,,,,,,,,,,,,,,,,27,27,27',
'27,27,27,27,27,27,27,27,27,27,27,,,27,27,27,,,27,,27,27,,,27,,27,,27',
',27,,27,27,27,27,27,27,27,,27,27,27,,,,,,,,,,,,,27,27,27,27,428,27,',
',27,,,428,428,428,,,428,428,428,,428,,,,,,,,,428,428,428,,,,,,,,,428',
'428,,428,428,428,428,428,,,,,,,,,,,,,,,,,,,,,,,,428,428,428,428,428',
'428,428,428,428,428,428,428,428,428,,,428,428,428,,,428,,428,428,,,428',
',428,,428,,428,,428,428,428,428,428,428,428,,428,428,428,,,,,,,,,,,',
',428,428,428,428,486,428,,,428,,,486,486,486,,,486,486,486,,486,,,,',
',,,,,486,,,,,,,,,,486,486,,486,486,486,486,486,,,,,,575,575,,,575,,',
',,,,,,575,575,,575,575,575,575,575,575,575,,,575,575,,,486,575,575,575',
'575,,,486,,,575,,486,486,,,,575,575,,575,575,575,575,575,575,575,575',
'575,575,575,,,575,486,,,,,,,,,,,,,486,,486,,,486,8,8,8,8,8,8,8,8,8,8',
'8,8,8,8,8,8,8,8,8,8,8,8,8,8,,,,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8',
'8,8,,8,8,,,8,,,,,,,,,8,8,,8,8,8,8,8,8,8,,,8,8,,,,8,8,8,8,,,,,,,,,,,',
',8,8,,8,8,8,8,8,8,8,8,8,8,8,,,8,8,,,,,,,,,,8,7,7,7,7,7,7,7,7,7,7,7,7',
'7,7,7,7,7,7,7,7,7,7,7,7,,,,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7',
',7,7,7,,7,,,,,,,,,7,7,,7,7,7,7,7,7,7,,,7,7,,,,7,7,7,7,,,,,,,,,,,,,7',
'7,,7,7,7,7,7,7,7,7,7,7,7,,,7,7,,,,,,,,,,7,412,412,412,412,412,412,412',
'412,412,412,412,412,412,412,412,412,412,412,412,412,412,412,412,412',
',,,412,412,412,412,412,412,412,412,412,412,412,412,412,412,412,412,412',
'412,412,412,412,,412,412,,,412,,,,,,,,,412,412,,412,412,412,412,412',
'412,412,,,412,412,,,,412,412,412,412,,,,,,,,,,,,,412,412,,412,412,412',
'412,412,412,412,412,412,412,412,,,412,412,,,,,,,,,,412,408,408,408,408',
'408,408,408,408,408,408,408,408,408,408,408,408,408,408,408,408,408',
'408,408,408,,,,408,408,408,408,408,408,408,408,408,408,408,408,408,408',
'408,408,408,408,408,408,408,,408,408,,,408,,,,,,,,,408,408,,408,408',
'408,408,408,408,408,,,408,408,,,,408,408,408,408,,,,,,,,,,,,,408,408',
',408,408,408,408,408,408,408,408,408,408,408,,,408,408,,,,,,,,,,408',
'740,740,740,740,740,740,740,740,740,740,740,740,740,740,740,740,740',
'740,740,740,740,740,740,740,,,,740,740,740,740,740,740,740,740,740,740',
'740,740,740,740,740,740,740,740,740,740,740,,740,740,,,740,,,,,,,,,740',
'740,,740,740,740,740,740,740,740,,,740,740,,,,740,740,740,740,,,,,,',
',,,,,,740,740,,740,740,740,740,740,740,740,740,740,740,740,,,740,192',
'192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192',
'192,192,192,192,192,192,,,,192,192,192,192,192,192,192,192,192,192,192',
'192,192,192,192,192,192,192,192,192,192,,192,192,192,192,192,,192,,',
',,,,192,192,,192,192,192,192,192,192,192,,,192,192,,,,192,192,192,192',
',,,,,,,,,,,,192,192,,192,192,192,192,192,192,192,192,192,192,192,,,192',
'65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65',
'65,,,,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65',
',65,65,65,65,65,,65,,,,,,,65,65,,65,65,65,65,65,65,65,,,65,65,,,,65',
'65,65,65,,,,,,65,,,,,,,65,65,,65,65,65,65,65,65,65,65,65,65,65,,,65',
'79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79',
'79,,,,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79',
',79,79,79,79,79,,79,,,,,,,79,79,,79,79,79,79,79,79,79,,,79,79,,,,79',
'79,79,79,,,,,,,,,,,,,79,79,,79,79,79,79,79,79,79,79,79,79,79,201,201',
'79,,201,,,,,,,,,201,201,,201,201,201,201,201,201,201,,,201,201,,,,201',
'201,201,201,,,,,,,,,,,,,201,201,,201,201,201,201,201,201,201,201,201',
'201,201,514,514,201,,514,,,,,,,,,514,514,,514,514,514,514,514,514,514',
',,514,514,,,,514,514,514,514,,,,,,514,,,,,,,514,514,,514,514,514,514',
'514,514,514,514,514,514,514,200,200,514,,200,,,,,,,,,200,200,,200,200',
'200,200,200,200,200,,,200,200,,,,200,200,200,200,,,,,,200,,,,,,,200',
'200,,200,200,200,200,200,200,200,200,200,200,200,515,515,200,,515,,',
',,,,,,515,515,,515,515,515,515,515,515,515,,,515,515,,,,515,515,515',
'515,,,,,,,,,,,,,515,515,,515,515,515,515,515,515,515,515,515,515,515',
'908,908,515,,908,,,,,,,,,908,908,,908,908,908,908,908,908,908,,,908',
'908,,,,908,908,908,908,,,,,,,,,,,,,908,908,,908,908,908,908,908,908',
'908,908,908,908,908,583,583,908,,583,,,,,,,,,583,583,,583,583,583,583',
'583,583,583,,,583,583,,,,583,583,583,583,,,,,,583,,,,,,,583,583,,583',
'583,583,583,583,583,583,583,583,583,583,796,796,583,,796,,,,,,,,,796',
'796,,796,796,796,796,796,796,796,,,796,796,,,,796,796,796,796,,,,,,',
',,,,,,796,796,,796,796,796,796,796,796,796,796,796,796,796,526,526,796',
',526,,,,,,,,,526,526,,526,526,526,526,526,526,526,,,526,526,,,,526,526',
'526,526,,,,,,,,,,,,,526,526,,526,526,526,526,526,526,526,526,526,526',
'526,262,262,526,,262,,,,,,,,,262,262,,262,262,262,262,262,262,262,,',
'262,262,,,,262,262,262,262,,,,,,,,,,,,,262,262,,262,262,262,262,262',
'262,262,262,262,262,262,907,907,262,,907,,,,,,,,,907,907,,907,907,907',
'907,907,907,907,,,907,907,,,,907,907,907,907,,,,,,907,,,,,,,907,907',
',907,907,907,907,907,907,907,907,907,907,907,442,442,907,,442,,,,,,',
',,442,442,,442,442,442,442,442,442,442,,,442,442,,,,442,442,442,442',
',,,,,442,,,,,,,442,442,,442,442,442,442,442,442,442,442,442,442,442',
'443,443,442,,443,,,,,,,,,443,443,,443,443,443,443,443,443,443,,,443',
'443,,,,443,443,443,443,,,,,,,,,,,,,443,443,,443,443,443,443,443,443',
'443,443,443,443,443,263,263,443,,263,,,,,,,,,263,263,,263,263,263,263',
'263,263,263,,,263,263,,,,263,263,263,263,,,,,,,,,,,,,263,263,,263,263',
'263,263,263,263,263,263,263,263,263,655,655,263,,655,,,,,,,,,655,655',
',655,655,655,655,655,655,655,,,655,655,,,,655,655,655,655,,,,,,,,,,',
',,655,655,,655,655,655,655,655,655,655,655,655,655,655,656,656,655,',
'656,,,,,,,,,656,656,,656,656,656,656,656,656,656,,,656,656,,,,656,656',
'656,656,,,,,,,,,,,,,656,656,,656,656,656,656,656,656,656,656,656,656',
'656,576,576,656,,576,,,,,,,,,576,576,,576,576,576,576,576,576,576,,',
'576,576,,,,576,576,576,576,,,,,,,,,,,,,576,576,,576,576,576,576,576',
'576,576,576,576,576,576,581,581,576,,581,,,,,,,,,581,581,,581,581,581',
'581,581,581,581,,,581,581,,,,581,581,581,581,,,,,,,,,,,,,581,581,,581',
'581,581,581,581,581,581,581,581,581,581,525,525,581,,525,,,,,,,,,525',
'525,,525,525,525,525,525,525,525,,,525,525,,,,525,525,525,525,,,,,,525',
',,,,,,525,525,,525,525,525,525,525,525,525,525,525,525,525,,,525' ]
        racc_action_check = arr = ::Array.new(24653, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_action_pointer = [
    -2,  1131,   nil,   429,   nil,   668,  1009, 22754, 22631,   995,
   968,   967,  1014,   128,   318,   192,   nil,  1916,  2053,  2190,
  1052,   nil,  2464,  2601,  2738,   338,    29, 22244, 22115,   nil,
  3423,  3560,  3697,   nil,   942,   181,  1013,    30,  4382,  4519,
  4656,   914,   275,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
 21857,   nil,  5204,  5341,  5478,    36,  6312,  5889,  6026,   nil,
   nil,  6163,  6300,  6437,   nil, 23347,   nil,   nil,   nil,   nil,
   nil,   120,   nil,   nil,   nil,   nil,   nil,   888,   874, 23459,
   nil,   nil,   nil,   250, 21599,   nil,   nil, 21212,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,  1000,   nil,  7807,
   nil,   nil,   nil,  7944,  8081,  8218,  8355,  8492,  8629,   nil,
   447,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil, 23235,   856,   nil,  9177,  9314,  9451,  9588,  9725,
 23639, 23519, 10136, 10273, 10410,   nil,   507,   310,   907,   -53,
   820,   862, 11369, 11506,   nil,   nil, 11643,   855, 11917, 12054,
 12191, 12328, 12465, 12602, 12739, 12876, 13013, 13150, 13287, 13424,
 13561, 13698, 13835, 13972, 14109, 14246, 14383, 14520, 14657, 14794,
 14931, 15068, 15205, 15342,   nil,   nil,   nil,  2601,   nil,   813,
   803,   nil, 15890,   825, 16164,   nil,   nil,   nil,   nil, 16301,
   nil,   nil, 23999, 24239,   814, 16849, 16986,   nil,   nil,   nil,
   nil,   nil,   nil,   nil, 17123,   326,   531,   772, 17671,   766,
   765,   708, 18219, 18356,   412,   300,   772,   185,   735,   694,
   -11,   nil,   728,   185,   nil, 19726,   nil,   595,   743,   737,
   453,   nil,   712,   nil, 20548,   nil, 20685,    34,   nil,   652,
   309,   509,   649,   621,    23,   583,   nil,   nil,   -21,  6997,
   nil,   nil,   nil,   514,   498,   nil,   374,   297,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,  2753,   nil,   nil,   nil,   311,
   nil,   nil,   287,   399,    84,     0, 19041, 18904,   457,   757,
    33,    14,   199,   -18,    -2,  1021,   nil,   nil,    -2,   121,
   nil,   418,   nil,    73,   nil,   nil, 18082,   581,   505,   475,
   477,   610,   444,   456,   287,   nil,   203,   nil, 15479,   nil,
   262,   nil,   255,   nil,   236,   536,   135,   nil,   597,    38,
   nil,   219,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   662, 23000,   nil,
   nil,   nil, 22877,   664,   nil,   nil,   409,   nil, 10821,   652,
   nil,   680,   nil,   nil,  1779,   722,   264,   633, 22373,   nil,
   nil,   nil, 21083,   776, 21341,   nil, 21986, 21728,   nil,  2464,
   nil,   nil, 24119, 24179,  7396,   320,  7259,  7122,  6848,   277,
   nil,  4108,  5204,   984,   850,   835,   865,   866,   889,  5478,
  5341,  2761,  4245,  5067,  4930,  4793,  4519,  3286,  3423,  3834,
  3971,  3012,  1169,  1032,  4656,  4382,   820,   -27,   nil,   957,
   nil,   820,   nil,   683,   nil,   nil, 22502,   nil,   nil, 20886,
     0,   nil,   962,   959,   123,   957,  1063,   nil,   nil,   135,
   -40,   130,  1042,   nil,   nil, 15753,  1031,   993,   nil,   nil,
   979, 20822,  1001,   272, 23579, 23699,   387,   988,   nil,   nil,
   941,   nil,   409,   546,  1094, 24539, 23939,  2327,  1231,  1043,
  1029,   944,   nil,   nil,  1505,   nil,   nil,  2190,   nil,   nil,
   nil,   nil,  2875,  3012,   910,   nil,   576,   nil,   nil,  3149,
  3709,   nil,   568,   nil,   nil,   894,   nil,  2861,   nil,   853,
  1354,   nil,   nil,  3286,   961,   nil,   nil,  3834,   135,    47,
   955,   961,  3971,   nil,  4930, 22500, 24419,    53,   nil,   315,
   nil, 24479,  5067, 23819,   nil,   nil,  5615,   292,  6574,   nil,
  3572,   nil,   nil,   nil,    66,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   -35,   nil,   nil,   nil,   769,
   nil,   nil,   nil,   nil,   nil,  7533,   736,  8903,   594,  9040,
  9862,   716,   nil,   nil,   nil,  9999,   686,   nil, 10547,    98,
    14, 20954, 21470,   676,   546,   nil, 11095,   nil,  3161,   nil,
 16438,   460,   nil,   470, 16575,   nil,   nil,   nil,   nil,   nil,
   nil, 16712,   nil,   359,   313, 24299, 24359, 17397,   683,   139,
   nil,   nil,   125, 18493, 18630,   nil,   805,   -50, 18767,   -62,
   nil,   -14,   217,   207,    92,    43,   265,   207, 19178,  1231,
   304,   313,   -26,   407, 19315,   nil,   nil,   468,   347,   460,
   nil,   nil,   340,   nil,   363,   316,   453,   393,   402,   nil,
   nil,   445,  2724,   nil,   751,   nil,   592,   nil,   nil,   nil,
   nil,   nil,   603,   nil,   619, 19863,   545,    34,    15,    16,
   -18, 20137,   409,   nil,   656,   655, 20274,   414,   nil,   249,
 10958, 20411, 18231,   -61,   666,   667,   668,   nil,   668,   nil,
 23123,   714,   775, 20000,   nil,   nil,   nil,  1094,   687, 19589,
 19452,   nil,  1368,   nil,  1916,   nil,   nil,  2053,   nil,   957,
 17945, 17808, 17534,   213,  1505,   nil,   759,   861,   nil,   nil,
   768,   nil,   nil,   793,   796,   614,   874, 17260,   nil,   793,
   898,   780,   281,   nil,   nil,   903,   nil, 16027,   786,   828,
   nil,   nil,   nil,   nil,   nil,   nil, 23879,   nil,   627,   nil,
   nil,   nil,   nil,  1491,   931,   nil, 15616,   933, 11780, 11232,
   nil,   nil,   112,     0,   219,   nil,   955,   nil,   nil,   956,
   957,   844,   nil, 18094,   nil,   762,   nil,   nil,   597, 10684,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   870,   855,   nil,
  1642,  8766,   nil,   nil,   nil,   902,   866,   nil,   nil,   nil,
  7670,   nil,   nil,    93,  6985,   nil,   914,   879,   nil,   nil,
    77,   nil,  1011,  1014,  6711,  5752,   nil,   nil,  4793,   nil,
   nil,   951,   916,  -102,   nil,   919,   913,   nil,   nil,  6449,
   nil,   nil,   nil,  4245,   nil,  4108,   269,   186,  1022,   147,
   nil,   nil,  2327,   nil,   nil,   nil,   629,  1779,  1080,   nil,
   899,   nil,   nil,   nil,  1642,  1086,  1368, 24059, 23759,   285,
   677,   nil,   nil,   nil,  1099,   nil,   982,  1109,   nil,  1025,
    -7,    92,    85,   546,   nil,   nil,   nil,   nil,   524 ]

racc_action_default = [
    -3,  -528,    -1,  -516,    -4,    -6,  -528,  -528,  -528,  -528,
  -528,  -528,  -528,  -528,  -268,   -36,   -37,  -528,  -528,   -42,
   -44,   -45,  -279,  -317,  -318,   -49,  -246,  -246,  -246,   -61,
   -10,   -65,   -72,   -74,  -528,  -445,  -528,  -528,  -528,  -528,
  -528,  -518,  -226,  -261,  -262,  -263,  -264,  -265,  -266,  -267,
  -506,  -270,  -528,  -527,  -498,  -287,  -527,  -528,  -528,  -292,
  -295,  -516,  -528,  -528,  -309,  -528,  -319,  -320,  -388,  -389,
  -390,  -391,  -392,  -527,  -395,  -527,  -527,  -527,  -527,  -527,
  -422,  -428,  -429,  -528,  -504,  -435,  -436,  -505,  -438,  -439,
  -440,  -441,  -442,  -443,  -444,  -447,  -448,  -528,    -2,  -517,
  -523,  -524,  -525,  -528,  -528,  -528,  -528,  -528,    -3,   -13,
  -528,  -100,  -101,  -102,  -103,  -104,  -105,  -106,  -109,  -110,
  -111,  -112,  -113,  -114,  -115,  -116,  -117,  -118,  -119,  -120,
  -121,  -122,  -123,  -124,  -125,  -126,  -127,  -128,  -129,  -130,
  -131,  -132,  -133,  -134,  -135,  -136,  -137,  -138,  -139,  -140,
  -141,  -142,  -143,  -144,  -145,  -146,  -147,  -148,  -149,  -150,
  -151,  -152,  -153,  -154,  -155,  -156,  -157,  -158,  -159,  -160,
  -161,  -162,  -163,  -164,  -165,  -166,  -167,  -168,  -169,  -170,
  -171,  -172,  -173,  -174,  -175,  -176,  -177,  -178,  -179,  -180,
  -181,  -182,  -528,   -18,  -107,   -10,  -528,  -528,  -528,  -527,
  -528,  -528,  -528,  -528,  -528,   -40,  -528,  -445,  -528,  -268,
  -528,  -528,   -10,  -528,   -41,  -218,  -528,  -528,  -528,  -528,
  -528,  -528,  -528,  -528,  -528,  -528,  -528,  -528,  -528,  -528,
  -528,  -528,  -528,  -528,  -528,  -528,  -528,  -528,  -528,  -528,
  -528,  -528,  -528,  -528,  -359,  -361,   -46,  -227,  -239,  -253,
  -253,  -243,  -528,  -254,  -528,  -279,  -317,  -318,  -500,  -528,
   -47,   -48,  -528,  -528,   -53,  -527,  -528,  -286,  -364,  -371,
  -373,   -59,  -369,   -60,  -528,  -516,   -11,   -61,   -10,  -528,
  -528,   -66,   -69,   -10,   -80,  -528,  -528,   -87,  -282,  -518,
  -528,  -321,  -370,  -528,   -71,  -528,   -76,  -275,  -430,  -431,
  -528,  -203,  -204,  -219,  -528,  -519,   -10,  -518,  -228,  -518,
  -520,  -520,  -528,  -528,  -520,  -528,  -288,  -289,  -528,  -528,
  -332,  -333,  -340,  -527,  -464,  -347,  -527,  -527,  -358,  -463,
  -465,  -466,  -467,  -468,  -469,  -528,  -482,  -487,  -488,  -490,
  -491,  -492,  -528,   -43,  -528,  -528,  -528,  -528,  -516,  -528,
  -517,  -445,  -528,  -528,  -268,  -528,  -471,  -472,   -96,  -528,
   -98,  -528,  -268,  -528,  -306,  -445,  -528,  -100,  -101,  -138,
  -139,  -155,  -160,  -167,  -170,  -312,  -528,  -496,  -528,  -393,
  -528,  -408,  -528,  -410,  -528,  -528,  -528,  -400,  -528,  -528,
  -406,  -528,  -421,  -423,  -424,  -425,  -426,  -432,  -433,   929,
    -5,  -526,   -19,   -20,   -21,   -22,   -23,  -528,  -528,   -15,
   -16,   -17,  -528,  -528,   -25,   -33,  -183,  -254,  -528,  -528,
   -26,   -34,   -35,   -27,  -185,  -528,  -507,  -508,  -246,  -366,
  -509,  -510,  -507,  -246,  -508,  -368,  -509,  -510,   -32,  -192,
   -38,   -39,  -528,  -528,  -527,  -275,  -528,  -528,  -528,  -528,
  -285,  -193,  -194,  -195,  -196,  -197,  -198,  -199,  -200,  -205,
  -206,  -207,  -208,  -209,  -210,  -211,  -212,  -213,  -214,  -215,
  -216,  -217,  -220,  -221,  -222,  -223,  -528,  -527,  -240,  -528,
  -241,  -528,  -251,  -528,  -255,  -503,  -246,  -507,  -508,  -246,
  -527,   -54,  -528,  -518,  -518,  -253,  -239,  -247,  -248,  -528,
  -527,  -527,  -528,  -281,    -9,  -517,  -528,   -62,  -273,   -77,
   -67,  -528,  -528,  -527,  -528,  -528,   -86,  -528,  -430,  -431,
   -73,   -78,  -528,  -528,  -528,  -528,  -528,  -224,  -528,  -380,
  -528,  -528,  -229,  -230,  -522,  -521,  -232,  -522,  -277,  -278,
  -499,  -329,   -10,   -10,  -528,  -331,  -528,  -349,  -356,  -528,
  -353,  -354,  -528,  -357,  -464,  -528,  -473,  -528,  -475,  -477,
  -481,  -489,  -493,   -10,  -322,  -323,  -324,   -10,  -528,  -528,
  -528,  -528,   -10,  -375,  -527,  -528,  -528,  -275,  -301,   -96,
   -97,  -528,  -527,  -528,  -304,  -449,  -528,  -528,  -528,  -310,
  -462,  -314,  -514,  -515,  -518,  -394,  -409,  -412,  -413,  -415,
  -396,  -411,  -397,  -398,  -399,  -528,  -402,  -404,  -405,  -528,
  -427,    -7,   -14,  -108,   -24,  -528,  -260,  -528,  -276,  -528,
  -528,   -55,  -237,  -238,  -365,  -528,   -57,  -367,  -528,  -507,
  -508,  -507,  -508,  -528,  -183,  -284,  -528,  -343,  -528,  -345,
   -10,  -253,  -252,  -256,  -528,  -501,  -502,   -50,  -362,   -51,
  -363,   -10,  -233,  -528,  -528,  -528,  -528,  -528,   -42,  -528,
  -245,  -249,  -528,   -10,   -10,  -280,   -12,   -62,  -528,   -70,
   -75,  -528,  -507,  -508,  -527,  -511,   -85,  -528,  -528,  -191,
  -201,  -202,  -528,  -527,  -527,  -271,  -272,  -520,  -528,  -528,
  -330,  -341,  -528,  -348,  -527,  -342,  -528,  -527,  -527,  -483,
  -470,  -528,  -528,  -480,  -527,  -325,  -527,  -293,  -326,  -327,
  -328,  -296,  -528,  -299,  -528,  -528,  -528,  -507,  -508,  -511,
  -274,  -528,   -96,   -99,  -511,  -528,   -10,  -528,  -451,  -528,
   -10,   -10,  -462,  -528,  -495,  -495,  -495,  -461,  -464,  -485,
  -528,  -528,  -528,   -10,  -401,  -403,  -407,  -184,  -258,  -528,
  -528,   -29,  -187,   -30,  -188,   -56,   -31,  -189,   -58,  -190,
  -528,  -528,  -528,  -276,  -225,  -344,  -528,  -528,  -242,  -257,
  -528,  -234,  -235,  -527,  -527,  -518,  -528,  -528,  -250,  -528,
  -528,   -68,   -81,   -79,  -283,  -527,  -338,   -10,  -381,  -527,
  -382,  -383,  -231,  -334,  -335,  -355,  -528,  -275,  -528,  -351,
  -352,  -474,  -476,  -479,  -528,  -336,  -528,  -528,   -10,   -10,
  -298,  -300,  -528,  -276,  -528,  -276,  -528,  -450,  -307,  -528,
  -528,  -518,  -453,  -528,  -457,  -528,  -459,  -460,  -528,  -528,
  -315,  -497,  -414,  -417,  -418,  -419,  -420,  -528,  -259,   -28,
  -186,  -528,  -346,  -360,   -52,  -528,  -253,  -372,  -374,    -8,
   -10,  -387,  -339,  -528,  -528,  -385,  -274,  -527,  -478,  -290,
  -528,  -291,  -528,  -528,  -528,   -10,  -302,  -305,   -10,  -311,
  -313,  -528,  -495,  -495,  -494,  -495,  -528,  -486,  -484,  -462,
  -416,  -236,  -244,  -528,  -386,   -10,   -88,  -528,  -528,   -95,
  -384,  -350,   -10,  -294,  -297,  -256,  -527,   -10,  -528,  -452,
  -528,  -455,  -456,  -458,   -10,  -380,  -527,  -528,  -528,   -94,
  -527,  -376,  -377,  -378,  -528,  -308,  -495,  -528,  -379,  -528,
  -507,  -508,  -511,   -93,  -337,  -303,  -454,  -316,   -89 ]

clist = [
'13,214,5,480,312,281,248,248,248,530,328,375,548,494,571,551,553,206',
'206,249,249,249,206,206,206,393,12,683,320,102,13,285,285,99,428,433',
'491,309,291,291,114,114,415,422,563,567,533,536,109,194,540,520,206',
'206,117,117,12,206,206,556,699,206,352,361,363,642,98,642,304,291,291',
'344,345,734,596,348,731,294,580,785,606,264,271,273,804,660,555,102',
'691,648,877,737,650,707,711,645,486,489,114,13,2,5,807,206,206,206,206',
'13,13,406,5,662,114,306,346,808,347,402,403,404,405,809,640,721,349',
'12,897,250,250,250,726,588,868,12,12,651,366,277,393,730,382,384,590',
'279,391,663,664,740,879,318,425,645,541,355,697,824,826,827,317,314',
'280,316,313,694,377,877,497,698,591,477,500,501,911,715,789,853,379',
'380,584,414,420,423,386,309,605,438,376,246,260,261,389,832,742,419',
'419,13,206,206,206,206,743,821,206,206,206,872,408,736,407,357,193,849',
'13,206,802,734,268,272,400,1,,12,,10,,114,,,,,,,,737,437,712,,,12,,',
',,642,,,,,,496,248,,,10,,,35,,248,,,,495,249,,206,206,669,,521,,249',
',328,206,,428,433,13,,,556,285,13,703,356,35,284,284,291,924,544,912',
'901,902,285,903,,,745,723,102,291,,12,505,13,,701,12,,,,,,,517,,351',
'365,,365,10,,874,413,874,510,,874,10,10,12,699,531,,532,926,504,866',
'691,,280,,,,206,206,674,736,,,,,,35,,,,674,568,569,734,35,35,904,361',
'589,,,250,250,,291,102,,648,650,206,250,737,,,795,,277,799,800,,585',
'277,506,,755,768,633,512,,758,,,874,,918,,775,,,280,674,,570,,280,,857',
'14,674,10,,,,,792,781,,556,,309,816,493,498,,819,820,10,,,,502,873,114',
'875,,206,114,14,287,287,612,,35,,613,,117,,,,117,,,,,671,,,,35,642,',
',,,,,437,,354,362,268,,272,621,,521,,,626,773,774,,,,,,736,309,,206',
',10,,,,13,10,666,,,,285,865,206,,14,,916,291,,653,654,,14,14,716,,858',
'206,10,790,12,,725,35,,,,284,35,,647,13,13,649,,891,,437,695,,284,,885',
',,291,,309,437,892,913,35,13,,,309,13,12,12,,898,13,,206,,,,,,,,206',
',641,,206,,206,12,,,328,12,708,708,,,12,882,727,,751,753,,,,917,756',
'437,766,14,,728,437,,,,623,206,206,741,365,627,,206,,,14,,,,,,,,,,,687',
'13,776,521,,,,,,,,,13,783,,,,,206,,,,,,13,13,,12,,285,,,,688,689,,291',
'623,12,285,623,,419,,,,291,830,,,12,12,,,704,14,,,706,287,14,,,714,',
',,,,,,,287,812,,,,,,,,,206,14,,,,13,,10,,13,13,,839,,814,,,,,,674,,13',
',,,,,,206,,12,817,,818,12,12,,822,,35,641,,,10,10,284,,12,767,,,114',
'846,,,,,,,770,362,,,,10,13,,,10,,,779,780,10,,,35,35,,,845,,,365,206',
',13,13,,,,12,,,,,,35,860,,,35,,,,,35,437,,,,,12,12,,,,,708,,,,,,,,871',
',13,,,,887,,,919,,,,291,,10,623,13,,627,13,,,,,837,10,,12,,,,,,,,,13',
'10,10,,,309,12,13,,12,,35,13,,,,,,,13,,206,35,,,,12,,,,,,852,12,35,35',
'14,,12,284,,,287,,,12,,,,284,,,,862,863,,437,,,,,,,,10,,,,10,10,,,,14',
'14,,,,623,623,362,10,,,,,215,,,,247,247,247,,14,884,,35,14,,,35,35,14',
',,301,302,303,,896,,,,35,,,,,,,247,247,,,10,,,,,905,,,,,,,910,,,,,914',
',,,10,10,,,,,,,,,,,35,,,,,,,,,,,,,14,,,,,,,,35,35,,14,,,,,,10,,,,890',
'321,14,14,,,,287,,,,10,,,10,,,287,381,,383,383,387,390,383,,,,,35,,10',
',886,,,,,10,,,,,10,35,,,35,,,10,,,,,,,,,,,,,,35,14,,,,14,14,35,416,247',
'424,247,35,,439,,,836,14,35,,,,,,,,,215,,451,452,453,454,455,456,457',
'458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474',
'475,476,,,,,,,14,,247,,247,,,,,247,,,,,,247,247,,,,,14,14,,247,,,,,',
',,,,,,,,,,,,,,,,,,,,315,,,,527,,,,,,,,,14,,,,889,,,,,,,,,,,14,,,14,',
',492,,,,,205,,,,,,,,,14,,,,,,,14,,,,,14,,,,,,,14,,,,,,,307,,,,,343,343',
',,343,,,,,,,,,547,,,547,547,,,,,290,290,,,,,,290,290,290,,,,,,,,247',
',,,,,290,343,343,343,343,,,,290,290,,,,,,,,,417,421,247,,439,634,424',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,247,,247,,247,,,,,,,,,,,,,,622,482,658',
'484,,,,,485,,,,,,,,247,,,,,,,,,679,680,681,440,441,,,,,,,,247,449,,247',
',,,,,,,,637,,,,,,,,,622,,,622,637,,,,,,,,,,637,637,,,,247,,,,,,,,247',
',,,290,,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290',
'290,290,290,290,290,290,290,290,290,290,290,,747,,247,,752,754,,290',
',290,757,,,759,290,,,,,,,764,,,,,,,,247,,,,,,,,290,,,,,247,,,,,,,616',
'290,,,343,343,,,,,290,,,,,,,,,,247,,,,,,,,,,,,,,,,594,,,,,,,,,,,,,,',
'247,,,,,,,,,,643,,315,,646,,,,,,,290,,,,,,,622,,659,,,,247,840,,786',
'791,,,,,,,752,754,757,547,,,547,547,,,,,,786,,786,,247,,,643,,,315,',
',,,290,,,,,,,,,,,,,,,,,,,,,,,,,,,,290,290,290,,,307,,,,,,,,247,,,,,',
',,,,,,840,622,622,,,,,,290,682,290,,290,851,,,,855,,,,,748,247,,,,,',
',,,,,,,,,,,290,,247,,,,,,,769,,290,290,290,,,,,,,,,643,290,,247,290',
'343,,729,,,,,,,,,290,,,,,,,547,,,,788,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
'417,,,,786,,,,,,,,,,,,,,786,,,,,,290,,290,,,,,,,,838,,,290,,,,,,,,290',
',,,,,,,290,,,,,,,,,417,,,,,,,,,,,,,,,290,,,,,343,,,,,290,,,,,,290,,',
',,,,,,,,,,,,,,,,,,878,,,,,,,,,,290,,,,,,,,,,,,,,,,,,,,,,,,,895,,,,,',
',,,290,,,,,,,,,343,895,290,290,290,,,,,,,,,,,,,,,290,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,290,,,,,,,,,,,,290,,,,,,,,,,,,,290',
',,,,,,,,,290,,,,,,,,,,,,,,,,,,,290' ]
        racc_goto_table = arr = ::Array.new(2207, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'21,18,7,59,22,41,29,29,29,8,105,47,107,32,78,107,107,21,21,54,54,54',
'21,21,21,47,20,10,102,81,21,21,21,6,33,33,35,29,52,52,48,48,24,24,75',
'75,55,55,14,14,55,43,21,21,50,50,20,21,21,136,138,21,21,21,46,60,4,60',
'51,52,52,16,16,108,127,16,82,42,45,11,127,34,34,34,76,60,139,81,104',
'58,142,106,58,77,77,145,33,33,48,21,2,7,11,21,21,21,21,21,21,7,7,61',
'48,85,86,87,88,16,16,16,16,89,36,90,4,20,91,56,56,56,92,93,94,20,20',
'36,95,38,47,96,124,124,97,39,124,36,36,98,99,100,22,145,101,79,103,135',
'135,135,74,56,9,72,71,109,70,142,62,109,84,111,113,114,115,116,117,118',
'122,123,80,18,18,18,125,29,126,18,83,31,31,31,128,129,130,54,54,21,21',
'21,21,21,131,133,21,21,21,134,27,109,2,19,15,12,21,21,140,108,57,57',
'5,1,,20,,17,,48,,,,,,,,106,48,78,,,20,,,,,60,,,,,,29,29,,,17,,,44,,29',
',,,54,54,,21,21,43,,41,,54,,105,21,,33,33,21,,,136,21,21,136,17,44,44',
'44,52,76,102,11,135,135,21,135,,,127,45,81,52,,20,6,21,,139,20,,,,,',
',51,,44,44,,44,17,,106,9,106,42,,106,17,17,20,138,51,,51,135,4,77,104',
',9,,,,21,21,33,109,,,,,,44,,,,33,16,16,108,44,44,82,21,46,,,56,56,,52',
'81,,58,58,21,56,106,,,107,,38,107,107,,81,38,39,,35,59,22,39,,35,,,106',
',10,,32,,,9,33,,4,,9,,109,23,33,17,,,,,55,43,,136,,29,8,31,31,,8,8,17',
',,,31,109,48,109,,21,48,23,23,23,14,,44,,14,,50,,,,50,,,,,22,,,,44,60',
',,,,,,48,,23,23,57,,57,34,,41,,,34,33,33,,,,,,109,29,,21,,17,,,,21,17',
'7,,,,21,75,21,,23,,109,52,,51,51,,23,23,22,,136,21,17,24,20,,22,44,',
',,44,44,,34,21,21,34,,107,,48,21,,44,,75,,,52,,29,48,75,78,44,21,,,29',
'21,20,20,,8,21,,21,,,,,,,,21,,56,,21,,21,20,,,105,20,81,81,,,20,59,16',
',18,18,,,,8,18,48,102,23,,81,48,,,,57,21,21,51,44,57,,21,,,23,,,,,,',
',,,,56,21,29,41,,,,,,,,,21,41,,,,,21,,,,,,21,21,,20,,21,,,,9,9,,52,57',
'20,21,57,,54,,,,52,47,,,20,20,,,9,23,,,9,23,23,,,9,,,,,,,,,23,54,,,',
',,,,,21,23,,,,21,,17,,21,21,,18,,16,,,,,,33,,21,,,,,,,21,,20,81,,81',
'20,20,,81,,44,56,,,17,17,44,,20,9,,,48,54,,,,,,,9,23,,,,17,21,,,17,',
',9,9,17,,,44,44,,,51,,,44,21,,21,21,,,,20,,,,,,44,16,,,44,,,,,44,48',
',,,,20,20,,,,,81,,,,,,,,51,,21,,,,21,,,22,,,,52,,17,57,21,,57,21,,,',
',9,17,,20,,,,,,,,,21,17,17,,,29,20,21,,20,,44,21,,,,,,,21,,21,44,,,',
'20,,,,,,9,20,44,44,23,,20,44,,,23,,,20,,,,44,,,,9,9,,48,,,,,,,,17,,',
',17,17,,,,23,23,,,,57,57,23,17,,,,,28,,,,28,28,28,,23,9,,44,23,,,44',
'44,23,,,28,28,28,,9,,,,44,,,,,,,28,28,,,17,,,,,9,,,,,,,9,,,,,9,,,,17',
'17,,,,,,,,,,,44,,,,,,,,,,,,,23,,,,,,,,44,44,,23,,,,,,17,,,,17,53,23',
'23,,,,23,,,,17,,,17,,,23,53,,53,53,53,53,53,,,,,44,,17,,44,,,,,17,,',
',,17,44,,,44,,,17,,,,,,,,,,,,,,44,23,,,,23,23,44,28,28,28,28,44,,28',
',,23,23,44,,,,,,,,,28,,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28',
'28,28,28,28,28,28,28,28,28,28,28,,,,,,,23,,28,,28,,,,,28,,,,,,28,28',
',,,,23,23,,28,,,,,,,,,,,,,,,,,,,,,,,,,,25,,,,28,,,,,,,,,23,,,,23,,,',
',,,,,,,23,,,23,,,53,,,,,26,,,,,,,,,23,,,,,,,23,,,,,23,,,,,,,23,,,,,',
',26,,,,,26,26,,,26,,,,,,,,,53,,,53,53,,,,,37,37,,,,,,37,37,37,,,,,,',
',28,,,,,,37,26,26,26,26,,,,37,37,,,,,,,,,25,25,28,,28,28,28,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,28,,28,,28,,,,,,,,,,,,,,53,25,28,25,,,,,25,,,',
',,,,28,,,,,,,,,28,28,28,26,26,,,,,,,,28,26,,28,,,,,,,,,53,,,,,,,,,53',
',,53,53,,,,,,,,,,53,53,,,,28,,,,,,,,28,,,,37,,37,37,37,37,37,37,37,37',
'37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,,28,,28,,28,28',
',37,,37,28,,,28,37,,,,,,,28,,,,,,,,28,,,,,,,,37,,,,,28,,,,,,,25,37,',
',26,26,,,,,37,,,,,,,,,,28,,,,,,,,,,,,,,,,26,,,,,,,,,,,,,,,28,,,,,,,',
',,25,,25,,25,,,,,,,37,,,,,,,53,,25,,,,28,28,,53,53,,,,,,,28,28,28,53',
',,53,53,,,,,,53,,53,,28,,,25,,,25,,,,,37,,,,,,,,,,,,,,,,,,,,,,,,,,,',
'37,37,37,,,26,,,,,,,,28,,,,,,,,,,,,28,53,53,,,,,,37,26,37,,37,53,,,',
'53,,,,,25,28,,,,,,,,,,,,,,,,,37,,28,,,,,,,25,,37,37,37,,,,,,,,,25,37',
',28,37,26,,26,,,,,,,,,37,,,,,,,53,,,,25,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,25,,,,53,,,,,,,,,,,,,,53,,,,,,37,,37,,,,,,,,25,,,37,,,,,,,,37,,,,',
',,,37,,,,,,,,,25,,,,,,,,,,,,,,,37,,,,,26,,,,,37,,,,,,37,,,,,,,,,,,,',
',,,,,,,,25,,,,,,,,,,37,,,,,,,,,,,,,,,,,,,,,,,,,25,,,,,,,,,37,,,,,,,',
',26,25,37,37,37,,,,,,,,,,,,,,,37,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,37,,,,,,,,,,,,37,,,,,,,,,,,,,37,,,,,,,,,,37,,,,,,,,',
',,,,,,,,,,37' ]
        racc_goto_check = arr = ::Array.new(2207, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_goto_pointer = [
   nil,   219,   100,   nil,    63,   119,    30,     2,  -297,   130,
  -502,  -604,  -574,   nil,    41,   202,    14,   223,   -17,   147,
    26,     0,   -49,   416,  -154,  1199,  1275,    97,   953,   -16,
   nil,   165,  -252,  -166,    55,  -228,  -355,  1323,   107,   113,
   nil,   -26,    45,  -244,   256,  -281,     1,   -54,    33,   nil,
    47,    27,     7,  1022,    -3,  -264,   105,   190,  -397,  -247,
  -414,  -388,  -100,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    99,   108,   106,   nil,   102,  -300,  -620,  -475,  -335,    91,
  -185,    26,  -514,   121,  -208,    62,    55,  -592,    56,  -590,
  -455,  -740,  -454,  -233,  -686,    72,  -450,  -233,  -444,  -682,
    93,  -166,   -28,  -396,  -458,   -46,  -499,  -311,  -517,  -383,
   nil,   -75,   nil,   -99,   -99,  -724,  -400,  -510,  -614,   nil,
   nil,   nil,   105,   104,    65,   105,  -202,  -306,   112,  -551,
  -406,  -399,   nil,  -531,  -618,  -579,  -276,   nil,  -490,  -249,
  -488,   nil,  -735,   nil,   nil,  -386 ]

racc_goto_default = [
   nil,   nil,   nil,     3,   nil,     4,   350,   276,   nil,   529,
   nil,   805,   nil,   275,   nil,   nil,   nil,   210,    16,    11,
   211,   300,   nil,   209,   nil,   253,    15,   nil,    19,    20,
    21,   nil,    25,   677,   nil,   nil,   nil,    26,    29,   nil,
    31,    34,    33,   nil,   207,   360,   nil,   116,   431,   115,
    69,   nil,    42,   308,   310,   nil,   311,   429,   624,   478,
   251,   nil,   nil,   266,    43,    44,    45,    46,    47,    48,
    49,   nil,   267,    55,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   564,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   323,   322,   693,   325,   nil,   326,   327,
   245,   nil,   435,   nil,   nil,   nil,   nil,   nil,   nil,    68,
    70,    71,    72,   nil,   nil,   nil,   nil,   601,   nil,   nil,
   nil,   nil,   392,   733,   735,   nil,   334,   329,   336,   nil,
   558,   559,   739,   339,   342,   258 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 140, :_reduce_none,
  2, 141, :_reduce_2,
  0, 142, :_reduce_3,
  1, 142, :_reduce_4,
  3, 142, :_reduce_5,
  1, 144, :_reduce_none,
  4, 144, :_reduce_7,
  4, 147, :_reduce_8,
  2, 148, :_reduce_9,
  0, 152, :_reduce_10,
  1, 152, :_reduce_11,
  3, 152, :_reduce_12,
  0, 166, :_reduce_13,
  4, 146, :_reduce_14,
  3, 146, :_reduce_15,
  3, 146, :_reduce_none,
  3, 146, :_reduce_17,
  2, 146, :_reduce_18,
  3, 146, :_reduce_19,
  3, 146, :_reduce_20,
  3, 146, :_reduce_21,
  3, 146, :_reduce_22,
  3, 146, :_reduce_23,
  4, 146, :_reduce_none,
  3, 146, :_reduce_25,
  3, 146, :_reduce_26,
  3, 146, :_reduce_27,
  6, 146, :_reduce_none,
  5, 146, :_reduce_29,
  5, 146, :_reduce_none,
  5, 146, :_reduce_none,
  3, 146, :_reduce_none,
  3, 146, :_reduce_33,
  3, 146, :_reduce_34,
  3, 146, :_reduce_35,
  1, 146, :_reduce_none,
  1, 165, :_reduce_none,
  3, 165, :_reduce_38,
  3, 165, :_reduce_39,
  2, 165, :_reduce_40,
  2, 165, :_reduce_41,
  1, 165, :_reduce_none,
  1, 155, :_reduce_none,
  1, 157, :_reduce_none,
  1, 157, :_reduce_none,
  2, 157, :_reduce_46,
  2, 157, :_reduce_47,
  2, 157, :_reduce_48,
  1, 169, :_reduce_none,
  4, 169, :_reduce_none,
  4, 169, :_reduce_none,
  4, 174, :_reduce_none,
  2, 168, :_reduce_53,
  3, 168, :_reduce_none,
  4, 168, :_reduce_55,
  5, 168, :_reduce_none,
  4, 168, :_reduce_57,
  5, 168, :_reduce_none,
  2, 168, :_reduce_59,
  2, 168, :_reduce_60,
  1, 158, :_reduce_61,
  3, 158, :_reduce_62,
  1, 178, :_reduce_63,
  3, 178, :_reduce_64,
  1, 177, :_reduce_65,
  2, 177, :_reduce_66,
  3, 177, :_reduce_67,
  5, 177, :_reduce_none,
  2, 177, :_reduce_69,
  4, 177, :_reduce_none,
  2, 177, :_reduce_71,
  1, 177, :_reduce_72,
  3, 177, :_reduce_none,
  1, 180, :_reduce_74,
  3, 180, :_reduce_75,
  2, 179, :_reduce_76,
  3, 179, :_reduce_77,
  1, 182, :_reduce_none,
  3, 182, :_reduce_none,
  1, 181, :_reduce_80,
  4, 181, :_reduce_81,
  3, 181, :_reduce_82,
  3, 181, :_reduce_none,
  3, 181, :_reduce_none,
  3, 181, :_reduce_none,
  2, 181, :_reduce_none,
  1, 181, :_reduce_none,
  1, 156, :_reduce_88,
  4, 156, :_reduce_89,
  3, 156, :_reduce_90,
  3, 156, :_reduce_91,
  3, 156, :_reduce_92,
  3, 156, :_reduce_93,
  2, 156, :_reduce_94,
  1, 156, :_reduce_none,
  1, 184, :_reduce_none,
  2, 185, :_reduce_97,
  1, 185, :_reduce_98,
  3, 185, :_reduce_99,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_103,
  1, 186, :_reduce_104,
  1, 153, :_reduce_105,
  1, 153, :_reduce_none,
  1, 154, :_reduce_107,
  3, 154, :_reduce_108,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  3, 167, :_reduce_183,
  5, 167, :_reduce_184,
  3, 167, :_reduce_185,
  6, 167, :_reduce_186,
  5, 167, :_reduce_187,
  5, 167, :_reduce_none,
  5, 167, :_reduce_none,
  5, 167, :_reduce_none,
  4, 167, :_reduce_none,
  3, 167, :_reduce_none,
  3, 167, :_reduce_193,
  3, 167, :_reduce_194,
  3, 167, :_reduce_195,
  3, 167, :_reduce_196,
  3, 167, :_reduce_197,
  3, 167, :_reduce_198,
  3, 167, :_reduce_199,
  3, 167, :_reduce_200,
  4, 167, :_reduce_201,
  4, 167, :_reduce_202,
  2, 167, :_reduce_203,
  2, 167, :_reduce_204,
  3, 167, :_reduce_205,
  3, 167, :_reduce_206,
  3, 167, :_reduce_207,
  3, 167, :_reduce_208,
  3, 167, :_reduce_209,
  3, 167, :_reduce_210,
  3, 167, :_reduce_211,
  3, 167, :_reduce_212,
  3, 167, :_reduce_213,
  3, 167, :_reduce_214,
  3, 167, :_reduce_215,
  3, 167, :_reduce_216,
  3, 167, :_reduce_217,
  2, 167, :_reduce_218,
  2, 167, :_reduce_219,
  3, 167, :_reduce_220,
  3, 167, :_reduce_221,
  3, 167, :_reduce_222,
  3, 167, :_reduce_223,
  3, 167, :_reduce_224,
  5, 167, :_reduce_225,
  1, 167, :_reduce_none,
  1, 164, :_reduce_none,
  1, 161, :_reduce_228,
  2, 161, :_reduce_229,
  2, 161, :_reduce_230,
  4, 161, :_reduce_231,
  2, 161, :_reduce_232,
  3, 196, :_reduce_233,
  4, 196, :_reduce_234,
  4, 196, :_reduce_none,
  6, 196, :_reduce_none,
  1, 197, :_reduce_237,
  1, 197, :_reduce_none,
  1, 170, :_reduce_239,
  2, 170, :_reduce_240,
  2, 170, :_reduce_241,
  4, 170, :_reduce_242,
  1, 170, :_reduce_243,
  4, 200, :_reduce_none,
  1, 200, :_reduce_none,
  0, 202, :_reduce_246,
  2, 173, :_reduce_247,
  1, 201, :_reduce_none,
  2, 201, :_reduce_249,
  3, 201, :_reduce_250,
  2, 199, :_reduce_251,
  2, 198, :_reduce_252,
  0, 198, :_reduce_253,
  1, 193, :_reduce_254,
  2, 193, :_reduce_255,
  3, 193, :_reduce_256,
  4, 193, :_reduce_257,
  3, 163, :_reduce_258,
  4, 163, :_reduce_259,
  2, 163, :_reduce_260,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  0, 224, :_reduce_270,
  4, 191, :_reduce_271,
  4, 191, :_reduce_272,
  3, 191, :_reduce_273,
  3, 191, :_reduce_274,
  2, 191, :_reduce_275,
  4, 191, :_reduce_276,
  3, 191, :_reduce_277,
  3, 191, :_reduce_278,
  1, 191, :_reduce_279,
  4, 191, :_reduce_280,
  3, 191, :_reduce_281,
  1, 191, :_reduce_282,
  5, 191, :_reduce_283,
  4, 191, :_reduce_284,
  3, 191, :_reduce_285,
  2, 191, :_reduce_286,
  1, 191, :_reduce_none,
  2, 191, :_reduce_288,
  2, 191, :_reduce_289,
  6, 191, :_reduce_290,
  6, 191, :_reduce_291,
  0, 225, :_reduce_292,
  0, 226, :_reduce_293,
  7, 191, :_reduce_294,
  0, 227, :_reduce_295,
  0, 228, :_reduce_296,
  7, 191, :_reduce_297,
  5, 191, :_reduce_298,
  4, 191, :_reduce_299,
  5, 191, :_reduce_300,
  0, 229, :_reduce_301,
  0, 230, :_reduce_302,
  9, 191, :_reduce_303,
  0, 231, :_reduce_304,
  6, 191, :_reduce_305,
  0, 232, :_reduce_306,
  0, 233, :_reduce_307,
  8, 191, :_reduce_308,
  0, 234, :_reduce_309,
  0, 235, :_reduce_310,
  6, 191, :_reduce_311,
  0, 236, :_reduce_312,
  6, 191, :_reduce_313,
  0, 237, :_reduce_314,
  0, 238, :_reduce_315,
  9, 191, :_reduce_316,
  1, 191, :_reduce_317,
  1, 191, :_reduce_318,
  1, 191, :_reduce_319,
  1, 191, :_reduce_none,
  1, 160, :_reduce_none,
  1, 214, :_reduce_none,
  1, 214, :_reduce_none,
  1, 214, :_reduce_none,
  2, 214, :_reduce_none,
  1, 216, :_reduce_none,
  1, 216, :_reduce_none,
  1, 216, :_reduce_none,
  2, 213, :_reduce_329,
  3, 239, :_reduce_330,
  2, 239, :_reduce_331,
  1, 239, :_reduce_none,
  1, 239, :_reduce_none,
  3, 240, :_reduce_334,
  3, 240, :_reduce_335,
  1, 215, :_reduce_336,
  5, 215, :_reduce_337,
  1, 150, :_reduce_none,
  2, 150, :_reduce_339,
  1, 242, :_reduce_340,
  3, 242, :_reduce_341,
  3, 243, :_reduce_342,
  1, 175, :_reduce_none,
  2, 175, :_reduce_344,
  1, 175, :_reduce_345,
  3, 175, :_reduce_346,
  1, 244, :_reduce_347,
  2, 246, :_reduce_348,
  1, 246, :_reduce_349,
  6, 241, :_reduce_350,
  4, 241, :_reduce_351,
  4, 241, :_reduce_352,
  2, 241, :_reduce_353,
  2, 241, :_reduce_354,
  4, 241, :_reduce_355,
  2, 241, :_reduce_356,
  2, 241, :_reduce_357,
  1, 241, :_reduce_358,
  0, 250, :_reduce_359,
  5, 249, :_reduce_360,
  2, 171, :_reduce_361,
  4, 171, :_reduce_none,
  4, 171, :_reduce_none,
  2, 212, :_reduce_364,
  4, 212, :_reduce_365,
  3, 212, :_reduce_366,
  4, 212, :_reduce_367,
  3, 212, :_reduce_368,
  2, 212, :_reduce_369,
  1, 212, :_reduce_370,
  0, 252, :_reduce_371,
  5, 211, :_reduce_372,
  0, 253, :_reduce_373,
  5, 211, :_reduce_374,
  0, 255, :_reduce_375,
  6, 217, :_reduce_376,
  1, 254, :_reduce_377,
  1, 254, :_reduce_none,
  6, 149, :_reduce_379,
  0, 149, :_reduce_380,
  1, 256, :_reduce_381,
  1, 256, :_reduce_none,
  1, 256, :_reduce_none,
  2, 257, :_reduce_384,
  1, 257, :_reduce_385,
  2, 151, :_reduce_386,
  1, 151, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 204, :_reduce_391,
  1, 260, :_reduce_none,
  2, 260, :_reduce_393,
  3, 261, :_reduce_394,
  1, 261, :_reduce_395,
  3, 205, :_reduce_396,
  3, 206, :_reduce_397,
  3, 207, :_reduce_398,
  3, 207, :_reduce_399,
  1, 264, :_reduce_400,
  3, 264, :_reduce_401,
  1, 265, :_reduce_402,
  2, 265, :_reduce_403,
  3, 208, :_reduce_404,
  3, 208, :_reduce_405,
  1, 267, :_reduce_406,
  3, 267, :_reduce_407,
  1, 262, :_reduce_408,
  2, 262, :_reduce_409,
  1, 263, :_reduce_410,
  2, 263, :_reduce_411,
  1, 266, :_reduce_412,
  0, 269, :_reduce_413,
  3, 266, :_reduce_414,
  0, 270, :_reduce_415,
  4, 266, :_reduce_416,
  1, 268, :_reduce_417,
  1, 268, :_reduce_418,
  1, 268, :_reduce_419,
  1, 268, :_reduce_none,
  2, 189, :_reduce_421,
  1, 189, :_reduce_422,
  1, 271, :_reduce_none,
  1, 271, :_reduce_none,
  1, 271, :_reduce_none,
  1, 271, :_reduce_none,
  3, 259, :_reduce_427,
  1, 258, :_reduce_428,
  1, 258, :_reduce_429,
  2, 258, :_reduce_430,
  2, 258, :_reduce_431,
  2, 258, :_reduce_432,
  2, 258, :_reduce_433,
  1, 183, :_reduce_434,
  1, 183, :_reduce_435,
  1, 183, :_reduce_436,
  1, 183, :_reduce_437,
  1, 183, :_reduce_438,
  1, 183, :_reduce_439,
  1, 183, :_reduce_440,
  1, 183, :_reduce_441,
  1, 183, :_reduce_442,
  1, 183, :_reduce_443,
  1, 183, :_reduce_444,
  1, 209, :_reduce_445,
  1, 159, :_reduce_446,
  1, 162, :_reduce_447,
  1, 162, :_reduce_none,
  1, 219, :_reduce_449,
  3, 219, :_reduce_450,
  2, 219, :_reduce_451,
  4, 221, :_reduce_452,
  2, 221, :_reduce_453,
  6, 272, :_reduce_454,
  4, 272, :_reduce_455,
  4, 272, :_reduce_456,
  2, 272, :_reduce_457,
  4, 272, :_reduce_458,
  2, 272, :_reduce_459,
  2, 272, :_reduce_460,
  1, 272, :_reduce_461,
  0, 272, :_reduce_462,
  1, 275, :_reduce_none,
  1, 275, :_reduce_464,
  1, 276, :_reduce_465,
  1, 276, :_reduce_466,
  1, 276, :_reduce_467,
  1, 276, :_reduce_468,
  1, 277, :_reduce_469,
  3, 277, :_reduce_470,
  1, 218, :_reduce_none,
  1, 218, :_reduce_none,
  1, 279, :_reduce_473,
  3, 279, :_reduce_none,
  1, 280, :_reduce_475,
  3, 280, :_reduce_476,
  1, 278, :_reduce_none,
  4, 278, :_reduce_none,
  3, 278, :_reduce_none,
  2, 278, :_reduce_none,
  1, 278, :_reduce_none,
  1, 247, :_reduce_482,
  3, 247, :_reduce_483,
  3, 281, :_reduce_484,
  1, 273, :_reduce_485,
  3, 273, :_reduce_486,
  1, 282, :_reduce_none,
  1, 282, :_reduce_none,
  2, 248, :_reduce_489,
  1, 248, :_reduce_490,
  1, 283, :_reduce_none,
  1, 283, :_reduce_none,
  2, 245, :_reduce_493,
  2, 274, :_reduce_494,
  0, 274, :_reduce_495,
  1, 222, :_reduce_496,
  4, 222, :_reduce_497,
  0, 210, :_reduce_498,
  2, 210, :_reduce_499,
  1, 195, :_reduce_500,
  3, 195, :_reduce_501,
  3, 284, :_reduce_502,
  2, 284, :_reduce_503,
  1, 176, :_reduce_none,
  1, 176, :_reduce_none,
  1, 176, :_reduce_none,
  1, 172, :_reduce_none,
  1, 172, :_reduce_none,
  1, 172, :_reduce_none,
  1, 172, :_reduce_none,
  1, 251, :_reduce_none,
  1, 251, :_reduce_none,
  1, 251, :_reduce_none,
  1, 223, :_reduce_none,
  1, 223, :_reduce_none,
  0, 143, :_reduce_none,
  1, 143, :_reduce_none,
  0, 190, :_reduce_none,
  1, 190, :_reduce_none,
  0, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 220, :_reduce_none,
  1, 220, :_reduce_none,
  1, 145, :_reduce_none,
  2, 145, :_reduce_none,
  0, 192, :_reduce_527 ]

racc_reduce_n = 528

racc_shift_n = 929

racc_token_table = {
  false => 0,
  :error => 1,
  :kCLASS => 2,
  :kMODULE => 3,
  :kDEF => 4,
  :kUNDEF => 5,
  :kBEGIN => 6,
  :kRESCUE => 7,
  :kENSURE => 8,
  :kEND => 9,
  :kIF => 10,
  :kUNLESS => 11,
  :kTHEN => 12,
  :kELSIF => 13,
  :kELSE => 14,
  :kCASE => 15,
  :kWHEN => 16,
  :kWHILE => 17,
  :kUNTIL => 18,
  :kFOR => 19,
  :kBREAK => 20,
  :kNEXT => 21,
  :kREDO => 22,
  :kRETRY => 23,
  :kIN => 24,
  :kDO => 25,
  :kDO_COND => 26,
  :kDO_BLOCK => 27,
  :kDO_LAMBDA => 28,
  :kRETURN => 29,
  :kYIELD => 30,
  :kSUPER => 31,
  :kSELF => 32,
  :kNIL => 33,
  :kTRUE => 34,
  :kFALSE => 35,
  :kAND => 36,
  :kOR => 37,
  :kNOT => 38,
  :kIF_MOD => 39,
  :kUNLESS_MOD => 40,
  :kWHILE_MOD => 41,
  :kUNTIL_MOD => 42,
  :kRESCUE_MOD => 43,
  :kALIAS => 44,
  :kDEFINED => 45,
  :klBEGIN => 46,
  :klEND => 47,
  :k__LINE__ => 48,
  :k__FILE__ => 49,
  :k__ENCODING__ => 50,
  :tIDENTIFIER => 51,
  :tFID => 52,
  :tGVAR => 53,
  :tIVAR => 54,
  :tCONSTANT => 55,
  :tLABEL => 56,
  :tCVAR => 57,
  :tNTH_REF => 58,
  :tBACK_REF => 59,
  :tSTRING_CONTENT => 60,
  :tINTEGER => 61,
  :tFLOAT => 62,
  :tREGEXP_END => 63,
  :tUPLUS => 64,
  :tUMINUS => 65,
  :tUMINUS_NUM => 66,
  :tPOW => 67,
  :tCMP => 68,
  :tEQ => 69,
  :tEQQ => 70,
  :tNEQ => 71,
  :tGEQ => 72,
  :tLEQ => 73,
  :tANDOP => 74,
  :tOROP => 75,
  :tMATCH => 76,
  :tNMATCH => 77,
  :tDOT => 78,
  :tDOT2 => 79,
  :tDOT3 => 80,
  :tAREF => 81,
  :tASET => 82,
  :tLSHFT => 83,
  :tRSHFT => 84,
  :tCOLON2 => 85,
  :tCOLON3 => 86,
  :tOP_ASGN => 87,
  :tASSOC => 88,
  :tLPAREN => 89,
  :tLPAREN2 => 90,
  :tRPAREN => 91,
  :tLPAREN_ARG => 92,
  :ARRAY_BEG => 93,
  :tRBRACK => 94,
  :tLBRACE => 95,
  :tLBRACE_ARG => 96,
  :tSTAR => 97,
  :tSTAR2 => 98,
  :tAMPER => 99,
  :tAMPER2 => 100,
  :tTILDE => 101,
  :tPERCENT => 102,
  :tDIVIDE => 103,
  :tPLUS => 104,
  :tMINUS => 105,
  :tLT => 106,
  :tGT => 107,
  :tPIPE => 108,
  :tBANG => 109,
  :tCARET => 110,
  :tLCURLY => 111,
  :tRCURLY => 112,
  :tBACK_REF2 => 113,
  :tSYMBEG => 114,
  :tSTRING_BEG => 115,
  :tXSTRING_BEG => 116,
  :tREGEXP_BEG => 117,
  :tWORDS_BEG => 118,
  :tAWORDS_BEG => 119,
  :tSTRING_DBEG => 120,
  :tSTRING_DVAR => 121,
  :tSTRING_END => 122,
  :tSTRING => 123,
  :tSYMBOL => 124,
  :tNL => 125,
  :tEH => 126,
  :tCOLON => 127,
  :tCOMMA => 128,
  :tSPACE => 129,
  :tSEMI => 130,
  :tLAMBDA => 131,
  :tLAMBEG => 132,
  :tLBRACK2 => 133,
  :tLBRACK => 134,
  :tEQL => 135,
  :tLOWEST => 136,
  "-@NUM" => 137,
  "+@NUM" => 138 }

racc_nt_base = 139

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "kCLASS",
  "kMODULE",
  "kDEF",
  "kUNDEF",
  "kBEGIN",
  "kRESCUE",
  "kENSURE",
  "kEND",
  "kIF",
  "kUNLESS",
  "kTHEN",
  "kELSIF",
  "kELSE",
  "kCASE",
  "kWHEN",
  "kWHILE",
  "kUNTIL",
  "kFOR",
  "kBREAK",
  "kNEXT",
  "kREDO",
  "kRETRY",
  "kIN",
  "kDO",
  "kDO_COND",
  "kDO_BLOCK",
  "kDO_LAMBDA",
  "kRETURN",
  "kYIELD",
  "kSUPER",
  "kSELF",
  "kNIL",
  "kTRUE",
  "kFALSE",
  "kAND",
  "kOR",
  "kNOT",
  "kIF_MOD",
  "kUNLESS_MOD",
  "kWHILE_MOD",
  "kUNTIL_MOD",
  "kRESCUE_MOD",
  "kALIAS",
  "kDEFINED",
  "klBEGIN",
  "klEND",
  "k__LINE__",
  "k__FILE__",
  "k__ENCODING__",
  "tIDENTIFIER",
  "tFID",
  "tGVAR",
  "tIVAR",
  "tCONSTANT",
  "tLABEL",
  "tCVAR",
  "tNTH_REF",
  "tBACK_REF",
  "tSTRING_CONTENT",
  "tINTEGER",
  "tFLOAT",
  "tREGEXP_END",
  "tUPLUS",
  "tUMINUS",
  "tUMINUS_NUM",
  "tPOW",
  "tCMP",
  "tEQ",
  "tEQQ",
  "tNEQ",
  "tGEQ",
  "tLEQ",
  "tANDOP",
  "tOROP",
  "tMATCH",
  "tNMATCH",
  "tDOT",
  "tDOT2",
  "tDOT3",
  "tAREF",
  "tASET",
  "tLSHFT",
  "tRSHFT",
  "tCOLON2",
  "tCOLON3",
  "tOP_ASGN",
  "tASSOC",
  "tLPAREN",
  "tLPAREN2",
  "tRPAREN",
  "tLPAREN_ARG",
  "ARRAY_BEG",
  "tRBRACK",
  "tLBRACE",
  "tLBRACE_ARG",
  "tSTAR",
  "tSTAR2",
  "tAMPER",
  "tAMPER2",
  "tTILDE",
  "tPERCENT",
  "tDIVIDE",
  "tPLUS",
  "tMINUS",
  "tLT",
  "tGT",
  "tPIPE",
  "tBANG",
  "tCARET",
  "tLCURLY",
  "tRCURLY",
  "tBACK_REF2",
  "tSYMBEG",
  "tSTRING_BEG",
  "tXSTRING_BEG",
  "tREGEXP_BEG",
  "tWORDS_BEG",
  "tAWORDS_BEG",
  "tSTRING_DBEG",
  "tSTRING_DVAR",
  "tSTRING_END",
  "tSTRING",
  "tSYMBOL",
  "tNL",
  "tEH",
  "tCOLON",
  "tCOMMA",
  "tSPACE",
  "tSEMI",
  "tLAMBDA",
  "tLAMBEG",
  "tLBRACK2",
  "tLBRACK",
  "tEQL",
  "tLOWEST",
  "\"-@NUM\"",
  "\"+@NUM\"",
  "$start",
  "program",
  "top_compstmt",
  "top_stmts",
  "opt_terms",
  "top_stmt",
  "terms",
  "stmt",
  "bodystmt",
  "compstmt",
  "opt_rescue",
  "opt_else",
  "opt_ensure",
  "stmts",
  "fitem",
  "undef_list",
  "expr_value",
  "lhs",
  "command_call",
  "mlhs",
  "var_lhs",
  "primary_value",
  "aref_args",
  "backref",
  "mrhs",
  "arg_value",
  "expr",
  "@1",
  "arg",
  "command",
  "block_command",
  "call_args",
  "block_call",
  "operation2",
  "command_args",
  "cmd_brace_block",
  "opt_block_var",
  "operation",
  "mlhs_basic",
  "mlhs_entry",
  "mlhs_head",
  "mlhs_item",
  "mlhs_node",
  "mlhs_post",
  "variable",
  "cname",
  "cpath",
  "fname",
  "op",
  "reswords",
  "symbol",
  "opt_nl",
  "primary",
  "none",
  "args",
  "trailer",
  "assocs",
  "paren_args",
  "opt_paren_args",
  "opt_block_arg",
  "block_arg",
  "call_args2",
  "open_args",
  "@2",
  "literal",
  "strings",
  "xstring",
  "regexp",
  "words",
  "awords",
  "var_ref",
  "assoc_list",
  "brace_block",
  "method_call",
  "lambda",
  "then",
  "if_tail",
  "do",
  "case_body",
  "for_var",
  "superclass",
  "term",
  "f_arglist",
  "singleton",
  "dot_or_colon",
  "@3",
  "@4",
  "@5",
  "@6",
  "@7",
  "@8",
  "@9",
  "@10",
  "@11",
  "@12",
  "@13",
  "@14",
  "@15",
  "@16",
  "@17",
  "f_larglist",
  "lambda_body",
  "block_param",
  "f_block_optarg",
  "f_block_opt",
  "block_args_tail",
  "f_block_arg",
  "opt_block_args_tail",
  "f_arg",
  "f_rest_arg",
  "do_block",
  "@18",
  "operation3",
  "@19",
  "@20",
  "cases",
  "@21",
  "exc_list",
  "exc_var",
  "numeric",
  "dsym",
  "string",
  "string1",
  "string_contents",
  "xstring_contents",
  "word_list",
  "word",
  "string_content",
  "qword_list",
  "string_dvar",
  "@22",
  "@23",
  "sym",
  "f_args",
  "f_optarg",
  "opt_f_block_arg",
  "f_norm_arg",
  "f_bad_arg",
  "f_arg_item",
  "f_margs",
  "f_marg",
  "f_marg_list",
  "f_opt",
  "restarg_mark",
  "blkarg_mark",
  "assoc" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

def _reduce_2(val, _values, result)
                      result = new_compstmt val[0]
                    
    result
end

def _reduce_3(val, _values, result)
                      result = new_block
                    
    result
end

def _reduce_4(val, _values, result)
                      result = new_block val[0]
                    
    result
end

def _reduce_5(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

# reduce 6 omitted

def _reduce_7(val, _values, result)
                      result = val[2]
                    
    result
end

def _reduce_8(val, _values, result)
                      result = new_body(val[0], val[1], val[2], val[3])
                    
    result
end

def _reduce_9(val, _values, result)
                      result = new_compstmt val[0]
                    
    result
end

def _reduce_10(val, _values, result)
                      result = new_block
                    
    result
end

def _reduce_11(val, _values, result)
                      result = new_block val[0]
                    
    result
end

def _reduce_12(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_13(val, _values, result)
                      lexer.lex_state = :expr_fname
                    
    result
end

def _reduce_14(val, _values, result)
                      result = new_alias(val[0], val[1], val[3])
                    
    result
end

def _reduce_15(val, _values, result)
                      result = s(:valias, value(val[1]).to_sym, value(val[2]).to_sym)
                    
    result
end

# reduce 16 omitted

def _reduce_17(val, _values, result)
                      result = s(:valias, value(val[1]).to_sym, value(val[2]).to_sym)
                    
    result
end

def _reduce_18(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_19(val, _values, result)
                      result = new_if(val[1], val[2], val[0], nil)
                    
    result
end

def _reduce_20(val, _values, result)
                      result = new_if(val[1], val[2], nil, val[0])
                    
    result
end

def _reduce_21(val, _values, result)
                      result = new_while(val[1], val[2], val[0])
                    
    result
end

def _reduce_22(val, _values, result)
                      result = new_until(val[1], val[2], val[0])
                    
    result
end

def _reduce_23(val, _values, result)
                      result = new_rescue_mod(val[1], val[0], val[2])
                    
    result
end

# reduce 24 omitted

def _reduce_25(val, _values, result)
                      result = new_assign(val[0], val[1], val[2])
                    
    result
end

def _reduce_26(val, _values, result)
                      result = s(:masgn, val[0], s(:to_ary, val[2]))
                    
    result
end

def _reduce_27(val, _values, result)
                      result = new_op_asgn val[1], val[0], val[2]
                    
    result
end

# reduce 28 omitted

def _reduce_29(val, _values, result)
                      result = s(:op_asgn2, val[0], op_to_setter(val[2]), value(val[3]).to_sym, val[4])
                    
    result
end

# reduce 30 omitted

# reduce 31 omitted

# reduce 32 omitted

def _reduce_33(val, _values, result)
                      result = new_assign val[0], val[1], s(:svalue, val[2])
                    
    result
end

def _reduce_34(val, _values, result)
                      result = s(:masgn, val[0], s(:to_ary, val[2]))
                    
    result
end

def _reduce_35(val, _values, result)
                      result = s(:masgn, val[0], val[2])
                    
    result
end

# reduce 36 omitted

# reduce 37 omitted

def _reduce_38(val, _values, result)
                      result = s(:and, val[0], val[2])
                    
    result
end

def _reduce_39(val, _values, result)
                      result = s(:or, val[0], val[2])
                    
    result
end

def _reduce_40(val, _values, result)
                      result = new_unary_call(['!', []], val[1])
                    
    result
end

def _reduce_41(val, _values, result)
                      result = new_unary_call(val[0], val[1])
                    
    result
end

# reduce 42 omitted

# reduce 43 omitted

# reduce 44 omitted

# reduce 45 omitted

def _reduce_46(val, _values, result)
                      result = new_return(val[0], val[1])
                    
    result
end

def _reduce_47(val, _values, result)
                      result = new_break(val[0], val[1])
                    
    result
end

def _reduce_48(val, _values, result)
                      result = new_next(val[0], val[1])
                    
    result
end

# reduce 49 omitted

# reduce 50 omitted

# reduce 51 omitted

# reduce 52 omitted

def _reduce_53(val, _values, result)
                      result = new_call(nil, val[0], val[1])
                    
    result
end

# reduce 54 omitted

def _reduce_55(val, _values, result)
                      result = new_call(val[0], val[2], val[3])
                    
    result
end

# reduce 56 omitted

def _reduce_57(val, _values, result)
                    result = new_call(val[0], val[2], val[3])
                  
    result
end

# reduce 58 omitted

def _reduce_59(val, _values, result)
                      result = new_super(val[0], val[1])
                    
    result
end

def _reduce_60(val, _values, result)
                      result = new_yield val[1]
                    
    result
end

def _reduce_61(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_62(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_63(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_64(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_65(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_66(val, _values, result)
                      result = val[0] << val[1]
                    
    result
end

def _reduce_67(val, _values, result)
                      result = val[0] << s(:splat, val[2])
                    
    result
end

# reduce 68 omitted

def _reduce_69(val, _values, result)
                      result = val[0] << s(:splat)
                    
    result
end

# reduce 70 omitted

def _reduce_71(val, _values, result)
                      result = s(:array, s(:splat, val[1]))
                    
    result
end

def _reduce_72(val, _values, result)
                      result = s(:array, s(:splat))
                    
    result
end

# reduce 73 omitted

def _reduce_74(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_75(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_76(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

def _reduce_77(val, _values, result)
                      result = val[0] << val[1]
                    
    result
end

# reduce 78 omitted

# reduce 79 omitted

def _reduce_80(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_81(val, _values, result)
                      args = val[2] ? val[2] : []
                      result = s(:attrasgn, val[0], :[]=, s(:arglist, *args))
                    
    result
end

def _reduce_82(val, _values, result)
                      result = new_call val[0], val[2], []
                    
    result
end

# reduce 83 omitted

# reduce 84 omitted

# reduce 85 omitted

# reduce 86 omitted

# reduce 87 omitted

def _reduce_88(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_89(val, _values, result)
                      result = new_attrasgn(val[0], :[]=, val[2])
                    
    result
end

def _reduce_90(val, _values, result)
                      result = new_attrasgn(val[0], op_to_setter(val[2]))
                    
    result
end

def _reduce_91(val, _values, result)
                      result = new_attrasgn(val[0], op_to_setter(val[2]))
                    
    result
end

def _reduce_92(val, _values, result)
                      result = new_attrasgn(val[0], op_to_setter(val[2]))
                    
    result
end

def _reduce_93(val, _values, result)
                      result = new_colon2(val[0], val[1], val[2])
                    
    result
end

def _reduce_94(val, _values, result)
                      result = new_colon3(val[0], val[1])
                    
    result
end

# reduce 95 omitted

# reduce 96 omitted

def _reduce_97(val, _values, result)
                      result = new_colon3(val[0], val[1])
                    
    result
end

def _reduce_98(val, _values, result)
                      result = new_const(val[0])
                    
    result
end

def _reduce_99(val, _values, result)
                      result = new_colon2(val[0], val[1], val[2])
                    
    result
end

# reduce 100 omitted

# reduce 101 omitted

# reduce 102 omitted

def _reduce_103(val, _values, result)
                      lexer.lex_state = :expr_end
                      result = val[0]
                    
    result
end

def _reduce_104(val, _values, result)
                      lexer.lex_state = :expr_end
                      result = val[0]
                    
    result
end

def _reduce_105(val, _values, result)
                      result = new_sym(val[0])
                    
    result
end

# reduce 106 omitted

def _reduce_107(val, _values, result)
                      result = s(:undef, val[0])
                    
    result
end

def _reduce_108(val, _values, result)
                      result = val[0] << val[2]
                    
    result
end

# reduce 109 omitted

# reduce 110 omitted

# reduce 111 omitted

# reduce 112 omitted

# reduce 113 omitted

# reduce 114 omitted

# reduce 115 omitted

# reduce 116 omitted

# reduce 117 omitted

# reduce 118 omitted

# reduce 119 omitted

# reduce 120 omitted

# reduce 121 omitted

# reduce 122 omitted

# reduce 123 omitted

# reduce 124 omitted

# reduce 125 omitted

# reduce 126 omitted

# reduce 127 omitted

# reduce 128 omitted

# reduce 129 omitted

# reduce 130 omitted

# reduce 131 omitted

# reduce 132 omitted

# reduce 133 omitted

# reduce 134 omitted

# reduce 135 omitted

# reduce 136 omitted

# reduce 137 omitted

# reduce 138 omitted

# reduce 139 omitted

# reduce 140 omitted

# reduce 141 omitted

# reduce 142 omitted

# reduce 143 omitted

# reduce 144 omitted

# reduce 145 omitted

# reduce 146 omitted

# reduce 147 omitted

# reduce 148 omitted

# reduce 149 omitted

# reduce 150 omitted

# reduce 151 omitted

# reduce 152 omitted

# reduce 153 omitted

# reduce 154 omitted

# reduce 155 omitted

# reduce 156 omitted

# reduce 157 omitted

# reduce 158 omitted

# reduce 159 omitted

# reduce 160 omitted

# reduce 161 omitted

# reduce 162 omitted

# reduce 163 omitted

# reduce 164 omitted

# reduce 165 omitted

# reduce 166 omitted

# reduce 167 omitted

# reduce 168 omitted

# reduce 169 omitted

# reduce 170 omitted

# reduce 171 omitted

# reduce 172 omitted

# reduce 173 omitted

# reduce 174 omitted

# reduce 175 omitted

# reduce 176 omitted

# reduce 177 omitted

# reduce 178 omitted

# reduce 179 omitted

# reduce 180 omitted

# reduce 181 omitted

# reduce 182 omitted

def _reduce_183(val, _values, result)
                      result = new_assign(val[0], val[1], val[2])
                    
    result
end

def _reduce_184(val, _values, result)
                      result = new_assign val[0], val[1], s(:rescue_mod, val[2], val[4])
                    
    result
end

def _reduce_185(val, _values, result)
                      result = new_op_asgn val[1], val[0], val[2]
                    
    result
end

def _reduce_186(val, _values, result)
                      result = new_op_asgn1(val[0], val[2], val[4], val[5])
                    
    result
end

def _reduce_187(val, _values, result)
                      result = s(:op_asgn2, val[0], op_to_setter(val[2]), value(val[3]).to_sym, val[4])
                    
    result
end

# reduce 188 omitted

# reduce 189 omitted

# reduce 190 omitted

# reduce 191 omitted

# reduce 192 omitted

def _reduce_193(val, _values, result)
                      result = new_irange(val[0], val[1], val[2])
                    
    result
end

def _reduce_194(val, _values, result)
                      result = new_erange(val[0], val[1], val[2])
                    
    result
end

def _reduce_195(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_196(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_197(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_198(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_199(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_200(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_201(val, _values, result)
                      result = new_call new_binary_call(new_int(val[1]), val[2], val[3]), [:"-@", []], []
                    
    result
end

def _reduce_202(val, _values, result)
                      result = new_call new_binary_call(new_float(val[1]), val[2], val[3]), [:"-@", []], []
                    
    result
end

def _reduce_203(val, _values, result)
                      result = new_call val[1], [:"+@", []], []
                      if [:int, :float].include? val[1].type
                        result = val[1]
                      end
                    
    result
end

def _reduce_204(val, _values, result)
                      result = new_call val[1], [:"-@", []], []
                      if val[1].type == :int
                        val[1][1] = -val[1][1]
                        result = val[1]
                      elsif val[1].type == :float
                        val[1][1] = -val[1][1].to_f
                        result = val[1]
                      end
                    
    result
end

def _reduce_205(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_206(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_207(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_208(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_209(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_210(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_211(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_212(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_213(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_214(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_215(val, _values, result)
                      result = new_unary_call(['!', []], new_binary_call(
                                 val[0], ['==', []], val[2]))
                    
    result
end

def _reduce_216(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_217(val, _values, result)
                      result = new_not(val[1], new_binary_call(
                                 val[0], ['=~', []], val[2]))
                    
    result
end

def _reduce_218(val, _values, result)
                      result = new_unary_call(val[0], val[1])
                    
    result
end

def _reduce_219(val, _values, result)
                      result = new_unary_call(val[0], val[1])
                    
    result
end

def _reduce_220(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_221(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_222(val, _values, result)
                      result = new_and(val[0], val[1], val[2])
                    
    result
end

def _reduce_223(val, _values, result)
                      result = new_or(val[0], val[1], val[2])
                    
    result
end

def _reduce_224(val, _values, result)
                      result = s(:defined, val[2])
                    
    result
end

def _reduce_225(val, _values, result)
                      result = new_if(val[1], val[0], val[2], val[4])
                    
    result
end

# reduce 226 omitted

# reduce 227 omitted

def _reduce_228(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_229(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_230(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_231(val, _values, result)
                      val[0] << s(:hash, *val[2])
                      result = val[0]
                    
    result
end

def _reduce_232(val, _values, result)
                      result = [s(:hash, *val[0])]
                    
    result
end

def _reduce_233(val, _values, result)
                      result = []
                    
    result
end

def _reduce_234(val, _values, result)
                      result = val[1]
                    
    result
end

# reduce 235 omitted

# reduce 236 omitted

def _reduce_237(val, _values, result)
                      result = []
                    
    result
end

# reduce 238 omitted

def _reduce_239(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_240(val, _values, result)
                      result = val[0]
                      add_block_pass val[0], val[1]
                    
    result
end

def _reduce_241(val, _values, result)
                      result = [new_hash(nil, val[0], nil)]
                      add_block_pass result, val[1]
                    
    result
end

def _reduce_242(val, _values, result)
                      result = val[0]
                      result << new_hash(nil, val[2], nil)
                    
    result
end

def _reduce_243(val, _values, result)
                      result = []
                      add_block_pass result, val[0]
                    
    result
end

# reduce 244 omitted

# reduce 245 omitted

def _reduce_246(val, _values, result)
                      lexer.cmdarg_push 1
                    
    result
end

def _reduce_247(val, _values, result)
                      lexer.cmdarg_pop
                      result = val[1]
                    
    result
end

# reduce 248 omitted

def _reduce_249(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_250(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_251(val, _values, result)
                      result = new_block_pass(val[0], val[1])
                    
    result
end

def _reduce_252(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_253(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_254(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_255(val, _values, result)
                      result = [new_splat(val[0], val[1])]
                    
    result
end

def _reduce_256(val, _values, result)
                      result = val[0] << val[2]
                    
    result
end

def _reduce_257(val, _values, result)
                      result  = val[0] << new_splat(val[2], val[3])
                    
    result
end

def _reduce_258(val, _values, result)
                      val[0] << val[2]
                      result = s(:array, *val[0])
                    
    result
end

def _reduce_259(val, _values, result)
                      val[0] << s(:splat, val[3])
                      result = s(:array, *val[0])
                    
    result
end

def _reduce_260(val, _values, result)
                      result = s(:splat, val[1])
                    
    result
end

# reduce 261 omitted

# reduce 262 omitted

# reduce 263 omitted

# reduce 264 omitted

# reduce 265 omitted

# reduce 266 omitted

# reduce 267 omitted

# reduce 268 omitted

# reduce 269 omitted

def _reduce_270(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_271(val, _values, result)
                      result = s(:begin, val[2])
                    
    result
end

def _reduce_272(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_273(val, _values, result)
                      result = new_paren(val[0], val[1], val[2])
                    
    result
end

def _reduce_274(val, _values, result)
                      result = new_colon2(val[0], val[1], val[2])
                    
    result
end

def _reduce_275(val, _values, result)
                      result = new_colon3(val[0], val[1])
                    
    result
end

def _reduce_276(val, _values, result)
                      result = new_call val[0], [:[], []], val[2]
                    
    result
end

def _reduce_277(val, _values, result)
                      result = new_array(val[0], val[1], val[2])
                    
    result
end

def _reduce_278(val, _values, result)
                      result = new_hash(val[0], val[1], val[2])
                    
    result
end

def _reduce_279(val, _values, result)
                      result = new_return(val[0])
                    
    result
end

def _reduce_280(val, _values, result)
                      result = new_yield val[2]
                    
    result
end

def _reduce_281(val, _values, result)
                      result = s(:yield)
                    
    result
end

def _reduce_282(val, _values, result)
                      result = s(:yield)
                    
    result
end

def _reduce_283(val, _values, result)
                      result = s(:defined, val[3])
                    
    result
end

def _reduce_284(val, _values, result)
                      result = new_unary_call(['!', []], val[2])
                    
    result
end

def _reduce_285(val, _values, result)
                      result = new_unary_call(['!', []], new_nil(val[0]))
                    
    result
end

def _reduce_286(val, _values, result)
                      result = new_call(nil, val[0], [])
                      result << val[1]
                    
    result
end

# reduce 287 omitted

def _reduce_288(val, _values, result)
                      val[0] << val[1]
                      result = val[0]
                    
    result
end

def _reduce_289(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_290(val, _values, result)
                      result = new_if(val[0], val[1], val[3], val[4])
                    
    result
end

def _reduce_291(val, _values, result)
                      result = new_if(val[0], val[1], val[4], val[3])
                    
    result
end

def _reduce_292(val, _values, result)
                      lexer.cond_push 1
                      result = lexer.line
                    
    result
end

def _reduce_293(val, _values, result)
                      lexer.cond_pop
                    
    result
end

def _reduce_294(val, _values, result)
                      result = s(:while, val[2], val[5])
                    
    result
end

def _reduce_295(val, _values, result)
                      lexer.cond_push 1
                      result = lexer.line
                    
    result
end

def _reduce_296(val, _values, result)
                      lexer.cond_pop
                    
    result
end

def _reduce_297(val, _values, result)
                      result = s(:until, val[2], val[5])
                    
    result
end

def _reduce_298(val, _values, result)
                      result = s(:case, val[1], *val[3])
                    
    result
end

def _reduce_299(val, _values, result)
                      result = s(:case, nil, *val[2])
                    
    result
end

def _reduce_300(val, _values, result)
                      result = s(:case, nil, val[3])
                    
    result
end

def _reduce_301(val, _values, result)
                      lexer.cond_push 1
                      result = lexer.line
                    
    result
end

def _reduce_302(val, _values, result)
                      lexer.cond_pop
                    
    result
end

def _reduce_303(val, _values, result)
                      result = s(:for, val[4], val[1], val[7])
                    
    result
end

def _reduce_304(val, _values, result)
                      # ...
                    
    result
end

def _reduce_305(val, _values, result)
                      result = new_class val[0], val[1], val[2], val[4], val[5]
                    
    result
end

def _reduce_306(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_307(val, _values, result)
                      # ...
                    
    result
end

def _reduce_308(val, _values, result)
                      result = new_sclass(val[0], val[3], val[6], val[7])
                    
    result
end

def _reduce_309(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_310(val, _values, result)
                      # ...
                    
    result
end

def _reduce_311(val, _values, result)
                      result = new_module(val[0], val[2], val[4], val[5])
                    
    result
end

def _reduce_312(val, _values, result)
                      push_scope
                    
    result
end

def _reduce_313(val, _values, result)
                      result = new_def(val[0], nil, val[1], val[3], val[4], val[5])
                      pop_scope
                    
    result
end

def _reduce_314(val, _values, result)
                       lexer.lex_state = :expr_fname
                    
    result
end

def _reduce_315(val, _values, result)
                      push_scope
                    
    result
end

def _reduce_316(val, _values, result)
                      result = new_def(val[0], val[1], val[4], val[6], val[7], val[8])
                      pop_scope
                    
    result
end

def _reduce_317(val, _values, result)
                      result = new_break(val[0])
                    
    result
end

def _reduce_318(val, _values, result)
                      result = s(:next)
                    
    result
end

def _reduce_319(val, _values, result)
                      result = s(:redo)
                    
    result
end

# reduce 320 omitted

# reduce 321 omitted

# reduce 322 omitted

# reduce 323 omitted

# reduce 324 omitted

# reduce 325 omitted

# reduce 326 omitted

# reduce 327 omitted

# reduce 328 omitted

def _reduce_329(val, _values, result)
                      result = new_call nil, [:lambda, []], []
                      result << new_iter(val[0], val[1])
                    
    result
end

def _reduce_330(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_331(val, _values, result)
                      result = nil
                    
    result
end

# reduce 332 omitted

# reduce 333 omitted

def _reduce_334(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_335(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_336(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_337(val, _values, result)
                      result = new_if(val[0], val[1], val[3], val[4])
                    
    result
end

# reduce 338 omitted

def _reduce_339(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_340(val, _values, result)
                      result = s(:block, val[0])
                    
    result
end

def _reduce_341(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_342(val, _values, result)
                      result = new_assign(new_assignable(new_ident(
                                  val[0])), val[1], val[2])
                    
    result
end

# reduce 343 omitted

def _reduce_344(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_345(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_346(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_347(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_348(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_349(val, _values, result)
                      nil
                    
    result
end

def _reduce_350(val, _values, result)
                      result = new_block_args(val[0], val[2], val[4], val[5])
                    
    result
end

def _reduce_351(val, _values, result)
                      result = new_block_args(val[0], val[2], nil, val[3])
                    
    result
end

def _reduce_352(val, _values, result)
                      result = new_block_args(val[0], nil, val[2], val[3])
                    
    result
end

def _reduce_353(val, _values, result)
                      result = new_block_args(val[0], nil, nil, nil)
                    
    result
end

def _reduce_354(val, _values, result)
                      result = new_block_args(val[0], nil, nil, val[1])
                    
    result
end

def _reduce_355(val, _values, result)
                      result = new_block_args(nil, val[0], val[2], val[3])
                    
    result
end

def _reduce_356(val, _values, result)
                      result = new_block_args(nil, val[0], nil, val[1])
                    
    result
end

def _reduce_357(val, _values, result)
                      result = new_block_args(nil, nil, val[0], val[1])
                    
    result
end

def _reduce_358(val, _values, result)
                      result = new_block_args(nil, nil, nil, val[0])
                    
    result
end

def _reduce_359(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_360(val, _values, result)
                      result = new_iter val[2], val[3]
                      pop_scope
                    
    result
end

def _reduce_361(val, _values, result)
                      val[0] << val[1]
                      result = val[0]
                    
    result
end

# reduce 362 omitted

# reduce 363 omitted

def _reduce_364(val, _values, result)
                      result = new_call(nil, val[0], val[1])
                    
    result
end

def _reduce_365(val, _values, result)
                      result = new_call(val[0], val[2], val[3])
                    
    result
end

def _reduce_366(val, _values, result)
                      result = new_call(val[0], [:call, []], val[2])
                    
    result
end

def _reduce_367(val, _values, result)
                      result = new_call(val[0], val[2], val[3])
                    
    result
end

def _reduce_368(val, _values, result)
                      result = new_call(val[0], val[2])
                    
    result
end

def _reduce_369(val, _values, result)
                      result = new_super(val[0], val[1])
                    
    result
end

def _reduce_370(val, _values, result)
                      result = new_super(val[0], nil)
                    
    result
end

def _reduce_371(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_372(val, _values, result)
                      result = new_iter val[2], val[3]
                      pop_scope
                    
    result
end

def _reduce_373(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_374(val, _values, result)
                      result = new_iter val[2], val[3]
                      pop_scope
                    
    result
end

def _reduce_375(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_376(val, _values, result)
                      part = s(:when, s(:array, *val[2]), val[4])
                      result = [part]
                      result.push(*val[5]) if val[5]
                    
    result
end

def _reduce_377(val, _values, result)
                      result = [val[0]]
                    
    result
end

# reduce 378 omitted

def _reduce_379(val, _values, result)
                      exc = val[1] || s(:array)
                      exc << new_assign(val[2], val[2], s(:gvar, '$!'.intern)) if val[2]
                      result = [s(:resbody, exc, val[4])]
                      result.push val[5].first if val[5]
                    
    result
end

def _reduce_380(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_381(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

# reduce 382 omitted

# reduce 383 omitted

def _reduce_384(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_385(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_386(val, _values, result)
                      result = val[1].nil? ? s(:nil) : val[1]
                    
    result
end

# reduce 387 omitted

# reduce 388 omitted

# reduce 389 omitted

# reduce 390 omitted

def _reduce_391(val, _values, result)
                      result = new_str val[0]
                    
    result
end

# reduce 392 omitted

def _reduce_393(val, _values, result)
                    result = str_append val[0], val[1]
                  
    result
end

def _reduce_394(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_395(val, _values, result)
                      result = s(:str, value(val[0]))
                    
    result
end

def _reduce_396(val, _values, result)
                      result = new_xstr(val[0], val[1], val[2])
                    
    result
end

def _reduce_397(val, _values, result)
                      result = new_regexp val[1], val[2]
                    
    result
end

def _reduce_398(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_399(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_400(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_401(val, _values, result)
                      part = val[1]
                      part = s(:dstr, "", val[1]) if part.type == :evstr
                      result = val[0] << part
                    
    result
end

def _reduce_402(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_403(val, _values, result)
                      result = val[0].concat([val[1]])
                    
    result
end

def _reduce_404(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_405(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_406(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_407(val, _values, result)
                      result = val[0] << s(:str, value(val[1]))
                    
    result
end

def _reduce_408(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_409(val, _values, result)
                      result = str_append val[0], val[1]
                    
    result
end

def _reduce_410(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_411(val, _values, result)
                      result = str_append val[0], val[1]
                    
    result
end

def _reduce_412(val, _values, result)
                      result = new_str_content(val[0])
                    
    result
end

def _reduce_413(val, _values, result)
                      result = lexer.strterm
                      lexer.strterm = nil
                    
    result
end

def _reduce_414(val, _values, result)
                      lexer.strterm = val[1]
                      result = new_evstr(val[2])
                    
    result
end

def _reduce_415(val, _values, result)
                      lexer.cond_push 0
                      lexer.cmdarg_push 0
                      result = lexer.strterm
                      lexer.strterm = nil
                      lexer.lex_state = :expr_beg
                    
    result
end

def _reduce_416(val, _values, result)
                      lexer.strterm = val[1]
                      lexer.cond_lexpop
                      lexer.cmdarg_lexpop
                      result = new_evstr(val[2])
                    
    result
end

def _reduce_417(val, _values, result)
                      result = new_gvar(val[0])
                    
    result
end

def _reduce_418(val, _values, result)
                      result = new_ivar(val[0])
                    
    result
end

def _reduce_419(val, _values, result)
                      result = new_cvar(val[0])
                    
    result
end

# reduce 420 omitted

def _reduce_421(val, _values, result)
                      result = new_sym(val[1])
                      lexer.lex_state = :expr_end
                    
    result
end

def _reduce_422(val, _values, result)
                      result = new_sym(val[0])
                    
    result
end

# reduce 423 omitted

# reduce 424 omitted

# reduce 425 omitted

# reduce 426 omitted

def _reduce_427(val, _values, result)
                      result = new_dsym val[1]
                    
    result
end

def _reduce_428(val, _values, result)
                      result = new_int(val[0])
                    
    result
end

def _reduce_429(val, _values, result)
                      result = new_float(val[0])
                    
    result
end

def _reduce_430(val, _values, result)
                    result = negate_num(new_int(val[1]))
                  
    result
end

def _reduce_431(val, _values, result)
                    result = negate_num(new_float(val[1]))
                  
    result
end

def _reduce_432(val, _values, result)
                    result = new_int(val[1])
                  
    result
end

def _reduce_433(val, _values, result)
                    result = new_float(val[1])
                  
    result
end

def _reduce_434(val, _values, result)
                      result = new_ident(val[0])
                    
    result
end

def _reduce_435(val, _values, result)
                      result = new_ivar(val[0])
                    
    result
end

def _reduce_436(val, _values, result)
                      result = new_gvar(val[0])
                    
    result
end

def _reduce_437(val, _values, result)
                      result = new_const(val[0])
                    
    result
end

def _reduce_438(val, _values, result)
                      result = new_cvar(val[0])
                    
    result
end

def _reduce_439(val, _values, result)
                      result = new_nil(val[0])
                    
    result
end

def _reduce_440(val, _values, result)
                      result = new_self(val[0])
                    
    result
end

def _reduce_441(val, _values, result)
                      result = new_true(val[0])
                    
    result
end

def _reduce_442(val, _values, result)
                      result = new_false(val[0])
                    
    result
end

def _reduce_443(val, _values, result)
                      result = new___FILE__(val[0])
                    
    result
end

def _reduce_444(val, _values, result)
                      result = new___LINE__(val[0])
                    
    result
end

def _reduce_445(val, _values, result)
                      result = new_var_ref(val[0])
                    
    result
end

def _reduce_446(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_447(val, _values, result)
                      result = s(:nth_ref, value(val[0]))
                    
    result
end

# reduce 448 omitted

def _reduce_449(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_450(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_451(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_452(val, _values, result)
                      result = val[1]
                      lexer.lex_state = :expr_beg
                    
    result
end

def _reduce_453(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_454(val, _values, result)
                      result = new_args(val[0], val[2], val[4], val[5])
                    
    result
end

def _reduce_455(val, _values, result)
                      result = new_args(val[0], val[2], nil, val[3])
                    
    result
end

def _reduce_456(val, _values, result)
                      result = new_args(val[0], nil, val[2], val[3])
                    
    result
end

def _reduce_457(val, _values, result)
                      result = new_args(val[0], nil, nil, val[1])
                    
    result
end

def _reduce_458(val, _values, result)
                      result = new_args(nil, val[0], val[2], val[3])
                    
    result
end

def _reduce_459(val, _values, result)
                      result = new_args(nil, val[0], nil, val[1])
                    
    result
end

def _reduce_460(val, _values, result)
                      result = new_args(nil, nil, val[0], val[1])
                    
    result
end

def _reduce_461(val, _values, result)
                      result = new_args(nil, nil, nil, val[0])
                    
    result
end

def _reduce_462(val, _values, result)
                      result = new_args(nil, nil, nil, nil)
                    
    result
end

# reduce 463 omitted

def _reduce_464(val, _values, result)
                      result = value(val[0]).to_sym
                      scope.add_local result
                    
    result
end

def _reduce_465(val, _values, result)
                      raise 'formal argument cannot be a constant'
                    
    result
end

def _reduce_466(val, _values, result)
                      raise 'formal argument cannot be an instance variable'
                    
    result
end

def _reduce_467(val, _values, result)
                      raise 'formal argument cannot be a class variable'
                    
    result
end

def _reduce_468(val, _values, result)
                      raise 'formal argument cannot be a global variable'
                    
    result
end

def _reduce_469(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_470(val, _values, result)
                      result = val[1]
                    
    result
end

# reduce 471 omitted

# reduce 472 omitted

def _reduce_473(val, _values, result)
                      result = s(:lasgn, val[0])
                    
    result
end

# reduce 474 omitted

def _reduce_475(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

def _reduce_476(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

# reduce 477 omitted

# reduce 478 omitted

# reduce 479 omitted

# reduce 480 omitted

# reduce 481 omitted

def _reduce_482(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_483(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_484(val, _values, result)
                      result = new_assign(new_assignable(new_ident(val[0])), val[1], val[2])
                    
    result
end

def _reduce_485(val, _values, result)
                      result = s(:block, val[0])
                    
    result
end

def _reduce_486(val, _values, result)
                      result = val[0]
                      val[0] << val[2]
                    
    result
end

# reduce 487 omitted

# reduce 488 omitted

def _reduce_489(val, _values, result)
                      result = "*#{value(val[1])}".to_sym
                    
    result
end

def _reduce_490(val, _values, result)
                      result = :"*"
                    
    result
end

# reduce 491 omitted

# reduce 492 omitted

def _reduce_493(val, _values, result)
                      result = "&#{value(val[1])}".to_sym
                    
    result
end

def _reduce_494(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_495(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_496(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_497(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_498(val, _values, result)
                      result = []
                    
    result
end

def _reduce_499(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_500(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_501(val, _values, result)
                      result = val[0].push(*val[2])
                    
    result
end

def _reduce_502(val, _values, result)
                      result = [val[0], val[2]]
                    
    result
end

def _reduce_503(val, _values, result)
                      result = [new_sym(val[0]), val[1]]
                    
    result
end

# reduce 504 omitted

# reduce 505 omitted

# reduce 506 omitted

# reduce 507 omitted

# reduce 508 omitted

# reduce 509 omitted

# reduce 510 omitted

# reduce 511 omitted

# reduce 512 omitted

# reduce 513 omitted

# reduce 514 omitted

# reduce 515 omitted

# reduce 516 omitted

# reduce 517 omitted

# reduce 518 omitted

# reduce 519 omitted

# reduce 520 omitted

# reduce 521 omitted

# reduce 522 omitted

# reduce 523 omitted

# reduce 524 omitted

# reduce 525 omitted

# reduce 526 omitted

def _reduce_527(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module Opal
