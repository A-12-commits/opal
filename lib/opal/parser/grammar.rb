#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.12
# from Racc grammer file "".
#

require 'racc/parser.rb'
module Opal
  class Parser < Racc::Parser


##### State transition tables begin ###

clist = [
'63,64,65,8,51,-96,-90,550,57,58,272,205,206,61,616,59,60,62,23,24,66',
'67,299,861,745,205,206,22,28,27,90,89,91,92,-449,742,17,604,272,529',
'648,-449,7,41,6,9,94,93,-88,84,50,86,85,87,686,88,95,96,73,81,82,-94',
'38,39,-88,594,74,-97,343,342,-95,205,206,-90,647,-89,-96,615,205,206',
'-92,644,485,-91,573,36,-445,-89,30,-96,604,52,-92,-445,54,-91,32,271',
'606,605,40,101,267,573,267,743,100,761,18,573,-94,-81,549,79,73,75,76',
'77,78,-96,573,-96,74,80,-96,271,-93,63,64,65,56,51,-97,53,-442,57,58',
'-531,37,83,61,-442,59,60,62,258,259,66,67,487,272,606,605,611,257,290',
'294,90,89,91,92,307,-88,219,-88,489,-84,-88,307,-80,291,593,-87,94,93',
'-85,84,50,86,85,360,-86,88,95,96,-82,81,82,-454,-89,101,-89,267,-530',
'-89,100,796,-91,101,-91,572,-89,-91,100,573,579,-92,580,-92,-91,-93',
'-92,361,791,-95,214,267,101,52,572,-82,54,100,101,-94,572,-94,-90,100',
'-94,-84,-83,542,604,101,544,572,271,-88,100,79,73,75,76,77,78,-97,-87',
'-97,74,80,-97,205,206,63,64,65,56,51,-81,53,542,57,58,544,295,83,61',
'648,59,60,62,258,259,66,67,542,542,648,544,541,257,290,294,90,89,91',
'92,-82,-530,219,820,801,-531,606,605,617,41,-84,778,94,93,647,84,50',
'86,85,87,798,88,95,96,647,81,82,-87,38,39,101,790,572,884,-64,100,-93',
'-82,-93,-81,-95,-93,-95,648,227,-95,-82,-84,801,-83,580,210,227,-90',
'214,-90,-84,52,-90,-86,54,-94,-452,-85,-87,-80,40,718,777,-452,101,-75',
'788,-87,218,100,-81,647,626,79,73,75,76,77,78,-81,801,452,74,80,718',
'767,215,-251,-251,-251,56,-251,718,53,604,-251,-251,609,37,83,-251,495',
'-251,-251,-251,-251,-251,-251,-251,807,-530,-83,-92,-82,-251,-251,-251',
'-251,-251,-251,-251,-86,-92,-251,-531,-85,-81,-80,399,400,-251,-97,808',
'-251,-251,-90,-251,-251,-251,-251,-251,-251,-251,-251,-251,604,-251',
'-251,-83,-251,-251,556,264,599,559,606,605,-83,-86,265,600,101,-85,717',
'-80,101,100,-86,745,101,100,-85,-251,-80,100,-251,267,604,-251,742,489',
'-251,811,-251,101,-251,717,-251,101,100,812,-451,101,100,717,-251,559',
'100,-451,815,-251,-251,-251,-251,-251,-251,606,605,607,-251,-251,487',
'343,342,-532,-532,-532,-251,-532,101,-251,-447,-532,-532,100,-251,-251',
'-532,-447,-532,-532,-532,-532,-532,-532,-532,343,342,606,605,602,-532',
'-532,-532,-532,-532,-532,-532,101,743,-532,522,590,100,-454,622,-63',
'-532,801,588,-532,-532,824,-532,-532,-532,-532,-532,-532,-532,-532,-532',
'825,-532,-532,454,-532,-532,827,227,231,236,237,238,233,235,243,244',
'239,240,203,200,220,221,-450,-80,241,242,201,-532,780,-450,-532,-532',
'-88,-532,512,589,-532,521,-532,224,-532,230,-532,226,225,222,223,234',
'232,228,-532,229,513,-327,-327,-532,-532,-532,-532,-532,-532,-327,514',
'627,-532,-532,453,245,495,-533,-533,-533,-532,-533,199,-532,202,-533',
'-533,-530,-532,-532,-533,829,-533,-533,-533,-533,-533,-533,-533,103',
'104,105,106,107,-533,-533,-533,-533,-533,-533,-533,-448,-84,-533,203',
'532,495,-327,-448,-327,-533,-94,533,-533,-533,523,-533,-533,-533,-533',
'-533,-533,-533,-533,-533,276,-533,-533,451,-533,-533,-260,227,231,236',
'237,238,233,235,243,244,239,240,522,590,220,221,307,411,241,242,810',
'-533,413,412,-533,-533,763,-533,837,450,-533,202,-533,224,-533,230,-533',
'226,225,222,223,234,232,228,-533,229,267,-280,-280,-533,-533,-533,-533',
'-533,-533,-280,839,204,-533,-533,842,245,645,63,64,65,-533,51,589,-533',
'521,57,58,843,-533,-533,61,845,59,60,62,258,259,66,67,847,-528,525,526',
'849,257,28,27,90,89,91,92,530,-87,219,203,930,851,-280,721,-280,41,-97',
'931,94,93,580,84,50,86,85,87,261,88,95,96,531,81,82,-261,38,39,713,227',
'231,236,237,238,233,235,243,244,239,240,-445,-445,220,221,820,801,241',
'242,-445,210,205,206,214,-528,710,52,708,929,54,202,256,224,227,230',
'40,226,225,222,223,234,232,228,218,229,-528,203,582,79,73,75,76,77,78',
'583,698,529,74,80,307,245,414,63,64,65,56,51,-445,53,-445,57,58,694',
'37,83,61,693,59,60,62,258,259,66,67,103,104,105,106,107,257,290,294',
'90,89,91,92,692,-86,219,522,519,545,581,862,202,41,-96,520,94,93,863',
'84,50,86,85,87,864,88,95,96,865,81,82,401,38,39,867,227,231,236,237',
'238,233,235,243,244,239,240,203,448,220,221,205,206,241,242,449,210',
'343,342,214,300,301,52,868,518,54,521,686,224,546,230,40,226,225,222',
'223,234,232,228,218,229,870,-279,-279,79,73,75,76,77,78,-279,489,-259',
'74,80,-531,245,874,63,64,65,56,51,450,53,202,57,58,686,37,83,61,535',
'59,60,62,258,259,66,67,700,677,879,553,700,257,28,27,90,89,91,92,390',
'561,219,335,333,332,-279,334,-279,41,387,675,94,93,-75,84,50,86,85,87',
'261,88,95,96,674,81,82,556,38,39,887,227,889,890,307,340,339,343,342',
'340,339,343,342,899,672,557,664,663,745,307,559,210,903,-262,214,568',
'569,52,227,742,54,905,256,224,307,227,40,226,225,222,223,853,854,795',
'218,855,95,96,-531,79,73,75,76,77,78,559,227,915,74,80,340,339,343,342',
'916,298,56,899,227,53,403,921,745,842,37,83,63,64,65,8,51,923,847,742',
'57,58,847,849,267,61,246,59,60,62,23,24,66,67,636,743,584,585,932,22',
'28,27,90,89,91,92,267,586,17,625,340,339,343,342,7,41,227,9,94,93,198',
'84,50,86,85,87,938,88,95,96,-259,81,82,197,38,39,692,227,231,236,237',
'238,233,235,243,244,239,240,224,743,220,221,226,225,241,242,196,36,624',
'621,30,195,618,52,227,948,54,847,32,224,950,230,40,226,225,222,223,234',
'232,228,18,229,951,108,614,79,73,75,76,77,78,610,97,881,74,80,224,245',
',-229,226,225,56,,,53,,,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60',
'62,23,24,66,67,103,104,105,106,107,22,28,27,90,89,91,92,,,17,,,,,622',
'7,41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,227,231,236,237',
'238,233,235,243,244,239,240,,,220,221,,,241,242,,36,,,30,,,52,,,54,',
'32,224,,230,40,226,225,222,223,234,232,228,18,229,,,,79,73,75,76,77',
'78,,,,74,80,,245,,-229,,,56,,,53,,,,,37,83,63,64,65,8,51,,,,57,58,,',
',61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,561,17,335,333',
'332,,334,7,41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,227',
'231,236,237,238,233,235,243,244,239,240,,,220,221,,,241,242,,36,,,30',
',,52,,,54,,32,224,,230,40,226,225,222,223,234,232,228,18,229,,,,79,73',
'75,76,77,78,,,,74,80,,245,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60',
'62,258,259,66,67,,,,,,257,290,294,90,89,91,92,,,219,,,,,,,41,,,94,93',
',84,50,86,85,87,,88,95,96,,81,82,,38,39,,227,231,236,237,238,233,235',
'243,244,239,240,,,220,221,,,241,242,,210,,,214,,,52,,,54,,,224,,230',
'40,226,225,222,223,234,232,228,218,229,,,,79,73,75,76,77,78,,,,74,80',
',245,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,',
',,,257,290,294,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,227,231,236,237,238,233,235,243,244,239,240,,,220',
'221,,,241,242,,210,,,214,,,52,,,54,,,224,,230,40,226,225,222,223,234',
'232,228,218,229,,,,79,73,75,76,77,78,,,,74,80,,245,,63,64,65,56,51,',
'53,,57,58,,37,83,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92',
',,17,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,227,231',
'236,237,238,233,235,243,244,239,240,,,220,221,,,241,242,,210,,,214,215',
',52,,,54,,,224,,230,40,226,225,222,223,234,232,228,18,229,,,,79,73,75',
'76,77,78,,,,74,80,,245,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,,227,231,236,237,238,233,235,243,244',
'239,240,,,220,221,,,241,242,,210,,,214,,,52,,,54,,,224,,230,40,226,225',
'222,223,234,232,228,218,229,,,,79,73,75,76,77,78,,,,74,80,,245,,,,,56',
',,53,,,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,',
',,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,227,231,236,237,238,233,235,243,244,239,240,,,220',
'221,,,241,242,,36,,,30,,,52,,,54,,32,224,,230,40,226,225,222,223,234',
'232,228,18,229,,,,79,73,75,76,77,78,,,,74,80,,245,,63,64,65,56,51,,53',
',57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,290,294,90,89,91,92',
',,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,227',
'231,236,237,238,233,235,243,244,239,240,,,220,221,,,241,242,,210,,,214',
',,52,,,54,,653,224,254,230,40,226,225,222,223,234,232,228,218,229,,',
',79,73,75,76,77,78,,,,74,80,,245,,63,64,65,56,51,,53,,57,58,,37,83,61',
',59,60,62,258,259,66,67,,,,,,257,28,27,90,89,91,92,,,219,,,,,,,41,,',
'94,93,,84,50,86,85,87,261,88,95,96,,81,82,,38,39,,227,231,236,237,238',
'233,235,243,244,239,240,,,220,221,,,241,242,,210,,,214,,,52,,,54,,256',
'224,254,230,40,226,225,222,223,234,232,228,218,229,,,,79,73,75,76,77',
'78,,,,74,80,,245,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258',
'259,66,67,,,,,,257,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86',
'85,87,261,88,95,96,,81,82,,38,39,,227,231,236,237,238,233,235,243,244',
'239,240,,,220,221,,,241,242,,210,,,214,,,52,,,54,,256,224,254,230,40',
'226,225,222,223,234,232,228,218,229,,,,79,73,75,76,77,78,,,,74,80,,245',
',63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257',
'28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,261,88,95,96',
',81,82,,38,39,,227,231,236,237,238,233,235,243,244,239,240,,,220,221',
',,241,242,,210,,,214,,,52,,,54,,256,224,254,230,40,226,225,222,223,234',
'232,228,218,229,,,,79,73,75,76,77,78,,,,74,80,,245,,,,,56,,,53,,,,,37',
'83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27',
'90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82',
',38,39,,227,231,236,237,238,233,235,243,244,239,240,,,220,221,,,241',
'242,,36,,,30,,,52,,,54,,32,224,,230,40,226,225,222,223,234,232,228,18',
'229,,,,79,73,75,76,77,78,,,,74,80,,245,,,,,56,,,53,,,,,37,83,63,64,65',
'8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92',
',561,17,335,333,332,,334,7,41,,9,94,93,,84,50,86,85,87,,88,95,96,,81',
'82,,38,39,561,,335,333,332,,334,,,561,564,335,333,332,,334,,,567,,,36',
',,30,,,52,,,54,,32,,,,40,,,564,,,,,18,,,817,564,79,73,75,76,77,78,,567',
',74,80,,,,-251,-251,-251,56,-251,,53,,-251,-251,,37,83,-251,,-251,-251',
'-251,-251,-251,-251,-251,,,,,,-251,-251,-251,-251,-251,-251,-251,,,-251',
',,,227,,,-251,,,-251,-251,,-251,-251,-251,-251,-251,-251,-251,-251,-251',
',-251,-251,,-251,-251,,227,-551,-551,-551,-551,233,235,224,,-551,-551',
'226,225,222,223,,,241,242,,-251,,,-251,267,,-251,,,-251,,-251,224,-251',
'230,-251,226,225,222,223,234,232,228,-251,229,,,,-251,-251,-251,-251',
'-251,-251,,,,-251,-251,,,,63,64,65,-251,51,,-251,,57,58,,-251,-251,61',
',59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93',
',84,50,86,85,87,,88,95,96,,81,82,,38,39,,227,,,,,,,,,,,,,,,,,241,242',
',210,,,214,,,52,,,54,,,224,,230,40,226,225,222,223,,,228,18,229,,,,79',
'73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,,37,83,63,64,65,8,51,,,,57',
'58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7',
'41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,227,,,,,,,,,,,',
',,,,,241,242,,36,,,280,,,52,,,54,,32,224,,230,40,226,225,222,223,,,228',
'18,229,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37',
'83,61,,59,60,62,258,259,66,67,,,,,,257,290,294,90,89,91,92,,,219,,,',
',,,291,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,326,,335,333,332,227',
'334,,,,,,,,,,,,,,,,241,242,288,,,285,,,52,,,54,,284,,224,,337,,226,225',
'222,223,,,340,339,343,342,,79,73,75,76,77,78,782,,,74,80,,,,63,64,65',
'56,51,,53,,57,58,,295,83,61,,59,60,62,258,259,66,67,,,,,,257,290,294',
'90,89,91,92,,,219,,,,,,,291,,,94,93,,84,50,86,85,87,,88,95,96,,81,82',
'755,,335,333,332,745,334,,,,,,,,,,742,,,,,,,,288,,,214,,,52,,,54,,,',
',,337,,,,,,,,340,339,343,342,,79,73,75,76,77,78,,,,74,80,,,,297,,,56',
',,53,,,,,295,83,63,64,65,,51,,,743,57,58,,,,61,,59,60,62,258,259,66',
'67,,,,,,257,290,294,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85',
'87,,88,95,96,,81,82,,38,39,,227,-551,-551,-551,-551,233,235,,,-551,-551',
',,,,,,241,242,,210,,,214,,,52,,,54,,653,224,,230,40,226,225,222,223',
'234,232,228,218,229,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51',
',53,,57,58,,37,83,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92',
',,17,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,227,',
',,,,,,,,,,,,,,,241,242,,210,,,214,,,52,,,54,,,224,,230,40,226,225,222',
'223,,,228,18,229,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53',
',57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,290,294,90,89,91,92',
',,219,,,,,,,291,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,326,,335,333',
'332,,334,,,,,,,,,,,,,,,,,,910,,,214,,,52,,,54,,,,,,337,321,,,,,,,340',
'339,343,342,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58',
',295,83,61,,59,60,62,258,259,66,67,,,,,,257,290,294,90,89,91,92,,,219',
',,,,,,41,,,94,93,,84,50,86,85,87,261,88,95,96,,81,82,,38,39,,227,-551',
'-551,-551,-551,233,235,,,-551,-551,,,,,,,241,242,,210,,,214,,,52,,,54',
',653,224,254,230,40,226,225,222,223,234,232,228,218,229,,,,79,73,75',
'76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258',
'259,66,67,,,,,,257,290,294,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,,227,-551,-551,-551,-551,233,235,,',
'-551,-551,,,,,,,241,242,,210,,,214,,,52,,,54,,,224,,230,40,226,225,222',
'223,234,232,228,218,229,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56',
'51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,290,294,90',
'89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,,227,231,236,237,238,233,235,,,239,240,,,,,,,241,242,,210,,,214,',
',52,,,54,,,224,,230,40,226,225,222,223,234,232,228,218,229,,,,79,73',
'75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62',
'258,259,66,67,,,,,,257,290,294,90,89,91,92,,,219,,,,,,,41,,,94,93,,84',
'50,86,85,87,,88,95,96,,81,82,,38,39,,227,231,236,237,238,233,235,243',
',239,240,,,,,,,241,242,,210,,,214,,,52,,,54,,,224,,230,40,226,225,222',
'223,234,232,228,218,229,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
',,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22',
'28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88,95,96',
',81,82,,38,39,,227,,,,,,,,,,,,,,,,,241,242,,36,,,30,,,52,,,54,,32,224',
',230,40,226,225,222,223,,,228,18,229,,,,79,73,75,76,77,78,,,,74,80,',
',,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257',
'290,294,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,261,88,95',
'96,,81,82,,38,39,,227,231,236,237,238,233,235,243,244,239,240,,,-551',
'-551,,,241,242,,210,,,214,,,52,,,54,,,224,254,230,40,226,225,222,223',
'234,232,228,218,229,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51',
',53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,290,294,90,89',
'91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,261,88,95,96,,81,82,,38',
'39,,227,-551,-551,-551,-551,233,235,,,-551,-551,,,,,,,241,242,,210,',
',214,,,52,,,54,,,224,254,230,40,226,225,222,223,234,232,228,218,229',
',,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61',
',59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93',
',84,50,86,85,87,,88,95,96,,81,82,,38,39,,227,-551,-551,-551,-551,233',
'235,,,-551,-551,,,,,,,241,242,,210,,,214,,,52,,,54,,,224,,230,40,226',
'225,222,223,234,232,228,18,229,,,,79,73,75,76,77,78,,,,74,80,,,,63,64',
'65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,28,27',
'90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,261,88,95,96,,81',
'82,,38,39,,227,231,236,237,238,233,235,243,244,239,240,,,-551,-551,',
',241,242,,210,,,214,,,52,,,54,,256,224,,230,40,226,225,222,223,234,232',
'228,218,229,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57',
'58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,290,294,90,89,91,92,,',
'219,,,,,,,41,,,94,93,,84,50,86,85,87,261,88,95,96,,81,82,,38,39,,227',
',,,,,,,,,,,,,,,,241,242,,210,,,214,,,52,,,54,,,224,,230,40,226,225,222',
'223,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57',
'58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,290,294,90,89,91,92,,',
'219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,227,,',
',,,,,,,,,,,,,,241,242,,210,,,214,,,52,,,54,,,224,,230,40,226,225,222',
'223,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57',
'58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,290,294,90,89,91,92,,',
'219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,',
',,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76',
'77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,23,24',
'66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,,84,50,86,85,87',
',88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,',
',,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53',
',57,58,,37,83,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17',
',,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,',
',,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78',
',,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,23,24,66,67',
',,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40',
',,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,101,,,,,100,56,,,53,,,,,37',
'83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,290',
'294,90,89,91,92,,,219,,,,,,,291,,,94,93,,84,50,86,85,87,,88,95,96,,81',
'82,326,,335,333,332,,334,,,,,,,,,,,,,,,,,,355,,,30,,,52,,,54,,32,,,',
'337,,552,,,,,,340,339,343,342,,79,73,75,76,77,78,,,,74,80,,,,63,64,65',
'56,51,,53,,57,58,,295,83,61,,59,60,62,258,259,66,67,,,,,,257,290,294',
'90,89,91,92,,,219,,,,,,,291,,,94,93,,84,50,86,85,360,,88,95,96,,81,82',
'326,,335,333,332,,334,,,,,,,,,,,,,,,366,,,361,,,214,,,52,,,54,,,,,,337',
',,,,,,,340,339,343,342,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51',
',53,,57,58,,295,83,61,,59,60,62,258,259,66,67,,,,,,257,290,294,90,89',
'91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,,37,83,63,64,65,8,51,,,,57,58',
',,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41',
',9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,',
',,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74',
'80,,,,,,,56,,,53,,,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23',
'24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86',
'85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54',
',32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51',
',53,,57,58,,37,83,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92',
',,17,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,',
',,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76',
'77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,23,24',
'66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,,84,50,86,85,87',
',88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,',
',,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,,37,83',
'63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90',
'89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79',
'73,75,76,77,78,,,,74,80,,,,-527,-527,-527,56,-527,,53,,-527,-527,,37',
'83,-527,,-527,-527,-527,-527,-527,-527,-527,,-527,,,,-527,-527,-527',
'-527,-527,-527,-527,,,-527,,,,,,,-527,,,-527,-527,,-527,-527,-527,-527',
'-527,-527,-527,-527,-527,,-527,-527,,-527,-527,,,,,,,,,,,,,,,,,,,,,',
'-527,,,-527,-527,,-527,,,-527,,-527,,-527,,-527,,,,,,,,-527,,-527,,',
'-527,-527,-527,-527,-527,-527,,,,-527,-527,,,,-528,-528,-528,-527,-528',
',-527,,-528,-528,,-527,-527,-528,,-528,-528,-528,-528,-528,-528,-528',
',-528,,,,-528,-528,-528,-528,-528,-528,-528,,,-528,,,,,,,-528,,,-528',
'-528,,-528,-528,-528,-528,-528,-528,-528,-528,-528,,-528,-528,,-528',
'-528,,,,,,,,,,,,,,,,,,,,,,-528,,,-528,-528,,-528,,,-528,,-528,,-528',
',-528,,,,,,,,-528,,-528,,,-528,-528,-528,-528,-528,-528,,,,-528,-528',
',,,63,64,65,-528,51,,-528,,57,58,,-528,-528,61,,59,60,62,258,259,66',
'67,,,,,,257,290,294,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85',
'87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54',
',256,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,',
',,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22',
'28,27,90,89,91,92,,,17,,,,,,7,41,6,9,94,93,,84,50,86,85,87,,88,95,96',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,',
',,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,403,56,,,53,,,,,37,83,63,64',
'65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92',
',,17,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,',
',,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76',
'77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,23,24',
'66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,,84,50,86,85,87',
',88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,',
',,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53',
',57,58,,37,83,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17',
',,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,',
',,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78',
',,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,23,24,66,67',
',,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40',
',,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,,37,83,63',
'64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89',
'91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,,37,83,63,64,65,8,51,,,,57,58',
',,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41',
'6,9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,',
',,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74',
'80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,',
',,,257,290,294,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40',
',,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57',
'58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,290,294,90,89,91,92,,',
'219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,',
',,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76',
'77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258',
'259,66,67,,,,,,257,290,294,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52',
',,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
',,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22',
'28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88,95,96',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,',
',,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37',
'83,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,219,,,,,,,41',
',,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,',
',210,,,214,,,52,,,54,,420,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,',
'74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,23,24,66,67,',
',,,,22,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,420,,',
',40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53',
',57,58,,37,83,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,219',
',,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,',
',,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77',
'78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259',
'66,67,,,,,,257,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85',
'87,261,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,',
'54,,256,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65',
'56,51,,53,,57,58,,37,83,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89',
'91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79,73',
'75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62',
'258,259,66,67,,,,,,257,290,294,90,89,91,92,,,219,,,,,,,41,,,94,93,,84',
'50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,',
',52,,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64',
'65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,28,27',
'90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,261,88,95,96,,81',
'82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,256,,,,40,,,,,,',
',218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,,37,83,63,64,65',
'8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92',
',,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,',
',,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75',
'76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,23',
'24,66,67,,,,,,22,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86',
'85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,',
'54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56',
'51,,53,,57,58,,37,83,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91',
'92,,,17,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,',
',,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75',
'76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,23',
'24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,,84,50,86,85',
'87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54',
',,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,',
'53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,290,294,90,89,91',
'92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,',
',,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,,37,83,63,64,65,8,51,,,,57,58',
',,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41',
',9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,',
',,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74',
'80,,,,,,,56,,,53,,,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23',
'24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86',
'85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54',
',32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,',
',37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28',
'27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88,95,96,,81',
'82,,38,39,,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18',
',,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61',
',59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93',
',84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214',
',,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64',
'65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,290,294',
'90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,256,,,,40,,,,,,,,218',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,,37,83,63,64,65,8,51',
',,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17',
',,,,,7,41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,',
',,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77',
'78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,23,24,66',
'67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,,84,50,86,85,87,',
'88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,456,52,,,54,',
',,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53',
',57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,290,294,90,89,91,92',
',,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,',
',,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79,73,75',
'76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258',
'259,66,67,,,,,,257,290,294,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52',
',,54,,420,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65',
'56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,290,294',
'90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,',
',,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61',
',59,60,62,258,259,66,67,,,,,,257,290,294,90,89,91,92,,,219,,,,,,,41',
',,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,',
',210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74',
'80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,',
',,,257,290,294,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40',
',,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57',
'58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,290,294,90,89,91,92,,',
'219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,',
',,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76',
'77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258',
'259,66,67,,,,,,257,290,294,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52',
',,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56',
'51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,290,294,90',
'89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79',
'73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60',
'62,258,259,66,67,,,,,,257,290,294,90,89,91,92,,,219,,,,,,,41,,,94,93',
',84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214',
',,52,,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64',
'65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,290,294',
'90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,',
',,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61',
',59,60,62,258,259,66,67,,,,,,257,290,294,90,89,91,92,,,219,,,,,,,41',
',,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,',
',210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74',
'80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,',
',,,257,290,294,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40',
',,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57',
'58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,290,294,90,89,91,92,,',
'219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,',
',,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76',
'77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258',
'259,66,67,,,,,,257,290,294,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52',
',,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56',
'51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,290,294,90',
'89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79',
'73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60',
'62,258,259,66,67,,,,,,257,290,294,90,89,91,92,,,219,,,,,,,41,,,94,93',
',84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214',
',,52,,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64',
'65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,290,294',
'90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,',
',,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61',
',59,60,62,258,259,66,67,,,,,,257,290,294,90,89,91,92,,,219,,,,,,,41',
',,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,',
',210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74',
'80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,',
',,,257,290,294,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40',
',,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57',
'58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,290,294,90,89,91,92,,',
'219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,',
',,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76',
'77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258',
'259,66,67,,,,,,257,290,294,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52',
',,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56',
'51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,290,294,90',
'89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79',
'73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60',
'62,258,259,66,67,,,,,,257,290,294,90,89,91,92,,,219,,,,,,,41,,,94,93',
',84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214',
',,52,,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64',
'65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,290,294',
'90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,',
',,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61',
',59,60,62,258,259,66,67,,,,,,257,290,294,90,89,91,92,,,219,,,,,,,41',
',,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,',
',210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74',
'80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,',
',,,257,290,294,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40',
',,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57',
'58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,290,294,90,89,91,92,,',
'219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,',
',,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76',
'77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258',
'259,66,67,,,,,,257,290,294,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52',
',,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56',
'51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,290,294,90',
'89,91,92,,,219,,,,,,,291,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,',
',,,,,,,,,,,,,,,,,,,,,,288,,,285,,,52,,,54,,,,,,,,,,,,,,,,,,,79,73,75',
'76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,295,83,61,,59,60,62',
'258,259,66,67,,,,,,257,290,294,90,89,91,92,,,219,,,,,,,291,,,94,93,',
'84,50,86,85,87,,88,95,96,,81,82,755,,335,333,332,745,334,,,,,,,,,,742',
',,,,,,,288,,,285,,,52,,,54,,,,,,337,,,,,,,,340,339,343,342,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,,,,,295,83,63,64,65,8,51,,,743,57,58',
',,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41',
',9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,',
',,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74',
'80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,',
',,,257,290,294,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40',
',,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,,37,83,63',
'64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89',
'91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73',
'75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62',
'258,259,66,67,,,,,,257,290,294,90,89,91,92,,,219,,,,,,,41,,,94,93,,84',
'50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,',
',52,,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64',
'65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,290,294',
'90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,',
',,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61',
',59,60,62,258,259,66,67,,,,,,257,290,294,90,89,91,92,,,219,,,,,,,41',
',,94,93,,84,50,86,85,87,261,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,',
',,,,210,,,214,,,52,,,54,,,,254,,40,,,,,,,,218,,,,,79,73,75,76,77,78',
',,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66',
'67,,,,,,257,290,294,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85',
'87,261,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,',
'54,,653,,254,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56',
',,53,,,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,',
',,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40',
',,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58',
',37,83,61,,59,60,62,258,259,66,67,,,,,,257,28,27,90,89,91,92,,,219,',
',,,,,41,,,94,93,,84,50,86,85,87,261,88,95,96,,81,82,,38,39,,,,,,,,,',
',,,,,,,,,,,,210,,,214,,,52,,,54,,256,,254,,40,,,,,,,,218,,,,,79,73,75',
'76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258',
'259,66,67,,,,,,257,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86',
'85,87,261,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,504',
',,54,,256,,254,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64',
'65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,28,27',
'90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,261,88,95,96,,81',
'82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,508,52,,,54,,256,,254,,40',
',,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57',
'58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,290,294,90,89,91,92,,',
'219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,',
',,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,,,,,37,83,63,64,65,8,51,,,,57,58,,,,61',
',59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94',
'93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,36,',
',30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,',
'63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257',
'290,294,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,',
',,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,,37,83,63,64,65',
'8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92',
',,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,',
',,,,,,,,,,,,,,,,,36,,,280,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75',
'76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,23',
'24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,,84,50,86,85',
'87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,668,52,,',
'54,,,,254,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
',,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22',
'28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88,95,96',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,',
',,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,403,56,,,53,,,,,37,83,63,64',
'65,,51,,,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,290,294,90,89',
'91,92,,,219,,,,,,,291,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,,,,',
',,,,,,,,,,,,,,,,,,,288,,,285,,,52,,,54,,,,,,,,,,,,,,,,,,,79,73,75,76',
'77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,295,83,61,,59,60,62,258',
'259,66,67,,,,,,257,290,294,90,89,91,92,,,219,,,,,,,291,,,94,93,,84,50',
'86,85,87,,88,95,96,,81,82,755,,335,333,332,745,334,,,,,,,,,,742,,,,',
',,,288,,,214,,,52,,,54,,,,,,337,740,,,,,,,340,339,343,342,,79,73,75',
'76,77,78,,,,74,80,,,,516,,,56,,,53,,,,,295,83,63,64,65,8,51,,,743,57',
'58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7',
'41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,',
',,,,,36,,,280,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,',
',74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67',
',,,,,257,290,294,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87',
',88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,',
',,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53',
',57,58,,37,83,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,219',
',,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,',
',,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77',
'78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,23,24,66',
'67,,,,,,22,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87',
',88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,',
',,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53',
',57,58,,37,83,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,219',
',,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,',
',,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77',
'78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259',
'66,67,,,,,,257,290,294,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86',
'85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,',
'54,,766,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65',
'56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,28,27,90',
'89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,261,88,95,96,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,256,,,,40,,,,,,,,218',
',,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61',
',59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93',
',84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214',
',,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64',
'65,56,51,,53,,57,58,,37,83,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90',
'89,91,92,,,17,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79',
'73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60',
'62,258,259,66,67,,,,,,257,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,',
'84,50,86,85,87,261,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,',
',214,,,52,,,54,,256,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80',
',,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,',
'257,290,294,90,89,91,92,,,219,,,,,,,291,,,94,93,,84,50,86,85,87,,88',
'95,96,,81,82,,,,,,,,,,,,,,,,,,,,,,,,,288,,,285,,,52,,,54,,,,,,,,,,,',
',,,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,295',
'83,61,,59,60,62,258,259,66,67,,,,,,257,28,27,90,89,91,92,,,219,,,,,',
',41,,,94,93,,84,50,86,85,87,261,88,95,96,,81,82,,38,39,,,,,,,,,,,,,',
',,,,,,,,210,,,214,,,52,,,54,,256,,,,40,,,,,,,,218,,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,,,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59',
'60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93',
',84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,36,,,30',
',,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56',
',,53,,,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,',
',,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40',
',,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,,37,83,63',
'64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89',
'91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73',
'75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62',
'258,259,66,67,,,,,,257,290,294,90,89,91,92,,,219,,,,,,,291,,,94,93,',
'84,50,86,85,87,,88,95,96,,81,82,,,,,,,,,,,,,,,,,,,,,,,,,704,,,214,,',
'52,,,54,,,,,,,,,,,,,,,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56',
'51,,53,,57,58,,295,83,61,,59,60,62,258,259,66,67,,,,,,257,290,294,90',
'89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,,210,,,214,535,,52,,,54,,,,,,40,,,,,,,,218,,',
',,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,,37,83,63,64,65,8,51,',
',,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,',
',,,,7,41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,',
',,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,,,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59',
'60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93',
',84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,36,,,30',
',,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56',
',,53,,,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,',
',,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40',
',,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58',
',37,83,61,,59,60,62,258,259,66,67,,,,,,257,290,294,90,89,91,92,,,219',
',,,,,,41,,,94,93,,84,50,86,85,87,261,88,95,96,,81,82,,38,39,,,,,,,,',
',,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76',
'77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258',
'259,66,67,,,,,,257,290,294,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50',
'86,85,87,261,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,',
',52,,,54,,653,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63',
'64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,23,24,66,67,,,,,,22,28,27',
'90,89,91,92,,,17,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,',
'38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,18,,,',
',79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,',
'59,60,62,258,259,66,67,,,,,,257,290,294,90,89,91,92,,,219,,,,,,,41,',
',94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,',
'210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80',
',,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,',
'257,290,294,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95',
'96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,',
',,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58',
',37,83,61,,59,60,62,258,259,66,67,,,,,,257,290,294,90,89,91,92,,,219',
',,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,',
',,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77',
'78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259',
'66,67,,,,,,257,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85',
'87,261,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,',
'54,,256,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65',
'56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,290,294',
'90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,',
',,-534,79,73,75,76,77,78,-534,-534,-534,74,80,,-534,-534,,-534,,56,',
',53,,,,-534,37,83,,,,,,,,,-534,-534,,-534,-534,-534,-534,-534,,,,,,',
',,,,,,,,,,,,,,,,,-534,-534,-534,-534,-534,-534,-534,-534,-534,-534,-534',
'-534,-534,-534,-534,,,-534,-534,-534,,632,,,,-534,,,,,,,-534,,-534,',
'-534,-534,-534,-534,-534,-534,-534,,-534,-534,-534,,,,,,,,,,,,,-534',
'-534,,-83,,-534,-534,,-534,,-534,,-93,-534,-534,-534,,,-534,-534,-534',
',-534,,,,,,,,,-534,-534,-534,,,,,,,,,-534,-534,,-534,-534,-534,-534',
'-534,,,,,,,,,,,,,,,,,,,,,,,,-534,-534,-534,-534,-534,-534,-534,-534',
'-534,-534,-534,-534,-534,-534,-534,,,-534,-534,-534,,779,-534,,,-534',
',,-534,,-534,,-534,,-534,,-534,-534,-534,-534,-534,-534,-534,,-534,-534',
'-534,,,,,,,,,,,,,-534,-534,-534,-534,,-534,-279,,-534,,-534,,-93,-279',
'-279,-279,,,,-279,-279,,-279,,,,,,,,,,,,,,,,,,,,-279,-279,,-279,-279',
'-279,-279,-279,,,,,,,,,,,,,,,,,,,,,,,,-279,-279,-279,-279,-279,-279',
'-279,-279,-279,-279,-279,-279,-279,-279,-279,,,-279,-279,-279,,635,',
',,-279,,,,,,,-279,,-279,,-279,-279,-279,-279,-279,-279,-279,,-279,,-279',
',,,,,,,,,,,,-279,-279,,-85,,-279,-279,,-279,,-279,,-95,-279,-279,-279',
',,-279,-279,-279,,-279,,,,,,,,,,-279,-279,,,,,,,,,-279,-279,,-279,-279',
'-279,-279,-279,,,,,,,,,,,,,,,,,,,,,,,,-279,-279,-279,-279,-279,-279',
'-279,-279,-279,-279,-279,-279,-279,-279,-279,,,-279,-279,-279,,635,-279',
',,-279,,,-279,,-279,,-279,,-279,,-279,-279,-279,-279,-279,-279,-279',
',-279,,-279,,,,,,,,,,,,,-279,-279,-279,-279,,-279,-288,,-279,,-279,',
'-95,-288,-288,-288,,,-288,-288,-288,,-288,,,,,,,,,,-288,-288,,,,,,,',
',-288,-288,,-288,-288,-288,-288,-288,,,,,,,,,,,,,,,,,,,,,,,,-288,-288',
'-288,-288,-288,-288,-288,-288,-288,-288,-288,-288,-288,-288,-288,,,-288',
'-288,-288,,,-288,,276,-288,,,-288,,-288,,-288,,-288,,-288,-288,-288',
'-288,-288,-288,-288,,-288,,-288,,,,,,,,,,,,,-288,-288,-288,-288,-274',
'-288,,,-288,,-288,-274,-274,-274,,,-274,-274,-274,,-274,,,,,,,,,,-274',
'-274,-274,,,,,,,,-274,-274,,-274,-274,-274,-274,-274,,,,,,,,,,,,,,,',
',,,,,,,,-274,-274,-274,-274,-274,-274,-274,-274,-274,-274,-274,-274',
'-274,-274,-274,,,-274,-274,-274,,,-274,,,-274,,,-274,,-274,,-274,,-274',
',-274,-274,-274,-274,-274,-274,-274,,-274,,-274,,,,,,,,,,,,,-274,-274',
'-274,-274,-550,-274,,-274,-274,,-274,-550,-550,-550,,,-550,-550,-550',
',-550,,,,,,,,,,-550,,755,,335,333,332,745,334,,-550,-550,,-550,-550',
'-550,-550,-550,742,,,,,,,,,,,,,-550,,,,,,,-550,-550,-550,337,740,-550',
'-550,-550,,-550,,340,339,343,342,-550,,,,-550,,,-550,,,,,267,-550,-550',
'-550,,-550,-550,-550,-550,-550,,,,,,,,,,,,,-550,743,,,,,,,,,,,,-550',
',-550,,,-550,,,,,-550,,,,,,,-550,,,,,267,-550,,,,,,,,,,,,,,,,,,,,,-550',
',,,,,,,,,,,,-550,,-550,,,-550,156,167,157,180,153,173,163,162,188,191',
'178,161,160,155,181,189,190,165,154,168,172,174,166,159,,,,175,182,177',
'176,169,179,164,152,171,170,183,184,185,186,187,151,158,149,150,147',
'148,,111,113,110,,112,,,,,,,,,142,143,,139,121,122,123,130,127,129,',
',124,125,,,,,144,145,131,132,,,,,,,,,,,,,136,135,,120,141,138,137,133',
'134,128,126,118,140,119,,,146,192,,,,,,,,,,80,156,167,157,180,153,173',
'163,162,188,191,178,161,160,155,181,189,190,165,154,168,172,174,166',
'159,,,,175,182,177,176,169,179,164,152,171,170,183,184,185,186,187,151',
'158,149,150,147,148,,111,113,,,112,,,,,,,,,142,143,,139,121,122,123',
'130,127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,,,,136,135,,120,141',
'138,137,133,134,128,126,118,140,119,,,146,192,,,,,,,,,,80,156,167,157',
'180,153,173,163,162,188,191,178,161,160,155,181,189,190,165,154,168',
'172,174,166,159,,,,175,182,177,176,169,179,164,152,171,170,183,184,185',
'186,187,151,158,149,150,147,148,,111,113,,,112,,,,,,,,,142,143,,139',
'121,122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,,,,136',
'135,,120,141,138,137,133,134,128,126,118,140,119,,,146,192,,,,,,,,,',
'80,156,167,157,180,153,173,163,162,188,191,178,161,160,155,181,189,190',
'165,154,168,172,174,166,159,,,,175,182,177,176,169,179,164,152,171,170',
'183,184,185,186,187,151,158,149,150,147,148,,111,113,,,112,,,,,,,,,142',
'143,,139,121,122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,',
',,,,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119,,,146,192',
',,,,,,,,,80,156,167,157,180,153,173,163,162,188,191,178,161,160,155',
'181,189,190,165,154,168,172,174,166,159,,,,175,182,177,176,169,179,164',
'152,171,170,183,184,185,186,187,151,158,149,150,147,148,,111,113,397',
'396,112,,398,,,,,,,142,143,,139,121,122,123,130,127,129,,,124,125,,',
',,144,145,131,132,,,,,,,,,,,,,136,135,,120,141,138,137,133,134,128,126',
'118,140,119,,,146,156,167,157,180,153,173,163,162,188,191,178,161,160',
'155,181,189,190,165,154,168,172,174,166,159,,,,175,182,177,176,169,179',
'164,152,171,170,183,184,185,186,187,151,158,149,150,147,148,,111,113',
'397,396,112,,398,,,,,,,142,143,,139,121,122,123,130,127,129,,,124,125',
',,,,144,145,131,132,,,,,,,,,,,,,136,135,,120,141,138,137,133,134,128',
'126,118,140,119,,,146,156,167,157,180,153,173,163,162,188,191,178,161',
'160,155,181,189,190,165,154,168,172,174,166,159,,,,175,182,177,176,169',
'179,164,152,171,170,183,184,185,186,187,151,158,149,150,147,148,,111',
'113,,,112,,,,,,,,,142,143,,139,121,122,123,130,127,129,,,124,125,,,',
',144,145,131,132,,,,,,,,,,,,,136,135,,120,141,138,137,133,134,128,126',
'118,140,119,,,146,156,167,157,180,153,173,163,162,188,191,178,161,160',
'155,181,189,190,165,154,168,172,174,166,159,,,,175,182,177,375,374,376',
'373,152,171,170,183,184,185,186,187,151,158,149,150,371,372,,369,113',
'86,85,370,,88,,,,,,,142,143,,139,121,122,123,130,127,129,,,124,125,',
',,,144,145,131,132,,,,,,380,,,,,,,136,135,,120,141,138,137,133,134,128',
'126,118,140,119,640,438,146,,641,,,,,,,,,142,143,,139,121,122,123,130',
'127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,,,,136,135,,120,141,138',
'137,133,134,128,126,118,140,119,682,438,146,,683,,,,,,,,,142,143,,139',
'121,122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,,,,136',
'135,,120,141,138,137,133,134,128,126,118,140,119,679,432,146,,680,,',
',,,,,,142,143,,139,121,122,123,130,127,129,,,124,125,,,,,144,145,131',
'132,,,,,,267,,,,,,,136,135,,120,141,138,137,133,134,128,126,118,140',
'119,493,432,146,,443,,,,,,,,,142,143,,139,121,122,123,130,127,129,,',
'124,125,,,,,144,145,131,132,,,,,,,,,,,,,136,135,,120,141,138,137,133',
'134,128,126,118,140,119,493,432,146,,443,,,,,,,,,142,143,,139,121,122',
'123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,,,,136,135,,120',
'141,138,137,133,134,128,126,118,140,119,434,438,146,,436,,,,,,,,,142',
'143,,139,121,122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,',
',,,,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119,732,438',
'146,,876,,,,,,,,,142,143,,139,121,122,123,130,127,129,,,124,125,,,,',
'144,145,131,132,,,,,,,,,,,,,136,135,,120,141,138,137,133,134,128,126',
'118,140,119,493,432,146,,443,,,,,,,,,142,143,,139,121,122,123,130,127',
'129,,,124,125,,,,,144,145,131,132,,,,,,,,,,,,,136,135,,120,141,138,137',
'133,134,128,126,118,140,119,945,438,146,,946,,,,,,,,,142,143,,139,121',
'122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,,,,136,135',
',120,141,138,137,133,134,128,126,118,140,119,638,432,146,,639,,,,,,',
',,142,143,,139,121,122,123,130,127,129,,,124,125,,,,,144,145,131,132',
',,,,,267,,,,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119',
'943,432,146,,944,,,,,,,,,142,143,,139,121,122,123,130,127,129,,,124',
'125,,,,,144,145,131,132,,,,,,267,,,,,,,136,135,,120,141,138,137,133',
'134,128,126,118,140,119,725,432,146,,726,,,,,,,,,142,143,,139,121,122',
'123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,267,,,,,,,136,135',
',120,141,138,137,133,134,128,126,118,140,119,428,432,146,,429,,,,,,',
',,142,143,,139,121,122,123,130,127,129,,,124,125,,,,,144,145,131,132',
',,,,,267,,,,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119',
'441,432,146,,443,,,,,,,,,142,143,,139,121,122,123,130,127,129,,,124',
'125,,,,,144,145,131,132,,,,,,,,,,,,,136,135,,120,141,138,137,133,134',
'128,126,118,140,119,727,438,146,,728,,,,,,,,,142,143,,139,121,122,123',
'130,127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,,,,136,135,,120,141',
'138,137,133,134,128,126,118,140,119,493,432,146,,443,,,,,,,,,142,143',
',139,121,122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,267',
',,,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119,638,432,146',
',639,,,,,,,,,142,143,,139,121,122,123,130,127,129,,,124,125,,,,,144',
'145,131,132,,,,,,267,,,,,,,136,135,,120,141,138,137,133,134,128,126',
'118,140,119,640,438,146,,641,,,,,,,,,142,143,,139,121,122,123,130,127',
'129,,,124,125,,,,,144,145,131,132,,,,,,,,,,,,,136,135,,120,141,138,137',
'133,134,128,126,118,140,119,732,438,146,,730,,,,,,,,,142,143,,139,121',
'122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,,,,136,135',
',120,141,138,137,133,134,128,126,118,140,119,,,146' ]
        racc_action_table = arr = ::Array.new(24378, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'0,0,0,0,0,932,827,320,0,0,55,737,737,0,391,0,0,0,0,0,0,0,36,780,839',
'455,455,0,0,0,0,0,0,0,376,839,0,612,292,451,483,376,0,0,0,0,0,0,908',
'0,0,0,0,0,676,0,0,0,71,0,0,726,0,0,353,365,71,356,839,839,728,601,601',
'780,483,636,584,391,309,309,725,455,251,441,880,0,370,636,0,451,388',
'0,943,370,0,441,0,55,612,612,0,737,681,347,292,839,737,612,0,346,944',
'827,320,0,0,0,0,0,0,932,873,932,0,0,932,292,727,368,368,368,0,368,911',
'0,369,368,368,728,0,0,368,369,368,368,368,368,368,368,368,252,26,388',
'388,388,368,368,368,368,368,368,368,601,908,368,908,255,726,908,309',
'353,368,365,356,368,368,728,368,368,368,368,368,584,368,368,368,725',
'368,368,209,636,365,636,684,727,636,365,685,441,880,441,880,636,441',
'880,826,351,943,351,943,441,945,943,368,669,946,368,26,347,368,347,679',
'368,347,346,944,346,944,951,346,944,680,727,316,393,873,316,873,26,209',
'873,368,368,368,368,368,368,911,289,911,368,368,911,690,690,420,420',
'420,368,420,795,368,313,420,420,313,368,368,420,495,420,420,420,420',
'420,420,420,695,312,506,695,312,420,420,420,420,420,420,420,679,945',
'420,933,933,946,393,393,393,420,680,639,420,420,495,420,420,420,420',
'420,690,420,420,420,506,420,420,289,420,420,826,666,826,826,674,826',
'945,679,945,795,946,945,946,505,688,946,679,680,918,682,918,420,689',
'951,420,951,680,420,951,523,420,639,371,683,289,286,420,575,638,371',
'735,674,662,289,420,735,795,505,428,420,420,420,420,420,420,795,691',
'211,420,420,828,625,219,430,430,430,420,430,576,420,386,430,430,386',
'420,420,430,266,430,430,430,430,430,430,430,696,682,682,638,428,430',
'430,430,430,430,430,430,523,428,430,683,683,625,286,83,83,430,211,697',
'430,430,625,430,430,430,430,430,430,430,430,430,384,430,430,682,430',
'430,700,25,378,702,386,386,682,523,25,378,575,683,575,286,350,575,523',
'847,594,350,683,430,286,594,430,430,382,430,847,652,430,704,430,828',
'430,828,430,277,828,705,372,576,277,576,430,706,576,372,709,430,430',
'430,430,430,430,384,384,384,430,430,650,847,847,438,438,438,430,438',
'741,430,374,438,438,741,430,430,438,374,438,438,438,438,438,438,438',
'842,842,382,382,382,438,438,438,438,438,438,438,3,847,438,363,363,3',
'35,643,279,438,714,363,438,438,720,438,438,438,438,438,438,438,438,438',
'722,438,438,213,438,438,724,643,643,643,643,643,643,643,643,643,643',
'643,13,13,643,643,373,35,643,643,13,438,642,373,438,438,35,438,281,363',
'438,363,438,643,438,643,438,643,643,643,643,643,643,643,438,643,282',
'42,42,438,438,438,438,438,438,42,283,429,438,438,212,643,633,439,439',
'439,438,439,13,438,13,439,439,732,438,438,439,733,439,439,439,439,439',
'439,439,278,278,278,278,278,439,439,439,439,439,439,439,375,429,439',
'302,302,628,42,375,42,439,429,302,439,439,288,439,439,439,439,439,439',
'439,439,439,290,439,439,210,439,439,623,482,482,482,482,482,482,482',
'482,482,482,482,703,703,482,482,291,110,482,482,703,439,110,110,439',
'439,616,439,744,302,439,302,439,482,439,482,439,482,482,482,482,482',
'482,482,439,482,294,586,586,439,439,439,439,439,439,586,748,14,439,439',
'749,482,482,450,450,450,439,450,703,439,703,450,450,751,439,439,450',
'752,450,450,450,450,450,450,450,753,360,295,295,755,450,450,450,450',
'450,450,450,300,14,450,909,909,758,586,578,586,450,14,909,450,450,577',
'450,450,450,450,450,450,450,450,450,301,450,450,765,450,450,571,860',
'860,860,860,860,860,860,860,860,860,860,360,360,860,860,712,712,860',
'860,360,450,15,15,450,360,566,450,562,909,450,909,450,860,304,860,450',
'860,860,860,860,860,860,860,450,860,360,354,354,450,450,450,450,450',
'450,354,551,299,450,450,311,860,193,452,452,452,450,452,360,450,360',
'452,452,538,450,450,452,537,452,452,452,452,452,452,452,5,5,5,5,5,452',
'452,452,452,452,452,452,536,299,452,287,287,314,354,783,354,452,299',
'287,452,452,784,452,452,452,452,452,787,452,452,452,789,452,452,97,452',
'452,792,445,445,445,445,445,445,445,445,445,445,445,208,208,445,445',
'345,345,445,445,208,452,559,559,452,37,37,452,793,287,452,287,794,445',
'315,445,452,445,445,445,445,445,445,445,452,445,799,730,730,452,452',
'452,452,452,452,730,317,802,452,452,730,445,803,929,929,929,452,929',
'208,452,208,929,929,527,452,452,929,524,929,929,929,929,929,929,929',
'812,517,818,325,553,929,929,929,929,929,929,929,78,567,929,567,567,567',
'730,567,730,929,77,515,929,929,512,929,929,929,929,929,929,929,929,929',
'511,929,929,326,929,929,830,478,833,834,835,812,812,812,812,553,553',
'553,553,923,507,328,501,500,923,497,329,929,857,858,929,341,344,929',
'464,923,929,866,929,478,41,463,929,478,478,478,478,759,759,678,929,759',
'759,759,876,929,929,929,929,929,929,877,462,882,929,929,923,923,923',
'923,883,34,929,845,461,929,352,891,845,893,929,929,927,927,927,927,927',
'896,897,845,927,927,898,899,442,927,20,927,927,927,927,927,927,927,440',
'923,355,357,910,927,927,927,927,927,927,927,435,361,927,427,845,845',
'845,845,927,927,460,927,927,927,12,927,927,927,927,927,920,927,927,927',
'423,927,927,11,927,927,928,665,665,665,665,665,665,665,665,665,665,665',
'460,845,665,665,460,460,665,665,10,927,421,415,927,9,409,927,459,937',
'927,939,927,665,940,665,927,665,665,665,665,665,665,665,927,665,942',
'6,390,927,927,927,927,927,927,387,1,821,927,927,459,665,,665,459,459',
'927,,,927,,,,,927,927,919,919,919,919,919,,,,919,919,,,,919,,919,919',
'919,919,919,919,919,673,673,673,673,673,919,919,919,919,919,919,919',
',,919,,,,,418,919,919,,919,919,919,,919,919,919,919,919,,919,919,919',
',919,919,,919,919,,418,418,418,418,418,418,418,418,418,418,418,,,418',
'418,,,418,418,,919,,,919,,,919,,,919,,919,418,,418,919,418,418,418,418',
'418,418,418,919,418,,,,919,919,919,919,919,919,,,,919,919,,418,,418',
',,919,,,919,,,,,919,919,914,914,914,914,914,,,,914,914,,,,914,,914,914',
'914,914,914,914,914,,,,,,914,914,914,914,914,914,914,,817,914,817,817',
'817,,817,914,914,,914,914,914,,914,914,914,914,914,,914,914,914,,914',
'914,,914,914,,781,781,781,781,781,781,781,781,781,781,781,,,781,781',
',,781,781,,914,,,914,,,914,,,914,,914,781,,781,914,781,781,781,781,781',
'781,781,914,781,,,,914,914,914,914,914,914,,,,914,914,,781,,453,453',
'453,914,453,,914,,453,453,,914,914,453,,453,453,453,453,453,453,453',
',,,,,453,453,453,453,453,453,453,,,453,,,,,,,453,,,453,453,,453,453',
'453,453,453,,453,453,453,,453,453,,453,453,,774,774,774,774,774,774',
'774,774,774,774,774,,,774,774,,,774,774,,453,,,453,,,453,,,453,,,774',
',774,453,774,774,774,774,774,774,774,453,774,,,,453,453,453,453,453',
'453,,,,453,453,,774,,454,454,454,453,454,,453,,454,454,,453,453,454',
',454,454,454,454,454,454,454,,,,,,454,454,454,454,454,454,454,,,454',
',,,,,,454,,,454,454,,454,454,454,454,454,,454,454,454,,454,454,,454',
'454,,19,19,19,19,19,19,19,19,19,19,19,,,19,19,,,19,19,,454,,,454,,,454',
',,454,,,19,,19,454,19,19,19,19,19,19,19,454,19,,,,454,454,454,454,454',
'454,,,,454,454,,19,,17,17,17,454,17,,454,,17,17,,454,454,17,,17,17,17',
'17,17,17,17,,,,,,17,17,17,17,17,17,17,,,17,,,,,,,17,,,17,17,,17,17,17',
'17,17,,17,17,17,,17,17,,17,17,,534,534,534,534,534,534,534,534,534,534',
'534,,,534,534,,,534,534,,17,,,17,17,,17,,,17,,,534,,534,17,534,534,534',
'534,534,534,534,17,534,,,,17,17,17,17,17,17,,,,17,17,,534,,18,18,18',
'17,18,,17,,18,18,,17,17,18,,18,18,18,18,18,18,18,,,,,,18,18,18,18,18',
'18,18,,,18,,,,,,,18,,,18,18,,18,18,18,18,18,,18,18,18,,18,18,,18,18',
',776,776,776,776,776,776,776,776,776,776,776,,,776,776,,,776,776,,18',
',,18,,,18,,,18,,,776,,776,18,776,776,776,776,776,776,776,18,776,,,,18',
'18,18,18,18,18,,,,18,18,,776,,,,,18,,,18,,,,,18,18,907,907,907,907,907',
',,,907,907,,,,907,,907,907,907,907,907,907,907,,,,,,907,907,907,907',
'907,907,907,,,907,,,,,,907,907,,907,907,907,,907,907,907,907,907,,907',
'907,907,,907,907,,907,907,,771,771,771,771,771,771,771,771,771,771,771',
',,771,771,,,771,771,,907,,,907,,,907,,,907,,907,771,,771,907,771,771',
'771,771,771,771,771,907,771,,,,907,907,907,907,907,907,,,,907,907,,771',
',905,905,905,907,905,,907,,905,905,,907,907,905,,905,905,905,905,905',
'905,905,,,,,,905,905,905,905,905,905,905,,,905,,,,,,,905,,,905,905,',
'905,905,905,905,905,,905,905,905,,905,905,,905,905,,249,249,249,249',
'249,249,249,249,249,249,249,,,249,249,,,249,249,,905,,,905,,,905,,,905',
',905,249,905,249,905,249,249,249,249,249,249,249,905,249,,,,905,905',
'905,905,905,905,,,,905,905,,249,,22,22,22,905,22,,905,,22,22,,905,905',
'22,,22,22,22,22,22,22,22,,,,,,22,22,22,22,22,22,22,,,22,,,,,,,22,,,22',
'22,,22,22,22,22,22,22,22,22,22,,22,22,,22,22,,769,769,769,769,769,769',
'769,769,769,769,769,,,769,769,,,769,769,,22,,,22,,,22,,,22,,22,769,22',
'769,22,769,769,769,769,769,769,769,22,769,,,,22,22,22,22,22,22,,,,22',
'22,,769,,23,23,23,22,23,,22,,23,23,,22,22,23,,23,23,23,23,23,23,23,',
',,,,23,23,23,23,23,23,23,,,23,,,,,,,23,,,23,23,,23,23,23,23,23,23,23',
'23,23,,23,23,,23,23,,426,426,426,426,426,426,426,426,426,426,426,,,426',
'426,,,426,426,,23,,,23,,,23,,,23,,23,426,23,426,23,426,426,426,426,426',
'426,426,23,426,,,,23,23,23,23,23,23,,,,23,23,,426,,24,24,24,23,24,,23',
',24,24,,23,23,24,,24,24,24,24,24,24,24,,,,,,24,24,24,24,24,24,24,,,24',
',,,,,,24,,,24,24,,24,24,24,24,24,24,24,24,24,,24,24,,24,24,,687,687',
'687,687,687,687,687,687,687,687,687,,,687,687,,,687,687,,24,,,24,,,24',
',,24,,24,687,24,687,24,687,687,687,687,687,687,687,24,687,,,,24,24,24',
'24,24,24,,,,24,24,,687,,,,,24,,,24,,,,,24,24,888,888,888,888,888,,,',
'888,888,,,,888,,888,888,888,888,888,888,888,,,,,,888,888,888,888,888',
'888,888,,,888,,,,,,888,888,,888,888,888,,888,888,888,888,888,,888,888',
'888,,888,888,,888,888,,764,764,764,764,764,764,764,764,764,764,764,',
',764,764,,,764,764,,888,,,888,,,888,,,888,,888,764,,764,888,764,764',
'764,764,764,764,764,888,764,,,,888,888,888,888,888,888,,,,888,888,,764',
',,,,888,,,888,,,,,888,888,885,885,885,885,885,,,,885,885,,,,885,,885',
'885,885,885,885,885,885,,,,,,885,885,885,885,885,885,885,,564,885,564',
'564,564,,564,885,885,,885,885,885,,885,885,885,885,885,,885,885,885',
',885,885,,885,885,710,,710,710,710,,710,,,337,564,337,337,337,,337,',
',564,,,885,,,885,,,885,,,885,,885,,,,885,,,710,,,,,885,,,710,337,885',
'885,885,885,885,885,,337,,885,885,,,,27,27,27,885,27,,885,,27,27,,885',
'885,27,,27,27,27,27,27,27,27,,,,,,27,27,27,27,27,27,27,,,27,,,,479,',
',27,,,27,27,,27,27,27,27,27,27,27,27,27,,27,27,,27,27,,468,468,468,468',
'468,468,468,479,,468,468,479,479,479,479,,,468,468,,27,,,27,27,,27,',
',27,,27,468,27,468,27,468,468,468,468,468,468,468,27,468,,,,27,27,27',
'27,27,27,,,,27,27,,,,349,349,349,27,349,,27,,349,349,,27,27,349,,349',
'349,349,349,349,349,349,,,,,,349,349,349,349,349,349,349,,,349,,,,,',
',349,,,349,349,,349,349,349,349,349,,349,349,349,,349,349,,349,349,',
'471,,,,,,,,,,,,,,,,,471,471,,349,,,349,,,349,,,349,,,471,,471,349,471',
'471,471,471,,,471,349,471,,,,349,349,349,349,349,349,,,,349,349,,,,',
',,349,,,349,,,,,349,349,30,30,30,30,30,,,,30,30,,,,30,,30,30,30,30,30',
'30,30,,,,,,30,30,30,30,30,30,30,,,30,,,,,,30,30,,30,30,30,,30,30,30',
'30,30,,30,30,30,,30,30,,30,30,,470,,,,,,,,,,,,,,,,,470,470,,30,,,30',
',,30,,,30,,30,470,,470,30,470,470,470,470,,,470,30,470,,,,30,30,30,30',
'30,30,,,,30,30,,,,31,31,31,30,31,,30,,31,31,,30,30,31,,31,31,31,31,31',
'31,31,,,,,,31,31,31,31,31,31,31,,,31,,,,,,,31,,,31,31,,31,31,31,31,31',
',31,31,31,,31,31,647,,647,647,647,467,647,,,,,,,,,,,,,,,,467,467,31',
',,31,,,31,,,31,,31,,467,,647,,467,467,467,467,,,647,647,647,647,,31',
'31,31,31,31,31,647,,,31,31,,,,32,32,32,31,32,,31,,32,32,,31,31,32,,32',
'32,32,32,32,32,32,,,,,,32,32,32,32,32,32,32,,,32,,,,,,,32,,,32,32,,32',
'32,32,32,32,,32,32,32,,32,32,740,,740,740,740,740,740,,,,,,,,,,740,',
',,,,,,32,,,32,,,32,,,32,,,,,,740,,,,,,,,740,740,740,740,,32,32,32,32',
'32,32,,,,32,32,,,,32,,,32,,,32,,,,,32,32,884,884,884,,884,,,740,884',
'884,,,,884,,884,884,884,884,884,884,884,,,,,,884,884,884,884,884,884',
'884,,,884,,,,,,,884,,,884,884,,884,884,884,884,884,,884,884,884,,884',
'884,,884,884,,474,474,474,474,474,474,474,,,474,474,,,,,,,474,474,,884',
',,884,,,884,,,884,,884,474,,474,884,474,474,474,474,474,474,474,884',
'474,,,,884,884,884,884,884,884,,,,884,884,,,,348,348,348,884,348,,884',
',348,348,,884,884,348,,348,348,348,348,348,348,348,,,,,,348,348,348',
'348,348,348,348,,,348,,,,,,,348,,,348,348,,348,348,348,348,348,,348',
'348,348,,348,348,,348,348,,469,,,,,,,,,,,,,,,,,469,469,,348,,,348,,',
'348,,,348,,,469,,469,348,469,469,469,469,,,469,348,469,,,,348,348,348',
'348,348,348,,,,348,348,,,,874,874,874,348,874,,348,,874,874,,348,348',
'874,,874,874,874,874,874,874,874,,,,,,874,874,874,874,874,874,874,,',
'874,,,,,,,874,,,874,874,,874,874,874,874,874,,874,874,874,,874,874,56',
',56,56,56,,56,,,,,,,,,,,,,,,,,,874,,,874,,,874,,,874,,,,,,56,56,,,,',
',,56,56,56,56,,874,874,874,874,874,874,,,,874,874,,,,485,485,485,874',
'485,,874,,485,485,,874,874,485,,485,485,485,485,485,485,485,,,,,,485',
'485,485,485,485,485,485,,,485,,,,,,,485,,,485,485,,485,485,485,485,485',
'485,485,485,485,,485,485,,485,485,,476,476,476,476,476,476,476,,,476',
'476,,,,,,,476,476,,485,,,485,,,485,,,485,,485,476,485,476,485,476,476',
'476,476,476,476,476,485,476,,,,485,485,485,485,485,485,,,,485,485,,',
',38,38,38,485,38,,485,,38,38,,485,485,38,,38,38,38,38,38,38,38,,,,,',
'38,38,38,38,38,38,38,,,38,,,,,,,38,,,38,38,,38,38,38,38,38,,38,38,38',
',38,38,,38,38,,477,477,477,477,477,477,477,,,477,477,,,,,,,477,477,',
'38,,,38,,,38,,,38,,,477,,477,38,477,477,477,477,477,477,477,38,477,',
',,38,38,38,38,38,38,,,,38,38,,,,39,39,39,38,39,,38,,39,39,,38,38,39',
',39,39,39,39,39,39,39,,,,,,39,39,39,39,39,39,39,,,39,,,,,,,39,,,39,39',
',39,39,39,39,39,,39,39,39,,39,39,,39,39,,480,480,480,480,480,480,480',
',,480,480,,,,,,,480,480,,39,,,39,,,39,,,39,,,480,,480,39,480,480,480',
'480,480,480,480,39,480,,,,39,39,39,39,39,39,,,,39,39,,,,40,40,40,39',
'40,,39,,40,40,,39,39,40,,40,40,40,40,40,40,40,,,,,,40,40,40,40,40,40',
'40,,,40,,,,,,,40,,,40,40,,40,40,40,40,40,,40,40,40,,40,40,,40,40,,481',
'481,481,481,481,481,481,481,,481,481,,,,,,,481,481,,40,,,40,,,40,,,40',
',,481,,481,40,481,481,481,481,481,481,481,40,481,,,,40,40,40,40,40,40',
',,,40,40,,,,,,,40,,,40,,,,,40,40,870,870,870,870,870,,,,870,870,,,,870',
',870,870,870,870,870,870,870,,,,,,870,870,870,870,870,870,870,,,870',
',,,,,870,870,,870,870,870,,870,870,870,870,870,,870,870,870,,870,870',
',870,870,,472,,,,,,,,,,,,,,,,,472,472,,870,,,870,,,870,,,870,,870,472',
',472,870,472,472,472,472,,,472,870,472,,,,870,870,870,870,870,870,,',
',870,870,,,,865,865,865,870,865,,870,,865,865,,870,870,865,,865,865',
'865,865,865,865,865,,,,,,865,865,865,865,865,865,865,,,865,,,,,,,865',
',,865,865,,865,865,865,865,865,865,865,865,865,,865,865,,865,865,,458',
'458,458,458,458,458,458,458,458,458,458,,,458,458,,,458,458,,865,,,865',
',,865,,,865,,,458,865,458,865,458,458,458,458,458,458,458,865,458,,',
',865,865,865,865,865,865,,,,865,865,,,,487,487,487,865,487,,865,,487',
'487,,865,865,487,,487,487,487,487,487,487,487,,,,,,487,487,487,487,487',
'487,487,,,487,,,,,,,487,,,487,487,,487,487,487,487,487,487,487,487,487',
',487,487,,487,487,,475,475,475,475,475,475,475,,,475,475,,,,,,,475,475',
',487,,,487,,,487,,,487,,,475,487,475,487,475,475,475,475,475,475,475',
'487,475,,,,487,487,487,487,487,487,,,,487,487,,,,52,52,52,487,52,,487',
',52,52,,487,487,52,,52,52,52,52,52,52,52,,,,,,52,52,52,52,52,52,52,',
',52,,,,,,,52,,,52,52,,52,52,52,52,52,,52,52,52,,52,52,,52,52,,473,473',
'473,473,473,473,473,,,473,473,,,,,,,473,473,,52,,,52,,,52,,,52,,,473',
',473,52,473,473,473,473,473,473,473,52,473,,,,52,52,52,52,52,52,,,,52',
'52,,,,53,53,53,52,53,,52,,53,53,,52,52,53,,53,53,53,53,53,53,53,,,,',
',53,53,53,53,53,53,53,,,53,,,,,,,53,,,53,53,,53,53,53,53,53,53,53,53',
'53,,53,53,,53,53,,457,457,457,457,457,457,457,457,457,457,457,,,457',
'457,,,457,457,,53,,,53,,,53,,,53,,53,457,,457,53,457,457,457,457,457',
'457,457,53,457,,,,53,53,53,53,53,53,,,,53,53,,,,54,54,54,53,54,,53,',
'54,54,,53,53,54,,54,54,54,54,54,54,54,,,,,,54,54,54,54,54,54,54,,,54',
',,,,,,54,,,54,54,,54,54,54,54,54,54,54,54,54,,54,54,,54,54,,465,,,,',
',,,,,,,,,,,,465,465,,54,,,54,,,54,,,54,,,465,,465,54,465,465,465,465',
',,,54,,,,,54,54,54,54,54,54,,,,54,54,,,,861,861,861,54,861,,54,,861',
'861,,54,54,861,,861,861,861,861,861,861,861,,,,,,861,861,861,861,861',
'861,861,,,861,,,,,,,861,,,861,861,,861,861,861,861,861,,861,861,861',
',861,861,,861,861,,466,,,,,,,,,,,,,,,,,466,466,,861,,,861,,,861,,,861',
',,466,,466,861,466,466,466,466,,,,861,,,,,861,861,861,861,861,861,,',
',861,861,,,,849,849,849,861,849,,861,,849,849,,861,861,849,,849,849',
'849,849,849,849,849,,,,,,849,849,849,849,849,849,849,,,849,,,,,,,849',
',,849,849,,849,849,849,849,849,,849,849,849,,849,849,,849,849,,,,,,',
',,,,,,,,,,,,,,,849,,,849,,,849,,,849,,,,,,849,,,,,,,,849,,,,,849,849',
'849,849,849,849,,,,849,849,,,,57,57,57,849,57,,849,,57,57,,849,849,57',
',57,57,57,57,57,57,57,,,,,,57,57,57,57,57,57,57,,,57,,,,,,,57,,,57,57',
',57,57,57,57,57,,57,57,57,,57,57,,57,57,,,,,,,,,,,,,,,,,,,,,,57,,,57',
',,57,,,57,,,,,,57,,,,,,,,57,,,,,57,57,57,57,57,57,,,,57,57,,,,58,58',
'58,57,58,,57,,58,58,,57,57,58,,58,58,58,58,58,58,58,,,,,,58,58,58,58',
'58,58,58,,,58,,,,,,,58,,,58,58,,58,58,58,58,58,,58,58,58,,58,58,,58',
'58,,,,,,,,,,,,,,,,,,,,,,58,,,58,,,58,,,58,,,,,,58,,,,,,,,58,,,,,58,58',
'58,58,58,58,,,,58,58,,,,61,61,61,58,61,,58,,61,61,,58,58,61,,61,61,61',
'61,61,61,61,,,,,,61,61,61,61,61,61,61,,,61,,,,,,,61,,,61,61,,61,61,61',
'61,61,,61,61,61,,61,61,,61,61,,,,,,,,,,,,,,,,,,,,,,61,,,61,,,61,,,61',
',,,,,61,,,,,,,,61,,,,,61,61,61,61,61,61,,,,61,61,61,,,,,61,61,,,61,',
',,,61,61,62,62,62,,62,,,,62,62,,,,62,,62,62,62,62,62,62,62,,,,,,62,62',
'62,62,62,62,62,,,62,,,,,,,62,,,62,62,,62,62,62,62,62,,62,62,62,,62,62',
'321,,321,321,321,,321,,,,,,,,,,,,,,,,,,62,,,62,,,62,,,62,,62,,,,321',
',321,,,,,,321,321,321,321,,62,62,62,62,62,62,,,,62,62,,,,63,63,63,62',
'63,,62,,63,63,,62,62,63,,63,63,63,63,63,63,63,,,,,,63,63,63,63,63,63',
'63,,,63,,,,,,,63,,,63,63,,63,63,63,63,63,,63,63,63,,63,63,557,,557,557',
'557,,557,,,,,,,,,,,,,,,63,,,63,,,63,,,63,,,63,,,,,,557,,,,,,,,557,557',
'557,557,,63,63,63,63,63,63,,,,63,63,,,,489,489,489,63,489,,63,,489,489',
',63,63,489,,489,489,489,489,489,489,489,,,,,,489,489,489,489,489,489',
'489,,,489,,,,,,,489,,,489,489,,489,489,489,489,489,,489,489,489,,489',
'489,,489,489,,,,,,,,,,,,,,,,,,,,,,489,,,489,,,489,,,489,,,,,,489,,,',
',,,,489,,,,,489,489,489,489,489,489,,,,489,489,,,,,,,489,,,489,,,,,489',
'489,823,823,823,823,823,,,,823,823,,,,823,,823,823,823,823,823,823,823',
',,,,,823,823,823,823,823,823,823,,,823,,,,,,823,823,,823,823,823,,823',
'823,823,823,823,,823,823,823,,823,823,,823,823,,,,,,,,,,,,,,,,,,,,,',
'823,,,823,,,823,,,823,,823,,,,823,,,,,,,,823,,,,,823,823,823,823,823',
'823,,,,823,823,,,,,,,823,,,823,,,,,823,823,822,822,822,822,822,,,,822',
'822,,,,822,,822,822,822,822,822,822,822,,,,,,822,822,822,822,822,822',
'822,,,822,,,,,,822,822,,822,822,822,,822,822,822,822,822,,822,822,822',
',822,822,,822,822,,,,,,,,,,,,,,,,,,,,,,822,,,822,,,822,,,822,,822,,',
',822,,,,,,,,822,,,,,822,822,822,822,822,822,,,,822,822,,,,380,380,380',
'822,380,,822,,380,380,,822,822,380,,380,380,380,380,380,380,380,,,,',
',380,380,380,380,380,380,380,,,380,,,,,,,380,,,380,380,,380,380,380',
'380,380,,380,380,380,,380,380,,380,380,,,,,,,,,,,,,,,,,,,,,,380,,,380',
',,380,,,380,,,,,,380,,,,,,,,380,,,,,380,380,380,380,380,380,,,,380,380',
',,,820,820,820,380,820,,380,,820,820,,380,380,820,,820,820,820,820,820',
'820,820,,,,,,820,820,820,820,820,820,820,,,820,,,,,,,820,,,820,820,',
'820,820,820,820,820,,820,820,820,,820,820,,820,820,,,,,,,,,,,,,,,,,',
',,,,820,,,820,,,820,,,820,,,,,,820,,,,,,,,820,,,,,820,820,820,820,820',
'820,,,,820,820,,,,,,,820,,,820,,,,,820,820,801,801,801,801,801,,,,801',
'801,,,,801,,801,801,801,801,801,801,801,,,,,,801,801,801,801,801,801',
'801,,,801,,,,,,801,801,,801,801,801,,801,801,801,801,801,,801,801,801',
',801,801,,801,801,,,,,,,,,,,,,,,,,,,,,,801,,,801,,,801,,,801,,801,,',
',801,,,,,,,,801,,,,,801,801,801,801,801,801,,,,801,801,,,,84,84,84,801',
'84,,801,,84,84,,801,801,84,,84,84,84,84,84,84,84,,84,,,,84,84,84,84',
'84,84,84,,,84,,,,,,,84,,,84,84,,84,84,84,84,84,84,84,84,84,,84,84,,84',
'84,,,,,,,,,,,,,,,,,,,,,,84,,,84,84,,84,,,84,,84,,84,,84,,,,,,,,84,,84',
',,84,84,84,84,84,84,,,,84,84,,,,87,87,87,84,87,,84,,87,87,,84,84,87',
',87,87,87,87,87,87,87,,87,,,,87,87,87,87,87,87,87,,,87,,,,,,,87,,,87',
'87,,87,87,87,87,87,87,87,87,87,,87,87,,87,87,,,,,,,,,,,,,,,,,,,,,,87',
',,87,87,,87,,,87,,87,,87,,87,,,,,,,,87,,87,,,87,87,87,87,87,87,,,,87',
'87,,,,790,790,790,87,790,,87,,790,790,,87,87,790,,790,790,790,790,790',
'790,790,,,,,,790,790,790,790,790,790,790,,,790,,,,,,,790,,,790,790,',
'790,790,790,790,790,,790,790,790,,790,790,,790,790,,,,,,,,,,,,,,,,,',
',,,,790,,,790,,,790,,,790,,790,,,,790,,,,,,,,790,,,,,790,790,790,790',
'790,790,,,,790,790,,,,,,,790,,,790,,,,,790,790,99,99,99,99,99,,,,99',
'99,,,,99,,99,99,99,99,99,99,99,,,,,,99,99,99,99,99,99,99,,,99,,,,,,99',
'99,99,99,99,99,,99,99,99,99,99,,99,99,99,,99,99,,99,99,,,,,,,,,,,,,',
',,,,,,,,99,,,99,,,99,,,99,,99,,,,99,,,,,,,,99,,,,,99,99,99,99,99,99',
',,,99,99,,,,,,99,99,,,99,,,,,99,99,103,103,103,,103,,,,103,103,,,,103',
',103,103,103,103,103,103,103,,,,,,103,103,103,103,103,103,103,,,103',
',,,,,,103,,,103,103,,103,103,103,103,103,,103,103,103,,103,103,,103',
'103,,,,,,,,,,,,,,,,,,,,,,103,,,103,,,103,,,103,,,,,,103,,,,,,,,103,',
',,,103,103,103,103,103,103,,,,103,103,,,,104,104,104,103,104,,103,,104',
'104,,103,103,104,,104,104,104,104,104,104,104,,,,,,104,104,104,104,104',
'104,104,,,104,,,,,,,104,,,104,104,,104,104,104,104,104,,104,104,104',
',104,104,,104,104,,,,,,,,,,,,,,,,,,,,,,104,,,104,,,104,,,104,,,,,,104',
',,,,,,,104,,,,,104,104,104,104,104,104,,,,104,104,,,,105,105,105,104',
'105,,104,,105,105,,104,104,105,,105,105,105,105,105,105,105,,,,,,105',
'105,105,105,105,105,105,,,105,,,,,,,105,,,105,105,,105,105,105,105,105',
',105,105,105,,105,105,,105,105,,,,,,,,,,,,,,,,,,,,,,105,,,105,,,105',
',,105,,,,,,105,,,,,,,,105,,,,,105,105,105,105,105,105,,,,105,105,,,',
'106,106,106,105,106,,105,,106,106,,105,105,106,,106,106,106,106,106',
'106,106,,,,,,106,106,106,106,106,106,106,,,106,,,,,,,106,,,106,106,',
'106,106,106,106,106,,106,106,106,,106,106,,106,106,,,,,,,,,,,,,,,,,',
',,,,106,,,106,,,106,,,106,,,,,,106,,,,,,,,106,,,,,106,106,106,106,106',
'106,,,,106,106,,,,,,,106,,,106,,,,,106,106,107,107,107,107,107,,,,107',
'107,,,,107,,107,107,107,107,107,107,107,,,,,,107,107,107,107,107,107',
'107,,,107,,,,,,107,107,,107,107,107,,107,107,107,107,107,,107,107,107',
',107,107,,107,107,,,,,,,,,,,,,,,,,,,,,,107,,,107,,,107,,,107,,107,,',
',107,,,,,,,,107,,,,,107,107,107,107,107,107,,,,107,107,,,,,,,107,,,107',
',,,,107,107,108,108,108,108,108,,,,108,108,,,,108,,108,108,108,108,108',
'108,108,,,,,,108,108,108,108,108,108,108,,,108,,,,,,108,108,108,108',
'108,108,,108,108,108,108,108,,108,108,108,,108,108,,108,108,,,,,,,,',
',,,,,,,,,,,,,108,,,108,,,108,,,108,,108,,,,108,,,,,,,,108,,,,,108,108',
'108,108,108,108,,,,108,108,,,,779,779,779,108,779,,108,,779,779,,108',
'108,779,,779,779,779,779,779,779,779,,,,,,779,779,779,779,779,779,779',
',,779,,,,,,,779,,,779,779,,779,779,779,779,779,,779,779,779,,779,779',
',779,779,,,,,,,,,,,,,,,,,,,,,,779,,,779,,,779,,,779,,,,,,779,,,,,,,',
'779,,,,,779,779,779,779,779,779,,,,779,779,,,,778,778,778,779,778,,779',
',778,778,,779,779,778,,778,778,778,778,778,778,778,,,,,,778,778,778',
'778,778,778,778,,,778,,,,,,,778,,,778,778,,778,778,778,778,778,,778',
'778,778,,778,778,,778,778,,,,,,,,,,,,,,,,,,,,,,778,,,778,,,778,,,778',
',,,,,778,,,,,,,,778,,,,,778,778,778,778,778,778,,,,778,778,,,,777,777',
'777,778,777,,778,,777,777,,778,778,777,,777,777,777,777,777,777,777',
',,,,,777,777,777,777,777,777,777,,,777,,,,,,,777,,,777,777,,777,777',
'777,777,777,,777,777,777,,777,777,,777,777,,,,,,,,,,,,,,,,,,,,,,777',
',,777,,,777,,,777,,,,,,777,,,,,,,,777,,,,,777,777,777,777,777,777,,',
',777,777,,,,,,,777,,,777,,,,,777,777,195,195,195,195,195,,,,195,195',
',,,195,,195,195,195,195,195,195,195,,,,,,195,195,195,195,195,195,195',
',,195,,,,,,195,195,,195,195,195,,195,195,195,195,195,,195,195,195,,195',
'195,,195,195,,,,,,,,,,,,,,,,,,,,,,195,,,195,,,195,,,195,,195,,,,195',
',,,,,,,195,,,,,195,195,195,195,195,195,,,,195,195,,,,196,196,196,195',
'196,,195,,196,196,,195,195,196,,196,196,196,196,196,196,196,,,,,,196',
'196,196,196,196,196,196,,,196,,,,,,,196,,,196,196,,196,196,196,196,196',
',196,196,196,,196,196,,196,196,,,,,,,,,,,,,,,,,,,,,,196,,,196,,,196',
',,196,,196,,,,196,,,,,,,,196,,,,,196,196,196,196,196,196,,,,196,196',
',,,197,197,197,196,197,,196,,197,197,,196,196,197,,197,197,197,197,197',
'197,197,,,,,,197,197,197,197,197,197,197,,,197,,,,,,,197,,,197,197,',
'197,197,197,197,197,,197,197,197,,197,197,,197,197,,,,,,,,,,,,,,,,,',
',,,,197,,,197,,,197,,,197,,197,,,,197,,,,,,,,197,,,,,197,197,197,197',
'197,197,,,,197,197,,,,198,198,198,197,198,,197,,198,198,,197,197,198',
',198,198,198,198,198,198,198,,,,,,198,198,198,198,198,198,198,,,198',
',,,,,,198,,,198,198,,198,198,198,198,198,,198,198,198,,198,198,,198',
'198,,,,,,,,,,,,,,,,,,,,,,198,,,198,,,198,,,198,,,,,,198,,,,,,,,198,',
',,,198,198,198,198,198,198,,,,198,198,,,,199,199,199,198,199,,198,,199',
'199,,198,198,199,,199,199,199,199,199,199,199,,,,,,199,199,199,199,199',
'199,199,,,199,,,,,,,199,,,199,199,,199,199,199,199,199,199,199,199,199',
',199,199,,199,199,,,,,,,,,,,,,,,,,,,,,,199,,,199,,,199,,,199,,199,,',
',199,,,,,,,,199,,,,,199,199,199,199,199,199,,,,199,199,,,,767,767,767',
'199,767,,199,,767,767,,199,199,767,,767,767,767,767,767,767,767,,,,',
',767,767,767,767,767,767,767,,,767,,,,,,,767,,,767,767,,767,767,767',
'767,767,,767,767,767,,767,767,,767,767,,,,,,,,,,,,,,,,,,,,,,767,,,767',
',,767,,,767,,,,,,767,,,,,,,,767,,,,,767,767,767,767,767,767,,,,767,767',
',,,766,766,766,767,766,,767,,766,766,,767,767,766,,766,766,766,766,766',
'766,766,,,,,,766,766,766,766,766,766,766,,,766,,,,,,,766,,,766,766,',
'766,766,766,766,766,,766,766,766,,766,766,,766,766,,,,,,,,,,,,,,,,,',
',,,,766,,,766,,,766,,,766,,,,,,766,,,,,,,,766,,,,,766,766,766,766,766',
'766,,,,766,766,,,,202,202,202,766,202,,766,,202,202,,766,766,202,,202',
'202,202,202,202,202,202,,,,,,202,202,202,202,202,202,202,,,202,,,,,',
',202,,,202,202,,202,202,202,202,202,202,202,202,202,,202,202,,202,202',
',,,,,,,,,,,,,,,,,,,,,202,,,202,,,202,,,202,,202,,,,202,,,,,,,,202,,',
',,202,202,202,202,202,202,,,,202,202,,,,,,,202,,,202,,,,,202,202,760',
'760,760,760,760,,,,760,760,,,,760,,760,760,760,760,760,760,760,,,,,',
'760,760,760,760,760,760,760,,,760,,,,,,760,760,,760,760,760,,760,760',
'760,760,760,,760,760,760,,760,760,,760,760,,,,,,,,,,,,,,,,,,,,,,760',
',,760,,,760,,,760,,760,,,,760,,,,,,,,760,,,,,760,760,760,760,760,760',
',,,760,760,,,,204,204,204,760,204,,760,,204,204,,760,760,204,,204,204',
'204,204,204,204,204,,,,,,204,204,204,204,204,204,204,,,204,,,,,,,204',
',,204,204,,204,204,204,204,204,,204,204,204,,204,204,,204,204,,,,,,',
',,,,,,,,,,,,,,,204,,,204,,,204,,,204,,,,,,204,,,,,,,,204,,,,,204,204',
'204,204,204,204,,,,204,204,,,,205,205,205,204,205,,204,,205,205,,204',
'204,205,,205,205,205,205,205,205,205,,,,,,205,205,205,205,205,205,205',
',,205,,,,,,,205,,,205,205,,205,205,205,205,205,,205,205,205,,205,205',
',205,205,,,,,,,,,,,,,,,,,,,,,,205,,,205,,,205,,,205,,,,,,205,,,,,,,',
'205,,,,,205,205,205,205,205,205,,,,205,205,,,,206,206,206,205,206,,205',
',206,206,,205,205,206,,206,206,206,206,206,206,206,,,,,,206,206,206',
'206,206,206,206,,,206,,,,,,,206,,,206,206,,206,206,206,206,206,,206',
'206,206,,206,206,,206,206,,,,,,,,,,,,,,,,,,,,,,206,,,206,,,206,,,206',
',,,,,206,,,,,,,,206,,,,,206,206,206,206,206,206,,,,206,206,,,,746,746',
'746,206,746,,206,,746,746,,206,206,746,,746,746,746,746,746,746,746',
',,,,,746,746,746,746,746,746,746,,,746,,,,,,,746,,,746,746,,746,746',
'746,746,746,,746,746,746,,746,746,,746,746,,,,,,,,,,,,,,,,,,,,,,746',
',,746,,,746,,,746,,,,,,746,,,,,,,,746,,,,,746,746,746,746,746,746,,',
',746,746,,,,,,,746,,,746,,,,,746,746,739,739,739,739,739,,,,739,739',
',,,739,,739,739,739,739,739,739,739,,,,,,739,739,739,739,739,739,739',
',,739,,,,,,739,739,,739,739,739,,739,739,739,739,739,,739,739,739,,739',
'739,,739,739,,,,,,,,,,,,,,,,,,,,,,739,,,739,,,739,,,739,,739,,,,739',
',,,,,,,739,,,,,739,739,739,739,739,739,,,,739,739,,,,,,,739,,,739,,',
',,739,739,738,738,738,738,738,,,,738,738,,,,738,,738,738,738,738,738',
'738,738,,,,,,738,738,738,738,738,738,738,,,738,,,,,,738,738,,738,738',
'738,,738,738,738,738,738,,738,738,738,,738,738,,738,738,,,,,,,,,,,,',
',,,,,,,,,738,,,738,,,738,,,738,,738,,,,738,,,,,,,,738,,,,,738,738,738',
'738,738,738,,,,738,738,,,,,,,738,,,738,,,,,738,738,734,734,734,734,734',
',,,734,734,,,,734,,734,734,734,734,734,734,734,,,,,,734,734,734,734',
'734,734,734,,,734,,,,,,734,734,,734,734,734,,734,734,734,734,734,,734',
'734,734,,734,734,,734,734,,,,,,,,,,,,,,,,,,,,,,734,,,734,,,734,,,734',
',734,,,,734,,,,,,,,734,,,,,734,734,734,734,734,734,,,,734,734,,,,729',
'729,729,734,729,,734,,729,729,,734,734,729,,729,729,729,729,729,729',
'729,,,,,,729,729,729,729,729,729,729,,,729,,,,,,,729,,,729,729,,729',
'729,729,729,729,,729,729,729,,729,729,,729,729,,,,,,,,,,,,,,,,,,,,,',
'729,,,729,,,729,,,729,,,,,,729,,,,,,,,729,,,,,729,729,729,729,729,729',
',,,729,729,,,,723,723,723,729,723,,729,,723,723,,729,729,723,,723,723',
'723,723,723,723,723,,,,,,723,723,723,723,723,723,723,,,723,,,,,,,723',
',,723,723,,723,723,723,723,723,,723,723,723,,723,723,,723,723,,,,,,',
',,,,,,,,,,,,,,,723,,,723,,,723,,,723,,723,,,,723,,,,,,,,723,,,,,723',
'723,723,723,723,723,,,,723,723,,,,,,,723,,,723,,,,,723,723,214,214,214',
'214,214,,,,214,214,,,,214,,214,214,214,214,214,214,214,,,,,,214,214',
'214,214,214,214,214,,,214,,,,,,214,214,,214,214,214,,214,214,214,214',
'214,,214,214,214,,214,214,,214,214,,,,,,,,,,,,,,,,,,,,,,214,,,214,,',
'214,,,214,,214,,,,214,,,,,,,,214,,,,,214,214,214,214,214,214,,,,214',
'214,,,,215,215,215,214,215,,214,,215,215,,214,214,215,,215,215,215,215',
'215,215,215,,,,,,215,215,215,215,215,215,215,,,215,,,,,,,215,,,215,215',
',215,215,215,215,215,,215,215,215,,215,215,,215,215,,,,,,,,,,,,,,,,',
',,,,,215,,,215,,215,215,,,215,,,,,,215,,,,,,,,215,,,,,215,215,215,215',
'215,215,,,,215,215,,,,218,218,218,215,218,,215,,218,218,,215,215,218',
',218,218,218,218,218,218,218,,,,,,218,218,218,218,218,218,218,,,218',
',,,,,,218,,,218,218,,218,218,218,218,218,,218,218,218,,218,218,,218',
'218,,,,,,,,,,,,,,,,,,,,,,218,,,218,,,218,,,218,,,,,,218,,,,,,,,218,',
',,,218,218,218,218,218,218,,,,218,218,,,,692,692,692,218,692,,218,,692',
'692,,218,218,692,,692,692,692,692,692,692,692,,,,,,692,692,692,692,692',
'692,692,,,692,,,,,,,692,,,692,692,,692,692,692,692,692,,692,692,692',
',692,692,,692,692,,,,,,,,,,,,,,,,,,,,,,692,,,692,,,692,,,692,,692,,',
',692,,,,,,,,692,,,,,692,692,692,692,692,692,,,,692,692,,,,220,220,220',
'692,220,,692,,220,220,,692,692,220,,220,220,220,220,220,220,220,,,,',
',220,220,220,220,220,220,220,,,220,,,,,,,220,,,220,220,,220,220,220',
'220,220,,220,220,220,,220,220,,220,220,,,,,,,,,,,,,,,,,,,,,,220,,,220',
',,220,,,220,,,,,,220,,,,,,,,220,,,,,220,220,220,220,220,220,,,,220,220',
',,,221,221,221,220,221,,220,,221,221,,220,220,221,,221,221,221,221,221',
'221,221,,,,,,221,221,221,221,221,221,221,,,221,,,,,,,221,,,221,221,',
'221,221,221,221,221,,221,221,221,,221,221,,221,221,,,,,,,,,,,,,,,,,',
',,,,221,,,221,,,221,,,221,,,,,,221,,,,,,,,221,,,,,221,221,221,221,221',
'221,,,,221,221,,,,222,222,222,221,222,,221,,222,222,,221,221,222,,222',
'222,222,222,222,222,222,,,,,,222,222,222,222,222,222,222,,,222,,,,,',
',222,,,222,222,,222,222,222,222,222,,222,222,222,,222,222,,222,222,',
',,,,,,,,,,,,,,,,,,,,222,,,222,,,222,,,222,,,,,,222,,,,,,,,222,,,,,222',
'222,222,222,222,222,,,,222,222,,,,223,223,223,222,223,,222,,223,223',
',222,222,223,,223,223,223,223,223,223,223,,,,,,223,223,223,223,223,223',
'223,,,223,,,,,,,223,,,223,223,,223,223,223,223,223,,223,223,223,,223',
'223,,223,223,,,,,,,,,,,,,,,,,,,,,,223,,,223,,,223,,,223,,,,,,223,,,',
',,,,223,,,,,223,223,223,223,223,223,,,,223,223,,,,224,224,224,223,224',
',223,,224,224,,223,223,224,,224,224,224,224,224,224,224,,,,,,224,224',
'224,224,224,224,224,,,224,,,,,,,224,,,224,224,,224,224,224,224,224,',
'224,224,224,,224,224,,224,224,,,,,,,,,,,,,,,,,,,,,,224,,,224,,,224,',
',224,,,,,,224,,,,,,,,224,,,,,224,224,224,224,224,224,,,,224,224,,,,225',
'225,225,224,225,,224,,225,225,,224,224,225,,225,225,225,225,225,225',
'225,,,,,,225,225,225,225,225,225,225,,,225,,,,,,,225,,,225,225,,225',
'225,225,225,225,,225,225,225,,225,225,,225,225,,,,,,,,,,,,,,,,,,,,,',
'225,,,225,,,225,,,225,,,,,,225,,,,,,,,225,,,,,225,225,225,225,225,225',
',,,225,225,,,,226,226,226,225,226,,225,,226,226,,225,225,226,,226,226',
'226,226,226,226,226,,,,,,226,226,226,226,226,226,226,,,226,,,,,,,226',
',,226,226,,226,226,226,226,226,,226,226,226,,226,226,,226,226,,,,,,',
',,,,,,,,,,,,,,,226,,,226,,,226,,,226,,,,,,226,,,,,,,,226,,,,,226,226',
'226,226,226,226,,,,226,226,,,,227,227,227,226,227,,226,,227,227,,226',
'226,227,,227,227,227,227,227,227,227,,,,,,227,227,227,227,227,227,227',
',,227,,,,,,,227,,,227,227,,227,227,227,227,227,,227,227,227,,227,227',
',227,227,,,,,,,,,,,,,,,,,,,,,,227,,,227,,,227,,,227,,,,,,227,,,,,,,',
'227,,,,,227,227,227,227,227,227,,,,227,227,,,,228,228,228,227,228,,227',
',228,228,,227,227,228,,228,228,228,228,228,228,228,,,,,,228,228,228',
'228,228,228,228,,,228,,,,,,,228,,,228,228,,228,228,228,228,228,,228',
'228,228,,228,228,,228,228,,,,,,,,,,,,,,,,,,,,,,228,,,228,,,228,,,228',
',,,,,228,,,,,,,,228,,,,,228,228,228,228,228,228,,,,228,228,,,,229,229',
'229,228,229,,228,,229,229,,228,228,229,,229,229,229,229,229,229,229',
',,,,,229,229,229,229,229,229,229,,,229,,,,,,,229,,,229,229,,229,229',
'229,229,229,,229,229,229,,229,229,,229,229,,,,,,,,,,,,,,,,,,,,,,229',
',,229,,,229,,,229,,,,,,229,,,,,,,,229,,,,,229,229,229,229,229,229,,',
',229,229,,,,230,230,230,229,230,,229,,230,230,,229,229,230,,230,230',
'230,230,230,230,230,,,,,,230,230,230,230,230,230,230,,,230,,,,,,,230',
',,230,230,,230,230,230,230,230,,230,230,230,,230,230,,230,230,,,,,,',
',,,,,,,,,,,,,,,230,,,230,,,230,,,230,,,,,,230,,,,,,,,230,,,,,230,230',
'230,230,230,230,,,,230,230,,,,231,231,231,230,231,,230,,231,231,,230',
'230,231,,231,231,231,231,231,231,231,,,,,,231,231,231,231,231,231,231',
',,231,,,,,,,231,,,231,231,,231,231,231,231,231,,231,231,231,,231,231',
',231,231,,,,,,,,,,,,,,,,,,,,,,231,,,231,,,231,,,231,,,,,,231,,,,,,,',
'231,,,,,231,231,231,231,231,231,,,,231,231,,,,232,232,232,231,232,,231',
',232,232,,231,231,232,,232,232,232,232,232,232,232,,,,,,232,232,232',
'232,232,232,232,,,232,,,,,,,232,,,232,232,,232,232,232,232,232,,232',
'232,232,,232,232,,232,232,,,,,,,,,,,,,,,,,,,,,,232,,,232,,,232,,,232',
',,,,,232,,,,,,,,232,,,,,232,232,232,232,232,232,,,,232,232,,,,233,233',
'233,232,233,,232,,233,233,,232,232,233,,233,233,233,233,233,233,233',
',,,,,233,233,233,233,233,233,233,,,233,,,,,,,233,,,233,233,,233,233',
'233,233,233,,233,233,233,,233,233,,233,233,,,,,,,,,,,,,,,,,,,,,,233',
',,233,,,233,,,233,,,,,,233,,,,,,,,233,,,,,233,233,233,233,233,233,,',
',233,233,,,,234,234,234,233,234,,233,,234,234,,233,233,234,,234,234',
'234,234,234,234,234,,,,,,234,234,234,234,234,234,234,,,234,,,,,,,234',
',,234,234,,234,234,234,234,234,,234,234,234,,234,234,,234,234,,,,,,',
',,,,,,,,,,,,,,,234,,,234,,,234,,,234,,,,,,234,,,,,,,,234,,,,,234,234',
'234,234,234,234,,,,234,234,,,,235,235,235,234,235,,234,,235,235,,234',
'234,235,,235,235,235,235,235,235,235,,,,,,235,235,235,235,235,235,235',
',,235,,,,,,,235,,,235,235,,235,235,235,235,235,,235,235,235,,235,235',
',235,235,,,,,,,,,,,,,,,,,,,,,,235,,,235,,,235,,,235,,,,,,235,,,,,,,',
'235,,,,,235,235,235,235,235,235,,,,235,235,,,,236,236,236,235,236,,235',
',236,236,,235,235,236,,236,236,236,236,236,236,236,,,,,,236,236,236',
'236,236,236,236,,,236,,,,,,,236,,,236,236,,236,236,236,236,236,,236',
'236,236,,236,236,,236,236,,,,,,,,,,,,,,,,,,,,,,236,,,236,,,236,,,236',
',,,,,236,,,,,,,,236,,,,,236,236,236,236,236,236,,,,236,236,,,,237,237',
'237,236,237,,236,,237,237,,236,236,237,,237,237,237,237,237,237,237',
',,,,,237,237,237,237,237,237,237,,,237,,,,,,,237,,,237,237,,237,237',
'237,237,237,,237,237,237,,237,237,,237,237,,,,,,,,,,,,,,,,,,,,,,237',
',,237,,,237,,,237,,,,,,237,,,,,,,,237,,,,,237,237,237,237,237,237,,',
',237,237,,,,238,238,238,237,238,,237,,238,238,,237,237,238,,238,238',
'238,238,238,238,238,,,,,,238,238,238,238,238,238,238,,,238,,,,,,,238',
',,238,238,,238,238,238,238,238,,238,238,238,,238,238,,238,238,,,,,,',
',,,,,,,,,,,,,,,238,,,238,,,238,,,238,,,,,,238,,,,,,,,238,,,,,238,238',
'238,238,238,238,,,,238,238,,,,239,239,239,238,239,,238,,239,239,,238',
'238,239,,239,239,239,239,239,239,239,,,,,,239,239,239,239,239,239,239',
',,239,,,,,,,239,,,239,239,,239,239,239,239,239,,239,239,239,,239,239',
',239,239,,,,,,,,,,,,,,,,,,,,,,239,,,239,,,239,,,239,,,,,,239,,,,,,,',
'239,,,,,239,239,239,239,239,239,,,,239,239,,,,240,240,240,239,240,,239',
',240,240,,239,239,240,,240,240,240,240,240,240,240,,,,,,240,240,240',
'240,240,240,240,,,240,,,,,,,240,,,240,240,,240,240,240,240,240,,240',
'240,240,,240,240,,240,240,,,,,,,,,,,,,,,,,,,,,,240,,,240,,,240,,,240',
',,,,,240,,,,,,,,240,,,,,240,240,240,240,240,240,,,,240,240,,,,241,241',
'241,240,241,,240,,241,241,,240,240,241,,241,241,241,241,241,241,241',
',,,,,241,241,241,241,241,241,241,,,241,,,,,,,241,,,241,241,,241,241',
'241,241,241,,241,241,241,,241,241,,241,241,,,,,,,,,,,,,,,,,,,,,,241',
',,241,,,241,,,241,,,,,,241,,,,,,,,241,,,,,241,241,241,241,241,241,,',
',241,241,,,,242,242,242,241,242,,241,,242,242,,241,241,242,,242,242',
'242,242,242,242,242,,,,,,242,242,242,242,242,242,242,,,242,,,,,,,242',
',,242,242,,242,242,242,242,242,,242,242,242,,242,242,,242,242,,,,,,',
',,,,,,,,,,,,,,,242,,,242,,,242,,,242,,,,,,242,,,,,,,,242,,,,,242,242',
'242,242,242,242,,,,242,242,,,,243,243,243,242,243,,242,,243,243,,242',
'242,243,,243,243,243,243,243,243,243,,,,,,243,243,243,243,243,243,243',
',,243,,,,,,,243,,,243,243,,243,243,243,243,243,,243,243,243,,243,243',
',243,243,,,,,,,,,,,,,,,,,,,,,,243,,,243,,,243,,,243,,,,,,243,,,,,,,',
'243,,,,,243,243,243,243,243,243,,,,243,243,,,,244,244,244,243,244,,243',
',244,244,,243,243,244,,244,244,244,244,244,244,244,,,,,,244,244,244',
'244,244,244,244,,,244,,,,,,,244,,,244,244,,244,244,244,244,244,,244',
'244,244,,244,244,,244,244,,,,,,,,,,,,,,,,,,,,,,244,,,244,,,244,,,244',
',,,,,244,,,,,,,,244,,,,,244,244,244,244,244,244,,,,244,244,,,,245,245',
'245,244,245,,244,,245,245,,244,244,245,,245,245,245,245,245,245,245',
',,,,,245,245,245,245,245,245,245,,,245,,,,,,,245,,,245,245,,245,245',
'245,245,245,,245,245,245,,245,245,,245,245,,,,,,,,,,,,,,,,,,,,,,245',
',,245,,,245,,,245,,,,,,245,,,,,,,,245,,,,,245,245,245,245,245,245,,',
',245,245,,,,686,686,686,245,686,,245,,686,686,,245,245,686,,686,686',
'686,686,686,686,686,,,,,,686,686,686,686,686,686,686,,,686,,,,,,,686',
',,686,686,,686,686,686,686,686,,686,686,686,,686,686,,,,,,,,,,,,,,,',
',,,,,,,,,686,,,686,,,686,,,686,,,,,,,,,,,,,,,,,,,686,686,686,686,686',
'686,,,,686,686,,,,675,675,675,686,675,,686,,675,675,,686,686,675,,675',
'675,675,675,675,675,675,,,,,,675,675,675,675,675,675,675,,,675,,,,,',
',675,,,675,675,,675,675,675,675,675,,675,675,675,,675,675,843,,843,843',
'843,843,843,,,,,,,,,,843,,,,,,,,675,,,675,,,675,,,675,,,,,,843,,,,,',
',,843,843,843,843,,675,675,675,675,675,675,,,,675,675,,,,,,,675,,,675',
',,,,675,675,671,671,671,671,671,,,843,671,671,,,,671,,671,671,671,671',
'671,671,671,,,,,,671,671,671,671,671,671,671,,,671,,,,,,671,671,,671',
'671,671,,671,671,671,671,671,,671,671,671,,671,671,,671,671,,,,,,,,',
',,,,,,,,,,,,,671,,,671,,,671,,,671,,671,,,,671,,,,,,,,671,,,,,671,671',
'671,671,671,671,,,,671,671,,,,254,254,254,671,254,,671,,254,254,,671',
'671,254,,254,254,254,254,254,254,254,,,,,,254,254,254,254,254,254,254',
',,254,,,,,,,254,,,254,254,,254,254,254,254,254,,254,254,254,,254,254',
',254,254,,,,,,,,,,,,,,,,,,,,,,254,,,254,,,254,,,254,,,,,,254,,,,,,,',
'254,,,,,254,254,254,254,254,254,,,,254,254,,,,,,,254,,,254,,,,,254,254',
'670,670,670,670,670,,,,670,670,,,,670,,670,670,670,670,670,670,670,',
',,,,670,670,670,670,670,670,670,,,670,,,,,,670,670,,670,670,670,,670',
'670,670,670,670,,670,670,670,,670,670,,670,670,,,,,,,,,,,,,,,,,,,,,',
'670,,,670,,,670,,,670,,670,,,,670,,,,,,,,670,,,,,670,670,670,670,670',
'670,,,,670,670,,,,256,256,256,670,256,,670,,256,256,,670,670,256,,256',
'256,256,256,256,256,256,,,,,,256,256,256,256,256,256,256,,,256,,,,,',
',256,,,256,256,,256,256,256,256,256,,256,256,256,,256,256,,256,256,',
',,,,,,,,,,,,,,,,,,,,256,,,256,,,256,,,256,,,,,,256,,,,,,,,256,,,,,256',
'256,256,256,256,256,,,,256,256,,,,261,261,261,256,261,,256,,261,261',
',256,256,261,,261,261,261,261,261,261,261,,,,,,261,261,261,261,261,261',
'261,,,261,,,,,,,261,,,261,261,,261,261,261,261,261,,261,261,261,,261',
'261,,261,261,,,,,,,,,,,,,,,,,,,,,,261,,,261,,,261,,,261,,,,,,261,,,',
',,,,261,,,,,261,261,261,261,261,261,,,,261,261,,,,664,664,664,261,664',
',261,,664,664,,261,261,664,,664,664,664,664,664,664,664,,,,,,664,664',
'664,664,664,664,664,,,664,,,,,,,664,,,664,664,,664,664,664,664,664,664',
'664,664,664,,664,664,,664,664,,,,,,,,,,,,,,,,,,,,,,664,,,664,,,664,',
',664,,,,664,,664,,,,,,,,664,,,,,664,664,664,664,664,664,,,,664,664,',
',,663,663,663,664,663,,664,,663,663,,664,664,663,,663,663,663,663,663',
'663,663,,,,,,663,663,663,663,663,663,663,,,663,,,,,,,663,,,663,663,',
'663,663,663,663,663,663,663,663,663,,663,663,,663,663,,,,,,,,,,,,,,',
',,,,,,,663,,,663,,,663,,,663,,663,,663,,663,,,,,,,,663,,,,,663,663,663',
'663,663,663,,,,663,663,,,,,,,663,,,663,,,,,663,663,660,660,660,660,660',
',,,660,660,,,,660,,660,660,660,660,660,660,660,,,,,,660,660,660,660',
'660,660,660,,,660,,,,,,660,660,,660,660,660,,660,660,660,660,660,,660',
'660,660,,660,660,,660,660,,,,,,,,,,,,,,,,,,,,,,660,,,660,,,660,,,660',
',660,,,,660,,,,,,,,660,,,,,660,660,660,660,660,660,,,,660,660,,,,267',
'267,267,660,267,,660,,267,267,,660,660,267,,267,267,267,267,267,267',
'267,,,,,,267,267,267,267,267,267,267,,,267,,,,,,,267,,,267,267,,267',
'267,267,267,267,267,267,267,267,,267,267,,267,267,,,,,,,,,,,,,,,,,,',
',,,267,,,267,,,267,,,267,,267,,267,,267,,,,,,,,267,,,,,267,267,267,267',
'267,267,,,,267,267,,,,268,268,268,267,268,,267,,268,268,,267,267,268',
',268,268,268,268,268,268,268,,,,,,268,268,268,268,268,268,268,,,268',
',,,,,,268,,,268,268,,268,268,268,268,268,268,268,268,268,,268,268,,268',
'268,,,,,,,,,,,,,,,,,,,,,,268,,,268,,,268,,,268,,268,,268,,268,,,,,,',
',268,,,,,268,268,268,268,268,268,,,,268,268,,,,276,276,276,268,276,',
'268,,276,276,,268,268,276,,276,276,276,276,276,276,276,,,,,,276,276',
'276,276,276,276,276,,,276,,,,,,,276,,,276,276,,276,276,276,276,276,276',
'276,276,276,,276,276,,276,276,,,,,,,,,,,,,,,,,,,,,,276,,,276,,276,276',
',,276,,276,,276,,276,,,,,,,,276,,,,,276,276,276,276,276,276,,,,276,276',
',,,653,653,653,276,653,,276,,653,653,,276,276,653,,653,653,653,653,653',
'653,653,,,,,,653,653,653,653,653,653,653,,,653,,,,,,,653,,,653,653,',
'653,653,653,653,653,,653,653,653,,653,653,,653,653,,,,,,,,,,,,,,,,,',
',,,,653,,,653,,,653,,,653,,,,,,653,,,,,,,,653,,,,,653,653,653,653,653',
'653,,,,653,653,,,,,,,653,,,653,,,,,653,653,649,649,649,649,649,,,,649',
'649,,,,649,,649,649,649,649,649,649,649,,,,,,649,649,649,649,649,649',
'649,,,649,,,,,,649,649,,649,649,649,,649,649,649,649,649,,649,649,649',
',649,649,,649,649,,,,,,,,,,,,,,,,,,,,,,649,,,649,,,649,,,649,,649,,',
',649,,,,,,,,649,,,,,649,649,649,649,649,649,,,,649,649,,,,645,645,645',
'649,645,,649,,645,645,,649,649,645,,645,645,645,645,645,645,645,,,,',
',645,645,645,645,645,645,645,,,645,,,,,,,645,,,645,645,,645,645,645',
'645,645,,645,645,645,,645,645,,645,645,,,,,,,,,,,,,,,,,,,,,,645,,,645',
',,645,,,645,,,,,,645,,,,,,,,645,,,,,645,645,645,645,645,645,,,,645,645',
',,,,,,645,,,645,,,,,645,645,280,280,280,280,280,,,,280,280,,,,280,,280',
'280,280,280,280,280,280,,,,,,280,280,280,280,280,280,280,,,280,,,,,',
'280,280,,280,280,280,,280,280,280,280,280,,280,280,280,,280,280,,280',
'280,,,,,,,,,,,,,,,,,,,,,,280,,,280,,,280,,,280,,280,,,,280,,,,,,,,280',
',,,,280,280,280,280,280,280,,,,280,280,,,,504,504,504,280,504,,280,',
'504,504,,280,280,504,,504,504,504,504,504,504,504,,,,,,504,504,504,504',
'504,504,504,,,504,,,,,,,504,,,504,504,,504,504,504,504,504,,504,504',
'504,,504,504,,504,504,,,,,,,,,,,,,,,,,,,,,,504,,,504,,504,504,,,504',
',,,504,,504,,,,,,,,504,,,,,504,504,504,504,504,504,,,,504,504,,,,,,',
'504,,,504,,,,,504,504,510,510,510,510,510,,,,510,510,,,,510,,510,510',
'510,510,510,510,510,,,,,,510,510,510,510,510,510,510,,,510,,,,,,510',
'510,,510,510,510,,510,510,510,510,510,,510,510,510,,510,510,,510,510',
',,,,,,,,,,,,,,,,,,,,,510,,,510,,,510,,,510,,510,,,,510,,,,,,,,510,,',
',,510,510,510,510,510,510,,,,510,510,,,,,,510,510,,,510,,,,,510,510',
'516,516,516,,516,,,,516,516,,,,516,,516,516,516,516,516,516,516,,,,',
',516,516,516,516,516,516,516,,,516,,,,,,,516,,,516,516,,516,516,516',
'516,516,,516,516,516,,516,516,,,,,,,,,,,,,,,,,,,,,,,,,516,,,516,,,516',
',,516,,,,,,,,,,,,,,,,,,,516,516,516,516,516,516,,,,516,516,,,,284,284',
'284,516,284,,516,,284,284,,516,516,284,,284,284,284,284,284,284,284',
',,,,,284,284,284,284,284,284,284,,,284,,,,,,,284,,,284,284,,284,284',
'284,284,284,,284,284,284,,284,284,597,,597,597,597,597,597,,,,,,,,,',
'597,,,,,,,,284,,,284,,,284,,,284,,,,,,597,597,,,,,,,597,597,597,597',
',284,284,284,284,284,284,,,,284,284,,,,284,,,284,,,284,,,,,284,284,285',
'285,285,285,285,,,597,285,285,,,,285,,285,285,285,285,285,285,285,,',
',,,285,285,285,285,285,285,285,,,285,,,,,,285,285,,285,285,285,,285',
'285,285,285,285,,285,285,285,,285,285,,285,285,,,,,,,,,,,,,,,,,,,,,',
'285,,,285,,,285,,,285,,285,,,,285,,,,,,,,285,,,,,285,285,285,285,285',
'285,,,,285,285,,,,635,635,635,285,635,,285,,635,635,,285,285,635,,635',
'635,635,635,635,635,635,,,,,,635,635,635,635,635,635,635,,,635,,,,,',
',635,,,635,635,,635,635,635,635,635,,635,635,635,,635,635,,635,635,',
',,,,,,,,,,,,,,,,,,,,635,,,635,,,635,,,635,,,,,,635,,,,,,,,635,,,,,635',
'635,635,635,635,635,,,,635,635,,,,632,632,632,635,632,,635,,632,632',
',635,635,632,,632,632,632,632,632,632,632,,,,,,632,632,632,632,632,632',
'632,,,632,,,,,,,632,,,632,632,,632,632,632,632,632,,632,632,632,,632',
'632,,632,632,,,,,,,,,,,,,,,,,,,,,,632,,,632,,,632,,,632,,,,,,632,,,',
',,,,632,,,,,632,632,632,632,632,632,,,,632,632,,,,627,627,627,632,627',
',632,,627,627,,632,632,627,,627,627,627,627,627,627,627,,,,,,627,627',
'627,627,627,627,627,,,627,,,,,,,627,,,627,627,,627,627,627,627,627,',
'627,627,627,,627,627,,627,627,,,,,,,,,,,,,,,,,,,,,,627,,,627,,,627,',
',627,,,,,,627,,,,,,,,627,,,,,627,627,627,627,627,627,,,,627,627,,,,626',
'626,626,627,626,,627,,626,626,,627,627,626,,626,626,626,626,626,626',
'626,,,,,,626,626,626,626,626,626,626,,,626,,,,,,,626,,,626,626,,626',
'626,626,626,626,,626,626,626,,626,626,,626,626,,,,,,,,,,,,,,,,,,,,,',
'626,,,626,,,626,,,626,,,,,,626,,,,,,,,626,,,,,626,626,626,626,626,626',
',,,626,626,,,,624,624,624,626,624,,626,,624,624,,626,626,624,,624,624',
'624,624,624,624,624,,,,,,624,624,624,624,624,624,624,,,624,,,,,,,624',
',,624,624,,624,624,624,624,624,,624,624,624,,624,624,,624,624,,,,,,',
',,,,,,,,,,,,,,,624,,,624,,,624,,,624,,624,,,,624,,,,,,,,624,,,,,624',
'624,624,624,624,624,,,,624,624,,,,518,518,518,624,518,,624,,518,518',
',624,624,518,,518,518,518,518,518,518,518,,,,,,518,518,518,518,518,518',
'518,,,518,,,,,,,518,,,518,518,,518,518,518,518,518,518,518,518,518,',
'518,518,,518,518,,,,,,,,,,,,,,,,,,,,,,518,,,518,,,518,,,518,,518,,,',
'518,,,,,,,,518,,,,,518,518,518,518,518,518,,,,518,518,,,,595,595,595',
'518,595,,518,,595,595,,518,518,595,,595,595,595,595,595,595,595,,,,',
',595,595,595,595,595,595,595,,,595,,,,,,,595,,,595,595,,595,595,595',
'595,595,,595,595,595,,595,595,,595,595,,,,,,,,,,,,,,,,,,,,,,595,,,595',
',,595,,,595,,,,,,595,,,,,,,,595,,,,,595,595,595,595,595,595,,,,595,595',
',,,593,593,593,595,593,,595,,593,593,,595,595,593,,593,593,593,593,593',
'593,593,,,,,,593,593,593,593,593,593,593,,,593,,,,,,,593,,,593,593,',
'593,593,593,593,593,,593,593,593,,593,593,,593,593,,,,,,,,,,,,,,,,,',
',,,,593,,,593,,,593,,,593,,,,,,593,,,,,,,,593,,,,,593,593,593,593,593',
'593,,,,593,593,,,,589,589,589,593,589,,593,,589,589,,593,593,589,,589',
'589,589,589,589,589,589,,,,,,589,589,589,589,589,589,589,,,589,,,,,',
',589,,,589,589,,589,589,589,589,589,589,589,589,589,,589,589,,589,589',
',,,,,,,,,,,,,,,,,,,,,589,,,589,,,589,,,589,,589,,,,589,,,,,,,,589,,',
',,589,589,589,589,589,589,,,,589,589,,,,297,297,297,589,297,,589,,297',
'297,,589,589,297,,297,297,297,297,297,297,297,,,,,,297,297,297,297,297',
'297,297,,,297,,,,,,,297,,,297,297,,297,297,297,297,297,,297,297,297',
',297,297,,,,,,,,,,,,,,,,,,,,,,,,,297,,,297,,,297,,,297,,,,,,,,,,,,,',
',,,,,297,297,297,297,297,297,,,,297,297,,,,581,581,581,297,581,,297',
',581,581,,297,297,581,,581,581,581,581,581,581,581,,,,,,581,581,581',
'581,581,581,581,,,581,,,,,,,581,,,581,581,,581,581,581,581,581,581,581',
'581,581,,581,581,,581,581,,,,,,,,,,,,,,,,,,,,,,581,,,581,,,581,,,581',
',581,,,,581,,,,,,,,581,,,,,581,581,581,581,581,581,,,,581,581,,,,,,',
'581,,,581,,,,,581,581,579,579,579,579,579,,,,579,579,,,,579,,579,579',
'579,579,579,579,579,,,,,,579,579,579,579,579,579,579,,,579,,,,,,579',
'579,,579,579,579,,579,579,579,579,579,,579,579,579,,579,579,,579,579',
',,,,,,,,,,,,,,,,,,,,,579,,,579,,,579,,,579,,579,,,,579,,,,,,,,579,,',
',,579,579,579,579,579,579,,,,579,579,,,,,,,579,,,579,,,,,579,579,574',
'574,574,574,574,,,,574,574,,,,574,,574,574,574,574,574,574,574,,,,,',
'574,574,574,574,574,574,574,,,574,,,,,,574,574,,574,574,574,,574,574',
'574,574,574,,574,574,574,,574,574,,574,574,,,,,,,,,,,,,,,,,,,,,,574',
',,574,,,574,,,574,,574,,,,574,,,,,,,,574,,,,,574,574,574,574,574,574',
',,,574,574,,,,,,,574,,,574,,,,,574,574,570,570,570,570,570,,,,570,570',
',,,570,,570,570,570,570,570,570,570,,,,,,570,570,570,570,570,570,570',
',,570,,,,,,570,570,,570,570,570,,570,570,570,570,570,,570,570,570,,570',
'570,,570,570,,,,,,,,,,,,,,,,,,,,,,570,,,570,,,570,,,570,,570,,,,570',
',,,,,,,570,,,,,570,570,570,570,570,570,,,,570,570,,,,556,556,556,570',
'556,,570,,556,556,,570,570,556,,556,556,556,556,556,556,556,,,,,,556',
'556,556,556,556,556,556,,,556,,,,,,,556,,,556,556,,556,556,556,556,556',
',556,556,556,,556,556,,,,,,,,,,,,,,,,,,,,,,,,,556,,,556,,,556,,,556',
',,,,,,,,,,,,,,,,,,556,556,556,556,556,556,,,,556,556,,,,306,306,306',
'556,306,,556,,306,306,,556,556,306,,306,306,306,306,306,306,306,,,,',
',306,306,306,306,306,306,306,,,306,,,,,,,306,,,306,306,,306,306,306',
'306,306,,306,306,306,,306,306,,306,306,,,,,,,,,,,,,,,,,,,,,,306,,,306',
'306,,306,,,306,,,,,,306,,,,,,,,306,,,,,306,306,306,306,306,306,,,,306',
'306,,,,,,,306,,,306,,,,,306,306,308,308,308,308,308,,,,308,308,,,,308',
',308,308,308,308,308,308,308,,,,,,308,308,308,308,308,308,308,,,308',
',,,,,308,308,,308,308,308,,308,308,308,308,308,,308,308,308,,308,308',
',308,308,,,,,,,,,,,,,,,,,,,,,,308,,,308,,,308,,,308,,308,,,,308,,,,',
',,,308,,,,,308,308,308,308,308,308,,,,308,308,,,,,,,308,,,308,,,,,308',
'308,550,550,550,550,550,,,,550,550,,,,550,,550,550,550,550,550,550,550',
',,,,,550,550,550,550,550,550,550,,,550,,,,,,550,550,,550,550,550,,550',
'550,550,550,550,,550,550,550,,550,550,,550,550,,,,,,,,,,,,,,,,,,,,,',
'550,,,550,,,550,,,550,,550,,,,550,,,,,,,,550,,,,,550,550,550,550,550',
'550,,,,550,550,,,,,,,550,,,550,,,,,550,550,549,549,549,549,549,,,,549',
'549,,,,549,,549,549,549,549,549,549,549,,,,,,549,549,549,549,549,549',
'549,,,549,,,,,,549,549,,549,549,549,,549,549,549,549,549,,549,549,549',
',549,549,,549,549,,,,,,,,,,,,,,,,,,,,,,549,,,549,,,549,,,549,,549,,',
',549,,,,,,,,549,,,,,549,549,549,549,549,549,,,,549,549,,,,544,544,544',
'549,544,,549,,544,544,,549,549,544,,544,544,544,544,544,544,544,,,,',
',544,544,544,544,544,544,544,,,544,,,,,,,544,,,544,544,,544,544,544',
'544,544,544,544,544,544,,544,544,,544,544,,,,,,,,,,,,,,,,,,,,,,544,',
',544,,,544,,,544,,,,,,544,,,,,,,,544,,,,,544,544,544,544,544,544,,,',
'544,544,,,,541,541,541,544,541,,544,,541,541,,544,544,541,,541,541,541',
'541,541,541,541,,,,,,541,541,541,541,541,541,541,,,541,,,,,,,541,,,541',
'541,,541,541,541,541,541,541,541,541,541,,541,541,,541,541,,,,,,,,,',
',,,,,,,,,,,,541,,,541,,,541,,,541,,541,,,,541,,,,,,,,541,,,,,541,541',
'541,541,541,541,,,,541,541,,,,535,535,535,541,535,,541,,535,535,,541',
'541,535,,535,535,535,535,535,535,535,,,,,,535,535,535,535,535,535,535',
',,535,,,,,,,535,,,535,535,,535,535,535,535,535,,535,535,535,,535,535',
',535,535,,,,,,,,,,,,,,,,,,,,,,535,,,535,,,535,,,535,,,,,,535,,,,,,,',
'535,,,,,535,535,535,535,535,535,,,,535,535,,,,531,531,531,535,531,,535',
',531,531,,535,535,531,,531,531,531,531,531,531,531,,,,,,531,531,531',
'531,531,531,531,,,531,,,,,,,531,,,531,531,,531,531,531,531,531,,531',
'531,531,,531,531,,531,531,,,,,,,,,,,,,,,,,,,,,,531,,,531,,,531,,,531',
',,,,,531,,,,,,,,531,,,,,531,531,531,531,531,531,,,,531,531,,,,530,530',
'530,531,530,,531,,530,530,,531,531,530,,530,530,530,530,530,530,530',
',,,,,530,530,530,530,530,530,530,,,530,,,,,,,530,,,530,530,,530,530',
'530,530,530,,530,530,530,,530,530,,530,530,,,,,,,,,,,,,,,,,,,,,,530',
',,530,,,530,,,530,,,,,,530,,,,,,,,530,,,,,530,530,530,530,530,530,,',
',530,530,,,,529,529,529,530,529,,530,,529,529,,530,530,529,,529,529',
'529,529,529,529,529,,,,,,529,529,529,529,529,529,529,,,529,,,,,,,529',
',,529,529,,529,529,529,529,529,,529,529,529,,529,529,,529,529,,,,,,',
',,,,,,,,,,,,,,,529,,,529,,,529,,,529,,,,,,529,,,,,,,,529,,,,,529,529',
'529,529,529,529,,,,529,529,,,,521,521,521,529,521,,529,,521,521,,529',
'529,521,,521,521,521,521,521,521,521,,,,,,521,521,521,521,521,521,521',
',,521,,,,,,,521,,,521,521,,521,521,521,521,521,521,521,521,521,,521',
'521,,521,521,,,,,,,,,,,,,,,,,,,,,,521,,,521,,,521,,,521,,521,,,,521',
',,,,,,,521,,,,,521,521,521,521,521,521,,,,521,521,,,,622,622,622,521',
'622,,521,,622,622,,521,521,622,,622,622,622,622,622,622,622,,,,,,622',
'622,622,622,622,622,622,,,622,,,,,,,622,,,622,622,,622,622,622,622,622',
',622,622,622,,622,622,,622,622,,,,,,,,,,,,,,,,,,,,,,622,,,622,,,622',
',,622,,,,,,622,,,,,,,,622,,,,434,622,622,622,622,622,622,434,434,434',
'622,622,,434,434,,434,,622,,,622,,,,434,622,622,,,,,,,,,434,434,,434',
'434,434,434,434,,,,,,,,,,,,,,,,,,,,,,,,434,434,434,434,434,434,434,434',
'434,434,434,434,434,434,434,,,434,434,434,,434,,,,434,,,,,,,434,,434',
',434,434,434,434,434,434,434,,434,434,434,,,,,,,,,,,,,434,434,,434,',
'434,640,,434,,434,,434,640,640,640,,,640,640,640,,640,,,,,,,,,640,640',
'640,,,,,,,,,640,640,,640,640,640,640,640,,,,,,,,,,,,,,,,,,,,,,,,640',
'640,640,640,640,640,640,640,640,640,640,640,640,640,640,,,640,640,640',
',640,640,,,640,,,640,,640,,640,,640,,640,640,640,640,640,640,640,,640',
'640,640,,,,,,,,,,,,,640,640,640,640,,640,436,,640,,640,,640,436,436',
'436,,,,436,436,,436,,,,,,,,,,,,,,,,,,,,436,436,,436,436,436,436,436',
',,,,,,,,,,,,,,,,,,,,,,,436,436,436,436,436,436,436,436,436,436,436,436',
'436,436,436,,,436,436,436,,436,,,,436,,,,,,,436,,436,,436,436,436,436',
'436,436,436,,436,,436,,,,,,,,,,,,,436,436,,436,,436,641,,436,,436,,436',
'641,641,641,,,641,641,641,,641,,,,,,,,,,641,641,,,,,,,,,641,641,,641',
'641,641,641,641,,,,,,,,,,,,,,,,,,,,,,,,641,641,641,641,641,641,641,641',
'641,641,641,641,641,641,641,,,641,641,641,,641,641,,,641,,,641,,641',
',641,,641,,641,641,641,641,641,641,641,,641,,641,,,,,,,,,,,,,641,641',
'641,641,,641,28,,641,,641,,641,28,28,28,,,28,28,28,,28,,,,,,,,,,28,28',
',,,,,,,,28,28,,28,28,28,28,28,,,,,,,,,,,,,,,,,,,,,,,,28,28,28,28,28',
'28,28,28,28,28,28,28,28,28,28,,,28,28,28,,,28,,28,28,,,28,,28,,28,,28',
',28,28,28,28,28,28,28,,28,,28,,,,,,,,,,,,,28,28,28,28,50,28,,,28,,28',
'50,50,50,,,50,50,50,,50,,,,,,,,,,50,50,50,,,,,,,,50,50,,50,50,50,50',
'50,,,,,,,,,,,,,,,,,,,,,,,,50,50,50,50,50,50,50,50,50,50,50,50,50,50',
'50,,,50,50,50,,,50,,,50,,,50,,50,,50,,50,,50,50,50,50,50,50,50,,50,',
'50,,,,,,,,,,,,,50,50,50,50,494,50,,50,50,,50,494,494,494,,,494,494,494',
',494,,,,,,,,,,494,,902,,902,902,902,902,902,,494,494,,494,494,494,494',
'494,902,,,,,,,,,,,,,492,,,,,,,492,492,492,902,902,492,492,492,,492,',
'902,902,902,902,494,,,,492,,,494,,,,,494,494,492,492,,492,492,492,492',
'492,,,,,,,,,,,,,494,902,,,,,,,,,,,,494,,494,,,494,,,,,492,,,,,,,492',
',,,,492,492,,,,,,,,,,,,,,,,,,,,,492,,,,,,,,,,,,,492,,492,,,492,7,7,7',
'7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,,,,7,7,7,7,7,7,7,7,7,7,7,7',
'7,7,7,7,7,7,7,7,7,,7,7,7,,7,,,,,,,,,7,7,,7,7,7,7,7,7,7,,,7,7,,,,,7,7',
'7,7,,,,,,,,,,,,,7,7,,7,7,7,7,7,7,7,7,7,7,7,,,7,7,,,,,,,,,,7,414,414',
'414,414,414,414,414,414,414,414,414,414,414,414,414,414,414,414,414',
'414,414,414,414,414,,,,414,414,414,414,414,414,414,414,414,414,414,414',
'414,414,414,414,414,414,414,414,414,,414,414,,,414,,,,,,,,,414,414,',
'414,414,414,414,414,414,414,,,414,414,,,,,414,414,414,414,,,,,,,,,,',
',,414,414,,414,414,414,414,414,414,414,414,414,414,414,,,414,414,,,',
',,,,,,414,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,,,,8,8,8,8',
'8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,,8,8,,,8,,,,,,,,,8,8,,8,8,8,8,8,8',
'8,,,8,8,,,,,8,8,8,8,,,,,,,,,,,,,8,8,,8,8,8,8,8,8,8,8,8,8,8,,,8,8,,,',
',,,,,,8,410,410,410,410,410,410,410,410,410,410,410,410,410,410,410',
'410,410,410,410,410,410,410,410,410,,,,410,410,410,410,410,410,410,410',
'410,410,410,410,410,410,410,410,410,410,410,410,410,,410,410,,,410,',
',,,,,,,410,410,,410,410,410,410,410,410,410,,,410,410,,,,,410,410,410',
'410,,,,,,,,,,,,,410,410,,410,410,410,410,410,410,410,410,410,410,410',
',,410,410,,,,,,,,,,410,192,192,192,192,192,192,192,192,192,192,192,192',
'192,192,192,192,192,192,192,192,192,192,192,192,,,,192,192,192,192,192',
'192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,,192',
'192,192,192,192,,192,,,,,,,192,192,,192,192,192,192,192,192,192,,,192',
'192,,,,,192,192,192,192,,,,,,,,,,,,,192,192,,192,192,192,192,192,192',
'192,192,192,192,192,,,192,79,79,79,79,79,79,79,79,79,79,79,79,79,79',
'79,79,79,79,79,79,79,79,79,79,,,,79,79,79,79,79,79,79,79,79,79,79,79',
'79,79,79,79,79,79,79,79,79,,79,79,79,79,79,,79,,,,,,,79,79,,79,79,79',
'79,79,79,79,,,79,79,,,,,79,79,79,79,,,,,,,,,,,,,79,79,,79,79,79,79,79',
'79,79,79,79,79,79,,,79,757,757,757,757,757,757,757,757,757,757,757,757',
'757,757,757,757,757,757,757,757,757,757,757,757,,,,757,757,757,757,757',
'757,757,757,757,757,757,757,757,757,757,757,757,757,757,757,757,,757',
'757,,,757,,,,,,,,,757,757,,757,757,757,757,757,757,757,,,757,757,,,',
',757,757,757,757,,,,,,,,,,,,,757,757,,757,757,757,757,757,757,757,757',
'757,757,757,,,757,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65',
'65,65,65,65,65,65,65,,,,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65',
'65,65,65,65,65,65,,65,65,65,65,65,,65,,,,,,,65,65,,65,65,65,65,65,65',
'65,,,65,65,,,,,65,65,65,65,,,,,,65,,,,,,,65,65,,65,65,65,65,65,65,65',
'65,65,65,65,449,449,65,,449,,,,,,,,,449,449,,449,449,449,449,449,449',
'449,,,449,449,,,,,449,449,449,449,,,,,,,,,,,,,449,449,,449,449,449,449',
'449,449,449,449,449,449,449,520,520,449,,520,,,,,,,,,520,520,,520,520',
'520,520,520,520,520,,,520,520,,,,,520,520,520,520,,,,,,,,,,,,,520,520',
',520,520,520,520,520,520,520,520,520,520,520,519,519,520,,519,,,,,,',
',,519,519,,519,519,519,519,519,519,519,,,519,519,,,,,519,519,519,519',
',,,,,519,,,,,,,519,519,,519,519,519,519,519,519,519,519,519,519,519',
'264,264,519,,264,,,,,,,,,264,264,,264,264,264,264,264,264,264,,,264',
'264,,,,,264,264,264,264,,,,,,,,,,,,,264,264,,264,264,264,264,264,264',
'264,264,264,264,264,265,265,264,,265,,,,,,,,,265,265,,265,265,265,265',
'265,265,265,,,265,265,,,,,265,265,265,265,,,,,,,,,,,,,265,265,,265,265',
'265,265,265,265,265,265,265,265,265,201,201,265,,201,,,,,,,,,201,201',
',201,201,201,201,201,201,201,,,201,201,,,,,201,201,201,201,,,,,,,,,',
',,,201,201,,201,201,201,201,201,201,201,201,201,201,201,810,810,201',
',810,,,,,,,,,810,810,,810,810,810,810,810,810,810,,,810,810,,,,,810',
'810,810,810,,,,,,,,,,,,,810,810,,810,810,810,810,810,810,810,810,810',
'810,810,522,522,810,,522,,,,,,,,,522,522,,522,522,522,522,522,522,522',
',,522,522,,,,,522,522,522,522,,,,,,,,,,,,,522,522,,522,522,522,522,522',
'522,522,522,522,522,522,931,931,522,,931,,,,,,,,,931,931,,931,931,931',
'931,931,931,931,,,931,931,,,,,931,931,931,931,,,,,,,,,,,,,931,931,,931',
'931,931,931,931,931,931,931,931,931,931,448,448,931,,448,,,,,,,,,448',
'448,,448,448,448,448,448,448,448,,,448,448,,,,,448,448,448,448,,,,,',
'448,,,,,,,448,448,,448,448,448,448,448,448,448,448,448,448,448,930,930',
'448,,930,,,,,,,,,930,930,,930,930,930,930,930,930,930,,,930,930,,,,',
'930,930,930,930,,,,,,930,,,,,,,930,930,,930,930,930,930,930,930,930',
'930,930,930,930,582,582,930,,582,,,,,,,,,582,582,,582,582,582,582,582',
'582,582,,,582,582,,,,,582,582,582,582,,,,,,582,,,,,,,582,582,,582,582',
'582,582,582,582,582,582,582,582,582,200,200,582,,200,,,,,,,,,200,200',
',200,200,200,200,200,200,200,,,200,200,,,,,200,200,200,200,,,,,,200',
',,,,,,200,200,,200,200,200,200,200,200,200,200,200,200,200,203,203,200',
',203,,,,,,,,,203,203,,203,203,203,203,203,203,203,,,203,203,,,,,203',
'203,203,203,,,,,,,,,,,,,203,203,,203,203,203,203,203,203,203,203,203',
'203,203,583,583,203,,583,,,,,,,,,583,583,,583,583,583,583,583,583,583',
',,583,583,,,,,583,583,583,583,,,,,,,,,,,,,583,583,,583,583,583,583,583',
'583,583,583,583,583,583,590,590,583,,590,,,,,,,,,590,590,,590,590,590',
'590,590,590,590,,,590,590,,,,,590,590,590,590,,,,,,590,,,,,,,590,590',
',590,590,590,590,590,590,590,590,590,590,590,532,532,590,,532,,,,,,',
',,532,532,,532,532,532,532,532,532,532,,,532,532,,,,,532,532,532,532',
',,,,,532,,,,,,,532,532,,532,532,532,532,532,532,532,532,532,532,532',
'533,533,532,,533,,,,,,,,,533,533,,533,533,533,533,533,533,533,,,533',
'533,,,,,533,533,533,533,,,,,,,,,,,,,533,533,,533,533,533,533,533,533',
'533,533,533,533,533,588,588,533,,588,,,,,,,,,588,588,,588,588,588,588',
'588,588,588,,,588,588,,,,,588,588,588,588,,,,,,,,,,,,,588,588,,588,588',
'588,588,588,588,588,588,588,588,588,,,588' ]
        racc_action_check = arr = ::Array.new(24378, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_action_pointer = [
    -2,  1276,   nil,   416,   nil,   872,  1155, 22269, 22517,  1133,
  1102,  1079,  1116,   506,   668,   812,   nil,  1815,  1942,  1688,
  1143,   nil,  2336,  2463,  2590,   367,   125,  2997, 21822,   nil,
  3264,  3391,  3518,   nil,  1016,   460,   -33,   917,  4166,  4293,
  4420,   988,   541,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
 21952,   nil,  4941,  5068,  5195,   -15,  3924,  5576,  5703,   nil,
   nil,  5830,  5970,  6097,   nil, 23104,   nil,   nil,   nil,   nil,
   nil,   -58,   nil,   nil,   nil,   nil,   nil,   930,   920, 22878,
   nil,   nil,   nil,   361,  7025,   nil,   nil,  7152,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   950,   nil,  7419,
   nil,   nil,   nil,  7559,  7686,  7813,  7940,  8080,  8220,   nil,
   663,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil, 22765,   759,   nil,  8741,  8868,  8995,  9122,  9249,
 23897, 23470,  9630, 23958,  9897, 10024, 10151,   nil,   887,   100,
   641,   287,   494,   481, 11092, 11219,   nil,   nil, 11346,   289,
 11600, 11727, 11854, 11981, 12108, 12235, 12362, 12489, 12616, 12743,
 12870, 12997, 13124, 13251, 13378, 13505, 13632, 13759, 13886, 14013,
 14140, 14267, 14394, 14521, 14648, 14775,   nil,   nil,   nil,  2209,
   nil,   -47,    20,   nil, 15296,    76, 15563,   nil,   nil,   nil,
   nil, 15690,   nil,   nil, 23348, 23409,   298, 16211, 16338,   nil,
   nil,   nil,   nil,   nil,   nil,   nil, 16465,   356,   618,   458,
 16999,   508,   526,   499, 17533, 17673,   329,   848,   628,   223,
   602,   589,    13,   nil,   654,   725,   nil, 18943,   nil,   795,
   729,   753,   594,   nil,   793,   nil, 19744,   nil, 19884,    42,
   nil,   760,   151,   135,   833,   874,   106,   920,   nil,   nil,
   -21,  5982,   nil,   nil,   nil,   912,   939,   nil,   966,   971,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,  2894,   nil,   nil,
   nil,  1054,   nil,   nil,  1055,   933,    97,    91,  3785,  3124,
   333,   191,  1019,    40,   795,  1125,    43,  1157,   nil,   nil,
   760,  1136,   nil,   467,   nil,    64,   nil,   nil,   125,    55,
     7,   271,   406,   509,   436,   590,   -45,   nil,   368,   nil,
  6631,   nil,   411,   nil,   379,   nil,   328,  1152,    30,   nil,
  1145,   -46,   nil,   173,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,  1133,
 22641,   nil,   nil,   nil, 22393,  1130,   nil,   nil,  1294,   nil,
   252,  1113,   nil,  1085,   nil,   nil,  2463,  1098,   278,   541,
   379,   nil,   nil,   nil, 21294,  1099, 21558,   nil,   506,   633,
  1083,    71,  1077,   nil,   nil,   887,   nil,   nil, 23714, 23165,
   760,   -49,   887,  1561,  1688,   -11,   nil,  5068,  4687,  1181,
  1133,  1081,  1069,  1048,  1041,  5195,  5322,  3392,  2997,  3785,
  3264,  3124,  4560,  4941,  3658,  4814,  4039,  4166,  1014,  2972,
  4293,  4420,   633,   -35,   nil,  4039,   nil,  4814,   nil,  6224,
   nil,   nil, 22139,   nil, 22082,   193,   nil,   973,   nil,   nil,
   968,   967,   nil,   nil, 17126,   256,   203,  1002,   nil,   nil,
 17266,   982,   935,   nil,   nil,   932, 17406,   947, 18435, 23287,
 23226, 21053, 23592,   323,   939,   nil,   nil,   897,   nil, 20926,
 20799, 20672, 24141, 24202,  1815, 20545,   916,   894,   807,   nil,
   nil, 20418,   nil,   nil, 20291,   nil,   nil,   nil,   nil, 20164,
 20024,   790,   nil,   991,   nil,   nil, 19617,  6109,   nil,   875,
   nil,   nil,   762,   nil,  2856,   nil,   723,  1000,   nil,   nil,
 19490,   814,   nil,   nil, 19350,   329,   360,   794,   794, 19210,
   nil, 19070, 23836, 24019,    52,   nil,   668,   nil, 24263, 18816,
 24080,   nil,   nil, 18689,   337, 18562,   nil, 17545,   nil,   nil,
   nil,    35,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   -23,   nil,   nil,   nil,   595,   nil,   nil,   nil,
   nil,   nil, 21180,   570, 18308,   291, 18181, 18054,   577,   nil,
   nil,   nil, 17927,   537,   nil, 17800,    63,   nil,   268,   211,
 21426, 21690,   499,   506,   nil, 16859,   nil,  3403,   nil, 16732,
   376,   nil,   385, 16592,   nil,   nil,   nil,   nil,   nil,   nil,
 16084,   nil,   268, 15944, 15817,  1154,   190,   nil,   nil,   121,
 15436, 15169,   nil,  1279,   230, 15029,   -75,   nil,  1028,   196,
   206,    11,   313,   327,   101,   101, 14902,  2590,   265,   273,
   216,   360, 11473,   nil,   nil,   150,   290,   417,   nil,   nil,
   307,   nil,   319,   633,   421,   355,   361,   nil,   nil,   401,
  2885,   nil,   829,   nil,   538,   nil,   nil,   nil,   nil,   nil,
   547,   nil,   557, 10952,   477,    56,    37,   102,    46, 10825,
   922,   nil,   554,   554, 10698,   232,   nil,   -25, 10558, 10418,
  3530,   387,   nil,   nil,   676,   nil, 10278,   nil,   626,   630,
   nil,   643,   647,   655,   nil,   650,   nil, 22991,   709,  1068,
  9770,   nil,   nil,   nil,  2730,   694,  9503,  9376,   nil,  2336,
   nil,  2082,   nil,   nil,  1561,   nil,  1942,  8601,  8474,  8347,
   -65,  1434,   nil,   821,   928,   nil,   nil,   830,   nil,   818,
  7279,   nil,   840,   972,   856,   235,   nil,   nil,   nil,   991,
   nil,  6898,   881,   926,   nil,   nil,   nil,   nil,   nil,   nil,
 23531,   nil,   987,   nil,   nil,   nil,   nil,  1420,  1031,   nil,
  6758,  1268,  6504,  6364,   nil,   nil,   192,   -18,   352,   nil,
  1071,   nil,   nil,  1073,  1074,   958,   nil,   nil,   nil,   -32,
   nil,   nil,   430, 15041,   nil,  1096,   nil,   406,   nil,  5449,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   989,   974,   nil,
   760,  5322,   nil,   nil,   nil,  4687,   982,   nil,   nil,   nil,
  4560,   nil,   nil,   108,  3912,   nil,  1037,  1006,   nil,   nil,
    72,   nil,  1128,  1135,  3658,  2870,   nil,   nil,  2730,   nil,
   nil,  1059,   nil,  1024,   nil,   nil,  1032,  1033,  1037,  1029,
   nil,   nil, 22059,   nil,   nil,  2209,   nil,  2082,    36,   721,
  1127,   120,   nil,   nil,  1434,   nil,   nil,   nil,   322,  1294,
  1201,   nil,   nil,  1042,   nil,   nil,   nil,  1154,  1213,  1014,
 23775, 23653,    -7,   278,   nil,   nil,   nil,  1240,   nil,  1122,
  1245,   nil,  1171,    80,    98,   198,   202,   nil,   nil,   nil,
   nil,   215 ]

racc_action_default = [
    -3,  -551,    -1,  -539,    -4,    -6,  -551,  -551,  -551,  -551,
  -551,  -551,  -551,  -551,  -273,   -36,   -37,  -551,  -551,   -42,
   -44,   -45,  -285,  -323,  -324,   -49,  -251,  -378,  -251,   -61,
   -10,   -65,   -72,   -74,  -551,  -453,  -551,  -551,  -551,  -551,
  -551,  -541,  -228,  -266,  -267,  -268,  -269,  -270,  -271,  -272,
  -529,  -275,  -551,  -550,  -521,  -293,  -550,  -551,  -551,  -298,
  -301,  -539,  -551,  -551,  -315,  -551,  -325,  -326,  -396,  -397,
  -398,  -399,  -400,  -550,  -403,  -550,  -550,  -550,  -550,  -550,
  -430,  -436,  -437,  -551,  -442,  -443,  -444,  -445,  -446,  -447,
  -448,  -449,  -450,  -451,  -452,  -455,  -456,  -551,    -2,  -540,
  -546,  -547,  -548,  -551,  -551,  -551,  -551,  -551,    -3,   -13,
  -551,  -102,  -103,  -104,  -105,  -106,  -107,  -108,  -111,  -112,
  -113,  -114,  -115,  -116,  -117,  -118,  -119,  -120,  -121,  -122,
  -123,  -124,  -125,  -126,  -127,  -128,  -129,  -130,  -131,  -132,
  -133,  -134,  -135,  -136,  -137,  -138,  -139,  -140,  -141,  -142,
  -143,  -144,  -145,  -146,  -147,  -148,  -149,  -150,  -151,  -152,
  -153,  -154,  -155,  -156,  -157,  -158,  -159,  -160,  -161,  -162,
  -163,  -164,  -165,  -166,  -167,  -168,  -169,  -170,  -171,  -172,
  -173,  -174,  -175,  -176,  -177,  -178,  -179,  -180,  -181,  -182,
  -183,  -184,  -551,   -18,  -109,   -10,  -551,  -551,  -551,  -550,
  -551,  -551,  -550,  -551,  -551,  -551,  -551,   -40,  -551,  -453,
  -551,  -273,  -551,  -551,   -10,  -551,   -41,  -220,  -551,  -551,
  -551,  -551,  -551,  -551,  -551,  -551,  -551,  -551,  -551,  -551,
  -551,  -551,  -551,  -551,  -551,  -551,  -551,  -551,  -551,  -551,
  -551,  -551,  -551,  -551,  -551,  -551,  -365,  -367,   -46,  -229,
  -244,  -258,  -258,  -248,  -551,  -259,  -551,  -285,  -323,  -324,
  -523,  -551,   -47,   -48,  -551,  -551,   -53,  -550,  -551,  -292,
  -370,  -379,  -381,   -59,  -377,   -60,  -551,  -539,   -11,   -61,
   -10,  -551,  -551,   -66,   -69,   -10,  -453,  -551,  -551,  -273,
  -288,  -541,  -551,  -327,  -378,  -551,   -71,  -551,   -76,  -280,
  -438,  -439,  -551,  -205,  -206,  -221,  -551,  -542,   -10,  -541,
  -230,  -541,  -543,  -543,  -551,  -551,  -543,  -551,  -294,  -295,
  -551,  -551,  -338,  -339,  -346,  -550,  -487,  -353,  -550,  -550,
  -364,  -486,  -488,  -489,  -490,  -491,  -492,  -551,  -505,  -510,
  -511,  -513,  -514,  -515,  -551,   -43,  -551,  -551,  -551,  -551,
  -539,  -551,  -540,  -453,  -551,  -551,  -273,  -551,  -494,  -495,
   -98,  -551,  -100,  -551,  -273,  -551,  -312,  -453,  -551,  -102,
  -103,  -140,  -141,  -157,  -162,  -169,  -172,  -318,  -551,  -519,
  -551,  -401,  -551,  -416,  -551,  -418,  -551,  -551,  -551,  -408,
  -551,  -551,  -414,  -551,  -429,  -431,  -432,  -433,  -434,  -440,
  -441,   952,    -5,  -549,   -19,   -20,   -21,   -22,   -23,  -551,
  -551,   -15,   -16,   -17,  -551,  -551,   -25,   -33,  -185,  -259,
  -551,  -551,   -26,   -34,   -35,   -27,  -187,  -551,  -530,  -531,
  -550,  -374,  -532,  -533,  -530,  -251,  -531,  -376,  -535,  -536,
  -551,  -530,  -373,  -531,   -32,  -194,   -38,   -39,  -551,  -551,
  -550,  -280,  -551,  -551,  -551,  -551,  -291,  -195,  -196,  -197,
  -198,  -199,  -200,  -201,  -202,  -207,  -208,  -209,  -210,  -211,
  -212,  -213,  -214,  -215,  -216,  -217,  -218,  -219,  -222,  -223,
  -224,  -225,  -551,  -550,  -245,  -551,  -246,  -551,  -256,  -551,
  -260,  -526,  -251,  -530,  -251,  -550,   -54,  -541,  -239,  -240,
  -258,  -258,  -252,  -253,  -551,  -550,  -550,  -551,  -287,    -9,
  -540,  -551,   -62,  -278,   -77,   -67,  -551,  -551,  -550,  -551,
  -551,  -550,  -551,  -280,  -551,  -438,  -439,   -73,   -78,  -551,
  -551,  -551,  -551,  -551,  -226,  -551,  -388,  -551,  -551,  -231,
  -232,  -545,  -544,  -234,  -545,  -283,  -284,  -522,  -335,   -10,
   -10,  -551,  -337,  -551,  -355,  -362,  -551,  -359,  -360,  -551,
  -363,  -487,  -551,  -496,  -551,  -498,  -500,  -504,  -512,  -516,
   -10,  -328,  -329,  -330,   -10,  -551,  -551,  -551,  -551,   -10,
  -383,  -550,  -551,  -551,  -280,  -307,   -98,   -99,  -551,  -550,
  -551,  -310,  -457,  -551,  -551,  -551,  -316,  -485,  -320,  -537,
  -538,  -541,  -402,  -417,  -420,  -421,  -423,  -404,  -419,  -405,
  -406,  -407,  -551,  -410,  -412,  -413,  -551,  -435,    -7,   -14,
  -110,   -24,  -551,  -265,  -551,  -281,  -551,  -551,   -55,  -237,
  -238,  -371,  -551,   -57,  -375,  -551,  -282,  -372,  -530,  -531,
  -530,  -531,  -551,  -185,  -290,  -551,  -349,  -551,  -351,   -10,
  -258,  -257,  -261,  -551,  -524,  -525,   -50,  -368,   -51,  -369,
   -10,  -235,  -551,  -241,  -243,   -42,  -551,  -250,  -254,  -551,
   -10,   -10,  -286,   -12,   -62,  -551,   -70,   -75,  -551,  -530,
  -531,  -550,  -534,  -279,  -551,  -551,  -551,  -193,  -203,  -204,
  -551,  -550,  -550,  -276,  -277,  -543,  -551,  -551,  -336,  -347,
  -551,  -354,  -550,  -348,  -551,  -550,  -550,  -506,  -493,  -551,
  -551,  -503,  -550,  -331,  -550,  -299,  -332,  -333,  -334,  -302,
  -551,  -305,  -551,  -551,  -551,  -530,  -531,  -534,  -279,  -551,
   -98,  -101,  -534,  -551,   -10,  -551,  -459,  -551,   -10,   -10,
  -485,  -551,  -462,  -463,  -465,  -466,  -468,  -469,  -518,  -518,
  -474,  -476,  -476,  -476,  -484,  -487,  -508,  -551,  -551,  -551,
   -10,  -409,  -411,  -415,  -186,  -263,  -551,  -551,   -29,  -189,
   -30,  -190,   -56,   -31,  -191,   -58,  -192,  -551,  -551,  -551,
  -281,  -227,  -350,  -551,  -551,  -247,  -262,  -551,  -236,  -258,
  -551,  -255,  -551,  -551,   -68,  -281,  -282,   -79,  -289,  -550,
  -344,   -10,  -389,  -550,  -390,  -391,  -233,  -340,  -341,  -361,
  -551,  -280,  -551,  -357,  -358,  -497,  -499,  -502,  -551,  -342,
  -551,  -551,   -10,   -10,  -304,  -306,  -551,  -281,  -551,  -281,
  -551,  -458,  -313,  -551,  -551,  -541,  -461,  -464,  -467,  -551,
  -472,  -473,  -551,  -551,  -480,  -551,  -482,  -551,  -483,  -551,
  -321,  -520,  -422,  -425,  -426,  -427,  -428,  -551,  -264,   -28,
  -188,  -551,  -352,  -366,   -52,  -242,  -258,  -380,  -382,    -8,
   -10,  -395,  -345,  -551,  -551,  -393,  -279,  -550,  -501,  -296,
  -551,  -297,  -551,  -551,  -551,   -10,  -308,  -311,   -10,  -317,
  -319,  -551,  -470,  -518,  -517,  -475,  -476,  -476,  -476,  -551,
  -509,  -507,  -485,  -424,  -249,  -551,  -394,   -10,  -453,  -551,
  -551,  -273,  -392,  -356,   -10,  -300,  -303,  -261,  -550,   -10,
  -551,  -460,  -471,  -551,  -478,  -479,  -481,   -10,  -388,  -550,
  -551,  -551,  -280,  -550,  -384,  -385,  -386,  -551,  -314,  -476,
  -551,  -387,  -551,  -530,  -531,  -534,  -279,  -343,  -309,  -477,
  -322,  -281 ]

clist = [
'13,486,250,250,250,314,537,322,283,578,330,691,251,251,251,102,5,208',
'208,496,306,707,208,208,208,563,114,114,293,293,13,287,287,311,527,12',
'377,570,574,346,347,417,424,350,99,540,543,699,216,547,395,365,208,208',
'739,109,194,208,208,293,293,208,354,363,98,12,587,555,117,117,558,560',
'281,102,751,430,435,296,442,900,252,252,252,818,114,404,405,406,407',
'279,754,248,262,263,715,719,654,902,114,13,651,562,651,208,208,208,208',
'13,13,308,603,2,316,649,799,5,613,840,841,667,348,207,351,408,5,660',
'384,386,822,702,393,349,823,706,12,670,671,821,35,492,494,729,12,12',
'657,919,659,734,595,888,368,427,738,654,440,597,309,900,757,598,320',
'345,345,395,548,345,378,705,35,286,286,869,591,753,266,273,275,357,402',
'311,193,359,311,247,483,505,421,421,506,934,723,803,10,873,381,13,208',
'208,208,208,353,367,208,367,208,208,208,345,345,345,345,114,382,319',
'13,208,388,751,612,409,439,318,10,391,852,759,416,422,425,760,12,835',
'893,754,444,720,892,35,844,846,848,315,379,502,896,35,35,250,250,12',
'486,669,563,676,358,711,250,500,251,410,661,816,922,497,1,,251,208,208',
',524,,551,654,528,330,208,,651,651,13,293,,,287,13,,,538,102,539,10',
',731,293,,,287,,10,10,,,,947,,699,707,13,446,447,,,,,12,753,,510,455',
'12,,511,430,435,501,252,517,709,515,575,576,,35,252,,499,503,509,279',
'762,935,,12,279,507,,886,208,208,,,35,,,,596,,,927,,,102,,,293,,,363',
',,,,,,,,592,,751,208,772,,924,925,926,775,10,877,,,,,,681,754,,442,563',
'785,,,642,941,,,10,681,,,,577,794,,,,,,35,897,,898,286,35,,,949,,806',
'114,311,,830,114,,286,833,834,,,,,,,809,,35,813,814,,208,,345,345,,',
',681,619,,14,,620,,,681,,,439,,678,117,10,685,654,117,662,10,753,,651',
',,,601,750,,,,,14,289,289,528,,,,,311,939,10,311,,,208,878,367,,,,13',
',,293,,,287,885,208,,651,208,356,364,,,673,,,,,,,724,,208,,804,785,439',
',733,,650,,12,,,,13,13,,439,293,,,703,,,14,,311,,,907,,,14,14,311,13',
'914,,,13,735,936,,628,13,758,208,,633,12,12,920,716,716,208,,,,208,',
'208,,,783,695,,330,439,,,12,736,439,309,12,,,,,12,904,270,274,,913,',
',,,,940,208,208,750,,,,208,,,,,,,690,656,,658,,,,,,35,13,,,528,,286',
'14,768,770,,,13,,773,797,,,,,,,13,13,293,,14,287,,,,,,,421,293,12,282',
'287,35,35,,,,,,367,12,,345,,737,,,10,,,12,12,,35,,,828,35,826,,,,35',
',,,789,,,,,,894,850,208,894,750,,750,13,750,,,13,13,14,10,10,,289,14',
',831,,832,,,,836,,,,289,,,13,,10,,,,10,208,14,12,,10,,12,12,,114,,,',
'866,,,,,,,35,,,750,,,,,12,,859,35,,,13,880,,,681,,,35,35,,750,,286,891',
',,,,,208,,13,13,286,,,,364,439,,,,345,,,12,,,,716,10,,,,,,,,,415,,10',
',,,,12,12,,,,10,10,,,,,,282,13,293,35,,909,,35,35,,,,942,270,,274,13',
',,13,,,,,,,,,,35,,,,,,,12,,13,,311,,,,,13,,,,,13,12,,,12,345,,10,13',
',208,10,10,,,,282,,,,35,282,,12,,,,,,,12,439,,10,,12,,,,,217,35,35,12',
'249,249,249,,,,,14,,,,,,289,,,303,304,305,323,,,,,,,,,,,10,249,249,',
',,383,,385,385,389,392,385,,,35,14,14,,908,,10,10,364,,,,630,,,35,,634',
'35,,,,14,,637,,14,,,,,14,,,,,,35,,,,,,,35,,,,,35,,,,,10,,,35,912,,,',
',,,,,,,10,,,10,,630,,630,,,,,,,,,,,,,,,10,,,,,,,10,,,14,,10,,,,,,,,10',
'14,,,,,,,,,,14,14,,,,289,,418,249,426,249,,,249,,445,289,,,,,,,,,,,',
',217,,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472',
'473,474,475,476,477,478,479,480,481,482,,,,,,,498,14,249,,249,14,14',
',,249,,696,697,,,249,249,,,,,,,,249,,856,14,,317,,,712,,,,714,,,,,722',
',,,,,,,,,,,,534,,,,554,,,554,554,,,,,,14,,,,,,,,,,630,,,634,,,,,,,,14',
'14,,,,,,,,,,,,,,,,,,,,,784,,,,,,,,,,,787,,,,,,,,,,792,793,,,,14,,,,911',
',,,,,,,,,,14,,,14,,,,,,,,629,,,,,249,,,419,423,,14,,,,,,,14,,,,,14,',
',,,,,,14,,,,249,,445,643,426,,,,,,,,,,,,,,646,,,,,,857,,,629,,629,646',
'488,,490,,249,,249,491,249,646,646,,,,,,,,,,,,,665,,,,,,,,,,,872,,,249',
',,249,,,,,,,,687,688,689,,,,,882,883,,,,249,,,249,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,249,,,906,,,,,249,,,,,,,,,,918,,,,,,,292,292,,,,,',
'292,292,292,,,,,,928,764,,249,,769,771,933,292,,,774,937,,776,,292,292',
',,,,,,781,,623,,,,,,249,,,,,,,,,,249,249,,629,,,,,,,,,,800,805,,,,,',
',,,,554,,,554,554,249,,,,,800,,800,,,,,,,,,,,,,652,,317,,655,,,,,,,249',
',,,,,,,666,,,,,,,,,,,,,,,249,,,,,,,,,,,,,,,,,,,,249,860,652,,,317,,',
',,,769,771,774,,,,,871,,,,875,,249,,,292,,292,292,292,292,292,292,292',
'292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292',
'292,292,,,,,,,,,292,,292,,,,,292,,,,,,,,,,,,,249,,765,,,,,,,,292,,860',
'554,,,249,,,,,,,292,,,,,,,,786,292,,,249,,,,,,652,317,,,,,,,,,,,,800',
',249,,,,,,,,,,,,,800,802,,,,,,,,,,249,,,,,,,,,,,,,,292,,,,,,,419,,,',
',,,,,,,,,,,,,,,,,,,838,,,,,,,,,,,,,,,,,,,,858,,292,,,,,,,,,,,,,,,,,',
',,,,419,,,,,,,,,,292,292,292,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,292,,292',
',292,,,,,,,,,,,,901,,,,,,,,,,,,,,,292,317,,,,,,,,,,,,292,292,292,,,',
',917,,,,,292,,,292,,,,,,,,,,,,292,917,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,292,,292,,,,,,,,,,,292,,,,,,,,,,292',
',,,,,,,292,,,,,,,,,,292,292,,,,,,,,,,,292,,,,,,,,,,,292,,,,,,292,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,292,,,,,,,,,,,,,,,,,,,,,,,292,,,,,,,,,,,',
',,,,,,,,292,,,,,,,,,,,292,292,292,,,,,,,,,,,292,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,292,,,,,,,,,,,,292,,,,292,,,,',
',,,,292,,,,,,,,,,292,,,,,,,,,,,,,,,,,,,,,292' ]
        racc_goto_table = arr = ::Array.new(2422, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'21,61,29,29,29,22,8,104,41,80,107,10,54,54,54,83,7,21,21,35,51,147,21',
'21,21,145,48,48,52,52,21,21,21,29,43,20,47,77,77,16,16,24,24,16,6,55',
'55,106,18,55,47,46,21,21,84,14,14,21,21,52,52,21,21,21,4,20,45,109,50',
'50,109,109,39,83,110,33,33,42,33,151,56,56,56,78,48,16,16,16,16,38,141',
'31,31,31,79,79,154,101,48,21,62,148,62,21,21,21,21,21,21,87,129,2,56',
'36,11,7,129,142,142,62,88,26,4,7,7,36,126,126,89,111,126,90,91,111,20',
'36,36,11,44,33,33,92,20,20,60,93,60,94,95,96,97,22,98,154,22,99,26,151',
'100,86,102,26,26,47,103,26,85,105,44,44,44,12,82,111,34,34,34,81,5,29',
'15,19,29,112,113,115,54,54,116,117,118,119,17,120,124,21,21,21,21,21',
'44,44,21,44,21,21,21,26,26,26,26,48,125,76,21,21,127,110,128,2,48,74',
'17,130,131,132,18,18,18,133,20,135,137,141,18,80,139,44,143,143,143',
'73,72,64,144,44,44,29,29,20,61,63,145,43,17,145,29,54,54,27,59,149,142',
'58,1,,54,21,21,,51,,104,154,41,107,21,,62,62,21,52,,,21,21,,,51,83,51',
'17,,45,52,,,21,,17,17,,,,78,,106,147,21,26,26,,,,,20,111,,6,26,20,,39',
'33,33,56,56,39,148,42,16,16,,44,56,,31,31,4,38,129,11,,20,38,31,,79',
'21,21,,,44,,,,46,,,84,,,83,,,52,,,21,,,,,,,,,83,,110,21,35,,143,143',
'143,35,17,111,,,,,,33,141,,33,145,61,,,22,10,,,17,33,,,,4,43,,,,,,44',
'111,,111,44,44,,,143,,55,48,29,,8,48,,44,8,8,,,,,,,109,,44,109,109,',
'21,,26,26,,,,33,14,,23,,14,,,33,,,48,,22,50,17,22,154,50,51,17,111,',
'62,,,,26,108,,,,,23,23,23,41,,,,,29,111,17,29,,,21,145,44,,,,21,,,52',
',,21,77,21,,62,21,23,23,,,7,,,,,,,22,,21,,24,61,48,,22,,56,,20,,,,21',
'21,,48,52,,,21,,,23,,29,,,77,,,23,23,29,21,77,,,21,16,80,,34,21,51,21',
',34,20,20,8,83,83,21,,,,21,,21,,,104,56,,107,48,,,20,83,48,26,20,,,',
',20,61,57,57,,109,,,,,,8,21,21,108,,,,21,,,,,,,26,34,,34,,,,,,44,21',
',,41,,44,23,18,18,,,21,,18,41,,,,,,,21,21,52,,23,21,,,,,,,54,52,20,9',
'21,44,44,,,,,,44,20,,26,,26,,,17,,,20,20,,44,,,16,44,54,,,,44,,,,56',
',,,,,108,47,21,108,108,,108,21,108,,,21,21,23,17,17,,23,23,,83,,83,',
',,83,,,,23,,,21,,17,,,,17,21,23,20,,17,,20,20,,48,,,,54,,,,,,,44,,,108',
',,,,20,,18,44,,,21,16,,,33,,,44,44,,108,,44,51,,,,,,21,,21,21,44,,,',
'23,48,,,,26,,,20,,,,83,17,,,,,,,,,9,,17,,,,,20,20,,,,17,17,,,,,,9,21',
'52,44,,21,,44,44,,,,22,57,,57,21,,,21,,,,,,,,,,44,,,,,,,20,,21,,29,',
',,,21,,,,,21,20,,,20,26,,17,21,,21,17,17,,,,9,,,,44,9,,20,,,,,,,20,48',
',17,,20,,,,,28,44,44,20,28,28,28,,,,,23,,,,,,23,,,28,28,28,53,,,,,,',
',,,,17,28,28,,,,53,,53,53,53,53,53,,,44,23,23,,44,,17,17,23,,,,57,,',
'44,,57,44,,,,23,,57,,23,,,,,23,,,,,,44,,,,,,,44,,,,,44,,,,,17,,,44,17',
',,,,,,,,,,17,,,17,,57,,57,,,,,,,,,,,,,,,17,,,,,,,17,,,23,,17,,,,,,,',
'17,23,,,,,,,,,,23,23,,,,23,,28,28,28,28,,,28,,28,23,,,,,,,,,,,,,28,',
'28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28',
'28,28,28,,,,,,,53,23,28,,28,23,23,,,28,,9,9,,,28,28,,,,,,,,28,,23,23',
',25,,,9,,,,9,,,,,9,,,,,,,,,,,,,28,,,,53,,,53,53,,,,,,23,,,,,,,,,,57',
',,57,,,,,,,,23,23,,,,,,,,,,,,,,,,,,,,,9,,,,,,,,,,,9,,,,,,,,,,9,9,,,',
'23,,,,23,,,,,,,,,,,23,,,23,,,,,,,,53,,,,,28,,,25,25,,23,,,,,,,23,,,',
',23,,,,,,,,23,,,,28,,28,28,28,,,,,,,,,,,,,,53,,,,,,9,,,53,,53,53,25',
',25,,28,,28,25,28,53,53,,,,,,,,,,,,,28,,,,,,,,,,,9,,,28,,,28,,,,,,,',
'28,28,28,,,,,9,9,,,,28,,,28,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,28,',
',9,,,,,28,,,,,,,,,,9,,,,,,,37,37,,,,,,37,37,37,,,,,,9,28,,28,,28,28',
'9,37,,,28,9,,28,,37,37,,,,,,,28,,25,,,,,,28,,,,,,,,,,28,28,,53,,,,,',
',,,,53,53,,,,,,,,,,53,,,53,53,28,,,,,53,,53,,,,,,,,,,,,,25,,25,,25,',
',,,,,28,,,,,,,,25,,,,,,,,,,,,,,,28,,,,,,,,,,,,,,,,,,,,28,28,25,,,25',
',,,,,28,28,28,,,,,53,,,,53,,28,,,37,,37,37,37,37,37,37,37,37,37,37,37',
'37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,,,,,,,,,37,,37,,,,,37,',
',,,,,,,,,,,28,,25,,,,,,,,37,,28,53,,,28,,,,,,,37,,,,,,,,25,37,,,28,',
',,,,25,25,,,,,,,,,,,,53,,28,,,,,,,,,,,,,53,25,,,,,,,,,,28,,,,,,,,,,',
',,,37,,,,,,,25,,,,,,,,,,,,,,,,,,,,,,,25,,,,,,,,,,,,,,,,,,,,25,,37,,',
',,,,,,,,,,,,,,,,,,,25,,,,,,,,,,37,37,37,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,37,,37,,37,,,,,,,,,,,,25,,,,,,,,,,,,,,,37,25,,,,,,,,,,,,37,37,37,',
',,,25,,,,,37,,,37,,,,,,,,,,,,37,25,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,37,,37,,,,,,,,,,,37,,,,,,,,,,37,,,,,',
',,37,,,,,,,,,,37,37,,,,,,,,,,,37,,,,,,,,,,,37,,,,,,37,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,37,,,,,,,,,,,,,,,,,,,,,,,37,,,,,,,,,,,,,,,,,,,,37,,',
',,,,,,,,37,37,37,,,,,,,,,,,37,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,37,,,,,,,,,,,,37,,,,37,,,,,,,,,37,,,,,,,,,,37,,',
',,,,,,,,,,,,,,,,,,37' ]
        racc_goto_check = arr = ::Array.new(2422, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_goto_pointer = [
   nil,   264,   111,   nil,    61,    79,    41,    16,  -302,   655,
  -525,  -577,  -628,   nil,    48,   172,   -18,   192,    30,   119,
    35,     0,   -48,   460,  -155,  1168,   104,   150,   941,   -20,
   nil,    69,   nil,  -125,   148,  -247,  -370,  1516,    59,    42,
   nil,   -23,    45,  -263,   138,  -295,   -12,   -29,    19,   nil,
    61,   -21,    -3,   926,   -10,  -267,    58,   590,    -4,  -237,
  -348,  -251,  -385,  -253,   -25,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   177,   187,   166,   nil,   157,  -309,  -629,  -481,
  -342,   115,  -193,    12,  -543,   101,  -219,    58,    61,  -587,
    71,  -587,  -444,  -741,  -444,  -218,  -683,    86,  -444,  -222,
  -440,  -753,   104,  -156,   -49,  -390,  -506,   -46,  -112,  -258,
  -523,  -424,   163,   -62,   nil,   -86,   -84,  -729,  -390,  -501,
  -610,   nil,   nil,   nil,   123,   139,    51,   139,  -170,  -272,
   145,  -535,  -380,  -377,   nil,  -509,   nil,  -607,   nil,  -603,
   nil,  -507,  -631,  -513,  -599,  -312,   nil,  -536,  -236,  -449,
   nil,  -766,   nil,   nil,  -391 ]

racc_goto_default = [
   nil,   nil,   nil,     3,   nil,     4,   352,   278,   nil,   536,
   nil,   819,   nil,   277,   nil,   nil,   nil,   212,    16,    11,
   213,   302,   nil,   211,   nil,   255,    15,   nil,    19,    20,
    21,   nil,    25,   684,   nil,   nil,   nil,    26,    29,   nil,
    31,    34,    33,   nil,   209,   362,   nil,   116,   433,   115,
    69,   nil,    42,   310,   312,   nil,   313,   431,   nil,   nil,
   631,   484,   253,   nil,   nil,   268,    43,    44,    45,    46,
    47,    48,    49,   nil,   269,    55,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   571,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   325,   324,   701,   327,   nil,
   328,   329,   nil,   nil,   437,   nil,   nil,   nil,   nil,   nil,
   nil,    68,    70,    71,    72,   nil,   nil,   nil,   nil,   608,
   nil,   nil,   nil,   nil,   394,   741,   744,   749,   746,   747,
   748,   895,   nil,   nil,   752,   336,   331,   338,   nil,   565,
   566,   756,   341,   344,   260 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 143, :_reduce_none,
  2, 144, :_reduce_2,
  0, 145, :_reduce_3,
  1, 145, :_reduce_4,
  3, 145, :_reduce_5,
  1, 147, :_reduce_none,
  4, 147, :_reduce_7,
  4, 150, :_reduce_8,
  2, 151, :_reduce_9,
  0, 155, :_reduce_10,
  1, 155, :_reduce_11,
  3, 155, :_reduce_12,
  0, 169, :_reduce_13,
  4, 149, :_reduce_14,
  3, 149, :_reduce_15,
  3, 149, :_reduce_none,
  3, 149, :_reduce_17,
  2, 149, :_reduce_18,
  3, 149, :_reduce_19,
  3, 149, :_reduce_20,
  3, 149, :_reduce_21,
  3, 149, :_reduce_22,
  3, 149, :_reduce_23,
  4, 149, :_reduce_none,
  3, 149, :_reduce_25,
  3, 149, :_reduce_26,
  3, 149, :_reduce_27,
  6, 149, :_reduce_none,
  5, 149, :_reduce_29,
  5, 149, :_reduce_none,
  5, 149, :_reduce_none,
  3, 149, :_reduce_none,
  3, 149, :_reduce_33,
  3, 149, :_reduce_34,
  3, 149, :_reduce_35,
  1, 149, :_reduce_none,
  1, 168, :_reduce_none,
  3, 168, :_reduce_38,
  3, 168, :_reduce_39,
  2, 168, :_reduce_40,
  2, 168, :_reduce_41,
  1, 168, :_reduce_none,
  1, 158, :_reduce_none,
  1, 160, :_reduce_none,
  1, 160, :_reduce_none,
  2, 160, :_reduce_46,
  2, 160, :_reduce_47,
  2, 160, :_reduce_48,
  1, 172, :_reduce_none,
  4, 172, :_reduce_none,
  4, 172, :_reduce_none,
  4, 177, :_reduce_none,
  2, 171, :_reduce_53,
  3, 171, :_reduce_none,
  4, 171, :_reduce_55,
  5, 171, :_reduce_none,
  4, 171, :_reduce_57,
  5, 171, :_reduce_none,
  2, 171, :_reduce_59,
  2, 171, :_reduce_60,
  1, 161, :_reduce_61,
  3, 161, :_reduce_62,
  1, 181, :_reduce_63,
  3, 181, :_reduce_64,
  1, 180, :_reduce_65,
  2, 180, :_reduce_66,
  3, 180, :_reduce_67,
  5, 180, :_reduce_none,
  2, 180, :_reduce_69,
  4, 180, :_reduce_none,
  2, 180, :_reduce_71,
  1, 180, :_reduce_72,
  3, 180, :_reduce_none,
  1, 183, :_reduce_74,
  3, 183, :_reduce_75,
  2, 182, :_reduce_76,
  3, 182, :_reduce_77,
  1, 185, :_reduce_none,
  3, 185, :_reduce_none,
  1, 184, :_reduce_80,
  4, 184, :_reduce_81,
  3, 184, :_reduce_82,
  3, 184, :_reduce_none,
  3, 184, :_reduce_none,
  3, 184, :_reduce_none,
  2, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 159, :_reduce_88,
  4, 159, :_reduce_89,
  4, 159, :_reduce_90,
  3, 159, :_reduce_91,
  3, 159, :_reduce_92,
  3, 159, :_reduce_93,
  3, 159, :_reduce_94,
  3, 159, :_reduce_95,
  2, 159, :_reduce_96,
  1, 159, :_reduce_none,
  1, 187, :_reduce_none,
  2, 188, :_reduce_99,
  1, 188, :_reduce_100,
  3, 188, :_reduce_101,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_105,
  1, 189, :_reduce_106,
  1, 156, :_reduce_107,
  1, 156, :_reduce_none,
  1, 157, :_reduce_109,
  3, 157, :_reduce_110,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  3, 170, :_reduce_185,
  5, 170, :_reduce_186,
  3, 170, :_reduce_187,
  6, 170, :_reduce_188,
  5, 170, :_reduce_189,
  5, 170, :_reduce_none,
  5, 170, :_reduce_none,
  5, 170, :_reduce_none,
  4, 170, :_reduce_none,
  3, 170, :_reduce_none,
  3, 170, :_reduce_195,
  3, 170, :_reduce_196,
  3, 170, :_reduce_197,
  3, 170, :_reduce_198,
  3, 170, :_reduce_199,
  3, 170, :_reduce_200,
  3, 170, :_reduce_201,
  3, 170, :_reduce_202,
  4, 170, :_reduce_203,
  4, 170, :_reduce_204,
  2, 170, :_reduce_205,
  2, 170, :_reduce_206,
  3, 170, :_reduce_207,
  3, 170, :_reduce_208,
  3, 170, :_reduce_209,
  3, 170, :_reduce_210,
  3, 170, :_reduce_211,
  3, 170, :_reduce_212,
  3, 170, :_reduce_213,
  3, 170, :_reduce_214,
  3, 170, :_reduce_215,
  3, 170, :_reduce_216,
  3, 170, :_reduce_217,
  3, 170, :_reduce_218,
  3, 170, :_reduce_219,
  2, 170, :_reduce_220,
  2, 170, :_reduce_221,
  3, 170, :_reduce_222,
  3, 170, :_reduce_223,
  3, 170, :_reduce_224,
  3, 170, :_reduce_225,
  3, 170, :_reduce_226,
  5, 170, :_reduce_227,
  1, 170, :_reduce_none,
  1, 167, :_reduce_none,
  1, 164, :_reduce_230,
  2, 164, :_reduce_231,
  2, 164, :_reduce_232,
  4, 164, :_reduce_233,
  2, 164, :_reduce_234,
  3, 199, :_reduce_235,
  2, 201, :_reduce_none,
  1, 202, :_reduce_237,
  1, 202, :_reduce_none,
  1, 200, :_reduce_239,
  1, 200, :_reduce_none,
  2, 200, :_reduce_241,
  4, 200, :_reduce_242,
  2, 200, :_reduce_243,
  1, 173, :_reduce_244,
  2, 173, :_reduce_245,
  2, 173, :_reduce_246,
  4, 173, :_reduce_247,
  1, 173, :_reduce_248,
  4, 205, :_reduce_none,
  1, 205, :_reduce_none,
  0, 207, :_reduce_251,
  2, 176, :_reduce_252,
  1, 206, :_reduce_none,
  2, 206, :_reduce_254,
  3, 206, :_reduce_255,
  2, 204, :_reduce_256,
  2, 203, :_reduce_257,
  0, 203, :_reduce_258,
  1, 196, :_reduce_259,
  2, 196, :_reduce_260,
  3, 196, :_reduce_261,
  4, 196, :_reduce_262,
  3, 166, :_reduce_263,
  4, 166, :_reduce_264,
  2, 166, :_reduce_265,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  0, 229, :_reduce_275,
  4, 194, :_reduce_276,
  4, 194, :_reduce_277,
  3, 194, :_reduce_278,
  3, 194, :_reduce_279,
  2, 194, :_reduce_280,
  4, 194, :_reduce_281,
  4, 194, :_reduce_282,
  3, 194, :_reduce_283,
  3, 194, :_reduce_284,
  1, 194, :_reduce_285,
  4, 194, :_reduce_286,
  3, 194, :_reduce_287,
  1, 194, :_reduce_288,
  5, 194, :_reduce_289,
  4, 194, :_reduce_290,
  3, 194, :_reduce_291,
  2, 194, :_reduce_292,
  1, 194, :_reduce_none,
  2, 194, :_reduce_294,
  2, 194, :_reduce_295,
  6, 194, :_reduce_296,
  6, 194, :_reduce_297,
  0, 230, :_reduce_298,
  0, 231, :_reduce_299,
  7, 194, :_reduce_300,
  0, 232, :_reduce_301,
  0, 233, :_reduce_302,
  7, 194, :_reduce_303,
  5, 194, :_reduce_304,
  4, 194, :_reduce_305,
  5, 194, :_reduce_306,
  0, 234, :_reduce_307,
  0, 235, :_reduce_308,
  9, 194, :_reduce_309,
  0, 236, :_reduce_310,
  6, 194, :_reduce_311,
  0, 237, :_reduce_312,
  0, 238, :_reduce_313,
  8, 194, :_reduce_314,
  0, 239, :_reduce_315,
  0, 240, :_reduce_316,
  6, 194, :_reduce_317,
  0, 241, :_reduce_318,
  6, 194, :_reduce_319,
  0, 242, :_reduce_320,
  0, 243, :_reduce_321,
  9, 194, :_reduce_322,
  1, 194, :_reduce_323,
  1, 194, :_reduce_324,
  1, 194, :_reduce_325,
  1, 194, :_reduce_none,
  1, 163, :_reduce_none,
  1, 219, :_reduce_none,
  1, 219, :_reduce_none,
  1, 219, :_reduce_none,
  2, 219, :_reduce_none,
  1, 221, :_reduce_none,
  1, 221, :_reduce_none,
  1, 221, :_reduce_none,
  2, 218, :_reduce_335,
  3, 244, :_reduce_336,
  2, 244, :_reduce_337,
  1, 244, :_reduce_none,
  1, 244, :_reduce_none,
  3, 245, :_reduce_340,
  3, 245, :_reduce_341,
  1, 220, :_reduce_342,
  5, 220, :_reduce_343,
  1, 153, :_reduce_none,
  2, 153, :_reduce_345,
  1, 247, :_reduce_346,
  3, 247, :_reduce_347,
  3, 248, :_reduce_348,
  1, 178, :_reduce_none,
  2, 178, :_reduce_350,
  1, 178, :_reduce_351,
  3, 178, :_reduce_352,
  1, 249, :_reduce_353,
  2, 251, :_reduce_354,
  1, 251, :_reduce_355,
  6, 246, :_reduce_356,
  4, 246, :_reduce_357,
  4, 246, :_reduce_358,
  2, 246, :_reduce_359,
  2, 246, :_reduce_360,
  4, 246, :_reduce_361,
  2, 246, :_reduce_362,
  2, 246, :_reduce_363,
  1, 246, :_reduce_364,
  0, 255, :_reduce_365,
  5, 254, :_reduce_366,
  2, 174, :_reduce_367,
  4, 174, :_reduce_none,
  4, 174, :_reduce_none,
  2, 217, :_reduce_370,
  4, 217, :_reduce_371,
  4, 217, :_reduce_372,
  3, 217, :_reduce_373,
  3, 217, :_reduce_374,
  4, 217, :_reduce_375,
  3, 217, :_reduce_376,
  2, 217, :_reduce_377,
  1, 217, :_reduce_378,
  0, 257, :_reduce_379,
  5, 216, :_reduce_380,
  0, 258, :_reduce_381,
  5, 216, :_reduce_382,
  0, 260, :_reduce_383,
  6, 222, :_reduce_384,
  1, 259, :_reduce_385,
  1, 259, :_reduce_none,
  6, 152, :_reduce_387,
  0, 152, :_reduce_388,
  1, 261, :_reduce_389,
  1, 261, :_reduce_none,
  1, 261, :_reduce_none,
  2, 262, :_reduce_392,
  1, 262, :_reduce_393,
  2, 154, :_reduce_394,
  1, 154, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 209, :_reduce_399,
  1, 265, :_reduce_none,
  2, 265, :_reduce_401,
  3, 266, :_reduce_402,
  1, 266, :_reduce_403,
  3, 210, :_reduce_404,
  3, 211, :_reduce_405,
  3, 212, :_reduce_406,
  3, 212, :_reduce_407,
  1, 269, :_reduce_408,
  3, 269, :_reduce_409,
  1, 270, :_reduce_410,
  2, 270, :_reduce_411,
  3, 213, :_reduce_412,
  3, 213, :_reduce_413,
  1, 272, :_reduce_414,
  3, 272, :_reduce_415,
  1, 267, :_reduce_416,
  2, 267, :_reduce_417,
  1, 268, :_reduce_418,
  2, 268, :_reduce_419,
  1, 271, :_reduce_420,
  0, 274, :_reduce_421,
  3, 271, :_reduce_422,
  0, 275, :_reduce_423,
  4, 271, :_reduce_424,
  1, 273, :_reduce_425,
  1, 273, :_reduce_426,
  1, 273, :_reduce_427,
  1, 273, :_reduce_none,
  2, 192, :_reduce_429,
  1, 192, :_reduce_430,
  1, 276, :_reduce_none,
  1, 276, :_reduce_none,
  1, 276, :_reduce_none,
  1, 276, :_reduce_none,
  3, 264, :_reduce_435,
  1, 263, :_reduce_436,
  1, 263, :_reduce_437,
  2, 263, :_reduce_438,
  2, 263, :_reduce_439,
  2, 263, :_reduce_440,
  2, 263, :_reduce_441,
  1, 186, :_reduce_442,
  1, 186, :_reduce_443,
  1, 186, :_reduce_444,
  1, 186, :_reduce_445,
  1, 186, :_reduce_446,
  1, 186, :_reduce_447,
  1, 186, :_reduce_448,
  1, 186, :_reduce_449,
  1, 186, :_reduce_450,
  1, 186, :_reduce_451,
  1, 186, :_reduce_452,
  1, 214, :_reduce_453,
  1, 162, :_reduce_454,
  1, 165, :_reduce_455,
  1, 165, :_reduce_none,
  1, 224, :_reduce_457,
  3, 224, :_reduce_458,
  2, 224, :_reduce_459,
  4, 226, :_reduce_460,
  2, 226, :_reduce_461,
  1, 278, :_reduce_none,
  1, 278, :_reduce_none,
  2, 279, :_reduce_464,
  1, 279, :_reduce_465,
  1, 280, :_reduce_466,
  2, 281, :_reduce_467,
  1, 281, :_reduce_468,
  1, 282, :_reduce_469,
  3, 282, :_reduce_470,
  4, 283, :_reduce_471,
  2, 283, :_reduce_472,
  2, 283, :_reduce_473,
  1, 283, :_reduce_474,
  2, 285, :_reduce_475,
  0, 285, :_reduce_476,
  6, 277, :_reduce_477,
  4, 277, :_reduce_478,
  4, 277, :_reduce_479,
  2, 277, :_reduce_480,
  4, 277, :_reduce_481,
  2, 277, :_reduce_482,
  2, 277, :_reduce_483,
  1, 277, :_reduce_484,
  0, 277, :_reduce_485,
  1, 287, :_reduce_none,
  1, 287, :_reduce_487,
  1, 288, :_reduce_488,
  1, 288, :_reduce_489,
  1, 288, :_reduce_490,
  1, 288, :_reduce_491,
  1, 289, :_reduce_492,
  3, 289, :_reduce_493,
  1, 223, :_reduce_none,
  1, 223, :_reduce_none,
  1, 291, :_reduce_496,
  3, 291, :_reduce_none,
  1, 292, :_reduce_498,
  3, 292, :_reduce_499,
  1, 290, :_reduce_none,
  4, 290, :_reduce_none,
  3, 290, :_reduce_none,
  2, 290, :_reduce_none,
  1, 290, :_reduce_none,
  1, 252, :_reduce_505,
  3, 252, :_reduce_506,
  3, 293, :_reduce_507,
  1, 286, :_reduce_508,
  3, 286, :_reduce_509,
  1, 294, :_reduce_none,
  1, 294, :_reduce_none,
  2, 253, :_reduce_512,
  1, 253, :_reduce_513,
  1, 295, :_reduce_none,
  1, 295, :_reduce_none,
  2, 250, :_reduce_516,
  2, 284, :_reduce_517,
  0, 284, :_reduce_518,
  1, 227, :_reduce_519,
  4, 227, :_reduce_520,
  0, 215, :_reduce_521,
  2, 215, :_reduce_522,
  1, 198, :_reduce_523,
  3, 198, :_reduce_524,
  3, 296, :_reduce_525,
  2, 296, :_reduce_526,
  1, 179, :_reduce_none,
  1, 179, :_reduce_none,
  1, 179, :_reduce_none,
  1, 175, :_reduce_none,
  1, 175, :_reduce_none,
  1, 175, :_reduce_none,
  1, 175, :_reduce_none,
  1, 256, :_reduce_none,
  1, 256, :_reduce_none,
  1, 256, :_reduce_none,
  1, 228, :_reduce_none,
  1, 228, :_reduce_none,
  0, 146, :_reduce_none,
  1, 146, :_reduce_none,
  0, 193, :_reduce_none,
  1, 193, :_reduce_none,
  0, 197, :_reduce_none,
  1, 197, :_reduce_none,
  1, 197, :_reduce_none,
  1, 225, :_reduce_none,
  1, 225, :_reduce_none,
  1, 148, :_reduce_none,
  2, 148, :_reduce_none,
  0, 195, :_reduce_550 ]

racc_reduce_n = 551

racc_shift_n = 952

racc_token_table = {
  false => 0,
  :error => 1,
  :kCLASS => 2,
  :kMODULE => 3,
  :kDEF => 4,
  :kUNDEF => 5,
  :kBEGIN => 6,
  :kRESCUE => 7,
  :kENSURE => 8,
  :kEND => 9,
  :kIF => 10,
  :kUNLESS => 11,
  :kTHEN => 12,
  :kELSIF => 13,
  :kELSE => 14,
  :kCASE => 15,
  :kWHEN => 16,
  :kWHILE => 17,
  :kUNTIL => 18,
  :kFOR => 19,
  :kBREAK => 20,
  :kNEXT => 21,
  :kREDO => 22,
  :kRETRY => 23,
  :kIN => 24,
  :kDO => 25,
  :kDO_COND => 26,
  :kDO_BLOCK => 27,
  :kDO_LAMBDA => 28,
  :kRETURN => 29,
  :kYIELD => 30,
  :kSUPER => 31,
  :kSELF => 32,
  :kNIL => 33,
  :kTRUE => 34,
  :kFALSE => 35,
  :kAND => 36,
  :kOR => 37,
  :kNOT => 38,
  :kIF_MOD => 39,
  :kUNLESS_MOD => 40,
  :kWHILE_MOD => 41,
  :kUNTIL_MOD => 42,
  :kRESCUE_MOD => 43,
  :kALIAS => 44,
  :kDEFINED => 45,
  :klBEGIN => 46,
  :klEND => 47,
  :k__LINE__ => 48,
  :k__FILE__ => 49,
  :k__ENCODING__ => 50,
  :tIDENTIFIER => 51,
  :tFID => 52,
  :tGVAR => 53,
  :tIVAR => 54,
  :tCONSTANT => 55,
  :tLABEL => 56,
  :tCVAR => 57,
  :tNTH_REF => 58,
  :tBACK_REF => 59,
  :tSTRING_CONTENT => 60,
  :tINTEGER => 61,
  :tFLOAT => 62,
  :tREGEXP_END => 63,
  :tUPLUS => 64,
  :tUMINUS => 65,
  :tUMINUS_NUM => 66,
  :tPOW => 67,
  :tCMP => 68,
  :tEQ => 69,
  :tEQQ => 70,
  :tNEQ => 71,
  :tGEQ => 72,
  :tLEQ => 73,
  :tANDOP => 74,
  :tOROP => 75,
  :tMATCH => 76,
  :tNMATCH => 77,
  :tJSDOT => 78,
  :tDOT => 79,
  :tDOT2 => 80,
  :tDOT3 => 81,
  :tAREF => 82,
  :tASET => 83,
  :tLSHFT => 84,
  :tRSHFT => 85,
  :tCOLON2 => 86,
  :tCOLON3 => 87,
  :tOP_ASGN => 88,
  :tASSOC => 89,
  :tLPAREN => 90,
  :tLPAREN2 => 91,
  :tRPAREN => 92,
  :tLPAREN_ARG => 93,
  :ARRAY_BEG => 94,
  :tRBRACK => 95,
  :tLBRACE => 96,
  :tLBRACE_ARG => 97,
  :tSTAR => 98,
  :tSTAR2 => 99,
  :tAMPER => 100,
  :tAMPER2 => 101,
  :tTILDE => 102,
  :tPERCENT => 103,
  :tDIVIDE => 104,
  :tPLUS => 105,
  :tMINUS => 106,
  :tLT => 107,
  :tGT => 108,
  :tPIPE => 109,
  :tBANG => 110,
  :tCARET => 111,
  :tLCURLY => 112,
  :tRCURLY => 113,
  :tBACK_REF2 => 114,
  :tSYMBEG => 115,
  :tSTRING_BEG => 116,
  :tXSTRING_BEG => 117,
  :tREGEXP_BEG => 118,
  :tWORDS_BEG => 119,
  :tAWORDS_BEG => 120,
  :tSTRING_DBEG => 121,
  :tSTRING_DVAR => 122,
  :tSTRING_END => 123,
  :tSTRING => 124,
  :tSYMBOL => 125,
  :tNL => 126,
  :tEH => 127,
  :tCOLON => 128,
  :tCOMMA => 129,
  :tSPACE => 130,
  :tSEMI => 131,
  :tLAMBDA => 132,
  :tLAMBEG => 133,
  :tLBRACK2 => 134,
  :tLBRACK => 135,
  :tJSLBRACK => 136,
  :tDSTAR => 137,
  :tEQL => 138,
  :tLOWEST => 139,
  "-@NUM" => 140,
  "+@NUM" => 141 }

racc_nt_base = 142

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "kCLASS",
  "kMODULE",
  "kDEF",
  "kUNDEF",
  "kBEGIN",
  "kRESCUE",
  "kENSURE",
  "kEND",
  "kIF",
  "kUNLESS",
  "kTHEN",
  "kELSIF",
  "kELSE",
  "kCASE",
  "kWHEN",
  "kWHILE",
  "kUNTIL",
  "kFOR",
  "kBREAK",
  "kNEXT",
  "kREDO",
  "kRETRY",
  "kIN",
  "kDO",
  "kDO_COND",
  "kDO_BLOCK",
  "kDO_LAMBDA",
  "kRETURN",
  "kYIELD",
  "kSUPER",
  "kSELF",
  "kNIL",
  "kTRUE",
  "kFALSE",
  "kAND",
  "kOR",
  "kNOT",
  "kIF_MOD",
  "kUNLESS_MOD",
  "kWHILE_MOD",
  "kUNTIL_MOD",
  "kRESCUE_MOD",
  "kALIAS",
  "kDEFINED",
  "klBEGIN",
  "klEND",
  "k__LINE__",
  "k__FILE__",
  "k__ENCODING__",
  "tIDENTIFIER",
  "tFID",
  "tGVAR",
  "tIVAR",
  "tCONSTANT",
  "tLABEL",
  "tCVAR",
  "tNTH_REF",
  "tBACK_REF",
  "tSTRING_CONTENT",
  "tINTEGER",
  "tFLOAT",
  "tREGEXP_END",
  "tUPLUS",
  "tUMINUS",
  "tUMINUS_NUM",
  "tPOW",
  "tCMP",
  "tEQ",
  "tEQQ",
  "tNEQ",
  "tGEQ",
  "tLEQ",
  "tANDOP",
  "tOROP",
  "tMATCH",
  "tNMATCH",
  "tJSDOT",
  "tDOT",
  "tDOT2",
  "tDOT3",
  "tAREF",
  "tASET",
  "tLSHFT",
  "tRSHFT",
  "tCOLON2",
  "tCOLON3",
  "tOP_ASGN",
  "tASSOC",
  "tLPAREN",
  "tLPAREN2",
  "tRPAREN",
  "tLPAREN_ARG",
  "ARRAY_BEG",
  "tRBRACK",
  "tLBRACE",
  "tLBRACE_ARG",
  "tSTAR",
  "tSTAR2",
  "tAMPER",
  "tAMPER2",
  "tTILDE",
  "tPERCENT",
  "tDIVIDE",
  "tPLUS",
  "tMINUS",
  "tLT",
  "tGT",
  "tPIPE",
  "tBANG",
  "tCARET",
  "tLCURLY",
  "tRCURLY",
  "tBACK_REF2",
  "tSYMBEG",
  "tSTRING_BEG",
  "tXSTRING_BEG",
  "tREGEXP_BEG",
  "tWORDS_BEG",
  "tAWORDS_BEG",
  "tSTRING_DBEG",
  "tSTRING_DVAR",
  "tSTRING_END",
  "tSTRING",
  "tSYMBOL",
  "tNL",
  "tEH",
  "tCOLON",
  "tCOMMA",
  "tSPACE",
  "tSEMI",
  "tLAMBDA",
  "tLAMBEG",
  "tLBRACK2",
  "tLBRACK",
  "tJSLBRACK",
  "tDSTAR",
  "tEQL",
  "tLOWEST",
  "\"-@NUM\"",
  "\"+@NUM\"",
  "$start",
  "program",
  "top_compstmt",
  "top_stmts",
  "opt_terms",
  "top_stmt",
  "terms",
  "stmt",
  "bodystmt",
  "compstmt",
  "opt_rescue",
  "opt_else",
  "opt_ensure",
  "stmts",
  "fitem",
  "undef_list",
  "expr_value",
  "lhs",
  "command_call",
  "mlhs",
  "var_lhs",
  "primary_value",
  "aref_args",
  "backref",
  "mrhs",
  "arg_value",
  "expr",
  "@1",
  "arg",
  "command",
  "block_command",
  "call_args",
  "block_call",
  "operation2",
  "command_args",
  "cmd_brace_block",
  "opt_block_var",
  "operation",
  "mlhs_basic",
  "mlhs_entry",
  "mlhs_head",
  "mlhs_item",
  "mlhs_node",
  "mlhs_post",
  "variable",
  "cname",
  "cpath",
  "fname",
  "op",
  "reswords",
  "symbol",
  "opt_nl",
  "primary",
  "none",
  "args",
  "trailer",
  "assocs",
  "paren_args",
  "opt_call_args",
  "rparen",
  "opt_paren_args",
  "opt_block_arg",
  "block_arg",
  "call_args2",
  "open_args",
  "@2",
  "literal",
  "strings",
  "xstring",
  "regexp",
  "words",
  "awords",
  "var_ref",
  "assoc_list",
  "brace_block",
  "method_call",
  "lambda",
  "then",
  "if_tail",
  "do",
  "case_body",
  "for_var",
  "superclass",
  "term",
  "f_arglist",
  "singleton",
  "dot_or_colon",
  "@3",
  "@4",
  "@5",
  "@6",
  "@7",
  "@8",
  "@9",
  "@10",
  "@11",
  "@12",
  "@13",
  "@14",
  "@15",
  "@16",
  "@17",
  "f_larglist",
  "lambda_body",
  "block_param",
  "f_block_optarg",
  "f_block_opt",
  "block_args_tail",
  "f_block_arg",
  "opt_block_args_tail",
  "f_arg",
  "f_rest_arg",
  "do_block",
  "@18",
  "operation3",
  "@19",
  "@20",
  "cases",
  "@21",
  "exc_list",
  "exc_var",
  "numeric",
  "dsym",
  "string",
  "string1",
  "string_contents",
  "xstring_contents",
  "word_list",
  "word",
  "string_content",
  "qword_list",
  "string_dvar",
  "@22",
  "@23",
  "sym",
  "f_args",
  "kwrest_mark",
  "f_kwrest",
  "f_label",
  "f_kw",
  "f_kwarg",
  "args_tail",
  "opt_f_block_arg",
  "opt_args_tail",
  "f_optarg",
  "f_norm_arg",
  "f_bad_arg",
  "f_arg_item",
  "f_margs",
  "f_marg",
  "f_marg_list",
  "f_opt",
  "restarg_mark",
  "blkarg_mark",
  "assoc" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

def _reduce_2(val, _values, result)
                      result = new_compstmt val[0]
                    
    result
end

def _reduce_3(val, _values, result)
                      result = new_block
                    
    result
end

def _reduce_4(val, _values, result)
                      result = new_block val[0]
                    
    result
end

def _reduce_5(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

# reduce 6 omitted

def _reduce_7(val, _values, result)
                      result = val[2]
                    
    result
end

def _reduce_8(val, _values, result)
                      result = new_body(val[0], val[1], val[2], val[3])
                    
    result
end

def _reduce_9(val, _values, result)
                      result = new_compstmt val[0]
                    
    result
end

def _reduce_10(val, _values, result)
                      result = new_block
                    
    result
end

def _reduce_11(val, _values, result)
                      result = new_block val[0]
                    
    result
end

def _reduce_12(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_13(val, _values, result)
                      lexer.lex_state = :expr_fname
                    
    result
end

def _reduce_14(val, _values, result)
                      result = new_alias(val[0], val[1], val[3])
                    
    result
end

def _reduce_15(val, _values, result)
                      result = s(:valias, value(val[1]).to_sym, value(val[2]).to_sym)
                    
    result
end

# reduce 16 omitted

def _reduce_17(val, _values, result)
                      result = s(:valias, value(val[1]).to_sym, value(val[2]).to_sym)
                    
    result
end

def _reduce_18(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_19(val, _values, result)
                      result = new_if(val[1], val[2], val[0], nil)
                    
    result
end

def _reduce_20(val, _values, result)
                      result = new_if(val[1], val[2], nil, val[0])
                    
    result
end

def _reduce_21(val, _values, result)
                      result = new_while(val[1], val[2], val[0])
                    
    result
end

def _reduce_22(val, _values, result)
                      result = new_until(val[1], val[2], val[0])
                    
    result
end

def _reduce_23(val, _values, result)
                      result = new_rescue_mod(val[1], val[0], val[2])
                    
    result
end

# reduce 24 omitted

def _reduce_25(val, _values, result)
                      result = new_assign(val[0], val[1], val[2])
                    
    result
end

def _reduce_26(val, _values, result)
                      result = s(:masgn, val[0], s(:to_ary, val[2]))
                    
    result
end

def _reduce_27(val, _values, result)
                      result = new_op_asgn val[1], val[0], val[2]
                    
    result
end

# reduce 28 omitted

def _reduce_29(val, _values, result)
                      result = s(:op_asgn2, val[0], op_to_setter(val[2]), value(val[3]).to_sym, val[4])
                    
    result
end

# reduce 30 omitted

# reduce 31 omitted

# reduce 32 omitted

def _reduce_33(val, _values, result)
                      result = new_assign val[0], val[1], s(:svalue, val[2])
                    
    result
end

def _reduce_34(val, _values, result)
                      result = s(:masgn, val[0], s(:to_ary, val[2]))
                    
    result
end

def _reduce_35(val, _values, result)
                      result = s(:masgn, val[0], val[2])
                    
    result
end

# reduce 36 omitted

# reduce 37 omitted

def _reduce_38(val, _values, result)
                      result = s(:and, val[0], val[2])
                    
    result
end

def _reduce_39(val, _values, result)
                      result = s(:or, val[0], val[2])
                    
    result
end

def _reduce_40(val, _values, result)
                      result = new_unary_call(['!', []], val[1])
                    
    result
end

def _reduce_41(val, _values, result)
                      result = new_unary_call(val[0], val[1])
                    
    result
end

# reduce 42 omitted

# reduce 43 omitted

# reduce 44 omitted

# reduce 45 omitted

def _reduce_46(val, _values, result)
                      result = new_return(val[0], val[1])
                    
    result
end

def _reduce_47(val, _values, result)
                      result = new_break(val[0], val[1])
                    
    result
end

def _reduce_48(val, _values, result)
                      result = new_next(val[0], val[1])
                    
    result
end

# reduce 49 omitted

# reduce 50 omitted

# reduce 51 omitted

# reduce 52 omitted

def _reduce_53(val, _values, result)
                      result = new_call(nil, val[0], val[1])
                    
    result
end

# reduce 54 omitted

def _reduce_55(val, _values, result)
                      result = new_call(val[0], val[2], val[3])
                    
    result
end

# reduce 56 omitted

def _reduce_57(val, _values, result)
                    result = new_call(val[0], val[2], val[3])
                  
    result
end

# reduce 58 omitted

def _reduce_59(val, _values, result)
                      result = new_super(val[0], val[1])
                    
    result
end

def _reduce_60(val, _values, result)
                      result = new_yield val[1]
                    
    result
end

def _reduce_61(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_62(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_63(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_64(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_65(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_66(val, _values, result)
                      result = val[0] << val[1]
                    
    result
end

def _reduce_67(val, _values, result)
                      result = val[0] << s(:splat, val[2])
                    
    result
end

# reduce 68 omitted

def _reduce_69(val, _values, result)
                      result = val[0] << s(:splat)
                    
    result
end

# reduce 70 omitted

def _reduce_71(val, _values, result)
                      result = s(:array, s(:splat, val[1]))
                    
    result
end

def _reduce_72(val, _values, result)
                      result = s(:array, s(:splat))
                    
    result
end

# reduce 73 omitted

def _reduce_74(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_75(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_76(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

def _reduce_77(val, _values, result)
                      result = val[0] << val[1]
                    
    result
end

# reduce 78 omitted

# reduce 79 omitted

def _reduce_80(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_81(val, _values, result)
                      args = val[2] ? val[2] : []
                      result = s(:attrasgn, val[0], :[]=, s(:arglist, *args))
                    
    result
end

def _reduce_82(val, _values, result)
                      result = new_call val[0], val[2], []
                    
    result
end

# reduce 83 omitted

# reduce 84 omitted

# reduce 85 omitted

# reduce 86 omitted

# reduce 87 omitted

def _reduce_88(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_89(val, _values, result)
                      result = new_js_attrasgn(val[0], :[]=, val[2])
                    
    result
end

def _reduce_90(val, _values, result)
                      result = new_attrasgn(val[0], :[]=, val[2])
                    
    result
end

def _reduce_91(val, _values, result)
                      result = new_js_attrasgn(val[0], value(val[2]).to_sym)
                    
    result
end

def _reduce_92(val, _values, result)
                      result = new_attrasgn(val[0], op_to_setter(val[2]))
                    
    result
end

def _reduce_93(val, _values, result)
                      result = new_attrasgn(val[0], op_to_setter(val[2]))
                    
    result
end

def _reduce_94(val, _values, result)
                      result = new_attrasgn(val[0], op_to_setter(val[2]))
                    
    result
end

def _reduce_95(val, _values, result)
                      result = new_colon2(val[0], val[1], val[2])
                    
    result
end

def _reduce_96(val, _values, result)
                      result = new_colon3(val[0], val[1])
                    
    result
end

# reduce 97 omitted

# reduce 98 omitted

def _reduce_99(val, _values, result)
                      result = new_colon3(val[0], val[1])
                    
    result
end

def _reduce_100(val, _values, result)
                      result = new_const(val[0])
                    
    result
end

def _reduce_101(val, _values, result)
                      result = new_colon2(val[0], val[1], val[2])
                    
    result
end

# reduce 102 omitted

# reduce 103 omitted

# reduce 104 omitted

def _reduce_105(val, _values, result)
                      lexer.lex_state = :expr_end
                      result = val[0]
                    
    result
end

def _reduce_106(val, _values, result)
                      lexer.lex_state = :expr_end
                      result = val[0]
                    
    result
end

def _reduce_107(val, _values, result)
                      result = new_sym(val[0])
                    
    result
end

# reduce 108 omitted

def _reduce_109(val, _values, result)
                      result = s(:undef, val[0])
                    
    result
end

def _reduce_110(val, _values, result)
                      result = val[0] << val[2]
                    
    result
end

# reduce 111 omitted

# reduce 112 omitted

# reduce 113 omitted

# reduce 114 omitted

# reduce 115 omitted

# reduce 116 omitted

# reduce 117 omitted

# reduce 118 omitted

# reduce 119 omitted

# reduce 120 omitted

# reduce 121 omitted

# reduce 122 omitted

# reduce 123 omitted

# reduce 124 omitted

# reduce 125 omitted

# reduce 126 omitted

# reduce 127 omitted

# reduce 128 omitted

# reduce 129 omitted

# reduce 130 omitted

# reduce 131 omitted

# reduce 132 omitted

# reduce 133 omitted

# reduce 134 omitted

# reduce 135 omitted

# reduce 136 omitted

# reduce 137 omitted

# reduce 138 omitted

# reduce 139 omitted

# reduce 140 omitted

# reduce 141 omitted

# reduce 142 omitted

# reduce 143 omitted

# reduce 144 omitted

# reduce 145 omitted

# reduce 146 omitted

# reduce 147 omitted

# reduce 148 omitted

# reduce 149 omitted

# reduce 150 omitted

# reduce 151 omitted

# reduce 152 omitted

# reduce 153 omitted

# reduce 154 omitted

# reduce 155 omitted

# reduce 156 omitted

# reduce 157 omitted

# reduce 158 omitted

# reduce 159 omitted

# reduce 160 omitted

# reduce 161 omitted

# reduce 162 omitted

# reduce 163 omitted

# reduce 164 omitted

# reduce 165 omitted

# reduce 166 omitted

# reduce 167 omitted

# reduce 168 omitted

# reduce 169 omitted

# reduce 170 omitted

# reduce 171 omitted

# reduce 172 omitted

# reduce 173 omitted

# reduce 174 omitted

# reduce 175 omitted

# reduce 176 omitted

# reduce 177 omitted

# reduce 178 omitted

# reduce 179 omitted

# reduce 180 omitted

# reduce 181 omitted

# reduce 182 omitted

# reduce 183 omitted

# reduce 184 omitted

def _reduce_185(val, _values, result)
                      result = new_assign(val[0], val[1], val[2])
                    
    result
end

def _reduce_186(val, _values, result)
                      result = new_assign val[0], val[1], s(:rescue_mod, val[2], val[4])
                    
    result
end

def _reduce_187(val, _values, result)
                      result = new_op_asgn val[1], val[0], val[2]
                    
    result
end

def _reduce_188(val, _values, result)
                      result = new_op_asgn1(val[0], val[2], val[4], val[5])
                    
    result
end

def _reduce_189(val, _values, result)
                      result = s(:op_asgn2, val[0], op_to_setter(val[2]), value(val[3]).to_sym, val[4])
                    
    result
end

# reduce 190 omitted

# reduce 191 omitted

# reduce 192 omitted

# reduce 193 omitted

# reduce 194 omitted

def _reduce_195(val, _values, result)
                      result = new_irange(val[0], val[1], val[2])
                    
    result
end

def _reduce_196(val, _values, result)
                      result = new_erange(val[0], val[1], val[2])
                    
    result
end

def _reduce_197(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_198(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_199(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_200(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_201(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_202(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_203(val, _values, result)
                      result = new_call new_binary_call(new_int(val[1]), val[2], val[3]), [:"-@", []], []
                    
    result
end

def _reduce_204(val, _values, result)
                      result = new_call new_binary_call(new_float(val[1]), val[2], val[3]), [:"-@", []], []
                    
    result
end

def _reduce_205(val, _values, result)
                      result = new_call val[1], [:"+@", []], []
                      if [:int, :float].include? val[1].type
                        result = val[1]
                      end
                    
    result
end

def _reduce_206(val, _values, result)
                      result = new_call val[1], [:"-@", []], []
                      if val[1].type == :int
                        val[1][1] = -val[1][1]
                        result = val[1]
                      elsif val[1].type == :float
                        val[1][1] = -val[1][1].to_f
                        result = val[1]
                      end
                    
    result
end

def _reduce_207(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_208(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_209(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_210(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_211(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_212(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_213(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_214(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_215(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_216(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_217(val, _values, result)
                      result = new_unary_call(['!', []], new_binary_call(
                                 val[0], ['==', []], val[2]))
                    
    result
end

def _reduce_218(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_219(val, _values, result)
                      result = new_not(val[1], new_binary_call(
                                 val[0], ['=~', []], val[2]))
                    
    result
end

def _reduce_220(val, _values, result)
                      result = new_unary_call(val[0], val[1])
                    
    result
end

def _reduce_221(val, _values, result)
                      result = new_unary_call(val[0], val[1])
                    
    result
end

def _reduce_222(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_223(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_224(val, _values, result)
                      result = new_and(val[0], val[1], val[2])
                    
    result
end

def _reduce_225(val, _values, result)
                      result = new_or(val[0], val[1], val[2])
                    
    result
end

def _reduce_226(val, _values, result)
                      result = s(:defined, val[2])
                    
    result
end

def _reduce_227(val, _values, result)
                      result = new_if(val[1], val[0], val[2], val[4])
                    
    result
end

# reduce 228 omitted

# reduce 229 omitted

def _reduce_230(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_231(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_232(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_233(val, _values, result)
                      val[0] << s(:hash, *val[2])
                      result = val[0]
                    
    result
end

def _reduce_234(val, _values, result)
                      result = [s(:hash, *val[0])]
                    
    result
end

def _reduce_235(val, _values, result)
                      result = val[1]
                    
    result
end

# reduce 236 omitted

def _reduce_237(val, _values, result)
                      result = []
                    
    result
end

# reduce 238 omitted

def _reduce_239(val, _values, result)
                      result = []
                    
    result
end

# reduce 240 omitted

def _reduce_241(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_242(val, _values, result)
                      result = val[0]
                      result << new_hash(nil, val[2], nil)
                    
    result
end

def _reduce_243(val, _values, result)
                      result = [new_hash(nil, val[0], nil)]
                    
    result
end

def _reduce_244(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_245(val, _values, result)
                      result = val[0]
                      add_block_pass val[0], val[1]
                    
    result
end

def _reduce_246(val, _values, result)
                      result = [new_hash(nil, val[0], nil)]
                      add_block_pass result, val[1]
                    
    result
end

def _reduce_247(val, _values, result)
                      result = val[0]
                      result << new_hash(nil, val[2], nil)
                    
    result
end

def _reduce_248(val, _values, result)
                      result = []
                      add_block_pass result, val[0]
                    
    result
end

# reduce 249 omitted

# reduce 250 omitted

def _reduce_251(val, _values, result)
                      lexer.cmdarg_push 1
                    
    result
end

def _reduce_252(val, _values, result)
                      lexer.cmdarg_pop
                      result = val[1]
                    
    result
end

# reduce 253 omitted

def _reduce_254(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_255(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_256(val, _values, result)
                      result = new_block_pass(val[0], val[1])
                    
    result
end

def _reduce_257(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_258(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_259(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_260(val, _values, result)
                      result = [new_splat(val[0], val[1])]
                    
    result
end

def _reduce_261(val, _values, result)
                      result = val[0] << val[2]
                    
    result
end

def _reduce_262(val, _values, result)
                      result  = val[0] << new_splat(val[2], val[3])
                    
    result
end

def _reduce_263(val, _values, result)
                      val[0] << val[2]
                      result = s(:array, *val[0])
                    
    result
end

def _reduce_264(val, _values, result)
                      val[0] << s(:splat, val[3])
                      result = s(:array, *val[0])
                    
    result
end

def _reduce_265(val, _values, result)
                      result = s(:splat, val[1])
                    
    result
end

# reduce 266 omitted

# reduce 267 omitted

# reduce 268 omitted

# reduce 269 omitted

# reduce 270 omitted

# reduce 271 omitted

# reduce 272 omitted

# reduce 273 omitted

# reduce 274 omitted

def _reduce_275(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_276(val, _values, result)
                      result = s(:begin, val[2])
                    
    result
end

def _reduce_277(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_278(val, _values, result)
                      result = new_paren(val[0], val[1], val[2])
                    
    result
end

def _reduce_279(val, _values, result)
                      result = new_colon2(val[0], val[1], val[2])
                    
    result
end

def _reduce_280(val, _values, result)
                      result = new_colon3(val[0], val[1])
                    
    result
end

def _reduce_281(val, _values, result)
                      result = new_call val[0], [:[], []], val[2]
                    
    result
end

def _reduce_282(val, _values, result)
                      result = new_js_call val[0], [:[], []], val[2]
                    
    result
end

def _reduce_283(val, _values, result)
                      result = new_array(val[0], val[1], val[2])
                    
    result
end

def _reduce_284(val, _values, result)
                      result = new_hash(val[0], val[1], val[2])
                    
    result
end

def _reduce_285(val, _values, result)
                      result = new_return(val[0])
                    
    result
end

def _reduce_286(val, _values, result)
                      result = new_yield val[2]
                    
    result
end

def _reduce_287(val, _values, result)
                      result = s(:yield)
                    
    result
end

def _reduce_288(val, _values, result)
                      result = s(:yield)
                    
    result
end

def _reduce_289(val, _values, result)
                      result = s(:defined, val[3])
                    
    result
end

def _reduce_290(val, _values, result)
                      result = new_unary_call(['!', []], val[2])
                    
    result
end

def _reduce_291(val, _values, result)
                      result = new_unary_call(['!', []], new_nil(val[0]))
                    
    result
end

def _reduce_292(val, _values, result)
                      result = new_call(nil, val[0], [])
                      result << val[1]
                    
    result
end

# reduce 293 omitted

def _reduce_294(val, _values, result)
                      val[0] << val[1]
                      result = val[0]
                    
    result
end

def _reduce_295(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_296(val, _values, result)
                      result = new_if(val[0], val[1], val[3], val[4])
                    
    result
end

def _reduce_297(val, _values, result)
                      result = new_if(val[0], val[1], val[4], val[3])
                    
    result
end

def _reduce_298(val, _values, result)
                      lexer.cond_push 1
                      result = lexer.line
                    
    result
end

def _reduce_299(val, _values, result)
                      lexer.cond_pop
                    
    result
end

def _reduce_300(val, _values, result)
                      result = s(:while, val[2], val[5])
                    
    result
end

def _reduce_301(val, _values, result)
                      lexer.cond_push 1
                      result = lexer.line
                    
    result
end

def _reduce_302(val, _values, result)
                      lexer.cond_pop
                    
    result
end

def _reduce_303(val, _values, result)
                      result = s(:until, val[2], val[5])
                    
    result
end

def _reduce_304(val, _values, result)
                      result = s(:case, val[1], *val[3])
                    
    result
end

def _reduce_305(val, _values, result)
                      result = s(:case, nil, *val[2])
                    
    result
end

def _reduce_306(val, _values, result)
                      result = s(:case, nil, val[3])
                    
    result
end

def _reduce_307(val, _values, result)
                      lexer.cond_push 1
                      result = lexer.line
                    
    result
end

def _reduce_308(val, _values, result)
                      lexer.cond_pop
                    
    result
end

def _reduce_309(val, _values, result)
                      result = s(:for, val[4], val[1], val[7])
                    
    result
end

def _reduce_310(val, _values, result)
                      # ...
                    
    result
end

def _reduce_311(val, _values, result)
                      result = new_class val[0], val[1], val[2], val[4], val[5]
                    
    result
end

def _reduce_312(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_313(val, _values, result)
                      # ...
                    
    result
end

def _reduce_314(val, _values, result)
                      result = new_sclass(val[0], val[3], val[6], val[7])
                    
    result
end

def _reduce_315(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_316(val, _values, result)
                      # ...
                    
    result
end

def _reduce_317(val, _values, result)
                      result = new_module(val[0], val[2], val[4], val[5])
                    
    result
end

def _reduce_318(val, _values, result)
                      push_scope
                      lexer.lex_state = :expr_endfn
                    
    result
end

def _reduce_319(val, _values, result)
                      result = new_def(val[0], nil, val[1], val[3], val[4], val[5])
                      pop_scope
                    
    result
end

def _reduce_320(val, _values, result)
                       lexer.lex_state = :expr_fname
                    
    result
end

def _reduce_321(val, _values, result)
                      push_scope
                      lexer.lex_state = :expr_endfn
                    
    result
end

def _reduce_322(val, _values, result)
                      result = new_def(val[0], val[1], val[4], val[6], val[7], val[8])
                      pop_scope
                    
    result
end

def _reduce_323(val, _values, result)
                      result = new_break(val[0])
                    
    result
end

def _reduce_324(val, _values, result)
                      result = s(:next)
                    
    result
end

def _reduce_325(val, _values, result)
                      result = s(:redo)
                    
    result
end

# reduce 326 omitted

# reduce 327 omitted

# reduce 328 omitted

# reduce 329 omitted

# reduce 330 omitted

# reduce 331 omitted

# reduce 332 omitted

# reduce 333 omitted

# reduce 334 omitted

def _reduce_335(val, _values, result)
                      result = new_call nil, [:lambda, []], []
                      result << new_iter(val[0], val[1])
                    
    result
end

def _reduce_336(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_337(val, _values, result)
                      result = nil
                    
    result
end

# reduce 338 omitted

# reduce 339 omitted

def _reduce_340(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_341(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_342(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_343(val, _values, result)
                      result = new_if(val[0], val[1], val[3], val[4])
                    
    result
end

# reduce 344 omitted

def _reduce_345(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_346(val, _values, result)
                      result = s(:block, val[0])
                    
    result
end

def _reduce_347(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_348(val, _values, result)
                      result = new_assign(new_assignable(new_ident(
                                  val[0])), val[1], val[2])
                    
    result
end

# reduce 349 omitted

def _reduce_350(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_351(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_352(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_353(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_354(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_355(val, _values, result)
                      nil
                    
    result
end

def _reduce_356(val, _values, result)
                      result = new_block_args(val[0], val[2], val[4], val[5])
                    
    result
end

def _reduce_357(val, _values, result)
                      result = new_block_args(val[0], val[2], nil, val[3])
                    
    result
end

def _reduce_358(val, _values, result)
                      result = new_block_args(val[0], nil, val[2], val[3])
                    
    result
end

def _reduce_359(val, _values, result)
                      result = new_block_args(val[0], nil, nil, nil)
                    
    result
end

def _reduce_360(val, _values, result)
                      result = new_block_args(val[0], nil, nil, val[1])
                    
    result
end

def _reduce_361(val, _values, result)
                      result = new_block_args(nil, val[0], val[2], val[3])
                    
    result
end

def _reduce_362(val, _values, result)
                      result = new_block_args(nil, val[0], nil, val[1])
                    
    result
end

def _reduce_363(val, _values, result)
                      result = new_block_args(nil, nil, val[0], val[1])
                    
    result
end

def _reduce_364(val, _values, result)
                      result = new_block_args(nil, nil, nil, val[0])
                    
    result
end

def _reduce_365(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_366(val, _values, result)
                      result = new_iter val[2], val[3]
                      pop_scope
                    
    result
end

def _reduce_367(val, _values, result)
                      val[0] << val[1]
                      result = val[0]
                    
    result
end

# reduce 368 omitted

# reduce 369 omitted

def _reduce_370(val, _values, result)
                      result = new_call(nil, val[0], val[1])
                    
    result
end

def _reduce_371(val, _values, result)
                      result = new_call(val[0], val[2], val[3])
                    
    result
end

def _reduce_372(val, _values, result)
                      result = new_js_call(val[0], val[2], val[3])
                    
    result
end

def _reduce_373(val, _values, result)
                      result = new_js_call(val[0], val[2])
                    
    result
end

def _reduce_374(val, _values, result)
                      result = new_call(val[0], [:call, []], val[2])
                    
    result
end

def _reduce_375(val, _values, result)
                      result = new_call(val[0], val[2], val[3])
                    
    result
end

def _reduce_376(val, _values, result)
                      result = new_call(val[0], val[2])
                    
    result
end

def _reduce_377(val, _values, result)
                      result = new_super(val[0], val[1])
                    
    result
end

def _reduce_378(val, _values, result)
                      result = new_super(val[0], nil)
                    
    result
end

def _reduce_379(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_380(val, _values, result)
                      result = new_iter val[2], val[3]
                      pop_scope
                    
    result
end

def _reduce_381(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_382(val, _values, result)
                      result = new_iter val[2], val[3]
                      pop_scope
                    
    result
end

def _reduce_383(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_384(val, _values, result)
                      part = s(:when, s(:array, *val[2]), val[4])
                      result = [part]
                      result.push(*val[5]) if val[5]
                    
    result
end

def _reduce_385(val, _values, result)
                      result = [val[0]]
                    
    result
end

# reduce 386 omitted

def _reduce_387(val, _values, result)
                      exc = val[1] || s(:array)
                      exc << new_assign(val[2], val[2], s(:gvar, '$!'.intern)) if val[2]
                      result = [s(:resbody, exc, val[4])]
                      result.push val[5].first if val[5]
                    
    result
end

def _reduce_388(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_389(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

# reduce 390 omitted

# reduce 391 omitted

def _reduce_392(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_393(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_394(val, _values, result)
                      result = val[1].nil? ? s(:nil) : val[1]
                    
    result
end

# reduce 395 omitted

# reduce 396 omitted

# reduce 397 omitted

# reduce 398 omitted

def _reduce_399(val, _values, result)
                      result = new_str val[0]
                    
    result
end

# reduce 400 omitted

def _reduce_401(val, _values, result)
                    result = str_append val[0], val[1]
                  
    result
end

def _reduce_402(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_403(val, _values, result)
                      result = s(:str, value(val[0]))
                    
    result
end

def _reduce_404(val, _values, result)
                      result = new_xstr(val[0], val[1], val[2])
                    
    result
end

def _reduce_405(val, _values, result)
                      result = new_regexp val[1], val[2]
                    
    result
end

def _reduce_406(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_407(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_408(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_409(val, _values, result)
                      part = val[1]
                      part = s(:dstr, "", val[1]) if part.type == :evstr
                      result = val[0] << part
                    
    result
end

def _reduce_410(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_411(val, _values, result)
                      result = val[0].concat([val[1]])
                    
    result
end

def _reduce_412(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_413(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_414(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_415(val, _values, result)
                      result = val[0] << s(:str, value(val[1]))
                    
    result
end

def _reduce_416(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_417(val, _values, result)
                      result = str_append val[0], val[1]
                    
    result
end

def _reduce_418(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_419(val, _values, result)
                      result = str_append val[0], val[1]
                    
    result
end

def _reduce_420(val, _values, result)
                      result = new_str_content(val[0])
                    
    result
end

def _reduce_421(val, _values, result)
                      result = lexer.strterm
                      lexer.strterm = nil
                    
    result
end

def _reduce_422(val, _values, result)
                      lexer.strterm = val[1]
                      result = new_evstr(val[2])
                    
    result
end

def _reduce_423(val, _values, result)
                      lexer.cond_push 0
                      lexer.cmdarg_push 0
                      result = lexer.strterm
                      lexer.strterm = nil
                      lexer.lex_state = :expr_beg
                    
    result
end

def _reduce_424(val, _values, result)
                      lexer.strterm = val[1]
                      lexer.cond_lexpop
                      lexer.cmdarg_lexpop
                      result = new_evstr(val[2])
                    
    result
end

def _reduce_425(val, _values, result)
                      result = new_gvar(val[0])
                    
    result
end

def _reduce_426(val, _values, result)
                      result = new_ivar(val[0])
                    
    result
end

def _reduce_427(val, _values, result)
                      result = new_cvar(val[0])
                    
    result
end

# reduce 428 omitted

def _reduce_429(val, _values, result)
                      result = new_sym(val[1])
                      lexer.lex_state = :expr_end
                    
    result
end

def _reduce_430(val, _values, result)
                      result = new_sym(val[0])
                    
    result
end

# reduce 431 omitted

# reduce 432 omitted

# reduce 433 omitted

# reduce 434 omitted

def _reduce_435(val, _values, result)
                      result = new_dsym val[1]
                    
    result
end

def _reduce_436(val, _values, result)
                      result = new_int(val[0])
                    
    result
end

def _reduce_437(val, _values, result)
                      result = new_float(val[0])
                    
    result
end

def _reduce_438(val, _values, result)
                    result = negate_num(new_int(val[1]))
                  
    result
end

def _reduce_439(val, _values, result)
                    result = negate_num(new_float(val[1]))
                  
    result
end

def _reduce_440(val, _values, result)
                    result = new_int(val[1])
                  
    result
end

def _reduce_441(val, _values, result)
                    result = new_float(val[1])
                  
    result
end

def _reduce_442(val, _values, result)
                      result = new_ident(val[0])
                    
    result
end

def _reduce_443(val, _values, result)
                      result = new_ivar(val[0])
                    
    result
end

def _reduce_444(val, _values, result)
                      result = new_gvar(val[0])
                    
    result
end

def _reduce_445(val, _values, result)
                      result = new_const(val[0])
                    
    result
end

def _reduce_446(val, _values, result)
                      result = new_cvar(val[0])
                    
    result
end

def _reduce_447(val, _values, result)
                      result = new_nil(val[0])
                    
    result
end

def _reduce_448(val, _values, result)
                      result = new_self(val[0])
                    
    result
end

def _reduce_449(val, _values, result)
                      result = new_true(val[0])
                    
    result
end

def _reduce_450(val, _values, result)
                      result = new_false(val[0])
                    
    result
end

def _reduce_451(val, _values, result)
                      result = new___FILE__(val[0])
                    
    result
end

def _reduce_452(val, _values, result)
                      result = new___LINE__(val[0])
                    
    result
end

def _reduce_453(val, _values, result)
                      result = new_var_ref(val[0])
                    
    result
end

def _reduce_454(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_455(val, _values, result)
                      result = s(:nth_ref, value(val[0]))
                    
    result
end

# reduce 456 omitted

def _reduce_457(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_458(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_459(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_460(val, _values, result)
                      result = val[1]
                      lexer.lex_state = :expr_beg
                    
    result
end

def _reduce_461(val, _values, result)
                      result = val[0]
                      lexer.lex_state = :expr_beg
                    
    result
end

# reduce 462 omitted

# reduce 463 omitted

def _reduce_464(val, _values, result)
                      result = new_kwrestarg(val[1])
                    
    result
end

def _reduce_465(val, _values, result)
                      result = new_kwrestarg()
                    
    result
end

def _reduce_466(val, _values, result)
                      result = new_sym(val[0])
                    
    result
end

def _reduce_467(val, _values, result)
                      result = new_kwoptarg(val[0], val[1])
                    
    result
end

def _reduce_468(val, _values, result)
                      result = new_kwarg(val[0])
                    
    result
end

def _reduce_469(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_470(val, _values, result)
                      result = val[0]
                      result << val[2]
                    
    result
end

def _reduce_471(val, _values, result)
                      result = new_args_tail(val[0], val[2], val[3])
                    
    result
end

def _reduce_472(val, _values, result)
                      result = new_args_tail(val[0], nil, val[1])
                    
    result
end

def _reduce_473(val, _values, result)
                      result = new_args_tail(nil, val[0], val[1])
                    
    result
end

def _reduce_474(val, _values, result)
                      result = new_args_tail(nil, nil, val[0])
                    
    result
end

def _reduce_475(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_476(val, _values, result)
                      result = new_args_tail(nil, nil, nil)
                    
    result
end

def _reduce_477(val, _values, result)
                      result = new_args(val[0], val[2], val[4], val[5])
                    
    result
end

def _reduce_478(val, _values, result)
                      result = new_args(val[0], val[2], nil, val[3])
                    
    result
end

def _reduce_479(val, _values, result)
                      result = new_args(val[0], nil, val[2], val[3])
                    
    result
end

def _reduce_480(val, _values, result)
                      result = new_args(val[0], nil, nil, val[1])
                    
    result
end

def _reduce_481(val, _values, result)
                      result = new_args(nil, val[0], val[2], val[3])
                    
    result
end

def _reduce_482(val, _values, result)
                      result = new_args(nil, val[0], nil, val[1])
                    
    result
end

def _reduce_483(val, _values, result)
                      result = new_args(nil, nil, val[0], val[1])
                    
    result
end

def _reduce_484(val, _values, result)
                      result = new_args(nil, nil, nil, val[0])
                    
    result
end

def _reduce_485(val, _values, result)
                      result = new_args(nil, nil, nil, nil)
                    
    result
end

# reduce 486 omitted

def _reduce_487(val, _values, result)
                      result = value(val[0]).to_sym
                      scope.add_local result
                    
    result
end

def _reduce_488(val, _values, result)
                      raise 'formal argument cannot be a constant'
                    
    result
end

def _reduce_489(val, _values, result)
                      raise 'formal argument cannot be an instance variable'
                    
    result
end

def _reduce_490(val, _values, result)
                      raise 'formal argument cannot be a class variable'
                    
    result
end

def _reduce_491(val, _values, result)
                      raise 'formal argument cannot be a global variable'
                    
    result
end

def _reduce_492(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_493(val, _values, result)
                      result = val[1]
                    
    result
end

# reduce 494 omitted

# reduce 495 omitted

def _reduce_496(val, _values, result)
                      result = s(:lasgn, val[0])
                    
    result
end

# reduce 497 omitted

def _reduce_498(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

def _reduce_499(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

# reduce 500 omitted

# reduce 501 omitted

# reduce 502 omitted

# reduce 503 omitted

# reduce 504 omitted

def _reduce_505(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_506(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_507(val, _values, result)
                      result = new_assign(new_assignable(new_ident(val[0])), val[1], val[2])
                    
    result
end

def _reduce_508(val, _values, result)
                      result = s(:block, val[0])
                    
    result
end

def _reduce_509(val, _values, result)
                      result = val[0]
                      val[0] << val[2]
                    
    result
end

# reduce 510 omitted

# reduce 511 omitted

def _reduce_512(val, _values, result)
                      result = "*#{value(val[1])}".to_sym
                    
    result
end

def _reduce_513(val, _values, result)
                      result = :"*"
                    
    result
end

# reduce 514 omitted

# reduce 515 omitted

def _reduce_516(val, _values, result)
                      result = "&#{value(val[1])}".to_sym
                    
    result
end

def _reduce_517(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_518(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_519(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_520(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_521(val, _values, result)
                      result = []
                    
    result
end

def _reduce_522(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_523(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_524(val, _values, result)
                      result = val[0].push(*val[2])
                    
    result
end

def _reduce_525(val, _values, result)
                      result = [val[0], val[2]]
                    
    result
end

def _reduce_526(val, _values, result)
                      result = [new_sym(val[0]), val[1]]
                    
    result
end

# reduce 527 omitted

# reduce 528 omitted

# reduce 529 omitted

# reduce 530 omitted

# reduce 531 omitted

# reduce 532 omitted

# reduce 533 omitted

# reduce 534 omitted

# reduce 535 omitted

# reduce 536 omitted

# reduce 537 omitted

# reduce 538 omitted

# reduce 539 omitted

# reduce 540 omitted

# reduce 541 omitted

# reduce 542 omitted

# reduce 543 omitted

# reduce 544 omitted

# reduce 545 omitted

# reduce 546 omitted

# reduce 547 omitted

# reduce 548 omitted

# reduce 549 omitted

def _reduce_550(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module Opal
