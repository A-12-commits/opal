#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.13
# from Racc grammer file "".
#

require 'racc/parser.rb'
module Opal
  class Parser < Racc::Parser


##### State transition tables begin ###

clist = [
'63,64,65,8,51,-99,-97,-96,57,58,273,607,273,61,558,59,60,62,23,24,66',
'67,607,544,754,612,546,22,28,27,90,89,91,92,751,101,17,-68,619,877,100',
'876,7,41,6,9,94,93,84,50,86,85,87,-92,88,95,96,-99,81,82,552,38,39,205',
'206,597,344,343,205,206,609,608,-534,-79,205,206,268,575,-95,770,227',
'609,608,36,575,575,30,607,-94,52,-93,54,-97,32,272,268,272,40,575,618',
'-98,653,-92,752,808,18,575,-96,-88,-87,79,73,75,76,77,78,-99,-100,-99',
'74,80,-99,810,-95,63,64,65,56,51,-98,53,602,57,58,652,37,83,61,603,59',
'60,62,258,259,66,67,609,608,610,268,308,257,291,295,90,89,91,92,101',
'-90,219,308,551,100,-92,-535,-92,41,596,-92,94,93,84,50,86,85,87,-94',
'88,95,96,-90,81,82,-534,38,39,101,101,-95,574,-95,100,100,-95,101,101',
'574,574,900,100,100,-89,-97,-84,-97,-535,210,-97,101,214,574,-100,52',
'100,54,-88,101,-96,574,-96,40,100,-96,726,-86,-94,487,-100,218,-100',
'205,206,-100,79,73,75,76,77,78,-98,653,-98,74,80,-98,-89,-90,-255,-255',
'-255,56,-255,-91,53,706,-255,-255,273,37,83,-255,73,-255,-255,-255,-255',
'-255,-255,-255,74,789,344,343,652,-255,-255,-255,-255,-255,-255,-255',
'-88,-90,-255,649,400,401,-94,531,-94,-255,-90,-94,-255,-255,-255,-255',
'-255,-255,-255,-255,-255,-255,-255,-86,-255,-255,227,-255,-255,-535',
'-89,653,-91,726,227,-452,-88,-91,-97,101,268,725,-452,227,100,-88,-85',
'-90,-87,-255,-85,788,-255,268,726,-255,-99,-255,-84,-255,272,-255,653',
'-255,652,224,-89,-453,607,226,225,-255,308,-91,-453,-89,-255,-255,-255',
'-255,-255,-255,-91,205,206,-255,-255,205,206,-86,63,64,65,-255,51,652',
'-255,813,57,58,-95,-255,-255,61,607,59,60,62,258,259,66,67,544,-534',
'-87,546,-85,257,291,295,90,89,91,92,-84,-86,219,609,608,620,101,607',
'725,292,-86,100,94,93,84,50,86,85,361,716,88,95,96,-458,81,82,-87,101',
'-85,725,544,718,100,546,531,-87,-84,-85,227,609,608,605,264,265,819',
'-84,101,-449,820,362,266,100,214,-451,-449,52,412,54,-456,558,-451,414',
'413,777,631,-456,609,608,614,224,101,561,-92,226,225,100,79,73,75,76',
'77,78,915,-99,101,74,80,754,-446,100,-536,-536,-536,56,-536,-446,53',
'751,-536,-536,807,296,83,-536,-88,-536,-536,-536,-536,-536,-536,-536',
'-93,-97,754,630,823,-536,-536,-536,-536,-536,-536,-536,751,-458,-536',
'341,340,344,343,204,227,-536,824,454,-536,-536,-536,-536,-536,-536,-536',
'-536,-536,-536,-536,-455,-536,-536,776,-536,-536,-454,-455,-86,344,343',
'544,561,-454,543,827,224,-95,-84,752,226,225,222,223,-91,702,-536,-92',
'694,-536,-536,813,-536,-100,-536,836,-536,-100,-536,813,-536,582,101',
'-85,708,101,752,100,-536,581,100,582,-94,-536,-536,-536,-536,-536,-536',
'915,527,528,-536,-536,754,832,813,-537,-537,-537,-536,-537,837,-536',
'751,-537,-537,215,-536,-536,-537,839,-537,-537,-537,-537,-537,-537,-537',
'341,340,344,343,701,-537,-537,-537,-537,-537,-537,-537,708,700,-537',
'341,340,344,343,301,302,-537,205,206,-537,-537,-537,-537,-537,-537,-537',
'-537,-537,-537,-537,547,-537,-537,548,-537,-537,227,832,813,524,534',
'840,563,456,336,334,333,535,335,752,344,343,341,340,344,343,-537,489',
'-534,-537,-537,842,-537,455,-537,491,-537,224,-537,491,-537,226,225',
'222,223,866,867,694,-537,868,95,96,453,-537,-537,-537,-537,-537,-537',
'537,721,850,-537,-537,452,684,451,-255,-255,-255,-537,-255,852,-537',
'855,-255,-255,856,-537,-537,-255,858,-255,-255,-255,-255,-255,-255,-255',
'103,104,105,106,107,-255,-255,-255,-255,-255,-255,-255,860,862,-255',
'555,864,803,682,625,-79,-255,-265,681,-255,-255,-255,-255,-255,-255',
'-255,-255,-255,-255,-255,268,-255,-255,679,-255,-255,227,231,236,237',
'238,233,235,243,244,239,240,203,449,220,221,559,671,241,242,450,-255',
'670,308,-255,268,415,-255,561,-255,802,-255,224,-255,230,-255,226,225',
'222,223,234,232,228,-255,229,570,-283,-283,-255,-255,-255,-255,-255',
'-255,-283,571,533,-255,-255,-535,245,878,63,64,65,-255,51,452,-255,451',
'57,58,879,-255,-255,61,880,59,60,62,258,259,66,67,881,-532,402,883,884',
'257,28,27,90,89,91,92,694,582,219,886,729,-283,-263,-283,890,41,800',
'227,94,93,84,50,86,85,87,261,88,95,96,497,81,82,895,38,39,227,231,236',
'237,238,233,235,243,244,239,240,-449,-449,220,221,227,897,241,242,-449',
'210,391,388,214,-532,491,52,227,54,227,256,224,404,230,40,226,225,222',
'223,234,232,228,218,229,-532,903,905,79,73,75,76,77,78,906,308,587,74',
'80,489,245,650,63,64,65,56,51,-449,53,-449,57,58,588,37,83,61,589,59',
'60,62,258,259,66,67,103,104,105,106,107,257,28,27,90,89,91,92,268,532',
'219,919,-266,-67,629,625,628,41,-263,627,94,93,84,50,86,85,87,261,88',
'95,96,921,81,82,308,38,39,227,231,236,237,238,233,235,243,244,239,240',
'203,201,220,221,792,300,241,242,202,210,-535,561,214,524,946,52,791',
'54,931,256,224,947,230,40,226,225,222,223,234,232,228,218,229,932,299',
'624,79,73,75,76,77,78,514,-286,-286,74,80,937,245,855,-233,-286,939',
'56,860,199,53,200,860,862,515,37,83,63,64,65,8,51,945,246,586,57,58',
'268,497,621,61,948,59,60,62,23,24,66,67,103,104,105,106,107,22,28,27',
'90,89,91,92,617,-286,17,-286,613,516,198,954,7,41,497,9,94,93,84,50',
'86,85,87,197,88,95,96,700,81,82,196,38,39,227,231,236,237,238,233,235',
'243,244,239,240,524,521,220,221,308,497,241,242,522,36,195,772,30,-331',
'-331,52,964,54,860,32,224,-331,230,40,226,225,222,223,234,232,228,18',
'229,966,967,108,79,73,75,76,77,78,525,524,584,74,80,277,245,97,-233',
'585,-264,56,,520,53,523,,,,37,83,63,64,65,8,51,-331,,-331,57,58,,,,61',
',59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,583,17,586,,,,,7,41',
',9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,227,231,236,237,238',
'233,235,243,244,239,240,524,593,220,221,,,241,242,591,36,,,30,524,593',
'52,,54,,32,224,822,230,40,226,225,222,223,234,232,228,18,229,,,,79,73',
'75,76,77,78,,-284,-284,74,80,,245,,,-284,,56,,592,53,523,,,,37,83,63',
'64,65,8,51,592,,523,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27',
'90,89,91,92,,-284,17,-284,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95,96',
',81,82,,38,39,227,231,236,237,238,233,235,243,244,239,240,,,220,221',
',,241,242,,36,,,30,,,52,,54,,32,224,,230,40,226,225,222,223,234,232',
'228,18,229,,,,79,73,75,76,77,78,,,,74,80,,245,,63,64,65,56,51,,53,,57',
'58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,28,27,90,89,91,92,,563',
'219,336,334,333,,335,,41,,,94,93,84,50,86,85,87,261,88,95,96,,81,82',
',38,39,227,231,236,237,238,233,235,243,244,239,240,,,220,221,,,241,242',
',210,,,214,,,52,,54,,256,224,,230,40,226,225,222,223,234,232,228,218',
'229,,,,79,73,75,76,77,78,,,,74,80,,245,,63,64,65,56,51,,53,,57,58,,37',
'83,61,,59,60,62,258,259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,',
',,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,227,231,236,237',
'238,233,235,243,244,239,240,,,220,221,,,241,242,,210,,,214,,,52,,54',
',,224,,230,40,226,225,222,223,234,232,228,218,229,,,,79,73,75,76,77',
'78,,,,74,80,,245,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,23,24',
'66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,84,50,86,85,87',
',88,95,96,,81,82,,38,39,227,231,236,237,238,233,235,243,244,239,240',
',,220,221,,,241,242,,210,,,214,215,,52,,54,,,224,,230,40,226,225,222',
'223,234,232,228,18,229,,,,79,73,75,76,77,78,,,,74,80,,245,,63,64,65',
'56,51,,53,,57,58,,37,83,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89',
'91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39',
'227,231,236,237,238,233,235,243,244,239,240,,,220,221,,,241,242,,210',
',,214,,,52,,54,,,224,,230,40,226,225,222,223,234,232,228,218,229,,,',
'79,73,75,76,77,78,,,,74,80,,245,,,,,56,,,53,,,,,37,83,63,64,65,8,51',
',,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17',
',,,,,7,41,,9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,227,231,236',
'237,238,233,235,243,244,239,240,,,220,221,,,241,242,,36,,,30,,,52,,54',
',32,224,,230,40,226,225,222,223,234,232,228,18,229,,,,79,73,75,76,77',
'78,,,,74,80,,245,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258',
'259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,227,231,236,237,238,233,235,243,244',
'239,240,,,220,221,,,241,242,,210,,,214,,,52,,54,,658,224,254,230,40',
'226,225,222,223,234,232,228,218,229,,,,79,73,75,76,77,78,,,,74,80,,245',
',63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257',
'28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,261,88,95,96',
',81,82,,38,39,227,231,236,237,238,233,235,243,244,239,240,,,220,221',
',,241,242,,210,,,214,,,52,,54,,256,224,254,230,40,226,225,222,223,234',
'232,228,218,229,,,,79,73,75,76,77,78,,,,74,80,,245,,63,64,65,56,51,',
'53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,28,27,90,89,91',
'92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,261,88,95,96,,81,82,,38,39',
'227,231,236,237,238,233,235,243,244,239,240,,,220,221,,,241,242,,210',
',,214,,,52,,54,,256,224,254,230,40,226,225,222,223,234,232,228,218,229',
',,,79,73,75,76,77,78,,,,74,80,,245,,63,64,65,56,51,,53,,57,58,,37,83',
'61,,59,60,62,258,259,66,67,,,,,,257,28,27,90,89,91,92,,,219,,,,,,,41',
',,94,93,84,50,86,85,87,261,88,95,96,,81,82,,38,39,227,231,236,237,238',
'233,235,243,244,239,240,,,220,221,,,241,242,,210,,,214,,,52,,54,,256',
'224,254,230,40,226,225,222,223,234,232,228,218,229,,,,79,73,75,76,77',
'78,,,,74,80,,245,,,,,56,,,53,,,,,37,83,63,64,65,8,51,,,,57,58,,,,61',
',59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94',
'93,84,50,86,85,87,,88,95,96,,81,82,,38,39,227,231,236,237,238,233,235',
'243,244,239,240,,,220,221,,,241,242,,36,,,30,,,52,,54,,32,224,,230,40',
'226,225,222,223,234,232,228,18,229,,,,79,73,75,76,77,78,,,,74,80,,245',
',,,,56,,,53,,,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66',
'67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87',
',88,95,96,,81,82,,38,39,227,231,236,237,238,233,235,243,244,239,240',
',,220,221,,,241,242,,36,,,30,,,52,,54,,32,224,,230,40,226,225,222,223',
'234,232,228,18,229,,,,79,73,75,76,77,78,,,,74,80,,245,,-255,-255,-255',
'56,-255,,53,,-255,-255,,37,83,-255,,-255,-255,-255,-255,-255,-255,-255',
',,,,,-255,-255,-255,-255,-255,-255,-255,,,-255,,,,,,,-255,,,-255,-255',
'-255,-255,-255,-255,-255,-255,-255,-255,-255,,-255,-255,,-255,-255,227',
'231,236,237,238,233,235,243,244,239,240,,,220,221,,,241,242,,-255,,',
'-255,268,,-255,,-255,,-255,224,-255,230,-255,226,225,222,223,234,232',
'228,-255,229,,,,-255,-255,-255,-255,-255,-255,,,,-255,-255,,245,,63',
'64,65,-255,51,,-255,,57,58,,-255,-255,61,,59,60,62,258,259,66,67,,,',
',,257,291,295,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88',
'95,96,227,81,82,,38,39,563,,336,334,333,,335,,,,,241,242,,,327,,336',
'334,333,210,335,,214,,224,52,230,54,226,225,222,223,,40,228,,229,566',
',,,218,,,569,,79,73,75,76,77,78,338,,,74,80,,,341,340,344,343,56,,,53',
',,,794,37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,',
',22,28,27,90,89,91,92,,563,17,336,334,333,,335,7,41,,9,94,93,84,50,86',
'85,87,,88,95,96,,81,82,,38,39,563,,336,334,333,,335,,,,566,,,,,,,829',
',,36,,,281,,,52,,54,,32,,,,40,,,,566,,,,18,,,569,,79,73,75,76,77,78',
',,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66',
'67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,292,,,94,93,84,50,86,85',
'87,,88,95,96,,81,82,327,,336,334,333,,335,,,,,,,,,,,,,,,,,289,,,286',
',,52,,54,,285,,,,,338,,,,,,,341,340,344,343,,79,73,75,76,77,78,,,,74',
'80,,,,63,64,65,56,51,,53,,57,58,,296,83,61,,59,60,62,258,259,66,67,',
',,,,257,291,295,90,89,91,92,,,219,,,,,,,292,,,94,93,84,50,86,85,87,',
'88,95,96,,81,82,764,,336,334,333,754,335,,,,,,,,,751,,,,,,,,289,,,214',
',,52,,54,,,,,,,338,,,,,,,341,340,344,343,,79,73,75,76,77,78,,,,74,80',
',,,298,,,56,,,53,,,,,296,83,63,64,65,,51,,,752,57,58,,,,61,,59,60,62',
'258,259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,41,,,94,93,84',
'50,86,85,87,,88,95,96,,81,82,,38,39,227,-555,-555,-555,-555,233,235',
',,-555,-555,,,,,,,241,242,,210,,,214,,,52,,54,,658,224,,230,40,226,225',
'222,223,234,232,228,218,229,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65',
'56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,291,295',
'90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,',
'38,39,227,231,236,237,238,233,235,243,244,239,240,,,-555,-555,,,241',
'242,,210,,,214,,,52,,54,,,224,,230,40,226,225,222,223,234,232,228,218',
'229,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83',
'61,,59,60,62,258,259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,',
'292,,,94,93,84,50,86,85,87,,88,95,96,227,81,82,327,,336,334,333,,335',
',,,,,,,241,242,,,,,,,,926,,,214,,224,52,230,54,226,225,222,223,,,338',
',554,,,,,341,340,344,343,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56',
'51,,53,,57,58,,296,83,61,,59,60,62,258,259,66,67,,,,,,257,291,295,90',
'89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,261,88,95,96,,81,82,',
'38,39,227,231,236,237,238,233,235,243,,239,240,,,,,,,241,242,,210,,',
'214,,,52,,54,,658,224,254,230,40,226,225,222,223,234,232,228,218,229',
',,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61',
',59,60,62,258,259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,41',
',,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,227,231,236,237,238,233',
'235,,,239,240,,,,,,,241,242,,210,,,214,,,52,,54,,,224,,230,40,226,225',
'222,223,234,232,228,218,229,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65',
'56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,291,295',
'90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,',
'38,39,227,231,236,237,238,233,235,243,244,239,240,,,-555,-555,,,241',
'242,,210,,,214,,,52,,54,,,224,,230,40,226,225,222,223,234,232,228,218',
'229,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83',
'61,,59,60,62,258,259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,',
'41,,,94,93,84,50,86,85,87,,88,95,96,227,81,82,,38,39,,,,,,,,,,,,241',
'242,,,327,,336,334,333,210,335,,214,,224,52,230,54,226,225,222,223,',
'40,228,,229,,,,,218,,,,,79,73,75,76,77,78,338,322,,74,80,,,341,340,344',
'343,56,,,53,,,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66',
'67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87',
',88,95,96,,81,82,,38,39,227,-555,-555,-555,-555,233,235,,,-555,-555',
',,,,,,241,242,,36,,,30,,,52,,54,,32,224,,230,40,226,225,222,223,234',
'232,228,18,229,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,',
'57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,291,295,90,89,91,92',
',,219,,,,,,,41,,,94,93,84,50,86,85,87,261,88,95,96,,81,82,,38,39,227',
'-555,-555,-555,-555,233,235,,,-555,-555,,,,,,,241,242,,210,,,214,,,52',
',54,,,224,254,230,40,226,225,222,223,234,232,228,218,229,,,,79,73,75',
'76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258',
'259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50',
'86,85,87,261,88,95,96,,81,82,,38,39,227,-555,-555,-555,-555,233,235',
',,-555,-555,,,,,,,241,242,,210,,,214,,,52,,54,,,224,254,230,40,226,225',
'222,223,234,232,228,218,229,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65',
'56,51,,53,,57,58,,37,83,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89',
'91,92,,,17,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,227',
'-555,-555,-555,-555,233,235,,,-555,-555,,,,,,,241,242,,210,,,214,,,52',
',54,,,224,,230,40,226,225,222,223,234,232,228,18,229,,,,79,73,75,76',
'77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258',
'259,66,67,,,,,,257,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86',
'85,87,261,88,95,96,,81,82,,38,39,227,-555,-555,-555,-555,233,235,,,-555',
'-555,,,,,,,241,242,,210,,,214,,,52,,54,,256,224,,230,40,226,225,222',
'223,234,232,228,218,229,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56',
'51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,291,295,90',
'89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,261,88,95,96,227,81,82',
',38,39,,,,,,,,,,,,241,242,,,,,,,,210,,,214,,224,52,230,54,226,225,222',
'223,,40,228,,229,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65',
'56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,291,295',
'90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,227,81,82',
',38,39,,,,,,,,,,,,241,242,,,,,,,,210,,,214,,224,52,230,54,226,225,222',
'223,,40,228,,229,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65',
'56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,291,295',
'90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,227,81,82',
',38,39,,,,,,,,,,,,241,242,,,,,,,,210,,,214,,224,52,,54,226,225,222,223',
',40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53',
',57,58,,37,83,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17',
',,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,227,81,82,,38,39,,,,,,,,,',
',,241,242,,,,,,,,210,,,214,,224,52,230,54,226,225,222,223,,40,,,,,,',
',18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37',
'83,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41',
',,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210',
',,214,,,52,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63',
'64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,23,24,66,67,,,,,,22,28,27',
'90,89,91,92,,,17,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,18,,,,,79,73',
'75,76,77,78,,,,74,80,101,,,,,100,56,,,53,,,,,37,83,63,64,65,,51,,,,57',
'58,,,,61,,59,60,62,258,259,66,67,,,,,,257,291,295,90,89,91,92,,,219',
',,,,,,292,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,,,,,,,,,,,,,,,,,',
',,,,,356,,,30,,,52,,54,,32,,,,,,,,,,,,,,,,,79,73,75,76,77,78,,,,74,80',
',,,63,64,65,56,51,,53,,57,58,,296,83,61,,59,60,62,258,259,66,67,,,,',
',257,291,295,90,89,91,92,,,219,,,,,,,292,,,94,93,84,50,86,85,361,,88',
'95,96,,81,82,,,,,,,,,,,,,,,,,,,,,367,,,362,,,214,,,52,,54,,,,,,,,,,',
',,,,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,296',
'83,61,,59,60,62,258,259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,',
',,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,',
',,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,',
'74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,23,24,66,67,',
',,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,84,50,86,85,87,,88,95',
'96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,',
',,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,,37,83,63,64,65',
'8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92',
',,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,',
',,,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,,,,,37,83,63,64,65,8,51,,,,57,58,,,,61',
',59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94',
'93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30',
',,52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64',
'65,56,51,,53,,57,58,,37,83,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90',
'89,91,92,,,17,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,18,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,,,,,37,83,63,64,65,8,51,,,,57,58,,,',
'61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9',
'94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36',
',,30,,,52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,',
'-531,-531,-531,56,-531,,53,,-531,-531,,37,83,-531,,-531,-531,-531,-531',
'-531,-531,-531,,-531,,,,-531,-531,-531,-531,-531,-531,-531,,,-531,,',
',,,,-531,,,-531,-531,-531,-531,-531,-531,-531,-531,-531,-531,-531,,-531',
'-531,,-531,-531,,,,,,,,,,,,,,,,,,,,,-531,,,-531,-531,,-531,,-531,,-531',
',-531,,-531,,,,,,,,-531,,-531,,,-531,-531,-531,-531,-531,-531,,,,-531',
'-531,,,,-532,-532,-532,-531,-532,,-531,,-532,-532,,-531,-531,-532,,-532',
'-532,-532,-532,-532,-532,-532,,-532,,,,-532,-532,-532,-532,-532,-532',
'-532,,,-532,,,,,,,-532,,,-532,-532,-532,-532,-532,-532,-532,-532,-532',
'-532,-532,,-532,-532,,-532,-532,,,,,,,,,,,,,,,,,,,,,-532,,,-532,-532',
',-532,,-532,,-532,,-532,,-532,,,,,,,,-532,,-532,,,-532,-532,-532,-532',
'-532,-532,,,,-532,-532,,,,63,64,65,-532,51,,-532,,57,58,,-532,-532,61',
',59,60,62,258,259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,41',
',,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210',
',,214,,,52,,54,,256,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,,,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24',
'66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,6,9,94,93,84,50,86,85',
'87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,54,,32',
',,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,404,56,,,53,,,,',
'37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27',
'90,89,91,92,,,17,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,18,,,,,79,73',
'75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,84,50,86',
'85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54',
',,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,',
'53,,57,58,,37,83,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92',
',,17,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,',
',,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77',
'78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,23,24,66',
'67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,',
',,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,,37,83,63,64',
'65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91',
'92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,',
',,,,,,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,,,,,37,83,63,64,65,8,51,,,,57,58,,,',
'61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,6',
'9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36',
',,30,,,52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,',
'63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257',
'291,295,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,',
'218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37',
'83,61,,59,60,62,258,259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,',
',,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,',
',,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,',
'74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67',
',,,,,257,291,295,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,',
'88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40',
',,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,,37,83,63',
'64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89',
'91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75',
'76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,23',
'24,66,67,,,,,,22,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85',
'87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,421',
',,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53',
',57,58,,37,83,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,219',
',,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,',
',,,,,,,,210,,,214,,,52,,54,,421,,,,40,,,,,,,,218,,,,,79,73,75,76,77',
'78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,23,24,66',
'67,,,,,,22,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,',
'88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40',
',,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57',
'58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,28,27,90,89,91,92,,,219',
',,,,,,41,,,94,93,84,50,86,85,87,261,88,95,96,,81,82,,38,39,,,,,,,,,',
',,,,,,,,,,,210,,,214,,,52,,54,,256,,,,40,,,,,,,,218,,,,,79,73,75,76',
'77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258',
'259,66,67,,,,,,257,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86',
'85,87,261,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52',
',54,,256,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65',
'56,51,,53,,57,58,,37,83,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89',
'91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73',
'75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86',
'85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54',
',,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51',
',53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,291,295,90,89',
'91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73',
'75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86',
'85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54',
',,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51',
',53,,57,58,,37,83,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92',
',,17,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,',
',,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77',
'78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,23,24,66',
'67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,',
',,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,,37,83,63,64',
'65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91',
'92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,',
',,,,,,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75',
'76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258',
'259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52',
',54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
',,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22',
'28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95,96,',
'81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,,,,,,,,18',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,,37,83,63,64,65,8,51',
',,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17',
',,,,,7,41,,9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,',
',,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78',
',,,74,80,,,,,,,56,,,53,,,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60',
'62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,84',
'50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52',
',54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56',
'51,,53,,57,58,,37,83,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91',
'92,,,17,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,',
',,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,,,,,37,83,63,64,65,8,51,,,,57,58,,,,61',
',59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94',
'93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30',
',,52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64',
'65,56,51,,53,,57,58,,37,83,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90',
'89,91,92,,,17,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,210,,,214,,458,52,,54,,,,,,40,,,,,,,,18,,,,,79,73',
'75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62',
'258,259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,41,,,94,93,84',
'50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,',
'52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65',
'56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,291,295',
'90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,',
'38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,256,,,,40,,,,,,,,218,',
',,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61',
',59,60,62,258,259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,41',
',,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210',
',,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,',
'63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257',
'291,295,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,',
'218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37',
'83,61,,59,60,62,258,259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,',
',,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,',
',,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,',
'74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67',
',,,,,257,291,295,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,',
'88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40',
',,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57',
'58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,291,295,90,89,91,92,,',
'219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,',
',,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77',
'78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259',
'66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85',
'87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,',
',,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53',
',57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,291,295,90,89,91,92',
',,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,',
',,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76',
'77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258',
'259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52',
',54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56',
'51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,291,295,90',
'89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79',
'73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60',
'62,258,259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,41,,,94,93',
'84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214',
',,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64',
'65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,291,295',
'90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,',
'38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,',
'79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59',
'60,62,258,259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,41,,,94',
'93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,',
'214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63',
'64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,291',
'295,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81',
'82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218',
',,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61',
',59,60,62,258,259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,41',
',,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210',
',,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,',
'63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257',
'291,295,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,',
'218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37',
'83,61,,59,60,62,258,259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,',
',,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,',
',,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,',
'74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67',
',,,,,257,291,295,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,',
'88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40',
',,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57',
'58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,291,295,90,89,91,92,,',
'219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,',
',,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77',
'78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259',
'66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85',
'87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,',
',,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53',
',57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,291,295,90,89,91,92',
',,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,',
',,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76',
'77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258',
'259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52',
',54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56',
'51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,291,295,90',
'89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79',
'73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60',
'62,258,259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,41,,,94,93',
'84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214',
',,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64',
'65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,291,295',
'90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,',
'38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,',
'79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59',
'60,62,258,259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,41,,,94',
'93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,',
'214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63',
'64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,291',
'295,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81',
'82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218',
',,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61',
',59,60,62,258,259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,41',
',,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210',
',,214,,,52,,54,,421,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80',
',,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,',
'257,291,295,90,89,91,92,,,219,,,,,,,292,,,94,93,84,50,86,85,87,,88,95',
'96,,81,82,,,,,,,,,,,,,,,,,,,,,,,,289,,,286,,,52,,54,,,,,,,,,,,,,,,,',
',,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,296,83,61',
',59,60,62,258,259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,292',
',,94,93,84,50,86,85,87,,88,95,96,,81,82,,,,,,,,,,,,,,,,,,,,,,,,289,',
',286,,,52,,54,,,,,,,,,,,,,,,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64',
'65,56,51,,53,,57,58,,296,83,61,,59,60,62,258,259,66,67,,,,,,257,291',
'295,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81',
'82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,,37,83,63,64,65,8,51',
',,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17',
',,,,,7,41,,9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,',
',,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78',
',,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66',
'67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87',
',88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,',
'40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,',
'57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,291,295,90,89,91,92',
',,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,',
',,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,,,,,37,83,63,64,65,8,51,,,,57,58,,,,61',
',59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94',
'93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30',
',,52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64',
'65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,291,295',
'90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,261,88,95,96,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,254,,40,,,,,,,,218',
',,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61',
',59,60,62,258,259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,41',
',,94,93,84,50,86,85,87,261,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,',
',,210,,,214,,,52,,54,,658,,254,,40,,,,,,,,218,,,,,79,73,75,76,77,78',
',,,74,80,,,,,,,56,,,53,,,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60',
'62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,84',
'50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52',
',54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56',
'51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,28,27,90,89',
'91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,261,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,256,,254,,40,,,,,,,,218,',
',,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61',
',59,60,62,258,259,66,67,,,,,,257,28,27,90,89,91,92,,,219,,,,,,,41,,',
'94,93,84,50,86,85,87,261,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,',
'210,,,214,,,506,,54,,256,,254,,40,,,,,,,,218,,,,,79,73,75,76,77,78,',
',,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66',
'67,,,,,,257,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87',
'261,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,510,52,,54',
',256,,254,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65',
'56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,291,295',
'90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,',
'38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,',
'79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,,37,83,63,64,65,8,51,,,',
'57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,',
',,7,41,,9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,',
',,,,,,,36,,,30,,,52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,',
',74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67',
',,,,,257,291,295,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,',
'88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40',
',,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,,37,83,63',
'64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89',
'91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,36,,,281,,,52,,54,,32,,,,40,,,,,,,,18,,,,,79,73',
'75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,84,50,86',
'85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54',
',,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,',
'53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,291,295,90,89,91',
'92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,',
',,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75',
'76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258',
'259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52',
',54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56',
'51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,291,295,90',
'89,91,92,,,219,,,,,,,292,,,94,93,84,50,86,85,87,,88,95,96,,81,82,764',
',336,334,333,754,335,,,,,,,,,751,,,,,,,,289,,,214,,,52,,54,,,,,,,338',
',,,,,,341,340,344,343,,79,73,75,76,77,78,,,,74,80,,,,518,,,56,,,53,',
',,,296,83,63,64,65,8,51,,,752,57,58,,,,61,,59,60,62,23,24,66,67,,,,',
',22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95',
'96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,281,,,52,,54,,32,,,,40,,,',
',,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,',
'37,83,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,219,,,,,',
',41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,',
',,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74',
'80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,23,24,66,67,,,,',
',22,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,',
'218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37',
'83,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,219,,,,,,,41',
',,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210',
',,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,',
'63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257',
'291,295,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,775,,,,40,,,,',
',,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,',
'37,83,61,,59,60,62,258,259,66,67,,,,,,257,291,295,90,89,91,92,,,219',
',,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,',
',,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78',
',,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,23,24,66,67',
',,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,84,50,86,85,87,,88,95',
'96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,',
',,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37',
'83,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41',
',,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210',
',,214,,,52,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63',
'64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,23,24,66,67,,,,,,22,28,27',
'90,89,91,92,,,17,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,18,,,,,79,73',
'75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62',
'258,259,66,67,,,,,,257,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50',
'86,85,87,261,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,',
'52,,54,,256,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64',
'65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,291,295',
'90,89,91,92,,,219,,,,,,,292,,,94,93,84,50,86,85,87,,88,95,96,,81,82',
',,,,,,,,,,,,,,,,,,,,,,,289,,,286,,,52,,54,,,,,,,,,,,,,,,,,,,79,73,75',
'76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,296,83,61,,59,60,62',
'258,259,66,67,,,,,,257,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50',
'86,85,87,261,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,',
'52,,54,,256,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56',
',,53,,,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,',
',,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95',
'96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,,,,',
',,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,,37,83,63,64,65',
'8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92',
',,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,',
',,,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,,,,,37,83,63,64,65,8,51,,,,57,58,,,,61',
',59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94',
'93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30',
',,52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64',
'65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,291,295',
'90,89,91,92,,,219,,,,,,,292,,,94,93,84,50,86,85,87,,88,95,96,,81,82',
',,,,,,,,,,,,,,,,,,,,,,,712,,,214,,,52,,54,,,,,,,,,,,,,,,,,,,79,73,75',
'76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,296,83,61,,59,60,62',
'258,259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,41,,,94,93,84',
'50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,537',
',52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,',
',53,,,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,',
',,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95',
'96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,,,,',
',,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,,37,83,63,64,65',
'8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92',
',,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,',
',,,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,,,,,37,83,63,64,65,8,51,,,,57,58,,,,61',
',59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94',
'93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30',
',,52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64',
'65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,291,295',
'90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,261,88,95,96,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,',
',79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,',
'59,60,62,258,259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,41,',
',94,93,84,50,86,85,87,261,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,',
',210,,,214,,,52,,54,,658,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74',
'80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,23,24,66,67,,,,',
',22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,',
'18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83',
'61,,59,60,62,258,259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,',
'41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,',
',,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74',
'80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,',
',,,257,291,295,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,',
',,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58',
',37,83,61,,59,60,62,258,259,66,67,,,,,,257,291,295,90,89,91,92,,,219',
',,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,',
',,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78',
',,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66',
'67,,,,,,257,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87',
'261,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,256',
',,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53',
',57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,28,27,90,89,91,92',
',,219,,,,,,,41,,,94,93,84,50,86,85,87,261,88,95,96,,81,82,,38,39,,,',
',,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,256,,,,40,,,,,,,,218,,,,,79,73',
'75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62',
'258,259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,292,,,94,93,84',
'50,86,85,87,,88,95,96,,81,82,764,,336,334,333,754,335,,,,,,,,,751,,',
',,,,,289,,,286,,,52,,54,,,,,,,338,749,,,,,,341,340,344,343,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,,,,,296,83,63,64,65,8,51,,,752,57,58',
',,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41',
',9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,',
'36,,,30,,,52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80',
',,,,,404,56,,,53,,,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23',
'24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,84,50,86,85',
'87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,675,52,,54',
',,,254,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51',
',53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,28,27,90,89,91',
'92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,261,88,95,96,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,256,,,,40,,,,,,,,218,,,,,79',
'73,75,76,77,78,,,,74,80,,,,,-283,,56,,,53,,-283,-283,-283,37,83,-283',
'-283,-283,764,-283,336,334,333,754,335,,,,,-283,-283,,,751,,,,,,-283',
'-283,,-283,-283,-283,-283,-283,,,,,,,,,,338,749,,,,,,341,340,344,343',
',-283,-283,-283,-283,-283,-283,-283,-283,-283,-283,-283,-283,-283,-283',
'-283,,,-283,-283,-283,,639,-283,,,-283,,-283,,-283,,-283,,-283,752,-283',
'-283,-283,-283,-283,-283,-283,,-283,,-283,,,,,,,,,,,,,-283,-283,-283',
'-283,,-283,-538,,-283,,-283,,-98,-538,-538,-538,,,,-538,-538,,-538,',
',,,,,,,-538,,,,,,,,,,,-538,-538,,-538,-538,-538,-538,-538,,,,,,,,,,',
',,,,,,,,,,,-538,-538,-538,-538,-538,-538,-538,-538,-538,-538,-538,-538',
'-538,-538,-538,,,-538,-538,-538,,636,,,,-538,,,,,,-538,,-538,,-538,-538',
'-538,-538,-538,-538,-538,,-538,-538,-538,,,,,,,,,,,,,-538,-538,,-87',
',-538,-283,,-538,,-538,,-96,-283,-283,-283,,,,-283,-283,,-283,,,,,,',
',,,,,,,,,,,,,-283,-283,,-283,-283,-283,-283,-283,,,,,,,,,,,,,,,,,,,',
',,-283,-283,-283,-283,-283,-283,-283,-283,-283,-283,-283,-283,-283,-283',
'-283,,,-283,-283,-283,,639,,,,-283,,,,,,-283,,-283,,-283,-283,-283,-283',
'-283,-283,-283,,-283,,-283,,,,,,,,,,,,,-283,-283,,-89,,-283,-538,,-283',
',-283,,-98,-538,-538,-538,,,-538,-538,-538,,-538,,,,,,,,,-538,-538,-538',
',,,,,,,,-538,-538,,-538,-538,-538,-538,-538,,,,,,,,,,,,,,,,,,,,,,-538',
'-538,-538,-538,-538,-538,-538,-538,-538,-538,-538,-538,-538,-538,-538',
',,-538,-538,-538,,790,-538,,,-538,,-538,,-538,,-538,,-538,,-538,-538',
'-538,-538,-538,-538,-538,,-538,-538,-538,,,,,,,,,,,,,-538,-538,-538',
'-538,,-538,-278,,-538,,-538,,-96,-278,-278,-278,,,-278,-278,-278,,-278',
',,,,,,,,,-278,-278,-278,,,,,,,,-278,-278,,-278,-278,-278,-278,-278,',
',,,,,,,,,,,,,,,,,,,,-278,-278,-278,-278,-278,-278,-278,-278,-278,-278',
'-278,-278,-278,-278,-278,,,-278,-278,-278,,,-278,,,-278,,-278,,-278',
',-278,,-278,,-278,-278,-278,-278,-278,-278,-278,,-278,,-278,,,,,,,,',
',,,,-278,-278,-278,-278,-292,-278,,-278,-278,,-278,-292,-292,-292,,',
'-292,-292,-292,,-292,,,,,,,,,,-292,-292,,,,,,,,,-292,-292,,-292,-292',
'-292,-292,-292,,,,,,,,,,,,,,,,,,,,,,-292,-292,-292,-292,-292,-292,-292',
'-292,-292,-292,-292,-292,-292,-292,-292,,,-292,-292,-292,,,-292,,277',
'-292,,-292,,-292,,-292,,-292,,-292,-292,-292,-292,-292,-292,-292,,-292',
',-292,,,,,,,,,,,,,-292,-292,-292,-292,-554,-292,,,-292,,-292,-554,-554',
'-554,,,-554,-554,-554,,-554,,,,,,,,,,-554,,,,,,,,,,-554,-554,,-554,-554',
'-554,-554,-554,,,,,,,,,,,,-554,,,,,,,-554,-554,-554,,,-554,-554,-554',
',-554,,,,,-554,-554,,,,-554,,,-554,,,,,268,-554,-554,-554,,-554,-554',
'-554,-554,-554,,,,,,,,,,,,-554,,,,,,,,,,,,,-554,,-554,,,-554,,,-554',
'-554,,-554,,,,,-554,,-554,-554,-554,268,-554,-554,-554,-554,,-554,,',
',,,,,,,-554,,,,,-554,,,,,-554,-554,,-554,-554,-554,-554,-554,-554,,-554',
',,-554,689,440,,,690,,,,,,,,,142,143,139,121,122,123,130,127,129,,,124',
'125,-554,-554,,,144,145,131,132,-554,,,,,268,-554,,,,,136,135,,120,141',
'138,137,133,134,128,126,118,140,119,,-554,146,,,,,,,,,,,,-554,,-554',
',,-554,156,167,157,180,153,173,163,162,188,191,178,161,160,155,181,189',
'190,165,154,168,172,174,166,159,,,,175,182,177,176,169,179,164,152,171',
'170,183,184,185,186,187,151,158,149,150,147,148,111,113,110,,112,,,',
',,,,,142,143,139,121,122,123,130,127,129,,,124,125,,,,,144,145,131,132',
',,,,,,,,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119,,,146',
'192,,,,,,,,,,80,156,167,157,180,153,173,163,162,188,191,178,161,160',
'155,181,189,190,165,154,168,172,174,166,159,,,,175,182,177,176,169,179',
'164,152,171,170,183,184,185,186,187,151,158,149,150,147,148,111,113',
',,112,,,,,,,,,142,143,139,121,122,123,130,127,129,,,124,125,,,,,144',
'145,131,132,,,,,,,,,,,,136,135,,120,141,138,137,133,134,128,126,118',
'140,119,,,146,192,,,,,,,,,,80,156,167,157,180,153,173,163,162,188,191',
'178,161,160,155,181,189,190,165,154,168,172,174,166,159,,,,175,182,177',
'176,169,179,164,152,171,170,183,184,185,186,187,151,158,149,150,147',
'148,111,113,,,112,,,,,,,,,142,143,139,121,122,123,130,127,129,,,124',
'125,,,,,144,145,131,132,,,,,,,,,,,,136,135,,120,141,138,137,133,134',
'128,126,118,140,119,,,146,192,,,,,,,,,,80,156,167,157,180,153,173,163',
'162,188,191,178,161,160,155,181,189,190,165,154,168,172,174,166,159',
',,,175,182,177,176,169,179,164,152,171,170,183,184,185,186,187,151,158',
'149,150,147,148,111,113,,,112,,,,,,,,,142,143,139,121,122,123,130,127',
'129,,,124,125,,,,,144,145,131,132,,,,,,,,,,,,136,135,,120,141,138,137',
'133,134,128,126,118,140,119,,,146,192,,,,,,,,,,80,156,167,157,180,153',
'173,163,162,188,191,178,161,160,155,181,189,190,165,154,168,172,174',
'166,159,,,,175,182,177,376,375,377,374,152,171,170,183,184,185,186,187',
'151,158,149,150,372,373,370,113,86,85,371,,88,,,,,,,142,143,139,121',
'122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,381,,,,,,136',
'135,,120,141,138,137,133,134,128,126,118,140,119,,,146,156,167,157,180',
'153,173,163,162,188,191,178,161,160,155,181,189,190,165,154,168,172',
'174,166,159,,,,175,182,177,176,169,179,164,152,171,170,183,184,185,186',
'187,151,158,149,150,147,148,111,113,398,397,112,,399,,,,,,,142,143,139',
'121,122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,,,136',
'135,,120,141,138,137,133,134,128,126,118,140,119,,,146,156,167,157,180',
'153,173,163,162,188,191,178,161,160,155,181,189,190,165,154,168,172',
'174,166,159,,,,175,182,177,176,169,179,164,152,171,170,183,184,185,186',
'187,151,158,149,150,147,148,111,113,398,397,112,,399,,,,,,,142,143,139',
'121,122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,,,136',
'135,,120,141,138,137,133,134,128,126,118,140,119,,,146,156,167,157,180',
'153,173,163,162,188,191,178,161,160,155,181,189,190,165,154,168,172',
'174,166,159,,,,175,182,177,176,169,179,164,152,171,170,183,184,185,186',
'187,151,158,149,150,147,148,111,113,,,112,,,,,,,,,142,143,139,121,122',
'123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,,,136,135,,120',
'141,138,137,133,134,128,126,118,140,119,430,434,146,,431,,,,,,,,,142',
'143,139,121,122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,268',
',,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119,961,440,146',
',962,,,,,,,,,142,143,139,121,122,123,130,127,129,,,124,125,,,,,144,145',
'131,132,,,,,,,,,,,,136,135,,120,141,138,137,133,134,128,126,118,140',
'119,443,434,146,,444,,,,,,,,,142,143,139,121,122,123,130,127,129,,,124',
'125,,,,,144,145,131,132,,,,,,,,,,,,136,135,,120,141,138,137,133,134',
'128,126,118,140,119,959,434,146,,960,,,,,,,,,142,143,139,121,122,123',
'130,127,129,,,124,125,,,,,144,145,131,132,,,,,,268,,,,,,136,135,,120',
'141,138,137,133,134,128,126,118,140,119,686,434,146,,687,,,,,,,,,142',
'143,139,121,122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,268',
',,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119,741,440,146',
',892,,,,,,,,,142,143,139,121,122,123,130,127,129,,,124,125,,,,,144,145',
'131,132,,,,,,,,,,,,136,135,,120,141,138,137,133,134,128,126,118,140',
'119,644,440,146,,645,,,,,,,,,142,143,139,121,122,123,130,127,129,,,124',
'125,,,,,144,145,131,132,,,,,,,,,,,,136,135,,120,141,138,137,133,134',
'128,126,118,140,119,642,434,146,,643,,,,,,,,,142,143,139,121,122,123',
'130,127,129,,,124,125,,,,,144,145,131,132,,,,,,268,,,,,,136,135,,120',
'141,138,137,133,134,128,126,118,140,119,443,434,146,,444,,,,,,,,,142',
'143,139,121,122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,268',
',,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119,436,440,146',
',438,,,,,,,,,142,143,139,121,122,123,130,127,129,,,124,125,,,,,144,145',
'131,132,,,,,,,,,,,,136,135,,120,141,138,137,133,134,128,126,118,140',
'119,741,440,146,,739,,,,,,,,,142,143,139,121,122,123,130,127,129,,,124',
'125,,,,,144,145,131,132,,,,,,,,,,,,136,135,,120,141,138,137,133,134',
'128,126,118,140,119,443,434,146,,444,,,,,,,,,142,143,139,121,122,123',
'130,127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,,,136,135,,120,141',
'138,137,133,134,128,126,118,140,119,735,440,146,,736,,,,,,,,,142,143',
'139,121,122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,',
',136,135,,120,141,138,137,133,134,128,126,118,140,119,733,434,146,,734',
',,,,,,,,142,143,139,121,122,123,130,127,129,,,124,125,,,,,144,145,131',
'132,,,,,,268,,,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119',
'644,440,146,,645,,,,,,,,,142,143,139,121,122,123,130,127,129,,,124,125',
',,,,144,145,131,132,,,,,,,,,,,,136,135,,120,141,138,137,133,134,128',
'126,118,140,119,642,434,146,,643,,,,,,,,,142,143,139,121,122,123,130',
'127,129,,,124,125,,,,,144,145,131,132,,,,,,268,,,,,,136,135,,120,141',
'138,137,133,134,128,126,118,140,119,443,434,146,,444,,,,,,,,,142,143',
'139,121,122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,',
',136,135,,120,141,138,137,133,134,128,126,118,140,119,443,434,146,,444',
',,,,,,,,142,143,139,121,122,123,130,127,129,,,124,125,,,,,144,145,131',
'132,,,,,,,,,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119',
'443,434,146,,444,,,,,,,,,142,143,139,121,122,123,130,127,129,,,124,125',
',,,,144,145,131,132,,,,,,,,,,,,136,135,,120,141,138,137,133,134,128',
'126,118,140,119,,,146' ]
        racc_action_table = arr = ::Array.new(24516, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'0,0,0,0,0,948,734,735,0,0,55,615,26,0,327,0,0,0,0,0,0,0,387,703,852',
'387,703,0,0,0,0,0,0,0,852,744,0,681,392,792,744,791,0,0,0,0,0,0,0,0',
'0,0,0,924,0,0,0,587,0,0,321,0,0,310,310,366,852,852,698,698,615,615',
'735,681,604,604,26,896,959,615,305,387,387,0,889,838,0,385,792,0,791',
'0,960,0,55,691,26,0,348,392,736,507,354,852,692,0,347,961,734,735,0',
'0,0,0,0,0,948,927,948,0,0,948,698,733,421,421,421,0,421,962,0,379,421',
'421,507,0,0,421,379,421,421,421,421,421,421,421,385,385,385,693,310',
'421,421,421,421,421,421,421,351,587,421,604,321,351,924,736,924,421',
'366,924,421,421,421,421,421,421,421,967,421,421,421,525,421,421,961',
'421,421,366,896,959,896,959,366,896,959,889,838,889,838,838,889,838',
'736,960,354,960,962,421,960,348,421,348,357,421,348,421,687,347,961',
'347,961,421,347,961,841,733,839,251,927,421,927,457,457,927,421,421',
'421,421,421,421,962,508,962,421,421,962,690,525,432,432,432,421,432',
'290,421,553,432,432,293,421,421,432,71,432,432,432,432,432,432,432,71',
'643,855,855,508,432,432,432,432,432,432,432,687,525,432,457,83,83,967',
'300,967,432,525,967,432,432,432,432,432,432,432,432,432,432,432,686',
'432,432,696,432,432,690,690,485,357,578,462,376,687,290,643,841,293',
'841,376,697,841,687,839,300,689,432,807,642,432,432,577,432,300,432',
'287,432,293,432,497,432,485,462,690,377,394,462,462,432,312,290,377',
'690,432,432,432,432,432,432,290,746,746,432,432,346,346,686,369,369',
'369,432,369,497,432,699,369,369,642,432,432,369,383,369,369,369,369',
'369,369,369,317,689,689,317,807,369,369,369,369,369,369,369,287,686',
'369,394,394,394,578,389,578,369,686,578,369,369,369,369,369,369,369',
'564,369,369,369,209,369,369,689,577,807,577,314,568,577,314,453,689',
'287,807,461,383,383,383,25,25,704,287,746,371,705,369,25,746,369,375',
'371,369,110,369,372,708,375,110,110,629,431,372,389,389,389,461,3,710',
'209,461,461,3,369,369,369,369,369,369,858,453,278,369,369,858,370,278',
'440,440,440,369,440,370,369,858,440,440,685,369,369,440,431,440,440',
'440,440,440,440,440,629,431,860,430,712,440,440,440,440,440,440,440',
'860,35,440,858,858,858,858,14,480,440,713,211,440,440,440,440,440,440',
'440,440,440,440,440,373,440,440,628,440,440,374,373,430,860,860,313',
'714,374,313,717,480,430,35,858,480,480,480,480,14,540,440,35,683,440',
'440,722,440,14,440,728,440,211,440,934,440,934,597,628,555,750,860,597',
'440,352,750,352,628,440,440,440,440,440,440,939,296,296,440,440,939',
'720,720,441,441,441,440,441,730,440,939,441,441,219,440,440,441,732',
'441,441,441,441,441,441,441,555,555,555,555,539,441,441,441,441,441',
'441,441,824,538,441,939,939,939,939,37,37,441,15,15,441,441,441,441',
'441,441,441,441,441,441,441,315,441,441,316,441,441,481,949,949,303',
'303,737,569,213,569,569,569,303,569,939,561,561,824,824,824,824,441',
'252,741,441,441,742,441,212,441,255,441,481,441,318,441,481,481,481',
'481,768,768,529,441,768,768,768,210,441,441,441,441,441,441,526,573',
'753,441,441,303,519,303,442,442,442,441,442,757,441,758,442,442,760',
'441,441,442,761,442,442,442,442,442,442,442,279,279,279,279,279,442',
'442,442,442,442,442,442,762,764,442,326,767,676,517,648,514,442,774',
'513,442,442,442,442,442,442,442,442,442,442,442,688,442,442,509,442',
'442,648,648,648,648,648,648,648,648,648,648,648,208,208,648,648,329',
'503,648,648,208,442,502,499,442,442,193,442,330,442,673,442,648,442',
'648,442,648,648,648,648,648,648,648,442,648,342,739,739,442,442,442',
'442,442,442,739,345,302,442,442,739,648,795,451,451,451,442,451,208',
'442,208,451,451,796,442,442,451,799,451,451,451,451,451,451,451,801',
'361,97,804,805,451,451,451,451,451,451,451,806,579,451,811,580,739,814',
'739,815,451,669,466,451,451,451,451,451,451,451,451,451,451,451,267',
'451,451,830,451,451,484,484,484,484,484,484,484,484,484,484,484,361',
'361,484,484,465,833,484,484,361,451,78,77,451,361,657,451,464,451,463',
'451,484,353,484,451,484,484,484,484,484,484,484,451,484,361,843,846',
'451,451,451,451,451,451,847,848,356,451,451,655,484,484,945,945,945',
'451,945,361,451,361,945,945,358,451,451,945,362,945,945,945,945,945',
'945,945,5,5,5,5,5,945,945,945,945,945,945,945,437,301,945,870,871,280',
'429,419,428,945,424,422,945,945,945,945,945,945,945,945,945,945,945',
'882,945,945,41,945,945,419,419,419,419,419,419,419,419,419,419,419,13',
'13,419,419,647,36,419,419,13,945,892,893,945,925,925,945,646,945,898',
'945,419,925,419,945,419,419,419,419,419,419,419,945,419,899,34,416,945',
'945,945,945,945,945,282,840,840,945,945,907,419,909,419,840,912,945',
'913,13,945,13,914,915,283,945,945,943,943,943,943,943,925,20,925,943',
'943,295,640,410,943,926,943,943,943,943,943,943,943,680,680,680,680',
'680,943,943,943,943,943,943,943,391,840,943,840,388,284,12,936,943,943',
'637,943,943,943,943,943,943,943,943,11,943,943,943,944,943,943,10,943',
'943,672,672,672,672,672,672,672,672,672,672,672,288,288,672,672,292',
'632,672,672,288,943,9,619,943,42,42,943,953,943,955,943,672,42,672,943',
'672,672,672,672,672,672,672,943,672,956,958,6,943,943,943,943,943,943',
'289,355,355,943,943,291,672,1,672,355,626,943,,288,943,288,,,,943,943',
'935,935,935,935,935,42,,42,935,935,,,,935,,935,935,935,935,935,935,935',
',,,,,935,935,935,935,935,935,935,,355,935,355,,,,,935,935,,935,935,935',
'935,935,935,935,935,,935,935,935,,935,935,,935,935,536,536,536,536,536',
'536,536,536,536,536,536,364,364,536,536,,,536,536,364,935,,,935,711',
'711,935,,935,,935,536,711,536,935,536,536,536,536,536,536,536,935,536',
',,,935,935,935,935,935,935,,589,589,935,935,,536,,,589,,935,,364,935',
'364,,,,935,935,930,930,930,930,930,711,,711,930,930,,,,930,,930,930',
'930,930,930,930,930,,,,,,930,930,930,930,930,930,930,,589,930,589,,',
',,930,930,,930,930,930,930,930,930,930,930,,930,930,930,,930,930,,930',
'930,793,793,793,793,793,793,793,793,793,793,793,,,793,793,,,793,793',
',930,,,930,,,930,,930,,930,793,,793,930,793,793,793,793,793,793,793',
'930,793,,,,930,930,930,930,930,930,,,,930,930,,793,,452,452,452,930',
'452,,930,,452,452,,930,930,452,,452,452,452,452,452,452,452,,,,,,452',
'452,452,452,452,452,452,,829,452,829,829,829,,829,,452,,,452,452,452',
'452,452,452,452,452,452,452,452,,452,452,,452,452,19,19,19,19,19,19',
'19,19,19,19,19,,,19,19,,,19,19,,452,,,452,,,452,,452,,452,19,,19,452',
'19,19,19,19,19,19,19,452,19,,,,452,452,452,452,452,452,,,,452,452,,19',
',454,454,454,452,454,,452,,454,454,,452,452,454,,454,454,454,454,454',
'454,454,,,,,,454,454,454,454,454,454,454,,,454,,,,,,,454,,,454,454,454',
'454,454,454,454,,454,454,454,,454,454,,454,454,773,773,773,773,773,773',
'773,773,773,773,773,,,773,773,,,773,773,,454,,,454,,,454,,454,,,773',
',773,454,773,773,773,773,773,773,773,454,773,,,,454,454,454,454,454',
'454,,,,454,454,,773,,17,17,17,454,17,,454,,17,17,,454,454,17,,17,17',
'17,17,17,17,17,,,,,,17,17,17,17,17,17,17,,,17,,,,,,,17,,,17,17,17,17',
'17,17,17,,17,17,17,,17,17,,17,17,427,427,427,427,427,427,427,427,427',
'427,427,,,427,427,,,427,427,,17,,,17,17,,17,,17,,,427,,427,17,427,427',
'427,427,427,427,427,17,427,,,,17,17,17,17,17,17,,,,17,17,,427,,18,18',
'18,17,18,,17,,18,18,,17,17,18,,18,18,18,18,18,18,18,,,,,,18,18,18,18',
'18,18,18,,,18,,,,,,,18,,,18,18,18,18,18,18,18,,18,18,18,,18,18,,18,18',
'249,249,249,249,249,249,249,249,249,249,249,,,249,249,,,249,249,,18',
',,18,,,18,,18,,,249,,249,18,249,249,249,249,249,249,249,18,249,,,,18',
'18,18,18,18,18,,,,18,18,,249,,,,,18,,,18,,,,,18,18,923,923,923,923,923',
',,,923,923,,,,923,,923,923,923,923,923,923,923,,,,,,923,923,923,923',
'923,923,923,,,923,,,,,,923,923,,923,923,923,923,923,923,923,923,,923',
'923,923,,923,923,,923,923,786,786,786,786,786,786,786,786,786,786,786',
',,786,786,,,786,786,,923,,,923,,,923,,923,,923,786,,786,923,786,786',
'786,786,786,786,786,923,786,,,,923,923,923,923,923,923,,,,923,923,,786',
',921,921,921,923,921,,923,,921,921,,923,923,921,,921,921,921,921,921',
'921,921,,,,,,921,921,921,921,921,921,921,,,921,,,,,,,921,,,921,921,921',
'921,921,921,921,,921,921,921,,921,921,,921,921,446,446,446,446,446,446',
'446,446,446,446,446,,,446,446,,,446,446,,921,,,921,,,921,,921,,921,446',
'921,446,921,446,446,446,446,446,446,446,921,446,,,,921,921,921,921,921',
'921,,,,921,921,,446,,22,22,22,921,22,,921,,22,22,,921,921,22,,22,22',
'22,22,22,22,22,,,,,,22,22,22,22,22,22,22,,,22,,,,,,,22,,,22,22,22,22',
'22,22,22,22,22,22,22,,22,22,,22,22,781,781,781,781,781,781,781,781,781',
'781,781,,,781,781,,,781,781,,22,,,22,,,22,,22,,22,781,22,781,22,781',
'781,781,781,781,781,781,22,781,,,,22,22,22,22,22,22,,,,22,22,,781,,23',
'23,23,22,23,,22,,23,23,,22,22,23,,23,23,23,23,23,23,23,,,,,,23,23,23',
'23,23,23,23,,,23,,,,,,,23,,,23,23,23,23,23,23,23,23,23,23,23,,23,23',
',23,23,779,779,779,779,779,779,779,779,779,779,779,,,779,779,,,779,779',
',23,,,23,,,23,,23,,23,779,23,779,23,779,779,779,779,779,779,779,23,779',
',,,23,23,23,23,23,23,,,,23,23,,779,,24,24,24,23,24,,23,,24,24,,23,23',
'24,,24,24,24,24,24,24,24,,,,,,24,24,24,24,24,24,24,,,24,,,,,,,24,,,24',
'24,24,24,24,24,24,24,24,24,24,,24,24,,24,24,875,875,875,875,875,875',
'875,875,875,875,875,,,875,875,,,875,875,,24,,,24,,,24,,24,,24,875,24',
'875,24,875,875,875,875,875,875,875,24,875,,,,24,24,24,24,24,24,,,,24',
'24,,875,,,,,24,,,24,,,,,24,24,904,904,904,904,904,,,,904,904,,,,904',
',904,904,904,904,904,904,904,,,,,,904,904,904,904,904,904,904,,,904',
',,,,,904,904,,904,904,904,904,904,904,904,904,,904,904,904,,904,904',
',904,904,695,695,695,695,695,695,695,695,695,695,695,,,695,695,,,695',
'695,,904,,,904,,,904,,904,,904,695,,695,904,695,695,695,695,695,695',
'695,904,695,,,,904,904,904,904,904,904,,,,904,904,,695,,,,,904,,,904',
',,,,904,904,901,901,901,901,901,,,,901,901,,,,901,,901,901,901,901,901',
'901,901,,,,,,901,901,901,901,901,901,901,,,901,,,,,,901,901,,901,901',
'901,901,901,901,901,901,,901,901,901,,901,901,,901,901,873,873,873,873',
'873,873,873,873,873,873,873,,,873,873,,,873,873,,901,,,901,,,901,,901',
',901,873,,873,901,873,873,873,873,873,873,873,901,873,,,,901,901,901',
'901,901,901,,,,901,901,,873,,27,27,27,901,27,,901,,27,27,,901,901,27',
',27,27,27,27,27,27,27,,,,,,27,27,27,27,27,27,27,,,27,,,,,,,27,,,27,27',
'27,27,27,27,27,27,27,27,27,,27,27,,27,27,784,784,784,784,784,784,784',
'784,784,784,784,,,784,784,,,784,784,,27,,,27,27,,27,,27,,27,784,27,784',
'27,784,784,784,784,784,784,784,27,784,,,,27,27,27,27,27,27,,,,27,27',
',784,,455,455,455,27,455,,27,,455,455,,27,27,455,,455,455,455,455,455',
'455,455,,,,,,455,455,455,455,455,455,455,,,455,,,,,,,455,,,455,455,455',
'455,455,455,455,,455,455,455,471,455,455,,455,455,566,,566,566,566,',
'566,,,,,471,471,,,652,,652,652,652,455,652,,455,,471,455,471,455,471',
'471,471,471,,455,471,,471,566,,,,455,,,566,,455,455,455,455,455,455',
'652,,,455,455,,,652,652,652,652,455,,,455,,,,652,455,455,30,30,30,30',
'30,,,,30,30,,,,30,,30,30,30,30,30,30,30,,,,,,30,30,30,30,30,30,30,,718',
'30,718,718,718,,718,30,30,,30,30,30,30,30,30,30,30,,30,30,30,,30,30',
',30,30,338,,338,338,338,,338,,,,718,,,,,,,718,,,30,,,30,,,30,,30,,30',
',,,30,,,,338,,,,30,,,338,,30,30,30,30,30,30,,,,30,30,,,,31,31,31,30',
'31,,30,,31,31,,30,30,31,,31,31,31,31,31,31,31,,,,,,31,31,31,31,31,31',
'31,,,31,,,,,,,31,,,31,31,31,31,31,31,31,,31,31,31,,31,31,559,,559,559',
'559,,559,,,,,,,,,,,,,,,,,31,,,31,,,31,,31,,31,,,,,559,,,,,,,559,559',
'559,559,,31,31,31,31,31,31,,,,31,31,,,,32,32,32,31,32,,31,,32,32,,31',
'31,32,,32,32,32,32,32,32,32,,,,,,32,32,32,32,32,32,32,,,32,,,,,,,32',
',,32,32,32,32,32,32,32,,32,32,32,,32,32,749,,749,749,749,749,749,,,',
',,,,,749,,,,,,,,32,,,32,,,32,,32,,,,,,,749,,,,,,,749,749,749,749,,32',
'32,32,32,32,32,,,,32,32,,,,32,,,32,,,32,,,,,32,32,900,900,900,,900,',
',749,900,900,,,,900,,900,900,900,900,900,900,900,,,,,,900,900,900,900',
'900,900,900,,,900,,,,,,,900,,,900,900,900,900,900,900,900,,900,900,900',
',900,900,,900,900,477,477,477,477,477,477,477,,,477,477,,,,,,,477,477',
',900,,,900,,,900,,900,,900,477,,477,900,477,477,477,477,477,477,477',
'900,477,,,,900,900,900,900,900,900,,,,900,900,,,,456,456,456,900,456',
',900,,456,456,,900,900,456,,456,456,456,456,456,456,456,,,,,,456,456',
'456,456,456,456,456,,,456,,,,,,,456,,,456,456,456,456,456,456,456,,456',
'456,456,,456,456,,456,456,460,460,460,460,460,460,460,460,460,460,460',
',,460,460,,,460,460,,456,,,456,,,456,,456,,,460,,460,456,460,460,460',
'460,460,460,460,456,460,,,,456,456,456,456,456,456,,,,456,456,,,,890',
'890,890,456,890,,456,,890,890,,456,456,890,,890,890,890,890,890,890',
'890,,,,,,890,890,890,890,890,890,890,,,890,,,,,,,890,,,890,890,890,890',
'890,890,890,,890,890,890,467,890,890,322,,322,322,322,,322,,,,,,,,467',
'467,,,,,,,,890,,,890,,467,890,467,890,467,467,467,467,,,322,,322,,,',
',322,322,322,322,,890,890,890,890,890,890,,,,890,890,,,,487,487,487',
'890,487,,890,,487,487,,890,890,487,,487,487,487,487,487,487,487,,,,',
',487,487,487,487,487,487,487,,,487,,,,,,,487,,,487,487,487,487,487,487',
'487,487,487,487,487,,487,487,,487,487,483,483,483,483,483,483,483,483',
',483,483,,,,,,,483,483,,487,,,487,,,487,,487,,487,483,487,483,487,483',
'483,483,483,483,483,483,487,483,,,,487,487,487,487,487,487,,,,487,487',
',,,38,38,38,487,38,,487,,38,38,,487,487,38,,38,38,38,38,38,38,38,,,',
',,38,38,38,38,38,38,38,,,38,,,,,,,38,,,38,38,38,38,38,38,38,,38,38,38',
',38,38,,38,38,482,482,482,482,482,482,482,,,482,482,,,,,,,482,482,,38',
',,38,,,38,,38,,,482,,482,38,482,482,482,482,482,482,482,38,482,,,,38',
'38,38,38,38,38,,,,38,38,,,,39,39,39,38,39,,38,,39,39,,38,38,39,,39,39',
'39,39,39,39,39,,,,,,39,39,39,39,39,39,39,,,39,,,,,,,39,,,39,39,39,39',
'39,39,39,,39,39,39,,39,39,,39,39,459,459,459,459,459,459,459,459,459',
'459,459,,,459,459,,,459,459,,39,,,39,,,39,,39,,,459,,459,39,459,459',
'459,459,459,459,459,39,459,,,,39,39,39,39,39,39,,,,39,39,,,,40,40,40',
'39,40,,39,,40,40,,39,39,40,,40,40,40,40,40,40,40,,,,,,40,40,40,40,40',
'40,40,,,40,,,,,,,40,,,40,40,40,40,40,40,40,,40,40,40,474,40,40,,40,40',
',,,,,,,,,,,474,474,,,56,,56,56,56,40,56,,40,,474,40,474,40,474,474,474',
'474,,40,474,,474,,,,,40,,,,,40,40,40,40,40,40,56,56,,40,40,,,56,56,56',
'56,40,,,40,,,,,40,40,886,886,886,886,886,,,,886,886,,,,886,,886,886',
'886,886,886,886,886,,,,,,886,886,886,886,886,886,886,,,886,,,,,,886',
'886,,886,886,886,886,886,886,886,886,,886,886,886,,886,886,,886,886',
'470,470,470,470,470,470,470,,,470,470,,,,,,,470,470,,886,,,886,,,886',
',886,,886,470,,470,886,470,470,470,470,470,470,470,886,470,,,,886,886',
'886,886,886,886,,,,886,886,,,,881,881,881,886,881,,886,,881,881,,886',
'886,881,,881,881,881,881,881,881,881,,,,,,881,881,881,881,881,881,881',
',,881,,,,,,,881,,,881,881,881,881,881,881,881,881,881,881,881,,881,881',
',881,881,479,479,479,479,479,479,479,,,479,479,,,,,,,479,479,,881,,',
'881,,,881,,881,,,479,881,479,881,479,479,479,479,479,479,479,881,479',
',,,881,881,881,881,881,881,,,,881,881,,,,489,489,489,881,489,,881,,489',
'489,,881,881,489,,489,489,489,489,489,489,489,,,,,,489,489,489,489,489',
'489,489,,,489,,,,,,,489,,,489,489,489,489,489,489,489,489,489,489,489',
',489,489,,489,489,478,478,478,478,478,478,478,,,478,478,,,,,,,478,478',
',489,,,489,,,489,,489,,,478,489,478,489,478,478,478,478,478,478,478',
'489,478,,,,489,489,489,489,489,489,,,,489,489,,,,52,52,52,489,52,,489',
',52,52,,489,489,52,,52,52,52,52,52,52,52,,,,,,52,52,52,52,52,52,52,',
',52,,,,,,,52,,,52,52,52,52,52,52,52,,52,52,52,,52,52,,52,52,476,476',
'476,476,476,476,476,,,476,476,,,,,,,476,476,,52,,,52,,,52,,52,,,476',
',476,52,476,476,476,476,476,476,476,52,476,,,,52,52,52,52,52,52,,,,52',
'52,,,,53,53,53,52,53,,52,,53,53,,52,52,53,,53,53,53,53,53,53,53,,,,',
',53,53,53,53,53,53,53,,,53,,,,,,,53,,,53,53,53,53,53,53,53,53,53,53',
'53,,53,53,,53,53,475,475,475,475,475,475,475,,,475,475,,,,,,,475,475',
',53,,,53,,,53,,53,,53,475,,475,53,475,475,475,475,475,475,475,53,475',
',,,53,53,53,53,53,53,,,,53,53,,,,54,54,54,53,54,,53,,54,54,,53,53,54',
',54,54,54,54,54,54,54,,,,,,54,54,54,54,54,54,54,,,54,,,,,,,54,,,54,54',
'54,54,54,54,54,54,54,54,54,473,54,54,,54,54,,,,,,,,,,,,473,473,,,,,',
',,54,,,54,,473,54,473,54,473,473,473,473,,54,473,,473,,,,,54,,,,,54',
'54,54,54,54,54,,,,54,54,,,,877,877,877,54,877,,54,,877,877,,54,54,877',
',877,877,877,877,877,877,877,,,,,,877,877,877,877,877,877,877,,,877',
',,,,,,877,,,877,877,877,877,877,877,877,,877,877,877,472,877,877,,877',
'877,,,,,,,,,,,,472,472,,,,,,,,877,,,877,,472,877,472,877,472,472,472',
'472,,877,472,,472,,,,,877,,,,,877,877,877,877,877,877,,,,877,877,,,',
'876,876,876,877,876,,877,,876,876,,877,877,876,,876,876,876,876,876',
'876,876,,,,,,876,876,876,876,876,876,876,,,876,,,,,,,876,,,876,876,876',
'876,876,876,876,,876,876,876,469,876,876,,876,876,,,,,,,,,,,,469,469',
',,,,,,,876,,,876,,469,876,,876,469,469,469,469,,876,,,,,,,,876,,,,,876',
'876,876,876,876,876,,,,876,876,,,,57,57,57,876,57,,876,,57,57,,876,876',
'57,,57,57,57,57,57,57,57,,,,,,57,57,57,57,57,57,57,,,57,,,,,,,57,,,57',
'57,57,57,57,57,57,,57,57,57,468,57,57,,57,57,,,,,,,,,,,,468,468,,,,',
',,,57,,,57,,468,57,468,57,468,468,468,468,,57,,,,,,,,57,,,,,57,57,57',
'57,57,57,,,,57,57,,,,58,58,58,57,58,,57,,58,58,,57,57,58,,58,58,58,58',
'58,58,58,,,,,,58,58,58,58,58,58,58,,,58,,,,,,,58,,,58,58,58,58,58,58',
'58,,58,58,58,,58,58,,58,58,,,,,,,,,,,,,,,,,,,,,58,,,58,,,58,,58,,,,',
',58,,,,,,,,58,,,,,58,58,58,58,58,58,,,,58,58,,,,61,61,61,58,61,,58,',
'61,61,,58,58,61,,61,61,61,61,61,61,61,,,,,,61,61,61,61,61,61,61,,,61',
',,,,,,61,,,61,61,61,61,61,61,61,,61,61,61,,61,61,,61,61,,,,,,,,,,,,',
',,,,,,,,61,,,61,,,61,,61,,,,,,61,,,,,,,,61,,,,,61,61,61,61,61,61,,,',
'61,61,61,,,,,61,61,,,61,,,,,61,61,62,62,62,,62,,,,62,62,,,,62,,62,62',
'62,62,62,62,62,,,,,,62,62,62,62,62,62,62,,,62,,,,,,,62,,,62,62,62,62',
'62,62,62,,62,62,62,,62,62,,,,,,,,,,,,,,,,,,,,,,,,62,,,62,,,62,,62,,62',
',,,,,,,,,,,,,,,,62,62,62,62,62,62,,,,62,62,,,,63,63,63,62,63,,62,,63',
'63,,62,62,63,,63,63,63,63,63,63,63,,,,,,63,63,63,63,63,63,63,,,63,,',
',,,,63,,,63,63,63,63,63,63,63,,63,63,63,,63,63,,,,,,,,,,,,,,,,,,,,,63',
',,63,,,63,,,63,,63,,,,,,,,,,,,,,,,,,,63,63,63,63,63,63,,,,63,63,,,,862',
'862,862,63,862,,63,,862,862,,63,63,862,,862,862,862,862,862,862,862',
',,,,,862,862,862,862,862,862,862,,,862,,,,,,,862,,,862,862,862,862,862',
'862,862,,862,862,862,,862,862,,862,862,,,,,,,,,,,,,,,,,,,,,862,,,862',
',,862,,862,,,,,,862,,,,,,,,862,,,,,862,862,862,862,862,862,,,,862,862',
',,,350,350,350,862,350,,862,,350,350,,862,862,350,,350,350,350,350,350',
'350,350,,,,,,350,350,350,350,350,350,350,,,350,,,,,,,350,,,350,350,350',
'350,350,350,350,,350,350,350,,350,350,,350,350,,,,,,,,,,,,,,,,,,,,,350',
',,350,,,350,,350,,,,,,350,,,,,,,,350,,,,,350,350,350,350,350,350,,,',
'350,350,,,,,,,350,,,350,,,,,350,350,835,835,835,835,835,,,,835,835,',
',,835,,835,835,835,835,835,835,835,,,,,,835,835,835,835,835,835,835',
',,835,,,,,,835,835,,835,835,835,835,835,835,835,835,,835,835,835,,835',
'835,,835,835,,,,,,,,,,,,,,,,,,,,,835,,,835,,,835,,835,,835,,,,835,,',
',,,,,835,,,,,835,835,835,835,835,835,,,,835,835,,,,,,,835,,,835,,,,',
'835,835,834,834,834,834,834,,,,834,834,,,,834,,834,834,834,834,834,834',
'834,,,,,,834,834,834,834,834,834,834,,,834,,,,,,834,834,,834,834,834',
'834,834,834,834,834,,834,834,834,,834,834,,834,834,,,,,,,,,,,,,,,,,',
',,,834,,,834,,,834,,834,,834,,,,834,,,,,,,,834,,,,,834,834,834,834,834',
'834,,,,834,834,,,,832,832,832,834,832,,834,,832,832,,834,834,832,,832',
'832,832,832,832,832,832,,,,,,832,832,832,832,832,832,832,,,832,,,,,',
',832,,,832,832,832,832,832,832,832,,832,832,832,,832,832,,832,832,,',
',,,,,,,,,,,,,,,,,,832,,,832,,,832,,832,,,,,,832,,,,,,,,832,,,,,832,832',
'832,832,832,832,,,,832,832,,,,,,,832,,,832,,,,,832,832,813,813,813,813',
'813,,,,813,813,,,,813,,813,813,813,813,813,813,813,,,,,,813,813,813',
'813,813,813,813,,,813,,,,,,813,813,,813,813,813,813,813,813,813,813',
',813,813,813,,813,813,,813,813,,,,,,,,,,,,,,,,,,,,,813,,,813,,,813,',
'813,,813,,,,813,,,,,,,,813,,,,,813,813,813,813,813,813,,,,813,813,,',
',84,84,84,813,84,,813,,84,84,,813,813,84,,84,84,84,84,84,84,84,,84,',
',,84,84,84,84,84,84,84,,,84,,,,,,,84,,,84,84,84,84,84,84,84,84,84,84',
'84,,84,84,,84,84,,,,,,,,,,,,,,,,,,,,,84,,,84,84,,84,,84,,84,,84,,84',
',,,,,,,84,,84,,,84,84,84,84,84,84,,,,84,84,,,,87,87,87,84,87,,84,,87',
'87,,84,84,87,,87,87,87,87,87,87,87,,87,,,,87,87,87,87,87,87,87,,,87',
',,,,,,87,,,87,87,87,87,87,87,87,87,87,87,87,,87,87,,87,87,,,,,,,,,,',
',,,,,,,,,,87,,,87,87,,87,,87,,87,,87,,87,,,,,,,,87,,87,,,87,87,87,87',
'87,87,,,,87,87,,,,802,802,802,87,802,,87,,802,802,,87,87,802,,802,802',
'802,802,802,802,802,,,,,,802,802,802,802,802,802,802,,,802,,,,,,,802',
',,802,802,802,802,802,802,802,,802,802,802,,802,802,,802,802,,,,,,,',
',,,,,,,,,,,,,802,,,802,,,802,,802,,802,,,,802,,,,,,,,802,,,,,802,802',
'802,802,802,802,,,,802,802,,,,,,,802,,,802,,,,,802,802,99,99,99,99,99',
',,,99,99,,,,99,,99,99,99,99,99,99,99,,,,,,99,99,99,99,99,99,99,,,99',
',,,,,99,99,99,99,99,99,99,99,99,99,99,,99,99,99,,99,99,,99,99,,,,,,',
',,,,,,,,,,,,,,99,,,99,,,99,,99,,99,,,,99,,,,,,,,99,,,,,99,99,99,99,99',
'99,,,,99,99,,,,,,99,99,,,99,,,,,99,99,103,103,103,,103,,,,103,103,,',
',103,,103,103,103,103,103,103,103,,,,,,103,103,103,103,103,103,103,',
',103,,,,,,,103,,,103,103,103,103,103,103,103,,103,103,103,,103,103,',
'103,103,,,,,,,,,,,,,,,,,,,,,103,,,103,,,103,,103,,,,,,103,,,,,,,,103',
',,,,103,103,103,103,103,103,,,,103,103,,,,104,104,104,103,104,,103,',
'104,104,,103,103,104,,104,104,104,104,104,104,104,,,,,,104,104,104,104',
'104,104,104,,,104,,,,,,,104,,,104,104,104,104,104,104,104,,104,104,104',
',104,104,,104,104,,,,,,,,,,,,,,,,,,,,,104,,,104,,,104,,104,,,,,,104',
',,,,,,,104,,,,,104,104,104,104,104,104,,,,104,104,,,,105,105,105,104',
'105,,104,,105,105,,104,104,105,,105,105,105,105,105,105,105,,,,,,105',
'105,105,105,105,105,105,,,105,,,,,,,105,,,105,105,105,105,105,105,105',
',105,105,105,,105,105,,105,105,,,,,,,,,,,,,,,,,,,,,105,,,105,,,105,',
'105,,,,,,105,,,,,,,,105,,,,,105,105,105,105,105,105,,,,105,105,,,,106',
'106,106,105,106,,105,,106,106,,105,105,106,,106,106,106,106,106,106',
'106,,,,,,106,106,106,106,106,106,106,,,106,,,,,,,106,,,106,106,106,106',
'106,106,106,,106,106,106,,106,106,,106,106,,,,,,,,,,,,,,,,,,,,,106,',
',106,,,106,,106,,,,,,106,,,,,,,,106,,,,,106,106,106,106,106,106,,,,106',
'106,,,,,,,106,,,106,,,,,106,106,107,107,107,107,107,,,,107,107,,,,107',
',107,107,107,107,107,107,107,,,,,,107,107,107,107,107,107,107,,,107',
',,,,,107,107,,107,107,107,107,107,107,107,107,,107,107,107,,107,107',
',107,107,,,,,,,,,,,,,,,,,,,,,107,,,107,,,107,,107,,107,,,,107,,,,,,',
',107,,,,,107,107,107,107,107,107,,,,107,107,,,,,,,107,,,107,,,,,107',
'107,108,108,108,108,108,,,,108,108,,,,108,,108,108,108,108,108,108,108',
',,,,,108,108,108,108,108,108,108,,,108,,,,,,108,108,108,108,108,108',
'108,108,108,108,108,,108,108,108,,108,108,,108,108,,,,,,,,,,,,,,,,,',
',,,108,,,108,,,108,,108,,108,,,,108,,,,,,,,108,,,,,108,108,108,108,108',
'108,,,,108,108,,,,790,790,790,108,790,,108,,790,790,,108,108,790,,790',
'790,790,790,790,790,790,,,,,,790,790,790,790,790,790,790,,,790,,,,,',
',790,,,790,790,790,790,790,790,790,,790,790,790,,790,790,,790,790,,',
',,,,,,,,,,,,,,,,,,790,,,790,,,790,,790,,,,,,790,,,,,,,,790,,,,,790,790',
'790,790,790,790,,,,790,790,,,,789,789,789,790,789,,790,,789,789,,790',
'790,789,,789,789,789,789,789,789,789,,,,,,789,789,789,789,789,789,789',
',,789,,,,,,,789,,,789,789,789,789,789,789,789,,789,789,789,,789,789',
',789,789,,,,,,,,,,,,,,,,,,,,,789,,,789,,,789,,789,,,,,,789,,,,,,,,789',
',,,,789,789,789,789,789,789,,,,789,789,,,,788,788,788,789,788,,789,',
'788,788,,789,789,788,,788,788,788,788,788,788,788,,,,,,788,788,788,788',
'788,788,788,,,788,,,,,,,788,,,788,788,788,788,788,788,788,,788,788,788',
',788,788,,788,788,,,,,,,,,,,,,,,,,,,,,788,,,788,,,788,,788,,,,,,788',
',,,,,,,788,,,,,788,788,788,788,788,788,,,,788,788,,,,,,,788,,,788,,',
',,788,788,195,195,195,195,195,,,,195,195,,,,195,,195,195,195,195,195',
'195,195,,,,,,195,195,195,195,195,195,195,,,195,,,,,,195,195,,195,195',
'195,195,195,195,195,195,,195,195,195,,195,195,,195,195,,,,,,,,,,,,,',
',,,,,,,195,,,195,,,195,,195,,195,,,,195,,,,,,,,195,,,,,195,195,195,195',
'195,195,,,,195,195,,,,196,196,196,195,196,,195,,196,196,,195,195,196',
',196,196,196,196,196,196,196,,,,,,196,196,196,196,196,196,196,,,196',
',,,,,,196,,,196,196,196,196,196,196,196,,196,196,196,,196,196,,196,196',
',,,,,,,,,,,,,,,,,,,,196,,,196,,,196,,196,,196,,,,196,,,,,,,,196,,,,',
'196,196,196,196,196,196,,,,196,196,,,,197,197,197,196,197,,196,,197',
'197,,196,196,197,,197,197,197,197,197,197,197,,,,,,197,197,197,197,197',
'197,197,,,197,,,,,,,197,,,197,197,197,197,197,197,197,,197,197,197,',
'197,197,,197,197,,,,,,,,,,,,,,,,,,,,,197,,,197,,,197,,197,,197,,,,197',
',,,,,,,197,,,,,197,197,197,197,197,197,,,,197,197,,,,198,198,198,197',
'198,,197,,198,198,,197,197,198,,198,198,198,198,198,198,198,,,,,,198',
'198,198,198,198,198,198,,,198,,,,,,,198,,,198,198,198,198,198,198,198',
',198,198,198,,198,198,,198,198,,,,,,,,,,,,,,,,,,,,,198,,,198,,,198,',
'198,,,,,,198,,,,,,,,198,,,,,198,198,198,198,198,198,,,,198,198,,,,199',
'199,199,198,199,,198,,199,199,,198,198,199,,199,199,199,199,199,199',
'199,,,,,,199,199,199,199,199,199,199,,,199,,,,,,,199,,,199,199,199,199',
'199,199,199,199,199,199,199,,199,199,,199,199,,,,,,,,,,,,,,,,,,,,,199',
',,199,,,199,,199,,199,,,,199,,,,,,,,199,,,,,199,199,199,199,199,199',
',,,199,199,,,,200,200,200,199,200,,199,,200,200,,199,199,200,,200,200',
'200,200,200,200,200,,,,,,200,200,200,200,200,200,200,,,200,,,,,,,200',
',,200,200,200,200,200,200,200,200,200,200,200,,200,200,,200,200,,,,',
',,,,,,,,,,,,,,,,200,,,200,,,200,,200,,200,,,,200,,,,,,,,200,,,,,200',
'200,200,200,200,200,,,,200,200,,,,777,777,777,200,777,,200,,777,777',
',200,200,777,,777,777,777,777,777,777,777,,,,,,777,777,777,777,777,777',
'777,,,777,,,,,,,777,,,777,777,777,777,777,777,777,,777,777,777,,777',
'777,,777,777,,,,,,,,,,,,,,,,,,,,,777,,,777,,,777,,777,,,,,,777,,,,,',
',,777,,,,,777,777,777,777,777,777,,,,777,777,,,,776,776,776,777,776',
',777,,776,776,,777,777,776,,776,776,776,776,776,776,776,,,,,,776,776',
'776,776,776,776,776,,,776,,,,,,,776,,,776,776,776,776,776,776,776,,776',
'776,776,,776,776,,776,776,,,,,,,,,,,,,,,,,,,,,776,,,776,,,776,,776,',
',,,,776,,,,,,,,776,,,,,776,776,776,776,776,776,,,,776,776,,,,775,775',
'775,776,775,,776,,775,775,,776,776,775,,775,775,775,775,775,775,775',
',,,,,775,775,775,775,775,775,775,,,775,,,,,,,775,,,775,775,775,775,775',
'775,775,,775,775,775,,775,775,,775,775,,,,,,,,,,,,,,,,,,,,,775,,,775',
',,775,,775,,,,,,775,,,,,,,,775,,,,,775,775,775,775,775,775,,,,775,775',
',,,204,204,204,775,204,,775,,204,204,,775,775,204,,204,204,204,204,204',
'204,204,,,,,,204,204,204,204,204,204,204,,,204,,,,,,,204,,,204,204,204',
'204,204,204,204,,204,204,204,,204,204,,204,204,,,,,,,,,,,,,,,,,,,,,204',
',,204,,,204,,204,,,,,,204,,,,,,,,204,,,,,204,204,204,204,204,204,,,',
'204,204,,,,205,205,205,204,205,,204,,205,205,,204,204,205,,205,205,205',
'205,205,205,205,,,,,,205,205,205,205,205,205,205,,,205,,,,,,,205,,,205',
'205,205,205,205,205,205,,205,205,205,,205,205,,205,205,,,,,,,,,,,,,',
',,,,,,,205,,,205,,,205,,205,,,,,,205,,,,,,,,205,,,,,205,205,205,205',
'205,205,,,,205,205,,,,206,206,206,205,206,,205,,206,206,,205,205,206',
',206,206,206,206,206,206,206,,,,,,206,206,206,206,206,206,206,,,206',
',,,,,,206,,,206,206,206,206,206,206,206,,206,206,206,,206,206,,206,206',
',,,,,,,,,,,,,,,,,,,,206,,,206,,,206,,206,,,,,,206,,,,,,,,206,,,,,206',
'206,206,206,206,206,,,,206,206,,,,,,,206,,,206,,,,,206,206,769,769,769',
'769,769,,,,769,769,,,,769,,769,769,769,769,769,769,769,,,,,,769,769',
'769,769,769,769,769,,,769,,,,,,769,769,,769,769,769,769,769,769,769',
'769,,769,769,769,,769,769,,769,769,,,,,,,,,,,,,,,,,,,,,769,,,769,,,769',
',769,,769,,,,769,,,,,,,,769,,,,,769,769,769,769,769,769,,,,769,769,',
',,755,755,755,769,755,,769,,755,755,,769,769,755,,755,755,755,755,755',
'755,755,,,,,,755,755,755,755,755,755,755,,,755,,,,,,,755,,,755,755,755',
'755,755,755,755,,755,755,755,,755,755,,755,755,,,,,,,,,,,,,,,,,,,,,755',
',,755,,,755,,755,,,,,,755,,,,,,,,755,,,,,755,755,755,755,755,755,,,',
'755,755,,,,,,,755,,,755,,,,,755,755,748,748,748,748,748,,,,748,748,',
',,748,,748,748,748,748,748,748,748,,,,,,748,748,748,748,748,748,748',
',,748,,,,,,748,748,,748,748,748,748,748,748,748,748,,748,748,748,,748',
'748,,748,748,,,,,,,,,,,,,,,,,,,,,748,,,748,,,748,,748,,748,,,,748,,',
',,,,,748,,,,,748,748,748,748,748,748,,,,748,748,,,,,,,748,,,748,,,,',
'748,748,747,747,747,747,747,,,,747,747,,,,747,,747,747,747,747,747,747',
'747,,,,,,747,747,747,747,747,747,747,,,747,,,,,,747,747,,747,747,747',
'747,747,747,747,747,,747,747,747,,747,747,,747,747,,,,,,,,,,,,,,,,,',
',,,747,,,747,,,747,,747,,747,,,,747,,,,,,,,747,,,,,747,747,747,747,747',
'747,,,,747,747,,,,,,,747,,,747,,,,,747,747,743,743,743,743,743,,,,743',
'743,,,,743,,743,743,743,743,743,743,743,,,,,,743,743,743,743,743,743',
'743,,,743,,,,,,743,743,,743,743,743,743,743,743,743,743,,743,743,743',
',743,743,,743,743,,,,,,,,,,,,,,,,,,,,,743,,,743,,,743,,743,,743,,,,743',
',,,,,,,743,,,,,743,743,743,743,743,743,,,,743,743,,,,738,738,738,743',
'738,,743,,738,738,,743,743,738,,738,738,738,738,738,738,738,,,,,,738',
'738,738,738,738,738,738,,,738,,,,,,,738,,,738,738,738,738,738,738,738',
',738,738,738,,738,738,,738,738,,,,,,,,,,,,,,,,,,,,,738,,,738,,,738,',
'738,,,,,,738,,,,,,,,738,,,,,738,738,738,738,738,738,,,,738,738,,,,,',
',738,,,738,,,,,738,738,214,214,214,214,214,,,,214,214,,,,214,,214,214',
'214,214,214,214,214,,,,,,214,214,214,214,214,214,214,,,214,,,,,,214',
'214,,214,214,214,214,214,214,214,214,,214,214,214,,214,214,,214,214',
',,,,,,,,,,,,,,,,,,,,214,,,214,,,214,,214,,214,,,,214,,,,,,,,214,,,,',
'214,214,214,214,214,214,,,,214,214,,,,215,215,215,214,215,,214,,215',
'215,,214,214,215,,215,215,215,215,215,215,215,,,,,,215,215,215,215,215',
'215,215,,,215,,,,,,,215,,,215,215,215,215,215,215,215,,215,215,215,',
'215,215,,215,215,,,,,,,,,,,,,,,,,,,,,215,,,215,,215,215,,215,,,,,,215',
',,,,,,,215,,,,,215,215,215,215,215,215,,,,215,215,,,,218,218,218,215',
'218,,215,,218,218,,215,215,218,,218,218,218,218,218,218,218,,,,,,218',
'218,218,218,218,218,218,,,218,,,,,,,218,,,218,218,218,218,218,218,218',
',218,218,218,,218,218,,218,218,,,,,,,,,,,,,,,,,,,,,218,,,218,,,218,',
'218,,,,,,218,,,,,,,,218,,,,,218,218,218,218,218,218,,,,218,218,,,,731',
'731,731,218,731,,218,,731,731,,218,218,731,,731,731,731,731,731,731',
'731,,,,,,731,731,731,731,731,731,731,,,731,,,,,,,731,,,731,731,731,731',
'731,731,731,,731,731,731,,731,731,,731,731,,,,,,,,,,,,,,,,,,,,,731,',
',731,,,731,,731,,731,,,,731,,,,,,,,731,,,,,731,731,731,731,731,731,',
',,731,731,,,,220,220,220,731,220,,731,,220,220,,731,731,220,,220,220',
'220,220,220,220,220,,,,,,220,220,220,220,220,220,220,,,220,,,,,,,220',
',,220,220,220,220,220,220,220,,220,220,220,,220,220,,220,220,,,,,,,',
',,,,,,,,,,,,,220,,,220,,,220,,220,,,,,,220,,,,,,,,220,,,,,220,220,220',
'220,220,220,,,,220,220,,,,221,221,221,220,221,,220,,221,221,,220,220',
'221,,221,221,221,221,221,221,221,,,,,,221,221,221,221,221,221,221,,',
'221,,,,,,,221,,,221,221,221,221,221,221,221,,221,221,221,,221,221,,221',
'221,,,,,,,,,,,,,,,,,,,,,221,,,221,,,221,,221,,,,,,221,,,,,,,,221,,,',
',221,221,221,221,221,221,,,,221,221,,,,222,222,222,221,222,,221,,222',
'222,,221,221,222,,222,222,222,222,222,222,222,,,,,,222,222,222,222,222',
'222,222,,,222,,,,,,,222,,,222,222,222,222,222,222,222,,222,222,222,',
'222,222,,222,222,,,,,,,,,,,,,,,,,,,,,222,,,222,,,222,,222,,,,,,222,',
',,,,,,222,,,,,222,222,222,222,222,222,,,,222,222,,,,223,223,223,222',
'223,,222,,223,223,,222,222,223,,223,223,223,223,223,223,223,,,,,,223',
'223,223,223,223,223,223,,,223,,,,,,,223,,,223,223,223,223,223,223,223',
',223,223,223,,223,223,,223,223,,,,,,,,,,,,,,,,,,,,,223,,,223,,,223,',
'223,,,,,,223,,,,,,,,223,,,,,223,223,223,223,223,223,,,,223,223,,,,224',
'224,224,223,224,,223,,224,224,,223,223,224,,224,224,224,224,224,224',
'224,,,,,,224,224,224,224,224,224,224,,,224,,,,,,,224,,,224,224,224,224',
'224,224,224,,224,224,224,,224,224,,224,224,,,,,,,,,,,,,,,,,,,,,224,',
',224,,,224,,224,,,,,,224,,,,,,,,224,,,,,224,224,224,224,224,224,,,,224',
'224,,,,225,225,225,224,225,,224,,225,225,,224,224,225,,225,225,225,225',
'225,225,225,,,,,,225,225,225,225,225,225,225,,,225,,,,,,,225,,,225,225',
'225,225,225,225,225,,225,225,225,,225,225,,225,225,,,,,,,,,,,,,,,,,',
',,,225,,,225,,,225,,225,,,,,,225,,,,,,,,225,,,,,225,225,225,225,225',
'225,,,,225,225,,,,226,226,226,225,226,,225,,226,226,,225,225,226,,226',
'226,226,226,226,226,226,,,,,,226,226,226,226,226,226,226,,,226,,,,,',
',226,,,226,226,226,226,226,226,226,,226,226,226,,226,226,,226,226,,',
',,,,,,,,,,,,,,,,,,226,,,226,,,226,,226,,,,,,226,,,,,,,,226,,,,,226,226',
'226,226,226,226,,,,226,226,,,,227,227,227,226,227,,226,,227,227,,226',
'226,227,,227,227,227,227,227,227,227,,,,,,227,227,227,227,227,227,227',
',,227,,,,,,,227,,,227,227,227,227,227,227,227,,227,227,227,,227,227',
',227,227,,,,,,,,,,,,,,,,,,,,,227,,,227,,,227,,227,,,,,,227,,,,,,,,227',
',,,,227,227,227,227,227,227,,,,227,227,,,,228,228,228,227,228,,227,',
'228,228,,227,227,228,,228,228,228,228,228,228,228,,,,,,228,228,228,228',
'228,228,228,,,228,,,,,,,228,,,228,228,228,228,228,228,228,,228,228,228',
',228,228,,228,228,,,,,,,,,,,,,,,,,,,,,228,,,228,,,228,,228,,,,,,228',
',,,,,,,228,,,,,228,228,228,228,228,228,,,,228,228,,,,229,229,229,228',
'229,,228,,229,229,,228,228,229,,229,229,229,229,229,229,229,,,,,,229',
'229,229,229,229,229,229,,,229,,,,,,,229,,,229,229,229,229,229,229,229',
',229,229,229,,229,229,,229,229,,,,,,,,,,,,,,,,,,,,,229,,,229,,,229,',
'229,,,,,,229,,,,,,,,229,,,,,229,229,229,229,229,229,,,,229,229,,,,230',
'230,230,229,230,,229,,230,230,,229,229,230,,230,230,230,230,230,230',
'230,,,,,,230,230,230,230,230,230,230,,,230,,,,,,,230,,,230,230,230,230',
'230,230,230,,230,230,230,,230,230,,230,230,,,,,,,,,,,,,,,,,,,,,230,',
',230,,,230,,230,,,,,,230,,,,,,,,230,,,,,230,230,230,230,230,230,,,,230',
'230,,,,231,231,231,230,231,,230,,231,231,,230,230,231,,231,231,231,231',
'231,231,231,,,,,,231,231,231,231,231,231,231,,,231,,,,,,,231,,,231,231',
'231,231,231,231,231,,231,231,231,,231,231,,231,231,,,,,,,,,,,,,,,,,',
',,,231,,,231,,,231,,231,,,,,,231,,,,,,,,231,,,,,231,231,231,231,231',
'231,,,,231,231,,,,232,232,232,231,232,,231,,232,232,,231,231,232,,232',
'232,232,232,232,232,232,,,,,,232,232,232,232,232,232,232,,,232,,,,,',
',232,,,232,232,232,232,232,232,232,,232,232,232,,232,232,,232,232,,',
',,,,,,,,,,,,,,,,,,232,,,232,,,232,,232,,,,,,232,,,,,,,,232,,,,,232,232',
'232,232,232,232,,,,232,232,,,,233,233,233,232,233,,232,,233,233,,232',
'232,233,,233,233,233,233,233,233,233,,,,,,233,233,233,233,233,233,233',
',,233,,,,,,,233,,,233,233,233,233,233,233,233,,233,233,233,,233,233',
',233,233,,,,,,,,,,,,,,,,,,,,,233,,,233,,,233,,233,,,,,,233,,,,,,,,233',
',,,,233,233,233,233,233,233,,,,233,233,,,,234,234,234,233,234,,233,',
'234,234,,233,233,234,,234,234,234,234,234,234,234,,,,,,234,234,234,234',
'234,234,234,,,234,,,,,,,234,,,234,234,234,234,234,234,234,,234,234,234',
',234,234,,234,234,,,,,,,,,,,,,,,,,,,,,234,,,234,,,234,,234,,,,,,234',
',,,,,,,234,,,,,234,234,234,234,234,234,,,,234,234,,,,235,235,235,234',
'235,,234,,235,235,,234,234,235,,235,235,235,235,235,235,235,,,,,,235',
'235,235,235,235,235,235,,,235,,,,,,,235,,,235,235,235,235,235,235,235',
',235,235,235,,235,235,,235,235,,,,,,,,,,,,,,,,,,,,,235,,,235,,,235,',
'235,,,,,,235,,,,,,,,235,,,,,235,235,235,235,235,235,,,,235,235,,,,236',
'236,236,235,236,,235,,236,236,,235,235,236,,236,236,236,236,236,236',
'236,,,,,,236,236,236,236,236,236,236,,,236,,,,,,,236,,,236,236,236,236',
'236,236,236,,236,236,236,,236,236,,236,236,,,,,,,,,,,,,,,,,,,,,236,',
',236,,,236,,236,,,,,,236,,,,,,,,236,,,,,236,236,236,236,236,236,,,,236',
'236,,,,237,237,237,236,237,,236,,237,237,,236,236,237,,237,237,237,237',
'237,237,237,,,,,,237,237,237,237,237,237,237,,,237,,,,,,,237,,,237,237',
'237,237,237,237,237,,237,237,237,,237,237,,237,237,,,,,,,,,,,,,,,,,',
',,,237,,,237,,,237,,237,,,,,,237,,,,,,,,237,,,,,237,237,237,237,237',
'237,,,,237,237,,,,238,238,238,237,238,,237,,238,238,,237,237,238,,238',
'238,238,238,238,238,238,,,,,,238,238,238,238,238,238,238,,,238,,,,,',
',238,,,238,238,238,238,238,238,238,,238,238,238,,238,238,,238,238,,',
',,,,,,,,,,,,,,,,,,238,,,238,,,238,,238,,,,,,238,,,,,,,,238,,,,,238,238',
'238,238,238,238,,,,238,238,,,,239,239,239,238,239,,238,,239,239,,238',
'238,239,,239,239,239,239,239,239,239,,,,,,239,239,239,239,239,239,239',
',,239,,,,,,,239,,,239,239,239,239,239,239,239,,239,239,239,,239,239',
',239,239,,,,,,,,,,,,,,,,,,,,,239,,,239,,,239,,239,,,,,,239,,,,,,,,239',
',,,,239,239,239,239,239,239,,,,239,239,,,,240,240,240,239,240,,239,',
'240,240,,239,239,240,,240,240,240,240,240,240,240,,,,,,240,240,240,240',
'240,240,240,,,240,,,,,,,240,,,240,240,240,240,240,240,240,,240,240,240',
',240,240,,240,240,,,,,,,,,,,,,,,,,,,,,240,,,240,,,240,,240,,,,,,240',
',,,,,,,240,,,,,240,240,240,240,240,240,,,,240,240,,,,241,241,241,240',
'241,,240,,241,241,,240,240,241,,241,241,241,241,241,241,241,,,,,,241',
'241,241,241,241,241,241,,,241,,,,,,,241,,,241,241,241,241,241,241,241',
',241,241,241,,241,241,,241,241,,,,,,,,,,,,,,,,,,,,,241,,,241,,,241,',
'241,,,,,,241,,,,,,,,241,,,,,241,241,241,241,241,241,,,,241,241,,,,242',
'242,242,241,242,,241,,242,242,,241,241,242,,242,242,242,242,242,242',
'242,,,,,,242,242,242,242,242,242,242,,,242,,,,,,,242,,,242,242,242,242',
'242,242,242,,242,242,242,,242,242,,242,242,,,,,,,,,,,,,,,,,,,,,242,',
',242,,,242,,242,,,,,,242,,,,,,,,242,,,,,242,242,242,242,242,242,,,,242',
'242,,,,243,243,243,242,243,,242,,243,243,,242,242,243,,243,243,243,243',
'243,243,243,,,,,,243,243,243,243,243,243,243,,,243,,,,,,,243,,,243,243',
'243,243,243,243,243,,243,243,243,,243,243,,243,243,,,,,,,,,,,,,,,,,',
',,,243,,,243,,,243,,243,,,,,,243,,,,,,,,243,,,,,243,243,243,243,243',
'243,,,,243,243,,,,244,244,244,243,244,,243,,244,244,,243,243,244,,244',
'244,244,244,244,244,244,,,,,,244,244,244,244,244,244,244,,,244,,,,,',
',244,,,244,244,244,244,244,244,244,,244,244,244,,244,244,,244,244,,',
',,,,,,,,,,,,,,,,,,244,,,244,,,244,,244,,,,,,244,,,,,,,,244,,,,,244,244',
'244,244,244,244,,,,244,244,,,,245,245,245,244,245,,244,,245,245,,244',
'244,245,,245,245,245,245,245,245,245,,,,,,245,245,245,245,245,245,245',
',,245,,,,,,,245,,,245,245,245,245,245,245,245,,245,245,245,,245,245',
',245,245,,,,,,,,,,,,,,,,,,,,,245,,,245,,,245,,245,,,,,,245,,,,,,,,245',
',,,,245,245,245,245,245,245,,,,245,245,,,,700,700,700,245,700,,245,',
'700,700,,245,245,700,,700,700,700,700,700,700,700,,,,,,700,700,700,700',
'700,700,700,,,700,,,,,,,700,,,700,700,700,700,700,700,700,,700,700,700',
',700,700,,700,700,,,,,,,,,,,,,,,,,,,,,700,,,700,,,700,,700,,700,,,,700',
',,,,,,,700,,,,,700,700,700,700,700,700,,,,700,700,,,,694,694,694,700',
'694,,700,,694,694,,700,700,694,,694,694,694,694,694,694,694,,,,,,694',
'694,694,694,694,694,694,,,694,,,,,,,694,,,694,694,694,694,694,694,694',
',694,694,694,,694,694,,,,,,,,,,,,,,,,,,,,,,,,694,,,694,,,694,,694,,',
',,,,,,,,,,,,,,,,694,694,694,694,694,694,,,,694,694,,,,682,682,682,694',
'682,,694,,682,682,,694,694,682,,682,682,682,682,682,682,682,,,,,,682',
'682,682,682,682,682,682,,,682,,,,,,,682,,,682,682,682,682,682,682,682',
',682,682,682,,682,682,,,,,,,,,,,,,,,,,,,,,,,,682,,,682,,,682,,682,,',
',,,,,,,,,,,,,,,,682,682,682,682,682,682,,,,682,682,,,,254,254,254,682',
'254,,682,,254,254,,682,682,254,,254,254,254,254,254,254,254,,,,,,254',
'254,254,254,254,254,254,,,254,,,,,,,254,,,254,254,254,254,254,254,254',
',254,254,254,,254,254,,254,254,,,,,,,,,,,,,,,,,,,,,254,,,254,,,254,',
'254,,,,,,254,,,,,,,,254,,,,,254,254,254,254,254,254,,,,254,254,,,,,',
',254,,,254,,,,,254,254,678,678,678,678,678,,,,678,678,,,,678,,678,678',
'678,678,678,678,678,,,,,,678,678,678,678,678,678,678,,,678,,,,,,678',
'678,,678,678,678,678,678,678,678,678,,678,678,678,,678,678,,678,678',
',,,,,,,,,,,,,,,,,,,,678,,,678,,,678,,678,,678,,,,678,,,,,,,,678,,,,',
'678,678,678,678,678,678,,,,678,678,,,,256,256,256,678,256,,678,,256',
'256,,678,678,256,,256,256,256,256,256,256,256,,,,,,256,256,256,256,256',
'256,256,,,256,,,,,,,256,,,256,256,256,256,256,256,256,,256,256,256,',
'256,256,,256,256,,,,,,,,,,,,,,,,,,,,,256,,,256,,,256,,256,,,,,,256,',
',,,,,,256,,,,,256,256,256,256,256,256,,,,256,256,,,,261,261,261,256',
'261,,256,,261,261,,256,256,261,,261,261,261,261,261,261,261,,,,,,261',
'261,261,261,261,261,261,,,261,,,,,,,261,,,261,261,261,261,261,261,261',
',261,261,261,,261,261,,261,261,,,,,,,,,,,,,,,,,,,,,261,,,261,,,261,',
'261,,,,,,261,,,,,,,,261,,,,,261,261,261,261,261,261,,,,261,261,,,,,',
',261,,,261,,,,,261,261,677,677,677,677,677,,,,677,677,,,,677,,677,677',
'677,677,677,677,677,,,,,,677,677,677,677,677,677,677,,,677,,,,,,677',
'677,,677,677,677,677,677,677,677,677,,677,677,677,,677,677,,677,677',
',,,,,,,,,,,,,,,,,,,,677,,,677,,,677,,677,,677,,,,677,,,,,,,,677,,,,',
'677,677,677,677,677,677,,,,677,677,,,,671,671,671,677,671,,677,,671',
'671,,677,677,671,,671,671,671,671,671,671,671,,,,,,671,671,671,671,671',
'671,671,,,671,,,,,,,671,,,671,671,671,671,671,671,671,671,671,671,671',
',671,671,,671,671,,,,,,,,,,,,,,,,,,,,,671,,,671,,,671,,671,,,,671,,671',
',,,,,,,671,,,,,671,671,671,671,671,671,,,,671,671,,,,670,670,670,671',
'670,,671,,670,670,,671,671,670,,670,670,670,670,670,670,670,,,,,,670',
'670,670,670,670,670,670,,,670,,,,,,,670,,,670,670,670,670,670,670,670',
'670,670,670,670,,670,670,,670,670,,,,,,,,,,,,,,,,,,,,,670,,,670,,,670',
',670,,670,,670,,670,,,,,,,,670,,,,,670,670,670,670,670,670,,,,670,670',
',,,,,,670,,,670,,,,,670,670,667,667,667,667,667,,,,667,667,,,,667,,667',
'667,667,667,667,667,667,,,,,,667,667,667,667,667,667,667,,,667,,,,,',
'667,667,,667,667,667,667,667,667,667,667,,667,667,667,,667,667,,667',
'667,,,,,,,,,,,,,,,,,,,,,667,,,667,,,667,,667,,667,,,,667,,,,,,,,667',
',,,,667,667,667,667,667,667,,,,667,667,,,,268,268,268,667,268,,667,',
'268,268,,667,667,268,,268,268,268,268,268,268,268,,,,,,268,268,268,268',
'268,268,268,,,268,,,,,,,268,,,268,268,268,268,268,268,268,268,268,268',
'268,,268,268,,268,268,,,,,,,,,,,,,,,,,,,,,268,,,268,,,268,,268,,268',
',268,,268,,,,,,,,268,,,,,268,268,268,268,268,268,,,,268,268,,,,269,269',
'269,268,269,,268,,269,269,,268,268,269,,269,269,269,269,269,269,269',
',,,,,269,269,269,269,269,269,269,,,269,,,,,,,269,,,269,269,269,269,269',
'269,269,269,269,269,269,,269,269,,269,269,,,,,,,,,,,,,,,,,,,,,269,,',
'269,,,269,,269,,269,,269,,269,,,,,,,,269,,,,,269,269,269,269,269,269',
',,,269,269,,,,277,277,277,269,277,,269,,277,277,,269,269,277,,277,277',
'277,277,277,277,277,,,,,,277,277,277,277,277,277,277,,,277,,,,,,,277',
',,277,277,277,277,277,277,277,277,277,277,277,,277,277,,277,277,,,,',
',,,,,,,,,,,,,,,,277,,,277,,277,277,,277,,277,,277,,277,,,,,,,,277,,',
',,277,277,277,277,277,277,,,,277,277,,,,658,658,658,277,658,,277,,658',
'658,,277,277,658,,658,658,658,658,658,658,658,,,,,,658,658,658,658,658',
'658,658,,,658,,,,,,,658,,,658,658,658,658,658,658,658,,658,658,658,',
'658,658,,658,658,,,,,,,,,,,,,,,,,,,,,658,,,658,,,658,,658,,,,,,658,',
',,,,,,658,,,,,658,658,658,658,658,658,,,,658,658,,,,,,,658,,,658,,,',
',658,658,654,654,654,654,654,,,,654,654,,,,654,,654,654,654,654,654',
'654,654,,,,,,654,654,654,654,654,654,654,,,654,,,,,,654,654,,654,654',
'654,654,654,654,654,654,,654,654,654,,654,654,,654,654,,,,,,,,,,,,,',
',,,,,,,654,,,654,,,654,,654,,654,,,,654,,,,,,,,654,,,,,654,654,654,654',
'654,654,,,,654,654,,,,650,650,650,654,650,,654,,650,650,,654,654,650',
',650,650,650,650,650,650,650,,,,,,650,650,650,650,650,650,650,,,650',
',,,,,,650,,,650,650,650,650,650,650,650,,650,650,650,,650,650,,650,650',
',,,,,,,,,,,,,,,,,,,,650,,,650,,,650,,650,,,,,,650,,,,,,,,650,,,,,650',
'650,650,650,650,650,,,,650,650,,,,,,,650,,,650,,,,,650,650,281,281,281',
'281,281,,,,281,281,,,,281,,281,281,281,281,281,281,281,,,,,,281,281',
'281,281,281,281,281,,,281,,,,,,281,281,,281,281,281,281,281,281,281',
'281,,281,281,281,,281,281,,281,281,,,,,,,,,,,,,,,,,,,,,281,,,281,,,281',
',281,,281,,,,281,,,,,,,,281,,,,,281,281,281,281,281,281,,,,281,281,',
',,349,349,349,281,349,,281,,349,349,,281,281,349,,349,349,349,349,349',
'349,349,,,,,,349,349,349,349,349,349,349,,,349,,,,,,,349,,,349,349,349',
'349,349,349,349,,349,349,349,,349,349,,349,349,,,,,,,,,,,,,,,,,,,,,349',
',,349,,,349,,349,,,,,,349,,,,,,,,349,,,,,349,349,349,349,349,349,,,',
'349,349,,,,491,491,491,349,491,,349,,491,491,,349,349,491,,491,491,491',
'491,491,491,491,,,,,,491,491,491,491,491,491,491,,,491,,,,,,,491,,,491',
'491,491,491,491,491,491,,491,491,491,,491,491,,491,491,,,,,,,,,,,,,',
',,,,,,,491,,,491,,,491,,491,,,,,,491,,,,,,,,491,,,,,491,491,491,491',
'491,491,,,,491,491,,,,639,639,639,491,639,,491,,639,639,,491,491,639',
',639,639,639,639,639,639,639,,,,,,639,639,639,639,639,639,639,,,639',
',,,,,,639,,,639,639,639,639,639,639,639,,639,639,639,,639,639,,639,639',
',,,,,,,,,,,,,,,,,,,,639,,,639,,,639,,639,,,,,,639,,,,,,,,639,,,,,639',
'639,639,639,639,639,,,,639,639,,,,285,285,285,639,285,,639,,285,285',
',639,639,285,,285,285,285,285,285,285,285,,,,,,285,285,285,285,285,285',
'285,,,285,,,,,,,285,,,285,285,285,285,285,285,285,,285,285,285,,285',
'285,856,,856,856,856,856,856,,,,,,,,,856,,,,,,,,285,,,285,,,285,,285',
',,,,,,856,,,,,,,856,856,856,856,,285,285,285,285,285,285,,,,285,285',
',,,285,,,285,,,285,,,,,285,285,286,286,286,286,286,,,856,286,286,,,',
'286,,286,286,286,286,286,286,286,,,,,,286,286,286,286,286,286,286,,',
'286,,,,,,286,286,,286,286,286,286,286,286,286,286,,286,286,286,,286',
'286,,286,286,,,,,,,,,,,,,,,,,,,,,286,,,286,,,286,,286,,286,,,,286,,',
',,,,,286,,,,,286,286,286,286,286,286,,,,286,286,,,,636,636,636,286,636',
',286,,636,636,,286,286,636,,636,636,636,636,636,636,636,,,,,,636,636',
'636,636,636,636,636,,,636,,,,,,,636,,,636,636,636,636,636,636,636,,636',
'636,636,,636,636,,636,636,,,,,,,,,,,,,,,,,,,,,636,,,636,,,636,,636,',
',,,,636,,,,,,,,636,,,,,636,636,636,636,636,636,,,,636,636,,,,631,631',
'631,636,631,,636,,631,631,,636,636,631,,631,631,631,631,631,631,631',
',,,,,631,631,631,631,631,631,631,,,631,,,,,,,631,,,631,631,631,631,631',
'631,631,,631,631,631,,631,631,,631,631,,,,,,,,,,,,,,,,,,,,,631,,,631',
',,631,,631,,,,,,631,,,,,,,,631,,,,,631,631,631,631,631,631,,,,631,631',
',,,630,630,630,631,630,,631,,630,630,,631,631,630,,630,630,630,630,630',
'630,630,,,,,,630,630,630,630,630,630,630,,,630,,,,,,,630,,,630,630,630',
'630,630,630,630,,630,630,630,,630,630,,630,630,,,,,,,,,,,,,,,,,,,,,630',
',,630,,,630,,630,,,,,,630,,,,,,,,630,,,,,630,630,630,630,630,630,,,',
'630,630,,,,627,627,627,630,627,,630,,627,627,,630,630,627,,627,627,627',
'627,627,627,627,,,,,,627,627,627,627,627,627,627,,,627,,,,,,,627,,,627',
'627,627,627,627,627,627,,627,627,627,,627,627,,627,627,,,,,,,,,,,,,',
',,,,,,,627,,,627,,,627,,627,,627,,,,627,,,,,,,,627,,,,,627,627,627,627',
'627,627,,,,627,627,,,,625,625,625,627,625,,627,,625,625,,627,627,625',
',625,625,625,625,625,625,625,,,,,,625,625,625,625,625,625,625,,,625',
',,,,,,625,,,625,625,625,625,625,625,625,,625,625,625,,625,625,,625,625',
',,,,,,,,,,,,,,,,,,,,625,,,625,,,625,,625,,,,,,625,,,,,,,,625,,,,,625',
'625,625,625,625,625,,,,625,625,,,,598,598,598,625,598,,625,,598,598',
',625,625,598,,598,598,598,598,598,598,598,,,,,,598,598,598,598,598,598',
'598,,,598,,,,,,,598,,,598,598,598,598,598,598,598,,598,598,598,,598',
'598,,598,598,,,,,,,,,,,,,,,,,,,,,598,,,598,,,598,,598,,,,,,598,,,,,',
',,598,,,,,598,598,598,598,598,598,,,,598,598,,,,596,596,596,598,596',
',598,,596,596,,598,598,596,,596,596,596,596,596,596,596,,,,,,596,596',
'596,596,596,596,596,,,596,,,,,,,596,,,596,596,596,596,596,596,596,,596',
'596,596,,596,596,,596,596,,,,,,,,,,,,,,,,,,,,,596,,,596,,,596,,596,',
',,,,596,,,,,,,,596,,,,,596,596,596,596,596,596,,,,596,596,,,,381,381',
'381,596,381,,596,,381,381,,596,596,381,,381,381,381,381,381,381,381',
',,,,,381,381,381,381,381,381,381,,,381,,,,,,,381,,,381,381,381,381,381',
'381,381,,381,381,381,,381,381,,381,381,,,,,,,,,,,,,,,,,,,,,381,,,381',
',,381,,381,,,,,,381,,,,,,,,381,,,,,381,381,381,381,381,381,,,,381,381',
',,,586,586,586,381,586,,381,,586,586,,381,381,586,,586,586,586,586,586',
'586,586,,,,,,586,586,586,586,586,586,586,,,586,,,,,,,586,,,586,586,586',
'586,586,586,586,586,586,586,586,,586,586,,586,586,,,,,,,,,,,,,,,,,,',
',,586,,,586,,,586,,586,,586,,,,586,,,,,,,,586,,,,,586,586,586,586,586',
'586,,,,586,586,,,,298,298,298,586,298,,586,,298,298,,586,586,298,,298',
'298,298,298,298,298,298,,,,,,298,298,298,298,298,298,298,,,298,,,,,',
',298,,,298,298,298,298,298,298,298,,298,298,298,,298,298,,,,,,,,,,,',
',,,,,,,,,,,,298,,,298,,,298,,298,,,,,,,,,,,,,,,,,,,298,298,298,298,298',
'298,,,,298,298,,,,583,583,583,298,583,,298,,583,583,,298,298,583,,583',
'583,583,583,583,583,583,,,,,,583,583,583,583,583,583,583,,,583,,,,,',
',583,,,583,583,583,583,583,583,583,583,583,583,583,,583,583,,583,583',
',,,,,,,,,,,,,,,,,,,,583,,,583,,,583,,583,,583,,,,583,,,,,,,,583,,,,',
'583,583,583,583,583,583,,,,583,583,,,,,,,583,,,583,,,,,583,583,581,581',
'581,581,581,,,,581,581,,,,581,,581,581,581,581,581,581,581,,,,,,581',
'581,581,581,581,581,581,,,581,,,,,,581,581,,581,581,581,581,581,581',
'581,581,,581,581,581,,581,581,,581,581,,,,,,,,,,,,,,,,,,,,,581,,,581',
',,581,,581,,581,,,,581,,,,,,,,581,,,,,581,581,581,581,581,581,,,,581',
'581,,,,,,,581,,,581,,,,,581,581,576,576,576,576,576,,,,576,576,,,,576',
',576,576,576,576,576,576,576,,,,,,576,576,576,576,576,576,576,,,576',
',,,,,576,576,,576,576,576,576,576,576,576,576,,576,576,576,,576,576',
',576,576,,,,,,,,,,,,,,,,,,,,,576,,,576,,,576,,576,,576,,,,576,,,,,,',
',576,,,,,576,576,576,576,576,576,,,,576,576,,,,,,,576,,,576,,,,,576',
'576,572,572,572,572,572,,,,572,572,,,,572,,572,572,572,572,572,572,572',
',,,,,572,572,572,572,572,572,572,,,572,,,,,,572,572,,572,572,572,572',
'572,572,572,572,,572,572,572,,572,572,,572,572,,,,,,,,,,,,,,,,,,,,,572',
',,572,,,572,,572,,572,,,,572,,,,,,,,572,,,,,572,572,572,572,572,572',
',,,572,572,,,,558,558,558,572,558,,572,,558,558,,572,572,558,,558,558',
'558,558,558,558,558,,,,,,558,558,558,558,558,558,558,,,558,,,,,,,558',
',,558,558,558,558,558,558,558,,558,558,558,,558,558,,,,,,,,,,,,,,,,',
',,,,,,,558,,,558,,,558,,558,,,,,,,,,,,,,,,,,,,558,558,558,558,558,558',
',,,558,558,,,,307,307,307,558,307,,558,,307,307,,558,558,307,,307,307',
'307,307,307,307,307,,,,,,307,307,307,307,307,307,307,,,307,,,,,,,307',
',,307,307,307,307,307,307,307,,307,307,307,,307,307,,307,307,,,,,,,',
',,,,,,,,,,,,,307,,,307,307,,307,,307,,,,,,307,,,,,,,,307,,,,,307,307',
'307,307,307,307,,,,307,307,,,,,,,307,,,307,,,,,307,307,309,309,309,309',
'309,,,,309,309,,,,309,,309,309,309,309,309,309,309,,,,,,309,309,309',
'309,309,309,309,,,309,,,,,,309,309,,309,309,309,309,309,309,309,309',
',309,309,309,,309,309,,309,309,,,,,,,,,,,,,,,,,,,,,309,,,309,,,309,',
'309,,309,,,,309,,,,,,,,309,,,,,309,309,309,309,309,309,,,,309,309,,',
',,,,309,,,309,,,,,309,309,552,552,552,552,552,,,,552,552,,,,552,,552',
'552,552,552,552,552,552,,,,,,552,552,552,552,552,552,552,,,552,,,,,',
'552,552,,552,552,552,552,552,552,552,552,,552,552,552,,552,552,,552',
'552,,,,,,,,,,,,,,,,,,,,,552,,,552,,,552,,552,,552,,,,552,,,,,,,,552',
',,,,552,552,552,552,552,552,,,,552,552,,,,,,,552,,,552,,,,,552,552,551',
'551,551,551,551,,,,551,551,,,,551,,551,551,551,551,551,551,551,,,,,',
'551,551,551,551,551,551,551,,,551,,,,,,551,551,,551,551,551,551,551',
'551,551,551,,551,551,551,,551,551,,551,551,,,,,,,,,,,,,,,,,,,,,551,',
',551,,,551,,551,,551,,,,551,,,,,,,,551,,,,,551,551,551,551,551,551,',
',,551,551,,,,546,546,546,551,546,,551,,546,546,,551,551,546,,546,546',
'546,546,546,546,546,,,,,,546,546,546,546,546,546,546,,,546,,,,,,,546',
',,546,546,546,546,546,546,546,546,546,546,546,,546,546,,546,546,,,,',
',,,,,,,,,,,,,,,,546,,,546,,,546,,546,,,,,,546,,,,,,,,546,,,,,546,546',
'546,546,546,546,,,,546,546,,,,543,543,543,546,543,,546,,543,543,,546',
'546,543,,543,543,543,543,543,543,543,,,,,,543,543,543,543,543,543,543',
',,543,,,,,,,543,,,543,543,543,543,543,543,543,543,543,543,543,,543,543',
',543,543,,,,,,,,,,,,,,,,,,,,,543,,,543,,,543,,543,,543,,,,543,,,,,,',
',543,,,,,543,543,543,543,543,543,,,,543,543,,,,537,537,537,543,537,',
'543,,537,537,,543,543,537,,537,537,537,537,537,537,537,,,,,,537,537',
'537,537,537,537,537,,,537,,,,,,,537,,,537,537,537,537,537,537,537,,537',
'537,537,,537,537,,537,537,,,,,,,,,,,,,,,,,,,,,537,,,537,,,537,,537,',
',,,,537,,,,,,,,537,,,,,537,537,537,537,537,537,,,,537,537,,,,533,533',
'533,537,533,,537,,533,533,,537,537,533,,533,533,533,533,533,533,533',
',,,,,533,533,533,533,533,533,533,,,533,,,,,,,533,,,533,533,533,533,533',
'533,533,,533,533,533,,533,533,,533,533,,,,,,,,,,,,,,,,,,,,,533,,,533',
',,533,,533,,,,,,533,,,,,,,,533,,,,,533,533,533,533,533,533,,,,533,533',
',,,532,532,532,533,532,,533,,532,532,,533,533,532,,532,532,532,532,532',
'532,532,,,,,,532,532,532,532,532,532,532,,,532,,,,,,,532,,,532,532,532',
'532,532,532,532,,532,532,532,,532,532,,532,532,,,,,,,,,,,,,,,,,,,,,532',
',,532,,,532,,532,,,,,,532,,,,,,,,532,,,,,532,532,532,532,532,532,,,',
'532,532,,,,531,531,531,532,531,,532,,531,531,,532,532,531,,531,531,531',
'531,531,531,531,,,,,,531,531,531,531,531,531,531,,,531,,,,,,,531,,,531',
'531,531,531,531,531,531,,531,531,531,,531,531,,531,531,,,,,,,,,,,,,',
',,,,,,,531,,,531,,,531,,531,,,,,,531,,,,,,,,531,,,,,531,531,531,531',
'531,531,,,,531,531,,,,523,523,523,531,523,,531,,523,523,,531,531,523',
',523,523,523,523,523,523,523,,,,,,523,523,523,523,523,523,523,,,523',
',,,,,,523,,,523,523,523,523,523,523,523,523,523,523,523,,523,523,,523',
'523,,,,,,,,,,,,,,,,,,,,,523,,,523,,,523,,523,,523,,,,523,,,,,,,,523',
',,,,523,523,523,523,523,523,,,,523,523,,,,520,520,520,523,520,,523,',
'520,520,,523,523,520,,520,520,520,520,520,520,520,,,,,,520,520,520,520',
'520,520,520,,,520,,,,,,,520,,,520,520,520,520,520,520,520,520,520,520',
'520,,520,520,,520,520,,,,,,,,,,,,,,,,,,,,,520,,,520,,,520,,520,,520',
',,,520,,,,,,,,520,,,,,520,520,520,520,520,520,,,,520,520,,,,518,518',
'518,520,518,,520,,518,518,,520,520,518,,518,518,518,518,518,518,518',
',,,,,518,518,518,518,518,518,518,,,518,,,,,,,518,,,518,518,518,518,518',
'518,518,,518,518,518,,518,518,918,,918,918,918,918,918,,,,,,,,,918,',
',,,,,,518,,,518,,,518,,518,,,,,,,918,918,,,,,,918,918,918,918,,518,518',
'518,518,518,518,,,,518,518,,,,,,,518,,,518,,,,,518,518,512,512,512,512',
'512,,,918,512,512,,,,512,,512,512,512,512,512,512,512,,,,,,512,512,512',
'512,512,512,512,,,512,,,,,,512,512,,512,512,512,512,512,512,512,512',
',512,512,512,,512,512,,512,512,,,,,,,,,,,,,,,,,,,,,512,,,512,,,512,',
'512,,512,,,,512,,,,,,,,512,,,,,512,512,512,512,512,512,,,,512,512,,',
',,,512,512,,,512,,,,,512,512,506,506,506,,506,,,,506,506,,,,506,,506',
'506,506,506,506,506,506,,,,,,506,506,506,506,506,506,506,,,506,,,,,',
',506,,,506,506,506,506,506,506,506,,506,506,506,,506,506,,506,506,,',
',,,,,,,,,,,,,,,,,,506,,,506,,506,506,,506,,,,506,,506,,,,,,,,506,,,',
',506,506,506,506,506,506,,,,506,506,,,,592,592,592,506,592,,506,,592',
'592,,506,506,592,,592,592,592,592,592,592,592,,,,,,592,592,592,592,592',
'592,592,,,592,,,,,,,592,,,592,592,592,592,592,592,592,592,592,592,592',
',592,592,,592,592,,,,,,,,,,,,,,,,,,,,,592,,,592,,,592,,592,,592,,,,592',
',,,,,,,592,,,,,592,592,592,592,592,592,,,,592,592,,,,,645,,592,,,592',
',645,645,645,592,592,645,645,645,600,645,600,600,600,600,600,,,,,645',
'645,,,600,,,,,,645,645,,645,645,645,645,645,,,,,,,,,,600,600,,,,,,600',
'600,600,600,,645,645,645,645,645,645,645,645,645,645,645,645,645,645',
'645,,,645,645,645,,645,645,,,645,,645,,645,,645,,645,600,645,645,645',
'645,645,645,645,,645,,645,,,,,,,,,,,,,645,645,645,645,,645,436,,645',
',645,,645,436,436,436,,,,436,436,,436,,,,,,,,,436,,,,,,,,,,,436,436',
',436,436,436,436,436,,,,,,,,,,,,,,,,,,,,,,436,436,436,436,436,436,436',
'436,436,436,436,436,436,436,436,,,436,436,436,,436,,,,436,,,,,,436,',
'436,,436,436,436,436,436,436,436,,436,436,436,,,,,,,,,,,,,436,436,,436',
',436,438,,436,,436,,436,438,438,438,,,,438,438,,438,,,,,,,,,,,,,,,,',
',,,438,438,,438,438,438,438,438,,,,,,,,,,,,,,,,,,,,,,438,438,438,438',
'438,438,438,438,438,438,438,438,438,438,438,,,438,438,438,,438,,,,438',
',,,,,438,,438,,438,438,438,438,438,438,438,,438,,438,,,,,,,,,,,,,438',
'438,,438,,438,644,,438,,438,,438,644,644,644,,,644,644,644,,644,,,,',
',,,,644,644,644,,,,,,,,,644,644,,644,644,644,644,644,,,,,,,,,,,,,,,',
',,,,,,644,644,644,644,644,644,644,644,644,644,644,644,644,644,644,,',
'644,644,644,,644,644,,,644,,644,,644,,644,,644,,644,644,644,644,644',
'644,644,,644,644,644,,,,,,,,,,,,,644,644,644,644,,644,50,,644,,644,',
'644,50,50,50,,,50,50,50,,50,,,,,,,,,,50,50,50,,,,,,,,50,50,,50,50,50',
'50,50,,,,,,,,,,,,,,,,,,,,,,50,50,50,50,50,50,50,50,50,50,50,50,50,50',
'50,,,50,50,50,,,50,,,50,,50,,50,,50,,50,,50,50,50,50,50,50,50,,50,,50',
',,,,,,,,,,,,50,50,50,50,28,50,,50,50,,50,28,28,28,,,28,28,28,,28,,,',
',,,,,,28,28,,,,,,,,,28,28,,28,28,28,28,28,,,,,,,,,,,,,,,,,,,,,,28,28',
'28,28,28,28,28,28,28,28,28,28,28,28,28,,,28,28,28,,,28,,28,28,,28,,28',
',28,,28,,28,28,28,28,28,28,28,,28,,28,,,,,,,,,,,,,28,28,28,28,496,28',
',,28,,28,496,496,496,,,496,496,496,,496,,,,,,,,,,496,,,,,,,,,,496,496',
',496,496,496,496,496,,,,,,,,,,,,494,,,,,,,494,494,494,,,494,494,494',
',494,,,,,496,496,,,,494,,,496,,,,,496,496,494,494,,494,494,494,494,494',
',,,,,,,,,,,496,,,,,,,,,,,,,496,,496,,,496,,,494,494,,495,,,,,494,,495',
'495,495,494,494,495,495,495,,495,,,,,,,,,,495,,,,,494,,,,,495,495,,495',
'495,495,495,495,494,,494,,,494,522,522,,,522,,,,,,,,,522,522,522,522',
'522,522,522,522,522,,,522,522,495,495,,,522,522,522,522,495,,,,,495',
'495,,,,,522,522,,522,522,522,522,522,522,522,522,522,522,522,,495,522',
',,,,,,,,,,,495,,495,,,495,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7',
'7,7,7,,,,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,,7,,,,,,,,',
'7,7,7,7,7,7,7,7,7,,,7,7,,,,,7,7,7,7,,,,,,,,,,,,7,7,,7,7,7,7,7,7,7,7',
'7,7,7,,,7,7,,,,,,,,,,7,415,415,415,415,415,415,415,415,415,415,415,415',
'415,415,415,415,415,415,415,415,415,415,415,415,,,,415,415,415,415,415',
'415,415,415,415,415,415,415,415,415,415,415,415,415,415,415,415,415',
'415,,,415,,,,,,,,,415,415,415,415,415,415,415,415,415,,,415,415,,,,',
'415,415,415,415,,,,,,,,,,,,415,415,,415,415,415,415,415,415,415,415',
'415,415,415,,,415,415,,,,,,,,,,415,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8',
'8,8,8,8,8,8,8,,,,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,,,8,',
',,,,,,,8,8,8,8,8,8,8,8,8,,,8,8,,,,,8,8,8,8,,,,,,,,,,,,8,8,,8,8,8,8,8',
'8,8,8,8,8,8,,,8,8,,,,,,,,,,8,411,411,411,411,411,411,411,411,411,411',
'411,411,411,411,411,411,411,411,411,411,411,411,411,411,,,,411,411,411',
'411,411,411,411,411,411,411,411,411,411,411,411,411,411,411,411,411',
'411,411,411,,,411,,,,,,,,,411,411,411,411,411,411,411,411,411,,,411',
'411,,,,,411,411,411,411,,,,,,,,,,,,411,411,,411,411,411,411,411,411',
'411,411,411,411,411,,,411,411,,,,,,,,,,411,65,65,65,65,65,65,65,65,65',
'65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,,,,65,65,65,65,65,65,65',
'65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,,65,,,,,,,65',
'65,65,65,65,65,65,65,65,,,65,65,,,,,65,65,65,65,,,,,,65,,,,,,65,65,',
'65,65,65,65,65,65,65,65,65,65,65,,,65,79,79,79,79,79,79,79,79,79,79',
'79,79,79,79,79,79,79,79,79,79,79,79,79,79,,,,79,79,79,79,79,79,79,79',
'79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,,79,,,,,,,79,79',
'79,79,79,79,79,79,79,,,79,79,,,,,79,79,79,79,,,,,,,,,,,,79,79,,79,79',
'79,79,79,79,79,79,79,79,79,,,79,192,192,192,192,192,192,192,192,192',
'192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,,,,192,192',
'192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192',
'192,192,192,192,192,192,192,,192,,,,,,,192,192,192,192,192,192,192,192',
'192,,,192,192,,,,,192,192,192,192,,,,,,,,,,,,192,192,,192,192,192,192',
'192,192,192,192,192,192,192,,,192,766,766,766,766,766,766,766,766,766',
'766,766,766,766,766,766,766,766,766,766,766,766,766,766,766,,,,766,766',
'766,766,766,766,766,766,766,766,766,766,766,766,766,766,766,766,766',
'766,766,766,766,,,766,,,,,,,,,766,766,766,766,766,766,766,766,766,,',
'766,766,,,,,766,766,766,766,,,,,,,,,,,,766,766,,766,766,766,766,766',
'766,766,766,766,766,766,201,201,766,,201,,,,,,,,,201,201,201,201,201',
'201,201,201,201,,,201,201,,,,,201,201,201,201,,,,,,201,,,,,,201,201',
',201,201,201,201,201,201,201,201,201,201,201,947,947,201,,947,,,,,,',
',,947,947,947,947,947,947,947,947,947,,,947,947,,,,,947,947,947,947',
',,,,,,,,,,,947,947,,947,947,947,947,947,947,947,947,947,947,947,264',
'264,947,,264,,,,,,,,,264,264,264,264,264,264,264,264,264,,,264,264,',
',,,264,264,264,264,,,,,,,,,,,,264,264,,264,264,264,264,264,264,264,264',
'264,264,264,946,946,264,,946,,,,,,,,,946,946,946,946,946,946,946,946',
'946,,,946,946,,,,,946,946,946,946,,,,,,946,,,,,,946,946,,946,946,946',
'946,946,946,946,946,946,946,946,521,521,946,,521,,,,,,,,,521,521,521',
'521,521,521,521,521,521,,,521,521,,,,,521,521,521,521,,,,,,521,,,,,',
'521,521,,521,521,521,521,521,521,521,521,521,521,521,822,822,521,,822',
',,,,,,,,822,822,822,822,822,822,822,822,822,,,822,822,,,,,822,822,822',
'822,,,,,,,,,,,,822,822,,822,822,822,822,822,822,822,822,822,822,822',
'450,450,822,,450,,,,,,,,,450,450,450,450,450,450,450,450,450,,,450,450',
',,,,450,450,450,450,,,,,,,,,,,,450,450,,450,450,450,450,450,450,450',
'450,450,450,450,449,449,450,,449,,,,,,,,,449,449,449,449,449,449,449',
'449,449,,,449,449,,,,,449,449,449,449,,,,,,449,,,,,,449,449,,449,449',
'449,449,449,449,449,449,449,449,449,593,593,449,,593,,,,,,,,,593,593',
'593,593,593,593,593,593,593,,,593,593,,,,,593,593,593,593,,,,,,593,',
',,,,593,593,,593,593,593,593,593,593,593,593,593,593,593,202,202,593',
',202,,,,,,,,,202,202,202,202,202,202,202,202,202,,,202,202,,,,,202,202',
'202,202,,,,,,,,,,,,202,202,,202,202,202,202,202,202,202,202,202,202',
'202,591,591,202,,591,,,,,,,,,591,591,591,591,591,591,591,591,591,,,591',
'591,,,,,591,591,591,591,,,,,,,,,,,,591,591,,591,591,591,591,591,591',
'591,591,591,591,591,524,524,591,,524,,,,,,,,,524,524,524,524,524,524',
'524,524,524,,,524,524,,,,,524,524,524,524,,,,,,,,,,,,524,524,,524,524',
'524,524,524,524,524,524,524,524,524,585,585,524,,585,,,,,,,,,585,585',
'585,585,585,585,585,585,585,,,585,585,,,,,585,585,585,585,,,,,,,,,,',
',585,585,,585,585,585,585,585,585,585,585,585,585,585,584,584,585,,584',
',,,,,,,,584,584,584,584,584,584,584,584,584,,,584,584,,,,,584,584,584',
'584,,,,,,584,,,,,,584,584,,584,584,584,584,584,584,584,584,584,584,584',
'535,535,584,,535,,,,,,,,,535,535,535,535,535,535,535,535,535,,,535,535',
',,,,535,535,535,535,,,,,,,,,,,,535,535,,535,535,535,535,535,535,535',
'535,535,535,535,534,534,535,,534,,,,,,,,,534,534,534,534,534,534,534',
'534,534,,,534,534,,,,,534,534,534,534,,,,,,534,,,,,,534,534,,534,534',
'534,534,534,534,534,534,534,534,534,266,266,534,,266,,,,,,,,,266,266',
'266,266,266,266,266,266,266,,,266,266,,,,,266,266,266,266,,,,,,,,,,',
',266,266,,266,266,266,266,266,266,266,266,266,266,266,265,265,266,,265',
',,,,,,,,265,265,265,265,265,265,265,265,265,,,265,265,,,,,265,265,265',
'265,,,,,,,,,,,,265,265,,265,265,265,265,265,265,265,265,265,265,265',
'203,203,265,,203,,,,,,,,,203,203,203,203,203,203,203,203,203,,,203,203',
',,,,203,203,203,203,,,,,,,,,,,,203,203,,203,203,203,203,203,203,203',
'203,203,203,203,,,203' ]
        racc_action_check = arr = ::Array.new(24516, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_action_pointer = [
    -2,  1252,   nil,   353,   nil,   975,  1129, 22469, 22711,  1104,
  1054,  1047,  1083,   990,   451,   628,   nil,  1773,  1897,  1525,
  1108,   nil,  2282,  2406,  2530,   372,   -13,  2928, 22081,   nil,
  3189,  3313,  3437,   nil,   974,   445,  1017,   601,  4070,  4194,
  4318,   929,  1140,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
 21954,   nil,  4827,  4951,  5075,   -15,  4348,  5447,  5571,   nil,
   nil,  5695,  5832,  5956,   nil, 22953,   nil,   nil,   nil,   nil,
   nil,   149,   nil,   nil,   nil,   nil,   nil,   826,   825, 23063,
   nil,   nil,   nil,   226,  6863,   nil,   nil,  6987,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   892,   nil,  7248,
   nil,   nil,   nil,  7385,  7509,  7633,  7757,  7894,  8031,   nil,
   410,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil, 23173,   706,   nil,  8540,  8664,  8788,  8912,  9036,
  9160, 23342, 23873, 24404,  9656,  9780,  9904,   nil,   742,   343,
   675,   455,   575,   604, 10837, 10961,   nil,   nil, 11085,   541,
 11333, 11457, 11581, 11705, 11829, 11953, 12077, 12201, 12325, 12449,
 12573, 12697, 12821, 12945, 13069, 13193, 13317, 13441, 13565, 13689,
 13813, 13937, 14061, 14185, 14309, 14433,   nil,   nil,   nil,  1897,
   nil,   101,   578,   nil, 14929,   625, 15190,   nil,   nil,   nil,
   nil, 15314,   nil,   nil, 23460, 24345, 24286,   831, 15960, 16084,
   nil,   nil,   nil,   nil,   nil,   nil,   nil, 16208,   367,   727,
   941, 16730,  1018,  1036,  1042, 17226, 17363,   316,  1127,  1191,
   229,  1161,  1084,   233,   nil,  1050,   553,   nil, 18603,   nil,
   203,   962,   797,   610,   nil,    15,   nil, 19386,   nil, 19523,
    27,   nil,   231,   441,   313,   585,   570,   271,   629,   nil,
   nil,    32,  3834,   nil,   nil,   nil,   655,  -121,   nil,   696,
   708,   nil,   nil,   nil,   nil,   nil,   nil,   nil,  3204,   nil,
   nil,   nil,   801,   nil,   nil,   811,   333,    94,    86, 16854,
  6204,    35,   588,   835,    78,  1170,   932,   188,   978,   nil,
   nil,   866,   952,   nil,  1264,   nil,    64,   nil,   nil,   370,
   417,   376,   387,   476,   482,   382,   240,   272,   nil,    54,
   nil, 18355,   nil,   327,   nil,    28,   nil,   -37,  1047,   354,
   nil,  1043,   -21,   nil,   291,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
  1031, 22832,   nil,   nil,   nil, 22590,   991,   nil,   nil,   990,
   nil,   122,   911,   nil,   910,   nil,   nil,  1773,   942,   940,
   435,   384,   246,   nil,   nil,   nil, 21567,   937, 21696,   nil,
   494,   618,   742,   nil,   nil,   nil,  2158,   nil,   nil, 23755,
 23696,   866,  1525,   354,  1649,  3052,  3698,   195,   nil,  4194,
  3698,   379,   251,   895,   893,   881,   848,  3816,  5441,  5317,
  4455,  3046,  5193,  5069,  4312,  4951,  4827,  3574,  4703,  4579,
   473,   618,  4070,  3946,   866,   240,   nil,  3946,   nil,  4703,
   nil, 16978,   nil,   nil, 22263, 22342, 22208,   271,   nil,   706,
   nil,   nil,   702,   697,   nil,   nil, 21187,    28,   168,   714,
   nil,   nil, 21050,   699,   660,   nil,   nil,   658, 20913,   652,
 20789, 23578, 22342, 20665, 23991,   157,   647,   nil,   nil,   598,
   nil, 20541, 20417, 20293, 24227, 24168,  1264, 20169,   648,   637,
   488,   nil,   nil, 20045,   nil,   nil, 19921,   nil,   nil,   nil,
   nil, 19797, 19660,   165,   nil,   547,   nil,   nil, 19262,  3325,
   nil,   600,   nil,   nil,   335,   nil,  3067,   nil,   311,   639,
   nil,   nil, 19138,   725,   nil,   nil, 19001,   310,   289,   887,
   897, 18864,   nil, 18727, 24109, 24050, 18479,    33,   nil,  1307,
   nil, 23932, 21311, 23814,   nil,   nil, 18231,   472, 18107,   nil,
 21403,   nil,   nil,   nil,    38,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   -48,   nil,   nil,   nil,  1087,
   nil,   nil,   nil,   nil,   nil, 17983,  1129, 17859,   470,   383,
 17735, 17611,  1114,   nil,   nil,   nil, 17487,  1079,   nil, 17102,
  1046,   nil,   247,   185, 21825, 21438,   990,   978,   742,   nil,
 16593,   nil,  3082,   nil, 16469,   863,   nil,   869, 16332,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil, 15836,   nil,   822,
 15699, 15575,  1127,   710,   nil,   nil,   693, 15451, 15066,   nil,
  1112,   -53, 14805,   455,   nil,   414,   281,   192,   712,   306,
   222,     6,    12,    60, 14681,  2667,   243,   260,    32,   365,
 14557,   nil,   nil,  -100,   340,   445,   nil,   nil,   330,   nil,
   351,  1277,   468,   414,   439,   nil,   nil,   478,  3176,   nil,
   605,   nil,   570,   nil,   nil,   nil,   nil,   nil,   579,   nil,
   616, 11209,   542,    99,   -18,   -17,    76,   596, 10700,   776,
   nil,   616,   616, 10576,   -88,   nil,   329, 10439, 10302,  3449,
   475,   nil,   nil,   688,   nil, 10165,   nil,   623,   625,   nil,
   628,   632,   652,   nil,   644,   nil, 23283,   692,   670, 10041,
   nil,   nil,   nil,  1649,   662,  9532,  9408,  9284,   nil,  2406,
   nil,  2282,   nil,   nil,  2928,   nil,  2034,   nil,  8403,  8279,
  8155,   -45,   -47,  1401,   nil,   761,   869,   nil,   nil,   772,
   nil,   764,  7111,   nil,   783,   885,   776,   308,   nil,   nil,
   nil,   897,   nil,  6739,   782,   823,   nil,   nil,   nil,   nil,
   nil,   nil, 23637,   nil,   604,   nil,   nil,   nil,   nil,  1512,
   919,   nil,  6602,   938,  6478,  6341,   nil,   nil,    73,   202,
  1033,   198,   nil,   967,   nil,   nil,   968,   975,   862,   nil,
   nil,   nil,   -31,   nil,   nil,   175, 17238,   nil,   438,   nil,
   465,   nil,  6080,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   919,   904,   nil,  2804,   nil,  2530,  5323,  5199,   nil,   nil,
   nil,  4579,   923,   nil,   nil,   nil,  4455,   nil,   nil,    72,
  3822,   nil,   987,   951,   nil,   nil,    65,   nil,  1075,  1090,
  3574,  2804,   nil,   nil,  2667,   nil,   nil,  1023,   nil,   989,
   nil,   nil,   992,   994,   998,   990,   nil,   nil, 20925,   nil,
   nil,  2158,   nil,  2034,    41,  1003,  1089,   105,   nil,   nil,
  1401,   nil,   nil,   nil,   578,  1264,  1161,   nil,   nil,   562,
   nil,   nil,   nil,  1127,  1179,   990, 23519, 23401,    -7,   671,
   nil,   nil,   nil,  1210,   nil,  1095,  1227,   nil,  1145,    66,
    80,    95,   117,   nil,   nil,   nil,   nil,   165 ]

racc_action_default = [
    -3,  -555,    -1,  -543,    -4,    -6,  -555,  -555,  -555,  -555,
  -555,  -555,  -555,  -555,  -277,   -37,   -38,  -555,  -555,   -43,
   -45,   -46,  -289,  -327,  -328,   -50,  -255,  -382,  -255,   -65,
   -10,   -69,   -76,   -78,  -555,  -457,  -555,  -555,  -555,  -555,
  -555,  -545,  -232,  -270,  -271,  -272,  -273,  -274,  -275,  -276,
  -533,  -279,  -555,  -554,  -525,  -297,  -554,  -555,  -555,  -302,
  -305,  -543,  -555,  -555,  -319,  -555,  -329,  -330,  -400,  -401,
  -402,  -403,  -404,  -554,  -407,  -554,  -554,  -554,  -554,  -554,
  -434,  -440,  -441,  -555,  -446,  -447,  -448,  -449,  -450,  -451,
  -452,  -453,  -454,  -455,  -456,  -459,  -460,  -555,    -2,  -544,
  -550,  -551,  -552,  -555,  -555,  -555,  -555,  -555,    -3,   -13,
  -555,  -105,  -106,  -107,  -108,  -109,  -110,  -111,  -114,  -115,
  -116,  -117,  -118,  -119,  -120,  -121,  -122,  -123,  -124,  -125,
  -126,  -127,  -128,  -129,  -130,  -131,  -132,  -133,  -134,  -135,
  -136,  -137,  -138,  -139,  -140,  -141,  -142,  -143,  -144,  -145,
  -146,  -147,  -148,  -149,  -150,  -151,  -152,  -153,  -154,  -155,
  -156,  -157,  -158,  -159,  -160,  -161,  -162,  -163,  -164,  -165,
  -166,  -167,  -168,  -169,  -170,  -171,  -172,  -173,  -174,  -175,
  -176,  -177,  -178,  -179,  -180,  -181,  -182,  -183,  -184,  -185,
  -186,  -187,  -555,   -18,  -112,   -10,  -555,  -555,  -555,  -554,
  -554,  -555,  -555,  -555,  -555,  -555,  -555,   -41,  -555,  -457,
  -555,  -277,  -555,  -555,   -10,  -555,   -42,  -224,  -555,  -555,
  -555,  -555,  -555,  -555,  -555,  -555,  -555,  -555,  -555,  -555,
  -555,  -555,  -555,  -555,  -555,  -555,  -555,  -555,  -555,  -555,
  -555,  -555,  -555,  -555,  -555,  -555,  -369,  -371,   -47,  -233,
  -248,  -262,  -262,  -252,  -555,  -263,  -555,  -289,  -327,  -328,
  -527,  -555,   -48,   -49,  -555,  -555,  -555,   -55,  -554,  -555,
  -296,  -375,  -383,  -385,   -63,  -381,   -64,  -555,  -543,   -11,
   -65,   -10,  -555,  -555,   -70,   -73,   -10,  -457,  -555,  -555,
  -277,  -292,  -545,  -555,  -331,  -382,  -555,   -75,  -555,   -80,
  -284,  -442,  -443,  -555,  -209,  -210,  -225,  -555,  -546,   -10,
  -545,  -234,  -545,  -547,  -547,  -555,  -555,  -547,  -555,  -298,
  -299,  -555,  -555,  -342,  -343,  -350,  -554,  -491,  -357,  -554,
  -554,  -368,  -490,  -492,  -493,  -494,  -495,  -496,  -555,  -509,
  -514,  -515,  -517,  -518,  -519,  -555,   -44,  -555,  -555,  -555,
  -555,  -543,  -555,  -544,  -457,  -555,  -555,  -277,  -555,  -498,
  -499,  -101,  -555,  -103,  -555,  -277,  -555,  -316,  -457,  -555,
  -105,  -106,  -143,  -144,  -160,  -165,  -172,  -175,  -322,  -555,
  -523,  -555,  -405,  -555,  -420,  -555,  -422,  -555,  -555,  -555,
  -412,  -555,  -555,  -418,  -555,  -433,  -435,  -436,  -437,  -438,
  -444,  -445,   968,    -5,  -553,   -19,   -20,   -21,   -22,   -23,
  -555,  -555,   -15,   -16,   -17,  -555,  -555,   -25,   -34,  -188,
  -263,  -555,  -555,   -26,   -35,   -36,   -27,  -190,  -555,  -555,
  -534,  -535,  -554,  -378,  -536,  -537,  -534,  -255,  -535,  -380,
  -539,  -540,  -554,  -534,  -535,   -33,  -198,   -39,   -40,  -555,
  -555,  -554,  -554,  -284,  -555,  -555,  -555,  -555,  -295,  -199,
  -200,  -201,  -202,  -203,  -204,  -205,  -206,  -211,  -212,  -213,
  -214,  -215,  -216,  -217,  -218,  -219,  -220,  -221,  -222,  -223,
  -226,  -227,  -228,  -229,  -555,  -554,  -249,  -555,  -250,  -555,
  -260,  -555,  -264,  -530,  -255,  -255,  -255,  -554,   -56,  -545,
  -243,  -244,  -262,  -262,  -256,  -257,  -555,  -554,  -554,  -555,
  -291,    -9,  -544,  -555,   -66,  -282,   -81,   -71,  -555,  -555,
  -554,  -555,  -555,  -554,  -555,  -284,  -555,  -442,  -443,   -77,
   -82,  -555,  -555,  -555,  -555,  -555,  -230,  -555,  -392,  -555,
  -555,  -235,  -236,  -549,  -548,  -238,  -549,  -287,  -288,  -526,
  -339,   -10,   -10,  -555,  -341,  -555,  -359,  -366,  -555,  -363,
  -364,  -555,  -367,  -491,  -555,  -500,  -555,  -502,  -504,  -508,
  -516,  -520,   -10,  -332,  -333,  -334,   -10,  -555,  -555,  -555,
  -555,   -10,  -387,  -554,  -555,  -555,  -554,  -284,  -311,  -101,
  -102,  -555,  -554,  -555,  -314,  -461,  -555,  -555,  -555,  -320,
  -489,  -324,  -541,  -542,  -545,  -406,  -421,  -424,  -425,  -427,
  -408,  -423,  -409,  -410,  -411,  -555,  -414,  -416,  -417,  -555,
  -439,    -7,   -14,  -113,   -24,  -555,  -269,  -555,  -285,  -286,
  -555,  -555,   -59,  -241,  -242,  -376,  -555,   -61,  -379,  -555,
   -57,  -377,  -534,  -535,  -534,  -535,  -555,  -555,  -188,  -294,
  -555,  -353,  -555,  -355,   -10,  -262,  -261,  -265,  -555,  -528,
  -529,   -51,  -372,   -52,  -373,   -53,  -374,   -10,  -239,  -555,
  -245,  -247,   -43,  -555,  -254,  -258,  -555,   -10,   -10,  -290,
   -12,   -66,  -555,   -74,   -79,  -555,  -534,  -535,  -554,  -538,
  -283,  -555,  -555,  -554,  -555,  -197,  -207,  -208,  -555,  -554,
  -554,  -280,  -281,  -547,  -555,  -555,  -340,  -351,  -555,  -358,
  -554,  -352,  -555,  -554,  -554,  -510,  -497,  -555,  -555,  -507,
  -554,  -335,  -554,  -303,  -336,  -337,  -338,  -306,  -555,  -309,
  -555,  -555,  -555,  -534,  -535,  -538,  -283,  -555,  -555,  -101,
  -104,  -538,  -555,   -10,  -555,  -463,  -555,   -10,   -10,  -489,
  -555,  -466,  -467,  -469,  -470,  -472,  -473,  -522,  -522,  -478,
  -480,  -480,  -480,  -488,  -491,  -512,  -555,  -555,  -555,   -10,
  -413,  -415,  -419,  -189,  -267,  -555,  -555,  -555,   -30,  -193,
   -31,  -194,   -60,   -32,  -195,   -62,  -196,   -58,  -555,  -555,
  -555,  -286,  -285,  -231,  -354,  -555,  -555,  -251,  -266,  -555,
  -240,  -262,  -555,  -259,  -555,  -555,   -72,  -285,  -286,   -83,
  -293,  -554,  -348,   -10,  -393,  -554,  -394,  -395,  -237,  -344,
  -345,  -365,  -555,  -284,  -555,  -361,  -362,  -501,  -503,  -506,
  -555,  -346,  -555,  -555,   -10,   -10,  -308,  -310,  -555,  -285,
   -93,  -555,  -285,  -555,  -462,  -317,  -555,  -555,  -545,  -465,
  -468,  -471,  -555,  -476,  -477,  -555,  -555,  -484,  -555,  -486,
  -555,  -487,  -555,  -325,  -524,  -426,  -429,  -430,  -431,  -432,
  -555,  -268,   -28,  -191,   -29,  -192,  -555,  -555,  -356,  -370,
   -54,  -246,  -262,  -384,  -386,    -8,   -10,  -399,  -349,  -555,
  -555,  -397,  -283,  -554,  -505,  -300,  -555,  -301,  -555,  -555,
  -555,   -10,  -312,  -315,   -10,  -321,  -323,  -555,  -474,  -522,
  -521,  -479,  -480,  -480,  -480,  -555,  -513,  -511,  -489,  -428,
  -253,  -555,  -398,   -10,  -457,  -555,  -555,  -277,  -396,  -360,
   -10,  -304,  -307,  -265,  -554,   -10,  -555,  -464,  -475,  -555,
  -482,  -483,  -485,   -10,  -392,  -554,  -555,  -555,  -284,  -554,
  -388,  -389,  -390,  -555,  -318,  -480,  -555,  -391,  -555,  -534,
  -535,  -538,  -283,  -347,  -313,  -481,  -326,  -285 ]

clist = [
'13,109,194,307,565,539,114,114,748,580,323,378,284,699,529,488,5,208',
'208,102,760,498,208,208,208,396,315,324,763,331,13,288,288,572,576,659',
'12,117,117,99,207,250,250,250,384,366,386,386,390,393,386,715,208,208',
'707,723,727,208,208,98,297,208,355,364,114,564,12,432,437,442,294,294',
'312,418,425,310,606,102,114,916,346,346,616,590,346,2,251,251,251,252',
'252,252,659,542,545,918,282,549,830,13,309,294,294,208,208,208,208,13',
'13,347,348,349,280,351,834,5,350,352,853,854,835,317,811,409,5,738,346',
'346,346,346,494,495,496,935,641,12,385,387,396,743,394,598,904,12,12',
'833,369,747,35,600,766,601,321,550,379,405,406,407,408,557,916,713,560',
'562,885,248,262,263,594,760,358,403,428,429,193,216,360,763,35,287,287',
'247,485,507,508,950,662,664,666,731,815,114,889,410,382,13,208,208,208',
'208,208,441,383,320,208,208,208,389,615,319,354,368,392,368,13,208,865',
'659,312,312,768,769,10,848,909,908,316,380,447,448,504,12,565,912,683',
'719,728,676,457,500,411,267,274,276,668,828,499,35,1,,12,,10,,526,35',
'35,,,,422,422,,,,,488,,208,208,938,656,540,656,541,,553,208,,530,654',
'13,,,359,288,13,250,250,,674,,667,717,102,331,250,556,288,,556,556,677',
'678,,,,,771,13,,,740,517,512,432,437,12,,902,,10,12,707,294,,943,963',
',10,10,,502,251,511,503,252,294,760,,,251,,35,252,12,763,513,715,208',
'208,599,519,417,423,426,,951,,,,445,35,280,,,,102,280,364,,,346,346',
',,,,,,,208,595,,565,641,782,688,,,693,785,,,787,,,,806,,688,577,578',
'633,604,622,,579,294,623,114,501,505,633,114,,,10,797,957,509,,,,646',
'647,,659,,35,,,,287,35,,10,,,843,,117,14,846,847,117,287,,,441,688,208',
'208,,656,656,651,35,,688,,669,,,,633,633,633,651,,312,312,14,290,290',
',,,651,651,,,,818,,,,,857,859,861,,,685,,894,692,,,530,,,,10,357,365',
'208,,10,,,,13,,,,,368,288,,208,441,,208,901,,,,680,310,,10,,,441,,,208',
',312,,14,312,821,,,825,826,12,14,14,13,13,,655,,732,294,711,737,698',
',271,275,797,742,767,,,,,283,13,,,923,13,816,,,,13,930,208,441,,208',
'12,12,,441,952,208,724,724,,208,294,208,,936,,312,,,312,795,,12,,703',
'312,12,745,,,,12,,346,,746,,710,,331,,714,,,208,208,,,,,208,14,,956',
'940,941,942,,,920,,632,744,,,,637,,13,,14,640,,633,35,,,530,633,656',
'287,13,762,,812,817,,,,809,,13,13,,,556,288,965,556,556,,,,,12,812,',
'812,288,,,759,,35,35,,,12,,656,368,,,661,663,665,863,12,12,,,,,,35,294',
',14,35,,929,290,14,35,,,,294,10,,416,801,208,,290,,,13,,,,13,13,,,14',
',,,283,,,,,844,346,845,,422,114,849,,,13,,,,10,10,,208,208,,12,,,887',
'12,12,,891,778,780,,841,,,783,10,838,,,10,,,,35,10,,12,,,,,907,365,688',
'13,,35,,762,,,,441,283,,,35,35,283,,271,287,275,208,,13,13,,,,,,,287',
',,,759,,,12,,,,,,346,,724,,,,,,,556,,882,,,,12,12,,,,,10,,,,,,,,896',
',13,,,10,925,35,893,,,35,35,,,10,10,13,,,13,812,,,,,,,,,,,,35,958,,812',
',12,13,913,,914,,,294,13,,,872,874,13,,12,,,12,,,13,,208,441,,,910,',
',910,759,14,759,,759,,12,290,35,,,312,10,12,,634,10,10,12,,638,,,,,634',
'12,,,35,35,,,762,,,,,10,,14,14,,,,,,365,,,,,,,955,,,,,,,14,759,,,14',
',,,,14,,,,,,,634,634,634,,35,10,759,,924,,,,,,,,,,,35,,,35,,,,10,10',
',,,,,,,,,,,,,35,,,,,,,35,,217,,,35,249,249,249,,,,,35,704,705,,,14,',
',,304,305,306,,,,,,10,14,,,928,720,,249,249,722,,14,14,,730,10,290,',
'10,,,,,,,,,,290,,,,,,,,,10,,,,,,,10,,,,,10,,,,,,,,10,,,,,,,,,,,,,,,',
',,,,14,,,,14,14,,,,,796,,,,,,,,,,,,,799,,869,14,,,,,,,804,805,,,,,634',
',,638,,634,,,,,,,,,,,,,,,,,,,,,,,,,,14,,,419,249,427,249,249,,,,446',
',,,,,,,,,14,14,,,217,,459,460,461,462,463,464,465,466,467,468,469,470',
'471,472,473,474,475,476,477,478,479,480,481,482,483,484,,,870,,,,,,249',
',249,,,,,249,318,,,,14,,249,249,927,,,,,,,249,,,,14,,,14,,,,,,,,888',
',,,,,,,,,,14,,,,536,,,14,,,898,899,14,,,,,,,,14,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,922,,,293,293,,,,,,293,293,293,,,934,,,,,,,,,,',
'293,,,,,,,,293,293,,944,,420,424,,,,949,,,,,953,,,,,,,249,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,249,249,,446,648,427,,,,,,490,,492,,,,,493,,,,,,',
',,,,,,,,,,,249,,249,,249,,,,,,,,,,,,,,,672,,,,,,,,,,,,,,249,,,249,,',
',,,,,695,696,697,,,,,,,,,,249,,,249,,,,,,,,,293,,293,293,293,293,293',
'293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293',
'293,293,293,293,249,,,249,,,,,293,249,293,,,,,293,,,,,,,,,,,,,,,,,,',
',,,,,293,,,773,,249,,626,779,781,,,,293,784,,,786,,,,,293,,,,,,793,',
',,,,,,249,,,,,,,,,,,,249,249,,,,,,,,,,,,,,,,,,,,,,,,657,,318,,660,249',
',,,,,293,,,,,,,,673,,,,,,,,,,,,,,,,,249,,,,,,,,,,,,,,,,,,,,657,,,318',
'249,,,293,,,,,,,,,,,,,,,,,249,873,875,,,,,,,,,,,779,781,784,293,293',
'293,,,,,,,,,249,,,,,,,,,,,,,,,,,,,,,,293,,293,,293,,,,,,,774,,,,,,,',
',,,,,,,,,,,,293,,,,,,,249,,,,798,,293,293,293,,,,,,875,873,657,318,293',
'249,,293,,,,,,,,,,,,293,,,,,249,,,,,,,,814,,,,,,,,,,,,,249,,,,,,,,,',
',,,,,,,,420,,,,,,249,,,,,,,,,,,,,,,,,293,851,293,,,,,,,,,,,,293,,,,',
',,871,,,,293,,,,,,,,293,,,,,,,,,,,,293,293,,420,,,,,,,,,293,,,,,,,,',
',,,293,,,,,,293,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,293,,917,,,,,,,,,,,,,',
',,,,,318,,,293,,,,,,,,,,,,,,,,933,,,,293,,,,,,,,,,,,,293,293,293,,933',
',,,,,,,,,293,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,293,,,,,,,,,,,,,,293,293,,,,293,,,,,,,,,293,,,,,,,,,,293,,,,,,,',
',,,,,,,,,,,,,293' ]
        racc_goto_table = arr = ::Array.new(2321, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'21,14,14,51,145,8,48,48,84,80,104,47,41,10,43,61,7,21,21,83,110,35,21',
'21,21,47,22,53,141,107,21,21,21,77,77,154,20,50,50,6,26,29,29,29,53',
'46,53,53,53,53,53,147,21,21,106,79,79,21,21,4,42,21,21,21,48,148,20',
'33,33,33,52,52,29,24,24,26,129,83,48,151,26,26,129,45,26,2,54,54,54',
'56,56,56,154,55,55,101,39,55,78,21,87,52,52,21,21,21,21,21,21,16,16',
'88,38,16,89,7,90,4,142,142,91,56,11,7,7,92,26,26,26,26,33,33,33,93,60',
'20,126,126,47,94,126,95,96,20,20,11,97,98,44,99,100,86,102,103,85,16',
'16,16,16,109,151,105,109,109,12,31,31,31,82,110,81,5,22,22,15,18,19',
'141,44,44,44,112,113,115,116,117,60,60,60,118,119,48,120,2,124,21,21',
'21,21,21,21,48,125,76,21,21,21,127,128,74,44,44,130,44,21,21,131,154',
'29,29,132,133,17,135,137,139,73,72,26,26,64,20,145,144,43,145,80,63',
'26,53,27,34,34,34,59,149,58,44,1,,20,,17,,51,44,44,,,,54,54,,,,,61,',
'21,21,142,62,51,62,51,,104,21,,41,36,21,,,17,21,21,29,29,,62,,36,148',
'83,107,29,53,21,,53,53,36,36,,,,,129,21,,,45,42,6,33,33,20,,79,,17,20',
'106,52,,84,78,,17,17,,54,54,4,56,56,52,110,,,54,,44,56,20,141,39,147',
'21,21,46,39,18,18,18,,11,,,,18,44,38,,,,83,38,21,,,26,26,,,,,,,,21,83',
',145,60,35,33,,,33,35,,,35,,,,43,,33,16,16,53,26,14,,4,52,14,48,31,31',
'53,48,,,17,61,10,31,,,,22,22,,154,,44,,,,44,44,,17,,,8,,50,23,8,8,50',
'44,,,48,33,21,21,,62,62,53,44,,33,,51,,,,53,53,53,53,,29,29,23,23,23',
',,,53,53,,,,55,,,,,143,143,143,,,22,,145,22,,,41,,,,17,23,23,21,,17',
',,,21,,,,,44,21,,21,48,,21,77,,,,7,26,,17,,,48,,,21,,29,,23,29,109,',
',109,109,20,23,23,21,21,,56,,22,52,21,22,26,,57,57,61,22,51,,,,,9,21',
',,77,21,24,,,,21,77,21,48,,21,20,20,,48,80,21,83,83,,21,52,21,,8,,29',
',,29,104,,20,,56,29,20,83,,,,20,,26,,26,,111,,107,,111,,,21,21,,,,,21',
'23,,8,143,143,143,,,61,,34,16,,,,34,,21,,23,34,,53,44,,,41,53,62,44',
'21,111,,53,53,,,,41,,21,21,,,53,21,143,53,53,,,,,20,53,,53,21,,,108',
',44,44,,,20,,62,44,,,34,34,34,47,20,20,,,,,,44,52,,23,44,,109,23,23',
'44,,,,52,17,,9,56,21,,23,,,21,,,,21,21,,,23,,,,9,,,,,83,26,83,,54,48',
'83,,,21,,,,17,17,,21,21,,20,,,53,20,20,,53,18,18,,16,,,18,17,54,,,17',
',,,44,17,,20,,,,,51,23,33,21,,44,,111,,,,48,9,,,44,44,9,,57,44,57,21',
',21,21,,,,,,,44,,,,108,,,20,,,,,,26,,83,,,,,,,53,,54,,,,20,20,,,,,17',
',,,,,,,16,,21,,,17,21,44,111,,,44,44,,,17,17,21,,,21,53,,,,,,,,,,,,44',
'22,,53,,20,21,111,,111,,,52,21,,,18,18,21,,20,,,20,,,21,,21,48,,,108',
',,108,108,23,108,,108,,20,23,44,,,29,17,20,,57,17,17,20,,57,,,,,57,20',
',,44,44,,,111,,,,,17,,23,23,,,,,,23,,,,,,,111,,,,,,,23,108,,,23,,,,',
'23,,,,,,,57,57,57,,44,17,108,,44,,,,,,,,,,,44,,,44,,,,17,17,,,,,,,,',
',,,,,44,,,,,,,44,,28,,,44,28,28,28,,,,,44,9,9,,,23,,,,28,28,28,,,,,',
'17,23,,,17,9,,28,28,9,,23,23,,9,17,23,,17,,,,,,,,,,23,,,,,,,,,17,,,',
',,,17,,,,,17,,,,,,,,17,,,,,,,,,,,,,,,,,,,,23,,,,23,23,,,,,9,,,,,,,,',
',,,,9,,23,23,,,,,,,9,9,,,,,57,,,57,,57,,,,,,,,,,,,,,,,,,,,,,,,,,23,',
',28,28,28,28,28,,,,28,,,,,,,,,,23,23,,,28,,28,28,28,28,28,28,28,28,28',
'28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,,,9,,,,,,28,,28,',
',,,28,25,,,,23,,28,28,23,,,,,,,28,,,,23,,,23,,,,,,,,9,,,,,,,,,,,23,',
',,28,,,23,,,9,9,23,,,,,,,,23,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,9,,,37,37,,,,,,37,37,37,,,9,,,,,,,,,,,37,,,,,,,,37,37,,9,,25,25,,',
',9,,,,,9,,,,,,,28,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,28,28,,28,28,28,,,,,',
'25,,25,,,,,25,,,,,,,,,,,,,,,,,,28,,28,,28,,,,,,,,,,,,,,,28,,,,,,,,,',
',,,,28,,,28,,,,,,,,28,28,28,,,,,,,,,,28,,,28,,,,,,,,,37,,37,37,37,37',
'37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,28',
',,28,,,,,37,28,37,,,,,37,,,,,,,,,,,,,,,,,,,,,,,,37,,,28,,28,,25,28,28',
',,,37,28,,,28,,,,,37,,,,,,28,,,,,,,,28,,,,,,,,,,,,28,28,,,,,,,,,,,,',
',,,,,,,,,,,25,,25,,25,28,,,,,,37,,,,,,,,25,,,,,,,,,,,,,,,,,28,,,,,,',
',,,,,,,,,,,,,25,,,25,28,,,37,,,,,,,,,,,,,,,,,28,28,28,,,,,,,,,,,28,28',
'28,37,37,37,,,,,,,,,28,,,,,,,,,,,,,,,,,,,,,,37,,37,,37,,,,,,,25,,,,',
',,,,,,,,,,,,,,,37,,,,,,,28,,,,25,,37,37,37,,,,,,28,28,25,25,37,28,,37',
',,,,,,,,,,,37,,,,,28,,,,,,,,25,,,,,,,,,,,,,28,,,,,,,,,,,,,,,,,,25,,',
',,,28,,,,,,,,,,,,,,,,,37,25,37,,,,,,,,,,,,37,,,,,,,25,,,,37,,,,,,,,37',
',,,,,,,,,,,37,37,,25,,,,,,,,,37,,,,,,,,,,,,37,,,,,,37,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,37,,25,,,,,,,,,,,,,,,,,,,25,,,37,,,,,,,,,,,,,,,,25,',
',,37,,,,,,,,,,,,,37,37,37,,25,,,,,,,,,,37,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,37,,,,,,,,,,,,,,37,37,,,,37,,,,,,,',
',37,,,,,,,,,,37,,,,,,,,,,,,,,,,,,,,,37' ]
        racc_goto_check = arr = ::Array.new(2321, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_goto_pointer = [
   nil,   248,    85,   nil,    56,    72,    36,    16,  -304,   541,
  -525,  -577,  -647,   nil,    -6,   166,    52,   222,   157,   114,
    36,     0,   -27,   442,  -123,  1270,    23,   131,  1062,    19,
   nil,   143,   nil,  -134,   215,  -246,  -205,  1399,    82,    66,
   nil,   -19,    28,  -284,   148,  -279,   -18,   -54,    -1,   nil,
    30,   -38,    39,   -29,    64,  -220,    67,   536,   -22,  -255,
  -308,  -237,  -216,  -269,   -39,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   162,   172,   154,   nil,   147,  -314,  -622,  -522,
  -343,   108,  -198,    16,  -592,    89,  -228,    49,    52,  -609,
    56,  -607,  -463,  -769,  -455,  -226,  -703,    82,  -452,  -229,
  -451,  -768,    96,  -168,   -46,  -398,  -501,   -27,    97,  -167,
  -580,    68,   161,   -64,   nil,   -89,   -89,  -749,  -393,  -510,
  -623,   nil,   nil,   nil,   123,   129,    61,   130,  -181,  -307,
   134,  -552,  -388,  -388,   nil,  -526,   nil,  -628,   nil,  -627,
   nil,  -572,  -639,  -272,  -623,  -334,   nil,  -508,  -273,  -473,
   nil,  -779,   nil,   nil,  -454 ]

racc_goto_default = [
   nil,   nil,   nil,     3,   nil,     4,   353,   279,   nil,   538,
   nil,   831,   nil,   278,   nil,   nil,   nil,   212,    16,    11,
   213,   303,   nil,   211,   nil,   255,    15,   nil,    19,    20,
    21,   nil,    25,   691,   nil,   nil,   nil,    26,    29,   nil,
    31,    34,    33,   nil,   209,   363,   nil,   116,   435,   115,
    69,   nil,    42,   311,   313,   nil,   314,   433,   nil,   nil,
   635,   486,   253,   nil,   nil,   269,    43,    44,    45,    46,
    47,    48,    49,   nil,   270,    55,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   573,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   326,   325,   709,   328,   nil,
   329,   330,   nil,   nil,   439,   nil,   nil,   nil,   nil,   nil,
   nil,    68,    70,    71,    72,   nil,   nil,   nil,   nil,   611,
   nil,   nil,   nil,   nil,   395,   750,   753,   758,   755,   756,
   757,   911,   nil,   nil,   761,   337,   332,   339,   nil,   567,
   568,   765,   342,   345,   260 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 140, :_reduce_none,
  2, 141, :_reduce_2,
  0, 142, :_reduce_3,
  1, 142, :_reduce_4,
  3, 142, :_reduce_5,
  1, 144, :_reduce_none,
  4, 144, :_reduce_7,
  4, 147, :_reduce_8,
  2, 148, :_reduce_9,
  0, 152, :_reduce_10,
  1, 152, :_reduce_11,
  3, 152, :_reduce_12,
  0, 166, :_reduce_13,
  4, 146, :_reduce_14,
  3, 146, :_reduce_15,
  3, 146, :_reduce_none,
  3, 146, :_reduce_17,
  2, 146, :_reduce_18,
  3, 146, :_reduce_19,
  3, 146, :_reduce_20,
  3, 146, :_reduce_21,
  3, 146, :_reduce_22,
  3, 146, :_reduce_23,
  4, 146, :_reduce_none,
  3, 146, :_reduce_25,
  3, 146, :_reduce_26,
  3, 146, :_reduce_27,
  6, 146, :_reduce_none,
  6, 146, :_reduce_none,
  5, 146, :_reduce_30,
  5, 146, :_reduce_none,
  5, 146, :_reduce_none,
  3, 146, :_reduce_none,
  3, 146, :_reduce_34,
  3, 146, :_reduce_35,
  3, 146, :_reduce_36,
  1, 146, :_reduce_none,
  1, 165, :_reduce_none,
  3, 165, :_reduce_39,
  3, 165, :_reduce_40,
  2, 165, :_reduce_41,
  2, 165, :_reduce_42,
  1, 165, :_reduce_none,
  1, 155, :_reduce_none,
  1, 157, :_reduce_none,
  1, 157, :_reduce_none,
  2, 157, :_reduce_47,
  2, 157, :_reduce_48,
  2, 157, :_reduce_49,
  1, 169, :_reduce_none,
  4, 169, :_reduce_none,
  4, 169, :_reduce_none,
  4, 169, :_reduce_none,
  4, 174, :_reduce_none,
  2, 168, :_reduce_55,
  3, 168, :_reduce_none,
  4, 168, :_reduce_57,
  5, 168, :_reduce_none,
  4, 168, :_reduce_59,
  5, 168, :_reduce_none,
  4, 168, :_reduce_61,
  5, 168, :_reduce_none,
  2, 168, :_reduce_63,
  2, 168, :_reduce_64,
  1, 158, :_reduce_65,
  3, 158, :_reduce_66,
  1, 178, :_reduce_67,
  3, 178, :_reduce_68,
  1, 177, :_reduce_69,
  2, 177, :_reduce_70,
  3, 177, :_reduce_71,
  5, 177, :_reduce_none,
  2, 177, :_reduce_73,
  4, 177, :_reduce_none,
  2, 177, :_reduce_75,
  1, 177, :_reduce_76,
  3, 177, :_reduce_none,
  1, 180, :_reduce_78,
  3, 180, :_reduce_79,
  2, 179, :_reduce_80,
  3, 179, :_reduce_81,
  1, 182, :_reduce_none,
  3, 182, :_reduce_none,
  1, 181, :_reduce_84,
  4, 181, :_reduce_85,
  3, 181, :_reduce_86,
  3, 181, :_reduce_none,
  3, 181, :_reduce_none,
  3, 181, :_reduce_none,
  2, 181, :_reduce_none,
  1, 181, :_reduce_none,
  1, 156, :_reduce_92,
  4, 156, :_reduce_93,
  4, 156, :_reduce_94,
  3, 156, :_reduce_95,
  3, 156, :_reduce_96,
  3, 156, :_reduce_97,
  3, 156, :_reduce_98,
  2, 156, :_reduce_99,
  1, 156, :_reduce_none,
  1, 184, :_reduce_none,
  2, 185, :_reduce_102,
  1, 185, :_reduce_103,
  3, 185, :_reduce_104,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_108,
  1, 186, :_reduce_109,
  1, 153, :_reduce_110,
  1, 153, :_reduce_none,
  1, 154, :_reduce_112,
  3, 154, :_reduce_113,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  3, 167, :_reduce_188,
  5, 167, :_reduce_189,
  3, 167, :_reduce_190,
  6, 167, :_reduce_191,
  6, 167, :_reduce_192,
  5, 167, :_reduce_193,
  5, 167, :_reduce_none,
  5, 167, :_reduce_none,
  5, 167, :_reduce_none,
  4, 167, :_reduce_none,
  3, 167, :_reduce_none,
  3, 167, :_reduce_199,
  3, 167, :_reduce_200,
  3, 167, :_reduce_201,
  3, 167, :_reduce_202,
  3, 167, :_reduce_203,
  3, 167, :_reduce_204,
  3, 167, :_reduce_205,
  3, 167, :_reduce_206,
  4, 167, :_reduce_207,
  4, 167, :_reduce_208,
  2, 167, :_reduce_209,
  2, 167, :_reduce_210,
  3, 167, :_reduce_211,
  3, 167, :_reduce_212,
  3, 167, :_reduce_213,
  3, 167, :_reduce_214,
  3, 167, :_reduce_215,
  3, 167, :_reduce_216,
  3, 167, :_reduce_217,
  3, 167, :_reduce_218,
  3, 167, :_reduce_219,
  3, 167, :_reduce_220,
  3, 167, :_reduce_221,
  3, 167, :_reduce_222,
  3, 167, :_reduce_223,
  2, 167, :_reduce_224,
  2, 167, :_reduce_225,
  3, 167, :_reduce_226,
  3, 167, :_reduce_227,
  3, 167, :_reduce_228,
  3, 167, :_reduce_229,
  3, 167, :_reduce_230,
  5, 167, :_reduce_231,
  1, 167, :_reduce_none,
  1, 164, :_reduce_none,
  1, 161, :_reduce_234,
  2, 161, :_reduce_235,
  2, 161, :_reduce_236,
  4, 161, :_reduce_237,
  2, 161, :_reduce_238,
  3, 196, :_reduce_239,
  2, 198, :_reduce_none,
  1, 199, :_reduce_241,
  1, 199, :_reduce_none,
  1, 197, :_reduce_243,
  1, 197, :_reduce_none,
  2, 197, :_reduce_245,
  4, 197, :_reduce_246,
  2, 197, :_reduce_247,
  1, 170, :_reduce_248,
  2, 170, :_reduce_249,
  2, 170, :_reduce_250,
  4, 170, :_reduce_251,
  1, 170, :_reduce_252,
  4, 202, :_reduce_none,
  1, 202, :_reduce_none,
  0, 204, :_reduce_255,
  2, 173, :_reduce_256,
  1, 203, :_reduce_none,
  2, 203, :_reduce_258,
  3, 203, :_reduce_259,
  2, 201, :_reduce_260,
  2, 200, :_reduce_261,
  0, 200, :_reduce_262,
  1, 193, :_reduce_263,
  2, 193, :_reduce_264,
  3, 193, :_reduce_265,
  4, 193, :_reduce_266,
  3, 163, :_reduce_267,
  4, 163, :_reduce_268,
  2, 163, :_reduce_269,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  0, 226, :_reduce_279,
  4, 191, :_reduce_280,
  4, 191, :_reduce_281,
  3, 191, :_reduce_282,
  3, 191, :_reduce_283,
  2, 191, :_reduce_284,
  4, 191, :_reduce_285,
  4, 191, :_reduce_286,
  3, 191, :_reduce_287,
  3, 191, :_reduce_288,
  1, 191, :_reduce_289,
  4, 191, :_reduce_290,
  3, 191, :_reduce_291,
  1, 191, :_reduce_292,
  5, 191, :_reduce_293,
  4, 191, :_reduce_294,
  3, 191, :_reduce_295,
  2, 191, :_reduce_296,
  1, 191, :_reduce_none,
  2, 191, :_reduce_298,
  2, 191, :_reduce_299,
  6, 191, :_reduce_300,
  6, 191, :_reduce_301,
  0, 227, :_reduce_302,
  0, 228, :_reduce_303,
  7, 191, :_reduce_304,
  0, 229, :_reduce_305,
  0, 230, :_reduce_306,
  7, 191, :_reduce_307,
  5, 191, :_reduce_308,
  4, 191, :_reduce_309,
  5, 191, :_reduce_310,
  0, 231, :_reduce_311,
  0, 232, :_reduce_312,
  9, 191, :_reduce_313,
  0, 233, :_reduce_314,
  6, 191, :_reduce_315,
  0, 234, :_reduce_316,
  0, 235, :_reduce_317,
  8, 191, :_reduce_318,
  0, 236, :_reduce_319,
  0, 237, :_reduce_320,
  6, 191, :_reduce_321,
  0, 238, :_reduce_322,
  6, 191, :_reduce_323,
  0, 239, :_reduce_324,
  0, 240, :_reduce_325,
  9, 191, :_reduce_326,
  1, 191, :_reduce_327,
  1, 191, :_reduce_328,
  1, 191, :_reduce_329,
  1, 191, :_reduce_none,
  1, 160, :_reduce_none,
  1, 216, :_reduce_none,
  1, 216, :_reduce_none,
  1, 216, :_reduce_none,
  2, 216, :_reduce_none,
  1, 218, :_reduce_none,
  1, 218, :_reduce_none,
  1, 218, :_reduce_none,
  2, 215, :_reduce_339,
  3, 241, :_reduce_340,
  2, 241, :_reduce_341,
  1, 241, :_reduce_none,
  1, 241, :_reduce_none,
  3, 242, :_reduce_344,
  3, 242, :_reduce_345,
  1, 217, :_reduce_346,
  5, 217, :_reduce_347,
  1, 150, :_reduce_none,
  2, 150, :_reduce_349,
  1, 244, :_reduce_350,
  3, 244, :_reduce_351,
  3, 245, :_reduce_352,
  1, 175, :_reduce_none,
  2, 175, :_reduce_354,
  1, 175, :_reduce_355,
  3, 175, :_reduce_356,
  1, 246, :_reduce_357,
  2, 248, :_reduce_358,
  1, 248, :_reduce_359,
  6, 243, :_reduce_360,
  4, 243, :_reduce_361,
  4, 243, :_reduce_362,
  2, 243, :_reduce_363,
  2, 243, :_reduce_364,
  4, 243, :_reduce_365,
  2, 243, :_reduce_366,
  2, 243, :_reduce_367,
  1, 243, :_reduce_368,
  0, 252, :_reduce_369,
  5, 251, :_reduce_370,
  2, 171, :_reduce_371,
  4, 171, :_reduce_none,
  4, 171, :_reduce_none,
  4, 171, :_reduce_none,
  2, 214, :_reduce_375,
  4, 214, :_reduce_376,
  4, 214, :_reduce_377,
  3, 214, :_reduce_378,
  4, 214, :_reduce_379,
  3, 214, :_reduce_380,
  2, 214, :_reduce_381,
  1, 214, :_reduce_382,
  0, 254, :_reduce_383,
  5, 213, :_reduce_384,
  0, 255, :_reduce_385,
  5, 213, :_reduce_386,
  0, 257, :_reduce_387,
  6, 219, :_reduce_388,
  1, 256, :_reduce_389,
  1, 256, :_reduce_none,
  6, 149, :_reduce_391,
  0, 149, :_reduce_392,
  1, 258, :_reduce_393,
  1, 258, :_reduce_none,
  1, 258, :_reduce_none,
  2, 259, :_reduce_396,
  1, 259, :_reduce_397,
  2, 151, :_reduce_398,
  1, 151, :_reduce_none,
  1, 205, :_reduce_none,
  1, 205, :_reduce_none,
  1, 205, :_reduce_none,
  1, 206, :_reduce_403,
  1, 262, :_reduce_none,
  2, 262, :_reduce_405,
  3, 263, :_reduce_406,
  1, 263, :_reduce_407,
  3, 207, :_reduce_408,
  3, 208, :_reduce_409,
  3, 209, :_reduce_410,
  3, 209, :_reduce_411,
  1, 266, :_reduce_412,
  3, 266, :_reduce_413,
  1, 267, :_reduce_414,
  2, 267, :_reduce_415,
  3, 210, :_reduce_416,
  3, 210, :_reduce_417,
  1, 269, :_reduce_418,
  3, 269, :_reduce_419,
  1, 264, :_reduce_420,
  2, 264, :_reduce_421,
  1, 265, :_reduce_422,
  2, 265, :_reduce_423,
  1, 268, :_reduce_424,
  0, 271, :_reduce_425,
  3, 268, :_reduce_426,
  0, 272, :_reduce_427,
  4, 268, :_reduce_428,
  1, 270, :_reduce_429,
  1, 270, :_reduce_430,
  1, 270, :_reduce_431,
  1, 270, :_reduce_none,
  2, 189, :_reduce_433,
  1, 189, :_reduce_434,
  1, 273, :_reduce_none,
  1, 273, :_reduce_none,
  1, 273, :_reduce_none,
  1, 273, :_reduce_none,
  3, 261, :_reduce_439,
  1, 260, :_reduce_440,
  1, 260, :_reduce_441,
  2, 260, :_reduce_442,
  2, 260, :_reduce_443,
  2, 260, :_reduce_444,
  2, 260, :_reduce_445,
  1, 183, :_reduce_446,
  1, 183, :_reduce_447,
  1, 183, :_reduce_448,
  1, 183, :_reduce_449,
  1, 183, :_reduce_450,
  1, 183, :_reduce_451,
  1, 183, :_reduce_452,
  1, 183, :_reduce_453,
  1, 183, :_reduce_454,
  1, 183, :_reduce_455,
  1, 183, :_reduce_456,
  1, 211, :_reduce_457,
  1, 159, :_reduce_458,
  1, 162, :_reduce_459,
  1, 162, :_reduce_none,
  1, 221, :_reduce_461,
  3, 221, :_reduce_462,
  2, 221, :_reduce_463,
  4, 223, :_reduce_464,
  2, 223, :_reduce_465,
  1, 275, :_reduce_none,
  1, 275, :_reduce_none,
  2, 276, :_reduce_468,
  1, 276, :_reduce_469,
  1, 277, :_reduce_470,
  2, 278, :_reduce_471,
  1, 278, :_reduce_472,
  1, 279, :_reduce_473,
  3, 279, :_reduce_474,
  4, 280, :_reduce_475,
  2, 280, :_reduce_476,
  2, 280, :_reduce_477,
  1, 280, :_reduce_478,
  2, 282, :_reduce_479,
  0, 282, :_reduce_480,
  6, 274, :_reduce_481,
  4, 274, :_reduce_482,
  4, 274, :_reduce_483,
  2, 274, :_reduce_484,
  4, 274, :_reduce_485,
  2, 274, :_reduce_486,
  2, 274, :_reduce_487,
  1, 274, :_reduce_488,
  0, 274, :_reduce_489,
  1, 284, :_reduce_none,
  1, 284, :_reduce_491,
  1, 285, :_reduce_492,
  1, 285, :_reduce_493,
  1, 285, :_reduce_494,
  1, 285, :_reduce_495,
  1, 286, :_reduce_496,
  3, 286, :_reduce_497,
  1, 220, :_reduce_none,
  1, 220, :_reduce_none,
  1, 288, :_reduce_500,
  3, 288, :_reduce_none,
  1, 289, :_reduce_502,
  3, 289, :_reduce_503,
  1, 287, :_reduce_none,
  4, 287, :_reduce_none,
  3, 287, :_reduce_none,
  2, 287, :_reduce_none,
  1, 287, :_reduce_none,
  1, 249, :_reduce_509,
  3, 249, :_reduce_510,
  3, 290, :_reduce_511,
  1, 283, :_reduce_512,
  3, 283, :_reduce_513,
  1, 291, :_reduce_none,
  1, 291, :_reduce_none,
  2, 250, :_reduce_516,
  1, 250, :_reduce_517,
  1, 292, :_reduce_none,
  1, 292, :_reduce_none,
  2, 247, :_reduce_520,
  2, 281, :_reduce_521,
  0, 281, :_reduce_522,
  1, 224, :_reduce_523,
  4, 224, :_reduce_524,
  0, 212, :_reduce_525,
  2, 212, :_reduce_526,
  1, 195, :_reduce_527,
  3, 195, :_reduce_528,
  3, 293, :_reduce_529,
  2, 293, :_reduce_530,
  1, 176, :_reduce_none,
  1, 176, :_reduce_none,
  1, 176, :_reduce_none,
  1, 172, :_reduce_none,
  1, 172, :_reduce_none,
  1, 172, :_reduce_none,
  1, 172, :_reduce_none,
  1, 253, :_reduce_none,
  1, 253, :_reduce_none,
  1, 253, :_reduce_none,
  1, 225, :_reduce_none,
  1, 225, :_reduce_none,
  0, 143, :_reduce_none,
  1, 143, :_reduce_none,
  0, 190, :_reduce_none,
  1, 190, :_reduce_none,
  0, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 222, :_reduce_none,
  1, 222, :_reduce_none,
  1, 145, :_reduce_none,
  2, 145, :_reduce_none,
  0, 192, :_reduce_554 ]

racc_reduce_n = 555

racc_shift_n = 968

racc_token_table = {
  false => 0,
  :error => 1,
  :kCLASS => 2,
  :kMODULE => 3,
  :kDEF => 4,
  :kUNDEF => 5,
  :kBEGIN => 6,
  :kRESCUE => 7,
  :kENSURE => 8,
  :kEND => 9,
  :kIF => 10,
  :kUNLESS => 11,
  :kTHEN => 12,
  :kELSIF => 13,
  :kELSE => 14,
  :kCASE => 15,
  :kWHEN => 16,
  :kWHILE => 17,
  :kUNTIL => 18,
  :kFOR => 19,
  :kBREAK => 20,
  :kNEXT => 21,
  :kREDO => 22,
  :kRETRY => 23,
  :kIN => 24,
  :kDO => 25,
  :kDO_COND => 26,
  :kDO_BLOCK => 27,
  :kDO_LAMBDA => 28,
  :kRETURN => 29,
  :kYIELD => 30,
  :kSUPER => 31,
  :kSELF => 32,
  :kNIL => 33,
  :kTRUE => 34,
  :kFALSE => 35,
  :kAND => 36,
  :kOR => 37,
  :kNOT => 38,
  :kIF_MOD => 39,
  :kUNLESS_MOD => 40,
  :kWHILE_MOD => 41,
  :kUNTIL_MOD => 42,
  :kRESCUE_MOD => 43,
  :kALIAS => 44,
  :kDEFINED => 45,
  :klBEGIN => 46,
  :klEND => 47,
  :k__LINE__ => 48,
  :k__FILE__ => 49,
  :tIDENTIFIER => 50,
  :tFID => 51,
  :tGVAR => 52,
  :tIVAR => 53,
  :tCONSTANT => 54,
  :tLABEL => 55,
  :tCVAR => 56,
  :tNTH_REF => 57,
  :tBACK_REF => 58,
  :tSTRING_CONTENT => 59,
  :tINTEGER => 60,
  :tFLOAT => 61,
  :tREGEXP_END => 62,
  :tUPLUS => 63,
  :tUMINUS => 64,
  :tPOW => 65,
  :tCMP => 66,
  :tEQ => 67,
  :tEQQ => 68,
  :tNEQ => 69,
  :tGEQ => 70,
  :tLEQ => 71,
  :tANDOP => 72,
  :tOROP => 73,
  :tMATCH => 74,
  :tNMATCH => 75,
  :tJSDOT => 76,
  :tDOT => 77,
  :tDOT2 => 78,
  :tDOT3 => 79,
  :tAREF => 80,
  :tASET => 81,
  :tLSHFT => 82,
  :tRSHFT => 83,
  :tCOLON2 => 84,
  :tCOLON3 => 85,
  :tOP_ASGN => 86,
  :tASSOC => 87,
  :tLPAREN => 88,
  :tLPAREN2 => 89,
  :tRPAREN => 90,
  :tLPAREN_ARG => 91,
  :tRBRACK => 92,
  :tLBRACE => 93,
  :tLBRACE_ARG => 94,
  :tSTAR => 95,
  :tSTAR2 => 96,
  :tAMPER => 97,
  :tAMPER2 => 98,
  :tTILDE => 99,
  :tPERCENT => 100,
  :tDIVIDE => 101,
  :tPLUS => 102,
  :tMINUS => 103,
  :tLT => 104,
  :tGT => 105,
  :tPIPE => 106,
  :tBANG => 107,
  :tCARET => 108,
  :tLCURLY => 109,
  :tRCURLY => 110,
  :tBACK_REF2 => 111,
  :tSYMBEG => 112,
  :tSTRING_BEG => 113,
  :tXSTRING_BEG => 114,
  :tREGEXP_BEG => 115,
  :tWORDS_BEG => 116,
  :tAWORDS_BEG => 117,
  :tSTRING_DBEG => 118,
  :tSTRING_DVAR => 119,
  :tSTRING_END => 120,
  :tSTRING => 121,
  :tSYMBOL => 122,
  :tNL => 123,
  :tEH => 124,
  :tCOLON => 125,
  :tCOMMA => 126,
  :tSPACE => 127,
  :tSEMI => 128,
  :tLAMBDA => 129,
  :tLAMBEG => 130,
  :tLBRACK2 => 131,
  :tLBRACK => 132,
  :tJSLBRACK => 133,
  :tDSTAR => 134,
  :tEQL => 135,
  :tLOWEST => 136,
  "-@NUM" => 137,
  "+@NUM" => 138 }

racc_nt_base = 139

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "kCLASS",
  "kMODULE",
  "kDEF",
  "kUNDEF",
  "kBEGIN",
  "kRESCUE",
  "kENSURE",
  "kEND",
  "kIF",
  "kUNLESS",
  "kTHEN",
  "kELSIF",
  "kELSE",
  "kCASE",
  "kWHEN",
  "kWHILE",
  "kUNTIL",
  "kFOR",
  "kBREAK",
  "kNEXT",
  "kREDO",
  "kRETRY",
  "kIN",
  "kDO",
  "kDO_COND",
  "kDO_BLOCK",
  "kDO_LAMBDA",
  "kRETURN",
  "kYIELD",
  "kSUPER",
  "kSELF",
  "kNIL",
  "kTRUE",
  "kFALSE",
  "kAND",
  "kOR",
  "kNOT",
  "kIF_MOD",
  "kUNLESS_MOD",
  "kWHILE_MOD",
  "kUNTIL_MOD",
  "kRESCUE_MOD",
  "kALIAS",
  "kDEFINED",
  "klBEGIN",
  "klEND",
  "k__LINE__",
  "k__FILE__",
  "tIDENTIFIER",
  "tFID",
  "tGVAR",
  "tIVAR",
  "tCONSTANT",
  "tLABEL",
  "tCVAR",
  "tNTH_REF",
  "tBACK_REF",
  "tSTRING_CONTENT",
  "tINTEGER",
  "tFLOAT",
  "tREGEXP_END",
  "tUPLUS",
  "tUMINUS",
  "tPOW",
  "tCMP",
  "tEQ",
  "tEQQ",
  "tNEQ",
  "tGEQ",
  "tLEQ",
  "tANDOP",
  "tOROP",
  "tMATCH",
  "tNMATCH",
  "tJSDOT",
  "tDOT",
  "tDOT2",
  "tDOT3",
  "tAREF",
  "tASET",
  "tLSHFT",
  "tRSHFT",
  "tCOLON2",
  "tCOLON3",
  "tOP_ASGN",
  "tASSOC",
  "tLPAREN",
  "tLPAREN2",
  "tRPAREN",
  "tLPAREN_ARG",
  "tRBRACK",
  "tLBRACE",
  "tLBRACE_ARG",
  "tSTAR",
  "tSTAR2",
  "tAMPER",
  "tAMPER2",
  "tTILDE",
  "tPERCENT",
  "tDIVIDE",
  "tPLUS",
  "tMINUS",
  "tLT",
  "tGT",
  "tPIPE",
  "tBANG",
  "tCARET",
  "tLCURLY",
  "tRCURLY",
  "tBACK_REF2",
  "tSYMBEG",
  "tSTRING_BEG",
  "tXSTRING_BEG",
  "tREGEXP_BEG",
  "tWORDS_BEG",
  "tAWORDS_BEG",
  "tSTRING_DBEG",
  "tSTRING_DVAR",
  "tSTRING_END",
  "tSTRING",
  "tSYMBOL",
  "tNL",
  "tEH",
  "tCOLON",
  "tCOMMA",
  "tSPACE",
  "tSEMI",
  "tLAMBDA",
  "tLAMBEG",
  "tLBRACK2",
  "tLBRACK",
  "tJSLBRACK",
  "tDSTAR",
  "tEQL",
  "tLOWEST",
  "\"-@NUM\"",
  "\"+@NUM\"",
  "$start",
  "program",
  "top_compstmt",
  "top_stmts",
  "opt_terms",
  "top_stmt",
  "terms",
  "stmt",
  "bodystmt",
  "compstmt",
  "opt_rescue",
  "opt_else",
  "opt_ensure",
  "stmts",
  "fitem",
  "undef_list",
  "expr_value",
  "lhs",
  "command_call",
  "mlhs",
  "var_lhs",
  "primary_value",
  "aref_args",
  "backref",
  "mrhs",
  "arg_value",
  "expr",
  "@1",
  "arg",
  "command",
  "block_command",
  "call_args",
  "block_call",
  "operation2",
  "command_args",
  "cmd_brace_block",
  "opt_block_var",
  "operation",
  "mlhs_basic",
  "mlhs_entry",
  "mlhs_head",
  "mlhs_item",
  "mlhs_node",
  "mlhs_post",
  "variable",
  "cname",
  "cpath",
  "fname",
  "op",
  "reswords",
  "symbol",
  "opt_nl",
  "primary",
  "none",
  "args",
  "trailer",
  "assocs",
  "paren_args",
  "opt_call_args",
  "rparen",
  "opt_paren_args",
  "opt_block_arg",
  "block_arg",
  "call_args2",
  "open_args",
  "@2",
  "literal",
  "strings",
  "xstring",
  "regexp",
  "words",
  "awords",
  "var_ref",
  "assoc_list",
  "brace_block",
  "method_call",
  "lambda",
  "then",
  "if_tail",
  "do",
  "case_body",
  "for_var",
  "superclass",
  "term",
  "f_arglist",
  "singleton",
  "dot_or_colon",
  "@3",
  "@4",
  "@5",
  "@6",
  "@7",
  "@8",
  "@9",
  "@10",
  "@11",
  "@12",
  "@13",
  "@14",
  "@15",
  "@16",
  "@17",
  "f_larglist",
  "lambda_body",
  "block_param",
  "f_block_optarg",
  "f_block_opt",
  "block_args_tail",
  "f_block_arg",
  "opt_block_args_tail",
  "f_arg",
  "f_rest_arg",
  "do_block",
  "@18",
  "operation3",
  "@19",
  "@20",
  "cases",
  "@21",
  "exc_list",
  "exc_var",
  "numeric",
  "dsym",
  "string",
  "string1",
  "string_contents",
  "xstring_contents",
  "word_list",
  "word",
  "string_content",
  "qword_list",
  "string_dvar",
  "@22",
  "@23",
  "sym",
  "f_args",
  "kwrest_mark",
  "f_kwrest",
  "f_label",
  "f_kw",
  "f_kwarg",
  "args_tail",
  "opt_f_block_arg",
  "opt_args_tail",
  "f_optarg",
  "f_norm_arg",
  "f_bad_arg",
  "f_arg_item",
  "f_margs",
  "f_marg",
  "f_marg_list",
  "f_opt",
  "restarg_mark",
  "blkarg_mark",
  "assoc" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

def _reduce_2(val, _values, result)
                      result = new_compstmt val[0]
                    
    result
end

def _reduce_3(val, _values, result)
                      result = new_block
                    
    result
end

def _reduce_4(val, _values, result)
                      result = new_block val[0]
                    
    result
end

def _reduce_5(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

# reduce 6 omitted

def _reduce_7(val, _values, result)
                      result = val[2]
                    
    result
end

def _reduce_8(val, _values, result)
                      result = new_body(val[0], val[1], val[2], val[3])
                    
    result
end

def _reduce_9(val, _values, result)
                      result = new_compstmt val[0]
                    
    result
end

def _reduce_10(val, _values, result)
                      result = new_block
                    
    result
end

def _reduce_11(val, _values, result)
                      result = new_block val[0]
                    
    result
end

def _reduce_12(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_13(val, _values, result)
                      lexer.lex_state = :expr_fname
                    
    result
end

def _reduce_14(val, _values, result)
                      result = new_alias(val[0], val[1], val[3])
                    
    result
end

def _reduce_15(val, _values, result)
                      result = s(:valias, value(val[1]).to_sym, value(val[2]).to_sym)
                    
    result
end

# reduce 16 omitted

def _reduce_17(val, _values, result)
                      result = s(:valias, value(val[1]).to_sym, value(val[2]).to_sym)
                    
    result
end

def _reduce_18(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_19(val, _values, result)
                      result = new_if(val[1], val[2], val[0], nil)
                    
    result
end

def _reduce_20(val, _values, result)
                      result = new_if(val[1], val[2], nil, val[0])
                    
    result
end

def _reduce_21(val, _values, result)
                      result = new_while(val[1], val[2], val[0])
                    
    result
end

def _reduce_22(val, _values, result)
                      result = new_until(val[1], val[2], val[0])
                    
    result
end

def _reduce_23(val, _values, result)
                      result = new_rescue_mod(val[1], val[0], val[2])
                    
    result
end

# reduce 24 omitted

def _reduce_25(val, _values, result)
                      result = new_assign(val[0], val[1], val[2])
                    
    result
end

def _reduce_26(val, _values, result)
                      result = s(:masgn, val[0], s(:to_ary, val[2]))
                    
    result
end

def _reduce_27(val, _values, result)
                      result = new_op_asgn val[1], val[0], val[2]
                    
    result
end

# reduce 28 omitted

# reduce 29 omitted

def _reduce_30(val, _values, result)
                      result = s(:op_asgn2, val[0], op_to_setter(val[2]), value(val[3]).to_sym, val[4])
                    
    result
end

# reduce 31 omitted

# reduce 32 omitted

# reduce 33 omitted

def _reduce_34(val, _values, result)
                      result = new_assign val[0], val[1], s(:svalue, val[2])
                    
    result
end

def _reduce_35(val, _values, result)
                      result = s(:masgn, val[0], s(:to_ary, val[2]))
                    
    result
end

def _reduce_36(val, _values, result)
                      result = s(:masgn, val[0], val[2])
                    
    result
end

# reduce 37 omitted

# reduce 38 omitted

def _reduce_39(val, _values, result)
                      result = s(:and, val[0], val[2])
                    
    result
end

def _reduce_40(val, _values, result)
                      result = s(:or, val[0], val[2])
                    
    result
end

def _reduce_41(val, _values, result)
                      result = new_unary_call(['!', []], val[1])
                    
    result
end

def _reduce_42(val, _values, result)
                      result = new_unary_call(val[0], val[1])
                    
    result
end

# reduce 43 omitted

# reduce 44 omitted

# reduce 45 omitted

# reduce 46 omitted

def _reduce_47(val, _values, result)
                      result = new_return(val[0], val[1])
                    
    result
end

def _reduce_48(val, _values, result)
                      result = new_break(val[0], val[1])
                    
    result
end

def _reduce_49(val, _values, result)
                      result = new_next(val[0], val[1])
                    
    result
end

# reduce 50 omitted

# reduce 51 omitted

# reduce 52 omitted

# reduce 53 omitted

# reduce 54 omitted

def _reduce_55(val, _values, result)
                      result = new_call(nil, val[0], val[1])
                    
    result
end

# reduce 56 omitted

def _reduce_57(val, _values, result)
                      result = new_js_call(val[0], val[2], val[3])
                    
    result
end

# reduce 58 omitted

def _reduce_59(val, _values, result)
                      result = new_call(val[0], val[2], val[3])
                    
    result
end

# reduce 60 omitted

def _reduce_61(val, _values, result)
                    result = new_call(val[0], val[2], val[3])
                  
    result
end

# reduce 62 omitted

def _reduce_63(val, _values, result)
                      result = new_super(val[0], val[1])
                    
    result
end

def _reduce_64(val, _values, result)
                      result = new_yield val[1]
                    
    result
end

def _reduce_65(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_66(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_67(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_68(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_69(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_70(val, _values, result)
                      result = val[0] << val[1]
                    
    result
end

def _reduce_71(val, _values, result)
                      result = val[0] << s(:splat, val[2])
                    
    result
end

# reduce 72 omitted

def _reduce_73(val, _values, result)
                      result = val[0] << s(:splat)
                    
    result
end

# reduce 74 omitted

def _reduce_75(val, _values, result)
                      result = s(:array, s(:splat, val[1]))
                    
    result
end

def _reduce_76(val, _values, result)
                      result = s(:array, s(:splat))
                    
    result
end

# reduce 77 omitted

def _reduce_78(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_79(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_80(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

def _reduce_81(val, _values, result)
                      result = val[0] << val[1]
                    
    result
end

# reduce 82 omitted

# reduce 83 omitted

def _reduce_84(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_85(val, _values, result)
                      args = val[2] ? val[2] : []
                      result = s(:attrasgn, val[0], :[]=, s(:arglist, *args))
                    
    result
end

def _reduce_86(val, _values, result)
                      result = new_call val[0], val[2], []
                    
    result
end

# reduce 87 omitted

# reduce 88 omitted

# reduce 89 omitted

# reduce 90 omitted

# reduce 91 omitted

def _reduce_92(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_93(val, _values, result)
                      result = new_js_attrasgn(val[0], val[2])
                    
    result
end

def _reduce_94(val, _values, result)
                      result = new_attrasgn(val[0], :[]=, val[2])
                    
    result
end

def _reduce_95(val, _values, result)
                      result = new_attrasgn(val[0], op_to_setter(val[2]))
                    
    result
end

def _reduce_96(val, _values, result)
                      result = new_attrasgn(val[0], op_to_setter(val[2]))
                    
    result
end

def _reduce_97(val, _values, result)
                      result = new_attrasgn(val[0], op_to_setter(val[2]))
                    
    result
end

def _reduce_98(val, _values, result)
                      result = new_colon2(val[0], val[1], val[2])
                    
    result
end

def _reduce_99(val, _values, result)
                      result = new_colon3(val[0], val[1])
                    
    result
end

# reduce 100 omitted

# reduce 101 omitted

def _reduce_102(val, _values, result)
                      result = new_colon3(val[0], val[1])
                    
    result
end

def _reduce_103(val, _values, result)
                      result = new_const(val[0])
                    
    result
end

def _reduce_104(val, _values, result)
                      result = new_colon2(val[0], val[1], val[2])
                    
    result
end

# reduce 105 omitted

# reduce 106 omitted

# reduce 107 omitted

def _reduce_108(val, _values, result)
                      lexer.lex_state = :expr_end
                      result = val[0]
                    
    result
end

def _reduce_109(val, _values, result)
                      lexer.lex_state = :expr_end
                      result = val[0]
                    
    result
end

def _reduce_110(val, _values, result)
                      result = new_sym(val[0])
                    
    result
end

# reduce 111 omitted

def _reduce_112(val, _values, result)
                      result = s(:undef, val[0])
                    
    result
end

def _reduce_113(val, _values, result)
                      result = val[0] << val[2]
                    
    result
end

# reduce 114 omitted

# reduce 115 omitted

# reduce 116 omitted

# reduce 117 omitted

# reduce 118 omitted

# reduce 119 omitted

# reduce 120 omitted

# reduce 121 omitted

# reduce 122 omitted

# reduce 123 omitted

# reduce 124 omitted

# reduce 125 omitted

# reduce 126 omitted

# reduce 127 omitted

# reduce 128 omitted

# reduce 129 omitted

# reduce 130 omitted

# reduce 131 omitted

# reduce 132 omitted

# reduce 133 omitted

# reduce 134 omitted

# reduce 135 omitted

# reduce 136 omitted

# reduce 137 omitted

# reduce 138 omitted

# reduce 139 omitted

# reduce 140 omitted

# reduce 141 omitted

# reduce 142 omitted

# reduce 143 omitted

# reduce 144 omitted

# reduce 145 omitted

# reduce 146 omitted

# reduce 147 omitted

# reduce 148 omitted

# reduce 149 omitted

# reduce 150 omitted

# reduce 151 omitted

# reduce 152 omitted

# reduce 153 omitted

# reduce 154 omitted

# reduce 155 omitted

# reduce 156 omitted

# reduce 157 omitted

# reduce 158 omitted

# reduce 159 omitted

# reduce 160 omitted

# reduce 161 omitted

# reduce 162 omitted

# reduce 163 omitted

# reduce 164 omitted

# reduce 165 omitted

# reduce 166 omitted

# reduce 167 omitted

# reduce 168 omitted

# reduce 169 omitted

# reduce 170 omitted

# reduce 171 omitted

# reduce 172 omitted

# reduce 173 omitted

# reduce 174 omitted

# reduce 175 omitted

# reduce 176 omitted

# reduce 177 omitted

# reduce 178 omitted

# reduce 179 omitted

# reduce 180 omitted

# reduce 181 omitted

# reduce 182 omitted

# reduce 183 omitted

# reduce 184 omitted

# reduce 185 omitted

# reduce 186 omitted

# reduce 187 omitted

def _reduce_188(val, _values, result)
                      result = new_assign(val[0], val[1], val[2])
                    
    result
end

def _reduce_189(val, _values, result)
                      result = new_assign val[0], val[1], s(:rescue_mod, val[2], val[4])
                    
    result
end

def _reduce_190(val, _values, result)
                      result = new_op_asgn val[1], val[0], val[2]
                    
    result
end

def _reduce_191(val, _values, result)
                      result = new_op_asgn1(val[0], val[2], val[4], val[5])
                    
    result
end

def _reduce_192(val, _values, result)
                      raise ".JS[...] #{val[4]} is not supported"
                    
    result
end

def _reduce_193(val, _values, result)
                      result = s(:op_asgn2, val[0], op_to_setter(val[2]), value(val[3]).to_sym, val[4])
                    
    result
end

# reduce 194 omitted

# reduce 195 omitted

# reduce 196 omitted

# reduce 197 omitted

# reduce 198 omitted

def _reduce_199(val, _values, result)
                      result = new_irange(val[0], val[1], val[2])
                    
    result
end

def _reduce_200(val, _values, result)
                      result = new_erange(val[0], val[1], val[2])
                    
    result
end

def _reduce_201(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_202(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_203(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_204(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_205(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_206(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_207(val, _values, result)
                      result = new_call new_binary_call(new_int(val[1]), val[2], val[3]), [:"-@", []], []
                    
    result
end

def _reduce_208(val, _values, result)
                      result = new_call new_binary_call(new_float(val[1]), val[2], val[3]), [:"-@", []], []
                    
    result
end

def _reduce_209(val, _values, result)
                      result = new_call val[1], [:"+@", []], []
                      if [:int, :float].include? val[1].type
                        result = val[1]
                      end
                    
    result
end

def _reduce_210(val, _values, result)
                      result = new_call val[1], [:"-@", []], []
                      if val[1].type == :int
                        val[1][1] = -val[1][1]
                        result = val[1]
                      elsif val[1].type == :float
                        val[1][1] = -val[1][1].to_f
                        result = val[1]
                      end
                    
    result
end

def _reduce_211(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_212(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_213(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_214(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_215(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_216(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_217(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_218(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_219(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_220(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_221(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_222(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_223(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_224(val, _values, result)
                      result = new_unary_call(val[0], val[1])
                    
    result
end

def _reduce_225(val, _values, result)
                      result = new_unary_call(val[0], val[1])
                    
    result
end

def _reduce_226(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_227(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_228(val, _values, result)
                      result = new_and(val[0], val[1], val[2])
                    
    result
end

def _reduce_229(val, _values, result)
                      result = new_or(val[0], val[1], val[2])
                    
    result
end

def _reduce_230(val, _values, result)
                      result = s(:defined, val[2])
                    
    result
end

def _reduce_231(val, _values, result)
                      result = new_if(val[1], val[0], val[2], val[4])
                    
    result
end

# reduce 232 omitted

# reduce 233 omitted

def _reduce_234(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_235(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_236(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_237(val, _values, result)
                      val[0] << s(:hash, *val[2])
                      result = val[0]
                    
    result
end

def _reduce_238(val, _values, result)
                      result = [s(:hash, *val[0])]
                    
    result
end

def _reduce_239(val, _values, result)
                      result = val[1]
                    
    result
end

# reduce 240 omitted

def _reduce_241(val, _values, result)
                      result = []
                    
    result
end

# reduce 242 omitted

def _reduce_243(val, _values, result)
                      result = []
                    
    result
end

# reduce 244 omitted

def _reduce_245(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_246(val, _values, result)
                      result = val[0]
                      result << new_hash(nil, val[2], nil)
                    
    result
end

def _reduce_247(val, _values, result)
                      result = [new_hash(nil, val[0], nil)]
                    
    result
end

def _reduce_248(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_249(val, _values, result)
                      result = val[0]
                      add_block_pass val[0], val[1]
                    
    result
end

def _reduce_250(val, _values, result)
                      result = [new_hash(nil, val[0], nil)]
                      add_block_pass result, val[1]
                    
    result
end

def _reduce_251(val, _values, result)
                      result = val[0]
                      result << new_hash(nil, val[2], nil)
                      result << val[3] if val[3]
                    
    result
end

def _reduce_252(val, _values, result)
                      result = []
                      add_block_pass result, val[0]
                    
    result
end

# reduce 253 omitted

# reduce 254 omitted

def _reduce_255(val, _values, result)
                      lexer.cmdarg_push 1
                    
    result
end

def _reduce_256(val, _values, result)
                      lexer.cmdarg_pop
                      result = val[1]
                    
    result
end

# reduce 257 omitted

def _reduce_258(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_259(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_260(val, _values, result)
                      result = new_block_pass(val[0], val[1])
                    
    result
end

def _reduce_261(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_262(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_263(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_264(val, _values, result)
                      result = [new_splat(val[0], val[1])]
                    
    result
end

def _reduce_265(val, _values, result)
                      result = val[0] << val[2]
                    
    result
end

def _reduce_266(val, _values, result)
                      result  = val[0] << new_splat(val[2], val[3])
                    
    result
end

def _reduce_267(val, _values, result)
                      val[0] << val[2]
                      result = s(:array, *val[0])
                    
    result
end

def _reduce_268(val, _values, result)
                      val[0] << s(:splat, val[3])
                      result = s(:array, *val[0])
                    
    result
end

def _reduce_269(val, _values, result)
                      result = s(:splat, val[1])
                    
    result
end

# reduce 270 omitted

# reduce 271 omitted

# reduce 272 omitted

# reduce 273 omitted

# reduce 274 omitted

# reduce 275 omitted

# reduce 276 omitted

# reduce 277 omitted

# reduce 278 omitted

def _reduce_279(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_280(val, _values, result)
                      result = s(:begin, val[2])
                    
    result
end

def _reduce_281(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_282(val, _values, result)
                      result = new_paren(val[0], val[1], val[2])
                    
    result
end

def _reduce_283(val, _values, result)
                      result = new_colon2(val[0], val[1], val[2])
                    
    result
end

def _reduce_284(val, _values, result)
                      result = new_colon3(val[0], val[1])
                    
    result
end

def _reduce_285(val, _values, result)
                      result = new_call val[0], [:[], []], val[2]
                    
    result
end

def _reduce_286(val, _values, result)
                      result = new_js_call val[0], [:[], []], val[2]
                    
    result
end

def _reduce_287(val, _values, result)
                      result = new_array(val[0], val[1], val[2])
                    
    result
end

def _reduce_288(val, _values, result)
                      result = new_hash(val[0], val[1], val[2])
                    
    result
end

def _reduce_289(val, _values, result)
                      result = new_return(val[0])
                    
    result
end

def _reduce_290(val, _values, result)
                      result = new_yield val[2]
                    
    result
end

def _reduce_291(val, _values, result)
                      result = s(:yield)
                    
    result
end

def _reduce_292(val, _values, result)
                      result = s(:yield)
                    
    result
end

def _reduce_293(val, _values, result)
                      result = s(:defined, val[3])
                    
    result
end

def _reduce_294(val, _values, result)
                      result = new_unary_call(['!', []], val[2])
                    
    result
end

def _reduce_295(val, _values, result)
                      result = new_unary_call(['!', []], new_nil(val[0]))
                    
    result
end

def _reduce_296(val, _values, result)
                      result = new_call(nil, val[0], [])
                      result << val[1]
                    
    result
end

# reduce 297 omitted

def _reduce_298(val, _values, result)
                      val[0] << val[1]
                      result = val[0]
                    
    result
end

def _reduce_299(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_300(val, _values, result)
                      result = new_if(val[0], val[1], val[3], val[4])
                    
    result
end

def _reduce_301(val, _values, result)
                      result = new_if(val[0], val[1], val[4], val[3])
                    
    result
end

def _reduce_302(val, _values, result)
                      lexer.cond_push 1
                      result = lexer.line
                    
    result
end

def _reduce_303(val, _values, result)
                      lexer.cond_pop
                    
    result
end

def _reduce_304(val, _values, result)
                      result = s(:while, val[2], val[5])
                    
    result
end

def _reduce_305(val, _values, result)
                      lexer.cond_push 1
                      result = lexer.line
                    
    result
end

def _reduce_306(val, _values, result)
                      lexer.cond_pop
                    
    result
end

def _reduce_307(val, _values, result)
                      result = s(:until, val[2], val[5])
                    
    result
end

def _reduce_308(val, _values, result)
                      result = s(:case, val[1], *val[3])
                    
    result
end

def _reduce_309(val, _values, result)
                      result = s(:case, nil, *val[2])
                    
    result
end

def _reduce_310(val, _values, result)
                      result = s(:case, nil, val[3])
                    
    result
end

def _reduce_311(val, _values, result)
                      lexer.cond_push 1
                      result = lexer.line
                    
    result
end

def _reduce_312(val, _values, result)
                      lexer.cond_pop
                    
    result
end

def _reduce_313(val, _values, result)
                      result = s(:for, val[4], val[1], val[7])
                    
    result
end

def _reduce_314(val, _values, result)
                      # ...
                    
    result
end

def _reduce_315(val, _values, result)
                      result = new_class val[0], val[1], val[2], val[4], val[5]
                    
    result
end

def _reduce_316(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_317(val, _values, result)
                      # ...
                    
    result
end

def _reduce_318(val, _values, result)
                      result = new_sclass(val[0], val[3], val[6], val[7])
                    
    result
end

def _reduce_319(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_320(val, _values, result)
                      # ...
                    
    result
end

def _reduce_321(val, _values, result)
                      result = new_module(val[0], val[2], val[4], val[5])
                    
    result
end

def _reduce_322(val, _values, result)
                      push_scope
                      lexer.lex_state = :expr_endfn
                    
    result
end

def _reduce_323(val, _values, result)
                      result = new_def(val[0], nil, val[1], val[3], val[4], val[5])
                      pop_scope
                    
    result
end

def _reduce_324(val, _values, result)
                       lexer.lex_state = :expr_fname
                    
    result
end

def _reduce_325(val, _values, result)
                      push_scope
                      lexer.lex_state = :expr_endfn
                    
    result
end

def _reduce_326(val, _values, result)
                      result = new_def(val[0], val[1], val[4], val[6], val[7], val[8])
                      pop_scope
                    
    result
end

def _reduce_327(val, _values, result)
                      result = new_break(val[0])
                    
    result
end

def _reduce_328(val, _values, result)
                      result = s(:next)
                    
    result
end

def _reduce_329(val, _values, result)
                      result = s(:redo)
                    
    result
end

# reduce 330 omitted

# reduce 331 omitted

# reduce 332 omitted

# reduce 333 omitted

# reduce 334 omitted

# reduce 335 omitted

# reduce 336 omitted

# reduce 337 omitted

# reduce 338 omitted

def _reduce_339(val, _values, result)
                      result = new_call nil, [:lambda, []], []
                      result << new_iter(val[0], val[1])
                    
    result
end

def _reduce_340(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_341(val, _values, result)
                      result = nil
                    
    result
end

# reduce 342 omitted

# reduce 343 omitted

def _reduce_344(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_345(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_346(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_347(val, _values, result)
                      result = new_if(val[0], val[1], val[3], val[4])
                    
    result
end

# reduce 348 omitted

def _reduce_349(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_350(val, _values, result)
                      result = s(:block, val[0])
                    
    result
end

def _reduce_351(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_352(val, _values, result)
                      result = new_assign(new_assignable(new_ident(
                                  val[0])), val[1], val[2])
                    
    result
end

# reduce 353 omitted

def _reduce_354(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_355(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_356(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_357(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_358(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_359(val, _values, result)
                      nil
                    
    result
end

def _reduce_360(val, _values, result)
                      result = new_block_args(val[0], val[2], val[4], val[5])
                    
    result
end

def _reduce_361(val, _values, result)
                      result = new_block_args(val[0], val[2], nil, val[3])
                    
    result
end

def _reduce_362(val, _values, result)
                      result = new_block_args(val[0], nil, val[2], val[3])
                    
    result
end

def _reduce_363(val, _values, result)
                      result = new_block_args(val[0], nil, nil, nil)
                    
    result
end

def _reduce_364(val, _values, result)
                      result = new_block_args(val[0], nil, nil, val[1])
                    
    result
end

def _reduce_365(val, _values, result)
                      result = new_block_args(nil, val[0], val[2], val[3])
                    
    result
end

def _reduce_366(val, _values, result)
                      result = new_block_args(nil, val[0], nil, val[1])
                    
    result
end

def _reduce_367(val, _values, result)
                      result = new_block_args(nil, nil, val[0], val[1])
                    
    result
end

def _reduce_368(val, _values, result)
                      result = new_block_args(nil, nil, nil, val[0])
                    
    result
end

def _reduce_369(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_370(val, _values, result)
                      result = new_iter val[2], val[3]
                      pop_scope
                    
    result
end

def _reduce_371(val, _values, result)
                      val[0] << val[1]
                      result = val[0]
                    
    result
end

# reduce 372 omitted

# reduce 373 omitted

# reduce 374 omitted

def _reduce_375(val, _values, result)
                      result = new_call(nil, val[0], val[1])
                    
    result
end

def _reduce_376(val, _values, result)
                      result = new_call(val[0], val[2], val[3])
                    
    result
end

def _reduce_377(val, _values, result)
                      result = new_js_call(val[0], val[2], val[3])
                    
    result
end

def _reduce_378(val, _values, result)
                      result = new_call(val[0], [:call, []], val[2])
                    
    result
end

def _reduce_379(val, _values, result)
                      result = new_call(val[0], val[2], val[3])
                    
    result
end

def _reduce_380(val, _values, result)
                      result = new_call(val[0], val[2])
                    
    result
end

def _reduce_381(val, _values, result)
                      result = new_super(val[0], val[1])
                    
    result
end

def _reduce_382(val, _values, result)
                      result = new_super(val[0], nil)
                    
    result
end

def _reduce_383(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_384(val, _values, result)
                      result = new_iter val[2], val[3]
                      pop_scope
                    
    result
end

def _reduce_385(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_386(val, _values, result)
                      result = new_iter val[2], val[3]
                      pop_scope
                    
    result
end

def _reduce_387(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_388(val, _values, result)
                      part = s(:when, s(:array, *val[2]), val[4])
                      result = [part]
                      result.push(*val[5]) if val[5]
                    
    result
end

def _reduce_389(val, _values, result)
                      result = [val[0]]
                    
    result
end

# reduce 390 omitted

def _reduce_391(val, _values, result)
                      exc = val[1] || s(:array)
                      exc << new_assign(val[2], val[2], s(:gvar, '$!'.intern)) if val[2]
                      result = [s(:resbody, exc, val[4])]
                      result.push val[5].first if val[5]
                    
    result
end

def _reduce_392(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_393(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

# reduce 394 omitted

# reduce 395 omitted

def _reduce_396(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_397(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_398(val, _values, result)
                      result = val[1].nil? ? s(:nil) : val[1]
                    
    result
end

# reduce 399 omitted

# reduce 400 omitted

# reduce 401 omitted

# reduce 402 omitted

def _reduce_403(val, _values, result)
                      result = new_str val[0]
                    
    result
end

# reduce 404 omitted

def _reduce_405(val, _values, result)
                    result = str_append val[0], val[1]
                  
    result
end

def _reduce_406(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_407(val, _values, result)
                      result = s(:str, value(val[0]))
                    
    result
end

def _reduce_408(val, _values, result)
                      result = new_xstr(val[0], val[1], val[2])
                    
    result
end

def _reduce_409(val, _values, result)
                      result = new_regexp val[1], val[2]
                    
    result
end

def _reduce_410(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_411(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_412(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_413(val, _values, result)
                      part = val[1]
                      part = s(:dstr, "", val[1]) if part.type == :evstr
                      result = val[0] << part
                    
    result
end

def _reduce_414(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_415(val, _values, result)
                      result = val[0].concat([val[1]])
                    
    result
end

def _reduce_416(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_417(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_418(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_419(val, _values, result)
                      result = val[0] << s(:str, value(val[1]))
                    
    result
end

def _reduce_420(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_421(val, _values, result)
                      result = str_append val[0], val[1]
                    
    result
end

def _reduce_422(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_423(val, _values, result)
                      result = str_append val[0], val[1]
                    
    result
end

def _reduce_424(val, _values, result)
                      result = new_str_content(val[0])
                    
    result
end

def _reduce_425(val, _values, result)
                      result = lexer.strterm
                      lexer.strterm = nil
                    
    result
end

def _reduce_426(val, _values, result)
                      lexer.strterm = val[1]
                      result = new_evstr(val[2])
                    
    result
end

def _reduce_427(val, _values, result)
                      lexer.cond_push 0
                      lexer.cmdarg_push 0
                      result = lexer.strterm
                      lexer.strterm = nil
                      lexer.lex_state = :expr_beg
                    
    result
end

def _reduce_428(val, _values, result)
                      lexer.strterm = val[1]
                      lexer.cond_lexpop
                      lexer.cmdarg_lexpop
                      result = new_evstr(val[2])
                    
    result
end

def _reduce_429(val, _values, result)
                      result = new_gvar(val[0])
                    
    result
end

def _reduce_430(val, _values, result)
                      result = new_ivar(val[0])
                    
    result
end

def _reduce_431(val, _values, result)
                      result = new_cvar(val[0])
                    
    result
end

# reduce 432 omitted

def _reduce_433(val, _values, result)
                      result = new_sym(val[1])
                      lexer.lex_state = :expr_end
                    
    result
end

def _reduce_434(val, _values, result)
                      result = new_sym(val[0])
                    
    result
end

# reduce 435 omitted

# reduce 436 omitted

# reduce 437 omitted

# reduce 438 omitted

def _reduce_439(val, _values, result)
                      result = new_dsym val[1]
                    
    result
end

def _reduce_440(val, _values, result)
                      result = new_int(val[0])
                    
    result
end

def _reduce_441(val, _values, result)
                      result = new_float(val[0])
                    
    result
end

def _reduce_442(val, _values, result)
                    result = negate_num(new_int(val[1]))
                  
    result
end

def _reduce_443(val, _values, result)
                    result = negate_num(new_float(val[1]))
                  
    result
end

def _reduce_444(val, _values, result)
                    result = new_int(val[1])
                  
    result
end

def _reduce_445(val, _values, result)
                    result = new_float(val[1])
                  
    result
end

def _reduce_446(val, _values, result)
                      result = new_ident(val[0])
                    
    result
end

def _reduce_447(val, _values, result)
                      result = new_ivar(val[0])
                    
    result
end

def _reduce_448(val, _values, result)
                      result = new_gvar(val[0])
                    
    result
end

def _reduce_449(val, _values, result)
                      result = new_const(val[0])
                    
    result
end

def _reduce_450(val, _values, result)
                      result = new_cvar(val[0])
                    
    result
end

def _reduce_451(val, _values, result)
                      result = new_nil(val[0])
                    
    result
end

def _reduce_452(val, _values, result)
                      result = new_self(val[0])
                    
    result
end

def _reduce_453(val, _values, result)
                      result = new_true(val[0])
                    
    result
end

def _reduce_454(val, _values, result)
                      result = new_false(val[0])
                    
    result
end

def _reduce_455(val, _values, result)
                      result = new___FILE__(val[0])
                    
    result
end

def _reduce_456(val, _values, result)
                      result = new___LINE__(val[0])
                    
    result
end

def _reduce_457(val, _values, result)
                      result = new_var_ref(val[0])
                    
    result
end

def _reduce_458(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_459(val, _values, result)
                      result = s(:nth_ref, value(val[0]))
                    
    result
end

# reduce 460 omitted

def _reduce_461(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_462(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_463(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_464(val, _values, result)
                      result = val[1]
                      lexer.lex_state = :expr_beg
                    
    result
end

def _reduce_465(val, _values, result)
                      result = val[0]
                      lexer.lex_state = :expr_beg
                    
    result
end

# reduce 466 omitted

# reduce 467 omitted

def _reduce_468(val, _values, result)
                      result = new_kwrestarg(val[1])
                    
    result
end

def _reduce_469(val, _values, result)
                      result = new_kwrestarg()
                    
    result
end

def _reduce_470(val, _values, result)
                      result = new_sym(val[0])
                    
    result
end

def _reduce_471(val, _values, result)
                      result = new_kwoptarg(val[0], val[1])
                    
    result
end

def _reduce_472(val, _values, result)
                      result = new_kwarg(val[0])
                    
    result
end

def _reduce_473(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_474(val, _values, result)
                      result = val[0]
                      result << val[2]
                    
    result
end

def _reduce_475(val, _values, result)
                      result = new_args_tail(val[0], val[2], val[3])
                    
    result
end

def _reduce_476(val, _values, result)
                      result = new_args_tail(val[0], nil, val[1])
                    
    result
end

def _reduce_477(val, _values, result)
                      result = new_args_tail(nil, val[0], val[1])
                    
    result
end

def _reduce_478(val, _values, result)
                      result = new_args_tail(nil, nil, val[0])
                    
    result
end

def _reduce_479(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_480(val, _values, result)
                      result = new_args_tail(nil, nil, nil)
                    
    result
end

def _reduce_481(val, _values, result)
                      result = new_args(val[0], val[2], val[4], val[5])
                    
    result
end

def _reduce_482(val, _values, result)
                      result = new_args(val[0], val[2], nil, val[3])
                    
    result
end

def _reduce_483(val, _values, result)
                      result = new_args(val[0], nil, val[2], val[3])
                    
    result
end

def _reduce_484(val, _values, result)
                      result = new_args(val[0], nil, nil, val[1])
                    
    result
end

def _reduce_485(val, _values, result)
                      result = new_args(nil, val[0], val[2], val[3])
                    
    result
end

def _reduce_486(val, _values, result)
                      result = new_args(nil, val[0], nil, val[1])
                    
    result
end

def _reduce_487(val, _values, result)
                      result = new_args(nil, nil, val[0], val[1])
                    
    result
end

def _reduce_488(val, _values, result)
                      result = new_args(nil, nil, nil, val[0])
                    
    result
end

def _reduce_489(val, _values, result)
                      result = new_args(nil, nil, nil, nil)
                    
    result
end

# reduce 490 omitted

def _reduce_491(val, _values, result)
                      result = value(val[0]).to_sym
                      scope.add_local result
                    
    result
end

def _reduce_492(val, _values, result)
                      raise 'formal argument cannot be a constant'
                    
    result
end

def _reduce_493(val, _values, result)
                      raise 'formal argument cannot be an instance variable'
                    
    result
end

def _reduce_494(val, _values, result)
                      raise 'formal argument cannot be a class variable'
                    
    result
end

def _reduce_495(val, _values, result)
                      raise 'formal argument cannot be a global variable'
                    
    result
end

def _reduce_496(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_497(val, _values, result)
                      result = val[1]
                    
    result
end

# reduce 498 omitted

# reduce 499 omitted

def _reduce_500(val, _values, result)
                      result = s(:lasgn, val[0])
                    
    result
end

# reduce 501 omitted

def _reduce_502(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

def _reduce_503(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

# reduce 504 omitted

# reduce 505 omitted

# reduce 506 omitted

# reduce 507 omitted

# reduce 508 omitted

def _reduce_509(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_510(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_511(val, _values, result)
                      result = new_assign(new_assignable(new_ident(val[0])), val[1], val[2])
                    
    result
end

def _reduce_512(val, _values, result)
                      result = s(:block, val[0])
                    
    result
end

def _reduce_513(val, _values, result)
                      result = val[0]
                      val[0] << val[2]
                    
    result
end

# reduce 514 omitted

# reduce 515 omitted

def _reduce_516(val, _values, result)
                      result = "*#{value(val[1])}".to_sym
                    
    result
end

def _reduce_517(val, _values, result)
                      result = :"*"
                    
    result
end

# reduce 518 omitted

# reduce 519 omitted

def _reduce_520(val, _values, result)
                      result = "&#{value(val[1])}".to_sym
                    
    result
end

def _reduce_521(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_522(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_523(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_524(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_525(val, _values, result)
                      result = []
                    
    result
end

def _reduce_526(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_527(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_528(val, _values, result)
                      result = val[0].push(*val[2])
                    
    result
end

def _reduce_529(val, _values, result)
                      result = [val[0], val[2]]
                    
    result
end

def _reduce_530(val, _values, result)
                      result = [new_sym(val[0]), val[1]]
                    
    result
end

# reduce 531 omitted

# reduce 532 omitted

# reduce 533 omitted

# reduce 534 omitted

# reduce 535 omitted

# reduce 536 omitted

# reduce 537 omitted

# reduce 538 omitted

# reduce 539 omitted

# reduce 540 omitted

# reduce 541 omitted

# reduce 542 omitted

# reduce 543 omitted

# reduce 544 omitted

# reduce 545 omitted

# reduce 546 omitted

# reduce 547 omitted

# reduce 548 omitted

# reduce 549 omitted

# reduce 550 omitted

# reduce 551 omitted

# reduce 552 omitted

# reduce 553 omitted

def _reduce_554(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module Opal
