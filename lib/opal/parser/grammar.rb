#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.9
# from Racc grammer file "".
#

require 'racc/parser.rb'
module Opal
  class Parser < Racc::Parser


##### State transition tables begin ###

clist = [
'64,65,66,8,52,598,276,568,58,59,-473,276,598,62,276,60,61,63,24,25,67',
'68,-95,467,-103,98,642,23,29,28,91,90,92,93,560,547,18,559,109,677,-102',
'-87,7,42,6,9,95,94,85,51,87,86,88,-98,89,96,97,598,82,83,-95,39,40,-94',
'-100,-70,677,206,207,620,206,207,676,-103,-97,271,560,102,271,562,206',
'207,101,37,598,-102,31,641,598,53,275,55,-95,33,196,275,-103,41,275',
'676,-102,-82,206,207,-99,19,197,-87,-98,567,80,74,76,77,78,79,102,198',
'597,75,81,101,-100,102,-87,597,-94,57,101,-94,54,64,65,66,673,52,38',
'84,205,58,59,-97,-93,-87,62,-101,60,61,63,24,25,67,68,-87,311,-89,839',
'311,23,29,28,91,90,92,93,-94,-91,18,102,-560,597,935,619,101,42,-94',
'-88,95,94,85,51,87,86,88,804,89,96,97,-99,82,83,102,39,40,-93,102,101',
'597,247,102,101,597,302,-95,101,-95,-90,-103,-95,-103,-561,-102,-103',
'-102,211,303,-102,215,216,-98,53,-98,55,-101,-98,-461,630,311,41,758',
'758,-89,-461,-100,-96,-100,19,399,-100,677,677,80,74,76,77,78,79,-92',
'206,207,75,81,-97,-91,-97,758,-88,-97,57,402,-93,54,64,65,66,-560,52',
'38,84,102,58,59,676,676,101,62,-90,60,61,63,24,25,67,68,-92,632,631',
'628,816,23,29,28,91,90,92,93,-93,-89,220,-99,-561,-99,685,630,-99,42',
'-93,74,95,94,85,51,87,86,88,75,89,96,97,-91,82,83,-88,39,40,228,102',
'102,757,757,204,101,101,-89,-101,102,-101,817,-98,-101,101,-560,-90',
'-89,630,211,206,207,215,-561,-92,53,102,55,757,-91,225,101,-88,41,227',
'226,632,631,604,-91,605,219,-88,908,-94,798,80,74,76,77,78,79,-90,413',
'-103,75,81,267,268,949,-92,-100,-90,57,340,269,54,64,65,66,-92,52,38',
'84,337,58,59,632,631,628,62,909,60,61,63,259,260,67,68,560,-558,340',
'562,-96,258,29,28,91,90,92,93,337,426,220,352,351,355,354,630,228,42',
'-473,466,95,94,85,51,87,86,88,263,89,96,97,630,82,83,102,39,40,630,-97',
'101,355,354,842,468,605,203,201,225,-464,-464,338,227,226,202,304,305',
'-464,211,-87,630,215,-558,635,53,469,55,-464,257,-95,255,216,41,500',
'-464,632,631,633,338,102,219,502,-558,504,101,80,261,76,77,78,79,632',
'631,637,75,81,512,632,631,643,-69,199,57,200,-464,54,-464,264,340,-471',
'529,38,84,64,65,66,-471,52,337,632,631,58,59,530,560,531,62,562,60,61',
'63,259,260,67,68,104,105,106,107,108,258,29,28,91,90,92,93,423,547,220',
'355,354,425,424,665,652,42,411,412,95,94,85,51,87,86,88,263,89,96,97',
'540,82,83,280,39,40,228,232,237,238,239,234,236,244,245,240,241,338',
'-93,221,222,653,102,242,243,-89,211,101,-102,215,542,543,53,311,55,-98',
'257,225,255,231,41,227,226,223,224,235,233,229,219,230,206,207,-470',
'80,261,76,77,78,79,-470,271,-91,75,81,544,246,803,-238,-337,-337,57',
'-100,548,54,549,264,-337,-469,228,38,84,64,65,66,-469,52,-466,102,-467',
'58,59,311,101,-466,62,-467,60,61,63,259,260,67,68,355,354,563,-88,564',
'258,29,28,91,90,92,93,504,-97,220,571,-468,866,842,665,-337,42,-337',
'-468,95,94,85,51,87,86,88,263,89,96,97,574,82,83,575,39,40,228,232,237',
'238,239,234,236,244,245,240,241,203,462,221,222,625,578,242,243,463',
'211,579,626,215,866,842,53,581,55,583,257,225,255,231,41,227,226,223',
'224,235,233,229,219,230,593,594,415,80,261,76,77,78,79,610,611,612,75',
'81,636,246,640,644,647,-269,57,649,465,54,464,264,650,651,271,38,84',
'64,65,66,8,52,664,898,899,58,59,900,96,97,62,228,60,61,63,24,25,67,68',
'104,105,106,107,108,23,29,28,91,90,92,93,228,586,18,347,345,344,228',
'346,7,42,228,9,95,94,85,51,87,86,88,311,89,96,97,695,82,83,696,39,40',
'704,586,706,347,345,344,586,346,347,345,344,340,346,586,-82,347,345',
'344,707,346,37,337,709,284,228,553,53,720,55,726,33,727,728,733,41,747',
'748,539,536,589,750,753,19,605,349,537,592,80,74,76,77,78,79,355,354',
'225,75,81,761,227,226,223,224,800,57,-270,512,54,64,65,66,512,52,38',
'84,512,58,59,819,820,502,62,504,60,61,63,259,260,67,68,338,829,535,831',
'538,258,294,298,91,90,92,93,832,720,220,539,550,836,271,271,837,295',
'271,551,95,94,85,51,87,86,88,720,89,96,97,228,82,83,228,330,842,347',
'345,344,340,346,848,539,607,104,105,106,107,108,337,608,586,849,347',
'345,344,292,346,850,289,852,578,53,855,55,465,288,464,857,852,861,842',
'349,325,870,871,873,874,-560,352,351,355,354,80,74,76,77,78,79,589,876',
'885,75,81,578,888,592,606,890,609,57,892,894,54,64,65,66,896,52,299',
'84,-271,58,59,911,912,913,62,338,60,61,63,259,260,67,68,914,916,917',
'720,919,258,294,298,91,90,92,93,-269,923,220,539,616,-561,930,932,938',
'295,940,614,95,94,85,51,87,86,88,941,89,96,97,311,82,83,954,330,-272',
'347,345,344,340,346,957,852,966,539,616,852,852,971,337,972,586,746',
'347,345,344,292,346,977,215,578,979,53,981,55,615,983,538,894,985,992',
'999,349,726,570,852,1013,1014,985,352,351,355,354,80,74,76,77,78,79',
'589,985,985,75,81,1019,1020,863,301,985,615,57,538,,54,64,65,66,,52',
'299,84,,58,59,,,,62,338,60,61,63,259,260,67,68,,,,,,258,294,298,91,90',
'92,93,,,220,-290,-290,,,,,42,,-290,95,94,85,51,87,86,88,,89,96,97,,82',
'83,,39,40,,,,,,,586,,347,345,344,340,346,,,,,,,,211,337,,215,228,,53',
',55,-290,,-290,,,41,,,539,616,,,,219,,349,746,,80,74,76,77,78,79,355',
'354,225,75,81,,227,226,223,224,,57,,,54,64,65,66,,52,38,84,,58,59,,',
',62,,60,61,63,259,260,67,68,338,,615,,538,258,294,298,91,90,92,93,,',
'220,-292,-292,,,,,42,,-292,95,94,85,51,87,86,88,,89,96,97,,82,83,,39',
'40,,,,,,,586,,347,345,344,340,346,,,,,,,,211,337,,215,,,53,,55,-292',
',-292,,,41,,,539,990,,,,219,,349,991,,80,74,76,77,78,79,355,354,,75',
'81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,259,260,67',
'68,338,,989,,609,258,294,298,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51',
'87,86,88,,89,96,97,,82,83,,39,40,228,,,,,,586,,347,345,344,340,346,',
',,,242,243,,211,337,,215,,,53,,55,,,225,,231,41,227,226,223,224,,,229',
'219,230,349,,,80,74,76,77,78,79,355,354,,75,81,,,,,,,57,,,54,64,65,66',
',52,38,84,,58,59,,,,62,,60,61,63,24,25,67,68,338,,,,,23,29,28,91,90',
'92,93,,,18,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,228',
',,,,,586,,347,345,344,340,346,,,,,242,243,,211,337,,215,,,53,,55,,,225',
',231,41,227,226,223,224,,,229,19,230,349,,,80,74,76,77,78,79,355,354',
',75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,259,260',
'67,68,338,,,,,258,29,28,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87',
'86,88,263,89,96,97,,82,83,,39,40,228,232,237,238,239,234,236,244,245',
'240,241,-289,-289,221,222,,,242,243,-289,211,,,215,-561,,53,,55,,257',
'225,,231,41,227,226,223,224,235,233,229,219,230,,,,80,261,76,77,78,79',
',,,75,81,,246,,-238,,,57,,-289,54,-289,264,,,,38,84,64,65,66,,52,,,',
'58,59,,,,62,,60,61,63,259,260,67,68,,,,,,258,294,298,91,90,92,93,,,220',
',,,,,,42,,,95,94,85,51,87,86,88,263,89,96,97,,82,83,,39,40,228,232,237',
'238,239,234,236,244,245,240,241,,,221,222,,,242,243,,211,,,215,,,53',
',55,,,225,,231,41,227,226,223,224,235,233,229,219,230,,,,80,261,76,77',
'78,79,,,,75,81,,246,821,,,,57,,,54,,264,,,,38,84,64,65,66,,52,,,,58',
'59,,,,62,,60,61,63,24,25,67,68,,,,,,23,29,28,91,90,92,93,,,18,,,,,,',
'42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,228,,,,,,586,,347',
'345,344,340,346,,,,,242,243,,211,337,,215,,,53,,55,,,225,,231,41,227',
'226,223,224,,,229,19,230,349,,,80,74,76,77,78,79,355,354,,75,81,,,,',
',,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,24,25,67,68,338',
',,,,23,29,28,91,90,92,93,,,18,,,,,,,42,,,95,94,85,51,87,86,88,,89,96',
'97,,82,83,,39,40,228,,,,,,586,,347,345,344,340,346,,,,,242,243,,211',
'337,,215,,,53,,55,,,225,,231,41,227,226,223,224,,,229,19,230,349,,,80',
'74,76,77,78,79,355,354,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59',
',,,62,,60,61,63,24,25,67,68,338,,,,,23,29,28,91,90,92,93,,,18,,,,,,',
'42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,228,,,,,,586,,347',
'345,344,340,346,,,,,242,243,,211,337,,215,,,53,,55,,,225,,231,41,227',
'226,223,224,,,,19,,349,,,80,74,76,77,78,79,355,354,,75,81,102,,,,,101',
'57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,259,260,67,68,338',
',,,,258,294,298,91,90,92,93,,,220,,,,,,,295,,,95,94,85,51,87,86,88,',
'89,96,97,,82,83,,330,,347,345,344,340,346,,,,,,,,,337,,,,,,,367,,,31',
'228,,53,,55,,33,,,,,,349,,,,,242,243,352,351,355,354,80,74,76,77,78',
'79,,,225,75,81,,227,226,223,224,,57,,,54,64,65,66,,52,299,84,,58,59',
',,,62,338,60,61,63,259,260,67,68,,,,,,258,294,298,91,90,92,93,,,220',
',,,,,,295,,,95,94,85,51,87,86,372,,89,96,97,228,82,83,,330,,347,345',
'344,340,346,,,,,,,242,243,337,,,,378,,,373,,,215,,225,53,231,55,227',
'226,223,224,,,,349,,,,,,,352,351,355,354,80,74,76,77,78,79,,,,75,81',
',,,,,,57,,,54,-557,-557,-557,,-557,299,84,,-557,-557,,,,-557,338,-557',
'-557,-557,-557,-557,-557,-557,,-557,,,,-557,-557,-557,-557,-557,-557',
'-557,,,-557,,,,,,,-557,,,-557,-557,-557,-557,-557,-557,-557,-557,-557',
'-557,-557,,-557,-557,,-557,-557,228,232,237,238,239,234,236,244,245',
'240,241,,,221,222,,,242,243,,-557,,,-557,-557,,-557,,-557,,-557,225',
'-557,231,-557,227,226,223,224,235,233,229,-557,230,-557,,,-557,-557',
'-557,-557,-557,-557,,,,-557,-557,,246,,,,,-557,,,-557,,-557,,,,-557',
'-557,-558,-558,-558,,-558,,,,-558,-558,,,,-558,,-558,-558,-558,-558',
'-558,-558,-558,,-558,,,,-558,-558,-558,-558,-558,-558,-558,,,-558,,',
',,,,-558,,,-558,-558,-558,-558,-558,-558,-558,-558,-558,-558,-558,,-558',
'-558,,-558,-558,228,232,237,238,239,234,236,244,245,240,241,,,221,222',
',,242,243,,-558,,,-558,-558,,-558,,-558,,-558,225,-558,231,-558,227',
'226,223,224,235,233,229,-558,230,-558,,,-558,-558,-558,-558,-558,-558',
',,,-558,-558,,246,,,,,-558,,,-558,,-558,,,,-558,-558,64,65,66,8,52,',
',,58,59,,,,62,,60,61,63,24,25,67,68,,,,,,23,29,28,91,90,92,93,,,18,',
',,,,7,42,6,9,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,586',
',347,345,344,340,346,,,,,,,,37,337,,31,,,53,,55,,33,,,,41,,,,,,,,19',
',349,,,80,74,76,77,78,79,355,354,,75,81,,,,,,415,57,,,54,64,65,66,,52',
'38,84,,58,59,,,,62,,60,61,63,24,25,67,68,338,,,,,23,29,28,91,90,92,93',
',,18,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,586',
',347,345,344,340,346,,,,,,,,211,337,,215,,,53,,55,,,,,,41,,,,,,,,19',
',349,,,80,74,76,77,78,79,355,354,,75,81,,,,,,,57,,,54,64,65,66,,52,38',
'84,,58,59,,,,62,,60,61,63,24,25,67,68,338,,,,,23,29,28,91,90,92,93,',
',18,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,228,232',
'237,238,239,234,236,244,245,240,241,,,221,222,,,242,243,,211,,,215,',
',53,,55,,,225,,231,41,227,226,223,224,235,233,229,19,230,,,,80,74,76',
'77,78,79,,,,75,81,,246,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,',
'60,61,63,24,25,67,68,,,,,,23,29,28,91,90,92,93,,,18,,,,,,,42,,,95,94',
'85,51,87,86,88,,89,96,97,,82,83,,39,40,228,232,237,238,239,234,236,244',
'245,240,241,,,221,222,,,242,243,,211,,,215,,,53,,55,,,225,,231,41,227',
'226,223,224,235,233,229,19,230,,,,80,74,76,77,78,79,,,,75,81,,246,,',
',,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,24,25,67,68,,,,',
',23,29,28,91,90,92,93,,,18,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97',
',82,83,,39,40,228,232,237,238,239,234,236,244,245,240,241,,,221,222',
',,242,243,,211,,,215,,,53,,55,,,225,,231,41,227,226,223,224,235,233',
'229,19,230,,,,80,74,76,77,78,79,,,,75,81,,246,,,,,57,,,54,64,65,66,8',
'52,38,84,,58,59,,,,62,,60,61,63,24,25,67,68,,,,,,23,29,28,91,90,92,93',
',,18,,,,,,7,42,,9,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,228,232',
'237,238,239,234,236,244,245,240,241,,,221,222,,,242,243,,37,,,31,,,53',
',55,,33,225,,231,41,227,226,223,224,235,233,229,19,230,,,,80,74,76,77',
'78,79,,,,75,81,,246,,,,,57,,,54,64,65,66,8,52,38,84,,58,59,,,,62,,60',
'61,63,24,25,67,68,,,,,,23,29,28,91,90,92,93,,,18,,,,,,7,42,6,9,95,94',
'85,51,87,86,88,,89,96,97,,82,83,,39,40,228,232,237,238,239,234,236,244',
'245,240,241,,,221,222,,,242,243,,37,,,31,,,53,,55,,33,225,,231,41,227',
'226,223,224,235,233,229,19,230,,,,80,74,76,77,78,79,,,,75,81,,246,,',
',,57,,,54,64,65,66,8,52,38,84,,58,59,,,,62,,60,61,63,24,25,67,68,,,',
',,23,29,28,91,90,92,93,,,18,,,,,,7,42,,9,95,94,85,51,87,86,88,,89,96',
'97,,82,83,,39,40,228,232,237,238,239,234,236,244,245,240,241,,,221,222',
',,242,243,,37,,,31,,,53,,55,,33,225,,231,41,227,226,223,224,235,233',
'229,19,230,,,,80,74,76,77,78,79,,,,75,81,,246,,,,,57,,,54,64,65,66,',
'52,38,84,,58,59,,,,62,,60,61,63,24,25,67,68,,,,,,23,29,28,91,90,92,93',
',,220,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,228,232',
'237,238,239,234,236,244,245,240,241,,,221,222,,,242,243,,211,,,215,',
',53,,55,,431,225,,231,41,227,226,223,224,235,233,229,219,230,,,,80,74',
'76,77,78,79,,,,75,81,,246,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62',
',60,61,63,24,25,67,68,,,,,,23,29,28,91,90,92,93,,,220,,,,,,,42,,,95',
'94,85,51,87,86,88,,89,96,97,,82,83,,39,40,228,232,237,238,239,234,236',
'244,245,240,241,,,221,222,,,242,243,,211,,,215,,,53,,55,,,225,,231,41',
'227,226,223,224,235,233,229,219,230,,,,80,74,76,77,78,79,,,,75,81,,246',
',,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,259,260,67,68',
',,,,,258,29,28,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,263',
'89,96,97,,82,83,,39,40,228,232,237,238,239,234,236,244,245,240,241,',
',221,222,,,242,243,,211,,,215,,,53,,55,,257,225,,231,41,227,226,223',
'224,235,233,229,219,230,,,,80,261,76,77,78,79,,,,75,81,,246,,,,,57,',
',54,,264,,,,38,84,64,65,66,,52,,,,58,59,,,,62,,60,61,63,259,260,67,68',
',,,,,258,29,28,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,263',
'89,96,97,,82,83,,39,40,228,232,237,238,239,234,236,244,245,240,241,',
',221,222,,,242,243,,211,,,215,,,53,,55,,257,225,,231,41,227,226,223',
'224,235,233,229,219,230,,,,80,261,76,77,78,79,,,,75,81,,246,,,,,57,',
',54,,264,,,,38,84,64,65,66,,52,,,,58,59,,,,62,,60,61,63,24,25,67,68',
',,,,,23,29,28,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,,89',
'96,97,,82,83,,39,40,228,232,237,238,239,234,236,244,245,240,241,,,221',
'222,,,242,243,,211,,,215,,,53,,55,,,225,,231,41,227,226,223,224,235',
'233,229,219,230,,,,80,74,76,77,78,79,,,,75,81,,246,,,,,57,,,54,64,65',
'66,,52,38,84,,58,59,,,,62,,60,61,63,24,25,67,68,,,,,,23,29,28,91,90',
'92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40',
'228,232,237,238,239,234,236,244,245,240,241,,,221,222,,,242,243,,211',
',,215,,,53,,55,,431,225,,231,41,227,226,223,224,235,233,229,219,230',
',,,80,74,76,77,78,79,,,,75,81,,246,,,,,57,,,54,64,65,66,,52,38,84,,58',
'59,,,,62,,60,61,63,24,25,67,68,,,,,,23,29,28,91,90,92,93,,,18,,,,,,',
'42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,228,232,237,238,239',
'234,236,244,245,240,241,,,-581,-581,,,242,243,,211,,,215,,,53,,55,,',
'225,,231,41,227,226,223,224,235,233,229,19,230,,,,80,74,76,77,78,79',
',,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,24',
'25,67,68,,,,,,23,29,28,91,90,92,93,,,18,,,,,,,42,,,95,94,85,51,87,86',
'88,,89,96,97,,82,83,,39,40,228,232,237,238,239,234,236,244,245,240,241',
',,-581,-581,,,242,243,,211,,,215,,,53,,55,,,225,,231,41,227,226,223',
'224,235,233,229,19,230,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64',
'65,66,8,52,38,84,,58,59,,,,62,,60,61,63,24,25,67,68,,,,,,23,29,28,91',
'90,92,93,,,18,,,,,,7,42,,9,95,94,85,51,87,86,88,,89,96,97,,82,83,,39',
'40,228,-581,-581,-581,-581,234,236,,,-581,-581,,,,,,,242,243,,37,,,31',
',,53,,55,,33,225,,231,41,227,226,223,224,235,233,229,19,230,,,,80,74',
'76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,',
'60,61,63,24,25,67,68,,,,,,23,29,28,91,90,92,93,,,18,,,,,,,42,,,95,94',
'85,51,87,86,88,,89,96,97,,82,83,,39,40,228,-581,-581,-581,-581,234,236',
',,-581,-581,,,,,,,242,243,,211,,,215,,471,53,,55,,,225,,231,41,227,226',
'223,224,235,233,229,19,230,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,',
'54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,259,260,67,68,,,,,,258',
'294,298,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97',
',82,83,,39,40,228,-581,-581,-581,-581,234,236,,,-581,-581,,,,,,,242',
'243,,211,,,215,,,53,,55,,,225,,231,41,227,226,223,224,235,233,229,219',
'230,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,',
'58,59,,,,62,,60,61,63,259,260,67,68,,,,,,258,294,298,91,90,92,93,,,220',
',,,,,,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,228,-581,-581',
'-581,-581,234,236,,,-581,-581,,,,,,,242,243,,211,,,215,,,53,,55,,,225',
',231,41,227,226,223,224,235,233,229,219,230,,,,80,74,76,77,78,79,,,',
'75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,259,260',
'67,68,,,,,,258,294,298,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86',
'88,,89,96,97,,82,83,,39,40,228,-581,-581,-581,-581,234,236,,,-581,-581',
',,,,,,242,243,,211,,,215,,,53,,55,,,225,,231,41,227,226,223,224,235',
'233,229,219,230,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66',
',52,38,84,,58,59,,,,62,,60,61,63,259,260,67,68,,,,,,258,294,298,91,90',
'92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40',
'228,-581,-581,-581,-581,234,236,,,-581,-581,,,,,,,242,243,,211,,,215',
',,53,,55,,,225,,231,41,227,226,223,224,235,233,229,219,230,,,,80,74',
'76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,',
'60,61,63,259,260,67,68,,,,,,258,294,298,91,90,92,93,,,220,,,,,,,42,',
',95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,228,232,237,238,239,234',
'236,,,240,241,,,,,,,242,243,,211,,,215,,,53,,55,,,225,,231,41,227,226',
'223,224,235,233,229,219,230,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,',
',54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,259,260,67,68,,,,,,258',
'294,298,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97',
',82,83,,39,40,228,232,237,238,239,234,236,244,,240,241,,,,,,,242,243',
',211,,,215,,,53,,55,,,225,,231,41,227,226,223,224,235,233,229,219,230',
',,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59',
',,,62,,60,61,63,259,260,67,68,,,,,,258,294,298,91,90,92,93,,,220,,,',
',,,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,',
',,,,,211,,,215,,,53,,55,,,,,,41,,,,,,,,219,,,,,80,74,76,77,78,79,,,',
'75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,259,260',
'67,68,,,,,,258,294,298,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86',
'88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,',
',,,41,,,,,,,,219,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65',
'66,,52,38,84,,58,59,,,,62,,60,61,63,259,260,67,68,,,,,,258,294,298,91',
'90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39',
'40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,,,,,,,,219,,,,,80',
'74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62',
',60,61,63,259,260,67,68,,,,,,258,294,298,91,90,92,93,,,220,,,,,,,42',
',,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211',
',,215,,,53,,55,,,,,,41,,,,,,,,219,,,,,80,74,76,77,78,79,,,,75,81,,,',
',,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,259,260,67,68,',
',,,,258,294,298,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,,89',
'96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,',
',,,,,,219,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52',
'38,84,,58,59,,,,62,,60,61,63,259,260,67,68,,,,,,258,294,298,91,90,92',
'93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,',
',,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,,,,,,,,219,,,,,80,74,76',
'77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60',
'61,63,259,260,67,68,,,,,,258,294,298,91,90,92,93,,,220,,,,,,,42,,,95',
'94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,',
'215,,,53,,55,,,,,,41,,,,,,,,219,,,,,80,74,76,77,78,79,,,,75,81,,,,,',
',57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,259,260,67,68,,,',
',,258,294,298,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,,89',
'96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,',
',,,,,,219,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52',
'38,84,,58,59,,,,62,,60,61,63,259,260,67,68,,,,,,258,294,298,91,90,92',
'93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,',
',,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,,,,,,,,219,,,,,80,74,76',
'77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60',
'61,63,259,260,67,68,,,,,,258,294,298,91,90,92,93,,,220,,,,,,,42,,,95',
'94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,',
'215,,,53,,55,,,,,,41,,,,,,,,219,,,,,80,74,76,77,78,79,,,,75,81,,,,,',
',57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,259,260,67,68,,,',
',,258,294,298,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,,89',
'96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,',
',,,,,,219,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52',
'38,84,,58,59,,,,62,,60,61,63,259,260,67,68,,,,,,258,294,298,91,90,92',
'93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,',
',,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,,,,,,,,219,,,,,80,74,76',
'77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60',
'61,63,259,260,67,68,,,,,,258,294,298,91,90,92,93,,,220,,,,,,,42,,,95',
'94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,',
'215,,,53,,55,,,,,,41,,,,,,,,219,,,,,80,74,76,77,78,79,,,,75,81,,,,,',
',57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,259,260,67,68,,,',
',,258,294,298,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,,89',
'96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,',
',,,,,,219,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52',
'38,84,,58,59,,,,62,,60,61,63,259,260,67,68,,,,,,258,294,298,91,90,92',
'93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,',
',,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,,,,,,,,219,,,,,80,74,76',
'77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60',
'61,63,259,260,67,68,,,,,,258,294,298,91,90,92,93,,,220,,,,,,,42,,,95',
'94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,',
'215,,,53,,55,,,,,,41,,,,,,,,219,,,,,80,74,76,77,78,79,,,,75,81,,,,,',
',57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,259,260,67,68,,,',
',,258,294,298,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,,89',
'96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,',
',,,,,,219,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52',
'38,84,,58,59,,,,62,,60,61,63,259,260,67,68,,,,,,258,294,298,91,90,92',
'93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,',
',,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,,,,,,,,219,,,,,80,74,76',
'77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60',
'61,63,259,260,67,68,,,,,,258,294,298,91,90,92,93,,,220,,,,,,,42,,,95',
'94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,',
'215,,,53,,55,,,,,,41,,,,,,,,219,,,,,80,74,76,77,78,79,,,,75,81,,,,,',
',57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,259,260,67,68,,,',
',,258,294,298,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,,89',
'96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,',
',,,,,,219,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52',
'38,84,,58,59,,,,62,,60,61,63,259,260,67,68,,,,,,258,294,298,91,90,92',
'93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,',
',,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,,,,,,,,219,,,,,80,74,76',
'77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60',
'61,63,259,260,67,68,,,,,,258,294,298,91,90,92,93,,,220,,,,,,,42,,,95',
'94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,',
'215,,,53,,55,,,,,,41,,,,,,,,219,,,,,80,74,76,77,78,79,,,,75,81,,,,,',
',57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,259,260,67,68,,,',
',,258,294,298,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,,89',
'96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,',
',,,,,,219,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52',
'38,84,,58,59,,,,62,,60,61,63,259,260,67,68,,,,,,258,294,298,91,90,92',
'93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,',
',,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,,,,,,,,219,,,,,80,74,76',
'77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60',
'61,63,259,260,67,68,,,,,,258,29,28,91,90,92,93,,,220,,,,,,,42,,,95,94',
'85,51,87,86,88,263,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,',
'215,,,53,,55,,257,,255,,41,,,,,,,,219,,,,,80,261,76,77,78,79,,,,75,81',
',,,,,,57,,,54,,264,,,,38,84,64,65,66,,52,,,,58,59,,,,62,,60,61,63,259',
'260,67,68,,,,,,258,29,28,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87',
'86,88,263,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,521',
',55,,257,,255,,41,,,,,,,,219,,,,,80,261,76,77,78,79,,,,75,81,,,,,,,57',
',,54,,264,,,,38,84,64,65,66,,52,,,,58,59,,,,62,,60,61,63,259,260,67',
'68,,,,,,258,29,28,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88',
'263,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,525,53,,55',
',257,,255,,41,,,,,,,,219,,,,,80,261,76,77,78,79,,,,75,81,,,,,,,57,,',
'54,,264,,,,38,84,64,65,66,8,52,,,,58,59,,,,62,,60,61,63,24,25,67,68',
',,,,,23,29,28,91,90,92,93,,,18,,,,,,7,42,,9,95,94,85,51,87,86,88,,89',
'96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,37,,,284,,,53,,55,,33,,,,41',
',,,,,,,19,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52',
'38,84,,58,59,,,,62,,60,61,63,259,260,67,68,,,,,,258,294,298,91,90,92',
'93,,,220,,,,,,,295,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,792,,347',
'345,344,340,346,,,,,,,,,337,,,,,,,292,,,215,,,53,,55,,,,,,,,349,781',
',,,,,352,351,355,354,80,74,76,77,78,79,,,,75,81,,,,533,,,57,,,54,64',
'65,66,8,52,299,84,,58,59,,,,62,338,60,61,63,24,25,67,68,,,,,,23,29,28',
'91,90,92,93,,,18,,,,,,7,42,,9,95,94,85,51,87,86,88,,89,96,97,,82,83',
',39,40,,,,,,,,,,,,,,,,,,,,,37,,,284,,,53,,55,,33,,,,41,,,,,,,,19,,,',
',80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59',
',,,62,,60,61,63,259,260,67,68,,,,,,258,294,298,91,90,92,93,,,220,,,',
',,,295,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,330,,347,345,344,340',
'346,,,,,,,,,337,,,,,,,292,,,289,,,53,,55,,,,,,,,349,,,,,,,352,351,355',
'354,80,74,76,77,78,79,,822,,75,81,,,,,,,57,,,54,64,65,66,,52,299,84',
',58,59,,,,62,338,60,61,63,259,260,67,68,,,,,,258,294,298,91,90,92,93',
',,220,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,',
',,,,,,,,,,,,,,211,,,215,553,,53,,55,,,,,,41,,,,,,,,219,,,,,80,74,76',
'77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,8,52,38,84,,58,59,,,,62,,60',
'61,63,24,25,67,68,,,,,,23,29,28,91,90,92,93,,,18,,,,,,7,42,,9,95,94',
'85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,37,,,31,',
',53,,55,,33,,,,41,,,,,,,,19,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57',
',,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,259,260,67,68,,,,,,258',
'294,298,91,90,92,93,,,220,,,,,,,295,,,95,94,85,51,87,86,88,,89,96,97',
',82,83,,792,,347,345,344,340,346,,,,,,,,,337,,,,,,,585,,,215,,,53,,55',
',,,,,,,349,,,,,,,352,351,355,354,80,74,76,77,78,79,,,,75,81,,,,,,,57',
',,54,64,65,66,,52,299,84,,58,59,,,,62,338,60,61,63,24,25,67,68,,,,,',
'23,29,28,91,90,92,93,,,18,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97',
',82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,,,,,,,',
'19,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,',
'58,59,,,,62,,60,61,63,24,25,67,68,,,,,,23,29,28,91,90,92,93,,,18,,,',
',,,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,',
',,,,,211,,,215,,,53,,55,,,,,,41,,,,,,,,19,,,,,80,74,76,77,78,79,,,,75',
'81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,259,260,67',
'68,,,,,,258,294,298,91,90,92,93,,,220,,,,,,,295,,,95,94,85,51,87,86',
'372,,89,96,97,,82,83,,330,,347,345,344,340,346,,,,,,,,,337,,,,,,,373',
',,215,,,53,,55,,,,,,,,349,,,,,,,352,351,355,354,80,74,76,77,78,79,,',
',75,81,,,,,,,57,,,54,64,65,66,,52,299,84,,58,59,,,,62,338,60,61,63,24',
'25,67,68,,,,,,23,29,28,91,90,92,93,,,18,,,,,,,42,,,95,94,85,51,87,86',
'88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,',
',,,41,,,,,,,,19,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66',
',52,38,84,,58,59,,,,62,,60,61,63,259,260,67,68,,,,,,258,294,298,91,90',
'92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40',
',,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,,,,,,,,219,,,,,80,74',
'76,77,78,79,,,,75,81,,,,,,,57,,,54,-562,-562,-562,,-562,38,84,,-562',
'-562,,,,-562,,-562,-562,-562,-562,-562,-562,-562,,,,,,-562,-562,-562',
'-562,-562,-562,-562,,,-562,,,,,,,-562,,,-562,-562,-562,-562,-562,-562',
'-562,-562,-562,-562,-562,,-562,-562,,-562,-562,,,,,,,,,,,,,,,,,,,,,-562',
',,-562,-562,,-562,,-562,,-562,,-562,,-562,,,,,,,,-562,,,,,-562,-562',
'-562,-562,-562,-562,,,,-562,-562,,,,,,,-562,,,-562,,-562,,,,-562,-562',
'-563,-563,-563,,-563,,,,-563,-563,,,,-563,,-563,-563,-563,-563,-563',
'-563,-563,,,,,,-563,-563,-563,-563,-563,-563,-563,,,-563,,,,,,,-563',
',,-563,-563,-563,-563,-563,-563,-563,-563,-563,-563,-563,,-563,-563',
',-563,-563,,,,,,,,,,,,,,,,,,,,,-563,,,-563,-563,,-563,,-563,,-563,,-563',
',-563,,,,,,,,-563,,,,,-563,-563,-563,-563,-563,-563,,,,-563,-563,,,',
',,,-563,,,-563,,-563,,,,-563,-563,64,65,66,,52,,,,58,59,,,,62,,60,61',
'63,259,260,67,68,,,,,,258,29,28,91,90,92,93,,,220,,,,,,,42,,,95,94,85',
'51,87,86,88,263,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215',
',,53,,55,,257,,,,41,,,,,,,,219,,,,,80,261,76,77,78,79,,,,75,81,,,,,',
',57,,,54,,264,,,,38,84,64,65,66,,52,,,,58,59,,,,62,,60,61,63,259,260',
'67,68,,,,,,258,29,28,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86',
'88,263,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55',
',257,,,,41,,,,,,,,219,,,,,80,261,76,77,78,79,,,,75,81,,,,,,,57,,,54',
',264,,,,38,84,64,65,66,,52,,,,58,59,,,,62,,60,61,63,259,260,67,68,,',
',,,258,294,298,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,,89',
'96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,',
',,,,,,219,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52',
'38,84,,58,59,,,,62,,60,61,63,259,260,67,68,,,,,,258,294,298,91,90,92',
'93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,',
',,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,,,,,,,,219,,,,,80,74,76',
'77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60',
'61,63,259,260,67,68,,,,,,258,294,298,91,90,92,93,,,220,,,,,,,42,,,95',
'94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,',
'215,,,53,,55,,,,,,41,,,,,,,,219,,,,,80,74,76,77,78,79,,,,75,81,,,,,',
',57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,259,260,67,68,,,',
',,258,294,298,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,,89',
'96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,',
',,,,,,219,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52',
'38,84,,58,59,,,,62,,60,61,63,259,260,67,68,,,,,,258,294,298,91,90,92',
'93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,263,89,96,97,,82,83,,39,40',
',,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,682,,255,,41,,,,,,,,219,,,,',
'80,261,76,77,78,79,,,,75,81,,,,,,,57,,,54,,264,,,,38,84,64,65,66,,52',
',,,58,59,,,,62,,60,61,63,259,260,67,68,,,,,,258,294,298,91,90,92,93',
',,220,,,,,,,42,,,95,94,85,51,87,86,88,263,89,96,97,,82,83,,39,40,,,',
',,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,255,,41,,,,,,,,219,,,,,80,261',
'76,77,78,79,,,,75,81,,,,,,,57,,,54,,264,,,,38,84,64,65,66,,52,,,,58',
'59,,,,62,,60,61,63,259,260,67,68,,,,,,258,294,298,91,90,92,93,,,220',
',,,,,,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,',
',,,,,,,,211,,,215,,,53,,55,,,,,,41,,,,,,,,219,,,,,80,74,76,77,78,79',
',,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,24',
'25,67,68,,,,,,23,29,28,91,90,92,93,,,18,,,,,,,42,,,95,94,85,51,87,86',
'88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,700,53,,55',
',,,255,,41,,,,,,,,19,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64',
'65,66,8,52,38,84,,58,59,,,,62,,60,61,63,24,25,67,68,,,,,,23,29,28,91',
'90,92,93,,,18,,,,,,7,42,,9,95,94,85,51,87,86,88,,89,96,97,,82,83,,39',
'40,,,,,,,,,,,,,,,,,,,,,37,,,31,,,53,,55,,33,,,,41,,,,,,,,19,,,,,80,74',
'76,77,78,79,,,,75,81,,,,,,415,57,,,54,64,65,66,,52,38,84,,58,59,,,,62',
',60,61,63,259,260,67,68,,,,,,258,294,298,91,90,92,93,,,220,,,,,,,295',
',,95,94,85,51,87,86,88,,89,96,97,,82,83,,792,,347,345,344,340,346,,',
',,,,,,337,,,,,,,292,,,289,,,53,,55,,,,,,,,349,,,,,,,352,351,355,354',
'80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,299,84,,58,59',
',,,62,338,60,61,63,259,260,67,68,,,,,,258,29,28,91,90,92,93,,,220,,',
',,,,42,,,95,94,85,51,87,86,88,263,89,96,97,,82,83,,39,40,,,,,,,,,,,',
',,,,,,,,,211,,,215,,,53,,55,,257,,,,41,,,,,,,,219,,,,,80,261,76,77,78',
'79,,,,75,81,,,,,,,57,,,54,,264,,,,38,84,64,65,66,,52,,,,58,59,,,,62',
',60,61,63,259,260,67,68,,,,,,258,29,28,91,90,92,93,,,220,,,,,,,42,,',
'95,94,85,51,87,86,88,263,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,',
'211,,,215,,,53,,55,,257,,,,41,,,,,,,,219,,,,,80,261,76,77,78,79,,,,75',
'81,,,,,,,57,,,54,,264,,,,38,84,64,65,66,,52,,,,58,59,,,,62,,60,61,63',
'259,260,67,68,,,,,,258,294,298,91,90,92,93,,,220,,,,,,,295,,,95,94,85',
'51,87,86,88,,89,96,97,,82,83,,792,,347,345,344,340,346,,,,,,,,,337,',
',,,,,292,,,289,,,53,,55,,,,,,,,349,781,,,,,,352,351,355,354,80,74,76',
'77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,299,84,,58,59,,,,62,338',
'60,61,63,259,260,67,68,,,,,,258,294,298,91,90,92,93,,,220,,,,,,,42,',
',95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211',
',,215,,,53,,55,,,,,,41,,,,,,,,219,,,,,80,74,76,77,78,79,,,,75,81,,,',
',,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,259,260,67,68,',
',,,,258,294,298,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,,89',
'96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,',
',,,,,,219,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52',
'38,84,,58,59,,,,62,,60,61,63,259,260,67,68,,,,,,258,294,298,91,90,92',
'93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,',
',,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,,,,,,,,219,,,,,80,74,76',
'77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60',
'61,63,24,25,67,68,,,,,,23,29,28,91,90,92,93,,,18,,,,,,,42,,,95,94,85',
'51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,',
'53,,55,,,,,,41,,,,,,,,19,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54',
'64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,259,260,67,68,,,,,,258,294',
'298,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,263,89,96,97,',
'82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,682,,255,,41,,',
',,,,,219,,,,,80,261,76,77,78,79,,,,75,81,,,,,,,57,,,54,,264,,,,38,84',
'64,65,66,,52,,,,58,59,,,,62,,60,61,63,259,260,67,68,,,,,,258,294,298',
'91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,263,89,96,97,,82,83',
',39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,,,,,,,,219,,,',
',80,261,76,77,78,79,,,,75,81,,,,,,,57,,,54,,264,,,,38,84,64,65,66,8',
'52,,,,58,59,,,,62,,60,61,63,24,25,67,68,,,,,,23,29,28,91,90,92,93,,',
'18,,,,,,7,42,,9,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,',
',,,,,,,,,,,,,37,,,31,,,53,,55,,33,,,,41,,,,,,,,19,,,,,80,74,76,77,78',
'79,,,,75,81,,,,,,,57,,,54,64,65,66,8,52,38,84,,58,59,,,,62,,60,61,63',
'24,25,67,68,,,,,,23,29,28,91,90,92,93,,,18,,,,,,7,42,,9,95,94,85,51',
'87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,37,,,31,,,53,,55',
',33,,,,41,,,,,,,,19,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64',
'65,66,,52,38,84,,58,59,,,,62,,60,61,63,259,260,67,68,,,,,,258,294,298',
'91,90,92,93,,,220,,,,,,,295,,,95,94,85,51,87,86,88,,89,96,97,,82,83',
',792,,347,345,344,340,346,,,,,,,,,337,,,,,,,585,,,215,,,53,,55,,,,,',
',,349,,,,,,,352,351,355,354,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54',
'64,65,66,8,52,299,84,,58,59,,,,62,338,60,61,63,24,25,67,68,,,,,,23,29',
'28,91,90,92,93,,,18,,,,,,7,42,,9,95,94,85,51,87,86,88,,89,96,97,,82',
'83,,39,40,,,,,,,,,,,,,,,,,,,,,37,,,31,,,53,,55,,33,,,,41,,,,,,,,19,',
',,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,8,52,38,84,,58',
'59,,,,62,,60,61,63,24,25,67,68,,,,,,23,29,28,91,90,92,93,,,18,,,,,,7',
'42,,9,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,',
',,,37,,,31,,,53,,55,,33,,,,41,,,,,,,,19,,,,,80,74,76,77,78,79,,,,75',
'81,,,,,,,57,,,54,64,65,66,8,52,38,84,,58,59,,,,62,,60,61,63,24,25,67',
'68,,,,,,23,29,28,91,90,92,93,,,18,,,,,,7,42,,9,95,94,85,51,87,86,88',
',89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,37,,,31,,,53,,55,,33,,,',
'41,,,,,,,,19,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,',
'52,38,84,,58,59,,,,62,,60,61,63,259,260,67,68,,,,,,258,29,28,91,90,92',
'93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,263,89,96,97,,82,83,,39,40',
',,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,257,,,,41,,,,,,,,219,,,,,80',
'261,76,77,78,79,,,,75,81,,,,,,,57,,,54,,264,,,,38,84,64,65,66,,52,,',
',58,59,,,,62,,60,61,63,259,260,67,68,,,,,,258,29,28,91,90,92,93,,,220',
',,,,,,42,,,95,94,85,51,87,86,88,263,89,96,97,,82,83,,39,40,,,,,,,,,',
',,,,,,,,,,,211,,,215,,,53,,55,,257,,,,41,,,,,,,,219,,,,,80,261,76,77',
'78,79,,,,75,81,,,,,,,57,,,54,,264,,,,38,84,64,65,66,,52,,,,58,59,,,',
'62,,60,61,63,259,260,67,68,,,,,,258,29,28,91,90,92,93,,,220,,,,,,,42',
',,95,94,85,51,87,86,88,263,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,',
',,211,,,215,,,53,,55,,257,,,,41,,,,,,,,219,,,,,80,261,76,77,78,79,,',
',75,81,,,,,,,57,,,54,,264,,,,38,84,64,65,66,,52,,,,58,59,,,,62,,60,61',
'63,24,25,67,68,,,,,,23,29,28,91,90,92,93,,,18,,,,,,,42,,,95,94,85,51',
'87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53',
',55,,,,,,41,,,,,,,,19,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64',
'65,66,,52,38,84,,58,59,,,,62,,60,61,63,24,25,67,68,,,,,,23,29,28,91',
'90,92,93,,,18,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40',
',,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,,,,,,,,19,,,,,80,74,76',
'77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60',
'61,63,259,260,67,68,,,,,,258,294,298,91,90,92,93,,,220,,,,,,,42,,,95',
'94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,',
'215,,,53,,55,,802,,,,41,,,,,,,,219,,,,,80,74,76,77,78,79,,,,75,81,,',
',,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,24,25,67,68,,',
',,,23,29,28,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,,89,96',
'97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,,,,',
',,,219,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38',
'84,,58,59,,,,62,,60,61,63,24,25,67,68,,,,,,23,29,28,91,90,92,93,,,220',
',,,,,,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,',
',,,,,,,,211,,,215,,,53,,55,,,,,,41,,,,,,,,219,,,,,80,74,76,77,78,79',
',,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,24',
'25,67,68,,,,,,23,29,28,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86',
'88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,',
',,,41,,,,,,,,219,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65',
'66,,52,38,84,,58,59,,,,62,,60,61,63,259,260,67,68,,,,,,258,294,298,91',
'90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39',
'40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,,,,,,,,219,,,,,80',
'74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62',
',60,61,63,24,25,67,68,,,,,,23,29,28,91,90,92,93,,,220,,,,,,,42,,,95',
'94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,',
'215,,,53,,55,,,,,,41,,,,,,,,219,,,,,80,74,76,77,78,79,,,,75,81,,,,,',
',57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,259,260,67,68,,,',
',,258,294,298,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,,89',
'96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,',
',,,,,,219,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,8,52',
'38,84,,58,59,,,,62,,60,61,63,24,25,67,68,,,,,,23,29,28,91,90,92,93,',
',18,,,,,,7,42,,9,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,',
',,,,,,,,,,,,,,37,,,31,,,53,,55,,33,,,,41,,,,,,,,19,,,,,80,74,76,77,78',
'79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63',
'259,260,67,68,,,,,,258,294,298,91,90,92,93,,,220,,,,,,,42,,,95,94,85',
'51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,',
'53,,55,,,,,,41,,,,,,,,219,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,',
'54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,259,260,67,68,,,,,,258',
'294,298,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97',
',82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,,,,,,,',
'219,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,8,52,38,84',
',58,59,,,,62,,60,61,63,24,25,67,68,,,,,,23,29,28,91,90,92,93,,,18,,',
',,,7,42,,9,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,',
',,,,,,,,37,,,31,,,53,,55,,33,,,,41,,,,,,,,19,,,,,80,74,76,77,78,79,',
',,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,259',
'260,67,68,,,,,,258,294,298,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51',
'87,86,88,263,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,',
'53,,55,,682,,255,,41,,,,,,,,219,,,,,80,261,76,77,78,79,,,,75,81,,,,',
',,57,,,54,,264,,,,38,84,64,65,66,,52,,,,58,59,,,,62,,60,61,63,259,260',
'67,68,,,,,,258,294,298,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86',
'88,263,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55',
',,,255,,41,,,,,,,,219,,,,,80,261,76,77,78,79,,,,75,81,,,,,,,57,,,54',
',264,,,,38,84,64,65,66,8,52,,,,58,59,,,,62,,60,61,63,24,25,67,68,,,',
',,23,29,28,91,90,92,93,,,18,,,,,,7,42,,9,95,94,85,51,87,86,88,,89,96',
'97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,37,,,31,,,53,,55,,33,,,,41,,,,',
',,,19,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,8,52,38',
'84,,58,59,,,,62,,60,61,63,24,25,67,68,,,,,,23,29,28,91,90,92,93,,,18',
',,,,,7,42,,9,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,',
',,,,,,,,,,37,,,31,,,53,,55,,33,,,,41,,,,,,,,19,,,,,80,74,76,77,78,79',
',,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,259',
'260,67,68,,,,,,258,294,298,91,90,92,93,,,220,,,,,,,295,,,95,94,85,51',
'87,86,88,,89,96,97,,82,83,,,,,,,,,,,,,,,,,,,,,,,,292,,,289,,,53,,55',
',,,,,,,,,,,,,,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66',
',52,299,84,,58,59,,,,62,,60,61,63,259,260,67,68,,,,,,258,294,298,91',
'90,92,93,,,220,,,,,,,295,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,,',
',,,,,,,,,,,,,,,,,,,,292,,,289,,,53,,55,,,,,,,,,,,,,,,,,,,80,74,76,77',
'78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,299,84,,58,59,,,,62,,60,61',
'63,259,260,67,68,,,,,,258,294,298,91,90,92,93,,,220,,,,,,,42,,,95,94',
'85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215',
',,53,,55,,431,,,,41,,,,,,,,219,,,,,80,74,76,77,78,79,,,,75,81,,,,,,',
'57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,259,260,67,68,,,,',
',258,294,298,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,,89,96',
'97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,257,,,,41,',
',,,,,,219,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52',
'38,84,,58,59,,,,62,,60,61,63,24,25,67,68,,,,,,23,29,28,91,90,92,93,',
',18,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,',
',,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,,,,,,,,19,,,,,80,74,76,77,78',
'79,,,,75,81,,,,,,,57,,,54,64,65,66,8,52,38,84,,58,59,,,,62,,60,61,63',
'24,25,67,68,,,,,,23,29,28,91,90,92,93,,,18,,,,,,7,42,,9,95,94,85,51',
'87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,37,,,31,,,53,,55',
',33,,,,41,,,,,,,,19,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64',
'65,66,8,52,38,84,,58,59,,,,62,,60,61,63,24,25,67,68,,,,,,23,29,28,91',
'90,92,93,,,18,,,,,,7,42,,9,95,94,85,51,87,86,88,,89,96,97,,82,83,,39',
'40,,,,,,,,,,,,,,,,,,,,,37,,,31,,,53,,55,,33,,,,41,,,,,,,,19,,,,,80,74',
'76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,8,52,38,84,,58,59,,,,62',
',60,61,63,24,25,67,68,,,,,,23,29,28,91,90,92,93,,,18,,,,,,7,42,,9,95',
'94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,37,,,31',
',,53,,55,,33,,,,41,,,,,,,,19,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57',
',,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,259,260,67,68,,,,,,258',
'294,298,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97',
',82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,,,,,,,',
'219,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,8,52,38,84',
',58,59,,,,62,,60,61,63,24,25,67,68,,,,,,23,29,28,91,90,92,93,,,18,,',
',,,7,42,,9,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,',
',,,,,,,,37,,,31,,,53,,55,,33,,,,41,,,,,,,,19,,,,,80,74,76,77,78,79,',
',,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,259',
'260,67,68,,,,,,258,294,298,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51',
'87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53',
',55,,,,,,41,,,,,,,,219,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54',
'64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,24,25,67,68,,,,,,23,29,28',
'91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,',
'39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,,,,,,,,219,,,,',
'80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59,',
',,62,,60,61,63,24,25,67,68,,,,,,23,29,28,91,90,92,93,,,220,,,,,,,42',
',,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211',
',,215,,,53,,55,,,,,,41,,,,,,,,219,,,,,80,74,76,77,78,79,,,,75,81,,,',
',,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,259,260,67,68,',
',,,,258,294,298,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,,89',
'96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,',
',,,,,,219,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52',
'38,84,,58,59,,,,62,,60,61,63,259,260,67,68,,,,,,258,294,298,91,90,92',
'93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,',
',,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,,,,,,,,219,,,,,80,74,76',
'77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60',
'61,63,259,260,67,68,,,,,,258,294,298,91,90,92,93,,,220,,,,,,,42,,,95',
'94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,',
'215,,,53,,55,,,,,,41,,,,,,,,219,,,,,80,74,76,77,78,79,,,,75,81,,,,,',
',57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,259,260,67,68,,,',
',,258,294,298,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,,89',
'96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,257,,,,41',
',,,,,,,219,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,8,52',
'38,84,,58,59,,,,62,,60,61,63,24,25,67,68,,,,,,23,29,28,91,90,92,93,',
',18,,,,,,7,42,,9,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,',
',,,,,,,,,,,,,,37,,,31,,,53,,55,,33,,,,41,,,,,,,,19,,,,,80,74,76,77,78',
'79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63',
'24,25,67,68,,,,,,23,29,28,91,90,92,93,,,18,,,,,,,42,,,95,94,85,51,87',
'86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55',
',,,,,41,,,,,,,,19,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65',
'66,8,52,38,84,,58,59,,,,62,,60,61,63,24,25,67,68,,,,,,23,29,28,91,90',
'92,93,,,18,,,,,,7,42,,9,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40',
',,,,,,,,,,,,,,,,,,,,37,,,31,,,53,,55,,33,,,,41,,,,,,,,19,,,,,80,74,76',
'77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,8,52,38,84,,58,59,,,,62,,60',
'61,63,24,25,67,68,,,,,,23,29,28,91,90,92,93,,,18,,,,,,7,42,,9,95,94',
'85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,37,,,31,',
',53,,55,,33,,,,41,,,,,,,,19,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57',
',,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,259,260,67,68,,,,,,258',
'294,298,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97',
',82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,,,,,,,',
'219,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84',
',58,59,,,,62,,60,61,63,259,260,67,68,,,,,,258,294,298,91,90,92,93,,',
'220,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,',
',,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,,,,,,,,219,,,,,80,74,76,77,78',
'79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63',
'259,260,67,68,,,,,,258,294,298,91,90,92,93,,,220,,,,,,,42,,,95,94,85',
'51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,',
'53,,55,,,,,,41,,,,,,,,219,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,',
'54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,259,260,67,68,,,,,,258',
'294,298,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97',
',82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,,,,,,,',
'219,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84',
',58,59,,,,62,,60,61,63,259,260,67,68,,,,,,258,294,298,91,90,92,93,,',
'220,,,,,,,42,,,95,94,85,51,87,86,88,263,89,96,97,,82,83,,39,40,,,,,',
',,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,255,,41,,,,,,,,219,,,,,80,261,76',
'77,78,79,,,,75,81,,,,,,,57,,,54,,264,,,,38,84,64,65,66,8,52,,,,58,59',
',,,62,,60,61,63,24,25,67,68,,,,,,23,29,28,91,90,92,93,,,18,,,,,,7,42',
',9,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,',
'37,,,31,,,53,,55,,33,,,,41,,,,,,,,19,,,,,80,74,76,77,78,79,,,,75,81',
',,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,259,260,67,68',
',,,,,258,294,298,91,90,92,93,,,220,,,,,,,295,,,95,94,85,51,87,86,88',
',89,96,97,,82,83,,,,,,,,,,,,,,,,,,,,,,,,962,,,215,,,53,,55,,,,,,,,,',
',,,,,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,299,84',
',58,59,,,,62,,60,61,63,259,260,67,68,,,,,,258,294,298,91,90,92,93,,',
'220,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,',
',,,,,,,,,,,,211,,,215,,,53,,55,,682,,,,41,,,,,,,,219,,,,,80,74,76,77',
'78,79,,,,75,81,,,,,,,57,,,54,64,65,66,8,52,38,84,,58,59,,,,62,,60,61',
'63,24,25,67,68,,,,,,23,29,28,91,90,92,93,,,18,,,,,,7,42,,9,95,94,85',
'51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,37,,,31,,,53',
',55,,33,,,,41,,,,,,,,19,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54',
'64,65,66,8,52,38,84,,58,59,,,,62,,60,61,63,24,25,67,68,,,,,,23,29,28',
'91,90,92,93,,,18,,,,,,7,42,,9,95,94,85,51,87,86,88,,89,96,97,,82,83',
',39,40,,,,,,,,,,,,,,,,,,,,,37,,,31,,,53,,55,,33,,,,41,,,,,,,,19,,,,',
'80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59,',
',,62,,60,61,63,259,260,67,68,,,,,,258,294,298,91,90,92,93,,,220,,,,',
',,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,',
',,,,211,,,215,,,53,,55,,682,,255,,41,,,,,,,,219,,,,,80,74,76,77,78,79',
',,,75,81,,,,,,,57,,,54,64,65,66,8,52,38,84,,58,59,,,,62,,60,61,63,24',
'25,67,68,,,,,,23,29,28,91,90,92,93,,,18,,,,,,7,42,,9,95,94,85,51,87',
'86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,37,,,31,,,53,,55,',
'33,,,,41,,,,,,,,19,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65',
'66,8,52,38,84,,58,59,,,,62,,60,61,63,24,25,67,68,,,,,,23,29,28,91,90',
'92,93,,,18,,,,,,7,42,,9,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40',
',,,,,,,,,,,,,,,,,,,,37,,,31,,,53,,55,,33,,,,41,,,,,,,,19,,,,,80,74,76',
'77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,8,52,38,84,,58,59,,,,62,,60',
'61,63,24,25,67,68,,,,,,23,29,28,91,90,92,93,,,18,,,,,,7,42,,9,95,94',
'85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,37,,,31,',
',53,,55,,33,,,,41,,,,,,,,19,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57',
',,54,64,65,66,8,52,38,84,,58,59,,,,62,,60,61,63,24,25,67,68,,,,,,23',
'29,28,91,90,92,93,,,18,,,,,,7,42,,9,95,94,85,51,87,86,88,,89,96,97,',
'82,83,,39,40,,,,,,,,,,,,,,,,,,,,,37,,,31,,,53,,55,,33,,,,41,,,,,,,,19',
',,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58',
'59,,,,62,,60,61,63,259,260,67,68,,,,,,258,29,28,91,90,92,93,,,220,,',
',,,,42,,,95,94,85,51,87,86,88,263,89,96,97,,82,83,,39,40,,,,,,,,,,,',
',,,,,,,,,211,,,215,,,53,,55,,257,,,,41,,,,,,,,219,,,,-564,80,261,76',
'77,78,79,-564,-564,-564,75,81,,-564,-564,,-564,,57,,,54,,264,,-564,',
'38,84,,,,,,,,-564,-564,,-564,-564,-564,-564,-564,,,,,,,,,,,,,,,,,,,',
',,-564,-564,-564,-564,-564,-564,-564,-564,-564,-564,-564,-564,-564,-564',
'-564,,,-564,-564,-564,,658,,,,-564,,,,,,-564,,-564,,-564,-564,-564,-564',
'-564,-564,-564,,-564,-564,-564,,,,,,,,,,,,,-564,-564,,-90,,-564,,-289',
'-564,,-564,,,-99,-289,-289,-289,,,,-289,-289,,-289,,,,,,,,,,,,,,,,,',
',,-289,-289,,-289,-289,-289,-289,-289,,,,,,,,,,,,,,,,,,,,,,-289,-289',
'-289,-289,-289,-289,-289,-289,-289,-289,-289,-289,-289,-289,-289,,,-289',
'-289,-289,,661,,,,-289,,,,,,-289,,-289,,-289,-289,-289,-289,-289,-289',
'-289,,-289,,-289,,,,,,,,,,,,,-289,-289,,-92,,-289,,-564,-289,,-289,',
',-101,-564,-564,-564,,,-564,-564,-564,,-564,,,,,,,,,-564,-564,-564,',
',,,,,,,-564,-564,,-564,-564,-564,-564,-564,,,,,,,,,,,,,,,,,,,,,,-564',
'-564,-564,-564,-564,-564,-564,-564,-564,-564,-564,-564,-564,-564,-564',
',,-564,-564,-564,,818,-564,,,-564,,-564,,-564,,-564,,-564,,-564,-564',
'-564,-564,-564,-564,-564,,-564,-564,-564,,,,,,,,,,,,,-564,-564,-564',
'-564,,-564,,-289,-564,,-564,,,-99,-289,-289,-289,,,-289,-289,-289,,-289',
',,,,,,,,,-289,-289,,,,,,,,,-289,-289,,-289,-289,-289,-289,-289,,,,,',
',,,,,,,,,,,,,,,,-289,-289,-289,-289,-289,-289,-289,-289,-289,-289,-289',
'-289,-289,-289,-289,,,-289,-289,-289,,661,-289,,,-289,,-289,,-289,,-289',
',-289,,-289,-289,-289,-289,-289,-289,-289,,-289,,-289,,,,,,,,,,,,,-289',
'-289,-289,-289,,-289,,-397,-289,,-289,,,-101,-397,-397,-397,,,-397,-397',
'-397,,-397,,,,,,,,,-397,-397,-397,,,,,,,,,-397,-397,,-397,-397,-397',
'-397,-397,,,,,,,,,,,,,,,,,,,,,,-397,-397,-397,-397,-397,-397,-397,-397',
'-397,-397,-397,-397,-397,-397,-397,,,-397,-397,-397,,,-397,,271,-397',
',-397,,-397,,-397,,-397,,-397,-397,-397,-397,-397,-397,-397,,-397,-397',
'-397,,,,,,,,,,,,,-397,-397,-397,-397,-298,-397,,,-397,,-397,-298,-298',
'-298,,,-298,-298,-298,,-298,,,,,,,,,,-298,-298,,,,,,,,,-298,-298,,-298',
'-298,-298,-298,-298,,,,,,,,,,,,,,,,,,,,,,-298,-298,-298,-298,-298,-298',
'-298,-298,-298,-298,-298,-298,-298,-298,-298,,,-298,-298,-298,,,-298',
',280,-298,,-298,,-298,,-298,,-298,,-298,-298,-298,-298,-298,-298,-298',
',-298,,-298,,,,,,,,,,,,,-298,-298,-298,-298,-284,-298,,,-298,,-298,-284',
'-284,-284,,,-284,-284,-284,,-284,,,,,,,,,,-284,-284,-284,,,,,,,,-284',
'-284,,-284,-284,-284,-284,-284,,,,,,,,,,,,,,,,,,,,,,-284,-284,-284,-284',
'-284,-284,-284,-284,-284,-284,-284,-284,-284,-284,-284,,,-284,-284,-284',
',,-284,,,-284,,-284,,-284,,-284,,-284,,-284,-284,-284,-284,-284,-284',
'-284,,-284,,-284,,,,,,,,,,,,,-284,-284,-284,-284,-580,-284,,-284,-284',
',-284,-580,-580,-580,,,-580,-580,-580,,-580,,,,,,,,,-580,-580,-580,',
',,,,,,,-580,-580,,-580,-580,-580,-580,-580,,,,,,,,,,,,,,,,,,,,,,-580',
'-580,-580,-580,-580,-580,-580,-580,-580,-580,-580,-580,-580,-580,-580',
',,-580,-580,-580,,,-580,,271,-580,,-580,,-580,,-580,,-580,,-580,-580',
'-580,-580,-580,-580,-580,,-580,-580,-580,,,,,,,,,,,,,-580,-580,-580',
'-580,-580,-580,,,-580,,-580,-580,-580,-580,,,-580,-580,-580,,-580,,',
',,,,,,-580,-580,-580,,,,,,,,,-580,-580,,-580,-580,-580,-580,-580,,,',
',,,,,,,,,,,,,,,,,,-580,-580,-580,-580,-580,-580,-580,-580,-580,-580',
'-580,-580,-580,-580,-580,,,-580,-580,-580,,,-580,,271,-580,,-580,,-580',
',-580,,-580,,-580,-580,-580,-580,-580,-580,-580,,-580,-580,-580,,,,',
',,,,,,,,-580,-580,-580,-580,-580,-580,,,-580,,-580,-580,-580,-580,,',
'-580,-580,-580,,-580,,,,,,,,,,-580,,,,,,,,,,-580,-580,,-580,-580,-580',
'-580,-580,,,,,,,,,,,,-580,,,,,,,-580,-580,-580,,,-580,-580,-580,,-580',
',,,,-580,-580,,,,-580,,,-580,,,,,271,-580,-580,-580,,-580,-580,-580',
'-580,-580,,,,,,,,,,,,-580,,,,,,,,,,,,,-580,,-580,,,-580,,,-580,-580',
',-580,,,,,-580,,-580,-580,-580,271,-580,-580,-580,-580,,-580,,,,,,,',
',,-580,,,,,-580,,,,,-580,-580,,-580,-580,-580,-580,-580,-580,,-580,',
',-580,443,447,,,445,,,,,,,,,143,144,140,122,123,124,131,128,130,,,125',
'126,-580,-580,,,145,146,132,133,-580,,,,,271,-580,,,,,137,136,,121,142',
'139,138,134,135,129,127,119,141,120,,-580,147,,,,,,,,,,,,-580,,-580',
',,-580,157,168,158,181,154,174,164,163,189,192,179,162,161,156,182,190',
'191,166,155,169,173,175,167,160,,,,176,183,178,177,170,180,165,153,172',
'171,184,185,186,187,188,152,159,150,151,148,149,112,114,111,,113,,,',
',,,,,143,144,140,122,123,124,131,128,130,,,125,126,,,,,145,146,132,133',
',,,,,,,,,,,137,136,,121,142,139,138,134,135,129,127,119,141,120,,,147',
'193,,,,,,,,,,81,157,168,158,181,154,174,164,163,189,192,179,162,161',
'156,182,190,191,166,155,169,173,175,167,160,,,,176,183,178,177,170,180',
'165,153,172,171,184,185,186,187,188,152,159,150,151,148,149,112,114',
',,113,,,,,,,,,143,144,140,122,123,124,131,128,130,,,125,126,,,,,145',
'146,132,133,,,,,,,,,,,,137,136,,121,142,139,138,134,135,129,127,119',
'141,120,,,147,193,,,,,,,,,,81,157,168,158,181,154,174,164,163,189,192',
'179,162,161,156,182,190,191,166,155,169,173,175,167,160,,,,176,183,178',
'177,170,180,165,153,172,171,184,185,186,187,188,152,159,150,151,148',
'149,112,114,,,113,,,,,,,,,143,144,140,122,123,124,131,128,130,,,125',
'126,,,,,145,146,132,133,,,,,,,,,,,,137,136,,121,142,139,138,134,135',
'129,127,119,141,120,,,147,193,,,,,,,,,,81,157,168,158,181,154,174,164',
'163,189,192,179,162,161,156,182,190,191,166,155,169,173,175,167,160',
',,,176,183,178,177,170,180,165,153,172,171,184,185,186,187,188,152,159',
'150,151,148,149,112,114,,,113,,,,,,,,,143,144,140,122,123,124,131,128',
'130,,,125,126,,,,,145,146,132,133,,,,,,,,,,,,137,136,,121,142,139,138',
'134,135,129,127,119,141,120,,,147,193,,,,,,,,,,81,157,168,158,181,154',
'174,164,163,189,192,179,162,161,156,182,190,191,166,155,169,173,175',
'167,160,,,,176,183,178,387,386,388,385,153,172,171,184,185,186,187,188',
'152,159,150,151,383,384,381,114,87,86,382,,89,,,,,,,143,144,140,122',
'123,124,131,128,130,,,125,126,,,,,145,146,132,133,,,,,,392,,,,,,137',
'136,,121,142,139,138,134,135,129,127,119,141,120,,,147,157,168,158,181',
'154,174,164,163,189,192,179,162,161,156,182,190,191,166,155,169,173',
'175,167,160,,,,176,183,178,177,170,180,165,153,172,171,184,185,186,187',
'188,152,159,150,151,148,149,112,114,409,408,113,,410,,,,,,,143,144,140',
'122,123,124,131,128,130,,,125,126,,,,,145,146,132,133,,,,,,,,,,,,137',
'136,,121,142,139,138,134,135,129,127,119,141,120,,,147,157,168,158,181',
'154,174,164,163,189,192,179,162,161,156,182,190,191,166,155,169,173',
'175,167,160,,,,176,183,178,177,170,180,165,153,172,171,184,185,186,187',
'188,152,159,150,151,148,149,112,114,409,408,113,,410,,,,,,,143,144,140',
'122,123,124,131,128,130,,,125,126,,,,,145,146,132,133,,,,,,,,,,,,137',
'136,,121,142,139,138,134,135,129,127,119,141,120,,,147,157,168,158,181',
'154,174,164,163,189,192,179,162,161,156,182,190,191,166,155,169,173',
'175,167,160,,,,176,183,178,177,170,180,165,153,172,171,184,185,186,187',
'188,152,159,150,151,148,149,112,114,,,113,,,,,,,,,143,144,140,122,123',
'124,131,128,130,,,125,126,,,,,145,146,132,133,,,,,,,,,,,,137,136,,121',
'142,139,138,134,135,129,127,119,141,120,437,441,147,,438,,,,,,,,,143',
'144,140,122,123,124,131,128,130,,,125,126,,,,,145,146,132,133,,,,,,271',
',,,,,137,136,,121,142,139,138,134,135,129,127,119,141,120,450,441,147',
',451,,,,,,,,,143,144,140,122,123,124,131,128,130,,,125,126,,,,,145,146',
'132,133,,,,,,,,,,,,137,136,,121,142,139,138,134,135,129,127,119,141',
'120,450,441,147,,451,,,,,,,,,143,144,140,122,123,124,131,128,130,,,125',
'126,,,,,145,146,132,133,,,,,,,,,,,,137,136,,121,142,139,138,134,135',
'129,127,119,141,120,450,441,147,,451,,,,,,,,,143,144,140,122,123,124',
'131,128,130,,,125,126,,,,,145,146,132,133,,,,,,,,,,,,137,136,,121,142',
'139,138,134,135,129,127,119,141,120,450,441,147,,451,,,,,,,,,143,144',
'140,122,123,124,131,128,130,,,125,126,,,,,145,146,132,133,,,,,,,,,,',
',137,136,,121,142,139,138,134,135,129,127,119,141,120,666,441,147,,667',
',,,,,,,,143,144,140,122,123,124,131,128,130,,,125,126,,,,,145,146,132',
'133,,,,,,271,,,,,,137,136,,121,142,139,138,134,135,129,127,119,141,120',
'668,447,147,,669,,,,,,,,,143,144,140,122,123,124,131,128,130,,,125,126',
',,,,145,146,132,133,,,,,,,,,,,,137,136,,121,142,139,138,134,135,129',
'127,119,141,120,711,441,147,,712,,,,,,,,,143,144,140,122,123,124,131',
'128,130,,,125,126,,,,,145,146,132,133,,,,,,271,,,,,,137,136,,121,142',
'139,138,134,135,129,127,119,141,120,714,447,147,,715,,,,,,,,,143,144',
'140,122,123,124,131,128,130,,,125,126,,,,,145,146,132,133,,,,,,,,,,',
',137,136,,121,142,139,138,134,135,129,127,119,141,120,450,441,147,,451',
',,,,,,,,143,144,140,122,123,124,131,128,130,,,125,126,,,,,145,146,132',
'133,,,,,,,,,,,,137,136,,121,142,139,138,134,135,129,127,119,141,120',
'666,441,147,,667,,,,,,,,,143,144,140,122,123,124,131,128,130,,,125,126',
',,,,145,146,132,133,,,,,,271,,,,,,137,136,,121,142,139,138,134,135,129',
'127,119,141,120,668,447,147,,669,,,,,,,,,143,144,140,122,123,124,131',
'128,130,,,125,126,,,,,145,146,132,133,,,,,,,,,,,,137,136,,121,142,139',
'138,134,135,129,127,119,141,120,765,441,147,,766,,,,,,,,,143,144,140',
'122,123,124,131,128,130,,,125,126,,,,,145,146,132,133,,,,,,271,,,,,',
'137,136,,121,142,139,138,134,135,129,127,119,141,120,767,447,147,,768',
',,,,,,,,143,144,140,122,123,124,131,128,130,,,125,126,,,,,145,146,132',
'133,,,,,,,,,,,,137,136,,121,142,139,138,134,135,129,127,119,141,120',
'773,447,147,,771,,,,,,,,,143,144,140,122,123,124,131,128,130,,,125,126',
',,,,145,146,132,133,,,,,,,,,,,,137,136,,121,142,139,138,134,135,129',
'127,119,141,120,450,441,147,,451,,,,,,,,,143,144,140,122,123,124,131',
'128,130,,,125,126,,,,,145,146,132,133,,,,,,271,,,,,,137,136,,121,142',
'139,138,134,135,129,127,119,141,120,773,447,147,,860,,,,,,,,,143,144',
'140,122,123,124,131,128,130,,,125,126,,,,,145,146,132,133,,,,,,,,,,',
',137,136,,121,142,139,138,134,135,129,127,119,141,120,1007,441,147,',
'1008,,,,,,,,,143,144,140,122,123,124,131,128,130,,,125,126,,,,,145,146',
'132,133,,,,,,271,,,,,,137,136,,121,142,139,138,134,135,129,127,119,141',
'120,1009,447,147,,1010,,,,,,,,,143,144,140,122,123,124,131,128,130,',
',125,126,,,,,145,146,132,133,,,,,,,,,,,,137,136,,121,142,139,138,134',
'135,129,127,119,141,120,,,147' ]
        racc_action_table = arr = ::Array.new(26038, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'0,0,0,0,0,358,56,324,0,0,210,27,359,0,296,0,0,0,0,0,0,0,365,212,368',
'1,403,0,0,0,0,0,0,0,316,466,0,316,6,498,610,290,0,0,0,0,0,0,0,0,0,0',
'0,765,0,0,0,872,0,0,210,0,0,293,766,706,512,313,313,377,627,627,498',
'212,873,27,317,3,296,317,470,470,3,0,922,466,0,403,931,0,56,0,960,0',
'9,27,963,0,296,512,992,706,724,724,767,0,11,290,1007,324,0,0,0,0,0,0',
'358,12,358,0,0,358,1008,359,365,359,368,0,359,293,0,18,18,18,470,18',
'0,0,15,18,18,1020,610,290,18,768,18,18,18,18,18,18,18,290,313,765,724',
'627,18,18,18,18,18,18,18,293,766,18,872,767,872,872,377,872,18,293,873',
'18,18,18,18,18,18,18,651,18,18,18,1009,18,18,377,18,18,540,922,377,922',
'21,931,922,931,35,960,931,960,767,963,960,963,768,992,963,992,18,37',
'992,18,18,1007,18,1007,18,1010,1007,381,506,42,18,600,601,711,381,1008',
'651,1008,18,78,1008,522,523,18,18,18,18,18,18,768,778,778,18,18,1020',
'712,1020,875,836,1020,18,79,540,18,19,19,19,1009,19,18,18,281,19,19',
'522,523,281,19,714,19,19,19,19,19,19,19,715,506,506,506,666,19,19,19',
'19,19,19,19,540,711,19,1009,1010,1009,506,638,1009,19,540,72,19,19,19',
'19,19,19,19,72,19,19,19,712,19,19,836,19,19,474,600,601,600,601,14,600',
'601,711,1010,778,1010,667,666,1010,778,714,714,711,394,19,16,16,19,715',
'715,19,875,19,875,712,474,875,836,19,474,474,638,638,363,712,363,19',
'836,819,14,638,19,19,19,19,19,19,714,98,14,19,19,26,26,890,715,667,714',
'19,890,26,19,23,23,23,715,23,19,19,890,23,23,394,394,394,23,820,23,23',
'23,23,23,23,23,320,372,575,320,819,23,23,23,23,23,23,23,575,194,23,890',
'890,890,890,396,475,23,36,211,23,23,23,23,23,23,23,23,23,23,23,400,23',
'23,362,23,23,405,820,362,575,575,974,213,974,13,13,475,372,372,890,475',
'475,13,38,38,372,23,36,398,23,372,398,23,214,23,382,23,36,23,220,23',
'252,382,396,396,396,575,620,23,253,372,256,620,23,23,23,23,23,23,400',
'400,400,23,23,270,405,405,405,283,13,23,13,372,23,372,23,885,383,285',
'23,23,24,24,24,383,24,885,398,398,24,24,286,729,287,24,729,24,24,24',
'24,24,24,24,5,5,5,5,5,24,24,24,24,24,24,24,111,303,24,885,885,111,111',
'458,437,24,84,84,24,24,24,24,24,24,24,24,24,24,24,292,24,24,294,24,24',
'458,458,458,458,458,458,458,458,458,458,458,885,303,458,458,438,776',
'458,458,437,24,776,303,24,299,299,24,295,24,437,24,458,24,458,24,458',
'458,458,458,458,458,458,24,458,357,357,384,24,24,24,24,24,24,384,298',
'438,24,24,300,458,650,458,43,43,24,438,304,24,305,24,43,385,308,24,24',
'25,25,25,385,25,386,782,387,25,25,315,782,386,25,387,25,25,25,25,25',
'25,25,578,578,318,650,319,25,25,25,25,25,25,25,321,650,25,329,388,752',
'752,672,43,25,43,388,25,25,25,25,25,25,25,25,25,25,25,330,25,25,331',
'25,25,672,672,672,672,672,672,672,672,672,672,672,209,209,672,672,390',
'332,672,672,209,25,334,390,25,994,994,25,335,25,339,25,672,25,672,25',
'672,672,672,672,672,672,672,25,672,353,356,364,25,25,25,25,25,25,367',
'369,373,25,25,399,672,402,421,427,429,25,432,209,25,209,25,435,436,444',
'25,25,31,31,31,31,31,455,796,796,31,31,796,796,796,31,476,31,31,31,31',
'31,31,31,282,282,282,282,282,31,31,31,31,31,31,31,477,592,31,592,592',
'592,478,592,31,31,479,31,31,31,31,31,31,31,31,514,31,31,31,517,31,31',
'518,31,31,524,349,528,349,349,349,581,349,581,581,581,581,581,863,529',
'863,863,863,532,863,31,581,534,31,493,541,31,545,31,554,31,555,556,569',
'31,585,587,291,291,349,591,596,31,602,581,291,349,31,31,31,31,31,31',
'581,581,493,31,31,603,493,493,493,493,642,31,648,654,31,32,32,32,659',
'32,31,31,662,32,32,670,671,679,32,681,32,32,32,32,32,32,32,581,694,291',
'698,291,32,32,32,32,32,32,32,701,708,32,306,306,710,713,716,717,32,718',
'306,32,32,32,32,32,32,32,719,32,32,32,722,32,32,723,57,725,57,57,57',
'57,57,731,366,366,705,705,705,705,705,57,366,589,732,589,589,589,32',
'589,736,32,737,739,32,742,32,306,32,306,743,745,749,754,57,57,760,762',
'764,769,773,57,57,57,57,32,32,32,32,32,32,589,774,785,32,32,786,788',
'589,366,789,366,32,790,792,32,33,33,33,795,33,32,32,801,33,33,823,824',
'828,33,57,33,33,33,33,33,33,33,830,833,834,835,840,33,33,33,33,33,33',
'33,843,844,33,375,375,860,864,867,877,33,880,375,33,33,33,33,33,33,33',
'881,33,33,33,882,33,33,902,325,903,325,325,325,325,325,915,925,926,584',
'584,927,928,933,325,934,750,584,750,750,750,33,750,942,33,944,946,33',
'947,33,375,948,375,949,951,962,976,325,988,325,993,998,1000,1001,325',
'325,325,325,33,33,33,33,33,33,750,1002,1003,33,33,1004,1006,750,33,1021',
'584,33,584,,33,39,39,39,,39,33,33,,39,39,,,,39,325,39,39,39,39,39,39',
'39,,,,,,39,39,39,39,39,39,39,,,39,612,612,,,,,39,,612,39,39,39,39,39',
'39,39,,39,39,39,,39,39,,39,39,,,,,,,850,,850,850,850,850,850,,,,,,,',
'39,850,,39,494,,39,,39,612,,612,,,39,,,738,738,,,,39,,850,738,,39,39',
'39,39,39,39,850,850,494,39,39,,494,494,494,494,,39,,,39,40,40,40,,40',
'39,39,,40,40,,,,40,,40,40,40,40,40,40,40,850,,738,,738,40,40,40,40,40',
'40,40,,,40,874,874,,,,,40,,874,40,40,40,40,40,40,40,,40,40,40,,40,40',
',40,40,,,,,,,852,,852,852,852,852,852,,,,,,,,40,852,,40,,,40,,40,874',
',874,,,40,,,961,961,,,,40,,852,961,,40,40,40,40,40,40,852,852,,40,40',
',,,,,,40,,,40,41,41,41,,41,40,40,,41,41,,,,41,,41,41,41,41,41,41,41',
'852,,961,,961,41,41,41,41,41,41,41,,,41,,,,,,,41,,,41,41,41,41,41,41',
'41,,41,41,41,,41,41,,41,41,484,,,,,,857,,857,857,857,857,857,,,,,484',
'484,,41,857,,41,,,41,,41,,,484,,484,41,484,484,484,484,,,484,41,484',
'857,,,41,41,41,41,41,41,857,857,,41,41,,,,,,,41,,,41,53,53,53,,53,41',
'41,,53,53,,,,53,,53,53,53,53,53,53,53,857,,,,,53,53,53,53,53,53,53,',
',53,,,,,,,53,,,53,53,53,53,53,53,53,,53,53,53,,53,53,,53,53,485,,,,',
',892,,892,892,892,892,892,,,,,485,485,,53,892,,53,,,53,,53,,,485,,485',
'53,485,485,485,485,,,485,53,485,892,,,53,53,53,53,53,53,892,892,,53',
'53,,,,,,,53,,,53,54,54,54,,54,53,53,,54,54,,,,54,,54,54,54,54,54,54',
'54,892,,,,,54,54,54,54,54,54,54,,,54,,,,,,,54,,,54,54,54,54,54,54,54',
'54,54,54,54,,54,54,,54,54,697,697,697,697,697,697,697,697,697,697,697',
'771,771,697,697,,,697,697,771,54,,,54,771,,54,,54,,54,697,,697,54,697',
'697,697,697,697,697,697,54,697,,,,54,54,54,54,54,54,,,,54,54,,697,,697',
',,54,,771,54,771,54,,,,54,54,55,55,55,,55,,,,55,55,,,,55,,55,55,55,55',
'55,55,55,,,,,,55,55,55,55,55,55,55,,,55,,,,,,,55,,,55,55,55,55,55,55',
'55,55,55,55,55,,55,55,,55,55,674,674,674,674,674,674,674,674,674,674',
'674,,,674,674,,,674,674,,55,,,55,,,55,,55,,,674,,674,55,674,674,674',
'674,674,674,674,55,674,,,,55,55,55,55,55,55,,,,55,55,,674,674,,,,55',
',,55,,55,,,,55,55,58,58,58,,58,,,,58,58,,,,58,,58,58,58,58,58,58,58',
',,,,,58,58,58,58,58,58,58,,,58,,,,,,,58,,,58,58,58,58,58,58,58,,58,58',
'58,,58,58,,58,58,486,,,,,,966,,966,966,966,966,966,,,,,486,486,,58,966',
',58,,,58,,58,,,486,,486,58,486,486,486,486,,,486,58,486,966,,,58,58',
'58,58,58,58,966,966,,58,58,,,,,,,58,,,58,59,59,59,,59,58,58,,59,59,',
',,59,,59,59,59,59,59,59,59,966,,,,,59,59,59,59,59,59,59,,,59,,,,,,,59',
',,59,59,59,59,59,59,59,,59,59,59,,59,59,,59,59,487,,,,,,981,,981,981',
'981,981,981,,,,,487,487,,59,981,,59,,,59,,59,,,487,,487,59,487,487,487',
'487,,,487,59,487,981,,,59,59,59,59,59,59,981,981,,59,59,,,,,,,59,,,59',
'62,62,62,,62,59,59,,62,62,,,,62,,62,62,62,62,62,62,62,981,,,,,62,62',
'62,62,62,62,62,,,62,,,,,,,62,,,62,62,62,62,62,62,62,,62,62,62,,62,62',
',62,62,480,,,,,,983,,983,983,983,983,983,,,,,480,480,,62,983,,62,,,62',
',62,,,480,,480,62,480,480,480,480,,,,62,,983,,,62,62,62,62,62,62,983',
'983,,62,62,62,,,,,62,62,,,62,63,63,63,,63,62,62,,63,63,,,,63,,63,63',
'63,63,63,63,63,983,,,,,63,63,63,63,63,63,63,,,63,,,,,,,63,,,63,63,63',
'63,63,63,63,,63,63,63,,63,63,,571,,571,571,571,571,571,,,,,,,,,571,',
',,,,,63,,,63,482,,63,,63,,63,,,,,,571,,,,,482,482,571,571,571,571,63',
'63,63,63,63,63,,,482,63,63,,482,482,482,482,,63,,,63,64,64,64,,64,63',
'63,,64,64,,,,64,571,64,64,64,64,64,64,64,,,,,,64,64,64,64,64,64,64,',
',64,,,,,,,64,,,64,64,64,64,64,64,64,,64,64,64,481,64,64,,579,,579,579',
'579,579,579,,,,,,,481,481,579,,,,64,,,64,,,64,,481,64,481,64,481,481',
'481,481,,,,579,,,,,,,579,579,579,579,64,64,64,64,64,64,,,,64,64,,,,',
',,64,,,64,85,85,85,,85,64,64,,85,85,,,,85,579,85,85,85,85,85,85,85,',
'85,,,,85,85,85,85,85,85,85,,,85,,,,,,,85,,,85,85,85,85,85,85,85,85,85',
'85,85,,85,85,,85,85,20,20,20,20,20,20,20,20,20,20,20,,,20,20,,,20,20',
',85,,,85,85,,85,,85,,85,20,85,20,85,20,20,20,20,20,20,20,85,20,85,,',
'85,85,85,85,85,85,,,,85,85,,20,,,,,85,,,85,,85,,,,85,85,88,88,88,,88',
',,,88,88,,,,88,,88,88,88,88,88,88,88,,88,,,,88,88,88,88,88,88,88,,,88',
',,,,,,88,,,88,88,88,88,88,88,88,88,88,88,88,,88,88,,88,88,250,250,250',
'250,250,250,250,250,250,250,250,,,250,250,,,250,250,,88,,,88,88,,88',
',88,,88,250,88,250,88,250,250,250,250,250,250,250,88,250,88,,,88,88',
'88,88,88,88,,,,88,88,,250,,,,,88,,,88,,88,,,,88,88,100,100,100,100,100',
',,,100,100,,,,100,,100,100,100,100,100,100,100,,,,,,100,100,100,100',
'100,100,100,,,100,,,,,,100,100,100,100,100,100,100,100,100,100,100,',
'100,100,100,,100,100,,100,100,,,,,,,985,,985,985,985,985,985,,,,,,,',
'100,985,,100,,,100,,100,,100,,,,100,,,,,,,,100,,985,,,100,100,100,100',
'100,100,985,985,,100,100,,,,,,100,100,,,100,104,104,104,,104,100,100',
',104,104,,,,104,,104,104,104,104,104,104,104,985,,,,,104,104,104,104',
'104,104,104,,,104,,,,,,,104,,,104,104,104,104,104,104,104,,104,104,104',
',104,104,,104,104,,,,,,,1014,,1014,1014,1014,1014,1014,,,,,,,,104,1014',
',104,,,104,,104,,,,,,104,,,,,,,,104,,1014,,,104,104,104,104,104,104',
'1014,1014,,104,104,,,,,,,104,,,104,105,105,105,,105,104,104,,105,105',
',,,105,,105,105,105,105,105,105,105,1014,,,,,105,105,105,105,105,105',
'105,,,105,,,,,,,105,,,105,105,105,105,105,105,105,,105,105,105,,105',
'105,,105,105,434,434,434,434,434,434,434,434,434,434,434,,,434,434,',
',434,434,,105,,,105,,,105,,105,,,434,,434,105,434,434,434,434,434,434',
'434,105,434,,,,105,105,105,105,105,105,,,,105,105,,434,,,,,105,,,105',
'106,106,106,,106,105,105,,106,106,,,,106,,106,106,106,106,106,106,106',
',,,,,106,106,106,106,106,106,106,,,106,,,,,,,106,,,106,106,106,106,106',
'106,106,,106,106,106,,106,106,,106,106,453,453,453,453,453,453,453,453',
'453,453,453,,,453,453,,,453,453,,106,,,106,,,106,,106,,,453,,453,106',
'453,453,453,453,453,453,453,106,453,,,,106,106,106,106,106,106,,,,106',
'106,,453,,,,,106,,,106,107,107,107,,107,106,106,,107,107,,,,107,,107',
'107,107,107,107,107,107,,,,,,107,107,107,107,107,107,107,,,107,,,,,',
',107,,,107,107,107,107,107,107,107,,107,107,107,,107,107,,107,107,552',
'552,552,552,552,552,552,552,552,552,552,,,552,552,,,552,552,,107,,,107',
',,107,,107,,,552,,552,107,552,552,552,552,552,552,552,107,552,,,,107',
'107,107,107,107,107,,,,107,107,,552,,,,,107,,,107,108,108,108,108,108',
'107,107,,108,108,,,,108,,108,108,108,108,108,108,108,,,,,,108,108,108',
'108,108,108,108,,,108,,,,,,108,108,,108,108,108,108,108,108,108,108',
',108,108,108,,108,108,,108,108,721,721,721,721,721,721,721,721,721,721',
'721,,,721,721,,,721,721,,108,,,108,,,108,,108,,108,721,,721,108,721',
'721,721,721,721,721,721,108,721,,,,108,108,108,108,108,108,,,,108,108',
',721,,,,,108,,,108,109,109,109,109,109,108,108,,109,109,,,,109,,109',
'109,109,109,109,109,109,,,,,,109,109,109,109,109,109,109,,,109,,,,,',
'109,109,109,109,109,109,109,109,109,109,109,,109,109,109,,109,109,,109',
'109,806,806,806,806,806,806,806,806,806,806,806,,,806,806,,,806,806',
',109,,,109,,,109,,109,,109,806,,806,109,806,806,806,806,806,806,806',
'109,806,,,,109,109,109,109,109,109,,,,109,109,,806,,,,,109,,,109,196',
'196,196,196,196,109,109,,196,196,,,,196,,196,196,196,196,196,196,196',
',,,,,196,196,196,196,196,196,196,,,196,,,,,,196,196,,196,196,196,196',
'196,196,196,196,,196,196,196,,196,196,,196,196,808,808,808,808,808,808',
'808,808,808,808,808,,,808,808,,,808,808,,196,,,196,,,196,,196,,196,808',
',808,196,808,808,808,808,808,808,808,196,808,,,,196,196,196,196,196',
'196,,,,196,196,,808,,,,,196,,,196,197,197,197,,197,196,196,,197,197',
',,,197,,197,197,197,197,197,197,197,,,,,,197,197,197,197,197,197,197',
',,197,,,,,,,197,,,197,197,197,197,197,197,197,,197,197,197,,197,197',
',197,197,811,811,811,811,811,811,811,811,811,811,811,,,811,811,,,811',
'811,,197,,,197,,,197,,197,,197,811,,811,197,811,811,811,811,811,811',
'811,197,811,,,,197,197,197,197,197,197,,,,197,197,,811,,,,,197,,,197',
'198,198,198,,198,197,197,,198,198,,,,198,,198,198,198,198,198,198,198',
',,,,,198,198,198,198,198,198,198,,,198,,,,,,,198,,,198,198,198,198,198',
'198,198,,198,198,198,,198,198,,198,198,813,813,813,813,813,813,813,813',
'813,813,813,,,813,813,,,813,813,,198,,,198,,,198,,198,,,813,,813,198',
'813,813,813,813,813,813,813,198,813,,,,198,198,198,198,198,198,,,,198',
'198,,813,,,,,198,,,198,199,199,199,,199,198,198,,199,199,,,,199,,199',
'199,199,199,199,199,199,,,,,,199,199,199,199,199,199,199,,,199,,,,,',
',199,,,199,199,199,199,199,199,199,199,199,199,199,,199,199,,199,199',
'815,815,815,815,815,815,815,815,815,815,815,,,815,815,,,815,815,,199',
',,199,,,199,,199,,199,815,,815,199,815,815,815,815,815,815,815,199,815',
',,,199,199,199,199,199,199,,,,199,199,,815,,,,,199,,,199,,199,,,,199',
'199,200,200,200,,200,,,,200,200,,,,200,,200,200,200,200,200,200,200',
',,,,,200,200,200,200,200,200,200,,,200,,,,,,,200,,,200,200,200,200,200',
'200,200,200,200,200,200,,200,200,,200,200,905,905,905,905,905,905,905',
'905,905,905,905,,,905,905,,,905,905,,200,,,200,,,200,,200,,200,905,',
'905,200,905,905,905,905,905,905,905,200,905,,,,200,200,200,200,200,200',
',,,200,200,,905,,,,,200,,,200,,200,,,,200,200,204,204,204,,204,,,,204',
'204,,,,204,,204,204,204,204,204,204,204,,,,,,204,204,204,204,204,204',
'204,,,204,,,,,,,204,,,204,204,204,204,204,204,204,,204,204,204,,204',
'204,,204,204,907,907,907,907,907,907,907,907,907,907,907,,,907,907,',
',907,907,,204,,,204,,,204,,204,,,907,,907,204,907,907,907,907,907,907',
'907,204,907,,,,204,204,204,204,204,204,,,,204,204,,907,,,,,204,,,204',
'205,205,205,,205,204,204,,205,205,,,,205,,205,205,205,205,205,205,205',
',,,,,205,205,205,205,205,205,205,,,205,,,,,,,205,,,205,205,205,205,205',
'205,205,,205,205,205,,205,205,,205,205,955,955,955,955,955,955,955,955',
'955,955,955,,,955,955,,,955,955,,205,,,205,,,205,,205,,205,955,,955',
'205,955,955,955,955,955,955,955,205,955,,,,205,205,205,205,205,205,',
',,205,205,,955,,,,,205,,,205,206,206,206,,206,205,205,,206,206,,,,206',
',206,206,206,206,206,206,206,,,,,,206,206,206,206,206,206,206,,,206',
',,,,,,206,,,206,206,206,206,206,206,206,,206,206,206,,206,206,,206,206',
'472,472,472,472,472,472,472,472,472,472,472,,,472,472,,,472,472,,206',
',,206,,,206,,206,,,472,,472,206,472,472,472,472,472,472,472,206,472',
',,,206,206,206,206,206,206,,,,206,206,,,,,,,206,,,206,207,207,207,,207',
'206,206,,207,207,,,,207,,207,207,207,207,207,207,207,,,,,,207,207,207',
'207,207,207,207,,,207,,,,,,,207,,,207,207,207,207,207,207,207,,207,207',
'207,,207,207,,207,207,473,473,473,473,473,473,473,473,473,473,473,,',
'473,473,,,473,473,,207,,,207,,,207,,207,,,473,,473,207,473,473,473,473',
'473,473,473,207,473,,,,207,207,207,207,207,207,,,,207,207,,,,,,,207',
',,207,215,215,215,215,215,207,207,,215,215,,,,215,,215,215,215,215,215',
'215,215,,,,,,215,215,215,215,215,215,215,,,215,,,,,,215,215,,215,215',
'215,215,215,215,215,215,,215,215,215,,215,215,,215,215,483,483,483,483',
'483,483,483,,,483,483,,,,,,,483,483,,215,,,215,,,215,,215,,215,483,',
'483,215,483,483,483,483,483,483,483,215,483,,,,215,215,215,215,215,215',
',,,215,215,,,,,,,215,,,215,216,216,216,,216,215,215,,216,216,,,,216',
',216,216,216,216,216,216,216,,,,,,216,216,216,216,216,216,216,,,216',
',,,,,,216,,,216,216,216,216,216,216,216,,216,216,216,,216,216,,216,216',
'488,488,488,488,488,488,488,,,488,488,,,,,,,488,488,,216,,,216,,216',
'216,,216,,,488,,488,216,488,488,488,488,488,488,488,216,488,,,,216,216',
'216,216,216,216,,,,216,216,,,,,,,216,,,216,219,219,219,,219,216,216',
',219,219,,,,219,,219,219,219,219,219,219,219,,,,,,219,219,219,219,219',
'219,219,,,219,,,,,,,219,,,219,219,219,219,219,219,219,,219,219,219,',
'219,219,,219,219,489,489,489,489,489,489,489,,,489,489,,,,,,,489,489',
',219,,,219,,,219,,219,,,489,,489,219,489,489,489,489,489,489,489,219',
'489,,,,219,219,219,219,219,219,,,,219,219,,,,,,,219,,,219,221,221,221',
',221,219,219,,221,221,,,,221,,221,221,221,221,221,221,221,,,,,,221,221',
'221,221,221,221,221,,,221,,,,,,,221,,,221,221,221,221,221,221,221,,221',
'221,221,,221,221,,221,221,490,490,490,490,490,490,490,,,490,490,,,,',
',,490,490,,221,,,221,,,221,,221,,,490,,490,221,490,490,490,490,490,490',
'490,221,490,,,,221,221,221,221,221,221,,,,221,221,,,,,,,221,,,221,222',
'222,222,,222,221,221,,222,222,,,,222,,222,222,222,222,222,222,222,,',
',,,222,222,222,222,222,222,222,,,222,,,,,,,222,,,222,222,222,222,222',
'222,222,,222,222,222,,222,222,,222,222,491,491,491,491,491,491,491,',
',491,491,,,,,,,491,491,,222,,,222,,,222,,222,,,491,,491,222,491,491',
'491,491,491,491,491,222,491,,,,222,222,222,222,222,222,,,,222,222,,',
',,,,222,,,222,223,223,223,,223,222,222,,223,223,,,,223,,223,223,223',
'223,223,223,223,,,,,,223,223,223,223,223,223,223,,,223,,,,,,,223,,,223',
'223,223,223,223,223,223,,223,223,223,,223,223,,223,223,492,492,492,492',
'492,492,492,,,492,492,,,,,,,492,492,,223,,,223,,,223,,223,,,492,,492',
'223,492,492,492,492,492,492,492,223,492,,,,223,223,223,223,223,223,',
',,223,223,,,,,,,223,,,223,224,224,224,,224,223,223,,224,224,,,,224,',
'224,224,224,224,224,224,224,,,,,,224,224,224,224,224,224,224,,,224,',
',,,,,224,,,224,224,224,224,224,224,224,,224,224,224,,224,224,,224,224',
'495,495,495,495,495,495,495,,,495,495,,,,,,,495,495,,224,,,224,,,224',
',224,,,495,,495,224,495,495,495,495,495,495,495,224,495,,,,224,224,224',
'224,224,224,,,,224,224,,,,,,,224,,,224,225,225,225,,225,224,224,,225',
'225,,,,225,,225,225,225,225,225,225,225,,,,,,225,225,225,225,225,225',
'225,,,225,,,,,,,225,,,225,225,225,225,225,225,225,,225,225,225,,225',
'225,,225,225,496,496,496,496,496,496,496,496,,496,496,,,,,,,496,496',
',225,,,225,,,225,,225,,,496,,496,225,496,496,496,496,496,496,496,225',
'496,,,,225,225,225,225,225,225,,,,225,225,,,,,,,225,,,225,226,226,226',
',226,225,225,,226,226,,,,226,,226,226,226,226,226,226,226,,,,,,226,226',
'226,226,226,226,226,,,226,,,,,,,226,,,226,226,226,226,226,226,226,,226',
'226,226,,226,226,,226,226,,,,,,,,,,,,,,,,,,,,,226,,,226,,,226,,226,',
',,,,226,,,,,,,,226,,,,,226,226,226,226,226,226,,,,226,226,,,,,,,226',
',,226,227,227,227,,227,226,226,,227,227,,,,227,,227,227,227,227,227',
'227,227,,,,,,227,227,227,227,227,227,227,,,227,,,,,,,227,,,227,227,227',
'227,227,227,227,,227,227,227,,227,227,,227,227,,,,,,,,,,,,,,,,,,,,,227',
',,227,,,227,,227,,,,,,227,,,,,,,,227,,,,,227,227,227,227,227,227,,,',
'227,227,,,,,,,227,,,227,228,228,228,,228,227,227,,228,228,,,,228,,228',
'228,228,228,228,228,228,,,,,,228,228,228,228,228,228,228,,,228,,,,,',
',228,,,228,228,228,228,228,228,228,,228,228,228,,228,228,,228,228,,',
',,,,,,,,,,,,,,,,,,228,,,228,,,228,,228,,,,,,228,,,,,,,,228,,,,,228,228',
'228,228,228,228,,,,228,228,,,,,,,228,,,228,229,229,229,,229,228,228',
',229,229,,,,229,,229,229,229,229,229,229,229,,,,,,229,229,229,229,229',
'229,229,,,229,,,,,,,229,,,229,229,229,229,229,229,229,,229,229,229,',
'229,229,,229,229,,,,,,,,,,,,,,,,,,,,,229,,,229,,,229,,229,,,,,,229,',
',,,,,,229,,,,,229,229,229,229,229,229,,,,229,229,,,,,,,229,,,229,230',
'230,230,,230,229,229,,230,230,,,,230,,230,230,230,230,230,230,230,,',
',,,230,230,230,230,230,230,230,,,230,,,,,,,230,,,230,230,230,230,230',
'230,230,,230,230,230,,230,230,,230,230,,,,,,,,,,,,,,,,,,,,,230,,,230',
',,230,,230,,,,,,230,,,,,,,,230,,,,,230,230,230,230,230,230,,,,230,230',
',,,,,,230,,,230,231,231,231,,231,230,230,,231,231,,,,231,,231,231,231',
'231,231,231,231,,,,,,231,231,231,231,231,231,231,,,231,,,,,,,231,,,231',
'231,231,231,231,231,231,,231,231,231,,231,231,,231,231,,,,,,,,,,,,,',
',,,,,,,231,,,231,,,231,,231,,,,,,231,,,,,,,,231,,,,,231,231,231,231',
'231,231,,,,231,231,,,,,,,231,,,231,232,232,232,,232,231,231,,232,232',
',,,232,,232,232,232,232,232,232,232,,,,,,232,232,232,232,232,232,232',
',,232,,,,,,,232,,,232,232,232,232,232,232,232,,232,232,232,,232,232',
',232,232,,,,,,,,,,,,,,,,,,,,,232,,,232,,,232,,232,,,,,,232,,,,,,,,232',
',,,,232,232,232,232,232,232,,,,232,232,,,,,,,232,,,232,233,233,233,',
'233,232,232,,233,233,,,,233,,233,233,233,233,233,233,233,,,,,,233,233',
'233,233,233,233,233,,,233,,,,,,,233,,,233,233,233,233,233,233,233,,233',
'233,233,,233,233,,233,233,,,,,,,,,,,,,,,,,,,,,233,,,233,,,233,,233,',
',,,,233,,,,,,,,233,,,,,233,233,233,233,233,233,,,,233,233,,,,,,,233',
',,233,234,234,234,,234,233,233,,234,234,,,,234,,234,234,234,234,234',
'234,234,,,,,,234,234,234,234,234,234,234,,,234,,,,,,,234,,,234,234,234',
'234,234,234,234,,234,234,234,,234,234,,234,234,,,,,,,,,,,,,,,,,,,,,234',
',,234,,,234,,234,,,,,,234,,,,,,,,234,,,,,234,234,234,234,234,234,,,',
'234,234,,,,,,,234,,,234,235,235,235,,235,234,234,,235,235,,,,235,,235',
'235,235,235,235,235,235,,,,,,235,235,235,235,235,235,235,,,235,,,,,',
',235,,,235,235,235,235,235,235,235,,235,235,235,,235,235,,235,235,,',
',,,,,,,,,,,,,,,,,,235,,,235,,,235,,235,,,,,,235,,,,,,,,235,,,,,235,235',
'235,235,235,235,,,,235,235,,,,,,,235,,,235,236,236,236,,236,235,235',
',236,236,,,,236,,236,236,236,236,236,236,236,,,,,,236,236,236,236,236',
'236,236,,,236,,,,,,,236,,,236,236,236,236,236,236,236,,236,236,236,',
'236,236,,236,236,,,,,,,,,,,,,,,,,,,,,236,,,236,,,236,,236,,,,,,236,',
',,,,,,236,,,,,236,236,236,236,236,236,,,,236,236,,,,,,,236,,,236,237',
'237,237,,237,236,236,,237,237,,,,237,,237,237,237,237,237,237,237,,',
',,,237,237,237,237,237,237,237,,,237,,,,,,,237,,,237,237,237,237,237',
'237,237,,237,237,237,,237,237,,237,237,,,,,,,,,,,,,,,,,,,,,237,,,237',
',,237,,237,,,,,,237,,,,,,,,237,,,,,237,237,237,237,237,237,,,,237,237',
',,,,,,237,,,237,238,238,238,,238,237,237,,238,238,,,,238,,238,238,238',
'238,238,238,238,,,,,,238,238,238,238,238,238,238,,,238,,,,,,,238,,,238',
'238,238,238,238,238,238,,238,238,238,,238,238,,238,238,,,,,,,,,,,,,',
',,,,,,,238,,,238,,,238,,238,,,,,,238,,,,,,,,238,,,,,238,238,238,238',
'238,238,,,,238,238,,,,,,,238,,,238,239,239,239,,239,238,238,,239,239',
',,,239,,239,239,239,239,239,239,239,,,,,,239,239,239,239,239,239,239',
',,239,,,,,,,239,,,239,239,239,239,239,239,239,,239,239,239,,239,239',
',239,239,,,,,,,,,,,,,,,,,,,,,239,,,239,,,239,,239,,,,,,239,,,,,,,,239',
',,,,239,239,239,239,239,239,,,,239,239,,,,,,,239,,,239,240,240,240,',
'240,239,239,,240,240,,,,240,,240,240,240,240,240,240,240,,,,,,240,240',
'240,240,240,240,240,,,240,,,,,,,240,,,240,240,240,240,240,240,240,,240',
'240,240,,240,240,,240,240,,,,,,,,,,,,,,,,,,,,,240,,,240,,,240,,240,',
',,,,240,,,,,,,,240,,,,,240,240,240,240,240,240,,,,240,240,,,,,,,240',
',,240,241,241,241,,241,240,240,,241,241,,,,241,,241,241,241,241,241',
'241,241,,,,,,241,241,241,241,241,241,241,,,241,,,,,,,241,,,241,241,241',
'241,241,241,241,,241,241,241,,241,241,,241,241,,,,,,,,,,,,,,,,,,,,,241',
',,241,,,241,,241,,,,,,241,,,,,,,,241,,,,,241,241,241,241,241,241,,,',
'241,241,,,,,,,241,,,241,242,242,242,,242,241,241,,242,242,,,,242,,242',
'242,242,242,242,242,242,,,,,,242,242,242,242,242,242,242,,,242,,,,,',
',242,,,242,242,242,242,242,242,242,,242,242,242,,242,242,,242,242,,',
',,,,,,,,,,,,,,,,,,242,,,242,,,242,,242,,,,,,242,,,,,,,,242,,,,,242,242',
'242,242,242,242,,,,242,242,,,,,,,242,,,242,243,243,243,,243,242,242',
',243,243,,,,243,,243,243,243,243,243,243,243,,,,,,243,243,243,243,243',
'243,243,,,243,,,,,,,243,,,243,243,243,243,243,243,243,,243,243,243,',
'243,243,,243,243,,,,,,,,,,,,,,,,,,,,,243,,,243,,,243,,243,,,,,,243,',
',,,,,,243,,,,,243,243,243,243,243,243,,,,243,243,,,,,,,243,,,243,244',
'244,244,,244,243,243,,244,244,,,,244,,244,244,244,244,244,244,244,,',
',,,244,244,244,244,244,244,244,,,244,,,,,,,244,,,244,244,244,244,244',
'244,244,,244,244,244,,244,244,,244,244,,,,,,,,,,,,,,,,,,,,,244,,,244',
',,244,,244,,,,,,244,,,,,,,,244,,,,,244,244,244,244,244,244,,,,244,244',
',,,,,,244,,,244,245,245,245,,245,244,244,,245,245,,,,245,,245,245,245',
'245,245,245,245,,,,,,245,245,245,245,245,245,245,,,245,,,,,,,245,,,245',
'245,245,245,245,245,245,,245,245,245,,245,245,,245,245,,,,,,,,,,,,,',
',,,,,,,245,,,245,,,245,,245,,,,,,245,,,,,,,,245,,,,,245,245,245,245',
'245,245,,,,245,245,,,,,,,245,,,245,255,255,255,,255,245,245,,255,255',
',,,255,,255,255,255,255,255,255,255,,,,,,255,255,255,255,255,255,255',
',,255,,,,,,,255,,,255,255,255,255,255,255,255,,255,255,255,,255,255',
',255,255,,,,,,,,,,,,,,,,,,,,,255,,,255,,,255,,255,,,,,,255,,,,,,,,255',
',,,,255,255,255,255,255,255,,,,255,255,,,,,,,255,,,255,257,257,257,',
'257,255,255,,257,257,,,,257,,257,257,257,257,257,257,257,,,,,,257,257',
'257,257,257,257,257,,,257,,,,,,,257,,,257,257,257,257,257,257,257,,257',
'257,257,,257,257,,257,257,,,,,,,,,,,,,,,,,,,,,257,,,257,,,257,,257,',
',,,,257,,,,,,,,257,,,,,257,257,257,257,257,257,,,,257,257,,,,,,,257',
',,257,263,263,263,,263,257,257,,263,263,,,,263,,263,263,263,263,263',
'263,263,,,,,,263,263,263,263,263,263,263,,,263,,,,,,,263,,,263,263,263',
'263,263,263,263,,263,263,263,,263,263,,263,263,,,,,,,,,,,,,,,,,,,,,263',
',,263,,,263,,263,,,,,,263,,,,,,,,263,,,,,263,263,263,263,263,263,,,',
'263,263,,,,,,,263,,,263,264,264,264,,264,263,263,,264,264,,,,264,,264',
'264,264,264,264,264,264,,,,,,264,264,264,264,264,264,264,,,264,,,,,',
',264,,,264,264,264,264,264,264,264,,264,264,264,,264,264,,264,264,,',
',,,,,,,,,,,,,,,,,,264,,,264,,,264,,264,,,,,,264,,,,,,,,264,,,,,264,264',
'264,264,264,264,,,,264,264,,,,,,,264,,,264,271,271,271,,271,264,264',
',271,271,,,,271,,271,271,271,271,271,271,271,,,,,,271,271,271,271,271',
'271,271,,,271,,,,,,,271,,,271,271,271,271,271,271,271,271,271,271,271',
',271,271,,271,271,,,,,,,,,,,,,,,,,,,,,271,,,271,,,271,,271,,271,,271',
',271,,,,,,,,271,,,,,271,271,271,271,271,271,,,,271,271,,,,,,,271,,,271',
',271,,,,271,271,272,272,272,,272,,,,272,272,,,,272,,272,272,272,272',
'272,272,272,,,,,,272,272,272,272,272,272,272,,,272,,,,,,,272,,,272,272',
'272,272,272,272,272,272,272,272,272,,272,272,,272,272,,,,,,,,,,,,,,',
',,,,,,272,,,272,,,272,,272,,272,,272,,272,,,,,,,,272,,,,,272,272,272',
'272,272,272,,,,272,272,,,,,,,272,,,272,,272,,,,272,272,280,280,280,',
'280,,,,280,280,,,,280,,280,280,280,280,280,280,280,,,,,,280,280,280',
'280,280,280,280,,,280,,,,,,,280,,,280,280,280,280,280,280,280,280,280',
'280,280,,280,280,,280,280,,,,,,,,,,,,,,,,,,,,,280,,,280,,280,280,,280',
',280,,280,,280,,,,,,,,280,,,,,280,280,280,280,280,280,,,,280,280,,,',
',,,280,,,280,,280,,,,280,280,284,284,284,284,284,,,,284,284,,,,284,',
'284,284,284,284,284,284,284,,,,,,284,284,284,284,284,284,284,,,284,',
',,,,284,284,,284,284,284,284,284,284,284,284,,284,284,284,,284,284,',
'284,284,,,,,,,,,,,,,,,,,,,,,284,,,284,,,284,,284,,284,,,,284,,,,,,,',
'284,,,,,284,284,284,284,284,284,,,,284,284,,,,,,,284,,,284,288,288,288',
',288,284,284,,288,288,,,,288,,288,288,288,288,288,288,288,,,,,,288,288',
'288,288,288,288,288,,,288,,,,,,,288,,,288,288,288,288,288,288,288,,288',
'288,288,,288,288,,623,,623,623,623,623,623,,,,,,,,,623,,,,,,,288,,,288',
',,288,,288,,,,,,,,623,623,,,,,,623,623,623,623,288,288,288,288,288,288',
',,,288,288,,,,288,,,288,,,288,289,289,289,289,289,288,288,,289,289,',
',,289,623,289,289,289,289,289,289,289,,,,,,289,289,289,289,289,289,289',
',,289,,,,,,289,289,,289,289,289,289,289,289,289,289,,289,289,289,,289',
'289,,289,289,,,,,,,,,,,,,,,,,,,,,289,,,289,,,289,,289,,289,,,,289,,',
',,,,,289,,,,,289,289,289,289,289,289,,,,289,289,,,,,,,289,,,289,301',
'301,301,,301,289,289,,301,301,,,,301,,301,301,301,301,301,301,301,,',
',,,301,301,301,301,301,301,301,,,301,,,,,,,301,,,301,301,301,301,301',
'301,301,,301,301,301,,301,301,,676,,676,676,676,676,676,,,,,,,,,676',
',,,,,,301,,,301,,,301,,301,,,,,,,,676,,,,,,,676,676,676,676,301,301',
'301,301,301,301,,676,,301,301,,,,,,,301,,,301,310,310,310,,310,301,301',
',310,310,,,,310,676,310,310,310,310,310,310,310,,,,,,310,310,310,310',
'310,310,310,,,310,,,,,,,310,,,310,310,310,310,310,310,310,,310,310,310',
',310,310,,310,310,,,,,,,,,,,,,,,,,,,,,310,,,310,310,,310,,310,,,,,,310',
',,,,,,,310,,,,,310,310,310,310,310,310,,,,310,310,,,,,,,310,,,310,312',
'312,312,312,312,310,310,,312,312,,,,312,,312,312,312,312,312,312,312',
',,,,,312,312,312,312,312,312,312,,,312,,,,,,312,312,,312,312,312,312',
'312,312,312,312,,312,312,312,,312,312,,312,312,,,,,,,,,,,,,,,,,,,,,312',
',,312,,,312,,312,,312,,,,312,,,,,,,,312,,,,,312,312,312,312,312,312',
',,,312,312,,,,,,,312,,,312,341,341,341,,341,312,312,,341,341,,,,341',
',341,341,341,341,341,341,341,,,,,,341,341,341,341,341,341,341,,,341',
',,,,,,341,,,341,341,341,341,341,341,341,,341,341,341,,341,341,,781,',
'781,781,781,781,781,,,,,,,,,781,,,,,,,341,,,341,,,341,,341,,,,,,,,781',
',,,,,,781,781,781,781,341,341,341,341,341,341,,,,341,341,,,,,,,341,',
',341,360,360,360,,360,341,341,,360,360,,,,360,781,360,360,360,360,360',
'360,360,,,,,,360,360,360,360,360,360,360,,,360,,,,,,,360,,,360,360,360',
'360,360,360,360,,360,360,360,,360,360,,360,360,,,,,,,,,,,,,,,,,,,,,360',
',,360,,,360,,360,,,,,,360,,,,,,,,360,,,,,360,360,360,360,360,360,,,',
'360,360,,,,,,,360,,,360,361,361,361,,361,360,360,,361,361,,,,361,,361',
'361,361,361,361,361,361,,,,,,361,361,361,361,361,361,361,,,361,,,,,',
',361,,,361,361,361,361,361,361,361,,361,361,361,,361,361,,361,361,,',
',,,,,,,,,,,,,,,,,,361,,,361,,,361,,361,,,,,,361,,,,,,,,361,,,,,361,361',
'361,361,361,361,,,,361,361,,,,,,,361,,,361,380,380,380,,380,361,361',
',380,380,,,,380,,380,380,380,380,380,380,380,,,,,,380,380,380,380,380',
'380,380,,,380,,,,,,,380,,,380,380,380,380,380,380,380,,380,380,380,',
'380,380,,855,,855,855,855,855,855,,,,,,,,,855,,,,,,,380,,,380,,,380',
',380,,,,,,,,855,,,,,,,855,855,855,855,380,380,380,380,380,380,,,,380',
'380,,,,,,,380,,,380,392,392,392,,392,380,380,,392,392,,,,392,855,392',
'392,392,392,392,392,392,,,,,,392,392,392,392,392,392,392,,,392,,,,,',
',392,,,392,392,392,392,392,392,392,,392,392,392,,392,392,,392,392,,',
',,,,,,,,,,,,,,,,,,392,,,392,,,392,,392,,,,,,392,,,,,,,,392,,,,,392,392',
'392,392,392,392,,,,392,392,,,,,,,392,,,392,431,431,431,,431,392,392',
',431,431,,,,431,,431,431,431,431,431,431,431,,,,,,431,431,431,431,431',
'431,431,,,431,,,,,,,431,,,431,431,431,431,431,431,431,,431,431,431,',
'431,431,,431,431,,,,,,,,,,,,,,,,,,,,,431,,,431,,,431,,431,,,,,,431,',
',,,,,,431,,,,,431,431,431,431,431,431,,,,431,431,,,,,,,431,,,431,447',
'447,447,,447,431,431,,447,447,,,,447,,447,447,447,447,447,447,447,,',
',,,447,447,447,447,447,447,447,,,447,,,,,,,447,,,447,447,447,447,447',
'447,447,447,447,447,447,,447,447,,447,447,,,,,,,,,,,,,,,,,,,,,447,,',
'447,447,,447,,447,,447,,447,,447,,,,,,,,447,,,,,447,447,447,447,447',
'447,,,,447,447,,,,,,,447,,,447,,447,,,,447,447,448,448,448,,448,,,,448',
'448,,,,448,,448,448,448,448,448,448,448,,,,,,448,448,448,448,448,448',
'448,,,448,,,,,,,448,,,448,448,448,448,448,448,448,448,448,448,448,,448',
'448,,448,448,,,,,,,,,,,,,,,,,,,,,448,,,448,448,,448,,448,,448,,448,',
'448,,,,,,,,448,,,,,448,448,448,448,448,448,,,,448,448,,,,,,,448,,,448',
',448,,,,448,448,464,464,464,,464,,,,464,464,,,,464,,464,464,464,464',
'464,464,464,,,,,,464,464,464,464,464,464,464,,,464,,,,,,,464,,,464,464',
'464,464,464,464,464,464,464,464,464,,464,464,,464,464,,,,,,,,,,,,,,',
',,,,,,464,,,464,,,464,,464,,464,,,,464,,,,,,,,464,,,,,464,464,464,464',
'464,464,,,,464,464,,,,,,,464,,,464,,464,,,,464,464,465,465,465,,465',
',,,465,465,,,,465,,465,465,465,465,465,465,465,,,,,,465,465,465,465',
'465,465,465,,,465,,,,,,,465,,,465,465,465,465,465,465,465,465,465,465',
'465,,465,465,,465,465,,,,,,,,,,,,,,,,,,,,,465,,,465,,,465,,465,,465',
',,,465,,,,,,,,465,,,,,465,465,465,465,465,465,,,,465,465,,,,,,,465,',
',465,,465,,,,465,465,467,467,467,,467,,,,467,467,,,,467,,467,467,467',
'467,467,467,467,,,,,,467,467,467,467,467,467,467,,,467,,,,,,,467,,,467',
'467,467,467,467,467,467,,467,467,467,,467,467,,467,467,,,,,,,,,,,,,',
',,,,,,,467,,,467,,,467,,467,,,,,,467,,,,,,,,467,,,,,467,467,467,467',
'467,467,,,,467,467,,,,,,,467,,,467,468,468,468,,468,467,467,,468,468',
',,,468,,468,468,468,468,468,468,468,,,,,,468,468,468,468,468,468,468',
',,468,,,,,,,468,,,468,468,468,468,468,468,468,,468,468,468,,468,468',
',468,468,,,,,,,,,,,,,,,,,,,,,468,,,468,,,468,,468,,,,,,468,,,,,,,,468',
',,,,468,468,468,468,468,468,,,,468,468,,,,,,,468,,,468,469,469,469,',
'469,468,468,,469,469,,,,469,,469,469,469,469,469,469,469,,,,,,469,469',
'469,469,469,469,469,,,469,,,,,,,469,,,469,469,469,469,469,469,469,,469',
'469,469,,469,469,,469,469,,,,,,,,,,,,,,,,,,,,,469,,,469,,,469,,469,',
',,,,469,,,,,,,,469,,,,,469,469,469,469,469,469,,,,469,469,,,,,,,469',
',,469,497,497,497,,497,469,469,,497,497,,,,497,,497,497,497,497,497',
'497,497,,,,,,497,497,497,497,497,497,497,,,497,,,,,,,497,,,497,497,497',
'497,497,497,497,,497,497,497,,497,497,,497,497,,,,,,,,,,,,,,,,,,,,,497',
',,497,,,497,,497,,,,,,497,,,,,,,,497,,,,,497,497,497,497,497,497,,,',
'497,497,,,,,,,497,,,497,500,500,500,,500,497,497,,500,500,,,,500,,500',
'500,500,500,500,500,500,,,,,,500,500,500,500,500,500,500,,,500,,,,,',
',500,,,500,500,500,500,500,500,500,500,500,500,500,,500,500,,500,500',
',,,,,,,,,,,,,,,,,,,,500,,,500,,,500,,500,,500,,500,,500,,,,,,,,500,',
',,,500,500,500,500,500,500,,,,500,500,,,,,,,500,,,500,,500,,,,500,500',
'502,502,502,,502,,,,502,502,,,,502,,502,502,502,502,502,502,502,,,,',
',502,502,502,502,502,502,502,,,502,,,,,,,502,,,502,502,502,502,502,502',
'502,502,502,502,502,,502,502,,502,502,,,,,,,,,,,,,,,,,,,,,502,,,502',
',,502,,502,,,,502,,502,,,,,,,,502,,,,,502,502,502,502,502,502,,,,502',
'502,,,,,,,502,,,502,,502,,,,502,502,504,504,504,,504,,,,504,504,,,,504',
',504,504,504,504,504,504,504,,,,,,504,504,504,504,504,504,504,,,504',
',,,,,,504,,,504,504,504,504,504,504,504,,504,504,504,,504,504,,504,504',
',,,,,,,,,,,,,,,,,,,,504,,,504,,,504,,504,,,,,,504,,,,,,,,504,,,,,504',
'504,504,504,504,504,,,,504,504,,,,,,,504,,,504,521,521,521,,521,504',
'504,,521,521,,,,521,,521,521,521,521,521,521,521,,,,,,521,521,521,521',
'521,521,521,,,521,,,,,,,521,,,521,521,521,521,521,521,521,,521,521,521',
',521,521,,521,521,,,,,,,,,,,,,,,,,,,,,521,,,521,,521,521,,521,,,,521',
',521,,,,,,,,521,,,,,521,521,521,521,521,521,,,,521,521,,,,,,,521,,,521',
'527,527,527,527,527,521,521,,527,527,,,,527,,527,527,527,527,527,527',
'527,,,,,,527,527,527,527,527,527,527,,,527,,,,,,527,527,,527,527,527',
'527,527,527,527,527,,527,527,527,,527,527,,527,527,,,,,,,,,,,,,,,,,',
',,,527,,,527,,,527,,527,,527,,,,527,,,,,,,,527,,,,,527,527,527,527,527',
'527,,,,527,527,,,,,,527,527,,,527,533,533,533,,533,527,527,,533,533',
',,,533,,533,533,533,533,533,533,533,,,,,,533,533,533,533,533,533,533',
',,533,,,,,,,533,,,533,533,533,533,533,533,533,,533,533,533,,533,533',
',888,,888,888,888,888,888,,,,,,,,,888,,,,,,,533,,,533,,,533,,533,,,',
',,,,888,,,,,,,888,888,888,888,533,533,533,533,533,533,,,,533,533,,,',
',,,533,,,533,535,535,535,,535,533,533,,535,535,,,,535,888,535,535,535',
'535,535,535,535,,,,,,535,535,535,535,535,535,535,,,535,,,,,,,535,,,535',
'535,535,535,535,535,535,535,535,535,535,,535,535,,535,535,,,,,,,,,,',
',,,,,,,,,,535,,,535,,,535,,535,,535,,,,535,,,,,,,,535,,,,,535,535,535',
'535,535,535,,,,535,535,,,,,,,535,,,535,,535,,,,535,535,538,538,538,',
'538,,,,538,538,,,,538,,538,538,538,538,538,538,538,,,,,,538,538,538',
'538,538,538,538,,,538,,,,,,,538,,,538,538,538,538,538,538,538,538,538',
'538,538,,538,538,,538,538,,,,,,,,,,,,,,,,,,,,,538,,,538,,,538,,538,',
'538,,,,538,,,,,,,,538,,,,,538,538,538,538,538,538,,,,538,538,,,,,,,538',
',,538,,538,,,,538,538,544,544,544,,544,,,,544,544,,,,544,,544,544,544',
'544,544,544,544,,,,,,544,544,544,544,544,544,544,,,544,,,,,,,544,,,544',
'544,544,544,544,544,544,,544,544,544,,544,544,,953,,953,953,953,953',
'953,,,,,,,,,953,,,,,,,544,,,544,,,544,,544,,,,,,,,953,953,,,,,,953,953',
'953,953,544,544,544,544,544,544,,,,544,544,,,,,,,544,,,544,547,547,547',
',547,544,544,,547,547,,,,547,953,547,547,547,547,547,547,547,,,,,,547',
'547,547,547,547,547,547,,,547,,,,,,,547,,,547,547,547,547,547,547,547',
',547,547,547,,547,547,,547,547,,,,,,,,,,,,,,,,,,,,,547,,,547,,,547,',
'547,,,,,,547,,,,,,,,547,,,,,547,547,547,547,547,547,,,,547,547,,,,,',
',547,,,547,548,548,548,,548,547,547,,548,548,,,,548,,548,548,548,548',
'548,548,548,,,,,,548,548,548,548,548,548,548,,,548,,,,,,,548,,,548,548',
'548,548,548,548,548,,548,548,548,,548,548,,548,548,,,,,,,,,,,,,,,,,',
',,,548,,,548,,,548,,548,,,,,,548,,,,,,,,548,,,,,548,548,548,548,548',
'548,,,,548,548,,,,,,,548,,,548,549,549,549,,549,548,548,,549,549,,,',
'549,,549,549,549,549,549,549,549,,,,,,549,549,549,549,549,549,549,,',
'549,,,,,,,549,,,549,549,549,549,549,549,549,,549,549,549,,549,549,,549',
'549,,,,,,,,,,,,,,,,,,,,,549,,,549,,,549,,549,,,,,,549,,,,,,,,549,,,',
',549,549,549,549,549,549,,,,549,549,,,,,,,549,,,549,553,553,553,,553',
'549,549,,553,553,,,,553,,553,553,553,553,553,553,553,,,,,,553,553,553',
'553,553,553,553,,,553,,,,,,,553,,,553,553,553,553,553,553,553,,553,553',
'553,,553,553,,553,553,,,,,,,,,,,,,,,,,,,,,553,,,553,,,553,,553,,,,,',
'553,,,,,,,,553,,,,,553,553,553,553,553,553,,,,553,553,,,,,,,553,,,553',
'559,559,559,,559,553,553,,559,559,,,,559,,559,559,559,559,559,559,559',
',,,,,559,559,559,559,559,559,559,,,559,,,,,,,559,,,559,559,559,559,559',
'559,559,559,559,559,559,,559,559,,559,559,,,,,,,,,,,,,,,,,,,,,559,,',
'559,,,559,,559,,559,,559,,559,,,,,,,,559,,,,,559,559,559,559,559,559',
',,,559,559,,,,,,,559,,,559,,559,,,,559,559,562,562,562,,562,,,,562,562',
',,,562,,562,562,562,562,562,562,562,,,,,,562,562,562,562,562,562,562',
',,562,,,,,,,562,,,562,562,562,562,562,562,562,562,562,562,562,,562,562',
',562,562,,,,,,,,,,,,,,,,,,,,,562,,,562,,,562,,562,,,,,,562,,,,,,,,562',
',,,,562,562,562,562,562,562,,,,562,562,,,,,,,562,,,562,,562,,,,562,562',
'567,567,567,567,567,,,,567,567,,,,567,,567,567,567,567,567,567,567,',
',,,,567,567,567,567,567,567,567,,,567,,,,,,567,567,,567,567,567,567',
'567,567,567,567,,567,567,567,,567,567,,567,567,,,,,,,,,,,,,,,,,,,,,567',
',,567,,,567,,567,,567,,,,567,,,,,,,,567,,,,,567,567,567,567,567,567',
',,,567,567,,,,,,,567,,,567,568,568,568,568,568,567,567,,568,568,,,,568',
',568,568,568,568,568,568,568,,,,,,568,568,568,568,568,568,568,,,568',
',,,,,568,568,,568,568,568,568,568,568,568,568,,568,568,568,,568,568',
',568,568,,,,,,,,,,,,,,,,,,,,,568,,,568,,,568,,568,,568,,,,568,,,,,,',
',568,,,,,568,568,568,568,568,568,,,,568,568,,,,,,,568,,,568,574,574',
'574,,574,568,568,,574,574,,,,574,,574,574,574,574,574,574,574,,,,,,574',
'574,574,574,574,574,574,,,574,,,,,,,574,,,574,574,574,574,574,574,574',
',574,574,574,,574,574,,979,,979,979,979,979,979,,,,,,,,,979,,,,,,,574',
',,574,,,574,,574,,,,,,,,979,,,,,,,979,979,979,979,574,574,574,574,574',
'574,,,,574,574,,,,,,,574,,,574,595,595,595,595,595,574,574,,595,595',
',,,595,979,595,595,595,595,595,595,595,,,,,,595,595,595,595,595,595',
'595,,,595,,,,,,595,595,,595,595,595,595,595,595,595,595,,595,595,595',
',595,595,,595,595,,,,,,,,,,,,,,,,,,,,,595,,,595,,,595,,595,,595,,,,595',
',,,,,,,595,,,,,595,595,595,595,595,595,,,,595,595,,,,,,,595,,,595,599',
'599,599,599,599,595,595,,599,599,,,,599,,599,599,599,599,599,599,599',
',,,,,599,599,599,599,599,599,599,,,599,,,,,,599,599,,599,599,599,599',
'599,599,599,599,,599,599,599,,599,599,,599,599,,,,,,,,,,,,,,,,,,,,,599',
',,599,,,599,,599,,599,,,,599,,,,,,,,599,,,,,599,599,599,599,599,599',
',,,599,599,,,,,,,599,,,599,604,604,604,604,604,599,599,,604,604,,,,604',
',604,604,604,604,604,604,604,,,,,,604,604,604,604,604,604,604,,,604',
',,,,,604,604,,604,604,604,604,604,604,604,604,,604,604,604,,604,604',
',604,604,,,,,,,,,,,,,,,,,,,,,604,,,604,,,604,,604,,604,,,,604,,,,,,',
',604,,,,,604,604,604,604,604,604,,,,604,604,,,,,,,604,,,604,606,606',
'606,,606,604,604,,606,606,,,,606,,606,606,606,606,606,606,606,,,,,,606',
'606,606,606,606,606,606,,,606,,,,,,,606,,,606,606,606,606,606,606,606',
'606,606,606,606,,606,606,,606,606,,,,,,,,,,,,,,,,,,,,,606,,,606,,,606',
',606,,606,,,,606,,,,,,,,606,,,,,606,606,606,606,606,606,,,,606,606,',
',,,,,606,,,606,,606,,,,606,606,609,609,609,,609,,,,609,609,,,,609,,609',
'609,609,609,609,609,609,,,,,,609,609,609,609,609,609,609,,,609,,,,,',
',609,,,609,609,609,609,609,609,609,609,609,609,609,,609,609,,609,609',
',,,,,,,,,,,,,,,,,,,,609,,,609,,,609,,609,,609,,,,609,,,,,,,,609,,,,',
'609,609,609,609,609,609,,,,609,609,,,,,,,609,,,609,,609,,,,609,609,615',
'615,615,,615,,,,615,615,,,,615,,615,615,615,615,615,615,615,,,,,,615',
'615,615,615,615,615,615,,,615,,,,,,,615,,,615,615,615,615,615,615,615',
'615,615,615,615,,615,615,,615,615,,,,,,,,,,,,,,,,,,,,,615,,,615,,,615',
',615,,615,,,,615,,,,,,,,615,,,,,615,615,615,615,615,615,,,,615,615,',
',,,,,615,,,615,,615,,,,615,615,619,619,619,,619,,,,619,619,,,,619,,619',
'619,619,619,619,619,619,,,,,,619,619,619,619,619,619,619,,,619,,,,,',
',619,,,619,619,619,619,619,619,619,,619,619,619,,619,619,,619,619,,',
',,,,,,,,,,,,,,,,,,619,,,619,,,619,,619,,,,,,619,,,,,,,,619,,,,,619,619',
'619,619,619,619,,,,619,619,,,,,,,619,,,619,621,621,621,,621,619,619',
',621,621,,,,621,,621,621,621,621,621,621,621,,,,,,621,621,621,621,621',
'621,621,,,621,,,,,,,621,,,621,621,621,621,621,621,621,,621,621,621,',
'621,621,,621,621,,,,,,,,,,,,,,,,,,,,,621,,,621,,,621,,621,,,,,,621,',
',,,,,,621,,,,,621,621,621,621,621,621,,,,621,621,,,,,,,621,,,621,649',
'649,649,,649,621,621,,649,649,,,,649,,649,649,649,649,649,649,649,,',
',,,649,649,649,649,649,649,649,,,649,,,,,,,649,,,649,649,649,649,649',
'649,649,,649,649,649,,649,649,,649,649,,,,,,,,,,,,,,,,,,,,,649,,,649',
',,649,,649,,649,,,,649,,,,,,,,649,,,,,649,649,649,649,649,649,,,,649',
'649,,,,,,,649,,,649,652,652,652,,652,649,649,,652,652,,,,652,,652,652',
'652,652,652,652,652,,,,,,652,652,652,652,652,652,652,,,652,,,,,,,652',
',,652,652,652,652,652,652,652,,652,652,652,,652,652,,652,652,,,,,,,',
',,,,,,,,,,,,,652,,,652,,,652,,652,,,,,,652,,,,,,,,652,,,,,652,652,652',
'652,652,652,,,,652,652,,,,,,,652,,,652,653,653,653,,653,652,652,,653',
'653,,,,653,,653,653,653,653,653,653,653,,,,,,653,653,653,653,653,653',
'653,,,653,,,,,,,653,,,653,653,653,653,653,653,653,,653,653,653,,653',
'653,,653,653,,,,,,,,,,,,,,,,,,,,,653,,,653,,,653,,653,,,,,,653,,,,,',
',,653,,,,,653,653,653,653,653,653,,,,653,653,,,,,,,653,,,653,658,658',
'658,,658,653,653,,658,658,,,,658,,658,658,658,658,658,658,658,,,,,,658',
'658,658,658,658,658,658,,,658,,,,,,,658,,,658,658,658,658,658,658,658',
',658,658,658,,658,658,,658,658,,,,,,,,,,,,,,,,,,,,,658,,,658,,,658,',
'658,,,,,,658,,,,,,,,658,,,,,658,658,658,658,658,658,,,,658,658,,,,,',
',658,,,658,661,661,661,,661,658,658,,661,661,,,,661,,661,661,661,661',
'661,661,661,,,,,,661,661,661,661,661,661,661,,,661,,,,,,,661,,,661,661',
'661,661,661,661,661,,661,661,661,,661,661,,661,661,,,,,,,,,,,,,,,,,',
',,,661,,,661,,,661,,661,,,,,,661,,,,,,,,661,,,,,661,661,661,661,661',
'661,,,,661,661,,,,,,,661,,,661,664,664,664,,664,661,661,,664,664,,,',
'664,,664,664,664,664,664,664,664,,,,,,664,664,664,664,664,664,664,,',
'664,,,,,,,664,,,664,664,664,664,664,664,664,,664,664,664,,664,664,,664',
'664,,,,,,,,,,,,,,,,,,,,,664,,,664,,,664,,664,,,,,,664,,,,,,,,664,,,',
',664,664,664,664,664,664,,,,664,664,,,,,,,664,,,664,665,665,665,,665',
'664,664,,665,665,,,,665,,665,665,665,665,665,665,665,,,,,,665,665,665',
'665,665,665,665,,,665,,,,,,,665,,,665,665,665,665,665,665,665,,665,665',
'665,,665,665,,665,665,,,,,,,,,,,,,,,,,,,,,665,,,665,,,665,,665,,,,,',
'665,,,,,,,,665,,,,,665,665,665,665,665,665,,,,665,665,,,,,,,665,,,665',
'678,678,678,678,678,665,665,,678,678,,,,678,,678,678,678,678,678,678',
'678,,,,,,678,678,678,678,678,678,678,,,678,,,,,,678,678,,678,678,678',
'678,678,678,678,678,,678,678,678,,678,678,,678,678,,,,,,,,,,,,,,,,,',
',,,678,,,678,,,678,,678,,678,,,,678,,,,,,,,678,,,,,678,678,678,678,678',
'678,,,,678,678,,,,,,,678,,,678,682,682,682,,682,678,678,,682,682,,,',
'682,,682,682,682,682,682,682,682,,,,,,682,682,682,682,682,682,682,,',
'682,,,,,,,682,,,682,682,682,682,682,682,682,,682,682,682,,682,682,,682',
'682,,,,,,,,,,,,,,,,,,,,,682,,,682,,,682,,682,,,,,,682,,,,,,,,682,,,',
',682,682,682,682,682,682,,,,682,682,,,,,,,682,,,682,685,685,685,,685',
'682,682,,685,685,,,,685,,685,685,685,685,685,685,685,,,,,,685,685,685',
'685,685,685,685,,,685,,,,,,,685,,,685,685,685,685,685,685,685,,685,685',
'685,,685,685,,685,685,,,,,,,,,,,,,,,,,,,,,685,,,685,,,685,,685,,,,,',
'685,,,,,,,,685,,,,,685,685,685,685,685,685,,,,685,685,,,,,,,685,,,685',
'692,692,692,692,692,685,685,,692,692,,,,692,,692,692,692,692,692,692',
'692,,,,,,692,692,692,692,692,692,692,,,692,,,,,,692,692,,692,692,692',
'692,692,692,692,692,,692,692,692,,692,692,,692,692,,,,,,,,,,,,,,,,,',
',,,692,,,692,,,692,,692,,692,,,,692,,,,,,,,692,,,,,692,692,692,692,692',
'692,,,,692,692,,,,,,,692,,,692,695,695,695,,695,692,692,,695,695,,,',
'695,,695,695,695,695,695,695,695,,,,,,695,695,695,695,695,695,695,,',
'695,,,,,,,695,,,695,695,695,695,695,695,695,695,695,695,695,,695,695',
',695,695,,,,,,,,,,,,,,,,,,,,,695,,,695,,,695,,695,,695,,695,,695,,,',
',,,,695,,,,,695,695,695,695,695,695,,,,695,695,,,,,,,695,,,695,,695',
',,,695,695,696,696,696,,696,,,,696,696,,,,696,,696,696,696,696,696,696',
'696,,,,,,696,696,696,696,696,696,696,,,696,,,,,,,696,,,696,696,696,696',
'696,696,696,696,696,696,696,,696,696,,696,696,,,,,,,,,,,,,,,,,,,,,696',
',,696,,,696,,696,,,,696,,696,,,,,,,,696,,,,,696,696,696,696,696,696',
',,,696,696,,,,,,,696,,,696,,696,,,,696,696,702,702,702,702,702,,,,702',
'702,,,,702,,702,702,702,702,702,702,702,,,,,,702,702,702,702,702,702',
'702,,,702,,,,,,702,702,,702,702,702,702,702,702,702,702,,702,702,702',
',702,702,,702,702,,,,,,,,,,,,,,,,,,,,,702,,,702,,,702,,702,,702,,,,702',
',,,,,,,702,,,,,702,702,702,702,702,702,,,,702,702,,,,,,,702,,,702,703',
'703,703,703,703,702,702,,703,703,,,,703,,703,703,703,703,703,703,703',
',,,,,703,703,703,703,703,703,703,,,703,,,,,,703,703,,703,703,703,703',
'703,703,703,703,,703,703,703,,703,703,,703,703,,,,,,,,,,,,,,,,,,,,,703',
',,703,,,703,,703,,703,,,,703,,,,,,,,703,,,,,703,703,703,703,703,703',
',,,703,703,,,,,,,703,,,703,707,707,707,,707,703,703,,707,707,,,,707',
',707,707,707,707,707,707,707,,,,,,707,707,707,707,707,707,707,,,707',
',,,,,,707,,,707,707,707,707,707,707,707,,707,707,707,,707,707,,,,,,',
',,,,,,,,,,,,,,,,,707,,,707,,,707,,707,,,,,,,,,,,,,,,,,,,707,707,707',
'707,707,707,,,,707,707,,,,,,,707,,,707,720,720,720,,720,707,707,,720',
'720,,,,720,,720,720,720,720,720,720,720,,,,,,720,720,720,720,720,720',
'720,,,720,,,,,,,720,,,720,720,720,720,720,720,720,,720,720,720,,720',
'720,,,,,,,,,,,,,,,,,,,,,,,,720,,,720,,,720,,720,,,,,,,,,,,,,,,,,,,720',
'720,720,720,720,720,,,,720,720,,,,,,,720,,,720,726,726,726,,726,720',
'720,,726,726,,,,726,,726,726,726,726,726,726,726,,,,,,726,726,726,726',
'726,726,726,,,726,,,,,,,726,,,726,726,726,726,726,726,726,,726,726,726',
',726,726,,726,726,,,,,,,,,,,,,,,,,,,,,726,,,726,,,726,,726,,726,,,,726',
',,,,,,,726,,,,,726,726,726,726,726,726,,,,726,726,,,,,,,726,,,726,763',
'763,763,,763,726,726,,763,763,,,,763,,763,763,763,763,763,763,763,,',
',,,763,763,763,763,763,763,763,,,763,,,,,,,763,,,763,763,763,763,763',
'763,763,,763,763,763,,763,763,,763,763,,,,,,,,,,,,,,,,,,,,,763,,,763',
',,763,,763,,763,,,,763,,,,,,,,763,,,,,763,763,763,763,763,763,,,,763',
'763,,,,,,,763,,,763,770,770,770,,770,763,763,,770,770,,,,770,,770,770',
'770,770,770,770,770,,,,,,770,770,770,770,770,770,770,,,770,,,,,,,770',
',,770,770,770,770,770,770,770,,770,770,770,,770,770,,770,770,,,,,,,',
',,,,,,,,,,,,,770,,,770,,,770,,770,,,,,,770,,,,,,,,770,,,,,770,770,770',
'770,770,770,,,,770,770,,,,,,,770,,,770,775,775,775,775,775,770,770,',
'775,775,,,,775,,775,775,775,775,775,775,775,,,,,,775,775,775,775,775',
'775,775,,,775,,,,,,775,775,,775,775,775,775,775,775,775,775,,775,775',
'775,,775,775,,775,775,,,,,,,,,,,,,,,,,,,,,775,,,775,,,775,,775,,775',
',,,775,,,,,,,,775,,,,,775,775,775,775,775,775,,,,775,775,,,,,,,775,',
',775,779,779,779,779,779,775,775,,779,779,,,,779,,779,779,779,779,779',
'779,779,,,,,,779,779,779,779,779,779,779,,,779,,,,,,779,779,,779,779',
'779,779,779,779,779,779,,779,779,779,,779,779,,779,779,,,,,,,,,,,,,',
',,,,,,,779,,,779,,,779,,779,,779,,,,779,,,,,,,,779,,,,,779,779,779,779',
'779,779,,,,779,779,,,,,,,779,,,779,780,780,780,780,780,779,779,,780',
'780,,,,780,,780,780,780,780,780,780,780,,,,,,780,780,780,780,780,780',
'780,,,780,,,,,,780,780,,780,780,780,780,780,780,780,780,,780,780,780',
',780,780,,780,780,,,,,,,,,,,,,,,,,,,,,780,,,780,,,780,,780,,780,,,,780',
',,,,,,,780,,,,,780,780,780,780,780,780,,,,780,780,,,,,,,780,,,780,783',
'783,783,,783,780,780,,783,783,,,,783,,783,783,783,783,783,783,783,,',
',,,783,783,783,783,783,783,783,,,783,,,,,,,783,,,783,783,783,783,783',
'783,783,,783,783,783,,783,783,,783,783,,,,,,,,,,,,,,,,,,,,,783,,,783',
',,783,,783,,,,,,783,,,,,,,,783,,,,,783,783,783,783,783,783,,,,783,783',
',,,,,,783,,,783,797,797,797,797,797,783,783,,797,797,,,,797,,797,797',
'797,797,797,797,797,,,,,,797,797,797,797,797,797,797,,,797,,,,,,797',
'797,,797,797,797,797,797,797,797,797,,797,797,797,,797,797,,797,797',
',,,,,,,,,,,,,,,,,,,,797,,,797,,,797,,797,,797,,,,797,,,,,,,,797,,,,',
'797,797,797,797,797,797,,,,797,797,,,,,,,797,,,797,802,802,802,,802',
'797,797,,802,802,,,,802,,802,802,802,802,802,802,802,,,,,,802,802,802',
'802,802,802,802,,,802,,,,,,,802,,,802,802,802,802,802,802,802,,802,802',
'802,,802,802,,802,802,,,,,,,,,,,,,,,,,,,,,802,,,802,,,802,,802,,,,,',
'802,,,,,,,,802,,,,,802,802,802,802,802,802,,,,802,802,,,,,,,802,,,802',
'803,803,803,,803,802,802,,803,803,,,,803,,803,803,803,803,803,803,803',
',,,,,803,803,803,803,803,803,803,,,803,,,,,,,803,,,803,803,803,803,803',
'803,803,,803,803,803,,803,803,,803,803,,,,,,,,,,,,,,,,,,,,,803,,,803',
',,803,,803,,,,,,803,,,,,,,,803,,,,,803,803,803,803,803,803,,,,803,803',
',,,,,,803,,,803,804,804,804,,804,803,803,,804,804,,,,804,,804,804,804',
'804,804,804,804,,,,,,804,804,804,804,804,804,804,,,804,,,,,,,804,,,804',
'804,804,804,804,804,804,,804,804,804,,804,804,,804,804,,,,,,,,,,,,,',
',,,,,,,804,,,804,,,804,,804,,,,,,804,,,,,,,,804,,,,,804,804,804,804',
'804,804,,,,804,804,,,,,,,804,,,804,816,816,816,,816,804,804,,816,816',
',,,816,,816,816,816,816,816,816,816,,,,,,816,816,816,816,816,816,816',
',,816,,,,,,,816,,,816,816,816,816,816,816,816,,816,816,816,,816,816',
',816,816,,,,,,,,,,,,,,,,,,,,,816,,,816,,,816,,816,,,,,,816,,,,,,,,816',
',,,,816,816,816,816,816,816,,,,816,816,,,,,,,816,,,816,817,817,817,',
'817,816,816,,817,817,,,,817,,817,817,817,817,817,817,817,,,,,,817,817',
'817,817,817,817,817,,,817,,,,,,,817,,,817,817,817,817,817,817,817,,817',
'817,817,,817,817,,817,817,,,,,,,,,,,,,,,,,,,,,817,,,817,,,817,,817,',
',,,,817,,,,,,,,817,,,,,817,817,817,817,817,817,,,,817,817,,,,,,,817',
',,817,818,818,818,,818,817,817,,818,818,,,,818,,818,818,818,818,818',
'818,818,,,,,,818,818,818,818,818,818,818,,,818,,,,,,,818,,,818,818,818',
'818,818,818,818,,818,818,818,,818,818,,818,818,,,,,,,,,,,,,,,,,,,,,818',
',,818,,,818,,818,,,,,,818,,,,,,,,818,,,,,818,818,818,818,818,818,,,',
'818,818,,,,,,,818,,,818,831,831,831,,831,818,818,,831,831,,,,831,,831',
'831,831,831,831,831,831,,,,,,831,831,831,831,831,831,831,,,831,,,,,',
',831,,,831,831,831,831,831,831,831,,831,831,831,,831,831,,831,831,,',
',,,,,,,,,,,,,,,,,,831,,,831,,,831,,831,,831,,,,831,,,,,,,,831,,,,,831',
'831,831,831,831,831,,,,831,831,,,,,,,831,,,831,842,842,842,842,842,831',
'831,,842,842,,,,842,,842,842,842,842,842,842,842,,,,,,842,842,842,842',
'842,842,842,,,842,,,,,,842,842,,842,842,842,842,842,842,842,842,,842',
'842,842,,842,842,,842,842,,,,,,,,,,,,,,,,,,,,,842,,,842,,,842,,842,',
'842,,,,842,,,,,,,,842,,,,,842,842,842,842,842,842,,,,842,842,,,,,,,842',
',,842,866,866,866,,866,842,842,,866,866,,,,866,,866,866,866,866,866',
'866,866,,,,,,866,866,866,866,866,866,866,,,866,,,,,,,866,,,866,866,866',
'866,866,866,866,,866,866,866,,866,866,,866,866,,,,,,,,,,,,,,,,,,,,,866',
',,866,,,866,,866,,,,,,866,,,,,,,,866,,,,,866,866,866,866,866,866,,,',
'866,866,,,,,,,866,,,866,868,868,868,868,868,866,866,,868,868,,,,868',
',868,868,868,868,868,868,868,,,,,,868,868,868,868,868,868,868,,,868',
',,,,,868,868,,868,868,868,868,868,868,868,868,,868,868,868,,868,868',
',868,868,,,,,,,,,,,,,,,,,,,,,868,,,868,,,868,,868,,868,,,,868,,,,,,',
',868,,,,,868,868,868,868,868,868,,,,868,868,,,,,,,868,,,868,869,869',
'869,869,869,868,868,,869,869,,,,869,,869,869,869,869,869,869,869,,,',
',,869,869,869,869,869,869,869,,,869,,,,,,869,869,,869,869,869,869,869',
'869,869,869,,869,869,869,,869,869,,869,869,,,,,,,,,,,,,,,,,,,,,869,',
',869,,,869,,869,,869,,,,869,,,,,,,,869,,,,,869,869,869,869,869,869,',
',,869,869,,,,,,,869,,,869,894,894,894,,894,869,869,,894,894,,,,894,',
'894,894,894,894,894,894,894,,,,,,894,894,894,894,894,894,894,,,894,',
',,,,,894,,,894,894,894,894,894,894,894,,894,894,894,,894,894,,894,894',
',,,,,,,,,,,,,,,,,,,,894,,,894,,,894,,894,,,,,,894,,,,,,,,894,,,,,894',
'894,894,894,894,894,,,,894,894,,,,,,,894,,,894,908,908,908,,908,894',
'894,,908,908,,,,908,,908,908,908,908,908,908,908,,,,,,908,908,908,908',
'908,908,908,,,908,,,,,,,908,,,908,908,908,908,908,908,908,,908,908,908',
',908,908,,908,908,,,,,,,,,,,,,,,,,,,,,908,,,908,,,908,,908,,,,,,908',
',,,,,,,908,,,,,908,908,908,908,908,908,,,,908,908,,,,,,,908,,,908,909',
'909,909,,909,908,908,,909,909,,,,909,,909,909,909,909,909,909,909,,',
',,,909,909,909,909,909,909,909,,,909,,,,,,,909,,,909,909,909,909,909',
'909,909,,909,909,909,,909,909,,909,909,,,,,,,,,,,,,,,,,,,,,909,,,909',
',,909,,909,,,,,,909,,,,,,,,909,,,,,909,909,909,909,909,909,,,,909,909',
',,,,,,909,,,909,910,910,910,,910,909,909,,910,910,,,,910,,910,910,910',
'910,910,910,910,,,,,,910,910,910,910,910,910,910,,,910,,,,,,,910,,,910',
'910,910,910,910,910,910,,910,910,910,,910,910,,910,910,,,,,,,,,,,,,',
',,,,,,,910,,,910,,,910,,910,,,,,,910,,,,,,,,910,,,,,910,910,910,910',
'910,910,,,,910,910,,,,,,,910,,,910,914,914,914,,914,910,910,,914,914',
',,,914,,914,914,914,914,914,914,914,,,,,,914,914,914,914,914,914,914',
',,914,,,,,,,914,,,914,914,914,914,914,914,914,914,914,914,914,,914,914',
',914,914,,,,,,,,,,,,,,,,,,,,,914,,,914,,,914,,914,,,,914,,914,,,,,,',
',914,,,,,914,914,914,914,914,914,,,,914,914,,,,,,,914,,,914,,914,,,',
'914,914,919,919,919,919,919,,,,919,919,,,,919,,919,919,919,919,919,919',
'919,,,,,,919,919,919,919,919,919,919,,,919,,,,,,919,919,,919,919,919',
'919,919,919,919,919,,919,919,919,,919,919,,919,919,,,,,,,,,,,,,,,,,',
',,,919,,,919,,,919,,919,,919,,,,919,,,,,,,,919,,,,,919,919,919,919,919',
'919,,,,919,919,,,,,,,919,,,919,923,923,923,,923,919,919,,923,923,,,',
'923,,923,923,923,923,923,923,923,,,,,,923,923,923,923,923,923,923,,',
'923,,,,,,,923,,,923,923,923,923,923,923,923,,923,923,923,,923,923,,',
',,,,,,,,,,,,,,,,,,,,,923,,,923,,,923,,923,,,,,,,,,,,,,,,,,,,923,923',
'923,923,923,923,,,,923,923,,,,,,,923,,,923,935,935,935,,935,923,923',
',935,935,,,,935,,935,935,935,935,935,935,935,,,,,,935,935,935,935,935',
'935,935,,,935,,,,,,,935,,,935,935,935,935,935,935,935,,935,935,935,',
'935,935,,935,935,,,,,,,,,,,,,,,,,,,,,935,,,935,,,935,,935,,935,,,,935',
',,,,,,,935,,,,,935,935,935,935,935,935,,,,935,935,,,,,,,935,,,935,936',
'936,936,936,936,935,935,,936,936,,,,936,,936,936,936,936,936,936,936',
',,,,,936,936,936,936,936,936,936,,,936,,,,,,936,936,,936,936,936,936',
'936,936,936,936,,936,936,936,,936,936,,936,936,,,,,,,,,,,,,,,,,,,,,936',
',,936,,,936,,936,,936,,,,936,,,,,,,,936,,,,,936,936,936,936,936,936',
',,,936,936,,,,,,,936,,,936,939,939,939,939,939,936,936,,939,939,,,,939',
',939,939,939,939,939,939,939,,,,,,939,939,939,939,939,939,939,,,939',
',,,,,939,939,,939,939,939,939,939,939,939,939,,939,939,939,,939,939',
',939,939,,,,,,,,,,,,,,,,,,,,,939,,,939,,,939,,939,,939,,,,939,,,,,,',
',939,,,,,939,939,939,939,939,939,,,,939,939,,,,,,,939,,,939,957,957',
'957,,957,939,939,,957,957,,,,957,,957,957,957,957,957,957,957,,,,,,957',
'957,957,957,957,957,957,,,957,,,,,,,957,,,957,957,957,957,957,957,957',
',957,957,957,,957,957,,957,957,,,,,,,,,,,,,,,,,,,,,957,,,957,,,957,',
'957,,957,,957,,957,,,,,,,,957,,,,,957,957,957,957,957,957,,,,957,957',
',,,,,,957,,,957,959,959,959,959,959,957,957,,959,959,,,,959,,959,959',
'959,959,959,959,959,,,,,,959,959,959,959,959,959,959,,,959,,,,,,959',
'959,,959,959,959,959,959,959,959,959,,959,959,959,,959,959,,959,959',
',,,,,,,,,,,,,,,,,,,,959,,,959,,,959,,959,,959,,,,959,,,,,,,,959,,,,',
'959,959,959,959,959,959,,,,959,959,,,,,,,959,,,959,970,970,970,970,970',
'959,959,,970,970,,,,970,,970,970,970,970,970,970,970,,,,,,970,970,970',
'970,970,970,970,,,970,,,,,,970,970,,970,970,970,970,970,970,970,970',
',970,970,970,,970,970,,970,970,,,,,,,,,,,,,,,,,,,,,970,,,970,,,970,',
'970,,970,,,,970,,,,,,,,970,,,,,970,970,970,970,970,970,,,,970,970,,',
',,,,970,,,970,975,975,975,975,975,970,970,,975,975,,,,975,,975,975,975',
'975,975,975,975,,,,,,975,975,975,975,975,975,975,,,975,,,,,,975,975',
',975,975,975,975,975,975,975,975,,975,975,975,,975,975,,975,975,,,,',
',,,,,,,,,,,,,,,,975,,,975,,,975,,975,,975,,,,975,,,,,,,,975,,,,,975',
'975,975,975,975,975,,,,975,975,,,,,,,975,,,975,987,987,987,987,987,975',
'975,,987,987,,,,987,,987,987,987,987,987,987,987,,,,,,987,987,987,987',
'987,987,987,,,987,,,,,,987,987,,987,987,987,987,987,987,987,987,,987',
'987,987,,987,987,,987,987,,,,,,,,,,,,,,,,,,,,,987,,,987,,,987,,987,',
'987,,,,987,,,,,,,,987,,,,,987,987,987,987,987,987,,,,987,987,,,,,,,987',
',,987,989,989,989,,989,987,987,,989,989,,,,989,,989,989,989,989,989',
'989,989,,,,,,989,989,989,989,989,989,989,,,989,,,,,,,989,,,989,989,989',
'989,989,989,989,989,989,989,989,,989,989,,989,989,,,,,,,,,,,,,,,,,,',
',,989,,,989,,,989,,989,,989,,,,989,,,,,,,,989,,,,443,989,989,989,989',
'989,989,443,443,443,989,989,,443,443,,443,,989,,,989,,989,,443,,989',
'989,,,,,,,,443,443,,443,443,443,443,443,,,,,,,,,,,,,,,,,,,,,,443,443',
'443,443,443,443,443,443,443,443,443,443,443,443,443,,,443,443,443,,443',
',,,443,,,,,,443,,443,,443,443,443,443,443,443,443,,443,443,443,,,,,',
',,,,,,,443,443,,443,,443,,445,443,,443,,,443,445,445,445,,,,445,445',
',445,,,,,,,,,,,,,,,,,,,,445,445,,445,445,445,445,445,,,,,,,,,,,,,,,',
',,,,,,445,445,445,445,445,445,445,445,445,445,445,445,445,445,445,,',
'445,445,445,,445,,,,445,,,,,,445,,445,,445,445,445,445,445,445,445,',
'445,,445,,,,,,,,,,,,,445,445,,445,,445,,668,445,,445,,,445,668,668,668',
',,668,668,668,,668,,,,,,,,,668,668,668,,,,,,,,,668,668,,668,668,668',
'668,668,,,,,,,,,,,,,,,,,,,,,,668,668,668,668,668,668,668,668,668,668',
'668,668,668,668,668,,,668,668,668,,668,668,,,668,,668,,668,,668,,668',
',668,668,668,668,668,668,668,,668,668,668,,,,,,,,,,,,,668,668,668,668',
',668,,669,668,,668,,,668,669,669,669,,,669,669,669,,669,,,,,,,,,,669',
'669,,,,,,,,,669,669,,669,669,669,669,669,,,,,,,,,,,,,,,,,,,,,,669,669',
'669,669,669,669,669,669,669,669,669,669,669,669,669,,,669,669,669,,669',
'669,,,669,,669,,669,,669,,669,,669,669,669,669,669,669,669,,669,,669',
',,,,,,,,,,,,669,669,669,669,,669,,28,669,,669,,,669,28,28,28,,,28,28',
'28,,28,,,,,,,,,28,28,28,,,,,,,,,28,28,,28,28,28,28,28,,,,,,,,,,,,,,',
',,,,,,,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,,,28,28,28,,,28',
',28,28,,28,,28,,28,,28,,28,28,28,28,28,28,28,,28,28,28,,,,,,,,,,,,,28',
'28,28,28,29,28,,,28,,28,29,29,29,,,29,29,29,,29,,,,,,,,,,29,29,,,,,',
',,,29,29,,29,29,29,29,29,,,,,,,,,,,,,,,,,,,,,,29,29,29,29,29,29,29,29',
'29,29,29,29,29,29,29,,,29,29,29,,,29,,29,29,,29,,29,,29,,29,,29,29,29',
'29,29,29,29,,29,,29,,,,,,,,,,,,,29,29,29,29,51,29,,,29,,29,51,51,51',
',,51,51,51,,51,,,,,,,,,,51,51,51,,,,,,,,51,51,,51,51,51,51,51,,,,,,',
',,,,,,,,,,,,,,,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,,,51,51',
'51,,,51,,,51,,51,,51,,51,,51,,51,51,51,51,51,51,51,,51,,51,,,,,,,,,',
',,,51,51,51,51,439,51,,51,51,,51,439,439,439,,,439,439,439,,439,,,,',
',,,,439,439,439,,,,,,,,,439,439,,439,439,439,439,439,,,,,,,,,,,,,,,',
',,,,,,439,439,439,439,439,439,439,439,439,439,439,439,439,439,439,,',
'439,439,439,,,439,,439,439,,439,,439,,439,,439,,439,439,439,439,439',
'439,439,,439,439,439,,,,,,,,,,,,,439,439,439,439,449,439,,,439,,439',
'449,449,449,,,449,449,449,,449,,,,,,,,,449,449,449,,,,,,,,,449,449,',
'449,449,449,449,449,,,,,,,,,,,,,,,,,,,,,,449,449,449,449,449,449,449',
'449,449,449,449,449,449,449,449,,,449,449,449,,,449,,449,449,,449,,449',
',449,,449,,449,449,449,449,449,449,449,,449,449,449,,,,,,,,,,,,,449',
'449,449,449,509,449,,,449,,449,509,509,509,,,509,509,509,,509,,,,,,',
',,,509,,,,,,,,,,509,509,,509,509,509,509,509,,,,,,,,,,,,510,,,,,,,510',
'510,510,,,510,510,510,,510,,,,,509,509,,,,510,,,509,,,,,509,509,510',
'510,,510,510,510,510,510,,,,,,,,,,,,509,,,,,,,,,,,,,509,,509,,,509,',
',510,510,,511,,,,,510,,511,511,511,510,510,511,511,511,,511,,,,,,,,',
',511,,,,,510,,,,,511,511,,511,511,511,511,511,510,,510,,,510,202,202',
',,202,,,,,,,,,202,202,202,202,202,202,202,202,202,,,202,202,511,511',
',,202,202,202,202,511,,,,,511,511,,,,,202,202,,202,202,202,202,202,202',
'202,202,202,202,202,,511,202,,,,,,,,,,,,511,,511,,,511,7,7,7,7,7,7,7',
'7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,,,,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7',
'7,7,7,7,7,7,7,7,,7,,,,,,,,,7,7,7,7,7,7,7,7,7,,,7,7,,,,,7,7,7,7,,,,,',
',,,,,,7,7,,7,7,7,7,7,7,7,7,7,7,7,,,7,7,,,,,,,,,,7,8,8,8,8,8,8,8,8,8',
'8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,,,,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8',
'8,8,8,8,8,,,8,,,,,,,,,8,8,8,8,8,8,8,8,8,,,8,8,,,,,8,8,8,8,,,,,,,,,,',
',8,8,,8,8,8,8,8,8,8,8,8,8,8,,,8,8,,,,,,,,,,8,422,422,422,422,422,422',
'422,422,422,422,422,422,422,422,422,422,422,422,422,422,422,422,422',
'422,,,,422,422,422,422,422,422,422,422,422,422,422,422,422,422,422,422',
'422,422,422,422,422,422,422,,,422,,,,,,,,,422,422,422,422,422,422,422',
'422,422,,,422,422,,,,,422,422,422,422,,,,,,,,,,,,422,422,,422,422,422',
'422,422,422,422,422,422,422,422,,,422,422,,,,,,,,,,422,426,426,426,426',
'426,426,426,426,426,426,426,426,426,426,426,426,426,426,426,426,426',
'426,426,426,,,,426,426,426,426,426,426,426,426,426,426,426,426,426,426',
'426,426,426,426,426,426,426,426,426,,,426,,,,,,,,,426,426,426,426,426',
'426,426,426,426,,,426,426,,,,,426,426,426,426,,,,,,,,,,,,426,426,,426',
'426,426,426,426,426,426,426,426,426,426,,,426,426,,,,,,,,,,426,66,66',
'66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,,',
',66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66',
'66,66,66,,66,,,,,,,66,66,66,66,66,66,66,66,66,,,66,66,,,,,66,66,66,66',
',,,,,66,,,,,,66,66,,66,66,66,66,66,66,66,66,66,66,66,,,66,80,80,80,80',
'80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,,,,80,80',
'80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80',
'80,,80,,,,,,,80,80,80,80,80,80,80,80,80,,,80,80,,,,,80,80,80,80,,,,',
',,,,,,,80,80,,80,80,80,80,80,80,80,80,80,80,80,,,80,193,193,193,193',
'193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193',
'193,193,193,,,,193,193,193,193,193,193,193,193,193,193,193,193,193,193',
'193,193,193,193,193,193,193,193,193,193,193,193,,193,,,,,,,193,193,193',
'193,193,193,193,193,193,,,193,193,,,,,193,193,193,193,,,,,,,,,,,,193',
'193,,193,193,193,193,193,193,193,193,193,193,193,,,193,794,794,794,794',
'794,794,794,794,794,794,794,794,794,794,794,794,794,794,794,794,794',
'794,794,794,,,,794,794,794,794,794,794,794,794,794,794,794,794,794,794',
'794,794,794,794,794,794,794,794,794,,,794,,,,,,,,,794,794,794,794,794',
'794,794,794,794,,,794,794,,,,,794,794,794,794,,,,,,,,,,,,794,794,,794',
'794,794,794,794,794,794,794,794,794,794,201,201,794,,201,,,,,,,,,201',
'201,201,201,201,201,201,201,201,,,201,201,,,,,201,201,201,201,,,,,,201',
',,,,,201,201,,201,201,201,201,201,201,201,201,201,201,201,203,203,201',
',203,,,,,,,,,203,203,203,203,203,203,203,203,203,,,203,203,,,,,203,203',
'203,203,,,,,,,,,,,,203,203,,203,203,203,203,203,203,203,203,203,203',
'203,267,267,203,,267,,,,,,,,,267,267,267,267,267,267,267,267,267,,,267',
'267,,,,,267,267,267,267,,,,,,,,,,,,267,267,,267,267,267,267,267,267',
'267,267,267,267,267,268,268,267,,268,,,,,,,,,268,268,268,268,268,268',
'268,268,268,,,268,268,,,,,268,268,268,268,,,,,,,,,,,,268,268,,268,268',
'268,268,268,268,268,268,268,268,268,269,269,268,,269,,,,,,,,,269,269',
'269,269,269,269,269,269,269,,,269,269,,,,,269,269,269,269,,,,,,,,,,',
',269,269,,269,269,269,269,269,269,269,269,269,269,269,462,462,269,,462',
',,,,,,,,462,462,462,462,462,462,462,462,462,,,462,462,,,,,462,462,462',
'462,,,,,,462,,,,,,462,462,,462,462,462,462,462,462,462,462,462,462,462',
'463,463,462,,463,,,,,,,,,463,463,463,463,463,463,463,463,463,,,463,463',
',,,,463,463,463,463,,,,,,,,,,,,463,463,,463,463,463,463,463,463,463',
'463,463,463,463,536,536,463,,536,,,,,,,,,536,536,536,536,536,536,536',
'536,536,,,536,536,,,,,536,536,536,536,,,,,,536,,,,,,536,536,,536,536',
'536,536,536,536,536,536,536,536,536,537,537,536,,537,,,,,,,,,537,537',
'537,537,537,537,537,537,537,,,537,537,,,,,537,537,537,537,,,,,,,,,,',
',537,537,,537,537,537,537,537,537,537,537,537,537,537,539,539,537,,539',
',,,,,,,,539,539,539,539,539,539,539,539,539,,,539,539,,,,,539,539,539',
'539,,,,,,,,,,,,539,539,,539,539,539,539,539,539,539,539,539,539,539',
'550,550,539,,550,,,,,,,,,550,550,550,550,550,550,550,550,550,,,550,550',
',,,,550,550,550,550,,,,,,550,,,,,,550,550,,550,550,550,550,550,550,550',
'550,550,550,550,551,551,550,,551,,,,,,,,,551,551,551,551,551,551,551',
'551,551,,,551,551,,,,,551,551,551,551,,,,,,,,,,,,551,551,,551,551,551',
'551,551,551,551,551,551,551,551,607,607,551,,607,,,,,,,,,607,607,607',
'607,607,607,607,607,607,,,607,607,,,,,607,607,607,607,,,,,,607,,,,,',
'607,607,,607,607,607,607,607,607,607,607,607,607,607,608,608,607,,608',
',,,,,,,,608,608,608,608,608,608,608,608,608,,,608,608,,,,,608,608,608',
'608,,,,,,,,,,,,608,608,,608,608,608,608,608,608,608,608,608,608,608',
'614,614,608,,614,,,,,,,,,614,614,614,614,614,614,614,614,614,,,614,614',
',,,,614,614,614,614,,,,,,,,,,,,614,614,,614,614,614,614,614,614,614',
'614,614,614,614,616,616,614,,616,,,,,,,,,616,616,616,616,616,616,616',
'616,616,,,616,616,,,,,616,616,616,616,,,,,,616,,,,,,616,616,,616,616',
'616,616,616,616,616,616,616,616,616,746,746,616,,746,,,,,,,,,746,746',
'746,746,746,746,746,746,746,,,746,746,,,,,746,746,746,746,,,,,,,,,,',
',746,746,,746,746,746,746,746,746,746,746,746,746,746,990,990,746,,990',
',,,,,,,,990,990,990,990,990,990,990,990,990,,,990,990,,,,,990,990,990',
'990,,,,,,990,,,,,,990,990,,990,990,990,990,990,990,990,990,990,990,990',
'991,991,990,,991,,,,,,,,,991,991,991,991,991,991,991,991,991,,,991,991',
',,,,991,991,991,991,,,,,,,,,,,,991,991,,991,991,991,991,991,991,991',
'991,991,991,991,,,991' ]
        racc_action_check = arr = ::Array.new(26038, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_action_pointer = [
    -2,    25,   nil,   -46,   nil,   514,   -71, 23991, 24112,   -15,
   nil,   -30,    31,   388,   244,     2,   310,   nil,   129,   260,
  2653,   171,   nil,   391,   529,   667,   307,   -14, 23095, 23222,
   nil,   805,   936,  1067,   nil,    76,   351,   161,   413,  1198,
  1329,  1460,   104,   580,   nil,   nil,   nil,   nil,   nil,   nil,
   nil, 23349,   nil,  1591,  1722,  1860,   -19,   949,  1998,  2129,
   nil,   nil,  2260,  2391,  2522,   nil, 24475,   nil,   nil,   nil,
   nil,   nil,   194,   nil,   nil,   nil,   nil,   nil,   110,   132,
 24585,   nil,   nil,   nil,   515,  2653,   nil,   nil,  2791,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   379,   nil,
  2929,   nil,   nil,   nil,  3060,  3191,  3322,  3453,  3584,  3715,
   nil,   513,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil, 24695,   302,   nil,  3846,  3977,  4108,  4239,
  4377, 24864, 23864, 24923,  4515,  4646,  4777,  4908,   nil,   667,
   -76,   384,   -63,   326,   397,  5039,  5170,   nil,   nil,  5301,
   400,  5432,  5563,  5694,  5825,  5956,  6087,  6218,  6349,  6480,
  6611,  6742,  6873,  7004,  7135,  7266,  7397,  7528,  7659,  7790,
  7921,  8052,  8183,  8314,  8445,  8576,   nil,   nil,   nil,   nil,
  2791,   nil,   365,   373,   nil,  8707,   414,  8838,   nil,   nil,
   nil,   nil,   nil,  8969,  9100,   nil,   nil, 24982, 25041, 25100,
   420,  9231,  9369,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
  9507,   146,   790,   428,  9645,   438,   451,   417,  9776,  9907,
    17,   831,   534,    39,   502,   498,   -11,   nil,   559,   558,
   526, 10038,   nil,   480,   595,   597,   899,   nil,   601,   nil,
 10169,   nil, 10300,    31,   nil,   556,   -89,   -47,   601,   585,
   292,   616,   nil,   nil,   -21,  1080,   nil,   nil,   nil,   580,
   590,   603,   622,   nil,   627,   633,   nil,   nil,   nil,   711,
   nil, 10431,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   821,
   nil,   nil,   nil,   726,   nil,   nil,   727,   602,    -7,     0,
 10562, 10693,   330,   350,   650,    -2,   931,   731,     0,   762,
   nil,   nil,   391,   733,   nil,  1030,   nil,    68,   nil,   nil,
 10824,   148,   408,   450,   563,   588,   597,   599,   630,   nil,
   670,   nil, 10955,   nil,   285,   nil,   375,   nil,   419,   670,
   391,   nil,   672,   -33,   nil,   397,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   683, 24233,   nil,   nil,   nil, 24354,   684,   nil,   669,
   nil, 11086,   671,   nil,  3191,   710,   711,   487,   523, 23476,
   nil,   nil,   nil, 22575,   715, 22705,   nil, 11217, 11355, 23603,
   nil,   nil,   nil,  3322,   nil,   676,   nil,   nil,   529,   nil,
   nil,   nil, 25159, 25218, 11493, 11631,   -51, 11769, 11900, 12031,
    44,   nil,  4777,  4908,   260,   370,   756,   776,   782,   786,
  2260,  2516,  2415,  5039,  1460,  1591,  1998,  2129,  5170,  5301,
  5432,  5563,  5694,   829,  1222,  5825,  5956, 12162,   -34,   nil,
 12293,   nil, 12431,   nil, 12569,   nil,   167,   nil,   nil, 23730,
 23785, 23864,    -7,   nil,   737,   nil,   nil,   738,   741,   nil,
   nil, 12700,   166,   167,   780,   nil,   nil, 12831,   782,   758,
   nil,   nil,   762, 12962,   802, 13093, 25277, 25336, 13231, 25395,
   170,   806,   nil,   nil, 13369,   771,   nil, 13500, 13631, 13762,
 25454, 25513,  3453, 13893,   892,   892,   812,   nil,   nil, 14024,
   nil,   nil, 14162,   nil,   nil,   nil,   nil, 14300, 14431,   813,
   nil,  2404,   nil,   nil, 14562,   362,   nil,   nil,   594,  2535,
   nil,   826,   nil,   nil,  1064,   851,   nil,   816,   nil,   966,
   nil,   784,   792,   nil,   nil, 14693,   899,   nil,   nil, 14824,
   203,   204,   897,   919, 14955,   nil, 15086, 25572, 25631, 15224,
    16,   nil,  1161,   nil, 25690, 15362, 25749,   nil,   nil, 15500,
   374, 15631,   nil,  9789,   nil,   nil,   nil,    34,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   244,   nil,
   nil,   nil,   806,   nil,   nil,   nil,   nil,   nil,   809, 15762,
   568,    98, 15893, 16024,   842,   nil,   nil,   nil, 16155,   847,
   nil, 16286,   851,   nil, 16417, 16548,   202,   251, 22835, 22965,
   856,   857,   667,   nil,  1860,   nil, 10051,   nil, 16679,   824,
   nil,   865, 16810,   nil,   nil, 16941,   nil,   nil,   nil,   nil,
   nil,   nil, 17072,   nil,   871, 17203, 17341,  1722,   837,   nil,
   nil,   882, 17479, 17610,   nil,   970,   -25, 17741,   847,   nil,
   885,   207,   229,   889,   252,   260,   890,   888,   893,   865,
 17872,  3584,   930,   933,    66,   986, 18003,   nil,   nil,   419,
   nil,   896,  1008,   nil,   nil,   nil,   897,   899,  1224,   900,
   nil,   nil,   902,   907,   nil,   908, 25808,   nil,   nil,   945,
  1097,   nil,   695,   nil,  1022,   nil,   nil,   nil,   nil,   nil,
  1030,   nil,  1031, 18134,   949,    29,    40,    80,   121,   950,
 18265,  1722,   nil,   954,   963, 18396,   487,   nil,   212, 18527,
 18658, 10444,   552, 18789,   nil,   930,   933,   nil,   934,   937,
   940,   nil,   931,   nil, 24805,   982,   761, 18920,   nil,   nil,
   nil,   950, 19051, 19182, 19313,   nil,  3715,   nil,  3846,   nil,
   nil,  3977,   nil,  4108,   nil,  4239, 19444, 19575, 19706,   283,
   321,   nil,   nil,   973,  1071,   nil,   nil,   nil,   971,   nil,
   965, 19837,   nil,   982,  1084,   968,   232,   nil,   nil,   nil,
  1087,   nil, 19968,   977,  1017,   nil,   nil,   nil,   nil,   nil,
  1219,   nil,  1350,   nil,   nil, 10837,   nil,  1481,   nil,   nil,
  1019,   nil,   nil,   833,  1100,   nil, 20099,  1101, 20230, 20361,
   nil,   nil,    45,    50,  1292,   229,   nil,  1102,   nil,   nil,
  1104,  1113,  1003,   nil,   nil,   471,   nil,   nil, 12975,   nil,
   335,   nil,  1612,   nil, 20492,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,  1019,  1005,   nil,  4377,   nil,  4515, 20623, 20754,
 20885,   nil,   nil,   nil, 21016,  1011,   nil,   nil,   nil, 21154,
   nil,   nil,    72, 21285,   nil,  1012,  1013,  1016,  1017,   nil,
   nil,    76,   nil,  1135,  1137, 21416, 21547,   nil,   nil, 21678,
   nil,   nil,  1064,   nil,  1030,   nil,  1031,  1033,  1036,  1028,
   nil,  1039,   nil, 13382,   nil,  4646,   nil, 21809,   nil, 21940,
    80,  1355,  1112,    84,   nil,   nil,  2019,   nil,   nil,   nil,
 22071,   nil,   nil,   nil,   447, 22202,  1158,   nil,   nil, 14575,
   nil,  2150,   nil,  2281,   nil,  2950,   nil, 22333,  1162, 22464,
 25867, 25926,    88,  1045,   743,   nil,   nil,   nil,  1163,   nil,
  1047,  1048,  1060,  1061,  1181,   nil,  1099,    96,   110,   176,
   211,   nil,   nil,   nil,  3081,   nil,   nil,   nil,   nil,   nil,
   129,  1068,   nil ]

racc_action_default = [
    -3,  -581,    -1,  -569,    -4,    -6,  -581,  -581,  -581,  -581,
   -25,  -581,  -581,  -581,  -283,  -581,   -37,   -40,  -581,  -581,
   -45,   -47,   -48,  -295,  -333,  -334,   -52,  -261,  -261,  -261,
   -67,   -10,   -71,   -79,   -81,  -581,  -472,  -581,  -581,  -581,
  -581,  -581,  -571,  -237,  -276,  -277,  -278,  -279,  -280,  -281,
  -282,  -559,  -285,  -581,  -580,  -549,  -303,  -580,  -581,  -581,
  -308,  -311,  -569,  -581,  -581,  -325,  -581,  -335,  -336,  -415,
  -416,  -417,  -418,  -419,  -580,  -422,  -580,  -580,  -580,  -580,
  -580,  -449,  -455,  -456,  -581,  -461,  -462,  -463,  -464,  -465,
  -466,  -467,  -468,  -469,  -470,  -471,  -474,  -475,  -581,    -2,
  -570,  -576,  -577,  -578,  -581,  -581,  -581,  -581,  -581,    -3,
   -13,  -581,  -108,  -109,  -110,  -111,  -112,  -113,  -114,  -117,
  -118,  -119,  -120,  -121,  -122,  -123,  -124,  -125,  -126,  -127,
  -128,  -129,  -130,  -131,  -132,  -133,  -134,  -135,  -136,  -137,
  -138,  -139,  -140,  -141,  -142,  -143,  -144,  -145,  -146,  -147,
  -148,  -149,  -150,  -151,  -152,  -153,  -154,  -155,  -156,  -157,
  -158,  -159,  -160,  -161,  -162,  -163,  -164,  -165,  -166,  -167,
  -168,  -169,  -170,  -171,  -172,  -173,  -174,  -175,  -176,  -177,
  -178,  -179,  -180,  -181,  -182,  -183,  -184,  -185,  -186,  -187,
  -188,  -189,  -190,  -581,   -18,  -115,   -10,  -581,  -581,  -580,
  -580,  -581,  -581,  -581,  -581,  -581,  -581,  -581,   -43,  -581,
  -472,  -581,  -283,  -581,  -581,   -10,  -581,   -44,  -227,  -581,
  -581,  -581,  -581,  -581,  -581,  -581,  -581,  -581,  -581,  -581,
  -581,  -581,  -581,  -581,  -581,  -581,  -581,  -581,  -581,  -581,
  -581,  -581,  -581,  -581,  -581,  -581,  -234,  -384,  -386,   -49,
  -238,  -254,  -268,  -268,  -258,  -581,  -269,  -581,  -295,  -333,
  -334,  -580,  -551,  -581,  -581,   -50,   -51,  -581,  -581,  -581,
   -57,  -580,  -581,  -302,  -390,  -398,  -400,   -65,  -396,   -66,
  -581,  -569,   -11,   -67,   -10,  -581,  -581,   -72,   -75,   -10,
  -472,  -581,  -581,  -283,  -298,  -571,  -581,  -337,  -397,  -581,
   -77,  -581,   -83,  -290,  -457,  -458,  -581,  -212,  -213,  -228,
  -581,  -572,   -10,  -571,  -239,  -571,  -573,  -573,  -581,  -581,
  -573,  -581,  -304,  -305,  -581,  -581,  -348,  -349,  -356,  -580,
  -515,  -546,  -546,  -366,  -580,  -580,  -383,  -481,  -482,  -484,
  -485,  -489,  -490,  -514,  -516,  -517,  -518,  -519,  -520,  -581,
  -533,  -538,  -539,  -541,  -542,  -543,  -581,   -46,  -581,  -581,
  -581,  -581,  -569,  -581,  -570,  -472,  -581,  -581,  -283,  -581,
  -522,  -523,  -104,  -581,  -106,  -581,  -283,  -581,  -322,  -472,
  -581,  -108,  -109,  -146,  -147,  -163,  -168,  -175,  -178,  -328,
  -581,  -547,  -581,  -420,  -581,  -435,  -581,  -437,  -581,  -581,
  -581,  -427,  -581,  -581,  -433,  -581,  -448,  -450,  -451,  -452,
  -453,  -459,  -460,  1023,    -5,  -579,   -19,   -20,   -21,   -22,
   -23,  -581,  -581,   -15,   -16,   -17,  -581,  -581,   -26,   -35,
   -36,  -581,  -581,   -27,  -193,  -581,  -581,  -560,  -561,  -261,
  -393,  -562,  -563,  -560,  -261,  -561,  -395,  -565,  -566,  -261,
  -560,  -561,   -33,  -201,   -34,  -581,   -38,   -39,  -191,  -269,
   -41,   -42,  -581,  -581,  -580,  -580,  -290,  -581,  -581,  -581,
  -581,  -301,  -202,  -203,  -204,  -205,  -206,  -207,  -208,  -209,
  -214,  -215,  -216,  -217,  -218,  -219,  -220,  -221,  -222,  -223,
  -224,  -225,  -226,  -229,  -230,  -231,  -232,  -581,  -580,  -255,
  -581,  -256,  -581,  -266,  -581,  -270,  -581,  -554,  -556,  -261,
  -261,  -261,  -580,   -58,  -571,  -249,  -250,  -268,  -268,  -262,
  -263,  -581,  -580,  -580,  -581,  -297,    -9,  -570,  -581,   -68,
  -288,   -84,   -73,  -581,  -581,  -580,  -581,  -581,  -580,  -581,
  -290,  -581,  -457,  -458,  -581,   -80,   -85,  -581,  -581,  -581,
  -581,  -581,  -233,  -581,  -407,  -581,  -581,  -240,  -241,  -575,
  -574,  -243,  -575,  -293,  -294,  -550,  -345,   -10,   -10,  -581,
  -347,  -581,  -368,  -379,  -581,  -581,  -364,  -365,  -581,  -374,
  -376,  -581,  -381,  -483,  -488,  -581,  -515,  -581,  -524,  -581,
  -526,  -528,  -532,  -540,  -544,   -10,  -338,  -339,  -340,   -10,
  -581,  -581,  -581,  -581,   -10,  -402,  -580,  -581,  -581,  -580,
  -290,  -317,  -104,  -105,  -581,  -580,  -581,  -320,  -476,  -581,
  -581,  -581,  -326,  -513,  -330,  -567,  -568,  -571,  -421,  -436,
  -439,  -440,  -442,  -423,  -438,  -424,  -425,  -426,  -581,  -429,
  -431,  -432,  -581,  -454,    -7,   -14,  -116,   -24,  -275,  -581,
  -291,  -292,  -581,  -581,   -61,  -247,  -248,  -391,  -581,   -63,
  -394,  -581,   -59,  -392,  -581,  -581,  -560,  -561,  -560,  -561,
  -581,  -581,  -191,  -300,  -581,  -359,  -581,  -361,   -10,  -268,
  -267,  -271,  -581,  -552,  -553,  -581,   -53,  -387,   -54,  -388,
   -55,  -389,   -10,  -245,  -581,  -251,  -253,   -45,  -581,  -260,
  -264,  -581,   -10,   -10,  -296,   -12,   -68,  -581,   -76,   -82,
  -581,  -560,  -561,  -580,  -564,  -289,  -581,  -581,  -580,   -78,
  -581,  -200,  -210,  -211,  -581,  -580,  -580,  -286,  -287,  -573,
  -244,  -581,  -581,  -346,  -357,  -367,  -580,  -580,  -358,  -546,
  -491,  -545,  -580,  -580,  -534,  -580,  -581,  -290,  -521,  -581,
  -581,  -531,  -580,  -341,  -580,  -309,  -342,  -343,  -344,  -312,
  -581,  -315,  -581,  -581,  -581,  -560,  -561,  -564,  -289,  -581,
  -581,  -104,  -107,  -564,  -581,   -10,  -581,  -478,  -581,   -10,
   -10,  -513,  -581,  -487,  -492,  -546,  -546,  -497,  -499,  -499,
  -499,  -512,  -515,  -536,  -581,  -581,  -581,   -10,  -428,  -430,
  -434,  -273,  -581,  -581,  -581,   -30,  -196,   -31,  -197,   -62,
   -32,  -198,   -64,  -199,   -60,  -192,  -581,  -581,  -581,  -292,
  -291,  -235,  -360,  -581,  -581,  -257,  -272,  -555,  -581,  -246,
  -268,  -581,  -265,  -581,  -581,   -74,  -291,  -292,   -86,  -299,
  -580,  -354,   -10,  -408,  -580,  -409,  -410,  -242,  -350,  -351,
  -581,  -377,  -581,  -380,  -363,  -581,  -371,  -581,  -373,  -382,
  -289,  -525,  -527,  -530,  -581,  -352,  -581,  -581,   -10,   -10,
  -314,  -316,  -581,  -291,   -96,  -581,  -291,  -581,  -477,  -323,
  -581,  -581,  -571,  -480,  -486,  -581,  -495,  -496,  -581,  -506,
  -581,  -509,  -581,  -510,  -581,  -331,  -548,  -441,  -444,  -445,
  -446,  -447,  -581,  -274,   -28,  -194,   -29,  -195,  -581,  -581,
  -581,  -362,  -385,   -56,  -252,  -268,  -399,  -401,    -8,   -10,
  -414,  -355,  -581,  -581,  -412,  -580,  -580,  -580,  -580,  -529,
  -306,  -581,  -307,  -581,  -581,  -581,   -10,  -318,  -321,   -10,
  -327,  -329,  -581,  -493,  -546,  -498,  -499,  -499,  -499,  -581,
  -537,  -499,  -535,  -513,  -443,  -236,  -259,  -581,  -413,   -10,
  -472,  -581,  -581,  -283,  -411,  -378,  -581,  -369,  -372,  -375,
   -10,  -310,  -313,  -271,  -580,   -10,  -581,  -479,  -494,  -581,
  -502,  -581,  -504,  -581,  -507,  -581,  -511,   -10,  -407,  -580,
  -581,  -581,  -290,  -580,  -580,  -403,  -404,  -405,  -581,  -324,
  -499,  -499,  -499,  -499,  -581,  -406,  -581,  -560,  -561,  -564,
  -289,  -370,  -353,  -319,  -581,  -500,  -503,  -505,  -508,  -332,
  -291,  -499,  -501 ]

clist = [
'13,389,318,358,359,297,297,362,555,457,251,251,251,326,603,407,595,599',
'209,209,103,377,310,209,209,209,115,115,336,734,287,13,291,291,780,725',
'297,297,576,577,100,315,300,252,252,252,501,588,394,416,417,418,419',
'209,209,439,444,449,209,209,99,12,209,366,375,430,864,680,791,680,663',
'573,840,454,5,587,580,582,629,103,755,759,110,195,639,115,558,561,699',
'950,565,683,12,270,277,279,744,118,118,115,13,867,613,545,209,209,209',
'209,13,13,253,253,253,283,2,678,1,285,414,363,918,509,510,511,194,371',
'730,422,407,692,687,689,691,497,249,265,266,910,514,702,703,736,320',
'693,701,513,519,435,436,743,391,683,396,398,319,322,405,323,369,617',
'390,12,624,312,360,868,361,869,770,12,12,975,775,621,5,939,380,779,950',
'623,794,953,420,5,324,566,315,315,742,248,629,498,522,790,523,995,13',
'209,209,209,209,763,844,922,209,209,209,209,393,400,638,403,115,897',
'796,13,209,432,797,882,943,448,217,421,27,432,791,740,946,862,,,,,,506',
',,,,,,27,27,,,,27,27,27,,,,760,,27,,12,251,251,,297,680,680,,,,251,',
',,209,209,,297,541,12,27,27,,209,569,27,27,13,683,27,588,291,13,751',
'517,252,556,,557,336,532,103,546,252,291,274,278,,600,601,,1012,,,501',
'13,734,297,749,439,444,527,,,996,799,,27,,,,27,27,27,27,27,27,,708,',
'622,526,663,,584,,772,,12,719,15,,,12,790,,297,14,937,,,518,253,209',
'209,,,987,,283,253,,744,528,283,,12,,534,,,15,103,375,,516,520,,14,293',
'293,,,713,524,209,718,618,,,,791,,428,433,,,713,744,,452,456,,370,,670',
'671,,,,368,376,602,27,27,27,27,27,926,,,27,27,27,27,,,,,,,,27,27,115',
',,,115,854,15,588,,,315,315,,14,15,15,,947,,948,713,14,14,209,209,,',
'457,1005,713,877,825,,,880,881,,851,853,,680,448,710,856,858,717,859',
',,,,886,887,694,27,27,645,,847,,646,744,683,27,654,297,,27,835,659,',
'118,27,,662,118,297,,,,209,315,790,680,315,,13,,809,936,546,,291,812',
'209,27,814,209,,,,546,15,291,,,297,,1000,14,,455,209,764,,448,769,,',
',929,15,774,776,,,13,13,14,448,274,,278,738,686,688,690,,,959,,,,27',
'27,,679,12,970,,,,315,845,13,315,,,13,,705,315,,13,,209,795,,209,,,',
',,209,27,756,756,209,,209,,825,,997,,448,12,12,,15,823,448,,976,15,777',
'14,,,,293,14,,,729,336,,,,978,209,209,,293,12,,209,15,12,,,,209,12,14',
'965,967,968,969,,,,,,,,13,,297,,,1004,,,,,27,27,,,13,297,,376,,,,739',
',,13,13,,546,,291,956,,,,,,656,875,,,838,660,291,,,,656,,,,,895,,,,',
'376,1011,,,,12,,,,,,27,432,786,,,,27,,12,,,,,,27,,,27,12,12,448,,,,',
'209,,,,,13,,27,,13,13,,830,872,656,656,656,,,,,27,27,878,,879,,13,,883',
',,286,209,209,,,,,,,931,,115,,,,,,27,,,,27,,,,,27,,27,,,27,,,12,,,27',
'12,12,13,27,713,27,,36,,,,915,,,,805,807,,12,,,810,942,,,,209,456,13',
'13,,,,,15,,27,27,36,290,290,14,27,,,,,293,27,,,,756,,,,297,,293,,783',
',27,12,,786,,,,,365,379,,379,15,15,27,,,13,,14,14,961,,,27,27,376,12',
'12,,,,,,13,1006,,13,,,15,,,,15,36,,14,,15,,14,,36,36,,14,13,,737,,,',
',,427,,,13,745,,,,13,315,,,,12,,,,,,286,13,656,209,,660,,656,27,,,12',
',27,12,,,27,27,,904,906,,944,448,455,786,788,786,,786,,,,12,27,,,,15',
',27,27,,,12,14,,,,12,,,15,,,,36,,,14,,12,15,15,,,,,286,14,14,783,,286',
'293,36,,,,27,,,,,,,,293,,,786,,,,,,,,,,,,,27,,27,27,,,,,,,,,,786,,786',
',786,,786,,,,,,,,,,,,,15,,,,15,15,,14,,36,,14,14,290,36,,786,,,,,27',
'15,889,891,893,290,,901,14,,,,,,,,36,27,,783,27,,783,208,783,,783,,788',
',,,,,,,,,,,27,,,,,379,15,,,,,27,,14,,,27,,313,,,,,357,357,,,357,27,',
'27,,15,15,,,,,,14,14,,,,379,741,,783,741,,,,,,,,,925,,,,,927,,928,,',
',,357,357,357,357,783,,783,,783,,783,,,,15,,,,964,,,14,,218,787,963',
',250,250,250,951,15,,,15,,,,14,783,,14,,307,308,309,,,,,,980,982,984',
'15,,986,,250,250,,14,,,,15,,,,,15,,14,,,,,14,,,,,15,,,,731,732,,14,',
'788,,,,,,,,,,,460,461,993,1015,1016,1017,1018,,321,,470,,752,,,1001',
'754,1002,,1003,36,762,,,1022,,290,,,,,,,,,,,290,,,,,,,,,,,,,1021,,,',
',,,,,,36,36,,,,,,379,,,,,,,,,,,,,787,,,,,,,,36,,314,,36,327,,824,,36',
',250,434,250,250,,,,453,458,,828,395,,397,397,401,404,397,,,833,834',
'218,,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487',
'488,489,490,491,492,493,494,495,496,,,429,,,,357,357,,250,459,250,,',
',,,250,250,,,,,36,,250,250,,,,,,,,250,,741,36,627,787,,787,,787,,,,36',
'36,,,,290,,,,,,,,503,,505,,552,290,902,,507,508,,,,,,,,,,,,,,,,,,314',
'314,,,,,,,,,,,,,,,,787,,,,,,,921,,,,,,,,,36,,,,36,36,,,,,787,,787,,787',
',787,933,934,,,,36,,,,,,,395,,,,,,,,,,515,,,,,,787,,313,,,,,,,,,,,,',
',,,,,250,,36,958,,,,,,,,,,,724,,,,,,974,,,,,,,,36,36,,,,250,250,,453',
'672,434,,,,,988,,,,,,,,648,,,994,,,,,998,,,,,,,674,,,250,,250,,250,',
',,,,36,357,,778,960,,,,,,,697,,,,,,36,,,36,,,,,250,,,250,,,,,,,,,721',
'722,723,36,681,,321,,684,,,,250,,36,250,,,,36,,,,,,698,655,,,,,36,,',
',,655,,,,,,,,,,,,,,,314,314,,,,,,,250,,,250,681,,,321,,250,,,,,,,,,',
',,,,,,,675,,,,,,,,,,,655,655,655,675,,,250,,,806,808,,,675,675,811,',
',813,357,,672,815,,,,314,,,314,,,,,,,,,,250,,,250,,,,,,,,,,250,250,',
',,801,,,,,,,,,,,,,,,,,,,,,,,,,,250,,,,,,,826,,,827,,,,314,,,314,,,681',
'321,,314,,,,,,,,,357,,,,,250,,,,,,,,,,,,,,843,,,,,,250,,,,,,,,,,,,,',
',,,,,250,905,907,,,,,,,,,,459,,806,808,811,,,,,,,,,,,,,250,,,884,,,',
',,,,,,,,,655,,,,,655,903,,,,,,841,846,,,,,,,,,,,,,,,,,,,,,,459,,,,841',
',841,,,,,,250,,,,,,,,,,,,,,907,905,955,,,,250,,,,,,,,,,,,,,,,,,,,,250',
',,,,,,,,,952,,,,,,,,,,,,250,,,,,,,,321,,,,,,,,,920,,,,924,,,,,,,,973',
',,250,,,,,,,,,,,,,,,,,,,973,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,841,,,,,',
',,,,,,,,,314,,,,,841' ]
        racc_goto_table = arr = ::Array.new(2385, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'21,48,22,16,16,53,53,16,8,17,30,30,30,107,83,48,80,80,21,21,86,47,52',
'21,21,21,49,49,110,109,42,21,21,21,87,10,53,53,113,113,6,30,43,57,57',
'57,65,150,131,16,16,16,16,21,21,34,34,34,21,21,4,20,21,21,21,25,81,60',
'147,60,64,115,11,25,7,153,115,115,135,86,82,82,14,14,135,49,58,58,60',
'156,58,159,20,35,35,35,152,51,51,49,21,11,46,44,21,21,21,21,21,21,59',
'59,59,39,2,37,1,40,5,4,12,34,34,34,15,18,60,28,48,37,64,64,64,54,32',
'32,32,55,62,37,37,117,59,63,66,36,67,22,22,117,75,159,132,132,76,77',
'132,79,84,85,88,20,89,90,91,92,93,94,95,20,20,96,97,98,7,99,100,101',
'156,102,103,104,7,7,105,106,30,30,108,118,135,119,121,117,122,123,21',
'21,21,21,21,124,125,126,21,21,21,21,130,133,134,136,49,137,138,21,21',
'57,139,141,144,49,19,2,38,57,147,145,149,154,,,,,,131,,,,,,,38,38,,',
',38,38,38,,,,83,,38,,20,30,30,,53,60,60,,,,30,,,,21,21,,53,52,20,38',
'38,,21,107,38,38,21,159,38,150,21,21,150,57,57,52,,52,110,43,86,42,57',
'21,61,61,,16,16,,81,,,65,21,109,53,153,34,34,6,,,11,135,,38,,,,38,38',
'38,38,38,38,,44,,47,4,64,,21,,46,,20,44,24,,,20,117,,53,23,82,,,59,59',
'21,21,,,87,,39,59,,152,40,39,,20,,40,,,24,86,21,,32,32,,23,23,23,,,34',
'32,21,34,86,,,,147,,19,19,,,34,152,,19,19,,24,,22,22,,,,23,23,4,38,38',
'38,38,38,117,,,38,38,38,38,,,,,,,,38,38,49,,,,49,113,24,150,,,30,30',
',23,24,24,,117,,117,34,23,23,21,21,,,17,10,34,8,65,,,8,8,,115,115,,60',
'49,22,115,115,22,115,,,,,113,113,52,38,38,14,,58,,14,152,159,38,35,53',
',38,44,35,,51,38,,35,51,53,,,,21,30,117,60,30,,21,,36,80,42,,21,36,21',
'38,36,21,,,,42,24,21,,,53,,117,23,,24,21,22,,49,22,,,,150,24,22,16,',
',21,21,23,49,61,,61,21,35,35,35,,,80,,,,38,38,,59,20,80,,,,30,25,21',
'30,,,21,,7,30,,21,,21,52,,21,,,,,,21,38,86,86,21,,21,,65,,83,,49,20',
'20,,24,107,49,,8,24,86,23,,,,23,23,,,59,110,,,,113,21,21,,23,20,,21',
'24,20,,,,21,20,23,115,115,115,115,,,,,,,,21,,53,,,8,,,,,38,38,,,21,53',
',23,,,,112,,,21,21,,42,,21,65,,,,,,61,16,,,42,61,21,,,,61,,,,,48,,,',
',23,115,,,,20,,,,,,38,57,112,,,,38,,20,,,,,,38,,,38,20,20,49,,,,,21',
',,,,21,,38,,21,21,,59,57,61,61,61,,,,,38,38,86,,86,,21,,86,,,9,21,21',
',,,,,,16,,49,,,,,,38,,,,38,,,,,38,,38,,,38,,,20,,,38,20,20,21,38,34',
'38,,45,,,,57,,,,19,19,,20,,,19,52,,,,21,19,21,21,,,,,24,,38,38,45,45',
'45,23,38,,,,,23,38,,,,86,,,,53,,23,,143,,38,20,,112,,,,,45,45,,45,24',
'24,38,,,21,,23,23,21,,,38,38,23,20,20,,,,,,21,22,,21,,,24,,,,24,45,',
'23,,24,,23,,45,45,,23,21,,116,,,,,,9,,,21,116,,,,21,30,,,,20,,,,,,9',
'21,61,21,,61,,61,38,,,20,,38,20,,,38,38,,19,19,,112,49,24,112,116,112',
',112,,,,20,38,,,,24,,38,38,,,20,23,,,,20,,,24,,,,45,,,23,,20,24,24,',
',,,9,23,23,143,,9,23,45,,,,38,,,,,,,,23,,,112,,,,,,,,,,,,,38,,38,38',
',,,,,,,,,112,,112,,112,,112,,,,,,,,,,,,,24,,,,24,24,,23,,45,,23,23,45',
'45,,112,,,,,38,24,148,148,148,45,,23,23,,,,,,,,45,38,,143,38,,143,27',
'143,,143,,116,,,,,,,,,,,,38,,,,,45,24,,,,,38,,23,,,38,,27,,,,,27,27',
',,27,38,,38,,24,24,,,,,,23,23,,,,45,114,,143,114,,,,,,,,,116,,,,,116',
',116,,,,,27,27,27,27,143,,143,,143,,143,,,,24,,,,24,,,23,,29,114,23',
',29,29,29,116,24,,,24,,,,23,143,,23,,29,29,29,,,,,,148,148,148,24,,148',
',29,29,,23,,,,24,,,,,24,,23,,,,,23,,,,,24,,,,9,9,,23,,116,,,,,,,,,,',
'27,27,116,148,148,148,148,,26,,27,,9,,,116,9,116,,116,45,9,,,148,,45',
',,,,,,,,,,45,,,,,,,,,,,,,116,,,,,,,,,,45,45,,,,,,45,,,,,,,,,,,,,114',
',,,,,,,45,,56,,45,56,,9,,45,,29,29,29,29,,,,29,29,,9,56,,56,56,56,56',
'56,,,9,9,29,,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29',
'29,29,29,29,29,29,,,26,,,,27,27,,29,26,29,,,,,,29,29,,,,,45,,29,29,',
',,,,,,29,,114,45,27,114,,114,,114,,,,45,45,,,,45,,,,,,,,26,,26,,29,45',
'9,,26,26,,,,,,,,,,,,,,,,,,56,56,,,,,,,,,,,,,,,,114,,,,,,,9,,,,,,,,,45',
',,,45,45,,,,,114,,114,,114,,114,9,9,,,,45,,,,,,,56,,,,,,,,,,56,,,,,',
'114,,27,,,,,,,,,,,,,,,,,,29,,45,9,,,,,,,,,,,27,,,,,,9,,,,,,,,45,45,',
',,29,29,,29,29,29,,,,,9,,,,,,,,26,,,9,,,,,9,,,,,,,29,,,29,,29,,29,,',
',,,45,27,,27,45,,,,,,,29,,,,,,45,,,45,,,,,29,,,29,,,,,,,,,29,29,29,45',
'26,,26,,26,,,,29,,45,29,,,,45,,,,,,26,56,,,,,45,,,,,56,,,,,,,,,,,,,',
',56,56,,,,,,,29,,,29,26,,,26,,29,,,,,,,,,,,,,,,,,56,,,,,,,,,,,56,56',
'56,56,,,29,,,29,29,,,56,56,29,,,29,27,,29,29,,,,56,,,56,,,,,,,,,,29',
',,29,,,,,,,,,,29,29,,,,26,,,,,,,,,,,,,,,,,,,,,,,,,,29,,,,,,,26,,,26',
',,,56,,,56,,,26,26,,56,,,,,,,,,27,,,,,29,,,,,,,,,,,,,,26,,,,,,29,,,',
',,,,,,,,,,,,,,,29,29,29,,,,,,,,,,26,,29,29,29,,,,,,,,,,,,,29,,,26,,',
',,,,,,,,,,56,,,,,56,26,,,,,,56,56,,,,,,,,,,,,,,,,,,,,,,26,,,,56,,56',
',,,,,29,,,,,,,,,,,,,,29,29,29,,,,29,,,,,,,,,,,,,,,,,,,,,29,,,,,,,,,',
'26,,,,,,,,,,,,29,,,,,,,,26,,,,,,,,,56,,,,56,,,,,,,,26,,,29,,,,,,,,,',
',,,,,,,,,26,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,56,,,,,,,,,,,,,,,56,,,,,56' ]
        racc_goto_check = arr = ::Array.new(2385, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_goto_pointer = [
   nil,   116,   114,   nil,    57,    18,    37,    74,  -304,   771,
  -519,  -653,  -720,   nil,    75,   116,   -55,  -196,    62,   203,
    61,     0,   -52,   354,   347,  -132,  1307,  1148,    17,  1256,
   -13,   nil,   111,   nil,  -146,    66,  -125,  -383,   224,    82,
    86,   nil,    -2,     9,  -198,   847,  -271,   -43,   -65,    19,
   nil,    90,   -20,   -27,  -113,  -684,  1390,    20,  -230,    87,
  -433,   275,  -133,  -371,  -379,  -207,  -377,  -126,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    84,    99,    99,   nil,   100,
  -342,  -686,  -520,  -349,    95,  -218,    17,  -589,    94,  -228,
   111,   104,  -590,   105,  -592,  -443,  -766,  -445,  -205,  -704,
   111,  -445,  -210,  -444,  -714,   127,  -139,   -44,  -391,  -542,
   -29,   nil,   124,  -293,   653,  -258,   390,  -430,   168,   -56,
   nil,   -83,   -82,  -779,  -404,  -524,  -641,   nil,   nil,   nil,
   136,   -26,    76,   131,  -190,  -316,   132,  -583,  -417,  -414,
   nil,  -562,   nil,   277,  -665,  -348,   nil,  -555,   357,  -660,
  -302,   nil,  -483,  -274,  -521,   nil,  -801,   nil,   nil,  -411 ]

racc_goto_default = [
   nil,   nil,   nil,     3,   nil,     4,   364,   282,   nil,   554,
   nil,   865,   nil,   281,   nil,   nil,   nil,    10,    11,    17,
   214,   306,   nil,   212,   213,   nil,   256,    16,   nil,    20,
    21,    22,   nil,    26,   716,   nil,   nil,   nil,   296,    30,
   nil,    32,    35,    34,   nil,   210,   374,   nil,   117,   442,
   116,    70,   nil,    43,   nil,   nil,   572,   316,   nil,   317,
   254,   440,   nil,   nil,   657,   499,   nil,   nil,   272,    44,
    45,    46,    47,    48,    49,    50,   nil,   273,    56,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   596,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   329,   328,
   735,   331,   332,   nil,   333,   nil,   334,   335,   nil,   nil,
   446,   nil,   nil,   nil,   nil,   nil,   nil,    69,    71,    72,
    73,   nil,   nil,   nil,   nil,   634,   nil,   nil,   nil,   nil,
   406,   782,   339,   341,   784,   342,   785,   945,   nil,   789,
   348,   343,   350,   nil,   590,   591,   793,   353,   356,   262 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 141, :_reduce_none,
  2, 142, :_reduce_2,
  0, 143, :_reduce_3,
  1, 143, :_reduce_4,
  3, 143, :_reduce_5,
  1, 145, :_reduce_none,
  4, 145, :_reduce_7,
  4, 148, :_reduce_8,
  2, 149, :_reduce_9,
  0, 153, :_reduce_10,
  1, 153, :_reduce_11,
  3, 153, :_reduce_12,
  0, 168, :_reduce_13,
  4, 147, :_reduce_14,
  3, 147, :_reduce_15,
  3, 147, :_reduce_none,
  3, 147, :_reduce_17,
  2, 147, :_reduce_18,
  3, 147, :_reduce_19,
  3, 147, :_reduce_20,
  3, 147, :_reduce_21,
  3, 147, :_reduce_22,
  3, 147, :_reduce_23,
  4, 147, :_reduce_none,
  1, 147, :_reduce_none,
  3, 147, :_reduce_26,
  3, 147, :_reduce_27,
  6, 147, :_reduce_none,
  6, 147, :_reduce_none,
  5, 147, :_reduce_30,
  5, 147, :_reduce_none,
  5, 147, :_reduce_none,
  3, 147, :_reduce_none,
  3, 147, :_reduce_34,
  3, 147, :_reduce_35,
  3, 147, :_reduce_36,
  1, 147, :_reduce_none,
  3, 157, :_reduce_38,
  3, 157, :_reduce_39,
  1, 167, :_reduce_none,
  3, 167, :_reduce_41,
  3, 167, :_reduce_42,
  2, 167, :_reduce_43,
  2, 167, :_reduce_44,
  1, 167, :_reduce_none,
  1, 156, :_reduce_none,
  1, 159, :_reduce_none,
  1, 159, :_reduce_none,
  2, 159, :_reduce_49,
  2, 159, :_reduce_50,
  2, 159, :_reduce_51,
  1, 171, :_reduce_none,
  4, 171, :_reduce_none,
  4, 171, :_reduce_none,
  4, 171, :_reduce_none,
  4, 176, :_reduce_none,
  2, 170, :_reduce_57,
  3, 170, :_reduce_none,
  4, 170, :_reduce_59,
  5, 170, :_reduce_none,
  4, 170, :_reduce_61,
  5, 170, :_reduce_none,
  4, 170, :_reduce_63,
  5, 170, :_reduce_none,
  2, 170, :_reduce_65,
  2, 170, :_reduce_66,
  1, 158, :_reduce_67,
  3, 158, :_reduce_68,
  1, 180, :_reduce_69,
  3, 180, :_reduce_70,
  1, 179, :_reduce_71,
  2, 179, :_reduce_72,
  3, 179, :_reduce_73,
  5, 179, :_reduce_74,
  2, 179, :_reduce_75,
  4, 179, :_reduce_76,
  2, 179, :_reduce_77,
  4, 179, :_reduce_78,
  1, 179, :_reduce_79,
  3, 179, :_reduce_80,
  1, 182, :_reduce_81,
  3, 182, :_reduce_82,
  2, 181, :_reduce_83,
  3, 181, :_reduce_84,
  1, 184, :_reduce_85,
  3, 184, :_reduce_86,
  1, 183, :_reduce_87,
  4, 183, :_reduce_88,
  3, 183, :_reduce_89,
  3, 183, :_reduce_none,
  3, 183, :_reduce_none,
  3, 183, :_reduce_none,
  2, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 164, :_reduce_95,
  4, 164, :_reduce_96,
  4, 164, :_reduce_97,
  3, 164, :_reduce_98,
  3, 164, :_reduce_99,
  3, 164, :_reduce_100,
  3, 164, :_reduce_101,
  2, 164, :_reduce_102,
  1, 164, :_reduce_none,
  1, 186, :_reduce_none,
  2, 187, :_reduce_105,
  1, 187, :_reduce_106,
  3, 187, :_reduce_107,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_111,
  1, 188, :_reduce_112,
  1, 154, :_reduce_113,
  1, 154, :_reduce_none,
  1, 155, :_reduce_115,
  3, 155, :_reduce_116,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  3, 169, :_reduce_191,
  5, 169, :_reduce_192,
  3, 169, :_reduce_193,
  6, 169, :_reduce_194,
  6, 169, :_reduce_195,
  5, 169, :_reduce_196,
  5, 169, :_reduce_none,
  5, 169, :_reduce_none,
  5, 169, :_reduce_none,
  4, 169, :_reduce_none,
  3, 169, :_reduce_none,
  3, 169, :_reduce_202,
  3, 169, :_reduce_203,
  3, 169, :_reduce_204,
  3, 169, :_reduce_205,
  3, 169, :_reduce_206,
  3, 169, :_reduce_207,
  3, 169, :_reduce_208,
  3, 169, :_reduce_209,
  4, 169, :_reduce_210,
  4, 169, :_reduce_211,
  2, 169, :_reduce_212,
  2, 169, :_reduce_213,
  3, 169, :_reduce_214,
  3, 169, :_reduce_215,
  3, 169, :_reduce_216,
  3, 169, :_reduce_217,
  3, 169, :_reduce_218,
  3, 169, :_reduce_219,
  3, 169, :_reduce_220,
  3, 169, :_reduce_221,
  3, 169, :_reduce_222,
  3, 169, :_reduce_223,
  3, 169, :_reduce_224,
  3, 169, :_reduce_225,
  3, 169, :_reduce_226,
  2, 169, :_reduce_227,
  2, 169, :_reduce_228,
  3, 169, :_reduce_229,
  3, 169, :_reduce_230,
  3, 169, :_reduce_231,
  3, 169, :_reduce_232,
  3, 169, :_reduce_233,
  0, 194, :_reduce_234,
  0, 195, :_reduce_235,
  7, 169, :_reduce_236,
  1, 169, :_reduce_none,
  1, 166, :_reduce_none,
  1, 162, :_reduce_239,
  2, 162, :_reduce_240,
  2, 162, :_reduce_241,
  4, 162, :_reduce_242,
  2, 162, :_reduce_243,
  3, 162, :_reduce_244,
  3, 201, :_reduce_245,
  2, 203, :_reduce_none,
  1, 204, :_reduce_247,
  1, 204, :_reduce_none,
  1, 202, :_reduce_249,
  1, 202, :_reduce_none,
  2, 202, :_reduce_251,
  4, 202, :_reduce_252,
  2, 202, :_reduce_253,
  1, 172, :_reduce_254,
  2, 172, :_reduce_255,
  2, 172, :_reduce_256,
  4, 172, :_reduce_257,
  1, 172, :_reduce_258,
  4, 206, :_reduce_none,
  1, 206, :_reduce_none,
  0, 208, :_reduce_261,
  2, 175, :_reduce_262,
  1, 207, :_reduce_none,
  2, 207, :_reduce_264,
  3, 207, :_reduce_265,
  2, 200, :_reduce_266,
  2, 205, :_reduce_267,
  0, 205, :_reduce_268,
  1, 197, :_reduce_269,
  2, 197, :_reduce_270,
  3, 197, :_reduce_271,
  4, 197, :_reduce_272,
  3, 165, :_reduce_273,
  4, 165, :_reduce_274,
  2, 165, :_reduce_275,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  0, 230, :_reduce_285,
  4, 193, :_reduce_286,
  4, 193, :_reduce_287,
  3, 193, :_reduce_288,
  3, 193, :_reduce_289,
  2, 193, :_reduce_290,
  4, 193, :_reduce_291,
  4, 193, :_reduce_292,
  3, 193, :_reduce_293,
  3, 193, :_reduce_294,
  1, 193, :_reduce_295,
  4, 193, :_reduce_296,
  3, 193, :_reduce_297,
  1, 193, :_reduce_298,
  5, 193, :_reduce_299,
  4, 193, :_reduce_300,
  3, 193, :_reduce_301,
  2, 193, :_reduce_302,
  1, 193, :_reduce_none,
  2, 193, :_reduce_304,
  2, 193, :_reduce_305,
  6, 193, :_reduce_306,
  6, 193, :_reduce_307,
  0, 231, :_reduce_308,
  0, 232, :_reduce_309,
  7, 193, :_reduce_310,
  0, 233, :_reduce_311,
  0, 234, :_reduce_312,
  7, 193, :_reduce_313,
  5, 193, :_reduce_314,
  4, 193, :_reduce_315,
  5, 193, :_reduce_316,
  0, 235, :_reduce_317,
  0, 236, :_reduce_318,
  9, 193, :_reduce_319,
  0, 237, :_reduce_320,
  6, 193, :_reduce_321,
  0, 238, :_reduce_322,
  0, 239, :_reduce_323,
  8, 193, :_reduce_324,
  0, 240, :_reduce_325,
  0, 241, :_reduce_326,
  6, 193, :_reduce_327,
  0, 242, :_reduce_328,
  6, 193, :_reduce_329,
  0, 243, :_reduce_330,
  0, 244, :_reduce_331,
  9, 193, :_reduce_332,
  1, 193, :_reduce_333,
  1, 193, :_reduce_334,
  1, 193, :_reduce_335,
  1, 193, :_reduce_none,
  1, 161, :_reduce_none,
  1, 220, :_reduce_none,
  1, 220, :_reduce_none,
  1, 220, :_reduce_none,
  2, 220, :_reduce_none,
  1, 222, :_reduce_none,
  1, 222, :_reduce_none,
  1, 222, :_reduce_none,
  2, 219, :_reduce_345,
  3, 245, :_reduce_346,
  2, 245, :_reduce_347,
  1, 245, :_reduce_none,
  1, 245, :_reduce_none,
  3, 246, :_reduce_350,
  3, 246, :_reduce_351,
  1, 221, :_reduce_352,
  5, 221, :_reduce_353,
  1, 151, :_reduce_none,
  2, 151, :_reduce_355,
  1, 248, :_reduce_356,
  3, 248, :_reduce_357,
  3, 249, :_reduce_358,
  1, 177, :_reduce_none,
  2, 177, :_reduce_360,
  1, 177, :_reduce_361,
  3, 177, :_reduce_362,
  4, 250, :_reduce_363,
  2, 250, :_reduce_364,
  2, 250, :_reduce_365,
  1, 250, :_reduce_366,
  2, 255, :_reduce_367,
  1, 255, :_reduce_368,
  6, 247, :_reduce_369,
  8, 247, :_reduce_370,
  4, 247, :_reduce_371,
  6, 247, :_reduce_372,
  4, 247, :_reduce_373,
  2, 247, :_reduce_374,
  6, 247, :_reduce_375,
  2, 247, :_reduce_376,
  4, 247, :_reduce_377,
  6, 247, :_reduce_378,
  2, 247, :_reduce_379,
  4, 247, :_reduce_380,
  2, 247, :_reduce_381,
  4, 247, :_reduce_382,
  1, 247, :_reduce_383,
  0, 259, :_reduce_384,
  5, 258, :_reduce_385,
  2, 173, :_reduce_386,
  4, 173, :_reduce_none,
  4, 173, :_reduce_none,
  4, 173, :_reduce_none,
  2, 218, :_reduce_390,
  4, 218, :_reduce_391,
  4, 218, :_reduce_392,
  3, 218, :_reduce_393,
  4, 218, :_reduce_394,
  3, 218, :_reduce_395,
  2, 218, :_reduce_396,
  1, 218, :_reduce_397,
  0, 261, :_reduce_398,
  5, 217, :_reduce_399,
  0, 262, :_reduce_400,
  5, 217, :_reduce_401,
  0, 264, :_reduce_402,
  6, 223, :_reduce_403,
  1, 263, :_reduce_404,
  1, 263, :_reduce_none,
  6, 150, :_reduce_406,
  0, 150, :_reduce_407,
  1, 265, :_reduce_408,
  1, 265, :_reduce_none,
  1, 265, :_reduce_none,
  2, 266, :_reduce_411,
  1, 266, :_reduce_412,
  2, 152, :_reduce_413,
  1, 152, :_reduce_none,
  1, 209, :_reduce_none,
  1, 209, :_reduce_none,
  1, 209, :_reduce_none,
  1, 210, :_reduce_418,
  1, 269, :_reduce_none,
  2, 269, :_reduce_420,
  3, 270, :_reduce_421,
  1, 270, :_reduce_422,
  3, 211, :_reduce_423,
  3, 212, :_reduce_424,
  3, 213, :_reduce_425,
  3, 213, :_reduce_426,
  1, 273, :_reduce_427,
  3, 273, :_reduce_428,
  1, 274, :_reduce_429,
  2, 274, :_reduce_430,
  3, 214, :_reduce_431,
  3, 214, :_reduce_432,
  1, 276, :_reduce_433,
  3, 276, :_reduce_434,
  1, 271, :_reduce_435,
  2, 271, :_reduce_436,
  1, 272, :_reduce_437,
  2, 272, :_reduce_438,
  1, 275, :_reduce_439,
  0, 278, :_reduce_440,
  3, 275, :_reduce_441,
  0, 279, :_reduce_442,
  4, 275, :_reduce_443,
  1, 277, :_reduce_444,
  1, 277, :_reduce_445,
  1, 277, :_reduce_446,
  1, 277, :_reduce_none,
  2, 191, :_reduce_448,
  1, 191, :_reduce_449,
  1, 280, :_reduce_none,
  1, 280, :_reduce_none,
  1, 280, :_reduce_none,
  1, 280, :_reduce_none,
  3, 268, :_reduce_454,
  1, 267, :_reduce_455,
  1, 267, :_reduce_456,
  2, 267, :_reduce_457,
  2, 267, :_reduce_458,
  2, 267, :_reduce_459,
  2, 267, :_reduce_460,
  1, 185, :_reduce_461,
  1, 185, :_reduce_462,
  1, 185, :_reduce_463,
  1, 185, :_reduce_464,
  1, 185, :_reduce_465,
  1, 185, :_reduce_466,
  1, 185, :_reduce_467,
  1, 185, :_reduce_468,
  1, 185, :_reduce_469,
  1, 185, :_reduce_470,
  1, 185, :_reduce_471,
  1, 215, :_reduce_472,
  1, 160, :_reduce_473,
  1, 163, :_reduce_474,
  1, 163, :_reduce_none,
  1, 225, :_reduce_476,
  3, 225, :_reduce_477,
  2, 225, :_reduce_478,
  4, 227, :_reduce_479,
  2, 227, :_reduce_480,
  1, 282, :_reduce_none,
  1, 282, :_reduce_none,
  2, 252, :_reduce_483,
  1, 252, :_reduce_484,
  1, 283, :_reduce_485,
  2, 284, :_reduce_486,
  1, 284, :_reduce_487,
  2, 285, :_reduce_488,
  1, 285, :_reduce_489,
  1, 251, :_reduce_490,
  3, 251, :_reduce_491,
  1, 286, :_reduce_492,
  3, 286, :_reduce_493,
  4, 287, :_reduce_494,
  2, 287, :_reduce_495,
  2, 287, :_reduce_496,
  1, 287, :_reduce_497,
  2, 288, :_reduce_498,
  0, 288, :_reduce_499,
  6, 281, :_reduce_500,
  8, 281, :_reduce_501,
  4, 281, :_reduce_502,
  6, 281, :_reduce_503,
  4, 281, :_reduce_504,
  6, 281, :_reduce_505,
  2, 281, :_reduce_506,
  4, 281, :_reduce_507,
  6, 281, :_reduce_508,
  2, 281, :_reduce_509,
  2, 281, :_reduce_510,
  4, 281, :_reduce_511,
  1, 281, :_reduce_512,
  0, 281, :_reduce_513,
  1, 290, :_reduce_none,
  1, 290, :_reduce_515,
  1, 291, :_reduce_516,
  1, 291, :_reduce_517,
  1, 291, :_reduce_518,
  1, 291, :_reduce_519,
  1, 292, :_reduce_520,
  3, 292, :_reduce_521,
  1, 224, :_reduce_none,
  1, 224, :_reduce_none,
  1, 294, :_reduce_524,
  3, 294, :_reduce_none,
  1, 295, :_reduce_526,
  3, 295, :_reduce_527,
  1, 293, :_reduce_none,
  4, 293, :_reduce_none,
  3, 293, :_reduce_none,
  2, 293, :_reduce_none,
  1, 293, :_reduce_none,
  1, 256, :_reduce_533,
  3, 256, :_reduce_534,
  3, 296, :_reduce_535,
  1, 289, :_reduce_536,
  3, 289, :_reduce_537,
  1, 297, :_reduce_none,
  1, 297, :_reduce_none,
  2, 257, :_reduce_540,
  1, 257, :_reduce_541,
  1, 298, :_reduce_none,
  1, 298, :_reduce_none,
  2, 254, :_reduce_544,
  2, 253, :_reduce_545,
  0, 253, :_reduce_546,
  1, 228, :_reduce_547,
  4, 228, :_reduce_548,
  0, 216, :_reduce_549,
  2, 216, :_reduce_550,
  1, 199, :_reduce_551,
  3, 199, :_reduce_552,
  3, 299, :_reduce_553,
  2, 299, :_reduce_554,
  4, 299, :_reduce_555,
  2, 299, :_reduce_556,
  1, 178, :_reduce_none,
  1, 178, :_reduce_none,
  1, 178, :_reduce_none,
  1, 174, :_reduce_none,
  1, 174, :_reduce_none,
  1, 174, :_reduce_none,
  1, 174, :_reduce_none,
  1, 260, :_reduce_none,
  1, 260, :_reduce_none,
  1, 260, :_reduce_none,
  1, 229, :_reduce_none,
  1, 229, :_reduce_none,
  0, 144, :_reduce_none,
  1, 144, :_reduce_none,
  0, 192, :_reduce_none,
  1, 192, :_reduce_none,
  0, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 226, :_reduce_none,
  1, 226, :_reduce_none,
  1, 146, :_reduce_none,
  2, 146, :_reduce_none,
  0, 196, :_reduce_580 ]

racc_reduce_n = 581

racc_shift_n = 1023

racc_token_table = {
  false => 0,
  :error => 1,
  :kCLASS => 2,
  :kMODULE => 3,
  :kDEF => 4,
  :kUNDEF => 5,
  :kBEGIN => 6,
  :kRESCUE => 7,
  :kENSURE => 8,
  :kEND => 9,
  :kIF => 10,
  :kUNLESS => 11,
  :kTHEN => 12,
  :kELSIF => 13,
  :kELSE => 14,
  :kCASE => 15,
  :kWHEN => 16,
  :kWHILE => 17,
  :kUNTIL => 18,
  :kFOR => 19,
  :kBREAK => 20,
  :kNEXT => 21,
  :kREDO => 22,
  :kRETRY => 23,
  :kIN => 24,
  :kDO => 25,
  :kDO_COND => 26,
  :kDO_BLOCK => 27,
  :kDO_LAMBDA => 28,
  :kRETURN => 29,
  :kYIELD => 30,
  :kSUPER => 31,
  :kSELF => 32,
  :kNIL => 33,
  :kTRUE => 34,
  :kFALSE => 35,
  :kAND => 36,
  :kOR => 37,
  :kNOT => 38,
  :kIF_MOD => 39,
  :kUNLESS_MOD => 40,
  :kWHILE_MOD => 41,
  :kUNTIL_MOD => 42,
  :kRESCUE_MOD => 43,
  :kALIAS => 44,
  :kDEFINED => 45,
  :klBEGIN => 46,
  :klEND => 47,
  :k__LINE__ => 48,
  :k__FILE__ => 49,
  :tIDENTIFIER => 50,
  :tFID => 51,
  :tGVAR => 52,
  :tIVAR => 53,
  :tCONSTANT => 54,
  :tLABEL => 55,
  :tCVAR => 56,
  :tNTH_REF => 57,
  :tBACK_REF => 58,
  :tSTRING_CONTENT => 59,
  :tINTEGER => 60,
  :tFLOAT => 61,
  :tREGEXP_END => 62,
  :tUPLUS => 63,
  :tUMINUS => 64,
  :tPOW => 65,
  :tCMP => 66,
  :tEQ => 67,
  :tEQQ => 68,
  :tNEQ => 69,
  :tGEQ => 70,
  :tLEQ => 71,
  :tANDOP => 72,
  :tOROP => 73,
  :tMATCH => 74,
  :tNMATCH => 75,
  :tJSDOT => 76,
  :tDOT => 77,
  :tDOT2 => 78,
  :tDOT3 => 79,
  :tAREF => 80,
  :tASET => 81,
  :tLSHFT => 82,
  :tRSHFT => 83,
  :tCOLON2 => 84,
  :tCOLON3 => 85,
  :tOP_ASGN => 86,
  :tASSOC => 87,
  :tLPAREN => 88,
  :tLPAREN2 => 89,
  :tRPAREN => 90,
  :tLPAREN_ARG => 91,
  :tRBRACK => 92,
  :tLBRACE => 93,
  :tLBRACE_ARG => 94,
  :tSTAR => 95,
  :tSTAR2 => 96,
  :tAMPER => 97,
  :tAMPER2 => 98,
  :tTILDE => 99,
  :tPERCENT => 100,
  :tDIVIDE => 101,
  :tPLUS => 102,
  :tMINUS => 103,
  :tLT => 104,
  :tGT => 105,
  :tPIPE => 106,
  :tBANG => 107,
  :tCARET => 108,
  :tLCURLY => 109,
  :tRCURLY => 110,
  :tBACK_REF2 => 111,
  :tSYMBEG => 112,
  :tSTRING_BEG => 113,
  :tXSTRING_BEG => 114,
  :tREGEXP_BEG => 115,
  :tWORDS_BEG => 116,
  :tAWORDS_BEG => 117,
  :tSTRING_DBEG => 118,
  :tSTRING_DVAR => 119,
  :tSTRING_END => 120,
  :tSTRING => 121,
  :tSYMBOL => 122,
  :tNL => 123,
  :tEH => 124,
  :tCOLON => 125,
  :tCOMMA => 126,
  :tSPACE => 127,
  :tSEMI => 128,
  :tLAMBDA => 129,
  :tLAMBEG => 130,
  :tLBRACK2 => 131,
  :tLBRACK => 132,
  :tJSLBRACK => 133,
  :tDSTAR => 134,
  :tLABEL_END => 135,
  :tEQL => 136,
  :tLOWEST => 137,
  "-@NUM" => 138,
  "+@NUM" => 139 }

racc_nt_base = 140

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "kCLASS",
  "kMODULE",
  "kDEF",
  "kUNDEF",
  "kBEGIN",
  "kRESCUE",
  "kENSURE",
  "kEND",
  "kIF",
  "kUNLESS",
  "kTHEN",
  "kELSIF",
  "kELSE",
  "kCASE",
  "kWHEN",
  "kWHILE",
  "kUNTIL",
  "kFOR",
  "kBREAK",
  "kNEXT",
  "kREDO",
  "kRETRY",
  "kIN",
  "kDO",
  "kDO_COND",
  "kDO_BLOCK",
  "kDO_LAMBDA",
  "kRETURN",
  "kYIELD",
  "kSUPER",
  "kSELF",
  "kNIL",
  "kTRUE",
  "kFALSE",
  "kAND",
  "kOR",
  "kNOT",
  "kIF_MOD",
  "kUNLESS_MOD",
  "kWHILE_MOD",
  "kUNTIL_MOD",
  "kRESCUE_MOD",
  "kALIAS",
  "kDEFINED",
  "klBEGIN",
  "klEND",
  "k__LINE__",
  "k__FILE__",
  "tIDENTIFIER",
  "tFID",
  "tGVAR",
  "tIVAR",
  "tCONSTANT",
  "tLABEL",
  "tCVAR",
  "tNTH_REF",
  "tBACK_REF",
  "tSTRING_CONTENT",
  "tINTEGER",
  "tFLOAT",
  "tREGEXP_END",
  "tUPLUS",
  "tUMINUS",
  "tPOW",
  "tCMP",
  "tEQ",
  "tEQQ",
  "tNEQ",
  "tGEQ",
  "tLEQ",
  "tANDOP",
  "tOROP",
  "tMATCH",
  "tNMATCH",
  "tJSDOT",
  "tDOT",
  "tDOT2",
  "tDOT3",
  "tAREF",
  "tASET",
  "tLSHFT",
  "tRSHFT",
  "tCOLON2",
  "tCOLON3",
  "tOP_ASGN",
  "tASSOC",
  "tLPAREN",
  "tLPAREN2",
  "tRPAREN",
  "tLPAREN_ARG",
  "tRBRACK",
  "tLBRACE",
  "tLBRACE_ARG",
  "tSTAR",
  "tSTAR2",
  "tAMPER",
  "tAMPER2",
  "tTILDE",
  "tPERCENT",
  "tDIVIDE",
  "tPLUS",
  "tMINUS",
  "tLT",
  "tGT",
  "tPIPE",
  "tBANG",
  "tCARET",
  "tLCURLY",
  "tRCURLY",
  "tBACK_REF2",
  "tSYMBEG",
  "tSTRING_BEG",
  "tXSTRING_BEG",
  "tREGEXP_BEG",
  "tWORDS_BEG",
  "tAWORDS_BEG",
  "tSTRING_DBEG",
  "tSTRING_DVAR",
  "tSTRING_END",
  "tSTRING",
  "tSYMBOL",
  "tNL",
  "tEH",
  "tCOLON",
  "tCOMMA",
  "tSPACE",
  "tSEMI",
  "tLAMBDA",
  "tLAMBEG",
  "tLBRACK2",
  "tLBRACK",
  "tJSLBRACK",
  "tDSTAR",
  "tLABEL_END",
  "tEQL",
  "tLOWEST",
  "\"-@NUM\"",
  "\"+@NUM\"",
  "$start",
  "program",
  "top_compstmt",
  "top_stmts",
  "opt_terms",
  "top_stmt",
  "terms",
  "stmt",
  "bodystmt",
  "compstmt",
  "opt_rescue",
  "opt_else",
  "opt_ensure",
  "stmts",
  "fitem",
  "undef_list",
  "expr_value",
  "command_asgn",
  "mlhs",
  "command_call",
  "var_lhs",
  "primary_value",
  "aref_args",
  "backref",
  "lhs",
  "mrhs",
  "arg_value",
  "expr",
  "@1",
  "arg",
  "command",
  "block_command",
  "call_args",
  "block_call",
  "operation2",
  "command_args",
  "cmd_brace_block",
  "opt_block_var",
  "operation",
  "mlhs_basic",
  "mlhs_entry",
  "mlhs_head",
  "mlhs_item",
  "mlhs_node",
  "mlhs_post",
  "variable",
  "cname",
  "cpath",
  "fname",
  "op",
  "reswords",
  "symbol",
  "opt_nl",
  "primary",
  "@2",
  "@3",
  "none",
  "args",
  "trailer",
  "assocs",
  "block_arg",
  "paren_args",
  "opt_call_args",
  "rparen",
  "opt_paren_args",
  "opt_block_arg",
  "call_args2",
  "open_args",
  "@4",
  "literal",
  "strings",
  "xstring",
  "regexp",
  "words",
  "awords",
  "var_ref",
  "assoc_list",
  "brace_block",
  "method_call",
  "lambda",
  "then",
  "if_tail",
  "do",
  "case_body",
  "for_var",
  "superclass",
  "term",
  "f_arglist",
  "singleton",
  "dot_or_colon",
  "@5",
  "@6",
  "@7",
  "@8",
  "@9",
  "@10",
  "@11",
  "@12",
  "@13",
  "@14",
  "@15",
  "@16",
  "@17",
  "@18",
  "@19",
  "f_larglist",
  "lambda_body",
  "block_param",
  "f_block_optarg",
  "f_block_opt",
  "block_args_tail",
  "f_block_kwarg",
  "f_kwrest",
  "opt_f_block_arg",
  "f_block_arg",
  "opt_block_args_tail",
  "f_arg",
  "f_rest_arg",
  "do_block",
  "@20",
  "operation3",
  "@21",
  "@22",
  "cases",
  "@23",
  "exc_list",
  "exc_var",
  "numeric",
  "dsym",
  "string",
  "string1",
  "string_contents",
  "xstring_contents",
  "word_list",
  "word",
  "string_content",
  "qword_list",
  "string_dvar",
  "@24",
  "@25",
  "sym",
  "f_args",
  "kwrest_mark",
  "f_label",
  "f_kw",
  "f_block_kw",
  "f_kwarg",
  "args_tail",
  "opt_args_tail",
  "f_optarg",
  "f_norm_arg",
  "f_bad_arg",
  "f_arg_item",
  "f_margs",
  "f_marg",
  "f_marg_list",
  "f_opt",
  "restarg_mark",
  "blkarg_mark",
  "assoc" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

def _reduce_2(val, _values, result)
                      result = new_compstmt val[0]
                    
    result
end

def _reduce_3(val, _values, result)
                      result = new_block
                    
    result
end

def _reduce_4(val, _values, result)
                      result = new_block val[0]
                    
    result
end

def _reduce_5(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

# reduce 6 omitted

def _reduce_7(val, _values, result)
                      result = val[2]
                    
    result
end

def _reduce_8(val, _values, result)
                      result = new_body(val[0], val[1], val[2], val[3])
                    
    result
end

def _reduce_9(val, _values, result)
                      result = new_compstmt val[0]
                    
    result
end

def _reduce_10(val, _values, result)
                      result = new_block
                    
    result
end

def _reduce_11(val, _values, result)
                      result = new_block val[0]
                    
    result
end

def _reduce_12(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_13(val, _values, result)
                      lexer.lex_state = :expr_fname
                    
    result
end

def _reduce_14(val, _values, result)
                      result = new_alias(val[0], val[1], val[3])
                    
    result
end

def _reduce_15(val, _values, result)
                      result = s(:valias, value(val[1]).to_sym, value(val[2]).to_sym)
                    
    result
end

# reduce 16 omitted

def _reduce_17(val, _values, result)
                      result = s(:valias, value(val[1]).to_sym, value(val[2]).to_sym)
                    
    result
end

def _reduce_18(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_19(val, _values, result)
                      result = new_if(val[1], val[2], val[0], nil)
                    
    result
end

def _reduce_20(val, _values, result)
                      result = new_if(val[1], val[2], nil, val[0])
                    
    result
end

def _reduce_21(val, _values, result)
                      result = new_while(val[1], val[2], val[0])
                    
    result
end

def _reduce_22(val, _values, result)
                      result = new_until(val[1], val[2], val[0])
                    
    result
end

def _reduce_23(val, _values, result)
                      result = new_rescue_mod(val[1], val[0], val[2])
                    
    result
end

# reduce 24 omitted

# reduce 25 omitted

def _reduce_26(val, _values, result)
                      result = s(:masgn, val[0], s(:to_ary, val[2]))
                    
    result
end

def _reduce_27(val, _values, result)
                      result = new_op_asgn val[1], val[0], val[2]
                    
    result
end

# reduce 28 omitted

# reduce 29 omitted

def _reduce_30(val, _values, result)
                      result = s(:op_asgn2, val[0], op_to_setter(val[2]), value(val[3]).to_sym, val[4])
                    
    result
end

# reduce 31 omitted

# reduce 32 omitted

# reduce 33 omitted

def _reduce_34(val, _values, result)
                      result = new_assign val[0], val[1], s(:svalue, val[2])
                    
    result
end

def _reduce_35(val, _values, result)
                      result = s(:masgn, val[0], s(:to_ary, val[2]))
                    
    result
end

def _reduce_36(val, _values, result)
                      result = s(:masgn, val[0], val[2])
                    
    result
end

# reduce 37 omitted

def _reduce_38(val, _values, result)
                      result = new_assign(val[0], val[1], val[2])
                    
    result
end

def _reduce_39(val, _values, result)
                      result = new_assign(val[0], val[1], val[2])
                    
    result
end

# reduce 40 omitted

def _reduce_41(val, _values, result)
                      result = s(:and, val[0], val[2])
                    
    result
end

def _reduce_42(val, _values, result)
                      result = s(:or, val[0], val[2])
                    
    result
end

def _reduce_43(val, _values, result)
                      result = new_unary_call(['!', []], val[1])
                    
    result
end

def _reduce_44(val, _values, result)
                      result = new_unary_call(val[0], val[1])
                    
    result
end

# reduce 45 omitted

# reduce 46 omitted

# reduce 47 omitted

# reduce 48 omitted

def _reduce_49(val, _values, result)
                      result = new_return(val[0], val[1])
                    
    result
end

def _reduce_50(val, _values, result)
                      result = new_break(val[0], val[1])
                    
    result
end

def _reduce_51(val, _values, result)
                      result = new_next(val[0], val[1])
                    
    result
end

# reduce 52 omitted

# reduce 53 omitted

# reduce 54 omitted

# reduce 55 omitted

# reduce 56 omitted

def _reduce_57(val, _values, result)
                      result = new_call(nil, val[0], val[1])
                    
    result
end

# reduce 58 omitted

def _reduce_59(val, _values, result)
                      result = new_js_call(val[0], val[2], val[3])
                    
    result
end

# reduce 60 omitted

def _reduce_61(val, _values, result)
                      result = new_call(val[0], val[2], val[3])
                    
    result
end

# reduce 62 omitted

def _reduce_63(val, _values, result)
                    result = new_call(val[0], val[2], val[3])
                  
    result
end

# reduce 64 omitted

def _reduce_65(val, _values, result)
                      result = new_super(val[0], val[1])
                    
    result
end

def _reduce_66(val, _values, result)
                      result = new_yield val[1]
                    
    result
end

def _reduce_67(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_68(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_69(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_70(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_71(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_72(val, _values, result)
                      result = val[0] << val[1]
                    
    result
end

def _reduce_73(val, _values, result)
                      result = val[0] << s(:splat, val[2])
                    
    result
end

def _reduce_74(val, _values, result)
                     result = (val[0] << s(:splat, val[2])).concat(val[4].children)
                   
    result
end

def _reduce_75(val, _values, result)
                      result = val[0] << s(:splat)
                    
    result
end

def _reduce_76(val, _values, result)
                      result = (val[0] << s(:splat)).concat(val[3].children)
                    
    result
end

def _reduce_77(val, _values, result)
                      result = s(:array, s(:splat, val[1]))
                    
    result
end

def _reduce_78(val, _values, result)
                      result = s(:array, s(:splat, val[1])).concat(val[3].children)
                    
    result
end

def _reduce_79(val, _values, result)
                      result = s(:array, s(:splat))
                    
    result
end

def _reduce_80(val, _values, result)
                      result = s(:array, s(:splat)).concat(val[2].children)
                    
    result
end

def _reduce_81(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_82(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_83(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

def _reduce_84(val, _values, result)
                      result = val[0] << val[1]
                    
    result
end

def _reduce_85(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

def _reduce_86(val, _values, result)
                      result = val[0] << val[2]
                    
    result
end

def _reduce_87(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_88(val, _values, result)
                      args = val[2] ? val[2] : []
                      result = s(:attrasgn, val[0], :[]=, s(:arglist, *args))
                    
    result
end

def _reduce_89(val, _values, result)
                      result = new_call val[0], val[2], []
                    
    result
end

# reduce 90 omitted

# reduce 91 omitted

# reduce 92 omitted

# reduce 93 omitted

# reduce 94 omitted

def _reduce_95(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_96(val, _values, result)
                      result = new_js_attrasgn(val[0], val[2])
                    
    result
end

def _reduce_97(val, _values, result)
                      result = new_attrasgn(val[0], :[]=, val[2])
                    
    result
end

def _reduce_98(val, _values, result)
                      result = new_attrasgn(val[0], op_to_setter(val[2]))
                    
    result
end

def _reduce_99(val, _values, result)
                      result = new_attrasgn(val[0], op_to_setter(val[2]))
                    
    result
end

def _reduce_100(val, _values, result)
                      result = new_attrasgn(val[0], op_to_setter(val[2]))
                    
    result
end

def _reduce_101(val, _values, result)
                      result = new_colon2(val[0], val[1], val[2])
                    
    result
end

def _reduce_102(val, _values, result)
                      result = new_colon3(val[0], val[1])
                    
    result
end

# reduce 103 omitted

# reduce 104 omitted

def _reduce_105(val, _values, result)
                      result = new_colon3(val[0], val[1])
                    
    result
end

def _reduce_106(val, _values, result)
                      result = new_const(val[0])
                    
    result
end

def _reduce_107(val, _values, result)
                      result = new_colon2(val[0], val[1], val[2])
                    
    result
end

# reduce 108 omitted

# reduce 109 omitted

# reduce 110 omitted

def _reduce_111(val, _values, result)
                      lexer.lex_state = :expr_end
                      result = val[0]
                    
    result
end

def _reduce_112(val, _values, result)
                      lexer.lex_state = :expr_end
                      result = val[0]
                    
    result
end

def _reduce_113(val, _values, result)
                      result = new_sym(val[0])
                    
    result
end

# reduce 114 omitted

def _reduce_115(val, _values, result)
                      result = s(:undef, val[0])
                    
    result
end

def _reduce_116(val, _values, result)
                      result = val[0] << val[2]
                    
    result
end

# reduce 117 omitted

# reduce 118 omitted

# reduce 119 omitted

# reduce 120 omitted

# reduce 121 omitted

# reduce 122 omitted

# reduce 123 omitted

# reduce 124 omitted

# reduce 125 omitted

# reduce 126 omitted

# reduce 127 omitted

# reduce 128 omitted

# reduce 129 omitted

# reduce 130 omitted

# reduce 131 omitted

# reduce 132 omitted

# reduce 133 omitted

# reduce 134 omitted

# reduce 135 omitted

# reduce 136 omitted

# reduce 137 omitted

# reduce 138 omitted

# reduce 139 omitted

# reduce 140 omitted

# reduce 141 omitted

# reduce 142 omitted

# reduce 143 omitted

# reduce 144 omitted

# reduce 145 omitted

# reduce 146 omitted

# reduce 147 omitted

# reduce 148 omitted

# reduce 149 omitted

# reduce 150 omitted

# reduce 151 omitted

# reduce 152 omitted

# reduce 153 omitted

# reduce 154 omitted

# reduce 155 omitted

# reduce 156 omitted

# reduce 157 omitted

# reduce 158 omitted

# reduce 159 omitted

# reduce 160 omitted

# reduce 161 omitted

# reduce 162 omitted

# reduce 163 omitted

# reduce 164 omitted

# reduce 165 omitted

# reduce 166 omitted

# reduce 167 omitted

# reduce 168 omitted

# reduce 169 omitted

# reduce 170 omitted

# reduce 171 omitted

# reduce 172 omitted

# reduce 173 omitted

# reduce 174 omitted

# reduce 175 omitted

# reduce 176 omitted

# reduce 177 omitted

# reduce 178 omitted

# reduce 179 omitted

# reduce 180 omitted

# reduce 181 omitted

# reduce 182 omitted

# reduce 183 omitted

# reduce 184 omitted

# reduce 185 omitted

# reduce 186 omitted

# reduce 187 omitted

# reduce 188 omitted

# reduce 189 omitted

# reduce 190 omitted

def _reduce_191(val, _values, result)
                      result = new_assign(val[0], val[1], val[2])
                    
    result
end

def _reduce_192(val, _values, result)
                      result = new_assign val[0], val[1], s(:rescue_mod, val[2], val[4])
                    
    result
end

def _reduce_193(val, _values, result)
                      result = new_op_asgn val[1], val[0], val[2]
                    
    result
end

def _reduce_194(val, _values, result)
                      result = new_op_asgn1(val[0], val[2], val[4], val[5])
                    
    result
end

def _reduce_195(val, _values, result)
                      raise ".JS[...] #{val[4]} is not supported"
                    
    result
end

def _reduce_196(val, _values, result)
                      result = s(:op_asgn2, val[0], op_to_setter(val[2]), value(val[3]).to_sym, val[4])
                    
    result
end

# reduce 197 omitted

# reduce 198 omitted

# reduce 199 omitted

# reduce 200 omitted

# reduce 201 omitted

def _reduce_202(val, _values, result)
                      result = new_irange(val[0], val[1], val[2])
                    
    result
end

def _reduce_203(val, _values, result)
                      result = new_erange(val[0], val[1], val[2])
                    
    result
end

def _reduce_204(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_205(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_206(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_207(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_208(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_209(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_210(val, _values, result)
                      result = new_call new_binary_call(new_int(val[1]), val[2], val[3]), [:"-@", []], []
                    
    result
end

def _reduce_211(val, _values, result)
                      result = new_call new_binary_call(new_float(val[1]), val[2], val[3]), [:"-@", []], []
                    
    result
end

def _reduce_212(val, _values, result)
                      result = new_call val[1], [:"+@", []], []
                      if [:int, :float].include? val[1].type
                        result = val[1]
                      end
                    
    result
end

def _reduce_213(val, _values, result)
                      result = new_call val[1], [:"-@", []], []
                      if val[1].type == :int
                        val[1][1] = -val[1][1]
                        result = val[1]
                      elsif val[1].type == :float
                        val[1][1] = -val[1][1].to_f
                        result = val[1]
                      end
                    
    result
end

def _reduce_214(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_215(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_216(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_217(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_218(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_219(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_220(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_221(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_222(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_223(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_224(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_225(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_226(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_227(val, _values, result)
                      result = new_unary_call(val[0], val[1])
                    
    result
end

def _reduce_228(val, _values, result)
                      result = new_unary_call(val[0], val[1])
                    
    result
end

def _reduce_229(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_230(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_231(val, _values, result)
                      result = new_and(val[0], val[1], val[2])
                    
    result
end

def _reduce_232(val, _values, result)
                      result = new_or(val[0], val[1], val[2])
                    
    result
end

def _reduce_233(val, _values, result)
                      result = s(:defined, val[2])
                    
    result
end

def _reduce_234(val, _values, result)
 lexer.cond_push 1 
    result
end

def _reduce_235(val, _values, result)
 lexer.cond_pop 
    result
end

def _reduce_236(val, _values, result)
                      result = new_if(val[1], val[0], val[3], val[6])
                    
    result
end

# reduce 237 omitted

# reduce 238 omitted

def _reduce_239(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_240(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_241(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_242(val, _values, result)
                      val[0] << s(:hash, *val[2])
                      result = val[0]
                    
    result
end

def _reduce_243(val, _values, result)
                      result = [s(:hash, *val[0])]
                    
    result
end

def _reduce_244(val, _values, result)
                      result = val[0] << val[2]
                    
    result
end

def _reduce_245(val, _values, result)
                      result = val[1]
                    
    result
end

# reduce 246 omitted

def _reduce_247(val, _values, result)
                      result = []
                    
    result
end

# reduce 248 omitted

def _reduce_249(val, _values, result)
                      result = []
                    
    result
end

# reduce 250 omitted

def _reduce_251(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_252(val, _values, result)
                      result = val[0]
                      result << new_hash(nil, val[2], nil)
                    
    result
end

def _reduce_253(val, _values, result)
                      result = [new_hash(nil, val[0], nil)]
                    
    result
end

def _reduce_254(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_255(val, _values, result)
                      result = val[0]
                      add_block_pass val[0], val[1]
                    
    result
end

def _reduce_256(val, _values, result)
                      result = [new_hash(nil, val[0], nil)]
                      add_block_pass result, val[1]
                    
    result
end

def _reduce_257(val, _values, result)
                      result = val[0]
                      result << new_hash(nil, val[2], nil)
                      result << val[3] if val[3]
                    
    result
end

def _reduce_258(val, _values, result)
                      result = []
                      add_block_pass result, val[0]
                    
    result
end

# reduce 259 omitted

# reduce 260 omitted

def _reduce_261(val, _values, result)
                      lexer.cmdarg_push 1
                    
    result
end

def _reduce_262(val, _values, result)
                      lexer.cmdarg_pop
                      result = val[1]
                    
    result
end

# reduce 263 omitted

def _reduce_264(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_265(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_266(val, _values, result)
                      result = new_block_pass(val[0], val[1])
                    
    result
end

def _reduce_267(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_268(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_269(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_270(val, _values, result)
                      result = [new_splat(val[0], val[1])]
                    
    result
end

def _reduce_271(val, _values, result)
                      result = val[0] << val[2]
                    
    result
end

def _reduce_272(val, _values, result)
                      result  = val[0] << new_splat(val[2], val[3])
                    
    result
end

def _reduce_273(val, _values, result)
                      val[0] << val[2]
                      result = s(:array, *val[0])
                    
    result
end

def _reduce_274(val, _values, result)
                      val[0] << s(:splat, val[3])
                      result = s(:array, *val[0])
                    
    result
end

def _reduce_275(val, _values, result)
                      result = s(:splat, val[1])
                    
    result
end

# reduce 276 omitted

# reduce 277 omitted

# reduce 278 omitted

# reduce 279 omitted

# reduce 280 omitted

# reduce 281 omitted

# reduce 282 omitted

# reduce 283 omitted

# reduce 284 omitted

def _reduce_285(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_286(val, _values, result)
                      result = s(:begin, val[2])
                    
    result
end

def _reduce_287(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_288(val, _values, result)
                      result = new_paren(val[0], val[1], val[2])
                    
    result
end

def _reduce_289(val, _values, result)
                      result = new_colon2(val[0], val[1], val[2])
                    
    result
end

def _reduce_290(val, _values, result)
                      result = new_colon3(val[0], val[1])
                    
    result
end

def _reduce_291(val, _values, result)
                      result = new_call val[0], [:[], []], val[2]
                    
    result
end

def _reduce_292(val, _values, result)
                      result = new_js_call val[0], [:[], []], val[2]
                    
    result
end

def _reduce_293(val, _values, result)
                      result = new_array(val[0], val[1], val[2])
                    
    result
end

def _reduce_294(val, _values, result)
                      result = new_hash(val[0], val[1], val[2])
                    
    result
end

def _reduce_295(val, _values, result)
                      result = new_return(val[0])
                    
    result
end

def _reduce_296(val, _values, result)
                      result = new_yield val[2]
                    
    result
end

def _reduce_297(val, _values, result)
                      result = s(:yield)
                    
    result
end

def _reduce_298(val, _values, result)
                      result = s(:yield)
                    
    result
end

def _reduce_299(val, _values, result)
                      result = s(:defined, val[3])
                    
    result
end

def _reduce_300(val, _values, result)
                      result = new_unary_call(['!', []], val[2])
                    
    result
end

def _reduce_301(val, _values, result)
                      result = new_unary_call(['!', []], new_nil(val[0]))
                    
    result
end

def _reduce_302(val, _values, result)
                      result = new_call(nil, val[0], [])
                      result << val[1]
                    
    result
end

# reduce 303 omitted

def _reduce_304(val, _values, result)
                      val[0] << val[1]
                      result = val[0]
                    
    result
end

def _reduce_305(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_306(val, _values, result)
                      result = new_if(val[0], val[1], val[3], val[4])
                    
    result
end

def _reduce_307(val, _values, result)
                      result = new_if(val[0], val[1], val[4], val[3])
                    
    result
end

def _reduce_308(val, _values, result)
                      lexer.cond_push 1
                      result = lexer.line
                    
    result
end

def _reduce_309(val, _values, result)
                      lexer.cond_pop
                    
    result
end

def _reduce_310(val, _values, result)
                      result = s(:while, val[2], val[5])
                    
    result
end

def _reduce_311(val, _values, result)
                      lexer.cond_push 1
                      result = lexer.line
                    
    result
end

def _reduce_312(val, _values, result)
                      lexer.cond_pop
                    
    result
end

def _reduce_313(val, _values, result)
                      result = s(:until, val[2], val[5])
                    
    result
end

def _reduce_314(val, _values, result)
                      result = s(:case, val[1], *val[3])
                    
    result
end

def _reduce_315(val, _values, result)
                      result = s(:case, nil, *val[2])
                    
    result
end

def _reduce_316(val, _values, result)
                      result = s(:case, nil, val[3])
                    
    result
end

def _reduce_317(val, _values, result)
                      lexer.cond_push 1
                      result = lexer.line
                    
    result
end

def _reduce_318(val, _values, result)
                      lexer.cond_pop
                    
    result
end

def _reduce_319(val, _values, result)
                      result = s(:for, val[4], val[1], val[7])
                    
    result
end

def _reduce_320(val, _values, result)
                      # ...
                    
    result
end

def _reduce_321(val, _values, result)
                      result = new_class val[0], val[1], val[2], val[4], val[5]
                    
    result
end

def _reduce_322(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_323(val, _values, result)
                      # ...
                    
    result
end

def _reduce_324(val, _values, result)
                      result = new_sclass(val[0], val[3], val[6], val[7])
                    
    result
end

def _reduce_325(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_326(val, _values, result)
                      # ...
                    
    result
end

def _reduce_327(val, _values, result)
                      result = new_module(val[0], val[2], val[4], val[5])
                    
    result
end

def _reduce_328(val, _values, result)
                      push_scope
                      lexer.lex_state = :expr_endfn
                    
    result
end

def _reduce_329(val, _values, result)
                      result = new_def(val[0], nil, val[1], val[3], val[4], val[5])
                      pop_scope
                    
    result
end

def _reduce_330(val, _values, result)
                       lexer.lex_state = :expr_fname
                    
    result
end

def _reduce_331(val, _values, result)
                      push_scope
                      lexer.lex_state = :expr_endfn
                    
    result
end

def _reduce_332(val, _values, result)
                      result = new_def(val[0], val[1], val[4], val[6], val[7], val[8])
                      pop_scope
                    
    result
end

def _reduce_333(val, _values, result)
                      result = new_break(val[0])
                    
    result
end

def _reduce_334(val, _values, result)
                      result = s(:next)
                    
    result
end

def _reduce_335(val, _values, result)
                      result = s(:redo)
                    
    result
end

# reduce 336 omitted

# reduce 337 omitted

# reduce 338 omitted

# reduce 339 omitted

# reduce 340 omitted

# reduce 341 omitted

# reduce 342 omitted

# reduce 343 omitted

# reduce 344 omitted

def _reduce_345(val, _values, result)
                      result = new_call nil, [:lambda, []], []
                      result << new_iter(val[0], val[1])
                    
    result
end

def _reduce_346(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_347(val, _values, result)
                      result = nil
                    
    result
end

# reduce 348 omitted

# reduce 349 omitted

def _reduce_350(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_351(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_352(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_353(val, _values, result)
                      result = new_if(val[0], val[1], val[3], val[4])
                    
    result
end

# reduce 354 omitted

def _reduce_355(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_356(val, _values, result)
                      result = s(:block, val[0])
                    
    result
end

def _reduce_357(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_358(val, _values, result)
                      result = new_assign(new_assignable(new_ident(
                                  val[0])), val[1], val[2])
                    
    result
end

# reduce 359 omitted

def _reduce_360(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_361(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_362(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_363(val, _values, result)
                      result = [val[0], val[2], val[3]]
                    
    result
end

def _reduce_364(val, _values, result)
                      result = [val[0], nil, val[1]]
                    
    result
end

def _reduce_365(val, _values, result)
                      result = [nil, val[0], val[1]]
                    
    result
end

def _reduce_366(val, _values, result)
                      result = [nil, nil, val[0]]
                    
    result
end

def _reduce_367(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_368(val, _values, result)
                      nil
                    
    result
end

def _reduce_369(val, _values, result)
                      optarg = new_optarg(val[2])
                      restarg = new_restarg(val[4])
                      result = new_block_args(val[0] + optarg + restarg, val[5])
                    
    result
end

def _reduce_370(val, _values, result)
                      optarg = new_optarg(val[2])
                      restarg = new_restarg(val[4])
                      result = new_block_args(val[0] + optarg + restarg + val[6], val[7])
                    
    result
end

def _reduce_371(val, _values, result)
                      optarg = new_optarg(val[2])
                      result = new_block_args(val[0] + optarg, val[3])
                    
    result
end

def _reduce_372(val, _values, result)
                      optarg = new_optarg(val[2])
                      result = new_block_args(val[0] + optarg + val[4], val[5])
                    
    result
end

def _reduce_373(val, _values, result)
                      restarg = new_restarg(val[2])
                      result = new_block_args(val[0] + restarg, val[3])
                    
    result
end

def _reduce_374(val, _values, result)
                      result = new_block_args(val[0], nil)
                    
    result
end

def _reduce_375(val, _values, result)
                      restarg = new_restarg(val[2])
                      result = new_block_args(val[0] + restarg + val[4], val[5])
                    
    result
end

def _reduce_376(val, _values, result)
                      result = new_block_args(val[0], val[1])
                    
    result
end

def _reduce_377(val, _values, result)
                      optarg = new_optarg(val[0])
                      restarg = new_restarg(val[2])
                      result = new_block_args(optarg + restarg, val[3])
                    
    result
end

def _reduce_378(val, _values, result)
                      optarg = new_optarg(val[0])
                      restarg = new_restarg(val[2])
                      result = new_block_args(optarg + restarg + val[4], val[5])
                    
    result
end

def _reduce_379(val, _values, result)
                      optarg= new_optarg(val[0])
                      result = new_block_args(optarg, val[1])
                    
    result
end

def _reduce_380(val, _values, result)
                      optarg = new_optarg(val[0])
                      result = new_block_args(optarg + val[2], val[3])
                    
    result
end

def _reduce_381(val, _values, result)
                      restarg = new_restarg(val[0])
                      result = new_block_args(restarg, val[1])
                    
    result
end

def _reduce_382(val, _values, result)
                      restarg = new_restarg(val[0])
                      result = new_block_args(restarg + val[2], val[3])
                    
    result
end

def _reduce_383(val, _values, result)
                      result = new_block_args(nil, val[0])
                    
    result
end

def _reduce_384(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_385(val, _values, result)
                      result = new_iter val[2], val[3]
                      pop_scope
                    
    result
end

def _reduce_386(val, _values, result)
                      val[0] << val[1]
                      result = val[0]
                    
    result
end

# reduce 387 omitted

# reduce 388 omitted

# reduce 389 omitted

def _reduce_390(val, _values, result)
                      result = new_call(nil, val[0], val[1])
                    
    result
end

def _reduce_391(val, _values, result)
                      result = new_call(val[0], val[2], val[3])
                    
    result
end

def _reduce_392(val, _values, result)
                      result = new_js_call(val[0], val[2], val[3])
                    
    result
end

def _reduce_393(val, _values, result)
                      result = new_call(val[0], [:call, []], val[2])
                    
    result
end

def _reduce_394(val, _values, result)
                      result = new_call(val[0], val[2], val[3])
                    
    result
end

def _reduce_395(val, _values, result)
                      result = new_call(val[0], val[2])
                    
    result
end

def _reduce_396(val, _values, result)
                      result = new_super(val[0], val[1])
                    
    result
end

def _reduce_397(val, _values, result)
                      result = new_super(val[0], nil)
                    
    result
end

def _reduce_398(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_399(val, _values, result)
                      result = new_iter val[2], val[3]
                      pop_scope
                    
    result
end

def _reduce_400(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_401(val, _values, result)
                      result = new_iter val[2], val[3]
                      pop_scope
                    
    result
end

def _reduce_402(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_403(val, _values, result)
                      part = s(:when, s(:array, *val[2]), val[4])
                      result = [part]
                      result.push(*val[5]) if val[5]
                    
    result
end

def _reduce_404(val, _values, result)
                      result = [val[0]]
                    
    result
end

# reduce 405 omitted

def _reduce_406(val, _values, result)
                      exc = val[1] || s(:array)
                      exc << new_assign(val[2], val[2], s(:gvar, '$!'.intern)) if val[2]
                      result = [s(:resbody, exc, val[4])]
                      result.concat val[5] if val[5]
                    
    result
end

def _reduce_407(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_408(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

# reduce 409 omitted

# reduce 410 omitted

def _reduce_411(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_412(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_413(val, _values, result)
                      result = val[1].nil? ? s(:nil) : val[1]
                    
    result
end

# reduce 414 omitted

# reduce 415 omitted

# reduce 416 omitted

# reduce 417 omitted

def _reduce_418(val, _values, result)
                      result = new_str val[0]
                    
    result
end

# reduce 419 omitted

def _reduce_420(val, _values, result)
                    result = str_append val[0], val[1]
                  
    result
end

def _reduce_421(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_422(val, _values, result)
                      result = s(:str, value(val[0]))
                    
    result
end

def _reduce_423(val, _values, result)
                      result = new_xstr(val[0], val[1], val[2])
                    
    result
end

def _reduce_424(val, _values, result)
                      result = new_regexp val[1], val[2]
                    
    result
end

def _reduce_425(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_426(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_427(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_428(val, _values, result)
                      part = val[1]
                      part = s(:dstr, "", val[1]) if part.type == :evstr
                      result = val[0] << part
                    
    result
end

def _reduce_429(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_430(val, _values, result)
                      result = val[0].concat([val[1]])
                    
    result
end

def _reduce_431(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_432(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_433(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_434(val, _values, result)
                      result = val[0] << s(:str, value(val[1]))
                    
    result
end

def _reduce_435(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_436(val, _values, result)
                      result = str_append val[0], val[1]
                    
    result
end

def _reduce_437(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_438(val, _values, result)
                      result = str_append val[0], val[1]
                    
    result
end

def _reduce_439(val, _values, result)
                      result = new_str_content(val[0])
                    
    result
end

def _reduce_440(val, _values, result)
                      result = lexer.strterm
                      lexer.strterm = nil
                    
    result
end

def _reduce_441(val, _values, result)
                      lexer.strterm = val[1]
                      result = new_evstr(val[2])
                    
    result
end

def _reduce_442(val, _values, result)
                      lexer.cond_push 0
                      lexer.cmdarg_push 0
                      result = lexer.strterm
                      lexer.strterm = nil
                      lexer.lex_state = :expr_beg
                    
    result
end

def _reduce_443(val, _values, result)
                      lexer.strterm = val[1]
                      lexer.cond_lexpop
                      lexer.cmdarg_lexpop
                      result = new_evstr(val[2])
                    
    result
end

def _reduce_444(val, _values, result)
                      result = new_gvar(val[0])
                    
    result
end

def _reduce_445(val, _values, result)
                      result = new_ivar(val[0])
                    
    result
end

def _reduce_446(val, _values, result)
                      result = new_cvar(val[0])
                    
    result
end

# reduce 447 omitted

def _reduce_448(val, _values, result)
                      result = new_sym(val[1])
                      lexer.lex_state = :expr_end
                    
    result
end

def _reduce_449(val, _values, result)
                      result = new_sym(val[0])
                    
    result
end

# reduce 450 omitted

# reduce 451 omitted

# reduce 452 omitted

# reduce 453 omitted

def _reduce_454(val, _values, result)
                      result = new_dsym val[1]
                    
    result
end

def _reduce_455(val, _values, result)
                      result = new_int(val[0])
                    
    result
end

def _reduce_456(val, _values, result)
                      result = new_float(val[0])
                    
    result
end

def _reduce_457(val, _values, result)
                    result = negate_num(new_int(val[1]))
                  
    result
end

def _reduce_458(val, _values, result)
                    result = negate_num(new_float(val[1]))
                  
    result
end

def _reduce_459(val, _values, result)
                    result = new_int(val[1])
                  
    result
end

def _reduce_460(val, _values, result)
                    result = new_float(val[1])
                  
    result
end

def _reduce_461(val, _values, result)
                      result = new_ident(val[0])
                    
    result
end

def _reduce_462(val, _values, result)
                      result = new_ivar(val[0])
                    
    result
end

def _reduce_463(val, _values, result)
                      result = new_gvar(val[0])
                    
    result
end

def _reduce_464(val, _values, result)
                      result = new_const(val[0])
                    
    result
end

def _reduce_465(val, _values, result)
                      result = new_cvar(val[0])
                    
    result
end

def _reduce_466(val, _values, result)
                      result = new_nil(val[0])
                    
    result
end

def _reduce_467(val, _values, result)
                      result = new_self(val[0])
                    
    result
end

def _reduce_468(val, _values, result)
                      result = new_true(val[0])
                    
    result
end

def _reduce_469(val, _values, result)
                      result = new_false(val[0])
                    
    result
end

def _reduce_470(val, _values, result)
                      result = new___FILE__(val[0])
                    
    result
end

def _reduce_471(val, _values, result)
                      result = new___LINE__(val[0])
                    
    result
end

def _reduce_472(val, _values, result)
                      result = new_var_ref(val[0])
                    
    result
end

def _reduce_473(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_474(val, _values, result)
                      result = s(:nth_ref, value(val[0]))
                    
    result
end

# reduce 475 omitted

def _reduce_476(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_477(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_478(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_479(val, _values, result)
                      result = val[1]
                      lexer.lex_state = :expr_beg
                    
    result
end

def _reduce_480(val, _values, result)
                      result = val[0]
                      lexer.lex_state = :expr_beg
                    
    result
end

# reduce 481 omitted

# reduce 482 omitted

def _reduce_483(val, _values, result)
                      result = new_kwrestarg(val[1])
                    
    result
end

def _reduce_484(val, _values, result)
                      result = new_kwrestarg()
                    
    result
end

def _reduce_485(val, _values, result)
                      result = new_sym(val[0])
                    
    result
end

def _reduce_486(val, _values, result)
                      result = new_kwoptarg(val[0], val[1])
                    
    result
end

def _reduce_487(val, _values, result)
                      result = new_kwarg(val[0])
                    
    result
end

def _reduce_488(val, _values, result)
                      result = new_kwoptarg(val[0], val[1])
                    
    result
end

def _reduce_489(val, _values, result)
                      result = new_kwarg(val[0])
                    
    result
end

def _reduce_490(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_491(val, _values, result)
                      result = val[0]
                      result << val[2]
                    
    result
end

def _reduce_492(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_493(val, _values, result)
                      result = val[0]
                      result << val[2]
                    
    result
end

def _reduce_494(val, _values, result)
                      result = new_args_tail(val[0], val[2], val[3])
                    
    result
end

def _reduce_495(val, _values, result)
                      result = new_args_tail(val[0], nil, val[1])
                    
    result
end

def _reduce_496(val, _values, result)
                      result = new_args_tail(nil, val[0], val[1])
                    
    result
end

def _reduce_497(val, _values, result)
                      result = new_args_tail(nil, nil, val[0])
                    
    result
end

def _reduce_498(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_499(val, _values, result)
                      result = new_args_tail(nil, nil, nil)
                    
    result
end

def _reduce_500(val, _values, result)
                      optarg = new_optarg(val[2])
                      restarg = new_restarg(val[4])
                      result = new_args(val[0] + optarg + restarg, val[5])
                    
    result
end

def _reduce_501(val, _values, result)
                      optarg = new_optarg(val[2])
                      restarg = new_restarg(val[4])
                      result = new_args(val[0] + optarg + restarg + val[6], val[7])
                    
    result
end

def _reduce_502(val, _values, result)
                      optarg = new_optarg(val[2])
                      result = new_args(val[0] + optarg, val[3])
                    
    result
end

def _reduce_503(val, _values, result)
                      optarg = new_optarg(val[2])
                      result = new_args(val[0] + optarg + val[4], val[5])
                    
    result
end

def _reduce_504(val, _values, result)
                      restarg = new_restarg(val[2])
                      result = new_args(val[0] + restarg, val[3])
                    
    result
end

def _reduce_505(val, _values, result)
                      restarg = new_restarg(val[2])
                      result = new_args(val[0] + restarg + val[4], val[5])
                    
    result
end

def _reduce_506(val, _values, result)
                      result = new_args(val[0], val[1])
                    
    result
end

def _reduce_507(val, _values, result)
                      optarg = new_optarg(val[0])
                      restarg = new_restarg(val[2])
                      result = new_args(optarg + restarg, val[3])
                    
    result
end

def _reduce_508(val, _values, result)
                      optarg = new_optarg(val[0])
                      restarg = new_restarg(val[2])
                      result = new_args(optarg + restarg + val[4], val[5])
                    
    result
end

def _reduce_509(val, _values, result)
                      optarg = new_optarg(val[0])
                      result = new_args(optarg, val[1])
                    
    result
end

def _reduce_510(val, _values, result)
                      optarg = new_restarg(val[0])
                      result = new_args(optarg, val[1])
                    
    result
end

def _reduce_511(val, _values, result)
                      restarg = new_restarg(val[0])
                      result = new_args(restarg + val[2], val[3])
                    
    result
end

def _reduce_512(val, _values, result)
                      result = new_args(nil, val[0])
                    
    result
end

def _reduce_513(val, _values, result)
                      result = new_args(nil, nil)
                    
    result
end

# reduce 514 omitted

def _reduce_515(val, _values, result)
                      result = value(val[0]).to_sym
                      scope.add_local result
                    
    result
end

def _reduce_516(val, _values, result)
                      raise 'formal argument cannot be a constant'
                    
    result
end

def _reduce_517(val, _values, result)
                      raise 'formal argument cannot be an instance variable'
                    
    result
end

def _reduce_518(val, _values, result)
                      raise 'formal argument cannot be a class variable'
                    
    result
end

def _reduce_519(val, _values, result)
                      raise 'formal argument cannot be a global variable'
                    
    result
end

def _reduce_520(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_521(val, _values, result)
                      result = val[1]
                    
    result
end

# reduce 522 omitted

# reduce 523 omitted

def _reduce_524(val, _values, result)
                      result = s(:arg, val[0])
                    
    result
end

# reduce 525 omitted

def _reduce_526(val, _values, result)
                      result = s(:mlhs, val[0])
                    
    result
end

def _reduce_527(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

# reduce 528 omitted

# reduce 529 omitted

# reduce 530 omitted

# reduce 531 omitted

# reduce 532 omitted

def _reduce_533(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_534(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_535(val, _values, result)
                      result = new_assign(new_assignable(new_ident(val[0])), val[1], val[2])
                    
    result
end

def _reduce_536(val, _values, result)
                      result = s(:block, val[0])
                    
    result
end

def _reduce_537(val, _values, result)
                      result = val[0]
                      val[0] << val[2]
                    
    result
end

# reduce 538 omitted

# reduce 539 omitted

def _reduce_540(val, _values, result)
                      result = "*#{value(val[1])}".to_sym
                    
    result
end

def _reduce_541(val, _values, result)
                      result = :"*"
                    
    result
end

# reduce 542 omitted

# reduce 543 omitted

def _reduce_544(val, _values, result)
                      result = "&#{value(val[1])}".to_sym
                    
    result
end

def _reduce_545(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_546(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_547(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_548(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_549(val, _values, result)
                      result = []
                    
    result
end

def _reduce_550(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_551(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_552(val, _values, result)
                      result = val[0].concat(val[2])
                    
    result
end

def _reduce_553(val, _values, result)
                      result = [val[0], val[2]]
                    
    result
end

def _reduce_554(val, _values, result)
                      result = [new_sym(val[0]), val[1]]
                    
    result
end

def _reduce_555(val, _values, result)
                      result = [s(:sym, source(val[1]).to_sym), val[3]]
                    
    result
end

def _reduce_556(val, _values, result)
                      result = [new_kwsplat(val[1])]
                    
    result
end

# reduce 557 omitted

# reduce 558 omitted

# reduce 559 omitted

# reduce 560 omitted

# reduce 561 omitted

# reduce 562 omitted

# reduce 563 omitted

# reduce 564 omitted

# reduce 565 omitted

# reduce 566 omitted

# reduce 567 omitted

# reduce 568 omitted

# reduce 569 omitted

# reduce 570 omitted

# reduce 571 omitted

# reduce 572 omitted

# reduce 573 omitted

# reduce 574 omitted

# reduce 575 omitted

# reduce 576 omitted

# reduce 577 omitted

# reduce 578 omitted

# reduce 579 omitted

def _reduce_580(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module Opal
