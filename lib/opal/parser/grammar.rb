#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.10
# from Racc grammer file "".
#

require 'racc/parser.rb'
module Opal
  class Parser < Racc::Parser


##### State transition tables begin ###

clist = [
'63,64,65,8,51,-92,596,697,57,58,269,-502,557,61,269,59,60,62,23,24,66',
'67,-84,526,534,584,525,22,28,27,89,88,90,91,-445,822,17,626,-83,626',
'-64,881,7,41,6,9,93,92,626,83,50,85,84,86,-274,87,94,95,626,81,82,-274',
'38,39,-436,759,-505,-82,595,392,625,-436,625,697,202,203,-502,-75,565',
'264,574,625,-88,-89,36,586,585,30,557,-84,52,625,557,73,726,32,268,-502',
'-91,40,268,74,557,742,-504,-83,100,18,696,-274,557,99,79,73,75,76,77',
'78,-92,-436,-92,74,80,-92,-90,100,-84,556,533,56,99,566,53,-84,-82,37',
'54,63,64,65,8,51,-83,437,697,57,58,269,754,-83,61,-90,59,60,62,23,24',
'66,67,202,203,202,203,304,22,28,27,89,88,90,91,-82,100,17,696,665,-504',
'99,-82,7,41,764,9,93,92,573,83,50,85,84,86,-95,87,94,95,584,81,82,553',
'38,39,100,584,556,100,100,99,556,552,99,99,-91,264,-91,622,100,-91,556',
'845,584,99,36,743,100,30,556,100,52,99,202,203,99,32,268,-436,100,40',
'-90,584,-90,99,-436,-90,100,18,696,202,203,99,79,73,75,76,77,78,586',
'585,591,74,80,888,-444,586,585,597,392,56,889,-444,53,-92,264,37,54',
'63,64,65,-321,51,586,585,587,57,58,-321,584,753,61,589,59,60,62,255',
'256,66,67,297,298,586,585,582,254,287,291,89,88,90,91,513,100,216,769',
'-275,564,99,887,-444,41,304,-275,93,92,543,83,50,85,84,86,264,87,94',
'95,-321,81,82,100,38,39,202,203,99,224,199,433,-275,586,585,-268,-438',
'200,434,-275,-276,-275,-268,-438,-94,541,207,-276,-275,211,-444,505',
'52,540,100,-275,570,-444,506,99,221,40,224,568,223,222,-268,202,203',
'215,563,224,564,-268,79,73,75,76,77,78,537,-274,516,74,80,198,435,-275',
'-274,517,-268,56,769,-505,53,-276,-275,37,54,63,64,65,570,51,474,-444',
'504,57,58,778,526,569,61,528,59,60,62,255,256,66,67,-268,766,340,339',
'472,254,287,291,89,88,90,91,400,261,216,-274,435,402,401,602,262,41',
'775,857,93,92,776,83,50,85,84,86,258,87,94,95,569,81,82,526,38,39,528',
'224,228,233,234,235,230,232,240,241,236,237,-274,217,218,-276,100,238',
'239,-274,207,99,-276,211,-505,540,52,337,336,340,339,543,221,251,227',
'40,223,222,219,220,231,229,225,215,226,788,769,-443,79,73,75,76,77,78',
'-443,474,-439,74,80,-442,242,779,-227,-439,679,56,-442,-274,53,-440',
'-276,37,54,63,64,65,-440,51,-433,100,-441,57,58,780,99,-433,61,-441',
'59,60,62,255,256,66,67,102,103,104,105,106,254,287,291,89,88,90,91,543',
'607,216,337,336,340,339,602,783,41,745,679,93,92,590,83,50,85,84,86',
'258,87,94,95,526,81,82,528,38,39,769,224,228,233,234,235,230,232,240',
'241,236,237,-84,217,218,857,792,238,239,-92,207,509,510,211,788,769',
'52,337,336,340,339,631,221,251,227,40,223,222,219,220,231,229,225,215',
'226,340,339,579,79,73,75,76,77,78,580,793,481,74,80,530,242,337,336',
'340,339,56,606,201,53,513,-445,37,54,63,64,65,529,51,-504,796,642,57',
'58,594,481,598,61,643,59,60,62,23,24,66,67,102,103,104,105,106,22,28',
'27,89,88,90,91,-82,-87,17,-86,-80,304,224,-90,-95,41,-94,-88,93,92,601',
'83,50,85,84,86,304,87,94,95,604,81,82,804,38,39,806,224,228,233,234',
'235,230,232,240,241,236,237,642,217,218,732,809,238,239,643,207,810',
'515,211,812,648,52,102,103,104,105,106,221,251,227,40,223,222,219,220',
'231,229,225,18,226,-255,514,-254,79,73,75,76,77,78,-256,728,-81,74,80',
'304,242,264,-227,-89,304,56,273,507,53,500,499,37,54,63,64,65,224,51',
'498,814,815,57,58,816,94,95,61,-63,59,60,62,255,256,66,67,605,264,823',
'824,825,254,287,291,89,88,90,91,221,264,216,264,223,222,219,220,700',
'288,243,564,93,92,828,83,50,85,84,86,829,87,94,95,224,81,82,665,481',
'831,224,228,233,234,235,230,232,240,241,236,237,474,217,218,-254,835',
'238,239,472,224,285,224,840,282,842,221,52,470,212,223,222,221,439,227',
'438,223,222,219,220,231,229,225,848,226,850,851,304,224,79,73,75,76',
'77,78,692,224,689,74,80,242,623,861,-257,436,687,56,862,864,53,403,677',
'292,54,63,64,65,8,51,390,-505,543,57,58,381,874,875,61,378,59,60,62',
'23,24,66,67,673,672,880,760,809,22,28,27,89,88,90,91,809,545,17,332',
'330,329,810,331,7,41,671,9,93,92,304,83,50,85,84,86,665,87,94,95,296',
'81,82,519,38,39,890,224,228,233,234,235,230,232,240,241,236,237,295',
'217,218,657,655,238,239,243,36,896,-75,30,654,671,52,652,197,196,195',
'32,221,194,227,40,223,222,219,220,231,229,225,18,226,906,809,908,79',
'73,75,76,77,78,909,107,639,74,80,243,242,96,644,304,,56,,,53,,,37,54',
'63,64,65,224,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,28,27',
'89,88,90,91,221,,216,,223,222,219,220,,41,,,93,92,,83,50,85,84,86,258',
'87,94,95,,81,82,,38,39,,224,228,233,234,235,230,232,240,241,236,237',
',217,218,,,238,239,,207,,,211,,,52,,,,,253,221,,227,40,223,222,219,220',
'231,229,225,215,226,,,,79,73,75,76,77,78,,,,74,80,,242,,,,,56,,,53,',
',37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254',
'287,291,89,88,90,91,,545,216,332,330,329,,331,,41,,,93,92,,83,50,85',
'84,86,,87,94,95,,81,82,,38,39,,224,228,233,234,235,230,232,240,241,236',
'237,,217,218,,,238,239,,207,,,211,,,52,,,,,,221,,227,40,223,222,219',
'220,231,229,225,215,226,,,,79,73,75,76,77,78,,,,74,80,,242,,,,,56,,',
'53,,,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,',
'254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94',
'95,,81,82,,38,39,,224,228,233,234,235,230,232,240,241,236,237,,217,218',
',,238,239,,207,,,211,,,52,,,,,,221,,227,40,223,222,219,220,231,229,225',
'215,226,,,,79,73,75,76,77,78,,,,74,80,,242,,,,,56,,,53,,,37,54,63,64',
'65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88',
'90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39',
',224,228,233,234,235,230,232,240,241,236,237,,217,218,,,238,239,,207',
',,211,,,52,,,,,,221,,227,40,223,222,219,220,231,229,225,215,226,,,,79',
'73,75,76,77,78,,,,74,80,,242,,,,,56,,,53,,,37,54,63,64,65,,51,,,,57',
'58,,,,61,,59,60,62,255,256,66,67,,,,,,254,28,27,89,88,90,91,,,216,,',
',,,,41,,,93,92,,83,50,85,84,86,258,87,94,95,,81,82,,38,39,,224,228,233',
'234,235,230,232,240,241,236,237,,217,218,,,238,239,,207,,,211,,,52,',
',,,253,221,,227,40,223,222,219,220,231,229,225,215,226,,,,79,73,75,76',
'77,78,,,,74,80,,242,,,,,56,,,53,,,37,54,63,64,65,8,51,,,,57,58,,,,61',
',59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93',
'92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,224,228,233,234,235,230',
'232,240,241,236,237,,217,218,,,238,239,,36,,,30,,,52,,,,,32,221,,227',
'40,223,222,219,220,231,229,225,18,226,,,,79,73,75,76,77,78,,,,74,80',
',242,,,,,56,,,53,,,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24',
'66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,,83,50,85,84,86',
',87,94,95,,81,82,,38,39,,224,228,233,234,235,230,232,240,241,236,237',
',217,218,,,238,239,,207,,,211,212,,52,,,,,,221,,227,40,223,222,219,220',
'231,229,225,18,226,,,,79,73,75,76,77,78,,,,74,80,,242,,,,,56,,,53,,',
'37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27',
'89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82',
',38,39,,224,228,233,234,235,230,232,240,241,236,237,,217,218,,,238,239',
',207,,,211,,,52,,,,,,221,,227,40,223,222,219,220,231,229,225,215,226',
',,,79,73,75,76,77,78,,,,74,80,,242,,,,,56,,,53,,,37,54,63,64,65,,51',
',,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17',
',,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,224,228,233',
'234,235,230,232,240,241,236,237,,217,218,,,238,239,,207,,,211,,,52,',
',,,,221,,227,40,223,222,219,220,231,229,225,18,226,,,,79,73,75,76,77',
'78,,,,74,80,,242,,,,,56,,,53,,,37,54,63,64,65,8,51,,,,57,58,,,,61,,59',
'60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92',
',83,50,85,84,86,,87,94,95,,81,82,,38,39,,224,228,233,234,235,230,232',
'240,241,236,237,,217,218,,,238,239,,36,,,30,,,52,,,,,32,221,,227,40',
'223,222,219,220,231,229,225,18,226,,,,79,73,75,76,77,78,,,,74,80,,242',
',,,,56,,,53,,,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66',
'67,,,,,,254,28,27,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86',
'258,87,94,95,,81,82,,38,39,,224,228,233,234,235,230,232,240,241,236',
'237,,217,218,,,238,239,,207,,,211,,,52,,,,,253,221,251,227,40,223,222',
'219,220,231,229,225,215,226,,,,79,73,75,76,77,78,,,,74,80,,242,,,,,56',
',,53,,,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,',
',,254,28,27,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,258,87',
'94,95,,81,82,,38,39,,224,228,233,234,235,230,232,240,241,236,237,,217',
'218,,,238,239,,207,,,211,,,52,,,,,253,221,251,227,40,223,222,219,220',
'231,229,225,215,226,,,,79,73,75,76,77,78,,,,74,80,,242,,,,,56,,,53,',
',37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254',
'28,27,89,88,90,91,,545,216,332,330,329,,331,,41,,,93,92,,83,50,85,84',
'86,258,87,94,95,,81,82,,38,39,545,,332,330,329,,331,,,548,,,,,,,,785',
',,207,,,211,224,,52,,,,,253,,251,,40,,,548,,238,239,,215,,,551,,79,73',
'75,76,77,78,,221,,74,80,223,222,219,220,,,56,,,53,,,37,54,63,64,65,',
'51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90',
'91,,545,216,332,330,329,,331,,41,,,93,92,,83,50,85,84,86,258,87,94,95',
',81,82,,38,39,,,,,,,,,,548,,,,,,,,551,,,207,,,211,,,52,,,,,631,,,,40',
',,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64',
'65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88',
'90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,258,87,94,95,,81,82,,38',
'39,,224,,,,,,,,,,,,,,,,238,239,,207,,,211,,,52,,,,,,221,,227,40,223',
'222,219,220,,,225,215,226,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
',,37,54,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28',
'27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,,83,50,85,84,86,,87,94,95,,81',
'82,,38,39,,224,,,,,,,,,,,,,,,,238,239,,36,,,30,,,52,,,,,32,221,,227',
'40,223,222,219,220,,,225,18,226,,,,79,73,75,76,77,78,,,,74,80,,,,,,',
'56,,,53,,,37,54,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,',
',,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,,83,50,85,84,86,,87',
'94,95,,81,82,,38,39,,224,,,,,,,,,,,,,,,,238,239,,36,,,30,,,52,,,,,32',
'221,,227,40,223,222,219,220,,,225,18,226,,,,79,73,75,76,77,78,,,,74',
'80,,,,,,,56,,,53,,,37,54,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24',
'66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,,83,50,85,84',
'86,,87,94,95,,81,82,,38,39,,224,-525,-525,-525,-525,230,232,,,-525,-525',
',,,,,238,239,,36,,,277,,,52,,,,,32,221,,227,40,223,222,219,220,231,229',
'225,18,226,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64',
'65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88',
'90,91,,,216,,,,,,,288,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,323,',
'332,330,329,,331,,,,,,,,,,,,,,,,,285,,,282,,,52,,,,,281,,,,334,,,,,',
',,337,336,340,339,,79,73,75,76,77,78,747,,,74,80,,,,,,,56,,,53,,,292',
'54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287',
'291,89,88,90,91,,,216,,,,,,,288,,,93,92,,83,50,85,84,86,,87,94,95,224',
'81,82,323,,332,330,329,,331,,,,,,,238,239,,,,,,,,,285,,,211,,221,52',
'227,,223,222,219,220,,,334,318,,,,,,,337,336,340,339,,79,73,75,76,77',
'78,,,,74,80,,,,294,,,56,,,53,,,292,54,63,64,65,,51,,,,57,58,,,,61,,59',
'60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,288,,,93',
'92,,83,50,85,84,86,,87,94,95,224,81,82,720,,332,330,329,,331,,,,,,,238',
'239,,,,,,,,,683,,,211,,221,52,227,,223,222,219,220,,,334,,,,,,,,337',
'336,340,339,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,292,54,63,64',
'65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90',
'91,,,17,,,,,,7,41,,9,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,',
'224,-525,-525,-525,-525,230,232,,,-525,-525,,,,,,238,239,,36,,,30,,',
'52,,,,,32,221,,227,40,223,222,219,220,231,229,225,18,226,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,8,51,,,,57,58,,,,61',
',59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93',
'92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,224,-525,-525,-525,-525',
'230,232,,,-525,-525,,,,,,238,239,,36,,,30,,,52,,,,,32,221,,227,40,223',
'222,219,220,231,229,225,18,226,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56',
',,53,,,37,54,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,',
',22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,,83,50,85,84,86,,87,94',
'95,,81,82,,38,39,,224,-525,-525,-525,-525,230,232,,,-525,-525,,,,,,238',
'239,,36,,,30,,,52,,,,,32,221,,227,40,223,222,219,220,231,229,225,18',
'226,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,,51',
',,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17',
',,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,224,-525,-525',
'-525,-525,230,232,,,-525,-525,,,,,,238,239,,207,,,211,,,52,,,,,,221',
',227,40,223,222,219,220,231,229,225,18,226,,,,79,73,75,76,77,78,,,,74',
'80,,,,,,,56,,,53,,,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256',
'66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85',
'84,86,,87,94,95,,81,82,,38,39,,224,228,233,234,235,230,232,240,241,236',
'237,,-525,-525,,,238,239,,207,,,211,,,52,,,,,,221,,227,40,223,222,219',
'220,231,229,225,215,226,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
',,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254',
'287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95',
',81,82,,38,39,,224,228,233,234,235,230,232,,,236,237,,,,,,238,239,,207',
',,211,,,52,,,,,,221,,227,40,223,222,219,220,231,229,225,215,226,,,,79',
'73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,,51,,,,57,58',
',,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,',
',,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,224,228,233,234',
'235,230,232,240,241,236,237,,-525,-525,,,238,239,,207,,,211,,,52,,,',
',631,221,251,227,40,223,222,219,220,231,229,225,215,226,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,8,51,,,,57,58,,,,61',
',59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93',
'92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,224,228,233,234,235,230',
'232,240,,236,237,,,,,,238,239,,36,,,30,,,52,,,,,32,221,,227,40,223,222',
'219,220,231,229,225,18,226,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,',
'53,,,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,',
'254,28,27,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,258,87',
'94,95,,81,82,,38,39,,224,-525,-525,-525,-525,230,232,,,-525,-525,,,',
',,238,239,,207,,,211,,,52,,,,,253,221,,227,40,223,222,219,220,231,229',
'225,215,226,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64',
'65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91',
',,17,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,224,',
',,,,,,,,,,,,,,238,239,,207,,,211,,,52,,,,,,221,,227,40,223,222,219,220',
',,225,18,226,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63',
'64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,28,27,89,88',
'90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,258,87,94,95,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,253,,,,40,,,,,,,,215,,,,,79',
'73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,,51,,,,57,58',
',,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,',
',,,41,,,93,92,,83,50,85,84,86,258,87,94,95,,81,82,,38,39,,,,,,,,,,,',
',,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78',
',,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62',
'255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83',
'50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,',
'52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
',,37,54,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28',
'27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,,83,50,85,84,86,,87,94,95,,81',
'82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,',
',,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,,51,,,,57',
'58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,',
'41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,',
',,,207,,,211,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,,,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66',
'67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,,83,50,85,84,86,',
'87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40',
',,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64',
'65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91',
',,17,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,',
',,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77',
'78,,,,74,80,100,,,,,99,56,,,53,,,37,54,63,64,65,,51,,,,57,58,,,,61,',
'59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,288',
',,93,92,,83,50,85,84,86,,87,94,95,,81,82,720,,332,330,329,,331,,,,,',
',,,,,,,,,,,285,,,30,,,52,,,,,32,,,,334,714,,,,,,,337,336,340,339,,79',
'73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,292,54,63,64,65,,51,,,,57,58',
',,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,',
',,,288,,,93,92,,83,50,85,84,351,,87,94,95,,81,82,323,,332,330,329,,331',
',,,,,,,,,,,,,357,,,352,,,211,,,52,,,,,,,,,334,,536,,,,,,337,336,340',
'339,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,292,54,63,64,65,,51',
',,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91',
',,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,',
',,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,8,51,,,,57,58,,,,61,,59',
'60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92',
',83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30',
',,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56',
',,53,,,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,',
',,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87',
'94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,631,,,,40',
',,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64',
'65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91',
',,17,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,',
',,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60',
'62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92',
',83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211',
',,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,',
',53,,,37,54,-501,-501,-501,,-501,,,,-501,-501,,,,-501,,-501,-501,-501',
'-501,-501,-501,-501,,-501,,,,-501,-501,-501,-501,-501,-501,-501,,,-501',
',,,,,,-501,,,-501,-501,,-501,-501,-501,-501,-501,-501,-501,-501,-501',
',-501,-501,,-501,-501,,,,,,,,,,,,,,,,,,,,,-501,,,-501,-501,,-501,,,',
',-501,,-501,,-501,,,,,,,,-501,,-501,,,-501,-501,-501,-501,-501,-501',
',,,-501,-501,,,,,,,-501,,,-501,,,-501,-501,-502,-502,-502,,-502,,,,-502',
'-502,,,,-502,,-502,-502,-502,-502,-502,-502,-502,,-502,,,,-502,-502',
'-502,-502,-502,-502,-502,,,-502,,,,,,,-502,,,-502,-502,,-502,-502,-502',
'-502,-502,-502,-502,-502,-502,,-502,-502,,-502,-502,,,,,,,,,,,,,,,,',
',,,,-502,,,-502,-502,,-502,,,,,-502,,-502,,-502,,,,,,,,-502,,-502,,',
'-502,-502,-502,-502,-502,-502,,,,-502,-502,,,,,,,-502,,,-502,,,-502',
'-502,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287',
'291,89,88,90,91,,,216,,,,,,,288,,,93,92,,83,50,85,84,86,,87,94,95,,81',
'82,720,,332,330,329,,331,,,,,,,,,,,,,,,,,869,,,211,,,52,,,,,,,,,334',
',,,,,,,337,336,340,339,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,292',
'54,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27',
'89,88,90,91,,,17,,,,,,7,41,6,9,93,92,,83,50,85,84,86,,87,94,95,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79',
'73,75,76,77,78,,,,74,80,,,,,,392,56,,,53,,,37,54,63,64,65,,51,,,,57',
'58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,',
'41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,',
',,,207,,,211,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,,,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66',
'67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,,83,50,85,84,86,',
'87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40',
',,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64',
'65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91',
',,17,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,',
',,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60',
'62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,,83,50',
'85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52',
',,,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,',
'37,54,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28',
'27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,,83,50,85,84,86,,87,94,95,,81',
'82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,',
',,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,8,51,,,',
'57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,',
',,7,41,6,9,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,',
',,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,',
',,74,80,,,,,,,56,,,53,,,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62',
'255,256,66,67,,,,,,254,28,27,89,88,90,91,,,216,,,,,,,41,,,93,92,,83',
'50,85,84,86,258,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211',
',,52,,,,,253,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56',
',,53,,,37,54,-507,-507,-507,,-507,,,,-507,-507,,,,-507,,-507,-507,-507',
'-507,-507,-507,-507,,,,,,-507,-507,-507,-507,-507,-507,-507,,,-507,',
',,,,,-507,,,-507,-507,,-507,-507,-507,-507,-507,-507,-507,-507,-507',
',-507,-507,,-507,-507,,,,,,,,,,,,,,,,,,,,,-507,,,-507,-507,,-507,,,',
',-507,,-507,,-507,,,,,,,,-507,,,,,-507,-507,-507,-507,-507,-507,,,,-507',
'-507,,,,,,,-507,,,-507,,,-507,-507,63,64,65,8,51,,,,57,58,,,,61,,59',
'60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92',
',83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30',
',,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56',
',,53,,,37,54,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,',
',22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,,83,50,85,84,86,,87,94',
'95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,',
',,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,',
'51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,',
'216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,',
',,,,,,,,,,,,,207,,,211,,,52,,,,,409,,,,40,,,,,,,,215,,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,,51,,,,57,58,,,,61,,59',
'60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,216,,,,,,,41,,,93,92,',
'83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211',
',,52,,,,,409,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56',
',,53,,,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,',
'22,28,27,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,,51,,',
',57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,28,27,89,88,90,91,,,216',
',,,,,,41,,,93,92,,83,50,85,84,86,258,87,94,95,,81,82,,38,39,,,,,,,,',
',,,,,,,,,,,,207,,,211,,,52,,,,,253,,,,40,,,,,,,,215,,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,,,37,54,-506,-506,-506,,-506,,,,-506,-506',
',,,-506,,-506,-506,-506,-506,-506,-506,-506,,,,,,-506,-506,-506,-506',
'-506,-506,-506,,,-506,,,,,,,-506,,,-506,-506,,-506,-506,-506,-506,-506',
'-506,-506,-506,-506,,-506,-506,,-506,-506,,,,,,,,,,,,,,,,,,,,,-506,',
',-506,-506,,-506,,,,,-506,,-506,,-506,,,,,,,,-506,,,,,-506,-506,-506',
'-506,-506,-506,,,,-506,-506,,,,,,,-506,,,-506,,,-506,-506,63,64,65,',
'51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,',
'17,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,',
',,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78',
',,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50',
'85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52',
',,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,',
',37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28',
'27,89,88,90,91,,,17,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,18,,,,,79',
'73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,,51,,,,57,58',
',,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41',
',,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,',
'207,,,211,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,',
',,,,,56,,,53,,,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66',
'67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,,83,50,85,84,86,',
'87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40',
',,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64',
'65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88',
'90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,,51,,,,57,58,,,,61',
',59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41',
',,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,',
'207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,,,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256',
'66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85',
'84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,',
',,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37',
'54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287',
'291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81',
'82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,731,,,,40,,,,,,,,215',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,,51,,',
',57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,',
'216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,',
',,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,8,51,,,,57,58,,,,61,,59,60',
'62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,,83',
'50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52',
',,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
',,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28',
'27,89,88,90,91,,,17,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,441,52,,,,,,,,,40,,,,,,,,18,,',
',,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,,51,,,,57',
'58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216',
',,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,',
',,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78',
',,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,8,51,,,,57,58,,,,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,,83,50',
'85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,',
',,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,',
'37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287',
'291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81',
'82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,',
',,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,,51,,,',
'57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216',
',,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,',
',,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78',
',,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62',
'255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83',
'50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,',
'52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
',,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254',
'287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,,51,,',
',57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,',
'216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,',
',,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60',
'62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92',
',83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211',
',,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,',
',53,,,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,',
',254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87',
'94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,',
',,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64',
'65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88',
'90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,,51,,,,57,58,,,,61',
',59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41',
',,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,',
'207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,,,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256',
'66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85',
'84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,',
',,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37',
'54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287',
'291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81',
'82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,',
',,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,,51,,,',
'57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216',
',,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,',
',,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78',
',,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62',
'255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83',
'50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,',
'52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
',,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254',
'287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,,51,,',
',57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,',
'216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,',
',,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60',
'62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92',
',83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211',
',,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,',
',53,,,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,',
',254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87',
'94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,',
',,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64',
'65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88',
'90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,,51,,,,57,58,,,,61',
',59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41',
',,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,',
'207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,,,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256',
'66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85',
'84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,',
',,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37',
'54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287',
'291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81',
'82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,',
',,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,,51,,,',
'57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216',
',,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,',
',,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78',
',,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62',
'255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83',
'50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,',
'52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
',,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254',
'287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,,51,,',
',57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,',
'216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,',
',,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60',
'62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92',
',83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211',
',,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,',
',53,,,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22',
'28,27,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,',
'81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,8,51,',
',,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,',
',,,,7,41,,9,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,',
',,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78',
',,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50',
'85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52',
',,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,',
',37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254',
'287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,8,51,',
',,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,',
',,,,7,41,,9,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,',
',,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78',
',,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62',
'255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83',
'50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,',
'52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
',,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254',
'287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,,51,,',
',57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,216,',
',,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,',
',,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,',
',,74,80,,,,,,,56,,,53,,,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62',
'255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83',
'50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,',
'52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
',,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28',
'27,89,88,90,91,,,17,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,18,,,,,79',
'73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,,51,,,,57,58',
',,,61,,59,60,62,255,256,66,67,,,,,,254,28,27,89,88,90,91,,,216,,,,,',
',41,,,93,92,,83,50,85,84,86,258,87,94,95,,81,82,,38,39,,,,,,,,,,,,,',
',,,,,,,207,,,211,,,52,,,,,253,,251,,40,,,,,,,,215,,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60',
'62,255,256,66,67,,,,,,254,28,27,89,88,90,91,,,216,,,,,,,41,,,93,92,',
'83,50,85,84,86,258,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,',
'211,,,490,,,,,253,,251,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,,,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256',
'66,67,,,,,,254,28,27,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84',
'86,258,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,494,52',
',,,,253,,251,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56',
',,53,,,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,',
',,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87',
'94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,253,,,,40',
',,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64',
'65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88',
'90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,,51,,,,57,58,,,,61',
',59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41',
',,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,',
'207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,,,37,54,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66',
'67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,,83,50,85,84,86',
',87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,277,,,52,,,,,32,,,',
'40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63',
'64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89',
'88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,,51,,,,57,58,,,',
'61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,',
'41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,',
',,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74',
'80,,,,,,,56,,,53,,,37,54,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24',
'66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,,83,50,85,84',
'86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,',
',,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54',
'63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291',
'89,88,90,91,,,216,,,,,,,288,,,93,92,,83,50,85,84,86,,87,94,95,,81,82',
'323,,332,330,329,,331,,,,,,,,,,,,,,,,,285,,,211,,,52,,,,,,,,,334,,,',
',,,,337,336,340,339,,79,73,75,76,77,78,,,,74,80,,,,502,,,56,,,53,,,292',
'54,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27',
'89,88,90,91,,,17,,,,,,7,41,,9,93,92,,83,50,85,84,86,,87,94,95,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,36,,,277,,,52,,,,,32,,,,40,,,,,,,,18,,,,',
'79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,,51,,,,57',
'58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216',
',,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,',
',,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78',
',,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,8,51,,,,57,58,,,,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,,83,50',
'85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,',
',,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,',
'37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287',
'291,89,88,90,91,,,216,,,,,,,288,,,93,92,,83,50,85,84,351,,87,94,95,',
'81,82,720,,332,330,329,,331,,,,,,,,,,,,,,,,,352,,,211,,,52,,,,,,,,,334',
'714,,,,,,,337,336,340,339,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
',,292,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254',
'28,27,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,258,87,94,95',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,631,,251,,40,,',
',,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64',
'65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90',
'91,,,17,,,,,,7,41,,9,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,',
',,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,8,51,,,,57,58,,,,61',
',59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93',
'92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,',
'30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,',
'56,,,53,,,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,',
',,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94',
'95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,',
',,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,',
'51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,',
'216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,',
',,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60',
'62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92',
',83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211',
',,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,',
',53,,,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,',
',254,287,291,89,88,90,91,,,216,,,,,,,288,,,93,92,,83,50,85,84,86,,87',
'94,95,,81,82,,,,,,,,,,,,,,,,,,,,,,,,285,,,282,,,52,,,,,,,,,,,,,,,,,',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,292,54,63,64,65,,51,',
',,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,',
',,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,',
',,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,',
',74,80,,,,,,,56,,,53,,,37,54,63,64,65,8,51,,,,57,58,,,,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,,83,50',
'85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,',
',,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,',
'37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287',
'291,89,88,90,91,,,216,,,,,,,288,,,93,92,,83,50,85,84,86,,87,94,95,,81',
'82,,,,,,,,,,,,,,,,,,,,,,,,285,,,282,,,52,,,,,,,,,,,,,,,,,,,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,,,292,54,63,64,65,,51,,,,57,58,,',
',61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,',
',288,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,,,,,,,,,,,,,,,,,,,,,',
',285,,,282,,,52,,,,,,,,,,,,,,,,,,,,,,79,73,75,76,77,78,,,,74,80,,,,',
',,56,,,53,,,292,54,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67',
',,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,,83,50,85,84,86,,87',
'94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,',
',,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64,65',
',51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90',
'91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,',
',,,,,,,,,,,,,,,,,,207,,,211,519,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,8,51,,,,57,58,,',
',61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,',
'9,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,',
'36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,',
',,,,,56,,,53,,,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66',
'67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84',
'86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,409',
',,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54',
'63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89',
'88,90,91,,,17,,,,,,7,41,,9,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,,51,,,,57,58,,,',
'61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,',
'41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,',
',,,207,,,211,,,52,,,,,253,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,',
'74,80,,,,,,,56,,,53,,,37,54,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23',
'24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,,83,50,85',
'84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32',
',,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54',
'63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291',
'89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,-274',
'79,73,75,76,77,78,-274,-274,-274,74,80,,-274,-274,,-274,,56,,,53,,,37',
'54,,,,,,,,,,,-274,-274,,-274,-274,-274,-274,-274,,,,,,,,,,,,,,,,,,,',
',,,,-274,-274,-274,-274,-274,-274,-274,-274,-274,-274,-274,-274,-274',
'-274,,,-274,-274,-274,,615,,,,-274,,,,,,,-274,,-274,,-274,-274,-274',
'-274,-274,-274,-274,,-274,,-274,,,,,,,,,,,,,-274,-274,,-85,-274,-274',
',,-274,,-93,-274,-274,-274,,,-274,-274,-274,,-274,,,,,,,,,,-274,-274',
',,,,,,,,-274,-274,,-274,-274,-274,-274,-274,,,,,,,,,,,,,,,,,,,,,,,,-274',
'-274,-274,-274,-274,-274,-274,-274,-274,-274,-274,-274,-274,-274,,,-274',
'-274,-274,,615,-274,,,-274,,,-274,,-274,,-274,,-274,,-274,-274,-274',
'-274,-274,-274,-274,,-274,,-274,,,,,,,,,,,,,-274,-274,-274,-274,-508',
'-274,,,-274,,-93,-508,-508,-508,,,-508,-508,-508,,-508,,,,,,,,,-508',
'-508,-508,,,,,,,,,-508,-508,,-508,-508,-508,-508,-508,,,,,,,,,,,,,,',
',,,,,,,,,-508,-508,-508,-508,-508,-508,-508,-508,-508,-508,-508,-508',
'-508,-508,,,-508,-508,-508,,744,-508,,,-508,,,-508,,-508,,-508,,-508',
',-508,-508,-508,-508,-508,-508,-508,,-508,-508,-508,,,,,,,,,,,,,-508',
'-508,-508,-508,-508,-508,,,-508,,-91,-508,-508,-508,,,,-508,-508,,-508',
',,,,,,,,-508,,,,,,,,,,,-508,-508,,-508,-508,-508,-508,-508,,,,,,,,,',
',,,,,,,,,,,,,,-508,-508,-508,-508,-508,-508,-508,-508,-508,-508,-508',
'-508,-508,-508,,,-508,-508,-508,,612,,,,-508,,,,,,,-508,,-508,,-508',
'-508,-508,-508,-508,-508,-508,,-508,-508,-508,,,,,,,,,,,,,-508,-508',
',-83,-524,-508,,,-508,,-91,-524,-524,-524,,,-524,-524,-524,,-524,,,',
',,,,,-524,-524,-524,,,,,,,,,-524,-524,,-524,-524,-524,-524,-524,,,,',
',,,,,,,,,,,,,,,,,,,-524,-524,-524,-524,-524,-524,-524,-524,-524,-524',
'-524,-524,-524,-524,,,-524,-524,-524,,,-524,,264,-524,,,-524,,-524,',
'-524,,-524,,-524,-524,-524,-524,-524,-524,-524,,-524,-524,-524,,,,,',
',,,,,,,-524,-524,-524,-524,-282,-524,,,-524,,,-282,-282,-282,,,-282',
'-282,-282,,-282,,,,,,,,,,-282,-282,,,,,,,,,-282,-282,,-282,-282,-282',
'-282,-282,,,,,,,,,,,,,,,,,,,,,,,,-282,-282,-282,-282,-282,-282,-282',
'-282,-282,-282,-282,-282,-282,-282,,,-282,-282,-282,,,-282,,273,-282',
',,-282,,-282,,-282,,-282,,-282,-282,-282,-282,-282,-282,-282,,-282,',
'-282,,,,,,,,,,,,,-282,-282,-282,-282,-269,-282,,,-282,,,-269,-269,-269',
',,-269,-269,-269,,-269,,,,,,,,,,-269,-269,-269,,,,,,,,-269,-269,,-269',
'-269,-269,-269,-269,,,,,,,,,,,,,,,,,,,,,,,,-269,-269,-269,-269,-269',
'-269,-269,-269,-269,-269,-269,-269,-269,-269,,,-269,-269,-269,,,-269',
',,-269,,,-269,,-269,,-269,,-269,,-269,-269,-269,-269,-269,-269,-269',
',-269,,-269,,,,,,,,,,,,,-269,-269,-269,-269,-371,-269,,-269,-269,,,-371',
'-371,-371,,,-371,-371,-371,,-371,,,,,,,,,-371,-371,-371,,,,,,,,,-371',
'-371,,-371,-371,-371,-371,-371,,,,,,,,,,,,,,,,,,,,,,,,-371,-371,-371',
'-371,-371,-371,-371,-371,-371,-371,-371,-371,-371,-371,,,-371,-371,-371',
',,-371,,264,-371,,,-371,,-371,,-371,,-371,,-371,-371,-371,-371,-371',
'-371,-371,,-371,-371,-371,,,,,,,,,,,,,-371,-371,-371,-371,-524,-371',
',,-371,,,-524,-524,-524,,,-524,-524,-524,,-524,,,,,,,,,,-524,,,,,,,',
',,-524,-524,,-524,-524,-524,-524,-524,,,,,,,,,,,,,-524,,,,,,,-524,-524',
'-524,,,-524,-524,-524,,-524,,,,,,-524,,,,-524,,,-524,,,,,264,-524,-524',
'-524,,-524,-524,-524,-524,-524,,,,,,,,,,,,,-524,,,,,,,,,,,,,-524,,-524',
',,-524,,,,-524,,,,,,,-524,,,,,264,-524,,,,,,,,,,,,,,,,,,,,,-524,,,,',
',,,,,,,,-524,,-524,,,-524,155,166,156,179,152,172,162,161,187,190,177',
'160,159,154,180,188,189,164,153,167,171,173,165,158,,,,174,181,176,175',
'168,178,163,151,170,169,182,183,184,185,186,150,157,148,149,146,147',
',110,112,,,111,,,,,,,,,141,142,,138,120,121,122,129,126,128,,,123,124',
',,,143,144,130,131,,,,,,,,,,,,,135,134,,119,140,137,136,132,133,127',
'125,117,139,118,,,145,191,,,,,,,,,,80,155,166,156,179,152,172,162,161',
'187,190,177,160,159,154,180,188,189,164,153,167,171,173,165,158,,,,174',
'181,176,175,168,178,163,151,170,169,182,183,184,185,186,150,157,148',
'149,146,147,,110,112,,,111,,,,,,,,,141,142,,138,120,121,122,129,126',
'128,,,123,124,,,,143,144,130,131,,,,,,,,,,,,,135,134,,119,140,137,136',
'132,133,127,125,117,139,118,,,145,191,,,,,,,,,,80,155,166,156,179,152',
'172,162,161,187,190,177,160,159,154,180,188,189,164,153,167,171,173',
'165,158,,,,174,181,176,175,168,178,163,151,170,169,182,183,184,185,186',
'150,157,148,149,146,147,,110,112,,,111,,,,,,,,,141,142,,138,120,121',
'122,129,126,128,,,123,124,,,,143,144,130,131,,,,,,,,,,,,,135,134,,119',
'140,137,136,132,133,127,125,117,139,118,,,145,191,,,,,,,,,,80,155,166',
'156,179,152,172,162,161,187,190,177,160,159,154,180,188,189,164,153',
'167,171,173,165,158,,,,174,181,176,175,168,178,163,151,170,169,182,183',
'184,185,186,150,157,148,149,146,147,,110,112,109,,111,,,,,,,,,141,142',
',138,120,121,122,129,126,128,,,123,124,,,,143,144,130,131,,,,,,,,,,',
',,135,134,,119,140,137,136,132,133,127,125,117,139,118,,,145,191,,,',
',,,,,,80,155,166,156,179,152,172,162,161,187,190,177,160,159,154,180',
'188,189,164,153,167,171,173,165,158,,,,174,181,176,175,168,178,163,151',
'170,169,182,183,184,185,186,150,157,148,149,146,147,,110,112,388,387',
'111,,389,,,,,,,141,142,,138,120,121,122,129,126,128,,,123,124,,,,143',
'144,130,131,,,,,,,,,,,,,135,134,,119,140,137,136,132,133,127,125,117',
'139,118,,,145,155,166,156,179,152,172,162,161,187,190,177,160,159,154',
'180,188,189,164,153,167,171,173,165,158,,,,174,181,176,366,365,367,364',
'151,170,169,182,183,184,185,186,150,157,148,149,362,363,,360,112,85',
'84,361,,87,,,,,,,141,142,,138,120,121,122,129,126,128,,,123,124,,,,143',
'144,130,131,,,,,,371,,,,,,,135,134,,119,140,137,136,132,133,127,125',
'117,139,118,,,145,155,166,156,179,152,172,162,161,187,190,177,160,159',
'154,180,188,189,164,153,167,171,173,165,158,,,,174,181,176,175,168,178',
'163,151,170,169,182,183,184,185,186,150,157,148,149,146,147,,110,112',
'388,387,111,,389,,,,,,,141,142,,138,120,121,122,129,126,128,,,123,124',
',,,143,144,130,131,,,,,,,,,,,,,135,134,,119,140,137,136,132,133,127',
'125,117,139,118,,,145,155,166,156,179,152,172,162,161,187,190,177,160',
'159,154,180,188,189,164,153,167,171,173,165,158,,,,174,181,176,175,168',
'178,163,151,170,169,182,183,184,185,186,150,157,148,149,146,147,,110',
'112,,,111,,,,,,,,,141,142,,138,120,121,122,129,126,128,,,123,124,,,',
'143,144,130,131,,,,,,,,,,,,,135,134,,119,140,137,136,132,133,127,125',
'117,139,118,478,421,145,,479,,,,,,,,,141,142,,138,120,121,122,129,126',
'128,,,123,124,,,,143,144,130,131,,,,,,,,,,,,,135,134,,119,140,137,136',
'132,133,127,125,117,139,118,478,421,145,,479,,,,,,,,,141,142,,138,120',
'121,122,129,126,128,,,123,124,,,,143,144,130,131,,,,,,,,,,,,,135,134',
',119,140,137,136,132,133,127,125,117,139,118,478,421,145,,479,,,,,,',
',,141,142,,138,120,121,122,129,126,128,,,123,124,,,,143,144,130,131',
',,,,,,,,,,,,135,134,,119,140,137,136,132,133,127,125,117,139,118,478',
'421,145,,479,,,,,,,,,141,142,,138,120,121,122,129,126,128,,,123,124',
',,,143,144,130,131,,,,,,264,,,,,,,135,134,,119,140,137,136,132,133,127',
'125,117,139,118,618,427,145,,619,,,,,,,,,141,142,,138,120,121,122,129',
'126,128,,,123,124,,,,143,144,130,131,,,,,,,,,,,,,135,134,,119,140,137',
'136,132,133,127,125,117,139,118,662,427,145,,663,,,,,,,,,141,142,,138',
'120,121,122,129,126,128,,,123,124,,,,143,144,130,131,,,,,,,,,,,,,135',
'134,,119,140,137,136,132,133,127,125,117,139,118,706,427,145,,837,,',
',,,,,,141,142,,138,120,121,122,129,126,128,,,123,124,,,,143,144,130',
'131,,,,,,,,,,,,,135,134,,119,140,137,136,132,133,127,125,117,139,118',
'901,421,145,,902,,,,,,,,,141,142,,138,120,121,122,129,126,128,,,123',
'124,,,,143,144,130,131,,,,,,264,,,,,,,135,134,,119,140,137,136,132,133',
'127,125,117,139,118,659,421,145,,660,,,,,,,,,141,142,,138,120,121,122',
'129,126,128,,,123,124,,,,143,144,130,131,,,,,,264,,,,,,,135,134,,119',
'140,137,136,132,133,127,125,117,139,118,423,427,145,,425,,,,,,,,,141',
'142,,138,120,121,122,129,126,128,,,123,124,,,,143,144,130,131,,,,,,',
',,,,,,135,134,,119,140,137,136,132,133,127,125,117,139,118,616,421,145',
',617,,,,,,,,,141,142,,138,120,121,122,129,126,128,,,123,124,,,,143,144',
'130,131,,,,,,264,,,,,,,135,134,,119,140,137,136,132,133,127,125,117',
'139,118,417,421,145,,418,,,,,,,,,141,142,,138,120,121,122,129,126,128',
',,123,124,,,,143,144,130,131,,,,,,264,,,,,,,135,134,,119,140,137,136',
'132,133,127,125,117,139,118,706,427,145,,704,,,,,,,,,141,142,,138,120',
'121,122,129,126,128,,,123,124,,,,143,144,130,131,,,,,,,,,,,,,135,134',
',119,140,137,136,132,133,127,125,117,139,118,478,421,145,,479,,,,,,',
',,141,142,,138,120,121,122,129,126,128,,,123,124,,,,143,144,130,131',
',,,,,,,,,,,,135,134,,119,140,137,136,132,133,127,125,117,139,118,616',
'421,145,,617,,,,,,,,,141,142,,138,120,121,122,129,126,128,,,123,124',
',,,143,144,130,131,,,,,,264,,,,,,,135,134,,119,140,137,136,132,133,127',
'125,117,139,118,618,427,145,,619,,,,,,,,,141,142,,138,120,121,122,129',
'126,128,,,123,124,,,,143,144,130,131,,,,,,,,,,,,,135,134,,119,140,137',
'136,132,133,127,125,117,139,118,903,427,145,,904,,,,,,,,,141,142,,138',
'120,121,122,129,126,128,,,123,124,,,,143,144,130,131,,,,,,,,,,,,,135',
'134,,119,140,137,136,132,133,127,125,117,139,118,,,145' ]
        racc_action_table = arr = ::Array.new(24525, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'0,0,0,0,0,902,382,559,0,0,55,351,834,0,289,0,0,0,0,0,0,0,660,309,317',
'592,309,0,0,0,0,0,0,0,206,745,0,468,662,491,654,853,0,0,0,0,0,0,481',
'0,0,0,0,0,704,0,0,0,492,0,0,704,0,0,351,646,704,659,382,349,468,351',
'491,795,581,581,351,654,350,289,356,481,206,745,0,592,592,0,344,660',
'0,492,343,71,592,0,55,351,903,0,289,71,794,616,662,662,559,0,559,704',
'873,559,0,0,0,0,0,0,902,351,902,0,0,902,901,834,660,834,317,0,834,352',
'0,660,659,0,0,496,496,496,496,496,662,208,560,496,496,26,641,662,496',
'616,496,496,496,496,496,496,496,440,440,15,15,581,496,496,496,496,496',
'496,496,659,795,496,795,656,903,795,659,496,496,658,496,496,496,356',
'496,496,496,496,496,208,496,496,496,379,496,496,341,496,496,344,384',
'344,356,343,344,343,338,356,343,903,26,903,440,794,903,794,794,375,794',
'496,617,873,496,873,574,496,873,306,306,574,496,26,361,3,496,901,373',
'901,3,361,901,560,496,560,711,711,560,496,496,496,496,496,496,379,379',
'379,496,496,868,867,384,384,384,496,496,868,867,496,617,661,496,496',
'474,474,474,42,474,375,375,375,474,474,42,377,640,474,377,474,474,474',
'474,474,474,474,37,37,373,373,373,474,474,474,474,474,474,474,436,347',
'474,877,566,877,347,868,867,474,306,566,474,474,326,474,474,474,474',
'474,664,474,474,474,42,474,474,711,474,474,342,342,711,445,13,205,507',
'377,377,870,365,13,205,507,764,890,870,365,436,325,474,764,890,474,283',
'284,474,323,709,566,354,283,284,709,445,474,667,354,445,445,286,669',
'669,474,348,668,348,286,474,474,474,474,474,474,322,663,299,474,474',
'13,205,507,663,299,870,474,670,663,474,764,890,474,474,472,472,472,682',
'472,630,283,284,472,472,682,313,354,472,313,472,472,472,472,472,472',
'472,286,669,809,809,628,472,472,472,472,472,472,472,109,25,472,663,299',
'109,109,407,25,472,675,806,472,472,676,472,472,472,472,472,472,472,472',
'472,682,472,472,674,472,472,674,407,407,407,407,407,407,407,407,407',
'407,407,904,407,407,909,715,407,407,904,472,715,909,472,904,679,472',
'806,806,806,806,681,407,472,407,472,407,407,407,407,407,407,407,472',
'407,905,905,362,472,472,472,472,472,472,362,314,366,472,472,363,407',
'683,407,366,780,472,363,904,472,367,909,472,472,470,470,470,367,470',
'360,274,364,470,470,684,274,360,470,364,470,470,470,470,470,470,470',
'653,653,653,653,653,470,470,470,470,470,470,470,685,418,470,780,780',
'780,780,621,688,470,620,537,470,470,378,470,470,470,470,470,470,470',
'470,470,310,470,470,310,470,470,693,621,621,621,621,621,621,621,621',
'621,621,621,418,621,621,881,699,621,621,418,470,292,292,470,691,691',
'470,537,537,537,537,470,621,470,621,470,621,621,621,621,621,621,621',
'470,621,543,543,369,470,470,470,470,470,470,369,701,613,470,470,312',
'621,881,881,881,881,470,417,14,470,296,35,470,470,490,490,490,311,490',
'706,707,485,490,490,381,608,398,490,485,490,490,490,490,490,490,490',
'275,275,275,275,275,490,490,490,490,490,490,490,417,14,490,296,35,308',
'301,417,14,490,296,35,490,490,404,490,490,490,490,490,485,490,490,490',
'410,490,490,716,490,490,717,645,645,645,645,645,645,645,645,645,645',
'645,757,645,645,605,718,645,645,757,490,720,298,490,723,490,490,5,5',
'5,5,5,645,490,645,490,645,645,645,645,645,645,645,490,645,603,297,412',
'490,490,490,490,490,490,730,596,605,490,490,757,645,291,645,605,288',
'490,287,285,490,280,279,490,490,502,502,502,464,502,278,724,724,502',
'502,724,724,724,502,276,502,502,502,502,502,502,502,416,424,748,749',
'752,502,502,502,502,502,502,502,464,755,502,756,464,464,464,464,562',
'502,758,561,502,502,761,502,502,502,502,502,762,502,502,502,444,502',
'502,763,263,767,467,467,467,467,467,467,467,467,467,467,467,252,467',
'467,770,771,467,467,249,446,502,447,786,502,789,444,502,248,216,444',
'444,467,210,467,209,467,467,467,467,467,467,467,797,467,800,801,802',
'448,502,502,502,502,502,502,555,449,550,502,502,467,467,818,819,207',
'546,502,826,827,502,192,535,502,502,891,891,891,891,891,96,837,838,891',
'891,78,843,844,891,77,891,891,891,891,891,891,891,522,521,852,649,854',
'891,891,891,891,891,891,891,856,551,891,551,551,551,857,551,891,891',
'520,891,891,891,41,891,891,891,891,891,511,891,891,891,36,891,891,508',
'891,891,869,430,430,430,430,430,430,430,430,430,430,430,34,430,430,503',
'501,430,430,20,891,879,498,891,497,886,891,493,12,11,10,891,430,9,430',
'891,430,430,430,430,430,430,430,891,430,895,897,898,891,891,891,891',
'891,891,900,6,483,891,891,487,430,1,486,484,,891,,,891,,,891,891,504',
'504,504,463,504,,,,504,504,,,,504,,504,504,504,504,504,504,504,,,,,',
'504,504,504,504,504,504,504,463,,504,,463,463,463,463,,504,,,504,504',
',504,504,504,504,504,504,504,504,504,,504,504,,504,504,,741,741,741',
'741,741,741,741,741,741,741,741,,741,741,,,741,741,,504,,,504,,,504',
',,,,504,741,,741,504,741,741,741,741,741,741,741,504,741,,,,504,504',
'504,504,504,504,,,,504,504,,741,,,,,504,,,504,,,504,504,513,513,513',
',513,,,,513,513,,,,513,,513,513,513,513,513,513,513,,,,,,513,513,513',
'513,513,513,513,,785,513,785,785,785,,785,,513,,,513,513,,513,513,513',
'513,513,,513,513,513,,513,513,,513,513,,739,739,739,739,739,739,739',
'739,739,739,739,,739,739,,,739,739,,513,,,513,,,513,,,,,,739,,739,513',
'739,739,739,739,739,739,739,513,739,,,,513,513,513,513,513,513,,,,513',
'513,,739,,,,,513,,,513,,,513,513,514,514,514,,514,,,,514,514,,,,514',
',514,514,514,514,514,514,514,,,,,,514,514,514,514,514,514,514,,,514',
',,,,,,514,,,514,514,,514,514,514,514,514,,514,514,514,,514,514,,514',
'514,,415,415,415,415,415,415,415,415,415,415,415,,415,415,,,415,415',
',514,,,514,,,514,,,,,,415,,415,514,415,415,415,415,415,415,415,514,415',
',,,514,514,514,514,514,514,,,,514,514,,415,,,,,514,,,514,,,514,514,515',
'515,515,,515,,,,515,515,,,,515,,515,515,515,515,515,515,515,,,,,,515',
'515,515,515,515,515,515,,,515,,,,,,,515,,,515,515,,515,515,515,515,515',
',515,515,515,,515,515,,515,515,,746,746,746,746,746,746,746,746,746',
'746,746,,746,746,,,746,746,,515,,,515,,,515,,,,,,746,,746,515,746,746',
'746,746,746,746,746,515,746,,,,515,515,515,515,515,515,,,,515,515,,746',
',,,,515,,,515,,,515,515,887,887,887,,887,,,,887,887,,,,887,,887,887',
'887,887,887,887,887,,,,,,887,887,887,887,887,887,887,,,887,,,,,,,887',
',,887,887,,887,887,887,887,887,887,887,887,887,,887,887,,887,887,,821',
'821,821,821,821,821,821,821,821,821,821,,821,821,,,821,821,,887,,,887',
',,887,,,,,887,821,,821,887,821,821,821,821,821,821,821,887,821,,,,887',
'887,887,887,887,887,,,,887,887,,821,,,,,887,,,887,,,887,887,885,885',
'885,885,885,,,,885,885,,,,885,,885,885,885,885,885,885,885,,,,,,885',
'885,885,885,885,885,885,,,885,,,,,,885,885,,885,885,885,,885,885,885',
'885,885,,885,885,885,,885,885,,885,885,,246,246,246,246,246,246,246',
'246,246,246,246,,246,246,,,246,246,,885,,,885,,,885,,,,,885,246,,246',
'885,246,246,246,246,246,246,246,885,246,,,,885,885,885,885,885,885,',
',,885,885,,246,,,,,885,,,885,,,885,885,17,17,17,,17,,,,17,17,,,,17,',
'17,17,17,17,17,17,17,,,,,,17,17,17,17,17,17,17,,,17,,,,,,,17,,,17,17',
',17,17,17,17,17,,17,17,17,,17,17,,17,17,,666,666,666,666,666,666,666',
'666,666,666,666,,666,666,,,666,666,,17,,,17,17,,17,,,,,,666,,666,17',
'666,666,666,666,666,666,666,17,666,,,,17,17,17,17,17,17,,,,17,17,,666',
',,,,17,,,17,,,17,17,18,18,18,,18,,,,18,18,,,,18,,18,18,18,18,18,18,18',
',,,,,18,18,18,18,18,18,18,,,18,,,,,,,18,,,18,18,,18,18,18,18,18,,18',
'18,18,,18,18,,18,18,,518,518,518,518,518,518,518,518,518,518,518,,518',
'518,,,518,518,,18,,,18,,,18,,,,,,518,,518,18,518,518,518,518,518,518',
'518,18,518,,,,18,18,18,18,18,18,,,,18,18,,518,,,,,18,,,18,,,18,18,519',
'519,519,,519,,,,519,519,,,,519,,519,519,519,519,519,519,519,,,,,,519',
'519,519,519,519,519,519,,,519,,,,,,,519,,,519,519,,519,519,519,519,519',
',519,519,519,,519,519,,519,519,,19,19,19,19,19,19,19,19,19,19,19,,19',
'19,,,19,19,,519,,,519,,,519,,,,,,19,,19,519,19,19,19,19,19,19,19,519',
'19,,,,519,519,519,519,519,519,,,,519,519,,19,,,,,519,,,519,,,519,519',
'878,878,878,878,878,,,,878,878,,,,878,,878,878,878,878,878,878,878,',
',,,,878,878,878,878,878,878,878,,,878,,,,,,878,878,,878,878,878,,878',
'878,878,878,878,,878,878,878,,878,878,,878,878,,734,734,734,734,734',
'734,734,734,734,734,734,,734,734,,,734,734,,878,,,878,,,878,,,,,878',
'734,,734,878,734,734,734,734,734,734,734,878,734,,,,878,878,878,878',
'878,878,,,,878,878,,734,,,,,878,,,878,,,878,878,22,22,22,,22,,,,22,22',
',,,22,,22,22,22,22,22,22,22,,,,,,22,22,22,22,22,22,22,,,22,,,,,,,22',
',,22,22,,22,22,22,22,22,22,22,22,22,,22,22,,22,22,,729,729,729,729,729',
'729,729,729,729,729,729,,729,729,,,729,729,,22,,,22,,,22,,,,,22,729',
'22,729,22,729,729,729,729,729,729,729,22,729,,,,22,22,22,22,22,22,,',
',22,22,,729,,,,,22,,,22,,,22,22,23,23,23,,23,,,,23,23,,,,23,,23,23,23',
'23,23,23,23,,,,,,23,23,23,23,23,23,23,,,23,,,,,,,23,,,23,23,,23,23,23',
'23,23,23,23,23,23,,23,23,,23,23,,736,736,736,736,736,736,736,736,736',
'736,736,,736,736,,,736,736,,23,,,23,,,23,,,,,23,736,23,736,23,736,736',
'736,736,736,736,736,23,736,,,,23,23,23,23,23,23,,,,23,23,,736,,,,,23',
',,23,,,23,23,24,24,24,,24,,,,24,24,,,,24,,24,24,24,24,24,24,24,,,,,',
'24,24,24,24,24,24,24,,689,24,689,689,689,,689,,24,,,24,24,,24,24,24',
'24,24,24,24,24,24,,24,24,,24,24,334,,334,334,334,,334,,,689,,,,,,,,689',
',,24,,,24,452,,24,,,,,24,,24,,24,,,334,,452,452,,24,,,334,,24,24,24',
'24,24,24,,452,,24,24,452,452,452,452,,,24,,,24,,,24,24,525,525,525,',
'525,,,,525,525,,,,525,,525,525,525,525,525,525,525,,,,,,525,525,525',
'525,525,525,525,,548,525,548,548,548,,548,,525,,,525,525,,525,525,525',
'525,525,525,525,525,525,,525,525,,525,525,,,,,,,,,,548,,,,,,,,548,,',
'525,,,525,,,525,,,,,525,,,,525,,,,,,,,525,,,,,525,525,525,525,525,525',
',,,525,525,,,,,,,525,,,525,,,525,525,528,528,528,,528,,,,528,528,,,',
'528,,528,528,528,528,528,528,528,,,,,,528,528,528,528,528,528,528,,',
'528,,,,,,,528,,,528,528,,528,528,528,528,528,528,528,528,528,,528,528',
',528,528,,455,,,,,,,,,,,,,,,,455,455,,528,,,528,,,528,,,,,,455,,455',
'528,455,455,455,455,,,455,528,455,,,,528,528,528,528,528,528,,,,528',
'528,,,,,,,528,,,528,,,528,528,533,533,533,533,533,,,,533,533,,,,533',
',533,533,533,533,533,533,533,,,,,,533,533,533,533,533,533,533,,,533',
',,,,,533,533,,533,533,533,,533,533,533,533,533,,533,533,533,,533,533',
',533,533,,456,,,,,,,,,,,,,,,,456,456,,533,,,533,,,533,,,,,533,456,,456',
'533,456,456,456,456,,,456,533,456,,,,533,533,533,533,533,533,,,,533',
'533,,,,,,,533,,,533,,,533,533,534,534,534,534,534,,,,534,534,,,,534',
',534,534,534,534,534,534,534,,,,,,534,534,534,534,534,534,534,,,534',
',,,,,534,534,,534,534,534,,534,534,534,534,534,,534,534,534,,534,534',
',534,534,,454,,,,,,,,,,,,,,,,454,454,,534,,,534,,,534,,,,,534,454,,454',
'534,454,454,454,454,,,454,534,454,,,,534,534,534,534,534,534,,,,534',
'534,,,,,,,534,,,534,,,534,534,30,30,30,30,30,,,,30,30,,,,30,,30,30,30',
'30,30,30,30,,,,,,30,30,30,30,30,30,30,,,30,,,,,,30,30,,30,30,30,,30',
'30,30,30,30,,30,30,30,,30,30,,30,30,,453,453,453,453,453,453,453,,,453',
'453,,,,,,453,453,,30,,,30,,,30,,,,,30,453,,453,30,453,453,453,453,453',
'453,453,30,453,,,,30,30,30,30,30,30,,,,30,30,,,,,,,30,,,30,,,30,30,31',
'31,31,,31,,,,31,31,,,,31,,31,31,31,31,31,31,31,,,,,,31,31,31,31,31,31',
'31,,,31,,,,,,,31,,,31,31,,31,31,31,31,31,,31,31,31,,31,31,625,,625,625',
'625,,625,,,,,,,,,,,,,,,,,31,,,31,,,31,,,,,31,,,,625,,,,,,,,625,625,625',
'625,,31,31,31,31,31,31,625,,,31,31,,,,,,,31,,,31,,,31,31,32,32,32,,32',
',,,32,32,,,,32,,32,32,32,32,32,32,32,,,,,,32,32,32,32,32,32,32,,,32',
',,,,,,32,,,32,32,,32,32,32,32,32,,32,32,32,450,32,32,56,,56,56,56,,56',
',,,,,,450,450,,,,,,,,,32,,,32,,450,32,450,,450,450,450,450,,,56,56,',
',,,,,56,56,56,56,,32,32,32,32,32,32,,,,32,32,,,,32,,,32,,,32,,,32,32',
'540,540,540,,540,,,,540,540,,,,540,,540,540,540,540,540,540,540,,,,',
',540,540,540,540,540,540,540,,,540,,,,,,,540,,,540,540,,540,540,540',
'540,540,,540,540,540,451,540,540,714,,714,714,714,,714,,,,,,,451,451',
',,,,,,,,540,,,540,,451,540,451,,451,451,451,451,,,714,,,,,,,,714,714',
'714,714,,540,540,540,540,540,540,,,,540,540,,,,,,,540,,,540,,,540,540',
'554,554,554,554,554,,,,554,554,,,,554,,554,554,554,554,554,554,554,',
',,,,554,554,554,554,554,554,554,,,554,,,,,,554,554,,554,554,554,,554',
'554,554,554,554,,554,554,554,,554,554,,554,554,,458,458,458,458,458',
'458,458,,,458,458,,,,,,458,458,,554,,,554,,,554,,,,,554,458,,458,554',
'458,458,458,458,458,458,458,554,458,,,,554,554,554,554,554,554,,,,554',
'554,,,,,,,554,,,554,,,554,554,558,558,558,558,558,,,,558,558,,,,558',
',558,558,558,558,558,558,558,,,,,,558,558,558,558,558,558,558,,,558',
',,,,,558,558,,558,558,558,,558,558,558,558,558,,558,558,558,,558,558',
',558,558,,459,459,459,459,459,459,459,,,459,459,,,,,,459,459,,558,,',
'558,,,558,,,,,558,459,,459,558,459,459,459,459,459,459,459,558,459,',
',,558,558,558,558,558,558,,,,558,558,,,,,,,558,,,558,,,558,558,866,866',
'866,866,866,,,,866,866,,,,866,,866,866,866,866,866,866,866,,,,,,866',
'866,866,866,866,866,866,,,866,,,,,,866,866,,866,866,866,,866,866,866',
'866,866,,866,866,866,,866,866,,866,866,,460,460,460,460,460,460,460',
',,460,460,,,,,,460,460,,866,,,866,,,866,,,,,866,460,,460,866,460,460',
'460,460,460,460,460,866,460,,,,866,866,866,866,866,866,,,,866,866,,',
',,,,866,,,866,,,866,866,703,703,703,,703,,,,703,703,,,,703,,703,703',
'703,703,703,703,703,,,,,,703,703,703,703,703,703,703,,,703,,,,,,,703',
',,703,703,,703,703,703,703,703,,703,703,703,,703,703,,703,703,,462,462',
'462,462,462,462,462,,,462,462,,,,,,462,462,,703,,,703,,,703,,,,,,462',
',462,703,462,462,462,462,462,462,462,703,462,,,,703,703,703,703,703',
'703,,,,703,703,,,,,,,703,,,703,,,703,703,39,39,39,,39,,,,39,39,,,,39',
',39,39,39,39,39,39,39,,,,,,39,39,39,39,39,39,39,,,39,,,,,,,39,,,39,39',
',39,39,39,39,39,,39,39,39,,39,39,,39,39,,443,443,443,443,443,443,443',
'443,443,443,443,,443,443,,,443,443,,39,,,39,,,39,,,,,,443,,443,39,443',
'443,443,443,443,443,443,39,443,,,,39,39,39,39,39,39,,,,39,39,,,,,,,39',
',,39,,,39,39,40,40,40,,40,,,,40,40,,,,40,,40,40,40,40,40,40,40,,,,,',
'40,40,40,40,40,40,40,,,40,,,,,,,40,,,40,40,,40,40,40,40,40,,40,40,40',
',40,40,,40,40,,465,465,465,465,465,465,465,,,465,465,,,,,,465,465,,40',
',,40,,,40,,,,,,465,,465,40,465,465,465,465,465,465,465,40,465,,,,40',
'40,40,40,40,40,,,,40,40,,,,,,,40,,,40,,,40,40,864,864,864,,864,,,,864',
'864,,,,864,,864,864,864,864,864,864,864,,,,,,864,864,864,864,864,864',
'864,,,864,,,,,,,864,,,864,864,,864,864,864,864,864,,864,864,864,,864',
'864,,864,864,,442,442,442,442,442,442,442,442,442,442,442,,442,442,',
',442,442,,864,,,864,,,864,,,,,864,442,864,442,864,442,442,442,442,442',
'442,442,864,442,,,,864,864,864,864,864,864,,,,864,864,,,,,,,864,,,864',
',,864,864,563,563,563,563,563,,,,563,563,,,,563,,563,563,563,563,563',
'563,563,,,,,,563,563,563,563,563,563,563,,,563,,,,,,563,563,,563,563',
'563,,563,563,563,563,563,,563,563,563,,563,563,,563,563,,466,466,466',
'466,466,466,466,466,,466,466,,,,,,466,466,,563,,,563,,,563,,,,,563,466',
',466,563,466,466,466,466,466,466,466,563,466,,,,563,563,563,563,563',
'563,,,,563,563,,,,,,,563,,,563,,,563,563,569,569,569,,569,,,,569,569',
',,,569,,569,569,569,569,569,569,569,,,,,,569,569,569,569,569,569,569',
',,569,,,,,,,569,,,569,569,,569,569,569,569,569,569,569,569,569,,569',
'569,,569,569,,461,461,461,461,461,461,461,,,461,461,,,,,,461,461,,569',
',,569,,,569,,,,,569,461,,461,569,461,461,461,461,461,461,461,569,461',
',,,569,569,569,569,569,569,,,,569,569,,,,,,,569,,,569,,,569,569,52,52',
'52,,52,,,,52,52,,,,52,,52,52,52,52,52,52,52,,,,,,52,52,52,52,52,52,52',
',,52,,,,,,,52,,,52,52,,52,52,52,52,52,,52,52,52,,52,52,,52,52,,457,',
',,,,,,,,,,,,,,457,457,,52,,,52,,,52,,,,,,457,,457,52,457,457,457,457',
',,457,52,457,,,,52,52,52,52,52,52,,,,52,52,,,,,,,52,,,52,,,52,52,53',
'53,53,,53,,,,53,53,,,,53,,53,53,53,53,53,53,53,,,,,,53,53,53,53,53,53',
'53,,,53,,,,,,,53,,,53,53,,53,53,53,53,53,53,53,53,53,,53,53,,53,53,',
',,,,,,,,,,,,,,,,,,,53,,,53,,,53,,,,,53,,,,53,,,,,,,,53,,,,,53,53,53',
'53,53,53,,,,53,53,,,,,,,53,,,53,,,53,53,54,54,54,,54,,,,54,54,,,,54',
',54,54,54,54,54,54,54,,,,,,54,54,54,54,54,54,54,,,54,,,,,,,54,,,54,54',
',54,54,54,54,54,54,54,54,54,,54,54,,54,54,,,,,,,,,,,,,,,,,,,,,54,,,54',
',,54,,,,,,,,,54,,,,,,,,54,,,,,54,54,54,54,54,54,,,,54,54,,,,,,,54,,',
'54,,,54,54,439,439,439,,439,,,,439,439,,,,439,,439,439,439,439,439,439',
'439,,,,,,439,439,439,439,439,439,439,,,439,,,,,,,439,,,439,439,,439',
'439,439,439,439,,439,439,439,,439,439,,439,439,,,,,,,,,,,,,,,,,,,,,439',
',,439,,,439,,,,,,,,,439,,,,,,,,439,,,,,439,439,439,439,439,439,,,,439',
'439,,,,,,,439,,,439,,,439,439,849,849,849,849,849,,,,849,849,,,,849',
',849,849,849,849,849,849,849,,,,,,849,849,849,849,849,849,849,,,849',
',,,,,849,849,,849,849,849,,849,849,849,849,849,,849,849,849,,849,849',
',849,849,,,,,,,,,,,,,,,,,,,,,849,,,849,,,849,,,,,849,,,,849,,,,,,,,849',
',,,,849,849,849,849,849,849,,,,849,849,,,,,,,849,,,849,,,849,849,57',
'57,57,,57,,,,57,57,,,,57,,57,57,57,57,57,57,57,,,,,,57,57,57,57,57,57',
'57,,,57,,,,,,,57,,,57,57,,57,57,57,57,57,,57,57,57,,57,57,,57,57,,,',
',,,,,,,,,,,,,,,,,57,,,57,,,57,,,,,,,,,57,,,,,,,,57,,,,,57,57,57,57,57',
'57,,,,57,57,,,,,,,57,,,57,,,57,57,58,58,58,,58,,,,58,58,,,,58,,58,58',
'58,58,58,58,58,,,,,,58,58,58,58,58,58,58,,,58,,,,,,,58,,,58,58,,58,58',
'58,58,58,,58,58,58,,58,58,,58,58,,,,,,,,,,,,,,,,,,,,,58,,,58,,,58,,',
',,,,,,58,,,,,,,,58,,,,,58,58,58,58,58,58,,,,58,58,,,,,,,58,,,58,,,58',
'58,61,61,61,,61,,,,61,61,,,,61,,61,61,61,61,61,61,61,,,,,,61,61,61,61',
'61,61,61,,,61,,,,,,,61,,,61,61,,61,61,61,61,61,,61,61,61,,61,61,,61',
'61,,,,,,,,,,,,,,,,,,,,,61,,,61,,,61,,,,,,,,,61,,,,,,,,61,,,,,61,61,61',
'61,61,61,,,,61,61,61,,,,,61,61,,,61,,,61,61,62,62,62,,62,,,,62,62,,',
',62,,62,62,62,62,62,62,62,,,,,,62,62,62,62,62,62,62,,,62,,,,,,,62,,',
'62,62,,62,62,62,62,62,,62,62,62,,62,62,860,,860,860,860,,860,,,,,,,',
',,,,,,,,,62,,,62,,,62,,,,,62,,,,860,860,,,,,,,860,860,860,860,,62,62',
'62,62,62,62,,,,62,62,,,,,,,62,,,62,,,62,62,63,63,63,,63,,,,63,63,,,',
'63,,63,63,63,63,63,63,63,,,,,,63,63,63,63,63,63,63,,,63,,,,,,,63,,,63',
'63,,63,63,63,63,63,,63,63,63,,63,63,318,,318,318,318,,318,,,,,,,,,,',
',,,63,,,63,,,63,,,63,,,,,,,,,318,,318,,,,,,318,318,318,318,,63,63,63',
'63,63,63,,,,63,63,,,,,,,63,,,63,,,63,63,438,438,438,,438,,,,438,438',
',,,438,,438,438,438,438,438,438,438,,,,,,438,438,438,438,438,438,438',
',,438,,,,,,,438,,,438,438,,438,438,438,438,438,,438,438,438,,438,438',
',438,438,,,,,,,,,,,,,,,,,,,,,438,,,438,,,438,,,,,,,,,438,,,,,,,,438',
',,,,438,438,438,438,438,438,,,,438,438,,,,,,,438,,,438,,,438,438,846',
'846,846,846,846,,,,846,846,,,,846,,846,846,846,846,846,846,846,,,,,',
'846,846,846,846,846,846,846,,,846,,,,,,846,846,,846,846,846,,846,846',
'846,846,846,,846,846,846,,846,846,,846,846,,,,,,,,,,,,,,,,,,,,,846,',
',846,,,846,,,,,846,,,,846,,,,,,,,846,,,,,846,846,846,846,846,846,,,',
'846,846,,,,,,,846,,,846,,,846,846,845,845,845,,845,,,,845,845,,,,845',
',845,845,845,845,845,845,845,,,,,,845,845,845,845,845,845,845,,,845',
',,,,,,845,,,845,845,,845,845,845,845,845,,845,845,845,,845,845,,845',
'845,,,,,,,,,,,,,,,,,,,,,845,,,845,,,845,,,,,845,,,,845,,,,,,,,845,,',
',,845,845,845,845,845,845,,,,845,845,,,,,,,845,,,845,,,845,845,841,841',
'841,,841,,,,841,841,,,,841,,841,841,841,841,841,841,841,,,,,,841,841',
'841,841,841,841,841,,,841,,,,,,,841,,,841,841,,841,841,841,841,841,',
'841,841,841,,841,841,,841,841,,,,,,,,,,,,,,,,,,,,,841,,,841,,,841,,',
',,,,,,841,,,,,,,,841,,,,,841,841,841,841,841,841,,,,841,841,,,,,,,841',
',,841,,,841,841,437,437,437,,437,,,,437,437,,,,437,,437,437,437,437',
'437,437,437,,,,,,437,437,437,437,437,437,437,,,437,,,,,,,437,,,437,437',
',437,437,437,437,437,,437,437,437,,437,437,,437,437,,,,,,,,,,,,,,,,',
',,,,437,,,437,,,437,,,,,,,,,437,,,,,,,,437,,,,,437,437,437,437,437,437',
',,,437,437,,,,,,,437,,,437,,,437,437,83,83,83,,83,,,,83,83,,,,83,,83',
'83,83,83,83,83,83,,83,,,,83,83,83,83,83,83,83,,,83,,,,,,,83,,,83,83',
',83,83,83,83,83,83,83,83,83,,83,83,,83,83,,,,,,,,,,,,,,,,,,,,,83,,,83',
'83,,83,,,,,83,,83,,83,,,,,,,,83,,83,,,83,83,83,83,83,83,,,,83,83,,,',
',,,83,,,83,,,83,83,86,86,86,,86,,,,86,86,,,,86,,86,86,86,86,86,86,86',
',86,,,,86,86,86,86,86,86,86,,,86,,,,,,,86,,,86,86,,86,86,86,86,86,86',
'86,86,86,,86,86,,86,86,,,,,,,,,,,,,,,,,,,,,86,,,86,86,,86,,,,,86,,86',
',86,,,,,,,,86,,86,,,86,86,86,86,86,86,,,,86,86,,,,,,,86,,,86,,,86,86',
'835,835,835,,835,,,,835,835,,,,835,,835,835,835,835,835,835,835,,,,',
',835,835,835,835,835,835,835,,,835,,,,,,,835,,,835,835,,835,835,835',
'835,835,,835,835,835,,835,835,804,,804,804,804,,804,,,,,,,,,,,,,,,,',
'835,,,835,,,835,,,,,,,,,804,,,,,,,,804,804,804,804,,835,835,835,835',
'835,835,,,,835,835,,,,,,,835,,,835,,,835,835,98,98,98,98,98,,,,98,98',
',,,98,,98,98,98,98,98,98,98,,,,,,98,98,98,98,98,98,98,,,98,,,,,,98,98',
'98,98,98,98,,98,98,98,98,98,,98,98,98,,98,98,,98,98,,,,,,,,,,,,,,,,',
',,,,98,,,98,,,98,,,,,98,,,,98,,,,,,,,98,,,,,98,98,98,98,98,98,,,,98',
'98,,,,,,98,98,,,98,,,98,98,102,102,102,,102,,,,102,102,,,,102,,102,102',
'102,102,102,102,102,,,,,,102,102,102,102,102,102,102,,,102,,,,,,,102',
',,102,102,,102,102,102,102,102,,102,102,102,,102,102,,102,102,,,,,,',
',,,,,,,,,,,,,,102,,,102,,,102,,,,,,,,,102,,,,,,,,102,,,,,102,102,102',
'102,102,102,,,,102,102,,,,,,,102,,,102,,,102,102,103,103,103,,103,,',
',103,103,,,,103,,103,103,103,103,103,103,103,,,,,,103,103,103,103,103',
'103,103,,,103,,,,,,,103,,,103,103,,103,103,103,103,103,,103,103,103',
',103,103,,103,103,,,,,,,,,,,,,,,,,,,,,103,,,103,,,103,,,,,,,,,103,,',
',,,,,103,,,,,103,103,103,103,103,103,,,,103,103,,,,,,,103,,,103,,,103',
'103,104,104,104,,104,,,,104,104,,,,104,,104,104,104,104,104,104,104',
',,,,,104,104,104,104,104,104,104,,,104,,,,,,,104,,,104,104,,104,104',
'104,104,104,,104,104,104,,104,104,,104,104,,,,,,,,,,,,,,,,,,,,,104,',
',104,,,104,,,,,,,,,104,,,,,,,,104,,,,,104,104,104,104,104,104,,,,104',
'104,,,,,,,104,,,104,,,104,104,105,105,105,,105,,,,105,105,,,,105,,105',
'105,105,105,105,105,105,,,,,,105,105,105,105,105,105,105,,,105,,,,,',
',105,,,105,105,,105,105,105,105,105,,105,105,105,,105,105,,105,105,',
',,,,,,,,,,,,,,,,,,,105,,,105,,,105,,,,,,,,,105,,,,,,,,105,,,,,105,105',
'105,105,105,105,,,,105,105,,,,,,,105,,,105,,,105,105,106,106,106,106',
'106,,,,106,106,,,,106,,106,106,106,106,106,106,106,,,,,,106,106,106',
'106,106,106,106,,,106,,,,,,106,106,,106,106,106,,106,106,106,106,106',
',106,106,106,,106,106,,106,106,,,,,,,,,,,,,,,,,,,,,106,,,106,,,106,',
',,,106,,,,106,,,,,,,,106,,,,,106,106,106,106,106,106,,,,106,106,,,,',
',,106,,,106,,,106,106,107,107,107,107,107,,,,107,107,,,,107,,107,107',
'107,107,107,107,107,,,,,,107,107,107,107,107,107,107,,,107,,,,,,107',
'107,107,107,107,107,,107,107,107,107,107,,107,107,107,,107,107,,107',
'107,,,,,,,,,,,,,,,,,,,,,107,,,107,,,107,,,,,107,,,,107,,,,,,,,107,,',
',,107,107,107,107,107,107,,,,107,107,,,,,,,107,,,107,,,107,107,435,435',
'435,,435,,,,435,435,,,,435,,435,435,435,435,435,435,435,,,,,,435,435',
'435,435,435,435,435,,,435,,,,,,,435,,,435,435,,435,435,435,435,435,435',
'435,435,435,,435,435,,435,435,,,,,,,,,,,,,,,,,,,,,435,,,435,,,435,,',
',,435,,,,435,,,,,,,,435,,,,,435,435,435,435,435,435,,,,435,435,,,,,',
',435,,,435,,,435,435,428,428,428,,428,,,,428,428,,,,428,,428,428,428',
'428,428,428,428,,,,,,428,428,428,428,428,428,428,,,428,,,,,,,428,,,428',
'428,,428,428,428,428,428,428,428,428,428,,428,428,,428,428,,,,,,,,,',
',,,,,,,,,,,428,,,428,428,,428,,,,,428,,428,,428,,,,,,,,428,,,,,428,428',
'428,428,428,428,,,,428,428,,,,,,,428,,,428,,,428,428,831,831,831,831',
'831,,,,831,831,,,,831,,831,831,831,831,831,831,831,,,,,,831,831,831',
'831,831,831,831,,,831,,,,,,831,831,,831,831,831,,831,831,831,831,831',
',831,831,831,,831,831,,831,831,,,,,,,,,,,,,,,,,,,,,831,,,831,,,831,',
',,,831,,,,831,,,,,,,,831,,,,,831,831,831,831,831,831,,,,831,831,,,,',
',,831,,,831,,,831,831,194,194,194,194,194,,,,194,194,,,,194,,194,194',
'194,194,194,194,194,,,,,,194,194,194,194,194,194,194,,,194,,,,,,194',
'194,,194,194,194,,194,194,194,194,194,,194,194,194,,194,194,,194,194',
',,,,,,,,,,,,,,,,,,,,194,,,194,,,194,,,,,194,,,,194,,,,,,,,194,,,,,194',
'194,194,194,194,194,,,,194,194,,,,,,,194,,,194,,,194,194,195,195,195',
',195,,,,195,195,,,,195,,195,195,195,195,195,195,195,,,,,,195,195,195',
'195,195,195,195,,,195,,,,,,,195,,,195,195,,195,195,195,195,195,,195',
'195,195,,195,195,,195,195,,,,,,,,,,,,,,,,,,,,,195,,,195,,,195,,,,,195',
',,,195,,,,,,,,195,,,,,195,195,195,195,195,195,,,,195,195,,,,,,,195,',
',195,,,195,195,196,196,196,,196,,,,196,196,,,,196,,196,196,196,196,196',
'196,196,,,,,,196,196,196,196,196,196,196,,,196,,,,,,,196,,,196,196,',
'196,196,196,196,196,,196,196,196,,196,196,,196,196,,,,,,,,,,,,,,,,,',
',,,196,,,196,,,196,,,,,196,,,,196,,,,,,,,196,,,,,196,196,196,196,196',
'196,,,,196,196,,,,,,,196,,,196,,,196,196,197,197,197,,197,,,,197,197',
',,,197,,197,197,197,197,197,197,197,,,,,,197,197,197,197,197,197,197',
',,197,,,,,,,197,,,197,197,,197,197,197,197,197,,197,197,197,,197,197',
',197,197,,,,,,,,,,,,,,,,,,,,,197,,,197,,,197,,,,,,,,,197,,,,,,,,197',
',,,,197,197,197,197,197,197,,,,197,197,,,,,,,197,,,197,,,197,197,198',
'198,198,,198,,,,198,198,,,,198,,198,198,198,198,198,198,198,,,,,,198',
'198,198,198,198,198,198,,,198,,,,,,,198,,,198,198,,198,198,198,198,198',
'198,198,198,198,,198,198,,198,198,,,,,,,,,,,,,,,,,,,,,198,,,198,,,198',
',,,,198,,,,198,,,,,,,,198,,,,,198,198,198,198,198,198,,,,198,198,,,',
',,,198,,,198,,,198,198,427,427,427,,427,,,,427,427,,,,427,,427,427,427',
'427,427,427,427,,,,,,427,427,427,427,427,427,427,,,427,,,,,,,427,,,427',
'427,,427,427,427,427,427,427,427,427,427,,427,427,,427,427,,,,,,,,,',
',,,,,,,,,,,427,,,427,427,,427,,,,,427,,427,,427,,,,,,,,427,,,,,427,427',
'427,427,427,427,,,,427,427,,,,,,,427,,,427,,,427,427,573,573,573,,573',
',,,573,573,,,,573,,573,573,573,573,573,573,573,,,,,,573,573,573,573',
'573,573,573,,,573,,,,,,,573,,,573,573,,573,573,573,573,573,,573,573',
'573,,573,573,,573,573,,,,,,,,,,,,,,,,,,,,,573,,,573,,,573,,,,,,,,,573',
',,,,,,,573,,,,,573,573,573,573,573,573,,,,573,573,,,,,,,573,,,573,,',
'573,573,201,201,201,,201,,,,201,201,,,,201,,201,201,201,201,201,201',
'201,,,,,,201,201,201,201,201,201,201,,,201,,,,,,,201,,,201,201,,201',
'201,201,201,201,,201,201,201,,201,201,,201,201,,,,,,,,,,,,,,,,,,,,,201',
',,201,,,201,,,,,,,,,201,,,,,,,,201,,,,,201,201,201,201,201,201,,,,201',
'201,,,,,,,201,,,201,,,201,201,202,202,202,,202,,,,202,202,,,,202,,202',
'202,202,202,202,202,202,,,,,,202,202,202,202,202,202,202,,,202,,,,,',
',202,,,202,202,,202,202,202,202,202,,202,202,202,,202,202,,202,202,',
',,,,,,,,,,,,,,,,,,,202,,,202,,,202,,,,,,,,,202,,,,,,,,202,,,,,202,202',
'202,202,202,202,,,,202,202,,,,,,,202,,,202,,,202,202,203,203,203,,203',
',,,203,203,,,,203,,203,203,203,203,203,203,203,,,,,,203,203,203,203',
'203,203,203,,,203,,,,,,,203,,,203,203,,203,203,203,203,203,,203,203',
'203,,203,203,,203,203,,,,,,,,,,,,,,,,,,,,,203,,,203,,,203,,,,,,,,,203',
',,,,,,,203,,,,,203,203,203,203,203,203,,,,203,203,,,,,,,203,,,203,,',
'203,203,575,575,575,,575,,,,575,575,,,,575,,575,575,575,575,575,575',
'575,,,,,,575,575,575,575,575,575,575,,,575,,,,,,,575,,,575,575,,575',
'575,575,575,575,,575,575,575,,575,575,,575,575,,,,,,,,,,,,,,,,,,,,,575',
',,575,,,575,,,,,,,,,575,,,,,,,,575,,,,,575,575,575,575,575,575,,,,575',
'575,,,,,,,575,,,575,,,575,575,822,822,822,,822,,,,822,822,,,,822,,822',
'822,822,822,822,822,822,,,,,,822,822,822,822,822,822,822,,,822,,,,,',
',822,,,822,822,,822,822,822,822,822,,822,822,822,,822,822,,822,822,',
',,,,,,,,,,,,,,,,,,,822,,,822,,,822,,,,,,,,,822,,,,,,,,822,,,,,822,822',
'822,822,822,822,,,,822,822,,,,,,,822,,,822,,,822,822,602,602,602,,602',
',,,602,602,,,,602,,602,602,602,602,602,602,602,,,,,,602,602,602,602',
'602,602,602,,,602,,,,,,,602,,,602,602,,602,602,602,602,602,,602,602',
'602,,602,602,,602,602,,,,,,,,,,,,,,,,,,,,,602,,,602,,,602,,,,,,,,,602',
',,,,,,,602,,,,,602,602,602,602,602,602,,,,602,602,,,,,,,602,,,602,,',
'602,602,810,810,810,,810,,,,810,810,,,,810,,810,810,810,810,810,810',
'810,,,,,,810,810,810,810,810,810,810,,,810,,,,,,,810,,,810,810,,810',
'810,810,810,810,,810,810,810,,810,810,,810,810,,,,,,,,,,,,,,,,,,,,,810',
',,810,,,810,,,,,,,,,810,,,,,,,,810,,,,,810,810,810,810,810,810,,,,810',
'810,,,,,,,810,,,810,,,810,810,604,604,604,,604,,,,604,604,,,,604,,604',
'604,604,604,604,604,604,,,,,,604,604,604,604,604,604,604,,,604,,,,,',
',604,,,604,604,,604,604,604,604,604,,604,604,604,,604,604,,604,604,',
',,,,,,,,,,,,,,,,,,,604,,,604,,,604,,,,,604,,,,604,,,,,,,,604,,,,,604',
'604,604,604,604,604,,,,604,604,,,,,,,604,,,604,,,604,604,409,409,409',
',409,,,,409,409,,,,409,,409,409,409,409,409,409,409,,,,,,409,409,409',
'409,409,409,409,,,409,,,,,,,409,,,409,409,,409,409,409,409,409,,409',
'409,409,,409,409,,409,409,,,,,,,,,,,,,,,,,,,,,409,,,409,,,409,,,,,,',
',,409,,,,,,,,409,,,,,409,409,409,409,409,409,,,,409,409,,,,,,,409,,',
'409,,,409,409,211,211,211,211,211,,,,211,211,,,,211,,211,211,211,211',
'211,211,211,,,,,,211,211,211,211,211,211,211,,,211,,,,,,211,211,,211',
'211,211,,211,211,211,211,211,,211,211,211,,211,211,,211,211,,,,,,,,',
',,,,,,,,,,,,211,,,211,,,211,,,,,211,,,,211,,,,,,,,211,,,,,211,211,211',
'211,211,211,,,,211,211,,,,,,,211,,,211,,,211,211,212,212,212,,212,,',
',212,212,,,,212,,212,212,212,212,212,212,212,,,,,,212,212,212,212,212',
'212,212,,,212,,,,,,,212,,,212,212,,212,212,212,212,212,,212,212,212',
',212,212,,212,212,,,,,,,,,,,,,,,,,,,,,212,,,212,,212,212,,,,,,,,,212',
',,,,,,,212,,,,,212,212,212,212,212,212,,,,212,212,,,,,,,212,,,212,,',
'212,212,215,215,215,,215,,,,215,215,,,,215,,215,215,215,215,215,215',
'215,,,,,,215,215,215,215,215,215,215,,,215,,,,,,,215,,,215,215,,215',
'215,215,215,215,,215,215,215,,215,215,,215,215,,,,,,,,,,,,,,,,,,,,,215',
',,215,,,215,,,,,,,,,215,,,,,,,,215,,,,,215,215,215,215,215,215,,,,215',
'215,,,,,,,215,,,215,,,215,215,791,791,791,791,791,,,,791,791,,,,791',
',791,791,791,791,791,791,791,,,,,,791,791,791,791,791,791,791,,,791',
',,,,,791,791,,791,791,791,,791,791,791,791,791,,791,791,791,,791,791',
',791,791,,,,,,,,,,,,,,,,,,,,,791,,,791,,,791,,,,,791,,,,791,,,,,,,,791',
',,,,791,791,791,791,791,791,,,,791,791,,,,,,,791,,,791,,,791,791,217',
'217,217,,217,,,,217,217,,,,217,,217,217,217,217,217,217,217,,,,,,217',
'217,217,217,217,217,217,,,217,,,,,,,217,,,217,217,,217,217,217,217,217',
',217,217,217,,217,217,,217,217,,,,,,,,,,,,,,,,,,,,,217,,,217,,,217,',
',,,,,,,217,,,,,,,,217,,,,,217,217,217,217,217,217,,,,217,217,,,,,,,217',
',,217,,,217,217,218,218,218,,218,,,,218,218,,,,218,,218,218,218,218',
'218,218,218,,,,,,218,218,218,218,218,218,218,,,218,,,,,,,218,,,218,218',
',218,218,218,218,218,,218,218,218,,218,218,,218,218,,,,,,,,,,,,,,,,',
',,,,218,,,218,,,218,,,,,,,,,218,,,,,,,,218,,,,,218,218,218,218,218,218',
',,,218,218,,,,,,,218,,,218,,,218,218,219,219,219,,219,,,,219,219,,,',
'219,,219,219,219,219,219,219,219,,,,,,219,219,219,219,219,219,219,,',
'219,,,,,,,219,,,219,219,,219,219,219,219,219,,219,219,219,,219,219,',
'219,219,,,,,,,,,,,,,,,,,,,,,219,,,219,,,219,,,,,,,,,219,,,,,,,,219,',
',,,219,219,219,219,219,219,,,,219,219,,,,,,,219,,,219,,,219,219,220',
'220,220,,220,,,,220,220,,,,220,,220,220,220,220,220,220,220,,,,,,220',
'220,220,220,220,220,220,,,220,,,,,,,220,,,220,220,,220,220,220,220,220',
',220,220,220,,220,220,,220,220,,,,,,,,,,,,,,,,,,,,,220,,,220,,,220,',
',,,,,,,220,,,,,,,,220,,,,,220,220,220,220,220,220,,,,220,220,,,,,,,220',
',,220,,,220,220,221,221,221,,221,,,,221,221,,,,221,,221,221,221,221',
'221,221,221,,,,,,221,221,221,221,221,221,221,,,221,,,,,,,221,,,221,221',
',221,221,221,221,221,,221,221,221,,221,221,,221,221,,,,,,,,,,,,,,,,',
',,,,221,,,221,,,221,,,,,,,,,221,,,,,,,,221,,,,,221,221,221,221,221,221',
',,,221,221,,,,,,,221,,,221,,,221,221,222,222,222,,222,,,,222,222,,,',
'222,,222,222,222,222,222,222,222,,,,,,222,222,222,222,222,222,222,,',
'222,,,,,,,222,,,222,222,,222,222,222,222,222,,222,222,222,,222,222,',
'222,222,,,,,,,,,,,,,,,,,,,,,222,,,222,,,222,,,,,,,,,222,,,,,,,,222,',
',,,222,222,222,222,222,222,,,,222,222,,,,,,,222,,,222,,,222,222,223',
'223,223,,223,,,,223,223,,,,223,,223,223,223,223,223,223,223,,,,,,223',
'223,223,223,223,223,223,,,223,,,,,,,223,,,223,223,,223,223,223,223,223',
',223,223,223,,223,223,,223,223,,,,,,,,,,,,,,,,,,,,,223,,,223,,,223,',
',,,,,,,223,,,,,,,,223,,,,,223,223,223,223,223,223,,,,223,223,,,,,,,223',
',,223,,,223,223,224,224,224,,224,,,,224,224,,,,224,,224,224,224,224',
'224,224,224,,,,,,224,224,224,224,224,224,224,,,224,,,,,,,224,,,224,224',
',224,224,224,224,224,,224,224,224,,224,224,,224,224,,,,,,,,,,,,,,,,',
',,,,224,,,224,,,224,,,,,,,,,224,,,,,,,,224,,,,,224,224,224,224,224,224',
',,,224,224,,,,,,,224,,,224,,,224,224,225,225,225,,225,,,,225,225,,,',
'225,,225,225,225,225,225,225,225,,,,,,225,225,225,225,225,225,225,,',
'225,,,,,,,225,,,225,225,,225,225,225,225,225,,225,225,225,,225,225,',
'225,225,,,,,,,,,,,,,,,,,,,,,225,,,225,,,225,,,,,,,,,225,,,,,,,,225,',
',,,225,225,225,225,225,225,,,,225,225,,,,,,,225,,,225,,,225,225,226',
'226,226,,226,,,,226,226,,,,226,,226,226,226,226,226,226,226,,,,,,226',
'226,226,226,226,226,226,,,226,,,,,,,226,,,226,226,,226,226,226,226,226',
',226,226,226,,226,226,,226,226,,,,,,,,,,,,,,,,,,,,,226,,,226,,,226,',
',,,,,,,226,,,,,,,,226,,,,,226,226,226,226,226,226,,,,226,226,,,,,,,226',
',,226,,,226,226,227,227,227,,227,,,,227,227,,,,227,,227,227,227,227',
'227,227,227,,,,,,227,227,227,227,227,227,227,,,227,,,,,,,227,,,227,227',
',227,227,227,227,227,,227,227,227,,227,227,,227,227,,,,,,,,,,,,,,,,',
',,,,227,,,227,,,227,,,,,,,,,227,,,,,,,,227,,,,,227,227,227,227,227,227',
',,,227,227,,,,,,,227,,,227,,,227,227,228,228,228,,228,,,,228,228,,,',
'228,,228,228,228,228,228,228,228,,,,,,228,228,228,228,228,228,228,,',
'228,,,,,,,228,,,228,228,,228,228,228,228,228,,228,228,228,,228,228,',
'228,228,,,,,,,,,,,,,,,,,,,,,228,,,228,,,228,,,,,,,,,228,,,,,,,,228,',
',,,228,228,228,228,228,228,,,,228,228,,,,,,,228,,,228,,,228,228,229',
'229,229,,229,,,,229,229,,,,229,,229,229,229,229,229,229,229,,,,,,229',
'229,229,229,229,229,229,,,229,,,,,,,229,,,229,229,,229,229,229,229,229',
',229,229,229,,229,229,,229,229,,,,,,,,,,,,,,,,,,,,,229,,,229,,,229,',
',,,,,,,229,,,,,,,,229,,,,,229,229,229,229,229,229,,,,229,229,,,,,,,229',
',,229,,,229,229,230,230,230,,230,,,,230,230,,,,230,,230,230,230,230',
'230,230,230,,,,,,230,230,230,230,230,230,230,,,230,,,,,,,230,,,230,230',
',230,230,230,230,230,,230,230,230,,230,230,,230,230,,,,,,,,,,,,,,,,',
',,,,230,,,230,,,230,,,,,,,,,230,,,,,,,,230,,,,,230,230,230,230,230,230',
',,,230,230,,,,,,,230,,,230,,,230,230,231,231,231,,231,,,,231,231,,,',
'231,,231,231,231,231,231,231,231,,,,,,231,231,231,231,231,231,231,,',
'231,,,,,,,231,,,231,231,,231,231,231,231,231,,231,231,231,,231,231,',
'231,231,,,,,,,,,,,,,,,,,,,,,231,,,231,,,231,,,,,,,,,231,,,,,,,,231,',
',,,231,231,231,231,231,231,,,,231,231,,,,,,,231,,,231,,,231,231,232',
'232,232,,232,,,,232,232,,,,232,,232,232,232,232,232,232,232,,,,,,232',
'232,232,232,232,232,232,,,232,,,,,,,232,,,232,232,,232,232,232,232,232',
',232,232,232,,232,232,,232,232,,,,,,,,,,,,,,,,,,,,,232,,,232,,,232,',
',,,,,,,232,,,,,,,,232,,,,,232,232,232,232,232,232,,,,232,232,,,,,,,232',
',,232,,,232,232,233,233,233,,233,,,,233,233,,,,233,,233,233,233,233',
'233,233,233,,,,,,233,233,233,233,233,233,233,,,233,,,,,,,233,,,233,233',
',233,233,233,233,233,,233,233,233,,233,233,,233,233,,,,,,,,,,,,,,,,',
',,,,233,,,233,,,233,,,,,,,,,233,,,,,,,,233,,,,,233,233,233,233,233,233',
',,,233,233,,,,,,,233,,,233,,,233,233,234,234,234,,234,,,,234,234,,,',
'234,,234,234,234,234,234,234,234,,,,,,234,234,234,234,234,234,234,,',
'234,,,,,,,234,,,234,234,,234,234,234,234,234,,234,234,234,,234,234,',
'234,234,,,,,,,,,,,,,,,,,,,,,234,,,234,,,234,,,,,,,,,234,,,,,,,,234,',
',,,234,234,234,234,234,234,,,,234,234,,,,,,,234,,,234,,,234,234,235',
'235,235,,235,,,,235,235,,,,235,,235,235,235,235,235,235,235,,,,,,235',
'235,235,235,235,235,235,,,235,,,,,,,235,,,235,235,,235,235,235,235,235',
',235,235,235,,235,235,,235,235,,,,,,,,,,,,,,,,,,,,,235,,,235,,,235,',
',,,,,,,235,,,,,,,,235,,,,,235,235,235,235,235,235,,,,235,235,,,,,,,235',
',,235,,,235,235,236,236,236,,236,,,,236,236,,,,236,,236,236,236,236',
'236,236,236,,,,,,236,236,236,236,236,236,236,,,236,,,,,,,236,,,236,236',
',236,236,236,236,236,,236,236,236,,236,236,,236,236,,,,,,,,,,,,,,,,',
',,,,236,,,236,,,236,,,,,,,,,236,,,,,,,,236,,,,,236,236,236,236,236,236',
',,,236,236,,,,,,,236,,,236,,,236,236,237,237,237,,237,,,,237,237,,,',
'237,,237,237,237,237,237,237,237,,,,,,237,237,237,237,237,237,237,,',
'237,,,,,,,237,,,237,237,,237,237,237,237,237,,237,237,237,,237,237,',
'237,237,,,,,,,,,,,,,,,,,,,,,237,,,237,,,237,,,,,,,,,237,,,,,,,,237,',
',,,237,237,237,237,237,237,,,,237,237,,,,,,,237,,,237,,,237,237,238',
'238,238,,238,,,,238,238,,,,238,,238,238,238,238,238,238,238,,,,,,238',
'238,238,238,238,238,238,,,238,,,,,,,238,,,238,238,,238,238,238,238,238',
',238,238,238,,238,238,,238,238,,,,,,,,,,,,,,,,,,,,,238,,,238,,,238,',
',,,,,,,238,,,,,,,,238,,,,,238,238,238,238,238,238,,,,238,238,,,,,,,238',
',,238,,,238,238,239,239,239,,239,,,,239,239,,,,239,,239,239,239,239',
'239,239,239,,,,,,239,239,239,239,239,239,239,,,239,,,,,,,239,,,239,239',
',239,239,239,239,239,,239,239,239,,239,239,,239,239,,,,,,,,,,,,,,,,',
',,,,239,,,239,,,239,,,,,,,,,239,,,,,,,,239,,,,,239,239,239,239,239,239',
',,,239,239,,,,,,,239,,,239,,,239,239,240,240,240,,240,,,,240,240,,,',
'240,,240,240,240,240,240,240,240,,,,,,240,240,240,240,240,240,240,,',
'240,,,,,,,240,,,240,240,,240,240,240,240,240,,240,240,240,,240,240,',
'240,240,,,,,,,,,,,,,,,,,,,,,240,,,240,,,240,,,,,,,,,240,,,,,,,,240,',
',,,240,240,240,240,240,240,,,,240,240,,,,,,,240,,,240,,,240,240,241',
'241,241,,241,,,,241,241,,,,241,,241,241,241,241,241,241,241,,,,,,241',
'241,241,241,241,241,241,,,241,,,,,,,241,,,241,241,,241,241,241,241,241',
',241,241,241,,241,241,,241,241,,,,,,,,,,,,,,,,,,,,,241,,,241,,,241,',
',,,,,,,241,,,,,,,,241,,,,,241,241,241,241,241,241,,,,241,241,,,,,,,241',
',,241,,,241,241,242,242,242,,242,,,,242,242,,,,242,,242,242,242,242',
'242,242,242,,,,,,242,242,242,242,242,242,242,,,242,,,,,,,242,,,242,242',
',242,242,242,242,242,,242,242,242,,242,242,,242,242,,,,,,,,,,,,,,,,',
',,,,242,,,242,,,242,,,,,,,,,242,,,,,,,,242,,,,,242,242,242,242,242,242',
',,,242,242,,,,,,,242,,,242,,,242,242,606,606,606,,606,,,,606,606,,,',
'606,,606,606,606,606,606,606,606,,,,,,606,606,606,606,606,606,606,,',
'606,,,,,,,606,,,606,606,,606,606,606,606,606,,606,606,606,,606,606,',
'606,606,,,,,,,,,,,,,,,,,,,,,606,,,606,,,606,,,,,,,,,606,,,,,,,,606,',
',,,606,606,606,606,606,606,,,,606,606,,,,,,,606,,,606,,,606,606,790',
'790,790,790,790,,,,790,790,,,,790,,790,790,790,790,790,790,790,,,,,',
'790,790,790,790,790,790,790,,,790,,,,,,790,790,,790,790,790,,790,790',
'790,790,790,,790,790,790,,790,790,,790,790,,,,,,,,,,,,,,,,,,,,,790,',
',790,,,790,,,,,790,,,,790,,,,,,,,790,,,,,790,790,790,790,790,790,,,',
'790,790,,,,,,,790,,,790,,,790,790,607,607,607,,607,,,,607,607,,,,607',
',607,607,607,607,607,607,607,,,,,,607,607,607,607,607,607,607,,,607',
',,,,,,607,,,607,607,,607,607,607,607,607,,607,607,607,,607,607,,607',
'607,,,,,,,,,,,,,,,,,,,,,607,,,607,,,607,,,,,,,,,607,,,,,,,,607,,,,,607',
'607,607,607,607,607,,,,607,607,,,,,,,607,,,607,,,607,607,251,251,251',
',251,,,,251,251,,,,251,,251,251,251,251,251,251,251,,,,,,251,251,251',
'251,251,251,251,,,251,,,,,,,251,,,251,251,,251,251,251,251,251,,251',
'251,251,,251,251,,251,251,,,,,,,,,,,,,,,,,,,,,251,,,251,,,251,,,,,,',
',,251,,,,,,,,251,,,,,251,251,251,251,251,251,,,,251,251,,,,,,,251,,',
'251,,,251,251,769,769,769,769,769,,,,769,769,,,,769,,769,769,769,769',
'769,769,769,,,,,,769,769,769,769,769,769,769,,,769,,,,,,769,769,,769',
'769,769,,769,769,769,769,769,,769,769,769,,769,769,,769,769,,,,,,,,',
',,,,,,,,,,,,769,,,769,,,769,,,,,769,,,,769,,,,,,,,769,,,,,769,769,769',
'769,769,769,,,,769,769,,,,,,,769,,,769,,,769,769,253,253,253,,253,,',
',253,253,,,,253,,253,253,253,253,253,253,253,,,,,,253,253,253,253,253',
'253,253,,,253,,,,,,,253,,,253,253,,253,253,253,253,253,,253,253,253',
',253,253,,253,253,,,,,,,,,,,,,,,,,,,,,253,,,253,,,253,,,,,,,,,253,,',
',,,,,253,,,,,253,253,253,253,253,253,,,,253,253,,,,,,,253,,,253,,,253',
'253,258,258,258,,258,,,,258,258,,,,258,,258,258,258,258,258,258,258',
',,,,,258,258,258,258,258,258,258,,,258,,,,,,,258,,,258,258,,258,258',
'258,258,258,,258,258,258,,258,258,,258,258,,,,,,,,,,,,,,,,,,,,,258,',
',258,,,258,,,,,,,,,258,,,,,,,,258,,,,,258,258,258,258,258,258,,,,258',
'258,,,,,,,258,,,258,,,258,258,612,612,612,,612,,,,612,612,,,,612,,612',
'612,612,612,612,612,612,,,,,,612,612,612,612,612,612,612,,,612,,,,,',
',612,,,612,612,,612,612,612,612,612,,612,612,612,,612,612,,612,612,',
',,,,,,,,,,,,,,,,,,,612,,,612,,,612,,,,,,,,,612,,,,,,,,612,,,,,612,612',
'612,612,612,612,,,,612,612,,,,,,,612,,,612,,,612,612,615,615,615,,615',
',,,615,615,,,,615,,615,615,615,615,615,615,615,,,,,,615,615,615,615',
'615,615,615,,,615,,,,,,,615,,,615,615,,615,615,615,615,615,,615,615',
'615,,615,615,,615,615,,,,,,,,,,,,,,,,,,,,,615,,,615,,,615,,,,,,,,,615',
',,,,,,,615,,,,,615,615,615,615,615,615,,,,615,615,,,,,,,615,,,615,,',
'615,615,371,371,371,,371,,,,371,371,,,,371,,371,371,371,371,371,371',
'371,,,,,,371,371,371,371,371,371,371,,,371,,,,,,,371,,,371,371,,371',
'371,371,371,371,,371,371,371,,371,371,,371,371,,,,,,,,,,,,,,,,,,,,,371',
',,371,,,371,,,,,,,,,371,,,,,,,,371,,,,,371,371,371,371,371,371,,,,371',
'371,,,,,,,371,,,371,,,371,371,264,264,264,,264,,,,264,264,,,,264,,264',
'264,264,264,264,264,264,,,,,,264,264,264,264,264,264,264,,,264,,,,,',
',264,,,264,264,,264,264,264,264,264,264,264,264,264,,264,264,,264,264',
',,,,,,,,,,,,,,,,,,,,264,,,264,,,264,,,,,264,,264,,264,,,,,,,,264,,,',
',264,264,264,264,264,264,,,,264,264,,,,,,,264,,,264,,,264,264,265,265',
'265,,265,,,,265,265,,,,265,,265,265,265,265,265,265,265,,,,,,265,265',
'265,265,265,265,265,,,265,,,,,,,265,,,265,265,,265,265,265,265,265,265',
'265,265,265,,265,265,,265,265,,,,,,,,,,,,,,,,,,,,,265,,,265,,,265,,',
',,265,,265,,265,,,,,,,,265,,,,,265,265,265,265,265,265,,,,265,265,,',
',,,,265,,,265,,,265,265,273,273,273,,273,,,,273,273,,,,273,,273,273',
'273,273,273,273,273,,,,,,273,273,273,273,273,273,273,,,273,,,,,,,273',
',,273,273,,273,273,273,273,273,273,273,273,273,,273,273,,273,273,,,',
',,,,,,,,,,,,,,,,,273,,,273,,273,273,,,,,273,,273,,273,,,,,,,,273,,,',
',273,273,273,273,273,273,,,,273,273,,,,,,,273,,,273,,,273,273,759,759',
'759,,759,,,,759,759,,,,759,,759,759,759,759,759,759,759,,,,,,759,759',
'759,759,759,759,759,,,759,,,,,,,759,,,759,759,,759,759,759,759,759,',
'759,759,759,,759,759,,759,759,,,,,,,,,,,,,,,,,,,,,759,,,759,,,759,,',
',,759,,,,759,,,,,,,,759,,,,,759,759,759,759,759,759,,,,759,759,,,,,',
',759,,,759,,,759,759,623,623,623,,623,,,,623,623,,,,623,,623,623,623',
'623,623,623,623,,,,,,623,623,623,623,623,623,623,,,623,,,,,,,623,,,623',
'623,,623,623,623,623,623,,623,623,623,,623,623,,623,623,,,,,,,,,,,,',
',,,,,,,,623,,,623,,,623,,,,,,,,,623,,,,,,,,623,,,,,623,623,623,623,623',
'623,,,,623,623,,,,,,,623,,,623,,,623,623,744,744,744,,744,,,,744,744',
',,,744,,744,744,744,744,744,744,744,,,,,,744,744,744,744,744,744,744',
',,744,,,,,,,744,,,744,744,,744,744,744,744,744,,744,744,744,,744,744',
',744,744,,,,,,,,,,,,,,,,,,,,,744,,,744,,,744,,,,,,,,,744,,,,,,,,744',
',,,,744,744,744,744,744,744,,,,744,744,,,,,,,744,,,744,,,744,744,277',
'277,277,277,277,,,,277,277,,,,277,,277,277,277,277,277,277,277,,,,,',
'277,277,277,277,277,277,277,,,277,,,,,,277,277,,277,277,277,,277,277',
'277,277,277,,277,277,277,,277,277,,277,277,,,,,,,,,,,,,,,,,,,,,277,',
',277,,,277,,,,,277,,,,277,,,,,,,,277,,,,,277,277,277,277,277,277,,,',
'277,277,,,,,,,277,,,277,,,277,277,743,743,743,,743,,,,743,743,,,,743',
',743,743,743,743,743,743,743,,,,,,743,743,743,743,743,743,743,,,743',
',,,,,,743,,,743,743,,743,743,743,743,743,,743,743,743,,743,743,,743',
'743,,,,,,,,,,,,,,,,,,,,,743,,,743,,,743,,,,,,,,,743,,,,,,,,743,,,,,743',
'743,743,743,743,743,,,,743,743,,,,,,,743,,,743,,,743,743,742,742,742',
',742,,,,742,742,,,,742,,742,742,742,742,742,742,742,,,,,,742,742,742',
'742,742,742,742,,,742,,,,,,,742,,,742,742,,742,742,742,742,742,,742',
'742,742,,742,742,,742,742,,,,,,,,,,,,,,,,,,,,,742,,,742,,,742,,,,,,',
',,742,,,,,,,,742,,,,,742,742,742,742,742,742,,,,742,742,,,,,,,742,,',
'742,,,742,742,627,627,627,627,627,,,,627,627,,,,627,,627,627,627,627',
'627,627,627,,,,,,627,627,627,627,627,627,627,,,627,,,,,,627,627,,627',
'627,627,,627,627,627,627,627,,627,627,627,,627,627,,627,627,,,,,,,,',
',,,,,,,,,,,,627,,,627,,,627,,,,,627,,,,627,,,,,,,,627,,,,,627,627,627',
'627,627,627,,,,627,627,,,,,,,627,,,627,,,627,627,281,281,281,,281,,',
',281,281,,,,281,,281,281,281,281,281,281,281,,,,,,281,281,281,281,281',
'281,281,,,281,,,,,,,281,,,281,281,,281,281,281,281,281,,281,281,281',
',281,281,541,,541,541,541,,541,,,,,,,,,,,,,,,,,281,,,281,,,281,,,,,',
',,,541,,,,,,,,541,541,541,541,,281,281,281,281,281,281,,,,281,281,,',
',281,,,281,,,281,,,281,281,282,282,282,282,282,,,,282,282,,,,282,,282',
'282,282,282,282,282,282,,,,,,282,282,282,282,282,282,282,,,282,,,,,',
'282,282,,282,282,282,,282,282,282,282,282,,282,282,282,,282,282,,282',
'282,,,,,,,,,,,,,,,,,,,,,282,,,282,,,282,,,,,282,,,,282,,,,,,,,282,,',
',,282,282,282,282,282,282,,,,282,282,,,,,,,282,,,282,,,282,282,631,631',
'631,,631,,,,631,631,,,,631,,631,631,631,631,631,631,631,,,,,,631,631',
'631,631,631,631,631,,,631,,,,,,,631,,,631,631,,631,631,631,631,631,',
'631,631,631,,631,631,,631,631,,,,,,,,,,,,,,,,,,,,,631,,,631,,,631,,',
',,,,,,631,,,,,,,,631,,,,,631,631,631,631,631,631,,,,631,631,,,,,,,631',
',,631,,,631,631,638,638,638,638,638,,,,638,638,,,,638,,638,638,638,638',
'638,638,638,,,,,,638,638,638,638,638,638,638,,,638,,,,,,638,638,,638',
'638,638,,638,638,638,638,638,,638,638,638,,638,638,,638,638,,,,,,,,',
',,,,,,,,,,,,638,,,638,,,638,,,,,638,,,,638,,,,,,,,638,,,,,638,638,638',
'638,638,638,,,,638,638,,,,,,,638,,,638,,,638,638,359,359,359,,359,,',
',359,359,,,,359,,359,359,359,359,359,359,359,,,,,,359,359,359,359,359',
'359,359,,,359,,,,,,,359,,,359,359,,359,359,359,359,359,,359,359,359',
',359,359,577,,577,577,577,,577,,,,,,,,,,,,,,,,,359,,,359,,,359,,,,,',
',,,577,577,,,,,,,577,577,577,577,,359,359,359,359,359,359,,,,359,359',
',,,,,,359,,,359,,,359,359,644,644,644,,644,,,,644,644,,,,644,,644,644',
'644,644,644,644,644,,,,,,644,644,644,644,644,644,644,,,644,,,,,,,644',
',,644,644,,644,644,644,644,644,644,644,644,644,,644,644,,644,644,,,',
',,,,,,,,,,,,,,,,,644,,,644,,,644,,,,,644,,644,,644,,,,,,,,644,,,,,644',
'644,644,644,644,644,,,,644,644,,,,,,,644,,,644,,,644,644,650,650,650',
'650,650,,,,650,650,,,,650,,650,650,650,650,650,650,650,,,,,,650,650',
'650,650,650,650,650,,,650,,,,,,650,650,,650,650,650,,650,650,650,650',
'650,,650,650,650,,650,650,,650,650,,,,,,,,,,,,,,,,,,,,,650,,,650,,,650',
',,,,650,,,,650,,,,,,,,650,,,,,650,650,650,650,650,650,,,,650,650,,,',
',,,650,,,650,,,650,650,651,651,651,651,651,,,,651,651,,,,651,,651,651',
'651,651,651,651,651,,,,,,651,651,651,651,651,651,651,,,651,,,,,,651',
'651,,651,651,651,,651,651,651,651,651,,651,651,651,,651,651,,651,651',
',,,,,,,,,,,,,,,,,,,,651,,,651,,,651,,,,,651,,,,651,,,,,,,,651,,,,,651',
'651,651,651,651,651,,,,651,651,,,,,,,651,,,651,,,651,651,346,346,346',
',346,,,,346,346,,,,346,,346,346,346,346,346,346,346,,,,,,346,346,346',
'346,346,346,346,,,346,,,,,,,346,,,346,346,,346,346,346,346,346,,346',
'346,346,,346,346,,346,346,,,,,,,,,,,,,,,,,,,,,346,,,346,,,346,,,,,,',
',,346,,,,,,,,346,,,,,346,346,346,346,346,346,,,,346,346,,,,,,,346,,',
'346,,,346,346,732,732,732,,732,,,,732,732,,,,732,,732,732,732,732,732',
'732,732,,,,,,732,732,732,732,732,732,732,,,732,,,,,,,732,,,732,732,',
'732,732,732,732,732,,732,732,732,,732,732,,732,732,,,,,,,,,,,,,,,,,',
',,,732,,,732,,,732,,,,,,,,,732,,,,,,,,732,,,,,732,732,732,732,732,732',
',,,732,732,,,,,,,732,,,732,,,732,732,731,731,731,,731,,,,731,731,,,',
'731,,731,731,731,731,731,731,731,,,,,,731,731,731,731,731,731,731,,',
'731,,,,,,,731,,,731,731,,731,731,731,731,731,,731,731,731,,731,731,',
'731,731,,,,,,,,,,,,,,,,,,,,,731,,,731,,,731,,,,,,,,,731,,,,,,,,731,',
',,,731,731,731,731,731,731,,,,731,731,,,,,,,731,,,731,,,731,731,294',
'294,294,,294,,,,294,294,,,,294,,294,294,294,294,294,294,294,,,,,,294',
'294,294,294,294,294,294,,,294,,,,,,,294,,,294,294,,294,294,294,294,294',
',294,294,294,,294,294,,,,,,,,,,,,,,,,,,,,,,,,294,,,294,,,294,,,,,,,',
',,,,,,,,,,,,,,294,294,294,294,294,294,,,,294,294,,,,,,,294,,,294,,,294',
'294,345,345,345,,345,,,,345,345,,,,345,,345,345,345,345,345,345,345',
',,,,,345,345,345,345,345,345,345,,,345,,,,,,,345,,,345,345,,345,345',
'345,345,345,,345,345,345,,345,345,,345,345,,,,,,,,,,,,,,,,,,,,,345,',
',345,,,345,,,,,,,,,345,,,,,,,,345,,,,,345,345,345,345,345,345,,,,345',
'345,,,,,,,345,,,345,,,345,345,725,725,725,725,725,,,,725,725,,,,725',
',725,725,725,725,725,725,725,,,,,,725,725,725,725,725,725,725,,,725',
',,,,,725,725,,725,725,725,,725,725,725,725,725,,725,725,725,,725,725',
',725,725,,,,,,,,,,,,,,,,,,,,,725,,,725,,,725,,,,,725,,,,725,,,,,,,,725',
',,,,725,725,725,725,725,725,,,,725,725,,,,,,,725,,,725,,,725,725,655',
'655,655,,655,,,,655,655,,,,655,,655,655,655,655,655,655,655,,,,,,655',
'655,655,655,655,655,655,,,655,,,,,,,655,,,655,655,,655,655,655,655,655',
',655,655,655,,655,655,,,,,,,,,,,,,,,,,,,,,,,,655,,,655,,,655,,,,,,,',
',,,,,,,,,,,,,,655,655,655,655,655,655,,,,655,655,,,,,,,655,,,655,,,655',
'655,665,665,665,,665,,,,665,665,,,,665,,665,665,665,665,665,665,665',
',,,,,665,665,665,665,665,665,665,,,665,,,,,,,665,,,665,665,,665,665',
'665,665,665,,665,665,665,,665,665,,,,,,,,,,,,,,,,,,,,,,,,665,,,665,',
',665,,,,,,,,,,,,,,,,,,,,,,665,665,665,665,665,665,,,,665,665,,,,,,,665',
',,665,,,665,665,713,713,713,713,713,,,,713,713,,,,713,,713,713,713,713',
'713,713,713,,,,,,713,713,713,713,713,713,713,,,713,,,,,,713,713,,713',
'713,713,,713,713,713,713,713,,713,713,713,,713,713,,713,713,,,,,,,,',
',,,,,,,,,,,,713,,,713,,,713,,,,,713,,,,713,,,,,,,,713,,,,,713,713,713',
'713,713,713,,,,713,713,,,,,,,713,,,713,,,713,713,303,303,303,,303,,',
',303,303,,,,303,,303,303,303,303,303,303,303,,,,,,303,303,303,303,303',
'303,303,,,303,,,,,,,303,,,303,303,,303,303,303,303,303,,303,303,303',
',303,303,,303,303,,,,,,,,,,,,,,,,,,,,,303,,,303,303,,303,,,,,,,,,303',
',,,,,,,303,,,,,303,303,303,303,303,303,,,,303,303,,,,,,,303,,,303,,',
'303,303,305,305,305,305,305,,,,305,305,,,,305,,305,305,305,305,305,305',
'305,,,,,,305,305,305,305,305,305,305,,,305,,,,,,305,305,,305,305,305',
',305,305,305,305,305,,305,305,305,,305,305,,305,305,,,,,,,,,,,,,,,,',
',,,,305,,,305,,,305,,,,,305,,,,305,,,,,,,,305,,,,,305,305,305,305,305',
'305,,,,305,305,,,,,,,305,,,305,,,305,305,671,671,671,,671,,,,671,671',
',,,671,,671,671,671,671,671,671,671,,,,,,671,671,671,671,671,671,671',
',,671,,,,,,,671,,,671,671,,671,671,671,671,671,,671,671,671,,671,671',
',671,671,,,,,,,,,,,,,,,,,,,,,671,,,671,,,671,,,,,671,,,,671,,,,,,,,671',
',,,,671,671,671,671,671,671,,,,671,671,,,,,,,671,,,671,,,671,671,712',
'712,712,712,712,,,,712,712,,,,712,,712,712,712,712,712,712,712,,,,,',
'712,712,712,712,712,712,712,,,712,,,,,,712,712,,712,712,712,,712,712',
'712,712,712,,712,712,712,,712,712,,712,712,,,,,,,,,,,,,,,,,,,,,712,',
',712,,,712,,,,,712,,,,712,,,,,,,,712,,,,,712,712,712,712,712,712,,,',
'712,712,,,,,,,712,,,712,,,712,712,702,702,702,,702,,,,702,702,,,,702',
',702,702,702,702,702,702,702,,,,,,702,702,702,702,702,702,702,,,702',
',,,,,,702,,,702,702,,702,702,702,702,702,,702,702,702,,702,702,,702',
'702,,,,,,,,,,,,,,,,,,,,,702,,,702,,,702,,,,,702,,,,702,,,,,,,,702,,',
',,702,702,702,702,702,702,,,,702,702,,,,,,,702,,,702,,,702,702,708,708',
'708,708,708,,,,708,708,,,,708,,708,708,708,708,708,708,708,,,,,,708',
'708,708,708,708,708,708,,,708,,,,,,708,708,,708,708,708,,708,708,708',
'708,708,,708,708,708,,708,708,,708,708,,,,,,,,,,,,,,,,,,,,,708,,,708',
',,708,,,,,708,,,,708,,,,,,,,708,,,,,708,708,708,708,708,708,,,,708,708',
',,,,,,708,,,708,,,708,708,38,38,38,,38,,,,38,38,,,,38,,38,38,38,38,38',
'38,38,,,,,,38,38,38,38,38,38,38,,,38,,,,,,,38,,,38,38,,38,38,38,38,38',
',38,38,38,,38,38,,38,38,,,,,,,,,,,,,,,,,,,,,38,,,38,,,38,,,,,,,,,38',
',,,,,,,38,,,,425,38,38,38,38,38,38,425,425,425,38,38,,425,425,,425,',
'38,,,38,,,38,38,,,,,,,,,,,425,425,,425,425,425,425,425,,,,,,,,,,,,,',
',,,,,,,,,,425,425,425,425,425,425,425,425,425,425,425,425,425,425,,',
'425,425,425,,425,,,,425,,,,,,,425,,425,,425,425,425,425,425,425,425',
',425,,425,,,,,,,,,,,,,425,425,,425,619,425,,,425,,425,619,619,619,,',
'619,619,619,,619,,,,,,,,,,619,619,,,,,,,,,619,619,,619,619,619,619,619',
',,,,,,,,,,,,,,,,,,,,,,,619,619,619,619,619,619,619,619,619,619,619,619',
'619,619,,,619,619,619,,619,619,,,619,,,619,,619,,619,,619,,619,619,619',
'619,619,619,619,,619,,619,,,,,,,,,,,,,619,619,619,619,618,619,,,619',
',619,618,618,618,,,618,618,618,,618,,,,,,,,,618,618,618,,,,,,,,,618',
'618,,618,618,618,618,618,,,,,,,,,,,,,,,,,,,,,,,,618,618,618,618,618',
'618,618,618,618,618,618,618,618,618,,,618,618,618,,618,618,,,618,,,618',
',618,,618,,618,,618,618,618,618,618,618,618,,618,618,618,,,,,,,,,,,',
',618,618,618,618,423,618,,,618,,618,423,423,423,,,,423,423,,423,,,,',
',,,,423,,,,,,,,,,,423,423,,423,423,423,423,423,,,,,,,,,,,,,,,,,,,,,',
',,423,423,423,423,423,423,423,423,423,423,423,423,423,423,,,423,423',
'423,,423,,,,423,,,,,,,423,,423,,423,423,423,423,423,423,423,,423,423',
'423,,,,,,,,,,,,,423,423,,423,419,423,,,423,,423,419,419,419,,,419,419',
'419,,419,,,,,,,,,419,419,419,,,,,,,,,419,419,,419,419,419,419,419,,',
',,,,,,,,,,,,,,,,,,,,,419,419,419,419,419,419,419,419,419,419,419,419',
'419,419,,,419,419,419,,,419,,419,419,,,419,,419,,419,,419,,419,419,419',
'419,419,419,419,,419,419,419,,,,,,,,,,,,,419,419,419,419,28,419,,,419',
',,28,28,28,,,28,28,28,,28,,,,,,,,,,28,28,,,,,,,,,28,28,,28,28,28,28',
'28,,,,,,,,,,,,,,,,,,,,,,,,28,28,28,28,28,28,28,28,28,28,28,28,28,28',
',,28,28,28,,,28,,28,28,,,28,,28,,28,,28,,28,28,28,28,28,28,28,,28,,28',
',,,,,,,,,,,,28,28,28,28,50,28,,,28,,,50,50,50,,,50,50,50,,50,,,,,,,',
',,50,50,50,,,,,,,,50,50,,50,50,50,50,50,,,,,,,,,,,,,,,,,,,,,,,,50,50',
'50,50,50,50,50,50,50,50,50,50,50,50,,,50,50,50,,,50,,,50,,,50,,50,,50',
',50,,50,50,50,50,50,50,50,,50,,50,,,,,,,,,,,,,50,50,50,50,27,50,,50',
'50,,,27,27,27,,,27,27,27,,27,,,,,,,,,27,27,27,,,,,,,,,27,27,,27,27,27',
'27,27,,,,,,,,,,,,,,,,,,,,,,,,27,27,27,27,27,27,27,27,27,27,27,27,27',
'27,,,27,27,27,,,27,,27,27,,,27,,27,,27,,27,,27,27,27,27,27,27,27,,27',
'27,27,,,,,,,,,,,,,27,27,27,27,480,27,,,27,,,480,480,480,,,480,480,480',
',480,,,,,,,,,,480,,,,,,,,,,480,480,,480,480,480,480,480,,,,,,,,,,,,',
'477,,,,,,,477,477,477,,,477,477,477,,477,,,,,,480,,,,477,,,480,,,,,480',
'480,477,477,,477,477,477,477,477,,,,,,,,,,,,,480,,,,,,,,,,,,,480,,480',
',,480,,,,477,,,,,,,477,,,,,477,477,,,,,,,,,,,,,,,,,,,,,477,,,,,,,,,',
',,,477,,477,,,477,403,403,403,403,403,403,403,403,403,403,403,403,403',
'403,403,403,403,403,403,403,403,403,403,403,,,,403,403,403,403,403,403',
'403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,,403,403',
',,403,,,,,,,,,403,403,,403,403,403,403,403,403,403,,,403,403,,,,403',
'403,403,403,,,,,,,,,,,,,403,403,,403,403,403,403,403,403,403,403,403',
'403,403,,,403,403,,,,,,,,,,403,399,399,399,399,399,399,399,399,399,399',
'399,399,399,399,399,399,399,399,399,399,399,399,399,399,,,,399,399,399',
'399,399,399,399,399,399,399,399,399,399,399,399,399,399,399,399,399',
'399,,399,399,,,399,,,,,,,,,399,399,,399,399,399,399,399,399,399,,,399',
'399,,,,399,399,399,399,,,,,,,,,,,,,399,399,,399,399,399,399,399,399',
'399,399,399,399,399,,,399,399,,,,,,,,,,399,8,8,8,8,8,8,8,8,8,8,8,8,8',
'8,8,8,8,8,8,8,8,8,8,8,,,,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,',
'8,8,,,8,,,,,,,,,8,8,,8,8,8,8,8,8,8,,,8,8,,,,8,8,8,8,,,,,,,,,,,,,8,8',
',8,8,8,8,8,8,8,8,8,8,8,,,8,8,,,,,,,,,,8,7,7,7,7,7,7,7,7,7,7,7,7,7,7',
'7,7,7,7,7,7,7,7,7,7,,,,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,,7',
'7,7,,7,,,,,,,,,7,7,,7,7,7,7,7,7,7,,,7,7,,,,7,7,7,7,,,,,,,,,,,,,7,7,',
'7,7,7,7,7,7,7,7,7,7,7,,,7,7,,,,,,,,,,7,191,191,191,191,191,191,191,191',
'191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,,,,191',
'191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191',
'191,191,191,,191,191,191,191,191,,191,,,,,,,191,191,,191,191,191,191',
'191,191,191,,,191,191,,,,191,191,191,191,,,,,,,,,,,,,191,191,,191,191',
'191,191,191,191,191,191,191,191,191,,,191,65,65,65,65,65,65,65,65,65',
'65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,,,,65,65,65,65,65,65,65',
'65,65,65,65,65,65,65,65,65,65,65,65,65,65,,65,65,65,65,65,,65,,,,,,',
'65,65,,65,65,65,65,65,65,65,,,65,65,,,,65,65,65,65,,,,,,65,,,,,,,65',
'65,,65,65,65,65,65,65,65,65,65,65,65,,,65,79,79,79,79,79,79,79,79,79',
'79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,,,,79,79,79,79,79,79,79',
'79,79,79,79,79,79,79,79,79,79,79,79,79,79,,79,79,79,79,79,,79,,,,,,',
'79,79,,79,79,79,79,79,79,79,,,79,79,,,,79,79,79,79,,,,,,,,,,,,,79,79',
',79,79,79,79,79,79,79,79,79,79,79,,,79,722,722,722,722,722,722,722,722',
'722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,,,,722',
'722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722',
'722,722,722,,722,722,,,722,,,,,,,,,722,722,,722,722,722,722,722,722',
'722,,,722,722,,,,722,722,722,722,,,,,,,,,,,,,722,722,,722,722,722,722',
'722,722,722,722,722,722,722,261,261,722,,261,,,,,,,,,261,261,,261,261',
'261,261,261,261,261,,,261,261,,,,261,261,261,261,,,,,,,,,,,,,261,261',
',261,261,261,261,261,261,261,261,261,261,261,262,262,261,,262,,,,,,',
',,262,262,,262,262,262,262,262,262,262,,,262,262,,,,262,262,262,262',
',,,,,,,,,,,,262,262,,262,262,262,262,262,262,262,262,262,262,262,642',
'642,262,,642,,,,,,,,,642,642,,642,642,642,642,642,642,642,,,642,642',
',,,642,642,642,642,,,,,,,,,,,,,642,642,,642,642,642,642,642,642,642',
'642,642,642,642,570,570,642,,570,,,,,,,,,570,570,,570,570,570,570,570',
'570,570,,,570,570,,,,570,570,570,570,,,,,,570,,,,,,,570,570,,570,570',
'570,570,570,570,570,570,570,570,570,517,517,570,,517,,,,,,,,,517,517',
',517,517,517,517,517,517,517,,,517,517,,,,517,517,517,517,,,,,,,,,,',
',,517,517,,517,517,517,517,517,517,517,517,517,517,517,506,506,517,',
'506,,,,,,,,,506,506,,506,506,506,506,506,506,506,,,506,506,,,,506,506',
'506,506,,,,,,,,,,,,,506,506,,506,506,506,506,506,506,506,506,506,506',
'506,778,778,506,,778,,,,,,,,,778,778,,778,778,778,778,778,778,778,,',
'778,778,,,,778,778,778,778,,,,,,,,,,,,,778,778,,778,778,778,778,778',
'778,778,778,778,778,778,888,888,778,,888,,,,,,,,,888,888,,888,888,888',
'888,888,888,888,,,888,888,,,,888,888,888,888,,,,,,888,,,,,,,888,888',
',888,888,888,888,888,888,888,888,888,888,888,505,505,888,,505,,,,,,',
',,505,505,,505,505,505,505,505,505,505,,,505,505,,,,505,505,505,505',
',,,,,505,,,,,,,505,505,,505,505,505,505,505,505,505,505,505,505,505',
'200,200,505,,200,,,,,,,,,200,200,,200,200,200,200,200,200,200,,,200',
'200,,,,200,200,200,200,,,,,,,,,,,,,200,200,,200,200,200,200,200,200',
'200,200,200,200,200,516,516,200,,516,,,,,,,,,516,516,,516,516,516,516',
'516,516,516,,,516,516,,,,516,516,516,516,,,,,,516,,,,,,,516,516,,516',
'516,516,516,516,516,516,516,516,516,516,199,199,516,,199,,,,,,,,,199',
'199,,199,199,199,199,199,199,199,,,199,199,,,,199,199,199,199,,,,,,199',
',,,,,,199,199,,199,199,199,199,199,199,199,199,199,199,199,568,568,199',
',568,,,,,,,,,568,568,,568,568,568,568,568,568,568,,,568,568,,,,568,568',
'568,568,,,,,,,,,,,,,568,568,,568,568,568,568,568,568,568,568,568,568',
'568,643,643,568,,643,,,,,,,,,643,643,,643,643,643,643,643,643,643,,',
'643,643,,,,643,643,643,643,,,,,,,,,,,,,643,643,,643,643,643,643,643',
'643,643,643,643,643,643,433,433,643,,433,,,,,,,,,433,433,,433,433,433',
'433,433,433,433,,,433,433,,,,433,433,433,433,,,,,,433,,,,,,,433,433',
',433,433,433,433,433,433,433,433,433,433,433,434,434,433,,434,,,,,,',
',,434,434,,434,434,434,434,434,434,434,,,434,434,,,,434,434,434,434',
',,,,,,,,,,,,434,434,,434,434,434,434,434,434,434,434,434,434,434,889',
'889,434,,889,,,,,,,,,889,889,,889,889,889,889,889,889,889,,,889,889',
',,,889,889,889,889,,,,,,,,,,,,,889,889,,889,889,889,889,889,889,889',
'889,889,889,889,,,889' ]
        racc_action_check = arr = ::Array.new(24525, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_action_pointer = [
    -2,  1084,   nil,   110,   nil,   737,   967, 22932, 22809,   945,
   918,   917,   964,   264,   592,   125,   nil,  1916,  2053,  2190,
  1015,   nil,  2464,  2601,  2738,   368,   122, 22249, 21991,   nil,
  3423,  3560,  3697,   nil,   907,   595,   962,   235, 21233,  4519,
  4656,   882,   199,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
 22120,   nil,  5204,  5341,  5478,   -15,  3709,  5889,  6026,   nil,
   nil,  6163,  6300,  6437,   nil, 23167,   nil,   nil,   nil,   nil,
   nil,   -22,   nil,   nil,   nil,   nil,   nil,   844,   840, 23279,
   nil,   nil,   nil,  7259,   nil,   nil,  7396,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   964,   nil,  7670,   nil,
   nil,   nil,  7807,  7944,  8081,  8218,  8355,  8492,   nil,   392,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil, 23055,   827,   nil,  9040,  9177,  9314,  9451,  9588, 24111,
 23991,  9999, 10136, 10273,   nil,   265,   -53,   894,    56,   785,
   831, 11232, 11369,   nil,   nil, 11506,   824, 11780, 11917, 12054,
 12191, 12328, 12465, 12602, 12739, 12876, 13013, 13150, 13287, 13424,
 13561, 13698, 13835, 13972, 14109, 14246, 14383, 14520, 14657, 14794,
 14931, 15068, 15205,   nil,   nil,   nil,  1779,   nil,   785,   776,
   nil, 15753,   809, 16027,   nil,   nil,   nil,   nil, 16164,   nil,
   nil, 23451, 23511,   788, 16712, 16849,   nil,   nil,   nil,   nil,
   nil,   nil,   nil, 16986,   429,   668,   745, 17534,   736,   728,
   690, 18082, 18219,   284,   285,   761,   300,   725,   688,   -11,
   nil,   720,   572,   nil, 19589,   nil,   594,   728,   704,   316,
   nil,   658,   nil, 20411,   nil, 20548,   193,   nil,   599,  -102,
   481,   594,   559,   297,   442,   nil,   nil,    -4,  6449,   nil,
   nil,   nil,   264,   230,   nil,   229,   194,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,  2753,   nil,   nil,   nil,   157,   nil,
   nil,   147,   302,    80,    76, 19726, 19178,   184,   368,   -61,
    54,   -14,    76,   nil,   290,   nil,    79,   nil,   nil, 18630,
   475,   156,   444,   456,   477,   270,   453,   466,   nil,   581,
   nil, 16575,   nil,   178,   nil,   159,   nil,   225,   474,   135,
   nil,   573,   -54,   nil,   142,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   585, 22686,
   nil,   nil,   nil, 22563,   621,   nil,   nil,   409,   nil, 11095,
   615,   nil,   668,   nil,   nil,  1368,   750,   591,   496, 21862,
   nil,   nil,   nil, 21733,   755, 21346,   nil,  9725,  8766,   nil,
   957,   nil,   nil, 24291, 24351,  8629,   221,  7122,  6574,  5615,
   123,   nil,  4793,  4519,   813,   274,   838,   840,   866,   874,
  3690,  3827,  2761,  3423,  3286,  3012,  3149,  5204,  3971,  4108,
  4245,  5067,  4382,  1032,   758,  4656,  4930,   819,   -38,   nil,
   546,   nil,   409,   nil,   272,   nil,   nil, 22434,   nil,   nil,
 22378,   -27,   nil,   988,   961,   614,   957,  1055,   nil,   nil,
   683,   -36,   -17,   959,   nil,   nil,   135,   956,   917,   nil,
   nil,   911,   820,   947,  1094, 23931, 23751,   266,   930,   nil,
   nil,   885,   nil,  1231,  1368,  1505, 24051, 23691,  2053,  2190,
   996,   973,   890,   nil,   nil,  2875,   nil,   nil,  3012,   nil,
   nil,   nil,   nil,  3149,  3286,   865,   nil,   542,   nil,   nil,
  3834, 18094,   nil,   558,   nil,   nil,   859,   nil,  2861,   nil,
   814,   943,   nil,   nil,  3971,   928,   nil,   nil,  4108,   -19,
   118,   851,   855,  4930,   nil,   nil,   234,   nil, 24171,  5067,
 23631,   nil,   nil,  9862,   101, 10410,   nil, 18642,   nil,   nil,
   nil,    38,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   -35,   nil,   nil,   nil,   675,   nil,   nil,   nil,
   nil,   nil, 10684,   666, 10958,   677, 15342, 15616,   600,   nil,
   nil,   nil, 16301,   572,   nil, 16438,    16,   135, 21604, 21475,
   498,   546,   nil, 17260,   nil,  3572,   nil, 17945,   309,   nil,
   328, 18356,   nil,   nil,   nil,   nil,   nil,   nil, 18493,   nil,
   195,    57, 23571, 24231, 18767,   683,   -63,   nil,   nil,   893,
 18904, 19041,   nil,   531,   -51, 20000,    47,   nil,    87,    43,
    -2,   181,    14,   315,   238, 20137,  1916,   307,   316,   343,
   390, 20685,   nil,   nil,   347,   343,   450,   nil,   nil,   365,
   nil,   378,   336,   481,   430,   454,   nil,   nil,   499,  2724,
   nil,   623,   nil,   598,   nil,   nil,   nil,   nil,   nil,   619,
   nil,   658, 20959,  4382,   -24,   nil,   600,   597, 21096,   241,
   nil,   210, 20822, 20274,  3846,   366,   618,   621,   637,   nil,
   635,   nil, 23391,   682,   775, 19863,   nil,   nil,   nil,  2464,
   675, 19452, 19315,   nil,  2327,   nil,  2601,   nil,   nil,  1231,
   nil,  1094, 17808, 17671, 17397,   -52,  1505,   nil,   738,   838,
   nil,   nil,   736,   nil,   nil,   767,   769,   683,   839, 17123,
   nil,   758,   867,   755,   274,   nil,   nil,   877,   nil, 15890,
   772,   813,   nil,   nil,   nil,   nil,   nil,   nil, 23811,   nil,
   488,   nil,   nil,   nil,   nil,  1217,   899,   nil,   nil,   901,
 15479, 11643,   nil,   nil,    90,    47,   nil,   919,   nil,   nil,
   921,   922,   807,   nil,  7545,   nil,   405,   nil,   nil,   336,
 10821,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   835,   820,
   nil,  1642, 10547,   nil,   nil,   nil,   861,   825,   nil,   nil,
   nil,  8903,   nil,   nil,     0,  7533,   nil,   875,   838,   nil,
   nil,  6985,   nil,   961,   962,  6848,  6711,   nil,   nil,  5752,
   nil,   nil,   892,   -87,   857,   nil,   865,   864,   nil,   nil,
  6312,   nil,   nil,   nil,  4793,   nil,  4245,   183,   182,   968,
   269,   nil,   nil,    98,   nil,   nil,   nil,   297,  2327,  1035,
   nil,   576,   nil,   nil,   nil,  1779,  1041,  1642, 23871, 24411,
   275,   957,   nil,   nil,   nil,  1059,   nil,   941,  1061,   nil,
   983,   112,    -7,    86,   409,   507,   nil,   nil,   nil,   412,
   nil ]

racc_action_default = [
    -3,  -525,    -1,  -513,    -4,    -6,  -525,  -525,  -525,  -525,
  -525,  -525,  -525,  -525,  -268,   -36,   -37,  -525,  -525,   -42,
   -44,   -45,  -279,  -317,  -318,   -49,  -246,  -246,  -246,   -61,
   -10,   -65,   -72,   -74,  -525,  -444,  -525,  -525,  -525,  -525,
  -525,  -515,  -226,  -261,  -262,  -263,  -264,  -265,  -266,  -267,
  -503,  -270,  -525,  -524,  -495,  -287,  -524,  -525,  -525,  -292,
  -295,  -513,  -525,  -525,  -309,  -525,  -319,  -320,  -389,  -390,
  -391,  -392,  -393,  -524,  -396,  -524,  -524,  -524,  -524,  -524,
  -423,  -429,  -430,  -433,  -434,  -435,  -436,  -437,  -438,  -439,
  -440,  -441,  -442,  -443,  -446,  -447,  -525,    -2,  -514,  -520,
  -521,  -522,  -525,  -525,  -525,  -525,  -525,    -3,   -13,  -525,
  -100,  -101,  -102,  -103,  -104,  -105,  -106,  -109,  -110,  -111,
  -112,  -113,  -114,  -115,  -116,  -117,  -118,  -119,  -120,  -121,
  -122,  -123,  -124,  -125,  -126,  -127,  -128,  -129,  -130,  -131,
  -132,  -133,  -134,  -135,  -136,  -137,  -138,  -139,  -140,  -141,
  -142,  -143,  -144,  -145,  -146,  -147,  -148,  -149,  -150,  -151,
  -152,  -153,  -154,  -155,  -156,  -157,  -158,  -159,  -160,  -161,
  -162,  -163,  -164,  -165,  -166,  -167,  -168,  -169,  -170,  -171,
  -172,  -173,  -174,  -175,  -176,  -177,  -178,  -179,  -180,  -181,
  -182,  -525,   -18,  -107,   -10,  -525,  -525,  -525,  -524,  -525,
  -525,  -525,  -525,  -525,   -40,  -525,  -444,  -525,  -268,  -525,
  -525,   -10,  -525,   -41,  -218,  -525,  -525,  -525,  -525,  -525,
  -525,  -525,  -525,  -525,  -525,  -525,  -525,  -525,  -525,  -525,
  -525,  -525,  -525,  -525,  -525,  -525,  -525,  -525,  -525,  -525,
  -525,  -525,  -525,  -360,  -362,   -46,  -227,  -239,  -253,  -253,
  -243,  -525,  -254,  -525,  -279,  -317,  -318,  -497,  -525,   -47,
   -48,  -525,  -525,   -53,  -524,  -525,  -286,  -365,  -372,  -374,
   -59,  -370,   -60,  -525,  -513,   -11,   -61,   -10,  -525,  -525,
   -66,   -69,   -10,   -80,  -525,  -525,   -87,  -282,  -515,  -525,
  -321,  -371,  -525,   -71,  -525,   -76,  -275,  -431,  -432,  -525,
  -203,  -204,  -219,  -525,  -516,   -10,  -515,  -228,  -515,  -517,
  -517,  -525,  -525,  -517,  -525,  -288,  -289,  -525,  -525,  -332,
  -333,  -341,  -524,  -463,  -348,  -524,  -524,  -359,  -462,  -464,
  -465,  -466,  -467,  -468,  -525,  -479,  -484,  -485,  -487,  -488,
  -489,  -525,   -43,  -525,  -525,  -525,  -525,  -513,  -525,  -514,
  -525,   -96,  -525,   -98,  -525,  -268,  -525,  -306,  -444,  -525,
  -100,  -101,  -138,  -139,  -155,  -160,  -167,  -170,  -312,  -525,
  -493,  -525,  -394,  -525,  -409,  -525,  -411,  -525,  -525,  -525,
  -401,  -525,  -525,  -407,  -525,  -422,  -424,  -425,  -426,  -427,
   911,    -5,  -523,   -19,   -20,   -21,   -22,   -23,  -525,  -525,
   -15,   -16,   -17,  -525,  -525,   -25,   -33,  -183,  -254,  -525,
  -525,   -26,   -34,   -35,   -27,  -185,  -525,  -504,  -505,  -246,
  -367,  -506,  -507,  -504,  -246,  -505,  -369,  -509,  -510,   -32,
  -192,   -38,   -39,  -525,  -525,  -524,  -275,  -525,  -525,  -525,
  -525,  -285,  -193,  -194,  -195,  -196,  -197,  -198,  -199,  -200,
  -205,  -206,  -207,  -208,  -209,  -210,  -211,  -212,  -213,  -214,
  -215,  -216,  -217,  -220,  -221,  -222,  -223,  -525,  -524,  -240,
  -525,  -241,  -525,  -251,  -525,  -255,  -500,  -246,  -504,  -505,
  -246,  -524,   -54,  -525,  -515,  -515,  -253,  -239,  -247,  -248,
  -525,  -524,  -524,  -525,  -281,    -9,  -514,  -525,   -62,  -273,
   -77,   -67,  -525,  -525,  -524,  -525,  -525,   -86,  -525,  -431,
  -432,   -73,   -78,  -525,  -525,  -525,  -525,  -525,  -224,  -525,
  -381,  -525,  -525,  -229,  -230,  -519,  -518,  -232,  -519,  -277,
  -278,  -496,  -329,   -10,   -10,  -525,  -331,  -525,  -350,  -357,
  -525,  -354,  -355,  -525,  -358,  -463,  -525,  -470,  -525,  -472,
  -474,  -478,  -486,  -490,   -10,  -322,  -323,  -324,   -10,  -525,
  -525,  -525,  -525,   -10,  -376,  -301,   -96,   -97,  -525,  -524,
  -525,  -304,  -448,  -525,  -525,  -525,  -310,  -461,  -314,  -511,
  -512,  -515,  -395,  -410,  -413,  -414,  -416,  -397,  -412,  -398,
  -399,  -400,  -525,  -403,  -405,  -406,  -525,  -428,    -7,   -14,
  -108,   -24,  -525,  -260,  -525,  -276,  -525,  -525,   -55,  -237,
  -238,  -366,  -525,   -57,  -368,  -525,  -504,  -505,  -504,  -505,
  -525,  -183,  -284,  -525,  -344,  -525,  -346,   -10,  -253,  -252,
  -256,  -525,  -498,  -499,   -50,  -363,   -51,  -364,   -10,  -233,
  -525,  -525,  -525,  -525,  -525,   -42,  -525,  -245,  -249,  -525,
   -10,   -10,  -280,   -12,   -62,  -525,   -70,   -75,  -525,  -504,
  -505,  -524,  -508,   -85,  -525,  -525,  -191,  -201,  -202,  -525,
  -524,  -524,  -271,  -272,  -517,  -525,  -525,  -330,  -342,  -525,
  -349,  -524,  -343,  -525,  -524,  -524,  -480,  -469,  -525,  -525,
  -477,  -524,  -325,  -524,  -293,  -326,  -327,  -328,  -296,  -525,
  -299,  -525,  -525,  -525,   -96,   -99,  -508,  -525,   -10,  -525,
  -450,  -525,   -10,   -10,  -461,  -525,  -492,  -492,  -492,  -460,
  -463,  -482,  -525,  -525,  -525,   -10,  -402,  -404,  -408,  -184,
  -258,  -525,  -525,   -29,  -187,   -30,  -188,   -56,   -31,  -189,
   -58,  -190,  -525,  -525,  -525,  -276,  -225,  -345,  -525,  -525,
  -242,  -257,  -525,  -234,  -235,  -524,  -524,  -515,  -525,  -525,
  -250,  -525,  -525,   -68,   -81,   -79,  -283,  -524,  -339,   -10,
  -382,  -524,  -383,  -384,  -231,  -334,  -335,  -356,  -525,  -275,
  -525,  -352,  -353,  -471,  -473,  -476,  -525,  -336,  -337,  -525,
   -10,   -10,  -298,  -300,  -525,  -525,  -276,  -525,  -449,  -307,
  -525,  -525,  -515,  -452,  -525,  -456,  -525,  -458,  -459,  -525,
  -525,  -315,  -494,  -415,  -418,  -419,  -420,  -421,  -525,  -259,
   -28,  -186,  -525,  -347,  -361,   -52,  -525,  -253,  -373,  -375,
    -8,   -10,  -388,  -340,  -525,  -525,  -386,  -274,  -524,  -475,
  -290,  -525,  -291,  -525,  -525,  -525,   -10,  -302,  -305,   -10,
  -311,  -313,  -525,  -492,  -492,  -491,  -492,  -525,  -483,  -481,
  -461,  -417,  -236,  -244,  -525,  -387,   -10,   -88,  -525,  -525,
   -95,  -385,  -351,  -525,  -294,  -297,  -256,  -524,   -10,  -525,
  -451,  -525,  -454,  -455,  -457,   -10,  -381,  -524,  -525,  -525,
   -94,   -10,  -377,  -378,  -379,  -525,  -308,  -492,  -525,  -380,
  -525,  -504,  -505,  -508,   -93,  -524,  -303,  -453,  -316,   -89,
  -338 ]

clist = [
'10,471,12,327,247,247,247,319,290,290,101,248,248,248,368,343,344,113',
'113,347,213,311,554,558,562,5,547,485,386,670,10,511,12,310,313,308',
'406,413,521,290,290,116,116,280,108,193,482,524,527,98,356,531,686,293',
'713,263,270,272,694,698,393,394,395,396,97,716,276,539,101,278,542,544',
'583,567,629,113,629,635,593,678,637,767,719,858,649,786,546,632,2,113',
'345,790,627,346,647,681,791,703,10,685,12,878,708,303,789,638,10,10',
'12,12,245,259,260,375,377,650,651,384,575,849,359,712,348,5,577,722',
'860,317,532,13,571,397,5,841,684,718,316,315,312,370,386,488,305,632',
'468,491,205,205,492,892,702,205,205,205,771,834,372,373,858,13,284,284',
'369,379,592,578,416,382,813,724,725,802,853,399,350,192,830,784,310',
'391,308,205,205,1,410,410,205,205,,,205,284,354,,10,398,12,405,411,414',
',113,716,429,,,,,,,428,10,,12,,,,,,719,,,,,,,,13,,,,205,205,205,205',
'13,13,699,,656,547,,,690,,,487,247,629,,279,,,486,248,247,,204,290,',
',,248,,,327,,,,535,,290,718,,,267,271,10,,12,,101,10,,12,,,,893,705',
',727,306,,847,419,424,342,342,910,688,342,501,559,560,10,512,12,,855',
',855,,276,855,686,497,,276,,496,503,678,13,205,205,205,205,,,205,205',
'205,,,495,290,885,838,,13,205,342,342,342,342,576,,716,,508,,484,489',
'101,635,637,477,480,,,493,854,572,856,719,,,522,,523,,,,,,,,,,750,547',
',,,,855,,,,,737,763,205,205,899,740,,,,,,205,620,,,13,757,561,113,284',
'13,774,113,404,310,,308,718,,,,,284,,,777,,,781,782,279,,116,13,307',
'599,116,320,897,600,797,431,432,428,800,801,,608,,628,,440,613,,374',
',376,376,380,383,376,,35,,,,,629,,,,658,846,205,205,,839,,290,,,,,310',
',308,,354,,,,,35,283,283,10,279,12,,205,,279,,,674,634,,,636,,,772,866',
'512,,428,290,805,807,808,653,,,,283,358,428,358,419,424,709,,10,10,12',
'12,707,267,,271,,,,,,640,641,,310,,308,891,894,10,,12,,10,,12,35,,10',
'205,12,695,695,,35,35,,327,,,,748,,428,863,307,710,879,872,,342,342',
',,,,,,,,,,,,,,661,,,,,,,733,735,,581,661,,738,,,,898,205,,,,,628,13',
'758,10,,12,,284,290,205,,,,,10,,12,,290,723,,,483,,205,,10,10,12,12',
',882,883,35,884,,410,795,13,13,,,661,512,610,682,,811,,614,35,,,765',
',,,,,13,,,,13,,,,794,13,,,,,,205,907,,,205,,205,,,,10,,12,,10,10,12',
'12,798,,799,,,,803,,,10,610,12,,610,306,,113,,820,205,205,,755,756,35',
'205,,,283,35,,,827,,,,,675,676,,13,283,,669,,,,,,,,13,35,10,,12,,205',
'691,,,14,693,13,13,,,701,284,,,,428,,10,10,12,12,284,,,,,873,,609,695',
',,,,14,286,286,,,290,342,,711,,307,,826,,,358,,,,314,,,,,10,205,12,',
'871,,13,,286,355,13,13,,,,10,749,12,10,624,12,,,13,900,,,752,609,,205',
'609,624,852,,10,310,12,308,761,762,,624,624,14,,,10,,12,,,14,14,10,307',
'12,,,,10,,12,,,,,13,428,,,,,,,,,,,610,,,614,,,,,,13,13,,,,,,,,,,,,,',
',,,,,,,,,342,,818,,,,,,307,,,,,,,,35,13,,,,868,283,,408,412,,205,14',
',,,13,,,13,,,,,,661,,,,14,833,,,,,,13,35,35,,,,,,358,610,610,,13,,,843',
'844,,,13,,205,35,,,13,35,,473,,475,35,,,,476,,,,,,,,,,,,,609,,,,,,,',
'865,768,773,14,,,,286,14,,,,,,,877,,,,,286,,768,,768,,,,,,342,14,,,',
'886,,,,35,,,,,,,,895,,,35,,,,,,,,,,905,,35,35,,,,283,,,,,,,,,,283,,',
',,,,,355,609,609,,,,,,,,,,,832,,,,836,,,,,,,,,,,,,,,,,,35,,,,35,35,',
'214,,,603,246,246,246,,,,35,,,,,,,,,,300,301,302,,,,,,,,,,,,,246,246',
',,,,,,,,,,,,,,,,,35,,,,,,,,,,630,,314,,633,,,,,,,35,35,,,,,768,,,646',
',,,,,,307,,,,14,,,,,,286,,,,,,,,768,,,,,,,35,,,630,867,,314,,,,,,,,',
'35,14,14,35,,,,,355,,,,,,,,,,,,35,,14,,,,14,,,,,14,35,,,,,,,35,,,,,',
'35,407,246,415,246,,,430,,,,,,,,,,,,,,214,730,442,443,444,445,446,447',
'448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464',
'465,466,467,751,14,,,,,,,246,,246,,14,630,,246,,,,,,246,246,,14,14,',
',,286,246,,,,,,,,,286,770,,,,,,,,,,,,,,,,,,,,518,,,,,,,,,,,408,,,,,',
',,,,,14,,,,14,14,,,,,,,,,,,817,14,819,,289,289,,,,,,289,289,289,,,,',
',,,,,,,,,289,,,408,,,,,289,289,,,,,,,,,14,,,,,,,,,,,,,,,,,,,,,14,14',
'246,,,,,,,,,,,,,859,,,,,,,,,,,,,246,,430,621,415,,,,,,,,,14,,,,870,',
',,,876,,,,,,14,,,14,,,,246,,246,,246,,876,,,,,,,14,,,,,,,645,,,,,14',
',,,,,,14,,246,,,,14,,,,,666,667,668,,,,,,,,,,246,,,246,289,,289,289',
'289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289',
'289,289,289,289,289,289,289,,,,,,,,,289,,289,,246,,,289,,,,,,,,,,,,',
',,,,,,,,,,289,,,,,,,729,,246,,734,736,289,,,,739,,,741,,289,,,,,,746',
',,,,,,,246,,,,,,,,,,,,,246,,,,,,,,,,,,,,,,,,,,,,,,,,,246,,289,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,246,,,,,,,,,,,,,,,,,,,,,289,,,,,,,,246,821,,,',
',,,,,,734,736,739,,,,,,,289,289,289,,,,,,246,,,,,,,,,,,,,,,,,,,,,,,',
',289,,289,,289,,,,,,,,,,,,,,,,,,,,,,246,,,,,,289,,,,,,821,,,,,289,289',
'289,,,,,,,,,,289,,,289,,,246,,,,,,,,,289,,,,,,,,,,246,,,,,,,,,,,,,,',
',,,,,,,,246,,,,,,,,,,,,,,,,,,,,,,,,,,,,,289,,289,,,,,,,,,,,289,,,,,',
',,289,,,,,,,,289,,,,,,,,,,,,,,,,,,,,,,,,289,,,,,,,,,,289,,,,,,289,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,289,,,,,,,,,,,,,,,,,,,,,,,,,,,,,289,,,,',
',,,,,,289,289,289,,,,,,,,,,,,,,,289,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,289,,,,,,,,,,,,289,,,,,,,,,,,,,289,,,,,,,,,,289,,',
',,,,,,,,,,,,,,,,289' ]
        racc_goto_table = arr = ::Array.new(2339, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'17,59,20,105,29,29,29,101,52,52,80,54,54,54,47,16,16,48,48,16,18,22',
'75,75,78,7,136,32,47,10,17,43,20,56,56,29,24,24,8,52,52,50,50,41,14',
'14,35,55,55,6,46,55,138,42,81,34,34,34,77,77,16,16,16,16,4,108,38,107',
'80,39,107,107,127,45,60,48,60,58,127,104,58,11,106,142,61,76,139,145',
'2,48,85,86,36,87,60,109,88,89,17,109,20,90,91,51,11,36,17,17,20,20,31',
'31,31,124,124,36,36,124,92,93,94,95,4,7,96,97,98,99,100,21,79,7,7,102',
'103,109,74,72,71,70,47,62,84,145,111,113,21,21,114,115,116,21,21,21',
'117,118,122,123,142,21,21,21,82,125,126,83,22,128,129,130,131,133,134',
'27,19,15,12,140,56,5,29,21,21,1,54,54,21,21,,,21,21,21,,17,2,20,18,18',
'18,,48,108,18,,,,,,,48,17,,20,,,,,,106,,,,,,,,21,,,,21,21,21,21,21,21',
'78,,43,136,,,136,,,29,29,60,,9,,,54,54,29,,26,52,,,,54,,,105,,,,101',
',52,109,,,57,57,17,,20,,80,17,,20,,,,11,45,,127,26,,77,33,33,26,26,76',
'139,26,42,16,16,17,41,20,,106,,106,,38,106,138,39,,38,,6,39,104,21,21',
'21,21,21,,,21,21,21,,,4,52,81,109,,21,21,26,26,26,26,46,,108,,51,,31',
'31,80,58,58,33,33,,,31,109,80,109,106,,,51,,51,,,,,,,,,,59,136,,,,,106',
',,,,35,43,21,21,10,35,,,,,,21,22,,,21,32,4,48,21,21,55,48,9,56,,29,109',
',,,,21,,,107,,,107,107,9,,50,21,53,14,50,53,109,14,8,26,26,48,8,8,,34',
',56,,26,34,,53,,53,53,53,53,53,,44,,,,,60,,,,22,75,21,21,,136,,52,,',
',,56,,29,,21,,,,,44,44,44,17,9,20,,21,,9,,,56,34,,,34,,,24,75,41,,48',
'52,135,135,135,7,,,,44,44,48,44,33,33,16,,17,17,20,20,22,57,,57,,,,',
',51,51,,56,,29,75,78,17,,20,,17,,20,44,,17,21,20,80,80,,44,44,,105,',
',,101,,48,59,53,80,8,107,,26,26,,,,,,,,,,,,,,,33,,,,,,,18,18,,26,33',
',18,,,,8,21,,,,,56,21,29,17,,20,,21,52,21,,,,,17,,20,,52,51,,,53,,21',
',17,17,20,20,,135,135,44,135,,54,16,21,21,,,33,41,57,21,,47,,57,44,',
',41,,,,,,21,,,,21,,,,54,21,,,,,,21,135,,,21,,21,,,,17,,20,,17,17,20',
'20,80,,80,,,,80,,,17,57,20,,57,26,,48,,18,21,21,,33,33,44,21,,,44,44',
',,54,,,,,9,9,,21,44,,26,,,,,,,,21,44,17,,20,,21,9,,,23,9,21,21,,,9,21',
',,,48,,17,17,20,20,21,,,,,16,,53,80,,,,,23,23,23,,,52,26,,26,,53,,51',
',,44,,,,25,,,,,17,21,20,,17,,21,,23,23,21,21,,,,17,9,20,17,53,20,,,21',
'22,,,9,53,,21,53,53,51,,17,56,20,29,9,9,,53,53,23,,,17,,20,,,23,23,17',
'53,20,,,,17,,20,,,,,21,48,,,,,,,,,,,57,,,57,,,,,,21,21,,,,,,,,,,,,,',
',,,,,,,,,26,,9,,,,,,53,,,,,,,,44,21,,,,21,44,,25,25,,21,23,,,,21,,,21',
',,,,,33,,,,23,9,,,,,,21,44,44,,,,,,44,57,57,,21,,,9,9,,,21,,21,44,,',
'21,44,,25,,25,44,,,,25,,,,,,,,,,,,,53,,,,,,,,9,53,53,23,,,,23,23,,,',
',,,9,,,,,23,,53,,53,,,,,,26,23,,,,9,,,,44,,,,,,,,9,,,44,,,,,,,,,,9,',
'44,44,,,,44,,,,,,,,,,44,,,,,,,,23,53,53,,,,,,,,,,,53,,,,53,,,,,,,,,',
',,,,,,,,44,,,,44,44,,28,,,25,28,28,28,,,,44,,,,,,,,,,28,28,28,,,,,,',
',,,,,,28,28,,,,,,,,,,,,,,,,,,44,,,,,,,,,,25,,25,,25,,,,,,,44,44,,,,',
'53,,,25,,,,,,,53,,,,23,,,,,,23,,,,,,,,53,,,,,,,44,,,25,44,,25,,,,,,',
',,44,23,23,44,,,,,23,,,,,,,,,,,,44,,23,,,,23,,,,,23,44,,,,,,,44,,,,',
',44,28,28,28,28,,,28,,,,,,,,,,,,,,28,25,28,28,28,28,28,28,28,28,28,28',
'28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,25,23,,,,,,,28,,28,',
'23,25,,28,,,,,,28,28,,23,23,,,,23,28,,,,,,,,,23,25,,,,,,,,,,,,,,,,,',
',,28,,,,,,,,,,,25,,,,,,,,,,,23,,,,23,23,,,,,,,,,,,23,23,25,,37,37,,',
',,,37,37,37,,,,,,,,,,,,,,37,,,25,,,,,37,37,,,,,,,,,23,,,,,,,,,,,,,,',
',,,,,,23,23,28,,,,,,,,,,,,,25,,,,,,,,,,,,,28,,28,28,28,,,,,,,,,23,,',
',23,,,,,25,,,,,,23,,,23,,,,28,,28,,28,,25,,,,,,,23,,,,,,,28,,,,,23,',
',,,,,23,,28,,,,23,,,,,28,28,28,,,,,,,,,,28,,,28,37,,37,37,37,37,37,37',
'37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,,,,,,,,',
'37,,37,,28,,,37,,,,,,,,,,,,,,,,,,,,,,,37,,,,,,,28,,28,,28,28,37,,,,28',
',,28,,37,,,,,,28,,,,,,,,28,,,,,,,,,,,,,28,,,,,,,,,,,,,,,,,,,,,,,,,,',
'28,,37,,,,,,,,,,,,,,,,,,,,,,,,,,,,,28,,,,,,,,,,,,,,,,,,,,,37,,,,,,,',
'28,28,,,,,,,,,,28,28,28,,,,,,,37,37,37,,,,,,28,,,,,,,,,,,,,,,,,,,,,',
',,,37,,37,,37,,,,,,,,,,,,,,,,,,,,,,28,,,,,,37,,,,,,28,,,,,37,37,37,',
',,,,,,,,37,,,37,,,28,,,,,,,,,37,,,,,,,,,,28,,,,,,,,,,,,,,,,,,,,,,,28',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,37,,37,,,,,,,,,,,37,,,,,,,,37,,,,,,,,37',
',,,,,,,,,,,,,,,,,,,,,,,37,,,,,,,,,,37,,,,,,37,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,37,,,,,,,,,,,,,,,,,,,,,,,,,,,,,37,,,,,,,,,,,37,37,37,,,,,,,',
',,,,,,,37,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,37,,,,,',
',,,,,,37,,,,,,,,,,,,,37,,,,,,,,,,37,,,,,,,,,,,,,,,,,,,37' ]
        racc_goto_check = arr = ::Array.new(2339, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_goto_pointer = [
   nil,   183,    88,   nil,    61,    81,    46,    25,  -267,   220,
  -491,  -589,  -591,   nil,    37,   167,   -42,     0,     2,   112,
     2,   129,   -32,   777,  -159,   772,   240,    65,  1160,   -18,
   nil,    88,  -237,    96,    29,  -217,  -376,  1474,    36,    39,
   nil,    12,    21,  -263,   463,  -279,   -13,   -51,    10,   nil,
    34,    62,   -23,   382,   -11,  -262,   -20,   249,  -400,  -248,
  -396,  -406,  -124,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    74,    84,    82,   nil,    80,  -321,  -606,  -501,  -324,  -226,
     7,  -523,    97,  -204,    91,    31,  -603,    33,  -602,  -468,
  -746,  -469,  -239,  -680,    56,  -455,  -244,  -453,  -685,    71,
  -189,   -49,  -655,  -407,  -458,   -53,  -495,  -255,  -512,  -442,
   nil,   -99,   nil,  -123,  -121,  -728,  -414,  -517,  -616,   nil,
   nil,   nil,    85,    84,    38,    86,  -215,  -301,    89,  -556,
  -416,  -416,   nil,  -543,  -632,  -198,  -308,   nil,  -489,  -248,
  -512,   nil,  -723,   nil,   nil,  -385 ]

racc_goto_default = [
   nil,   nil,   nil,     3,   nil,     4,   349,   275,   nil,   520,
   nil,   787,   nil,   274,   nil,   nil,   nil,   209,    16,    11,
   210,   299,   nil,   208,   nil,   252,    15,   nil,    19,    20,
    21,   nil,    25,   664,   nil,   nil,   nil,    26,    29,   nil,
    31,    34,    33,   nil,   206,   353,   nil,   115,   422,   114,
    69,   nil,    42,   538,   309,   nil,   249,   420,   611,   469,
   250,   nil,   nil,   265,    43,    44,    45,    46,    47,    48,
    49,   nil,   266,    55,   nil,   nil,   nil,   nil,   nil,   nil,
   555,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   322,   321,   680,   324,   nil,   325,   326,
   244,   nil,   426,   nil,   nil,   nil,   nil,   nil,   nil,    68,
    70,    71,    72,   nil,   nil,   nil,   nil,   588,   nil,   nil,
   nil,   nil,   385,   715,   717,   nil,   333,   328,   335,   nil,
   549,   550,   721,   338,   341,   257 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 140, :_reduce_none,
  2, 141, :_reduce_2,
  0, 142, :_reduce_3,
  1, 142, :_reduce_4,
  3, 142, :_reduce_5,
  1, 144, :_reduce_none,
  4, 144, :_reduce_7,
  4, 147, :_reduce_8,
  2, 148, :_reduce_9,
  0, 152, :_reduce_10,
  1, 152, :_reduce_11,
  3, 152, :_reduce_12,
  0, 166, :_reduce_13,
  4, 146, :_reduce_14,
  3, 146, :_reduce_15,
  3, 146, :_reduce_none,
  3, 146, :_reduce_17,
  2, 146, :_reduce_18,
  3, 146, :_reduce_19,
  3, 146, :_reduce_20,
  3, 146, :_reduce_21,
  3, 146, :_reduce_22,
  3, 146, :_reduce_23,
  4, 146, :_reduce_none,
  3, 146, :_reduce_25,
  3, 146, :_reduce_26,
  3, 146, :_reduce_27,
  6, 146, :_reduce_none,
  5, 146, :_reduce_29,
  5, 146, :_reduce_none,
  5, 146, :_reduce_none,
  3, 146, :_reduce_none,
  3, 146, :_reduce_33,
  3, 146, :_reduce_34,
  3, 146, :_reduce_35,
  1, 146, :_reduce_none,
  1, 165, :_reduce_none,
  3, 165, :_reduce_38,
  3, 165, :_reduce_39,
  2, 165, :_reduce_40,
  2, 165, :_reduce_41,
  1, 165, :_reduce_none,
  1, 155, :_reduce_none,
  1, 157, :_reduce_none,
  1, 157, :_reduce_none,
  2, 157, :_reduce_46,
  2, 157, :_reduce_47,
  2, 157, :_reduce_48,
  1, 169, :_reduce_none,
  4, 169, :_reduce_none,
  4, 169, :_reduce_none,
  4, 174, :_reduce_none,
  2, 168, :_reduce_53,
  3, 168, :_reduce_none,
  4, 168, :_reduce_55,
  5, 168, :_reduce_none,
  4, 168, :_reduce_57,
  5, 168, :_reduce_none,
  2, 168, :_reduce_59,
  2, 168, :_reduce_60,
  1, 158, :_reduce_61,
  3, 158, :_reduce_62,
  1, 178, :_reduce_63,
  3, 178, :_reduce_64,
  1, 177, :_reduce_65,
  2, 177, :_reduce_66,
  3, 177, :_reduce_67,
  5, 177, :_reduce_none,
  2, 177, :_reduce_69,
  4, 177, :_reduce_none,
  2, 177, :_reduce_71,
  1, 177, :_reduce_72,
  3, 177, :_reduce_none,
  1, 180, :_reduce_74,
  3, 180, :_reduce_75,
  2, 179, :_reduce_76,
  3, 179, :_reduce_77,
  1, 182, :_reduce_none,
  3, 182, :_reduce_none,
  1, 181, :_reduce_80,
  4, 181, :_reduce_81,
  3, 181, :_reduce_82,
  3, 181, :_reduce_none,
  3, 181, :_reduce_none,
  3, 181, :_reduce_none,
  2, 181, :_reduce_none,
  1, 181, :_reduce_none,
  1, 156, :_reduce_88,
  4, 156, :_reduce_89,
  3, 156, :_reduce_90,
  3, 156, :_reduce_91,
  3, 156, :_reduce_92,
  3, 156, :_reduce_93,
  2, 156, :_reduce_94,
  1, 156, :_reduce_none,
  1, 184, :_reduce_none,
  2, 185, :_reduce_97,
  1, 185, :_reduce_98,
  3, 185, :_reduce_99,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_103,
  1, 186, :_reduce_104,
  1, 153, :_reduce_105,
  1, 153, :_reduce_none,
  1, 154, :_reduce_107,
  3, 154, :_reduce_108,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  3, 167, :_reduce_183,
  5, 167, :_reduce_184,
  3, 167, :_reduce_185,
  6, 167, :_reduce_186,
  5, 167, :_reduce_187,
  5, 167, :_reduce_none,
  5, 167, :_reduce_none,
  5, 167, :_reduce_none,
  4, 167, :_reduce_none,
  3, 167, :_reduce_none,
  3, 167, :_reduce_193,
  3, 167, :_reduce_194,
  3, 167, :_reduce_195,
  3, 167, :_reduce_196,
  3, 167, :_reduce_197,
  3, 167, :_reduce_198,
  3, 167, :_reduce_199,
  3, 167, :_reduce_200,
  4, 167, :_reduce_none,
  4, 167, :_reduce_none,
  2, 167, :_reduce_203,
  2, 167, :_reduce_204,
  3, 167, :_reduce_205,
  3, 167, :_reduce_206,
  3, 167, :_reduce_207,
  3, 167, :_reduce_208,
  3, 167, :_reduce_209,
  3, 167, :_reduce_210,
  3, 167, :_reduce_211,
  3, 167, :_reduce_212,
  3, 167, :_reduce_213,
  3, 167, :_reduce_214,
  3, 167, :_reduce_215,
  3, 167, :_reduce_216,
  3, 167, :_reduce_217,
  2, 167, :_reduce_218,
  2, 167, :_reduce_219,
  3, 167, :_reduce_220,
  3, 167, :_reduce_221,
  3, 167, :_reduce_222,
  3, 167, :_reduce_223,
  3, 167, :_reduce_224,
  5, 167, :_reduce_225,
  1, 167, :_reduce_none,
  1, 164, :_reduce_none,
  1, 161, :_reduce_228,
  2, 161, :_reduce_229,
  2, 161, :_reduce_230,
  4, 161, :_reduce_231,
  2, 161, :_reduce_232,
  3, 196, :_reduce_233,
  4, 196, :_reduce_234,
  4, 196, :_reduce_none,
  6, 196, :_reduce_none,
  1, 197, :_reduce_none,
  1, 197, :_reduce_none,
  1, 170, :_reduce_239,
  2, 170, :_reduce_240,
  2, 170, :_reduce_241,
  4, 170, :_reduce_242,
  1, 170, :_reduce_243,
  4, 200, :_reduce_none,
  1, 200, :_reduce_none,
  0, 202, :_reduce_246,
  2, 173, :_reduce_247,
  1, 201, :_reduce_none,
  2, 201, :_reduce_249,
  3, 201, :_reduce_250,
  2, 199, :_reduce_251,
  2, 198, :_reduce_252,
  0, 198, :_reduce_253,
  1, 193, :_reduce_254,
  2, 193, :_reduce_255,
  3, 193, :_reduce_256,
  4, 193, :_reduce_257,
  3, 163, :_reduce_258,
  4, 163, :_reduce_none,
  2, 163, :_reduce_260,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  0, 223, :_reduce_270,
  4, 191, :_reduce_271,
  4, 191, :_reduce_272,
  3, 191, :_reduce_273,
  3, 191, :_reduce_274,
  2, 191, :_reduce_275,
  4, 191, :_reduce_276,
  3, 191, :_reduce_277,
  3, 191, :_reduce_278,
  1, 191, :_reduce_279,
  4, 191, :_reduce_280,
  3, 191, :_reduce_281,
  1, 191, :_reduce_282,
  5, 191, :_reduce_283,
  4, 191, :_reduce_284,
  3, 191, :_reduce_285,
  2, 191, :_reduce_286,
  1, 191, :_reduce_none,
  2, 191, :_reduce_288,
  2, 191, :_reduce_289,
  6, 191, :_reduce_290,
  6, 191, :_reduce_291,
  0, 224, :_reduce_292,
  0, 225, :_reduce_293,
  7, 191, :_reduce_294,
  0, 226, :_reduce_295,
  0, 227, :_reduce_296,
  7, 191, :_reduce_297,
  5, 191, :_reduce_298,
  4, 191, :_reduce_299,
  5, 191, :_reduce_300,
  0, 228, :_reduce_301,
  0, 229, :_reduce_302,
  9, 191, :_reduce_none,
  0, 230, :_reduce_304,
  6, 191, :_reduce_305,
  0, 231, :_reduce_306,
  0, 232, :_reduce_307,
  8, 191, :_reduce_308,
  0, 233, :_reduce_309,
  0, 234, :_reduce_310,
  6, 191, :_reduce_311,
  0, 235, :_reduce_312,
  6, 191, :_reduce_313,
  0, 236, :_reduce_314,
  0, 237, :_reduce_315,
  9, 191, :_reduce_316,
  1, 191, :_reduce_317,
  1, 191, :_reduce_318,
  1, 191, :_reduce_319,
  1, 191, :_reduce_none,
  1, 160, :_reduce_none,
  1, 214, :_reduce_none,
  1, 214, :_reduce_none,
  1, 214, :_reduce_none,
  2, 214, :_reduce_none,
  1, 216, :_reduce_none,
  1, 216, :_reduce_none,
  1, 216, :_reduce_none,
  2, 213, :_reduce_329,
  3, 238, :_reduce_330,
  2, 238, :_reduce_331,
  1, 238, :_reduce_none,
  1, 238, :_reduce_none,
  3, 239, :_reduce_334,
  3, 239, :_reduce_335,
  1, 215, :_reduce_336,
  0, 241, :_reduce_337,
  6, 215, :_reduce_338,
  1, 150, :_reduce_none,
  2, 150, :_reduce_340,
  1, 242, :_reduce_341,
  3, 242, :_reduce_342,
  3, 243, :_reduce_343,
  1, 175, :_reduce_none,
  2, 175, :_reduce_345,
  1, 175, :_reduce_346,
  3, 175, :_reduce_347,
  1, 244, :_reduce_348,
  2, 246, :_reduce_349,
  1, 246, :_reduce_350,
  6, 240, :_reduce_351,
  4, 240, :_reduce_352,
  4, 240, :_reduce_353,
  2, 240, :_reduce_354,
  2, 240, :_reduce_355,
  4, 240, :_reduce_356,
  2, 240, :_reduce_357,
  2, 240, :_reduce_358,
  1, 240, :_reduce_359,
  0, 250, :_reduce_360,
  5, 249, :_reduce_361,
  2, 171, :_reduce_362,
  4, 171, :_reduce_none,
  4, 171, :_reduce_none,
  2, 212, :_reduce_365,
  4, 212, :_reduce_366,
  3, 212, :_reduce_367,
  4, 212, :_reduce_368,
  3, 212, :_reduce_369,
  2, 212, :_reduce_370,
  1, 212, :_reduce_371,
  0, 252, :_reduce_372,
  5, 211, :_reduce_373,
  0, 253, :_reduce_374,
  5, 211, :_reduce_375,
  0, 255, :_reduce_376,
  6, 217, :_reduce_377,
  1, 254, :_reduce_378,
  1, 254, :_reduce_none,
  6, 149, :_reduce_380,
  0, 149, :_reduce_381,
  1, 256, :_reduce_382,
  1, 256, :_reduce_none,
  1, 256, :_reduce_none,
  2, 257, :_reduce_385,
  1, 257, :_reduce_386,
  2, 151, :_reduce_387,
  1, 151, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 204, :_reduce_392,
  1, 260, :_reduce_none,
  2, 260, :_reduce_none,
  3, 261, :_reduce_395,
  1, 261, :_reduce_396,
  3, 205, :_reduce_397,
  3, 206, :_reduce_398,
  3, 207, :_reduce_399,
  3, 207, :_reduce_400,
  1, 264, :_reduce_401,
  3, 264, :_reduce_402,
  1, 265, :_reduce_403,
  2, 265, :_reduce_404,
  3, 208, :_reduce_405,
  3, 208, :_reduce_406,
  1, 267, :_reduce_407,
  3, 267, :_reduce_408,
  1, 262, :_reduce_409,
  2, 262, :_reduce_410,
  1, 263, :_reduce_411,
  2, 263, :_reduce_412,
  1, 266, :_reduce_413,
  0, 269, :_reduce_414,
  3, 266, :_reduce_415,
  0, 270, :_reduce_416,
  4, 266, :_reduce_417,
  1, 268, :_reduce_418,
  1, 268, :_reduce_419,
  1, 268, :_reduce_420,
  1, 268, :_reduce_none,
  2, 189, :_reduce_422,
  1, 189, :_reduce_423,
  1, 271, :_reduce_none,
  1, 271, :_reduce_none,
  1, 271, :_reduce_none,
  1, 271, :_reduce_none,
  3, 259, :_reduce_428,
  1, 258, :_reduce_429,
  1, 258, :_reduce_430,
  2, 258, :_reduce_none,
  2, 258, :_reduce_none,
  1, 183, :_reduce_433,
  1, 183, :_reduce_434,
  1, 183, :_reduce_435,
  1, 183, :_reduce_436,
  1, 183, :_reduce_437,
  1, 183, :_reduce_438,
  1, 183, :_reduce_439,
  1, 183, :_reduce_440,
  1, 183, :_reduce_441,
  1, 183, :_reduce_442,
  1, 183, :_reduce_443,
  1, 209, :_reduce_444,
  1, 159, :_reduce_445,
  1, 162, :_reduce_446,
  1, 162, :_reduce_none,
  1, 218, :_reduce_448,
  3, 218, :_reduce_449,
  2, 218, :_reduce_450,
  4, 220, :_reduce_451,
  2, 220, :_reduce_452,
  6, 272, :_reduce_453,
  4, 272, :_reduce_454,
  4, 272, :_reduce_455,
  2, 272, :_reduce_456,
  4, 272, :_reduce_457,
  2, 272, :_reduce_458,
  2, 272, :_reduce_459,
  1, 272, :_reduce_460,
  0, 272, :_reduce_461,
  1, 275, :_reduce_none,
  1, 275, :_reduce_463,
  1, 276, :_reduce_464,
  1, 276, :_reduce_465,
  1, 276, :_reduce_466,
  1, 276, :_reduce_467,
  1, 277, :_reduce_468,
  3, 277, :_reduce_469,
  1, 279, :_reduce_470,
  3, 279, :_reduce_none,
  1, 280, :_reduce_472,
  3, 280, :_reduce_473,
  1, 278, :_reduce_none,
  4, 278, :_reduce_none,
  3, 278, :_reduce_none,
  2, 278, :_reduce_none,
  1, 278, :_reduce_none,
  1, 247, :_reduce_479,
  3, 247, :_reduce_480,
  3, 281, :_reduce_481,
  1, 273, :_reduce_482,
  3, 273, :_reduce_483,
  1, 282, :_reduce_none,
  1, 282, :_reduce_none,
  2, 248, :_reduce_486,
  1, 248, :_reduce_487,
  1, 283, :_reduce_none,
  1, 283, :_reduce_none,
  2, 245, :_reduce_490,
  2, 274, :_reduce_491,
  0, 274, :_reduce_492,
  1, 221, :_reduce_493,
  4, 221, :_reduce_494,
  0, 210, :_reduce_495,
  2, 210, :_reduce_496,
  1, 195, :_reduce_497,
  3, 195, :_reduce_498,
  3, 284, :_reduce_499,
  2, 284, :_reduce_500,
  1, 176, :_reduce_none,
  1, 176, :_reduce_none,
  1, 176, :_reduce_none,
  1, 172, :_reduce_none,
  1, 172, :_reduce_none,
  1, 172, :_reduce_none,
  1, 172, :_reduce_none,
  1, 251, :_reduce_none,
  1, 251, :_reduce_none,
  1, 251, :_reduce_none,
  1, 222, :_reduce_none,
  1, 222, :_reduce_none,
  0, 143, :_reduce_none,
  1, 143, :_reduce_none,
  0, 190, :_reduce_none,
  1, 190, :_reduce_none,
  0, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 219, :_reduce_none,
  1, 219, :_reduce_none,
  1, 145, :_reduce_none,
  2, 145, :_reduce_none,
  0, 192, :_reduce_524 ]

racc_reduce_n = 525

racc_shift_n = 911

racc_token_table = {
  false => 0,
  :error => 1,
  :kCLASS => 2,
  :kMODULE => 3,
  :kDEF => 4,
  :kUNDEF => 5,
  :kBEGIN => 6,
  :kRESCUE => 7,
  :kENSURE => 8,
  :kEND => 9,
  :kIF => 10,
  :kUNLESS => 11,
  :kTHEN => 12,
  :kELSIF => 13,
  :kELSE => 14,
  :kCASE => 15,
  :kWHEN => 16,
  :kWHILE => 17,
  :kUNTIL => 18,
  :kFOR => 19,
  :kBREAK => 20,
  :kNEXT => 21,
  :kREDO => 22,
  :kRETRY => 23,
  :kIN => 24,
  :kDO => 25,
  :kDO_COND => 26,
  :kDO_BLOCK => 27,
  :kDO_LAMBDA => 28,
  :kRETURN => 29,
  :kYIELD => 30,
  :kSUPER => 31,
  :kSELF => 32,
  :kNIL => 33,
  :kTRUE => 34,
  :kFALSE => 35,
  :kAND => 36,
  :kOR => 37,
  :kNOT => 38,
  :kIF_MOD => 39,
  :kUNLESS_MOD => 40,
  :kWHILE_MOD => 41,
  :kUNTIL_MOD => 42,
  :kRESCUE_MOD => 43,
  :kALIAS => 44,
  :kDEFINED => 45,
  :klBEGIN => 46,
  :klEND => 47,
  :k__LINE__ => 48,
  :k__FILE__ => 49,
  :k__ENCODING__ => 50,
  :tIDENTIFIER => 51,
  :tFID => 52,
  :tGVAR => 53,
  :tIVAR => 54,
  :tCONSTANT => 55,
  :tLABEL => 56,
  :tCVAR => 57,
  :tNTH_REF => 58,
  :tBACK_REF => 59,
  :tSTRING_CONTENT => 60,
  :tINTEGER => 61,
  :tFLOAT => 62,
  :tREGEXP_END => 63,
  :tUPLUS => 64,
  :tUMINUS => 65,
  :tUMINUS_NUM => 66,
  :tPOW => 67,
  :tCMP => 68,
  :tEQ => 69,
  :tEQQ => 70,
  :tNEQ => 71,
  :tGEQ => 72,
  :tLEQ => 73,
  :tANDOP => 74,
  :tOROP => 75,
  :tMATCH => 76,
  :tNMATCH => 77,
  :tDOT => 78,
  :tDOT2 => 79,
  :tDOT3 => 80,
  :tAREF => 81,
  :tASET => 82,
  :tLSHFT => 83,
  :tRSHFT => 84,
  :tCOLON2 => 85,
  :tCOLON3 => 86,
  :tOP_ASGN => 87,
  :tASSOC => 88,
  :tLPAREN => 89,
  :tLPAREN2 => 90,
  :tRPAREN => 91,
  :tLPAREN_ARG => 92,
  :ARRAY_BEG => 93,
  :tRBRACK => 94,
  :tLBRACE => 95,
  :tLBRACE_ARG => 96,
  :tSTAR => 97,
  :tSTAR2 => 98,
  :tAMPER => 99,
  :tAMPER2 => 100,
  :tTILDE => 101,
  :tPERCENT => 102,
  :tDIVIDE => 103,
  :tPLUS => 104,
  :tMINUS => 105,
  :tLT => 106,
  :tGT => 107,
  :tPIPE => 108,
  :tBANG => 109,
  :tCARET => 110,
  :tLCURLY => 111,
  :tRCURLY => 112,
  :tBACK_REF2 => 113,
  :tSYMBEG => 114,
  :tSTRING_BEG => 115,
  :tXSTRING_BEG => 116,
  :tREGEXP_BEG => 117,
  :tWORDS_BEG => 118,
  :tAWORDS_BEG => 119,
  :tSTRING_DBEG => 120,
  :tSTRING_DVAR => 121,
  :tSTRING_END => 122,
  :tSTRING => 123,
  :tSYMBOL => 124,
  :tNL => 125,
  :tEH => 126,
  :tCOLON => 127,
  :tCOMMA => 128,
  :tSPACE => 129,
  :tSEMI => 130,
  :tLAMBDA => 131,
  :tLAMBEG => 132,
  :tLBRACK2 => 133,
  :tLBRACK => 134,
  :tEQL => 135,
  :tLOWEST => 136,
  "-@NUM" => 137,
  "{" => 138 }

racc_nt_base = 139

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "kCLASS",
  "kMODULE",
  "kDEF",
  "kUNDEF",
  "kBEGIN",
  "kRESCUE",
  "kENSURE",
  "kEND",
  "kIF",
  "kUNLESS",
  "kTHEN",
  "kELSIF",
  "kELSE",
  "kCASE",
  "kWHEN",
  "kWHILE",
  "kUNTIL",
  "kFOR",
  "kBREAK",
  "kNEXT",
  "kREDO",
  "kRETRY",
  "kIN",
  "kDO",
  "kDO_COND",
  "kDO_BLOCK",
  "kDO_LAMBDA",
  "kRETURN",
  "kYIELD",
  "kSUPER",
  "kSELF",
  "kNIL",
  "kTRUE",
  "kFALSE",
  "kAND",
  "kOR",
  "kNOT",
  "kIF_MOD",
  "kUNLESS_MOD",
  "kWHILE_MOD",
  "kUNTIL_MOD",
  "kRESCUE_MOD",
  "kALIAS",
  "kDEFINED",
  "klBEGIN",
  "klEND",
  "k__LINE__",
  "k__FILE__",
  "k__ENCODING__",
  "tIDENTIFIER",
  "tFID",
  "tGVAR",
  "tIVAR",
  "tCONSTANT",
  "tLABEL",
  "tCVAR",
  "tNTH_REF",
  "tBACK_REF",
  "tSTRING_CONTENT",
  "tINTEGER",
  "tFLOAT",
  "tREGEXP_END",
  "tUPLUS",
  "tUMINUS",
  "tUMINUS_NUM",
  "tPOW",
  "tCMP",
  "tEQ",
  "tEQQ",
  "tNEQ",
  "tGEQ",
  "tLEQ",
  "tANDOP",
  "tOROP",
  "tMATCH",
  "tNMATCH",
  "tDOT",
  "tDOT2",
  "tDOT3",
  "tAREF",
  "tASET",
  "tLSHFT",
  "tRSHFT",
  "tCOLON2",
  "tCOLON3",
  "tOP_ASGN",
  "tASSOC",
  "tLPAREN",
  "tLPAREN2",
  "tRPAREN",
  "tLPAREN_ARG",
  "ARRAY_BEG",
  "tRBRACK",
  "tLBRACE",
  "tLBRACE_ARG",
  "tSTAR",
  "tSTAR2",
  "tAMPER",
  "tAMPER2",
  "tTILDE",
  "tPERCENT",
  "tDIVIDE",
  "tPLUS",
  "tMINUS",
  "tLT",
  "tGT",
  "tPIPE",
  "tBANG",
  "tCARET",
  "tLCURLY",
  "tRCURLY",
  "tBACK_REF2",
  "tSYMBEG",
  "tSTRING_BEG",
  "tXSTRING_BEG",
  "tREGEXP_BEG",
  "tWORDS_BEG",
  "tAWORDS_BEG",
  "tSTRING_DBEG",
  "tSTRING_DVAR",
  "tSTRING_END",
  "tSTRING",
  "tSYMBOL",
  "tNL",
  "tEH",
  "tCOLON",
  "tCOMMA",
  "tSPACE",
  "tSEMI",
  "tLAMBDA",
  "tLAMBEG",
  "tLBRACK2",
  "tLBRACK",
  "tEQL",
  "tLOWEST",
  "\"-@NUM\"",
  "\"{\"",
  "$start",
  "program",
  "top_compstmt",
  "top_stmts",
  "opt_terms",
  "top_stmt",
  "terms",
  "stmt",
  "bodystmt",
  "compstmt",
  "opt_rescue",
  "opt_else",
  "opt_ensure",
  "stmts",
  "fitem",
  "undef_list",
  "expr_value",
  "lhs",
  "command_call",
  "mlhs",
  "var_lhs",
  "primary_value",
  "aref_args",
  "backref",
  "mrhs",
  "arg_value",
  "expr",
  "@1",
  "arg",
  "command",
  "block_command",
  "call_args",
  "block_call",
  "operation2",
  "command_args",
  "cmd_brace_block",
  "opt_block_var",
  "operation",
  "mlhs_basic",
  "mlhs_entry",
  "mlhs_head",
  "mlhs_item",
  "mlhs_node",
  "mlhs_post",
  "variable",
  "cname",
  "cpath",
  "fname",
  "op",
  "reswords",
  "symbol",
  "opt_nl",
  "primary",
  "none",
  "args",
  "trailer",
  "assocs",
  "paren_args",
  "opt_paren_args",
  "opt_block_arg",
  "block_arg",
  "call_args2",
  "open_args",
  "@2",
  "literal",
  "strings",
  "xstring",
  "regexp",
  "words",
  "awords",
  "var_ref",
  "assoc_list",
  "brace_block",
  "method_call",
  "lambda",
  "then",
  "if_tail",
  "do",
  "case_body",
  "superclass",
  "term",
  "f_arglist",
  "singleton",
  "dot_or_colon",
  "@3",
  "@4",
  "@5",
  "@6",
  "@7",
  "@8",
  "@9",
  "@10",
  "@11",
  "@12",
  "@13",
  "@14",
  "@15",
  "@16",
  "@17",
  "f_larglist",
  "lambda_body",
  "block_param",
  "@18",
  "f_block_optarg",
  "f_block_opt",
  "block_args_tail",
  "f_block_arg",
  "opt_block_args_tail",
  "f_arg",
  "f_rest_arg",
  "do_block",
  "@19",
  "operation3",
  "@20",
  "@21",
  "cases",
  "@22",
  "exc_list",
  "exc_var",
  "numeric",
  "dsym",
  "string",
  "string1",
  "string_contents",
  "xstring_contents",
  "word_list",
  "word",
  "string_content",
  "qword_list",
  "string_dvar",
  "@23",
  "@24",
  "sym",
  "f_args",
  "f_optarg",
  "opt_f_block_arg",
  "f_norm_arg",
  "f_bad_arg",
  "f_arg_item",
  "f_margs",
  "f_marg",
  "f_marg_list",
  "f_opt",
  "restarg_mark",
  "blkarg_mark",
  "assoc" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

def _reduce_2(val, _values, result)
                      result = new_compstmt val[0]
                    
    result
end

def _reduce_3(val, _values, result)
                      result = new_block
                    
    result
end

def _reduce_4(val, _values, result)
                      result = new_block val[0]
                    
    result
end

def _reduce_5(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

# reduce 6 omitted

def _reduce_7(val, _values, result)
                      result = val[2]
                    
    result
end

def _reduce_8(val, _values, result)
                      result = new_body val[0], val[1], val[2], val[3]
                    
    result
end

def _reduce_9(val, _values, result)
                      result = new_compstmt val[0]
                    
    result
end

def _reduce_10(val, _values, result)
                      result = new_block
                    
    result
end

def _reduce_11(val, _values, result)
                      result = new_block val[0]
                    
    result
end

def _reduce_12(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_13(val, _values, result)
                      lexer.lex_state = :expr_fname
                    
    result
end

def _reduce_14(val, _values, result)
                      result = new_alias(val[0], val[1], val[3])
                    
    result
end

def _reduce_15(val, _values, result)
                      result = s(:valias, val[1].intern, val[2].intern)
                    
    result
end

# reduce 16 omitted

def _reduce_17(val, _values, result)
                      result = s(:valias, val[1].intern, val[2].intern)
                    
    result
end

def _reduce_18(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_19(val, _values, result)
                      result = new_if(val[1], val[2], val[0], nil)
                    
    result
end

def _reduce_20(val, _values, result)
                      result = new_if(val[1], val[2], nil, val[0])
                    
    result
end

def _reduce_21(val, _values, result)
                      result = new_while(val[1], val[2], val[0])
                    
    result
end

def _reduce_22(val, _values, result)
                      result = new_until(val[1], val[2], val[0])
                    
    result
end

def _reduce_23(val, _values, result)
                      result = new_rescue_mod(val[1], val[0], val[2])
                    
    result
end

# reduce 24 omitted

def _reduce_25(val, _values, result)
                      result = new_assign(val[0], val[1], val[2])
                    
    result
end

def _reduce_26(val, _values, result)
                      result = s(:masgn, val[0], s(:to_ary, val[2]))
                    
    result
end

def _reduce_27(val, _values, result)
                      result = new_op_asgn val[1].intern, val[0], val[2]
                    
    result
end

# reduce 28 omitted

def _reduce_29(val, _values, result)
                      result = s(:op_asgn2, val[0], "#{val[2]}=".intern, val[3].intern, val[4])
                    
    result
end

# reduce 30 omitted

# reduce 31 omitted

# reduce 32 omitted

def _reduce_33(val, _values, result)
                      result = new_assign val[0], s(:svalue, val[2])
                    
    result
end

def _reduce_34(val, _values, result)
                      result = s(:masgn, val[0], s(:to_ary, val[2]))
                    
    result
end

def _reduce_35(val, _values, result)
                      result = s(:masgn, val[0], val[2])
                    
    result
end

# reduce 36 omitted

# reduce 37 omitted

def _reduce_38(val, _values, result)
                      result = s(:and, val[0], val[2])
                      result.line = val[0].line
                    
    result
end

def _reduce_39(val, _values, result)
                      result = s(:or, val[0], val[2])
                      result.line = val[0].line
                    
    result
end

def _reduce_40(val, _values, result)
                      result = s(:not, val[1])
                      result.line = val[1].line
                    
    result
end

def _reduce_41(val, _values, result)
                      result = s(:not, val[1])
                    
    result
end

# reduce 42 omitted

# reduce 43 omitted

# reduce 44 omitted

# reduce 45 omitted

def _reduce_46(val, _values, result)
                      args = val[1]
                      args = args[1] if args.size == 2
                      result = s(:return, args)
                    
    result
end

def _reduce_47(val, _values, result)
                      args = val[1]
                      args = args[1] if args.size == 2
                      result = s(:break, args)
                    
    result
end

def _reduce_48(val, _values, result)
                      args = val[1]
                      args = args[1] if args.size == 2
                      result = s(:next, args)
                    
    result
end

# reduce 49 omitted

# reduce 50 omitted

# reduce 51 omitted

# reduce 52 omitted

def _reduce_53(val, _values, result)
                      result = new_call(nil, val[0], val[1])
                    
    result
end

# reduce 54 omitted

def _reduce_55(val, _values, result)
                      result = new_call val[0], val[2].intern, val[3]
                    
    result
end

# reduce 56 omitted

def _reduce_57(val, _values, result)
                    result = new_call val[0], val[2].intern, val[3]
                  
    result
end

# reduce 58 omitted

def _reduce_59(val, _values, result)
                      result = new_super val[1]
                    
    result
end

def _reduce_60(val, _values, result)
                      result = new_yield val[1]
                    
    result
end

def _reduce_61(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_62(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_63(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_64(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_65(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_66(val, _values, result)
                      result = val[0] << val[1]
                    
    result
end

def _reduce_67(val, _values, result)
                      result = val[0] << s(:splat, val[2])
                    
    result
end

# reduce 68 omitted

def _reduce_69(val, _values, result)
                      result = val[0] << s(:splat)
                    
    result
end

# reduce 70 omitted

def _reduce_71(val, _values, result)
                      result = s(:array, s(:splat, val[1]))
                    
    result
end

def _reduce_72(val, _values, result)
                      result = s(:array, s(:splat))
                    
    result
end

# reduce 73 omitted

def _reduce_74(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_75(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_76(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

def _reduce_77(val, _values, result)
                      result = val[0] << val[1]
                    
    result
end

# reduce 78 omitted

# reduce 79 omitted

def _reduce_80(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_81(val, _values, result)
                      args = val[2]
                      args.type = :arglist if args.type == :array
                      result = s(:attrasgn, val[0], :[]=, args)
                    
    result
end

def _reduce_82(val, _values, result)
                      result = new_call val[0], val[2].intern, s(:arglist)
                    
    result
end

# reduce 83 omitted

# reduce 84 omitted

# reduce 85 omitted

# reduce 86 omitted

# reduce 87 omitted

def _reduce_88(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_89(val, _values, result)
                      args = val[2]
                      args.type = :arglist if args.type == :array
                      result = s(:attrasgn, val[0], :[]=, args)
                    
    result
end

def _reduce_90(val, _values, result)
                      result = s(:attrasgn, val[0], "#{val[2]}=".intern, s(:arglist))
                    
    result
end

def _reduce_91(val, _values, result)
                      result = s(:attrasgn, val[0], "#{val[2]}=".intern, s(:arglist))
                    
    result
end

def _reduce_92(val, _values, result)
                      result = s(:attrasgn, val[0], "#{val[2]}=".intern, s(:arglist))
                    
    result
end

def _reduce_93(val, _values, result)
                      result = s(:colon2, val[0], val[2].intern)
                    
    result
end

def _reduce_94(val, _values, result)
                      result = s(:colon3, val[1].intern)
                    
    result
end

# reduce 95 omitted

# reduce 96 omitted

def _reduce_97(val, _values, result)
                      result = s(:colon3, val[1].intern)
                    
    result
end

def _reduce_98(val, _values, result)
                      result = new_const(val[0])
                    
    result
end

def _reduce_99(val, _values, result)
                      result = s(:colon2, val[0], val[2].intern)
                    
    result
end

# reduce 100 omitted

# reduce 101 omitted

# reduce 102 omitted

def _reduce_103(val, _values, result)
                      lexer.lex_state = :expr_end
                      result = val[0]
                    
    result
end

def _reduce_104(val, _values, result)
                      lexer.lex_state = :expr_end
                      result = val[0]
                    
    result
end

def _reduce_105(val, _values, result)
                      result = s(:sym, val[0].intern)
                    
    result
end

# reduce 106 omitted

def _reduce_107(val, _values, result)
                      result = s(:undef, val[0])
                    
    result
end

def _reduce_108(val, _values, result)
                      result = val[0] << val[2]
                    
    result
end

# reduce 109 omitted

# reduce 110 omitted

# reduce 111 omitted

# reduce 112 omitted

# reduce 113 omitted

# reduce 114 omitted

# reduce 115 omitted

# reduce 116 omitted

# reduce 117 omitted

# reduce 118 omitted

# reduce 119 omitted

# reduce 120 omitted

# reduce 121 omitted

# reduce 122 omitted

# reduce 123 omitted

# reduce 124 omitted

# reduce 125 omitted

# reduce 126 omitted

# reduce 127 omitted

# reduce 128 omitted

# reduce 129 omitted

# reduce 130 omitted

# reduce 131 omitted

# reduce 132 omitted

# reduce 133 omitted

# reduce 134 omitted

# reduce 135 omitted

# reduce 136 omitted

# reduce 137 omitted

# reduce 138 omitted

# reduce 139 omitted

# reduce 140 omitted

# reduce 141 omitted

# reduce 142 omitted

# reduce 143 omitted

# reduce 144 omitted

# reduce 145 omitted

# reduce 146 omitted

# reduce 147 omitted

# reduce 148 omitted

# reduce 149 omitted

# reduce 150 omitted

# reduce 151 omitted

# reduce 152 omitted

# reduce 153 omitted

# reduce 154 omitted

# reduce 155 omitted

# reduce 156 omitted

# reduce 157 omitted

# reduce 158 omitted

# reduce 159 omitted

# reduce 160 omitted

# reduce 161 omitted

# reduce 162 omitted

# reduce 163 omitted

# reduce 164 omitted

# reduce 165 omitted

# reduce 166 omitted

# reduce 167 omitted

# reduce 168 omitted

# reduce 169 omitted

# reduce 170 omitted

# reduce 171 omitted

# reduce 172 omitted

# reduce 173 omitted

# reduce 174 omitted

# reduce 175 omitted

# reduce 176 omitted

# reduce 177 omitted

# reduce 178 omitted

# reduce 179 omitted

# reduce 180 omitted

# reduce 181 omitted

# reduce 182 omitted

def _reduce_183(val, _values, result)
                      result = new_assign(val[0], val[1], val[2])
                    
    result
end

def _reduce_184(val, _values, result)
                      result = new_assign val[0], s(:rescue_mod, val[2], val[4])
                    
    result
end

def _reduce_185(val, _values, result)
                      result = new_op_asgn val[1].intern, val[0], val[2]
                    
    result
end

def _reduce_186(val, _values, result)
                      args = val[2]
                      args.type = :arglist if args.type == :array
                      result = s(:op_asgn1, val[0], val[2], val[4].intern, val[5])
                      result.line = val[0].line
                    
    result
end

def _reduce_187(val, _values, result)
                      result = s(:op_asgn2, val[0], "#{val[2]}=".intern, val[3].intern, val[4])
                    
    result
end

# reduce 188 omitted

# reduce 189 omitted

# reduce 190 omitted

# reduce 191 omitted

# reduce 192 omitted

def _reduce_193(val, _values, result)
                      result = s(:irange, val[0], val[2])
                      result.line = val[0].line
                    
    result
end

def _reduce_194(val, _values, result)
                      result = s(:erange, val[0], val[2])
                      result.line = val[0].line
                    
    result
end

def _reduce_195(val, _values, result)
                      result = new_call val[0], :"+", s(:arglist, val[2])
                    
    result
end

def _reduce_196(val, _values, result)
                      result = new_call val[0], :"-", s(:arglist, val[2])
                    
    result
end

def _reduce_197(val, _values, result)
                      result = new_call val[0], :"*", s(:arglist, val[2])
                    
    result
end

def _reduce_198(val, _values, result)
                      result = new_call val[0], :"/", s(:arglist, val[2])
                    
    result
end

def _reduce_199(val, _values, result)
                      result = new_call val[0], :"%", s(:arglist, val[2])
                    
    result
end

def _reduce_200(val, _values, result)
                      result = new_call val[0], :"**", s(:arglist, val[2])
                    
    result
end

# reduce 201 omitted

# reduce 202 omitted

def _reduce_203(val, _values, result)
                      result = new_call val[1], :"+@", s(:arglist)
                      result = val[1] if [:int, :float].include? val[1].type
                    
    result
end

def _reduce_204(val, _values, result)
                      result = new_call val[1], :"-@", s(:arglist)
                      if val[1].type == :int
                        val[1][1] = -val[1][1]
                        result = val[1]
                      elsif val[1].type == :float
                        val[1][1] = -val[1][1].to_f
                        result = val[1]
                      end
                    
    result
end

def _reduce_205(val, _values, result)
                      result = new_call val[0], :"|", s(:arglist, val[2])
                    
    result
end

def _reduce_206(val, _values, result)
                      result = new_call val[0], :"^", s(:arglist, val[2])
                    
    result
end

def _reduce_207(val, _values, result)
                      result = new_call val[0], :"&", s(:arglist, val[2])
                    
    result
end

def _reduce_208(val, _values, result)
                      result = new_call val[0], :"<=>", s(:arglist, val[2])
                    
    result
end

def _reduce_209(val, _values, result)
                      result = new_call val[0], :">", s(:arglist, val[2])
                    
    result
end

def _reduce_210(val, _values, result)
                      result = new_call val[0], :">=", s(:arglist, val[2])
                    
    result
end

def _reduce_211(val, _values, result)
                      result = new_call val[0], :"<", s(:arglist, val[2])
                    
    result
end

def _reduce_212(val, _values, result)
                      result = new_call val[0], :"<=", s(:arglist, val[2])
                    
    result
end

def _reduce_213(val, _values, result)
                      result = new_call val[0], :"==", s(:arglist, val[2])
                    
    result
end

def _reduce_214(val, _values, result)
                      result = new_call val[0], :"===", s(:arglist, val[2])
                    
    result
end

def _reduce_215(val, _values, result)
                      result = s(:not, new_call(val[0], :"==", s(:arglist, val[2])))
                    
    result
end

def _reduce_216(val, _values, result)
                      result = new_call val[0], :"=~", s(:arglist, val[2])
                    
    result
end

def _reduce_217(val, _values, result)
                      result = s(:not, new_call(val[0], :"=~", s(:arglist, val[2])))
                    
    result
end

def _reduce_218(val, _values, result)
                      result = s(:not, val[1])
                    
    result
end

def _reduce_219(val, _values, result)
                      result = new_call val[1], :"~", s(:arglist)
                    
    result
end

def _reduce_220(val, _values, result)
                      result = new_call val[0], :"<<", s(:arglist, val[2])
                    
    result
end

def _reduce_221(val, _values, result)
                      result = new_call val[0], :">>", s(:arglist, val[2])
                    
    result
end

def _reduce_222(val, _values, result)
                      result = s(:and, val[0], val[2])
                      result.line = val[0].line
                    
    result
end

def _reduce_223(val, _values, result)
                      result = s(:or, val[0], val[2])
                      result.line = val[0].line
                    
    result
end

def _reduce_224(val, _values, result)
                      result = s(:defined, val[2])
                    
    result
end

def _reduce_225(val, _values, result)
                      result = s(:if, val[0], val[2], val[4])
                      result.line = val[0].line
                    
    result
end

# reduce 226 omitted

# reduce 227 omitted

def _reduce_228(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_229(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

def _reduce_230(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_231(val, _values, result)
                      val[0] << s(:hash, *val[2])
                      result = val[0]
                    
    result
end

def _reduce_232(val, _values, result)
                      result = s(:array, s(:hash, *val[0]))
                    
    result
end

def _reduce_233(val, _values, result)
                      result = []
                    
    result
end

def _reduce_234(val, _values, result)
                      result = val[1]
                    
    result
end

# reduce 235 omitted

# reduce 236 omitted

# reduce 237 omitted

# reduce 238 omitted

def _reduce_239(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

def _reduce_240(val, _values, result)
                      result = val[0]
                      add_block_pass val[0], val[1]
                    
    result
end

def _reduce_241(val, _values, result)
                      result = s(:arglist, s(:hash, *val[0]))
                      add_block_pass result, val[1]
                    
    result
end

def _reduce_242(val, _values, result)
                      result = val[0]
                      result << s(:hash, *val[2])
                    
    result
end

def _reduce_243(val, _values, result)
                      result = s(:arglist)
                      add_block_pass result, val[0]
                    
    result
end

# reduce 244 omitted

# reduce 245 omitted

def _reduce_246(val, _values, result)
                      lexer.cmdarg_push 1
                    
    result
end

def _reduce_247(val, _values, result)
                      lexer.cmdarg_pop
                      result = val[1]
                    
    result
end

# reduce 248 omitted

def _reduce_249(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_250(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_251(val, _values, result)
                      result = s(:block_pass, val[1])
                    
    result
end

def _reduce_252(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_253(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_254(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_255(val, _values, result)
                      result = [new_splat(val[0], val[1])]
                    
    result
end

def _reduce_256(val, _values, result)
                      result = val[0] << val[2]
                    
    result
end

def _reduce_257(val, _values, result)
                      result  = val[0] << new_splat(val[2], val[3])
                    
    result
end

def _reduce_258(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

# reduce 259 omitted

def _reduce_260(val, _values, result)
                      result = s(:splat, val[1])
                    
    result
end

# reduce 261 omitted

# reduce 262 omitted

# reduce 263 omitted

# reduce 264 omitted

# reduce 265 omitted

# reduce 266 omitted

# reduce 267 omitted

# reduce 268 omitted

# reduce 269 omitted

def _reduce_270(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_271(val, _values, result)
                      result = s(:begin, val[2])
                      result.line = val[1]
                    
    result
end

def _reduce_272(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_273(val, _values, result)
                      result = s(:paren, val[1] || s(:nil))
                    
    result
end

def _reduce_274(val, _values, result)
                      result = s(:colon2, val[0], val[2].intern)
                    
    result
end

def _reduce_275(val, _values, result)
                      result = s(:colon3, val[1])
                    
    result
end

def _reduce_276(val, _values, result)
                      result = new_call val[0], :[], val[2]
                    
    result
end

def _reduce_277(val, _values, result)
                      result = new_array(val[0], val[1], val[2])
                    
    result
end

def _reduce_278(val, _values, result)
                      result = s(:hash, *val[1])
                    
    result
end

def _reduce_279(val, _values, result)
                      result = s(:return)
                    
    result
end

def _reduce_280(val, _values, result)
                      result = new_yield val[2]
                    
    result
end

def _reduce_281(val, _values, result)
                      result = s(:yield)
                    
    result
end

def _reduce_282(val, _values, result)
                      result = s(:yield)
                    
    result
end

def _reduce_283(val, _values, result)
                      result = s(:defined, val[3])
                    
    result
end

def _reduce_284(val, _values, result)
                      result = s(:not, val[2])
                      result.line = val[2].line
                    
    result
end

def _reduce_285(val, _values, result)
                      result = s(:not, s(:nil))
                    
    result
end

def _reduce_286(val, _values, result)
                      result = new_call nil, val[0].intern, s(:arglist)
                      result << val[1]
                    
    result
end

# reduce 287 omitted

def _reduce_288(val, _values, result)
                      val[0] << val[1]
                      result = val[0]
                    
    result
end

def _reduce_289(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_290(val, _values, result)
                      result = new_if val[1], val[3], val[4]
                    
    result
end

def _reduce_291(val, _values, result)
                      result = new_if val[1], val[4], val[3]
                    
    result
end

def _reduce_292(val, _values, result)
                      lexer.cond_push 1
                      result = lexer.line
                    
    result
end

def _reduce_293(val, _values, result)
                      lexer.cond_pop
                    
    result
end

def _reduce_294(val, _values, result)
                      result = s(:while, val[2], val[5], true)
                      result.line = val[1]
                    
    result
end

def _reduce_295(val, _values, result)
                      lexer.cond_push 1
                      result = lexer.line
                    
    result
end

def _reduce_296(val, _values, result)
                      lexer.cond_pop
                    
    result
end

def _reduce_297(val, _values, result)
                      result = s(:until, val[2], val[5], true)
                      result.line = val[1]
                    
    result
end

def _reduce_298(val, _values, result)
                      result = s(:case, val[1], *val[3])
                      result.line = val[1].line
                    
    result
end

def _reduce_299(val, _values, result)
                      result = s(:case, nil, *val[2])
                      # result.line = val[2].line
                    
    result
end

def _reduce_300(val, _values, result)
                      result = s(:case, nil, val[3])
                      # result.line = val[3].line
                    
    result
end

def _reduce_301(val, _values, result)
                      # ...
                    
    result
end

def _reduce_302(val, _values, result)
                      # ...
                    
    result
end

# reduce 303 omitted

def _reduce_304(val, _values, result)
                      # ...
                    
    result
end

def _reduce_305(val, _values, result)
                      result = new_class val[0], val[1], val[2], val[4], val[5]
                    
    result
end

def _reduce_306(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_307(val, _values, result)
                      # ...
                    
    result
end

def _reduce_308(val, _values, result)
                      result = new_sclass val[3], val[6]
                      result.line = val[2]
                    
    result
end

def _reduce_309(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_310(val, _values, result)
                      # ...
                    
    result
end

def _reduce_311(val, _values, result)
                      result = new_module val[2], val[4]
                      result.line = val[1]
                      result.end_line = lexer.line
                    
    result
end

def _reduce_312(val, _values, result)
                      result = lexer.scope_line
                      push_scope
                    
    result
end

def _reduce_313(val, _values, result)
                      result = new_def val[2], nil, val[1], val[3], val[4]
                      pop_scope
                    
    result
end

def _reduce_314(val, _values, result)
                       lexer.lex_state = :expr_fname
                    
    result
end

def _reduce_315(val, _values, result)
                      result = lexer.scope_line
                      push_scope
                    
    result
end

def _reduce_316(val, _values, result)
                      result = new_def val[5], val[1], val[4], val[6], val[7]
                      pop_scope
                    
    result
end

def _reduce_317(val, _values, result)
                      result = s(:break)
                    
    result
end

def _reduce_318(val, _values, result)
                      result = s(:next)
                    
    result
end

def _reduce_319(val, _values, result)
                      result = s(:redo)
                    
    result
end

# reduce 320 omitted

# reduce 321 omitted

# reduce 322 omitted

# reduce 323 omitted

# reduce 324 omitted

# reduce 325 omitted

# reduce 326 omitted

# reduce 327 omitted

# reduce 328 omitted

def _reduce_329(val, _values, result)
                      result = new_call nil, :lambda, s(:arglist)
                      result << new_iter(val[0], val[1])
                    
    result
end

def _reduce_330(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_331(val, _values, result)
                      result = nil
                    
    result
end

# reduce 332 omitted

# reduce 333 omitted

def _reduce_334(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_335(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_336(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_337(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_338(val, _values, result)
                      result = s(:if, val[2], val[4], val[5])
                      result.line = val[1]
                    
    result
end

# reduce 339 omitted

def _reduce_340(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_341(val, _values, result)
                      result = s(:block, val[0])
                    
    result
end

def _reduce_342(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_343(val, _values, result)
                      result = new_assign new_assignable(s(:identifier, val[0].intern)), val[2]
                    
    result
end

# reduce 344 omitted

def _reduce_345(val, _values, result)
                      result = 0
                    
    result
end

def _reduce_346(val, _values, result)
                      result = 0
                    
    result
end

def _reduce_347(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_348(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_349(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_350(val, _values, result)
                      nil
                    
    result
end

def _reduce_351(val, _values, result)
                      result = new_block_args val[0], val[2], val[4], val[5]
                    
    result
end

def _reduce_352(val, _values, result)
                      result = new_block_args val[0], val[2], nil, val[3]
                    
    result
end

def _reduce_353(val, _values, result)
                      result = new_block_args val[0], nil, val[2], val[3]
                    
    result
end

def _reduce_354(val, _values, result)
                      result = new_block_args val[0], nil, nil, nil
                    
    result
end

def _reduce_355(val, _values, result)
                      result = new_block_args val[0], nil, nil, val[1]
                    
    result
end

def _reduce_356(val, _values, result)
                      result = new_block_args nil, val[0], val[2], val[3]
                    
    result
end

def _reduce_357(val, _values, result)
                      result = new_block_args nil, val[0], nil, val[1]
                    
    result
end

def _reduce_358(val, _values, result)
                      result = new_block_args nil, nil, val[0], val[1]
                    
    result
end

def _reduce_359(val, _values, result)
                      result = new_block_args nil, nil, nil, val[0]
                    
    result
end

def _reduce_360(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_361(val, _values, result)
                      result = new_iter val[2], val[3]
                      result.line = val[1]
                      pop_scope
                    
    result
end

def _reduce_362(val, _values, result)
                      val[0] << val[1]
                      result = val[0]
                    
    result
end

# reduce 363 omitted

# reduce 364 omitted

def _reduce_365(val, _values, result)
                      result = new_call(nil, val[0], val[1])
                    
    result
end

def _reduce_366(val, _values, result)
                      result = new_call(val[0], val[2], val[3])
                    
    result
end

def _reduce_367(val, _values, result)
                      result = new_call(val[0], [:call, []], val[2])
                    
    result
end

def _reduce_368(val, _values, result)
                      result = new_call(val[0], val[2], val[3])
                    
    result
end

def _reduce_369(val, _values, result)
                      result = new_call(val[0], val[2])
                    
    result
end

def _reduce_370(val, _values, result)
                      result = new_super val[1]
                    
    result
end

def _reduce_371(val, _values, result)
                      result = s(:super, nil)
                    
    result
end

def _reduce_372(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_373(val, _values, result)
                      result = new_iter val[2], val[3]
                      result.line = val[1]
                      pop_scope
                    
    result
end

def _reduce_374(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_375(val, _values, result)
                      result = new_iter val[2], val[3]
                      result.line = val[1]
                      pop_scope
                    
    result
end

def _reduce_376(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_377(val, _values, result)
                      part = s(:when, val[2], val[4])
                      part.line = val[2].line
                      result = [part]
                      result.push *val[5] if val[5]
                    
    result
end

def _reduce_378(val, _values, result)
                      result = [val[0]]
                    
    result
end

# reduce 379 omitted

def _reduce_380(val, _values, result)
                      exc = val[1] || s(:array)
                      exc << new_assign(val[2], s(:gvar, '$!'.intern)) if val[2]
                      result = [s(:resbody, exc, val[4])]
                      result.push val[5].first if val[5]
                    
    result
end

def _reduce_381(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_382(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

# reduce 383 omitted

# reduce 384 omitted

def _reduce_385(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_386(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_387(val, _values, result)
                      result = val[1].nil? ? s(:nil) : val[1]
                    
    result
end

# reduce 388 omitted

# reduce 389 omitted

# reduce 390 omitted

# reduce 391 omitted

def _reduce_392(val, _values, result)
                      result = new_str val[0]
                    
    result
end

# reduce 393 omitted

# reduce 394 omitted

def _reduce_395(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_396(val, _values, result)
                      result = s(:str, val[0])
                    
    result
end

def _reduce_397(val, _values, result)
                      result = new_xstr val[1]
                    
    result
end

def _reduce_398(val, _values, result)
                      result = new_regexp val[1], val[2]
                    
    result
end

def _reduce_399(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_400(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_401(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_402(val, _values, result)
                      part = val[1]
                      part = s(:dstr, "", val[1]) if part.type == :evstr
                      result = val[0] << part
                    
    result
end

def _reduce_403(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_404(val, _values, result)
                      result = val[0].concat([val[1]])
                    
    result
end

def _reduce_405(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_406(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_407(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_408(val, _values, result)
                      result = val[0] << s(:str, val[1])
                    
    result
end

def _reduce_409(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_410(val, _values, result)
                      result = str_append val[0], val[1]
                    
    result
end

def _reduce_411(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_412(val, _values, result)
                      result = str_append val[0], val[1]
                    
    result
end

def _reduce_413(val, _values, result)
                      result = s(:str, val[0])
                    
    result
end

def _reduce_414(val, _values, result)
                      result = lexer.strterm
                      lexer.strterm = nil
                    
    result
end

def _reduce_415(val, _values, result)
                      lexer.strterm = val[1]
                      result = s(:evstr, val[2])
                    
    result
end

def _reduce_416(val, _values, result)
                      lexer.cond_push 0
                      lexer.cmdarg_push 0
                      result = lexer.strterm
                      lexer.strterm = nil
                      lexer.lex_state = :expr_beg
                    
    result
end

def _reduce_417(val, _values, result)
                      lexer.strterm = val[1]
                      lexer.cond_lexpop
                      lexer.cmdarg_lexpop
                      result = s(:evstr, val[2])
                    
    result
end

def _reduce_418(val, _values, result)
                      result = s(:gvar, val[0].intern)
                    
    result
end

def _reduce_419(val, _values, result)
                      result = s(:ivar, val[0].intern)
                    
    result
end

def _reduce_420(val, _values, result)
                      result = s(:cvar, val[0].intern)
                    
    result
end

# reduce 421 omitted

def _reduce_422(val, _values, result)
                      result = new_sym(val[1])
                      lexer.lex_state = :expr_end
                    
    result
end

def _reduce_423(val, _values, result)
                      result = new_sym(val[0])
                    
    result
end

# reduce 424 omitted

# reduce 425 omitted

# reduce 426 omitted

# reduce 427 omitted

def _reduce_428(val, _values, result)
                      result = new_dsym val[1]
                    
    result
end

def _reduce_429(val, _values, result)
                      result = new_int(val[0])
                    
    result
end

def _reduce_430(val, _values, result)
                      result = new_float(val[0])
                    
    result
end

# reduce 431 omitted

# reduce 432 omitted

def _reduce_433(val, _values, result)
                      result = new_ident(val[0])
                    
    result
end

def _reduce_434(val, _values, result)
                      result = new_ivar(val[0])
                    
    result
end

def _reduce_435(val, _values, result)
                      result = new_gvar(val[0])
                    
    result
end

def _reduce_436(val, _values, result)
                      result = new_const(val[0])
                    
    result
end

def _reduce_437(val, _values, result)
                      result = new_cvar(val[0])
                    
    result
end

def _reduce_438(val, _values, result)
                      result = new_nil(val[0])
                    
    result
end

def _reduce_439(val, _values, result)
                      result = new_self(val[0])
                    
    result
end

def _reduce_440(val, _values, result)
                      result = new_true(val[0])
                    
    result
end

def _reduce_441(val, _values, result)
                      result = new_false(val[0])
                    
    result
end

def _reduce_442(val, _values, result)
                      result = new___FILE__(val[0])
                    
    result
end

def _reduce_443(val, _values, result)
                      result = new___LINE__(val[0])
                    
    result
end

def _reduce_444(val, _values, result)
                      result = new_var_ref(val[0])
                    
    result
end

def _reduce_445(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_446(val, _values, result)
                      result = s(:nth_ref, val[0])
                    
    result
end

# reduce 447 omitted

def _reduce_448(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_449(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_450(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_451(val, _values, result)
                      result = val[1]
                      lexer.lex_state = :expr_beg
                    
    result
end

def _reduce_452(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_453(val, _values, result)
                      result = new_args val[0], val[2], val[4], val[5]
                    
    result
end

def _reduce_454(val, _values, result)
                      result = new_args val[0], val[2], nil, val[3]
                    
    result
end

def _reduce_455(val, _values, result)
                      result = new_args val[0], nil, val[2], val[3]
                    
    result
end

def _reduce_456(val, _values, result)
                      result = new_args val[0], nil, nil, val[1]
                    
    result
end

def _reduce_457(val, _values, result)
                      result = new_args nil, val[0], val[2], val[3]
                    
    result
end

def _reduce_458(val, _values, result)
                      result = new_args nil, val[0], nil, val[1]
                    
    result
end

def _reduce_459(val, _values, result)
                      result = new_args nil, nil, val[0], val[1]
                    
    result
end

def _reduce_460(val, _values, result)
                      result = new_args nil, nil, nil, val[0]
                    
    result
end

def _reduce_461(val, _values, result)
                      result = s(:args)
                    
    result
end

# reduce 462 omitted

def _reduce_463(val, _values, result)
                      result = val[0].intern
                      scope.add_local result
                    
    result
end

def _reduce_464(val, _values, result)
                      raise 'formal argument cannot be a constant'
                    
    result
end

def _reduce_465(val, _values, result)
                      raise 'formal argument cannot be an instance variable'
                    
    result
end

def _reduce_466(val, _values, result)
                      raise 'formal argument cannot be a class variable'
                    
    result
end

def _reduce_467(val, _values, result)
                      raise 'formal argument cannot be a global variable'
                    
    result
end

def _reduce_468(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_469(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_470(val, _values, result)
                      result = s(:lasgn, val[0])
                    
    result
end

# reduce 471 omitted

def _reduce_472(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

def _reduce_473(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

# reduce 474 omitted

# reduce 475 omitted

# reduce 476 omitted

# reduce 477 omitted

# reduce 478 omitted

def _reduce_479(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_480(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_481(val, _values, result)
                      result = new_assign new_assignable(s(:identifier, val[0].intern)), val[2]
                    
    result
end

def _reduce_482(val, _values, result)
                      result = s(:block, val[0])
                    
    result
end

def _reduce_483(val, _values, result)
                      result = val[0]
                      val[0] << val[2]
                    
    result
end

# reduce 484 omitted

# reduce 485 omitted

def _reduce_486(val, _values, result)
                      result = "*#{val[1]}".intern
                    
    result
end

def _reduce_487(val, _values, result)
                      result = :"*"
                    
    result
end

# reduce 488 omitted

# reduce 489 omitted

def _reduce_490(val, _values, result)
                      result = "&#{val[1]}".intern
                    
    result
end

def _reduce_491(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_492(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_493(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_494(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_495(val, _values, result)
                      result = []
                    
    result
end

def _reduce_496(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_497(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_498(val, _values, result)
                      result = val[0].push *val[2]
                    
    result
end

def _reduce_499(val, _values, result)
                      result = [val[0], val[2]]
                    
    result
end

def _reduce_500(val, _values, result)
                      result = [s(:sym, val[0].intern), val[1]]
                    
    result
end

# reduce 501 omitted

# reduce 502 omitted

# reduce 503 omitted

# reduce 504 omitted

# reduce 505 omitted

# reduce 506 omitted

# reduce 507 omitted

# reduce 508 omitted

# reduce 509 omitted

# reduce 510 omitted

# reduce 511 omitted

# reduce 512 omitted

# reduce 513 omitted

# reduce 514 omitted

# reduce 515 omitted

# reduce 516 omitted

# reduce 517 omitted

# reduce 518 omitted

# reduce 519 omitted

# reduce 520 omitted

# reduce 521 omitted

# reduce 522 omitted

# reduce 523 omitted

def _reduce_524(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module Opal
