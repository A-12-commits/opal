#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.10
# from Racc grammer file "".
#

require 'racc/parser.rb'
module Opal
  class Parser < Racc::Parser


##### State transition tables begin ###

clist = [
'63,64,65,8,51,-82,-84,688,57,58,201,202,268,61,587,59,60,62,23,24,66',
'67,-83,431,201,202,22,28,27,89,88,90,91,575,268,17,580,520,201,202,522',
'7,41,6,9,93,92,83,50,85,84,86,87,94,95,-505,81,82,688,38,39,37,703,-64',
'260,520,201,202,522,-82,-84,261,551,-95,263,73,586,759,656,551,-90,36',
'757,74,30,-504,-83,52,551,201,202,475,32,577,576,267,40,100,-92,551',
'-75,688,99,100,18,687,-82,-84,99,79,73,75,76,77,78,-82,-84,267,74,80',
'63,64,65,-83,51,303,475,56,57,58,617,53,-83,61,54,59,60,62,254,255,66',
'67,613,268,263,-91,253,286,290,89,88,90,91,303,100,215,687,520,575,99',
'519,551,41,616,702,93,92,83,50,85,84,86,87,94,95,508,81,82,-441,38,39',
'37,100,100,550,-441,699,99,99,100,-90,550,-90,697,99,-90,736,100,100',
'687,550,206,99,99,210,263,735,52,-92,100,-92,550,507,-92,99,198,40,575',
'577,576,-504,575,199,509,214,575,267,719,-508,79,73,75,76,77,78,-508',
'-508,-508,74,80,-445,-508,-508,698,-508,-433,-92,56,557,263,558,53,-433',
'-508,54,-91,-90,-91,617,762,-91,558,-94,-508,-508,-254,-508,-508,-508',
'-508,-508,100,197,550,842,100,99,577,576,573,99,577,576,578,819,577',
'576,588,617,721,-88,616,-508,-508,-508,-508,-508,-508,-508,-508,-508',
'-508,-508,-508,-508,-508,-273,617,-508,-508,-508,-445,603,-273,-273',
'-273,-508,598,223,-273,-273,616,-273,-508,223,-508,223,-508,-508,-508',
'-508,-508,-508,-508,-89,-508,-508,-508,575,762,616,-273,-273,507,-273',
'-273,-273,-273,-273,-442,-508,-508,-80,-83,468,-508,-442,-444,-84,888',
'-508,-88,-91,-63,-444,768,889,-92,-502,769,-273,-273,-273,-273,-273',
'-273,-273,-273,-273,-273,-273,-273,-273,-273,-86,597,-273,-273,-273',
'427,606,339,338,-94,-273,-274,428,-439,577,576,582,-273,-274,-273,-439',
'-273,-273,-273,-273,-273,-273,-273,-436,-273,-444,-273,887,699,-436',
'-436,510,527,528,534,771,-436,-82,511,-273,-273,-502,-85,633,-273,520',
'-90,537,522,-273,634,-93,63,64,65,8,51,429,303,-275,57,58,-502,-274',
'772,61,-275,59,60,62,23,24,66,67,725,201,202,773,22,28,27,89,88,90,91',
'698,-436,17,429,537,303,200,776,7,41,223,9,93,92,83,50,85,84,86,87,94',
'95,633,81,82,-273,38,39,37,634,-81,-275,-273,-267,492,-274,-444,-505',
'753,-89,-267,220,-274,-444,100,222,221,-87,36,99,-438,30,762,-274,52',
'499,-95,-438,570,32,-274,785,500,40,786,571,-321,-275,-267,303,466,18',
'464,-321,-275,-267,79,73,75,76,77,78,-273,339,338,74,80,-506,-506,-506',
'-267,-506,-274,-444,56,-506,-506,752,53,695,-506,54,-506,-506,-506,-506',
'-506,-506,-506,523,-274,524,498,-506,-506,-506,-506,-506,-506,-506,223',
'-443,-506,-321,-275,-267,100,211,-443,-506,856,99,-506,-506,-506,-506',
'-506,-506,-506,-506,-506,-506,670,-506,-506,-273,-506,-506,-506,781',
'762,220,-273,-273,-440,222,221,-505,394,100,-273,-440,396,395,99,-505',
'296,297,-506,201,202,-506,-506,691,-506,336,335,339,338,-506,100,-506',
'433,-506,856,99,432,336,335,339,338,-506,781,762,503,504,-506,-506,-506',
'-506,-506,-506,-273,558,475,-506,-506,-507,-507,-507,-273,-507,100,-506',
'-506,-507,-507,99,-506,468,-507,-506,-507,-507,-507,-507,-507,-507,-507',
'336,335,339,338,-507,-507,-507,-507,-507,-507,-507,801,539,-507,331',
'329,328,330,803,806,-507,670,807,-507,-507,-507,-507,-507,-507,-507',
'-507,-507,-507,430,-507,-507,809,-507,-507,-507,539,493,331,329,328',
'330,683,811,812,542,813,94,95,680,-255,678,263,778,531,-507,668,534',
'-507,-507,535,-507,336,335,339,338,-507,537,-507,397,-507,664,539,542',
'331,329,328,330,-507,663,662,545,820,-507,-507,-507,-507,-507,-507,821',
'822,263,-507,-507,63,64,65,263,51,546,-507,-507,57,58,242,-507,384,61',
'-507,59,60,62,254,255,66,67,825,826,656,547,253,28,27,89,88,90,91,828',
'539,215,331,329,328,330,375,-253,41,832,303,93,92,83,50,85,84,86,87',
'94,95,656,81,82,513,38,39,37,223,539,837,331,329,328,330,839,223,542',
'102,103,104,105,106,372,747,545,351,206,648,386,210,-504,845,52,646',
'-75,849,850,252,220,303,645,40,222,221,218,219,220,559,746,214,222,221',
'218,219,79,73,75,76,77,78,303,860,-256,74,80,63,64,65,8,51,643,257,56',
'57,58,494,53,861,61,54,59,60,62,23,24,66,67,863,295,242,294,22,28,27',
'89,88,90,91,501,537,17,102,103,104,105,106,7,41,635,9,93,92,83,50,85',
'84,86,87,94,95,873,81,82,874,38,39,37,223,102,103,104,105,106,242,303',
'878,272,880,881,806,806,807,630,237,238,223,36,223,223,30,223,890,52',
'581,196,468,195,32,220,896,226,40,222,221,218,219,263,194,224,18,225',
'662,193,585,79,73,75,76,77,78,596,-253,107,74,80,63,64,65,8,51,906,806',
'56,57,58,908,53,909,61,54,59,60,62,23,24,66,67,466,595,96,592,22,28',
'27,89,88,90,91,738,589,17,,,,,,7,41,,9,93,92,83,50,85,84,86,87,94,95',
',81,82,,38,39,37,223,-525,-525,-525,-525,229,231,,,-525,-525,,,,,,237',
'238,,36,,,30,,,52,,,,,32,220,,226,40,222,221,218,219,230,228,224,18',
'225,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54',
'59,60,62,254,255,66,67,,,,,253,28,27,89,88,90,91,,,215,,,,,,,41,,,93',
'92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,223,-525,-525,-525,-525',
'229,231,,,-525,-525,,,,,,237,238,,206,,,210,,,52,,,,,252,220,,226,40',
'222,221,218,219,230,228,224,214,225,,,,79,73,75,76,77,78,,,,74,80,63',
'64,65,8,51,,257,56,57,58,,53,,61,54,59,60,62,23,24,66,67,,,,,22,28,27',
'89,88,90,91,,,17,,,,,,7,41,,9,93,92,83,50,85,84,86,87,94,95,,81,82,',
'38,39,37,223,,,,,,,,,,,,,,,,237,238,,36,,,30,,,52,,,,,32,220,,226,40',
'222,221,218,219,,,224,18,225,,,,79,73,75,76,77,78,,,,74,80,63,64,65',
',51,,,56,57,58,,53,,61,54,59,60,62,254,255,66,67,,,,,253,286,290,89',
'88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39',
'37,223,,,,,,,,,,,,,,,,237,238,,206,,,210,,,52,,,,,622,220,250,226,40',
'222,221,218,219,,,224,214,225,,,,79,73,75,76,77,78,,,,74,80,63,64,65',
'8,51,,,56,57,58,,53,,61,54,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90',
'91,,,17,,,,,,7,41,,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37',
'223,227,232,233,234,229,231,239,,235,236,,,,,,237,238,,36,,,30,,,52',
',,,,32,220,,226,40,222,221,218,219,230,228,224,18,225,,,,79,73,75,76',
'77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,23,24,66',
'67,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87',
'94,95,,81,82,,38,39,37,223,-525,-525,-525,-525,229,231,,,-525,-525,',
',,,,237,238,,206,,,210,211,,52,,,,,,220,,226,40,222,221,218,219,230',
'228,224,18,225,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58',
',53,,61,54,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,215,,,,,',
',41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,223,-525,-525,-525',
'-525,229,231,,,-525,-525,,,,,,237,238,,206,,,210,,,52,,,,,,220,,226',
'40,222,221,218,219,230,228,224,214,225,,,,79,73,75,76,77,78,,,,74,80',
'63,64,65,8,51,,,56,57,58,,53,,61,54,59,60,62,23,24,66,67,,,,,22,28,27',
'89,88,90,91,,,17,,,,,,7,41,,9,93,92,83,50,85,84,86,87,94,95,,81,82,',
'38,39,37,223,,,,,,,,,,,,,,,,237,238,,36,,,30,,,52,,,,,32,220,,226,40',
'222,221,218,219,,,224,18,225,,,,79,73,75,76,77,78,,,,74,80,63,64,65',
',51,,,56,57,58,,53,,61,54,59,60,62,254,255,66,67,,,,,253,286,290,89',
'88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39',
'37,223,227,232,233,234,229,231,,,235,236,,,,,,237,238,,206,,,210,,,52',
',,,,622,220,,226,40,222,221,218,219,230,228,224,214,225,,,,79,73,75',
'76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,254,255',
'66,67,,,,,253,28,27,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86',
'87,94,95,,81,82,,38,39,37,223,-525,-525,-525,-525,229,231,,,-525,-525',
',,,,,237,238,,206,,,210,,,52,,,,,252,220,250,226,40,222,221,218,219',
'230,228,224,214,225,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,257',
'56,57,58,,53,,61,54,59,60,62,254,255,66,67,,,,,253,28,27,89,88,90,91',
',,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,223',
'227,232,233,234,229,231,239,240,235,236,,-525,-525,,,237,238,,206,,',
'210,,,52,,,,,252,220,250,226,40,222,221,218,219,230,228,224,214,225',
',,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,257,56,57,58,,53,,61,54',
'59,60,62,254,255,66,67,,,,,253,28,27,89,88,90,91,,,215,,,,,,,41,,,93',
'92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,223,227,232,233,234,229',
'231,239,240,235,236,,-525,-525,,,237,238,,206,,,210,,,52,,,,,252,220',
'250,226,40,222,221,218,219,230,228,224,214,225,,,,79,73,75,76,77,78',
',,,74,80,63,64,65,,51,,257,56,57,58,,53,,61,54,59,60,62,23,24,66,67',
',,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87,94',
'95,,81,82,,38,39,37,223,-525,-525,-525,-525,229,231,,,-525,-525,,,,',
',237,238,,206,,,210,,,52,,,,,,220,,226,40,222,221,218,219,230,228,224',
'18,225,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61',
'54,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93',
'92,83,50,85,84,86,87,94,95,223,81,82,,38,39,37,,,,,,,,,,237,238,,,,',
',,,,206,,,210,,220,52,,,222,221,218,219,,,40,,,,,,,,18,,,,,79,73,75',
'76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,254,255',
'66,67,,,,,253,286,290,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84',
'86,87,94,95,223,81,82,,38,39,37,,,,,,,,,,237,238,,,,,,,,,206,,,210,',
'220,52,226,,222,221,218,219,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,',
',74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,254,255,66,67,,,',
',253,286,290,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94',
'95,223,81,82,,38,39,37,,,,,,,,,,237,238,,,,,,,,,206,,,210,,220,52,226',
',222,221,218,219,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,63,64',
'65,8,51,,,56,57,58,,53,,61,54,59,60,62,23,24,66,67,,,,,22,28,27,89,88',
'90,91,,,17,,,,,,7,41,,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39',
'37,,,,,,,,,,,,,,,,,,,,36,,,276,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73',
'75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,254',
'255,66,67,,,,,253,286,290,89,88,90,91,,,215,,,,,,,287,,,93,92,83,50',
'85,84,86,87,94,95,,81,82,,,322,291,331,329,328,330,,,,,,,,,,,,,,,,284',
',,281,,,52,,,,,280,,,,,333,,,,,,,,336,335,339,338,79,73,75,76,77,78',
',740,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,254,255,66,67',
',,,,253,286,290,89,88,90,91,,,215,,,,,,,287,,,93,92,83,50,85,84,86,87',
'94,95,,81,82,,,713,291,331,329,328,330,,,,,,,,,,,,,,,,284,,,210,,,52',
',,,,,,,,,333,707,,,,,,,336,335,339,338,79,73,75,76,77,78,,,,74,80,63',
'64,65,293,51,,,56,57,58,,53,,61,54,59,60,62,254,255,66,67,,,,,253,286',
'290,89,88,90,91,,,215,,,,,,,287,,,93,92,83,50,85,84,86,87,94,95,,81',
'82,,,322,291,331,329,328,330,,,,,,,,,,,,,,,,868,,,210,,,52,,,,,,,,,',
'333,317,,,,,,,336,335,339,338,79,73,75,76,77,78,,,,74,80,63,64,65,,51',
',,56,57,58,,53,,61,54,59,60,62,254,255,66,67,,,,,253,286,290,89,88,90',
'91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,',
',,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75',
'76,77,78,,,,74,80,63,64,65,8,51,,,56,57,58,,53,,61,54,59,60,62,23,24',
'66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,83,50,85,84,86',
'87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,',
'40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58',
',53,,61,54,59,60,62,254,255,66,67,,,,,253,286,290,89,88,90,91,,,215',
',,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,',
',,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78',
',,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,254,255,66,67,',
',,,253,286,290,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87',
'94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40',
',,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53',
',61,54,59,60,62,254,255,66,67,,,,,253,286,290,89,88,90,91,,,215,,,,',
',,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,',
',,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74',
'80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,254,255,66,67,,,,,253',
'286,290,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,',
'214,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54',
'59,60,62,254,255,66,67,,,,,253,286,290,89,88,90,91,,,215,,,,,,,41,,',
'93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206',
',,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,63,64',
'65,8,51,,,56,57,58,,53,,61,54,59,60,62,23,24,66,67,,,,,22,28,27,89,88',
'90,91,,,17,,,,,,7,41,,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39',
'37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73',
'75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,254',
'255,66,67,,,,,253,286,290,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85',
'84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,',
',,622,,250,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51',
',257,56,57,58,,53,,61,54,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90',
'91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,',
',,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76',
'77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,254,255,66',
'67,,,,,253,28,27,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87',
'94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,252,,,',
'40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,257,56,57',
'58,,53,,61,54,59,60,62,254,255,66,67,,,,,253,286,290,89,88,90,91,,,215',
',,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,',
',,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78',
',,,74,80,63,64,65,,51,,257,56,57,58,,53,,61,54,59,60,62,254,255,66,67',
',,,,253,286,290,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87',
'94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,250,',
'40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,257,56,57',
'58,,53,,61,54,59,60,62,254,255,66,67,,,,,253,286,290,89,88,90,91,,,215',
',,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,',
',,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78',
',,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,23,24,66,67,,,',
',22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95',
',81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,',
',18,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54',
'59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92',
'83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210',
',,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51',
',,56,57,58,,53,,61,54,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91',
',,17,,,,,593,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,223',
'227,232,233,234,229,231,239,240,235,236,,216,217,,,237,238,,206,,,210',
',,52,,,,,,220,,226,40,222,221,218,219,230,228,224,18,225,,,,79,73,75',
'76,77,78,,,,74,80,100,241,,-226,,99,,56,63,64,65,53,51,,54,,57,58,,',
',61,,59,60,62,254,255,66,67,,,,,253,286,290,89,88,90,91,,,215,,,,,,',
'287,,,93,92,83,50,85,84,86,87,94,95,,81,82,,,713,291,331,329,328,330',
',,,,,,,,,,,,,,,284,,,30,,,52,,,,,32,,,,,333,,,,,,,,336,335,339,338,79',
'73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62',
'23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,83,50,85',
'84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,639,52',
',,,,,,250,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51',
',,56,57,58,,53,,61,54,59,60,62,254,255,66,67,,,,,253,286,290,89,88,90',
'91,,,215,,,,,,,287,,,93,92,83,50,85,84,560,87,94,95,,81,82,,,713,291',
'331,329,328,330,,,,,,,,,,,,,,,,561,,,210,,,52,,,,,,,,,,333,,,,,,,,336',
'335,339,338,79,73,75,76,77,78,,,,74,80,63,64,65,8,51,,,56,57,58,,53',
',61,54,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41',
',9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,',
',36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80',
'63,64,65,8,51,,,56,57,58,,53,,61,54,59,60,62,23,24,66,67,,,,,22,28,27',
'89,88,90,91,,,17,,,,,,7,41,,9,93,92,83,50,85,84,86,87,94,95,,81,82,',
'38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,',
'79,73,75,76,77,78,,,,74,80,63,64,65,8,51,,,56,57,58,,53,,61,54,59,60',
'62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,83,50',
'85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,',
',,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,',
'56,57,58,,53,,61,54,59,60,62,254,255,66,67,,,,,253,286,290,89,88,90',
'91,,,215,,,,,,,287,,,93,92,83,50,85,84,560,87,94,95,,81,82,,,322,291',
'331,329,328,330,,,,,,,,,,,,,,,,561,,,210,,,52,,,,,,,,,,333,,530,,,,',
',336,335,339,338,79,73,75,76,77,78,,,,74,80,-501,-501,-501,,-501,,,56',
'-501,-501,,53,,-501,54,-501,-501,-501,-501,-501,-501,-501,,-501,,,-501',
'-501,-501,-501,-501,-501,-501,,,-501,,,,,,,-501,,,-501,-501,-501,-501',
'-501,-501,-501,-501,-501,-501,,-501,-501,,-501,-501,-501,,,,,,,,,,,',
',,,,,,,,-501,,,-501,-501,,-501,,,,,-501,,-501,,-501,,,,,,,,-501,,-501',
',,-501,-501,-501,-501,-501,-501,,,,-501,-501,-502,-502,-502,,-502,,-501',
'-501,-502,-502,,-501,,-502,-501,-502,-502,-502,-502,-502,-502,-502,',
'-502,,,-502,-502,-502,-502,-502,-502,-502,,,-502,,,,,,,-502,,,-502,-502',
'-502,-502,-502,-502,-502,-502,-502,-502,,-502,-502,,-502,-502,-502,',
',,,,,,,,,,,,,,,,,,-502,,,-502,-502,,-502,,,,,-502,,-502,,-502,,,,,,',
',-502,,-502,,,-502,-502,-502,-502,-502,-502,,,,-502,-502,63,64,65,,51',
',-502,-502,57,58,,-502,,61,-502,59,60,62,254,255,66,67,,,,,253,286,290',
'89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38',
'39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,252,,,,40,,,,,,,,214,,,',
',79,73,75,76,77,78,,,,74,80,63,64,65,8,51,,,56,57,58,,53,,61,54,59,60',
'62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,6,9,93,92,83',
'50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52',
',,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,386',
',56,57,58,,53,,61,54,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,',
',17,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,',
',,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77',
'78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,23,24,66,67',
',,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87,94',
'95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,',
',,,,18,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61',
'54,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93',
'92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,',
',210,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,63,64',
'65,,51,,,56,57,58,,53,,61,54,59,60,62,23,24,66,67,,,,,22,28,27,89,88',
'90,91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37',
',,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75',
'76,77,78,,,,74,80,63,64,65,8,51,,,56,57,58,,53,,61,54,59,60,62,23,24',
'66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,83,50,85,84,86',
'87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,',
'40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,8,51,,,56,57,58',
',53,,61,54,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,7',
'41,6,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,',
',,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74',
'80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,254,255,66,67,,,,,253',
'286,290,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,',
'214,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,8,51,,,56,57,58,,53,,61',
'54,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93',
'92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,',
'30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,63,64',
'65,,51,386,,56,57,58,,53,,61,54,59,60,62,254,255,66,67,,,,,253,286,290',
'89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38',
'39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79',
'73,75,76,77,78,,,,74,80,63,64,65,8,51,,,56,57,58,,53,,61,54,59,60,62',
'23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,83,50,85',
'84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,',
'32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56',
'57,58,,53,,61,54,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,215',
',,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,',
',,,,,,,,,206,,,210,,,52,,,,,403,,,,40,,,,,,,,214,,,,,79,73,75,76,77',
'78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,23,24,66,67',
',,,,22,28,27,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94',
'95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,403,,,,40',
',,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53',
',61,54,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,215,,,,,,,41',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,',
'206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80',
'63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,254,255,66,67,,,,,253,28',
'27,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82',
',38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,252,,,,40,,,,,,,,214',
',,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,257,56,57,58,,53,,61,54',
'59,60,62,254,255,66,67,,,,,253,286,290,89,88,90,91,,,215,,,,,,,41,,',
'93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206',
',,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,63,64',
'65,,51,,,56,57,58,,53,,61,54,59,60,62,23,24,66,67,,,,,22,28,27,89,88',
'90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37',
',,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75',
'76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,23,24',
'66,67,,,,,22,28,27,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86',
'87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,',
'40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58',
',53,,61,54,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,',
'41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,',
',,,206,,,210,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80',
'63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,23,24,66,67,,,,,22,28,27',
'89,88,90,91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38',
'39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,18,,,,,79',
'73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62',
'254,255,66,67,,,,,253,286,290,89,88,90,91,,,215,,,,,,,41,,,93,92,83',
'50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,',
',52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,8',
'51,,,56,57,58,,53,,61,54,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90',
'91,,,17,,,,,,7,41,,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37',
',,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75',
'76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,254,255',
'66,67,,,,,253,286,290,89,88,90,91,,,215,,,,,,,287,,,93,92,83,50,85,84',
'86,87,94,95,,81,82,,,322,291,331,329,328,330,,,,,,,,,,,,,,,,284,,,281',
',,52,,,,,,,,,,333,,,,,,,,336,335,339,338,79,73,75,76,77,78,,,,74,80',
'63,64,65,8,51,,,56,57,58,,53,,61,54,59,60,62,23,24,66,67,,,,,22,28,27',
'89,88,90,91,,,17,,,,,,7,41,,9,93,92,83,50,85,84,86,87,94,95,,81,82,',
'38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,',
'79,73,75,76,77,78,,,,74,80,63,64,65,8,51,,,56,57,58,,53,,61,54,59,60',
'62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,83,50',
'85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,',
',,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,',
'56,57,58,,53,,61,54,59,60,62,254,255,66,67,,,,,253,28,27,89,88,90,91',
',,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,',
',,,,,,,,,,,,,,,206,,,210,,,52,,,,,252,,,,40,,,,,,,,214,,,,,79,73,75',
'76,77,78,,,,74,80,63,64,65,8,51,,257,56,57,58,,53,,61,54,59,60,62,23',
'24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,83,50,85,84',
'86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32',
',,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57',
'58,,53,,61,54,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,',
',,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,',
',,,,,,206,,,210,,435,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,',
',,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,254,255,66,67,,',
',,253,286,290,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94',
'95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,',
',,,,214,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,',
'61,54,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,',
'93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206',
',,210,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,63,64',
'65,,51,,,56,57,58,,53,,61,54,59,60,62,254,255,66,67,,,,,253,286,290',
'89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38',
'39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79',
'73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62',
'254,255,66,67,,,,,253,286,290,89,88,90,91,,,215,,,,,,,41,,,93,92,83',
'50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,',
',52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51',
',,56,57,58,,53,,61,54,59,60,62,254,255,66,67,,,,,253,286,290,89,88,90',
'91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,',
',,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75',
'76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,254,255',
'66,67,,,,,253,286,290,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84',
'86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,',
',,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57',
'58,,53,,61,54,59,60,62,254,255,66,67,,,,,253,286,290,89,88,90,91,,,215',
',,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,',
',,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78',
',,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,254,255,66,67,',
',,,253,286,290,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87',
'94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40',
',,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53',
',61,54,59,60,62,254,255,66,67,,,,,253,286,290,89,88,90,91,,,215,,,,',
',,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,',
',,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74',
'80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,254,255,66,67,,,,,253',
'286,290,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,',
'214,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54',
'59,60,62,254,255,66,67,,,,,253,286,290,89,88,90,91,,,215,,,,,,,41,,',
'93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206',
',,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,63,64',
'65,,51,,,56,57,58,,53,,61,54,59,60,62,254,255,66,67,,,,,253,286,290',
'89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38',
'39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79',
'73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62',
'254,255,66,67,,,,,253,286,290,89,88,90,91,,,215,,,,,,,41,,,93,92,83',
'50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,',
',52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51',
',,56,57,58,,53,,61,54,59,60,62,254,255,66,67,,,,,253,286,290,89,88,90',
'91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,',
',,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75',
'76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,254,255',
'66,67,,,,,253,286,290,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84',
'86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,',
',,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57',
'58,,53,,61,54,59,60,62,254,255,66,67,,,,,253,286,290,89,88,90,91,,,215',
',,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,',
',,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78',
',,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,254,255,66,67,',
',,,253,286,290,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87',
'94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40',
',,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53',
',61,54,59,60,62,254,255,66,67,,,,,253,286,290,89,88,90,91,,,215,,,,',
',,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,',
',,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74',
'80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,254,255,66,67,,,,,253',
'286,290,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,',
'214,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54',
'59,60,62,254,255,66,67,,,,,253,286,290,89,88,90,91,,,215,,,,,,,41,,',
'93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206',
',,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,63,64',
'65,,51,,,56,57,58,,53,,61,54,59,60,62,254,255,66,67,,,,,253,286,290',
'89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38',
'39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79',
'73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62',
'254,255,66,67,,,,,253,286,290,89,88,90,91,,,215,,,,,,,41,,,93,92,83',
'50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,',
',52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51',
',,56,57,58,,53,,61,54,59,60,62,254,255,66,67,,,,,253,286,290,89,88,90',
'91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,',
',,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75',
'76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,254,255',
'66,67,,,,,253,286,290,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84',
'86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,',
',,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57',
'58,,53,,61,54,59,60,62,254,255,66,67,,,,,253,286,290,89,88,90,91,,,215',
',,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,',
',,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78',
',,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,254,255,66,67,',
',,,253,286,290,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87',
'94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40',
',,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53',
',61,54,59,60,62,254,255,66,67,,,,,253,286,290,89,88,90,91,,,215,,,,',
',,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,',
',,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74',
'80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,254,255,66,67,,,,,253',
'286,290,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,',
'214,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54',
'59,60,62,254,255,66,67,,,,,253,28,27,89,88,90,91,,,215,,,,,,,41,,,93',
'92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,',
',210,,,52,,,,,252,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,63',
'64,65,,51,,257,56,57,58,,53,,61,54,59,60,62,23,24,66,67,,,,,22,28,27',
'89,88,90,91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38',
'39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,18,,,,,79',
'73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62',
'254,255,66,67,,,,,253,286,290,89,88,90,91,,,215,,,,,,,41,,,93,92,83',
'50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,',
',52,,,,,252,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,63,64,65',
',51,,,56,57,58,,53,,61,54,59,60,62,254,255,66,67,,,,,253,286,290,89',
'88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39',
'37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73',
'75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,254',
'255,66,67,,,,,253,286,290,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85',
'84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,',
',,403,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,',
',56,57,58,,53,,61,54,59,60,62,254,255,66,67,,,,,253,286,290,89,88,90',
'91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,',
',,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75',
'76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,254,255',
'66,67,,,,,253,286,290,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84',
'86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,',
',,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57',
'58,,53,,61,54,59,60,62,254,255,66,67,,,,,253,286,290,89,88,90,91,,,215',
',,,,,,287,,,93,92,83,50,85,84,86,87,94,95,,81,82,,,713,291,331,329,328',
'330,,,,,,,,,,,,,,,,284,,,281,,,52,,,,,,,,,,333,707,,,,,,,336,335,339',
'338,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59',
'60,62,254,255,66,67,,,,,253,286,290,89,88,90,91,,,215,,,,,,,41,,,93',
'92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,',
',210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,63,64',
'65,,51,,,56,57,58,,53,,61,54,59,60,62,23,24,66,67,,,,,22,28,27,89,88',
'90,91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37',
',,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75',
'76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,254,255',
'66,67,,,,,253,28,27,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86',
'87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,252',
',250,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,257',
'56,57,58,,53,,61,54,59,60,62,254,255,66,67,,,,,253,28,27,89,88,90,91',
',,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,',
',,,,,,,,,,,,,,,206,,,210,,,484,,,,,252,,250,,40,,,,,,,,214,,,,,79,73',
'75,76,77,78,,,,74,80,63,64,65,,51,,257,56,57,58,,53,,61,54,59,60,62',
'254,255,66,67,,,,,253,28,27,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50',
'85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,488',
'52,,,,,252,,250,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,63,64',
'65,,51,,257,56,57,58,,53,,61,54,59,60,62,23,24,66,67,,,,,22,28,27,89',
'88,90,91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39',
'37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73',
'75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,254',
'255,66,67,,,,,253,286,290,89,88,90,91,,,215,,,,,,,287,,,93,92,83,50',
'85,84,86,87,94,95,,81,82,,,,291,,,,,,,,,,,,,,,,,,,,284,,,281,,,52,,',
',,,,,,,,,,,,,,,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,8,51,,,56,57',
'58,,53,,61,54,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,',
',,7,41,,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,',
',,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,',
',74,80,63,64,65,8,51,,,56,57,58,,53,,61,54,59,60,62,23,24,66,67,,,,',
'22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,83,50,85,84,86,87,94,95',
',81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,276,,,52,,,,,32,,,,40,,,,,',
',,18,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,8,51,,,56,57,58,,53,,61',
'54,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93',
'92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,',
'30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,63,64',
'65,,51,,,56,57,58,,53,,61,54,59,60,62,254,255,66,67,,,,,253,28,27,89',
'88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39',
'37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,622,,250,,40,,,,,,,,214,,,',
',79,73,75,76,77,78,,,,74,80,63,64,65,8,51,,257,56,57,58,,53,,61,54,59',
'60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,83',
'50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52',
',,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,',
',56,57,58,,53,,61,54,59,60,62,254,255,66,67,,,,,253,286,290,89,88,90',
'91,,,215,,,,,593,,287,,,93,92,83,50,85,84,86,87,94,95,,81,82,,,,291',
'223,227,232,233,234,229,231,239,240,235,236,,216,217,,,237,238,,284',
',,210,,,52,,,,,,220,,226,,222,221,218,219,230,228,224,,225,,,,79,73',
'75,76,77,78,,,,74,80,,241,,496,,,,56,,,,53,,,54,63,64,65,8,51,,,,57',
'58,,,,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,7',
'41,,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,',
',,,,36,,,276,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74',
'80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,254,255,66,67,,,,,253',
'286,290,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,',
'214,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,8,51,,,56,57,58,,53,,61',
'54,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93',
'92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,',
'30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,63,64',
'65,,51,,,56,57,58,,53,,61,54,59,60,62,254,255,66,67,,,,,253,286,290',
'89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38',
'39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79',
'73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62',
'254,255,66,67,,,,,253,286,290,89,88,90,91,,,215,,,,,,,41,,,93,92,83',
'50,85,84,86,87,94,95,,81,82,,38,39,37,223,227,232,233,234,229,231,239',
'240,235,236,,216,217,,,237,238,,206,,,210,,,52,,,,,,220,,226,40,222',
'221,218,219,230,228,224,214,225,,,,79,73,75,76,77,78,,-273,,74,80,,241',
'614,-273,-273,-273,,56,-273,-273,-273,53,-273,,54,,,,,,,,-273,-273,',
',,,,,,-273,-273,,-273,-273,-273,-273,-273,,,,,,,,,,,,,,,,,,,,,,-273',
'-273,-273,-273,-273,-273,-273,-273,-273,-273,-273,-273,-273,-273,,,-273',
'-273,-273,,606,-273,,,-273,,,-273,,-273,,-273,,-273,,-273,-273,-273',
'-273,-273,-273,-273,,-273,,-273,,,,,,,,,,,,,-273,-273,-273,-273,,-273',
'-508,,,,-273,,-93,-508,-508,-508,,,-508,-508,-508,,-508,,,,,,,,,-508',
'-508,-508,,,,,,,,-508,-508,,-508,-508,-508,-508,-508,,,,,,,,,,,,,,,',
',,,,,,-508,-508,-508,-508,-508,-508,-508,-508,-508,-508,-508,-508,-508',
'-508,,,-508,-508,-508,,737,-508,,,-508,,,-508,,-508,,-508,,-508,,-508',
'-508,-508,-508,-508,-508,-508,,-508,-508,-508,,,,,,,,,,,,,-508,-508',
'-508,-508,,-508,,63,64,65,-508,51,-91,,,57,58,,,,61,,59,60,62,254,255',
'66,67,,,,,253,286,290,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84',
'86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,',
',,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57',
'58,,53,,61,54,59,60,62,254,255,66,67,,,,,253,286,290,89,88,90,91,,,215',
',,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,',
',,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78',
',,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,23,24,66,67,,,',
',22,28,27,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95',
',81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,',
',214,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61',
'54,59,60,62,254,255,66,67,,,,,253,286,290,89,88,90,91,,,215,,,,,,,287',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,,,291,,,,,,,,,,,,,,,,,,,,284',
',,281,,,52,,,,,,,,,,,,,,,,,,,,,,79,73,75,76,77,78,,,,74,80,63,64,65',
',51,,,56,57,58,,53,,61,54,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90',
'91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,',
',,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75',
'76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,23,24',
'66,67,,,,,22,28,27,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86',
'87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,',
'40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58',
',53,,61,54,59,60,62,254,255,66,67,,,,,253,286,290,89,88,90,91,,,215',
',,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,',
',,,,,,,,,206,,,210,,,52,,,,,724,,,,40,,,,,,,,214,,,,,79,73,75,76,77',
'78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,254,255,66,67',
',,,,253,286,290,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87',
'94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40',
',,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53',
',61,54,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,',
',93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206',
',,210,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,63,64',
'65,,51,,,56,57,58,,53,,61,54,59,60,62,254,255,66,67,,,,,253,286,290',
'89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38',
'39,37,,,,,,,,,,,,,,,,,,,,206,,,210,513,,52,,,,,,,,,40,,,,,,,,214,,,',
',79,73,75,76,77,78,,,,74,80,63,64,65,8,51,,,56,57,58,,53,,61,54,59,60',
'62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,83,50',
'85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,',
',,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,',
'56,57,58,,53,,61,54,59,60,62,254,255,66,67,,,,,253,286,290,89,88,90',
'91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,',
',,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,622,,,,40,,,,,,,,214,,,,,79,73',
'75,76,77,78,,,,74,80,63,64,65,,51,,257,56,57,58,,53,,61,54,59,60,62',
'254,255,66,67,,,,,253,286,290,89,88,90,91,,,215,,,,,,,41,,,93,92,83',
'50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,',
',52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51',
',257,56,57,58,,53,,61,54,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90',
'91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,',
',,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76',
'77,78,,,,74,80,63,64,65,8,51,,,56,57,58,,53,,61,54,59,60,62,23,24,66',
'67,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,83,50,85,84,86,87',
'94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40',
',,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,8,51,,,56,57,58,,53',
',61,54,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41',
',9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,',
',36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80',
'63,64,65,8,51,,,56,57,58,,53,,61,54,59,60,62,23,24,66,67,,,,,22,28,27',
'89,88,90,91,,,17,,,,,,7,41,,9,93,92,83,50,85,84,86,87,94,95,,81,82,',
'38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,',
'79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60',
'62,254,255,66,67,,,,,253,286,290,89,88,90,91,,,215,,,,,,,287,,,93,92',
'83,50,85,84,86,87,94,95,,81,82,,,,291,,,,,,,,,,,,,,,,,,,,674,,,210,',
',52,,,,,,,,,,,,,,,,,,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,8,51,,',
'56,57,58,,53,,61,54,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,',
'17,,,,,,7,41,,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,',
',,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77',
'78,,,,74,80,63,64,65,8,51,,,56,57,58,,53,,61,54,59,60,62,23,24,66,67',
',,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,83,50,85,84,86,87,94',
'95,,81,82,,38,39,37,223,227,232,233,234,229,231,239,240,235,236,,216',
'217,,,237,238,,36,,,30,,,52,,,,,32,220,,226,40,222,221,218,219,230,228',
'224,18,225,,,,79,73,75,76,77,78,,-371,,74,80,,241,,-371,-371,-371,,56',
'-371,-371,-371,53,-371,,54,,,,,,,-371,-371,-371,,,,,,,,-371,-371,,-371',
'-371,-371,-371,-371,,,,,,,,,,,,,,,,,,,,,,-371,-371,-371,-371,-371,-371',
'-371,-371,-371,-371,-371,-371,-371,-371,,,-371,-371,-371,,,-371,,263',
'-371,,,-371,,-371,,-371,,-371,,-371,-371,-371,-371,-371,-371,-371,,-371',
'-371,-371,,,,,,,,,,,,-268,-371,-371,-371,-371,,-371,-268,-268,-268,',
'-371,-268,-268,-268,,-268,,,,,,,,,,-268,-268,,,,,,,,-268,-268,,-268',
'-268,-268,-268,-268,,,,,,,,,,,,,,,,,,,,,,-268,-268,-268,-268,-268,-268',
'-268,-268,-268,-268,-268,-268,-268,-268,,,-268,-268,-268,,,-268,,,-268',
',,-268,,-268,,-268,,-268,,-268,-268,-268,-268,-268,-268,-268,,-268,',
'-268,,,,,,,,,,,,,-268,-268,-268,-268,-524,-268,,,-268,-268,-268,-524',
'-524,-524,,,-524,-524,-524,,-524,,,,,,,,,-524,-524,-524,,,,,,,,-524',
'-524,,-524,-524,-524,-524,-524,,,,,,,,,,,,,,,,,,,,,,-524,-524,-524,-524',
'-524,-524,-524,-524,-524,-524,-524,-524,-524,-524,,,-524,-524,-524,',
',-524,,263,-524,,,-524,,-524,,-524,,-524,,-524,-524,-524,-524,-524,-524',
'-524,,-524,-524,-524,,,,,,,,,,,,-281,-524,-524,-524,-524,,-524,-281',
'-281,-281,,-524,-281,-281,-281,,-281,,,,,,,,,,-281,-281,,,,,,,,-281',
'-281,,-281,-281,-281,-281,-281,,,,,,,,,,,,,,,,,,,,,,-281,-281,-281,-281',
'-281,-281,-281,-281,-281,-281,-281,-281,-281,-281,,,-281,-281,-281,',
',-281,,272,-281,,,-281,,-281,,-281,,-281,,-281,-281,-281,-281,-281,-281',
'-281,,-281,,-281,,,,,,,,,,,,-524,-281,-281,-281,-281,,-281,-524,-524',
'-524,,-281,-524,-524,-524,,-524,,,,,,,,,,-524,,,,,,,,,-524,-524,,-524',
'-524,-524,-524,-524,,,,,,,,,,,,-524,,,,,,,-524,-524,-524,,,-524,-524',
'-524,,-524,,,,,-524,,,,,-524,,-524,,,,,263,-524,-524,-524,,-524,-524',
'-524,-524,-524,,,,,,,,,,,,,-524,,,,,,,,,,,,,-524,,-524,,,-524,,-524',
',,,,,,-524,,,,,263,-524,,,,,,,,,,,,,,,,,,,,,-524,,,,,,,,,,,,,-524,,-524',
',,-524,154,165,155,178,151,171,161,160,186,189,176,159,158,153,179,187',
'188,163,152,166,170,172,164,157,,,173,180,175,174,167,177,162,150,169',
'168,181,182,183,184,185,149,156,147,148,145,146,110,112,,,111,,,,,,',
',138,139,,136,120,121,122,144,125,127,,,123,,,,,140,141,128,129,,,,',
',,,,,,,,133,132,,119,137,135,134,130,131,126,124,117,143,118,,,142,190',
',,,,,,,,,80,154,165,155,178,151,171,161,160,186,189,176,159,158,153',
'179,187,188,163,152,166,170,172,164,157,,,173,180,175,174,167,177,162',
'150,169,168,181,182,183,184,185,149,156,147,148,145,146,110,112,,,111',
',,,,,,,138,139,,136,120,121,122,144,125,127,,,123,,,,,140,141,128,129',
',,,,,,,,,,,,133,132,,119,137,135,134,130,131,126,124,117,143,118,,,142',
'190,,,,,,,,,,80,154,165,155,178,151,171,161,160,186,189,176,159,158',
'153,179,187,188,163,152,166,170,172,164,157,,,173,180,175,174,167,177',
'162,150,169,168,181,182,183,184,185,149,156,147,148,145,146,110,112',
'109,,111,,,,,,,,138,139,,136,120,121,122,144,125,127,,,123,,,,,140,141',
'128,129,,,,,,,,,,,,,133,132,,119,137,135,134,130,131,126,124,117,143',
'118,,,142,190,,,,,,,,,,80,154,165,155,178,151,171,161,160,186,189,176',
'159,158,153,179,187,188,163,152,166,170,172,164,157,,,173,180,175,174',
'167,177,162,150,169,168,181,182,183,184,185,149,156,147,148,145,146',
'110,112,,,111,,,,,,,,138,139,,136,120,121,122,144,125,127,,,123,,,,',
'140,141,128,129,,,,,,,,,,,,,133,132,,119,137,135,134,130,131,126,124',
'117,143,118,,,142,190,,,,,,,,,,80,154,165,155,178,151,171,161,160,186',
'189,176,159,158,153,179,187,188,163,152,166,170,172,164,157,,,173,180',
'175,174,167,177,162,150,169,168,181,182,183,184,185,149,156,147,148',
'145,146,110,112,,,111,,,,,,,,138,139,,136,120,121,122,144,125,127,,',
'123,,,,,140,141,128,129,,,,,,,,,,,,,133,132,,119,137,135,134,130,131',
'126,124,117,143,118,,,142,154,165,155,178,151,171,161,160,186,189,176',
'159,158,153,179,187,188,163,152,166,170,172,164,157,,,173,180,175,359',
'358,360,357,150,169,168,181,182,183,184,185,149,156,147,148,355,356',
'353,112,85,84,354,87,,,,,,,138,139,,136,120,121,122,144,125,127,,,123',
',,,,140,141,128,129,,,,,,365,,,,,,,133,132,,119,137,135,134,130,131',
'126,124,117,143,118,,,142,154,165,155,178,151,171,161,160,186,189,176',
'159,158,153,179,187,188,163,152,166,170,172,164,157,,,173,180,175,174',
'167,177,162,150,169,168,181,182,183,184,185,149,156,147,148,145,146',
'110,112,382,381,111,383,,,,,,,138,139,,136,120,121,122,144,125,127,',
',123,,,,,140,141,128,129,,,,,,,,,,,,,133,132,,119,137,135,134,130,131',
'126,124,117,143,118,,,142,154,165,155,178,151,171,161,160,186,189,176',
'159,158,153,179,187,188,163,152,166,170,172,164,157,,,173,180,175,174',
'167,177,162,150,169,168,181,182,183,184,185,149,156,147,148,145,146',
'110,112,382,381,111,383,,,,,,,138,139,,136,120,121,122,144,125,127,',
',123,,,,,140,141,128,129,,,,,,,,,,,,,133,132,,119,137,135,134,130,131',
'126,124,117,143,118,653,421,142,,654,,,,,,,,138,139,,136,120,121,122',
'144,125,127,,,123,,,,,140,141,128,129,,,,,,,,,,,,,133,132,,119,137,135',
'134,130,131,126,124,117,143,118,791,421,142,,789,,,,,,,,138,139,,136',
'120,121,122,144,125,127,,,123,,,,,140,141,128,129,,,,,,,,,,,,,133,132',
',119,137,135,134,130,131,126,124,117,143,118,903,421,142,,904,,,,,,',
',138,139,,136,120,121,122,144,125,127,,,123,,,,,140,141,128,129,,,,',
',,,,,,,,133,132,,119,137,135,134,130,131,126,124,117,143,118,411,415',
'142,,412,,,,,,,,138,139,,136,120,121,122,144,125,127,,,123,,,,,140,141',
'128,129,,,,,,263,,,,,,,133,132,,119,137,135,134,130,131,126,124,117',
'143,118,472,415,142,,473,,,,,,,,138,139,,136,120,121,122,144,125,127',
',,123,,,,,140,141,128,129,,,,,,,,,,,,,133,132,,119,137,135,134,130,131',
'126,124,117,143,118,901,415,142,,902,,,,,,,,138,139,,136,120,121,122',
'144,125,127,,,123,,,,,140,141,128,129,,,,,,263,,,,,,,133,132,,119,137',
'135,134,130,131,126,124,117,143,118,650,415,142,,651,,,,,,,,138,139',
',136,120,121,122,144,125,127,,,123,,,,,140,141,128,129,,,,,,263,,,,',
',,133,132,,119,137,135,134,130,131,126,124,117,143,118,472,415,142,',
'473,,,,,,,,138,139,,136,120,121,122,144,125,127,,,123,,,,,140,141,128',
'129,,,,,,,,,,,,,133,132,,119,137,135,134,130,131,126,124,117,143,118',
'791,421,142,,834,,,,,,,,138,139,,136,120,121,122,144,125,127,,,123,',
',,,140,141,128,129,,,,,,,,,,,,,133,132,,119,137,135,134,130,131,126',
'124,117,143,118,472,415,142,,473,,,,,,,,138,139,,136,120,121,122,144',
'125,127,,,123,,,,,140,141,128,129,,,,,,263,,,,,,,133,132,,119,137,135',
'134,130,131,126,124,117,143,118,609,421,142,,610,,,,,,,,138,139,,136',
'120,121,122,144,125,127,,,123,,,,,140,141,128,129,,,,,,,,,,,,,133,132',
',119,137,135,134,130,131,126,124,117,143,118,607,415,142,,608,,,,,,',
',138,139,,136,120,121,122,144,125,127,,,123,,,,,140,141,128,129,,,,',
',263,,,,,,,133,132,,119,137,135,134,130,131,126,124,117,143,118,609',
'421,142,,610,,,,,,,,138,139,,136,120,121,122,144,125,127,,,123,,,,,140',
'141,128,129,,,,,,,,,,,,,133,132,,119,137,135,134,130,131,126,124,117',
'143,118,472,415,142,,473,,,,,,,,138,139,,136,120,121,122,144,125,127',
',,123,,,,,140,141,128,129,,,,,,,,,,,,,133,132,,119,137,135,134,130,131',
'126,124,117,143,118,,,142,223,227,232,233,234,229,231,239,240,235,236',
',216,217,,,237,238,,,,,,,,,,,,,,220,,226,,222,221,218,219,230,228,224',
',225,,,,,,,472,415,,,473,,,,,241,,-226,138,139,,136,120,121,122,144',
'125,127,,,123,,,,,140,141,128,129,,,,,,,,,,,,,133,132,,119,137,135,134',
'130,131,126,124,117,143,118,607,415,142,,608,,,,,,,,138,139,,136,120',
'121,122,144,125,127,,,123,,,,,140,141,128,129,,,,,,263,,,,,,,133,132',
',119,137,135,134,130,131,126,124,117,143,118,417,421,142,,419,,,,,,',
',138,139,,136,120,121,122,144,125,127,,,123,,,,,140,141,128,129,,,,',
',,,,,,,,133,132,,119,137,135,134,130,131,126,124,117,143,118,,,142,223',
'227,232,233,234,229,231,239,240,235,236,,216,217,,,237,238,,,,,,,,,',
',,,,220,,226,,222,221,218,219,230,228,224,,225,223,227,232,233,234,229',
'231,239,240,235,236,,216,217,,241,237,238,,,,,,,,,,,,,,220,,226,,222',
'221,218,219,230,228,224,,225,223,227,232,233,234,229,231,239,240,235',
'236,,216,217,,241,237,238,,,,,,,,,,,,,,220,,226,,222,221,218,219,230',
'228,224,,225,223,227,232,233,234,229,231,239,240,235,236,,216,217,,241',
'237,238,,,,,,,,,,,,,,220,,226,,222,221,218,219,230,228,224,,225,223',
'227,232,233,234,229,231,239,240,235,236,,216,217,,241,237,238,,,,,,',
',,,,,,,220,,226,,222,221,218,219,230,228,224,,225,223,227,232,233,234',
'229,231,239,240,235,236,,216,217,,241,237,238,,,,,,,,,,,,,,220,,226',
',222,221,218,219,230,228,224,,225,223,227,232,233,234,229,231,239,240',
'235,236,,216,217,,241,237,238,,,,,,,,,,,,,,220,,226,,222,221,218,219',
'230,228,224,,225,223,227,232,233,234,229,231,239,240,235,236,,216,217',
',241,237,238,,,,,,,,,,,,,,220,,226,,222,221,218,219,230,228,224,,225',
'223,227,232,233,234,229,231,239,240,235,236,,216,217,,241,237,238,,',
',,,,,,,,,,,220,,226,,222,221,218,219,230,228,224,,225,223,227,232,233',
'234,229,231,239,240,235,236,,216,217,,241,237,238,,,,,,,,,,,,,,220,',
'226,,222,221,218,219,230,228,224,,225,223,227,232,233,234,229,231,239',
'240,235,236,,216,217,,241,237,238,,,,,,,,,,,,,,220,,226,,222,221,218',
'219,230,228,224,,225,223,227,232,233,234,229,231,239,240,235,236,,216',
'217,,241,237,238,,,,,,,,,,,,,,220,,226,,222,221,218,219,230,228,224',
',225,,,,,,,,,,,,,,,,241' ]
        racc_action_table = arr = ::Array.new(22380, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'0,0,0,0,0,650,651,788,0,0,704,704,288,0,376,0,0,0,0,0,0,0,653,207,660',
'660,0,0,0,0,0,0,0,371,55,0,371,665,305,305,665,0,0,0,0,0,0,0,0,0,0,0',
'0,0,0,834,0,0,554,0,0,0,565,645,25,312,572,572,312,650,651,25,872,207',
'288,71,376,660,647,343,901,0,649,71,0,653,653,0,831,434,434,599,0,371',
'371,288,0,704,902,342,645,553,704,788,0,788,650,651,788,0,0,0,0,0,0',
'650,651,55,0,0,403,403,403,653,403,305,262,0,403,403,486,0,653,403,0',
'403,403,403,403,403,403,403,434,26,652,903,403,403,403,403,403,403,403',
'572,554,403,554,308,583,554,308,787,403,486,565,403,403,403,403,403',
'403,403,403,403,403,296,403,403,357,403,403,403,872,565,872,357,563',
'872,565,343,901,343,901,563,343,901,608,553,831,553,831,403,553,831',
'403,26,607,403,902,342,902,342,430,902,342,13,403,367,583,583,903,369',
'13,297,403,378,26,583,417,403,403,403,403,403,403,417,417,417,403,403',
'205,417,417,563,417,353,608,403,347,655,347,403,353,417,403,903,607',
'903,485,876,903,876,430,417,417,594,417,417,417,417,417,787,13,787,787',
'794,787,367,367,367,794,369,369,369,738,378,378,378,462,587,205,485',
'417,417,417,417,417,417,417,417,417,417,417,417,417,417,419,475,417',
'417,417,35,417,419,419,419,417,412,658,419,419,462,419,417,659,417,300',
'417,417,417,417,417,417,417,738,417,417,417,373,661,475,419,419,295',
'419,419,419,419,419,356,417,417,35,417,251,417,356,866,412,867,417,35',
'417,275,866,666,867,412,560,667,419,419,419,419,419,419,419,419,419',
'419,419,419,419,419,295,411,419,419,419,204,419,537,537,295,419,695',
'204,359,373,373,373,419,695,419,359,419,419,419,419,419,419,419,354',
'419,866,419,867,673,560,354,298,316,316,670,673,560,411,298,419,419',
'560,419,750,419,309,411,672,309,419,750,419,891,891,891,891,891,204',
'307,757,891,891,560,695,674,891,757,891,891,891,891,891,891,891,596',
'341,341,675,891,891,891,891,891,891,891,673,560,891,298,676,750,14,679',
'891,891,439,891,891,891,891,891,891,891,891,891,891,891,479,891,891',
'654,891,891,891,479,596,757,654,869,277,501,282,654,640,596,869,439',
'501,282,708,439,439,14,891,708,358,891,684,890,891,283,14,358,362,891',
'890,690,283,891,692,362,42,909,285,479,248,891,247,42,909,285,891,891',
'891,891,891,891,654,806,806,891,891,421,421,421,869,421,501,282,891',
'421,421,637,891,561,421,891,421,421,421,421,421,421,421,310,890,311',
'283,421,421,421,421,421,421,421,438,355,421,42,909,285,346,215,355,421',
'881,346,421,421,421,421,421,421,421,421,421,421,773,421,421,789,421',
'421,421,682,682,438,789,904,360,438,438,789,109,3,904,360,109,109,3',
'904,37,37,421,15,15,421,421,556,421,881,881,881,881,421,273,421,209',
'421,803,273,208,773,773,773,773,421,905,905,291,291,421,421,421,421',
'421,421,789,555,604,421,421,422,422,422,904,422,703,421,421,422,422',
'703,421,313,422,421,422,422,422,422,422,422,422,803,803,803,803,422',
'422,422,422,422,422,422,709,680,422,680,680,680,680,710,711,422,531',
'713,422,422,422,422,422,422,422,422,422,422,206,422,422,716,422,422',
'422,333,278,333,333,333,333,549,717,717,680,717,717,717,544,723,540',
'290,680,321,422,529,322,422,422,324,422,531,531,531,531,422,325,422',
'191,422,516,778,333,778,778,778,778,422,515,514,333,741,422,422,422',
'422,422,422,742,745,748,422,422,887,887,887,749,887,337,422,422,887',
'887,751,422,96,887,422,887,887,887,887,887,887,887,754,755,756,340,887',
'887,887,887,887,887,887,760,542,887,542,542,542,542,78,763,887,764,287',
'887,887,887,887,887,887,887,887,887,887,505,887,887,502,887,887,887',
'458,545,779,545,545,545,545,782,457,542,644,644,644,644,644,77,632,542',
'63,887,497,348,887,791,792,887,495,492,797,798,887,458,799,491,887,458',
'458,458,458,457,349,631,887,457,457,457,457,887,887,887,887,887,887',
'41,815,816,887,887,885,885,885,885,885,487,887,887,885,885,279,887,823',
'885,887,885,885,885,885,885,885,885,824,36,481,34,885,885,885,885,885',
'885,885,284,835,885,274,274,274,274,274,885,885,480,885,885,885,885',
'885,885,885,885,885,885,885,840,885,885,841,885,885,885,449,5,5,5,5',
'5,20,478,846,286,851,852,853,855,856,477,449,449,443,885,442,441,885',
'440,868,885,372,12,621,11,885,449,879,449,885,449,449,449,449,418,10',
'449,885,449,886,9,375,885,885,885,885,885,885,410,406,6,885,885,877',
'877,877,877,877,895,897,885,877,877,898,885,900,877,885,877,877,877',
'877,877,877,877,619,404,1,398,877,877,877,877,877,877,877,611,392,877',
',,,,,877,877,,877,877,877,877,877,877,877,877,877,877,877,,877,877,',
'877,877,877,453,453,453,453,453,453,453,,,453,453,,,,,,453,453,,877',
',,877,,,877,,,,,877,453,,453,877,453,453,453,453,453,453,453,877,453',
',,,877,877,877,877,877,877,,,,877,877,429,429,429,,429,,,877,429,429',
',877,,429,877,429,429,429,429,429,429,429,,,,,429,429,429,429,429,429',
'429,,,429,,,,,,,429,,,429,429,429,429,429,429,429,429,429,429,,429,429',
',429,429,429,452,452,452,452,452,452,452,,,452,452,,,,,,452,452,,429',
',,429,,,429,,,,,429,452,,452,429,452,452,452,452,452,452,452,429,452',
',,,429,429,429,429,429,429,,,,429,429,865,865,865,865,865,,429,429,865',
'865,,429,,865,429,865,865,865,865,865,865,865,,,,,865,865,865,865,865',
'865,865,,,865,,,,,,865,865,,865,865,865,865,865,865,865,865,865,865',
'865,,865,865,,865,865,865,451,,,,,,,,,,,,,,,,451,451,,865,,,865,,,865',
',,,,865,451,,451,865,451,451,451,451,,,451,865,451,,,,865,865,865,865',
'865,865,,,,865,865,863,863,863,,863,,,865,863,863,,865,,863,865,863',
'863,863,863,863,863,863,,,,,863,863,863,863,863,863,863,,,863,,,,,,',
'863,,,863,863,863,863,863,863,863,863,863,863,,863,863,,863,863,863',
'450,,,,,,,,,,,,,,,,450,450,,863,,,863,,,863,,,,,863,450,863,450,863',
'450,450,450,450,,,450,863,450,,,,863,863,863,863,863,863,,,,863,863',
'848,848,848,848,848,,,863,848,848,,863,,848,863,848,848,848,848,848',
'848,848,,,,,848,848,848,848,848,848,848,,,848,,,,,,848,848,,848,848',
'848,848,848,848,848,848,848,848,848,,848,848,,848,848,848,460,460,460',
'460,460,460,460,460,,460,460,,,,,,460,460,,848,,,848,,,848,,,,,848,460',
',460,848,460,460,460,460,460,460,460,848,460,,,,848,848,848,848,848',
'848,,,,848,848,17,17,17,,17,,,848,17,17,,848,,17,848,17,17,17,17,17',
'17,17,,,,,17,17,17,17,17,17,17,,,17,,,,,,,17,,,17,17,17,17,17,17,17',
'17,17,17,,17,17,,17,17,17,456,456,456,456,456,456,456,,,456,456,,,,',
',456,456,,17,,,17,17,,17,,,,,,456,,456,17,456,456,456,456,456,456,456',
'17,456,,,,17,17,17,17,17,17,,,,17,17,18,18,18,,18,,,17,18,18,,17,,18',
'17,18,18,18,18,18,18,18,,,,,18,18,18,18,18,18,18,,,18,,,,,,,18,,,18',
'18,18,18,18,18,18,18,18,18,,18,18,,18,18,18,455,455,455,455,455,455',
'455,,,455,455,,,,,,455,455,,18,,,18,,,18,,,,,,455,,455,18,455,455,455',
'455,455,455,455,18,455,,,,18,18,18,18,18,18,,,,18,18,843,843,843,843',
'843,,,18,843,843,,18,,843,18,843,843,843,843,843,843,843,,,,,843,843',
'843,843,843,843,843,,,843,,,,,,843,843,,843,843,843,843,843,843,843',
'843,843,843,843,,843,843,,843,843,843,448,,,,,,,,,,,,,,,,448,448,,843',
',,843,,,843,,,,,843,448,,448,843,448,448,448,448,,,448,843,448,,,,843',
'843,843,843,843,843,,,,843,843,842,842,842,,842,,,843,842,842,,843,',
'842,843,842,842,842,842,842,842,842,,,,,842,842,842,842,842,842,842',
',,842,,,,,,,842,,,842,842,842,842,842,842,842,842,842,842,,842,842,',
'842,842,842,459,459,459,459,459,459,459,,,459,459,,,,,,459,459,,842',
',,842,,,842,,,,,842,459,,459,842,459,459,459,459,459,459,459,842,459',
',,,842,842,842,842,842,842,,,,842,842,22,22,22,,22,,,842,22,22,,842',
',22,842,22,22,22,22,22,22,22,,,,,22,22,22,22,22,22,22,,,22,,,,,,,22',
',,22,22,22,22,22,22,22,22,22,22,,22,22,,22,22,22,454,454,454,454,454',
'454,454,,,454,454,,,,,,454,454,,22,,,22,,,22,,,,,22,454,22,454,22,454',
'454,454,454,454,454,454,22,454,,,,22,22,22,22,22,22,,,,22,22,23,23,23',
',23,,22,22,23,23,,22,,23,22,23,23,23,23,23,23,23,,,,,23,23,23,23,23',
'23,23,,,23,,,,,,,23,,,23,23,23,23,23,23,23,23,23,23,,23,23,,23,23,23',
'437,437,437,437,437,437,437,437,437,437,437,,437,437,,,437,437,,23,',
',23,,,23,,,,,23,437,23,437,23,437,437,437,437,437,437,437,23,437,,,',
'23,23,23,23,23,23,,,,23,23,24,24,24,,24,,23,23,24,24,,23,,24,23,24,24',
'24,24,24,24,24,,,,,24,24,24,24,24,24,24,,,24,,,,,,,24,,,24,24,24,24',
'24,24,24,24,24,24,,24,24,,24,24,24,436,436,436,436,436,436,436,436,436',
'436,436,,436,436,,,436,436,,24,,,24,,,24,,,,,24,436,24,436,24,436,436',
'436,436,436,436,436,24,436,,,,24,24,24,24,24,24,,,,24,24,838,838,838',
',838,,24,24,838,838,,24,,838,24,838,838,838,838,838,838,838,,,,,838',
'838,838,838,838,838,838,,,838,,,,,,,838,,,838,838,838,838,838,838,838',
'838,838,838,,838,838,,838,838,838,447,447,447,447,447,447,447,,,447',
'447,,,,,,447,447,,838,,,838,,,838,,,,,,447,,447,838,447,447,447,447',
'447,447,447,838,447,,,,838,838,838,838,838,838,,,,838,838,365,365,365',
',365,,,838,365,365,,838,,365,838,365,365,365,365,365,365,365,,,,,365',
'365,365,365,365,365,365,,,365,,,,,,,365,,,365,365,365,365,365,365,365',
'365,365,365,446,365,365,,365,365,365,,,,,,,,,,446,446,,,,,,,,,365,,',
'365,,446,365,,,446,446,446,446,,,365,,,,,,,,365,,,,,365,365,365,365',
'365,365,,,,365,365,431,431,431,,431,,,365,431,431,,365,,431,365,431',
'431,431,431,431,431,431,,,,,431,431,431,431,431,431,431,,,431,,,,,,',
'431,,,431,431,431,431,431,431,431,431,431,431,444,431,431,,431,431,431',
',,,,,,,,,444,444,,,,,,,,,431,,,431,,444,431,444,,444,444,444,444,,,431',
',,,,,,,431,,,,,431,431,431,431,431,431,,,,431,431,432,432,432,,432,',
',431,432,432,,431,,432,431,432,432,432,432,432,432,432,,,,,432,432,432',
'432,432,432,432,,,432,,,,,,,432,,,432,432,432,432,432,432,432,432,432',
'432,445,432,432,,432,432,432,,,,,,,,,,445,445,,,,,,,,,432,,,432,,445',
'432,445,,445,445,445,445,,,432,,,,,,,,432,,,,,432,432,432,432,432,432',
',,,432,432,30,30,30,30,30,,,432,30,30,,432,,30,432,30,30,30,30,30,30',
'30,,,,,30,30,30,30,30,30,30,,,30,,,,,,30,30,,30,30,30,30,30,30,30,30',
'30,30,30,,30,30,,30,30,30,,,,,,,,,,,,,,,,,,,,30,,,30,,,30,,,,,30,,,',
'30,,,,,,,,30,,,,,30,30,30,30,30,30,,,,30,30,31,31,31,,31,,,30,31,31',
',30,,31,30,31,31,31,31,31,31,31,,,,,31,31,31,31,31,31,31,,,31,,,,,,',
'31,,,31,31,31,31,31,31,31,31,31,31,,31,31,,,616,31,616,616,616,616,',
',,,,,,,,,,,,,,31,,,31,,,31,,,,,31,,,,,616,,,,,,,,616,616,616,616,31',
'31,31,31,31,31,,616,,31,31,32,32,32,,32,,,31,32,32,,31,,32,31,32,32',
'32,32,32,32,32,,,,,32,32,32,32,32,32,32,,,32,,,,,,,32,,,32,32,32,32',
'32,32,32,32,32,32,,32,32,,,859,32,859,859,859,859,,,,,,,,,,,,,,,,32',
',,32,,,32,,,,,,,,,,859,859,,,,,,,859,859,859,859,32,32,32,32,32,32,',
',,32,32,832,832,832,32,832,,,32,832,832,,32,,832,32,832,832,832,832',
'832,832,832,,,,,832,832,832,832,832,832,832,,,832,,,,,,,832,,,832,832',
'832,832,832,832,832,832,832,832,,832,832,,,56,832,56,56,56,56,,,,,,',
',,,,,,,,,832,,,832,,,832,,,,,,,,,,56,56,,,,,,,56,56,56,56,832,832,832',
'832,832,832,,,,832,832,433,433,433,,433,,,832,433,433,,832,,433,832',
'433,433,433,433,433,433,433,,,,,433,433,433,433,433,433,433,,,433,,',
',,,,433,,,433,433,433,433,433,433,433,433,433,433,,433,433,,433,433',
'433,,,,,,,,,,,,,,,,,,,,433,,,433,,,433,,,,,,,,,433,,,,,,,,433,,,,,433',
'433,433,433,433,433,,,,433,433,828,828,828,828,828,,,433,828,828,,433',
',828,433,828,828,828,828,828,828,828,,,,,828,828,828,828,828,828,828',
',,828,,,,,,828,828,,828,828,828,828,828,828,828,828,828,828,828,,828',
'828,,828,828,828,,,,,,,,,,,,,,,,,,,,828,,,828,,,828,,,,,828,,,,828,',
',,,,,,828,,,,,828,828,828,828,828,828,,,,828,828,819,819,819,,819,,',
'828,819,819,,828,,819,828,819,819,819,819,819,819,819,,,,,819,819,819',
'819,819,819,819,,,819,,,,,,,819,,,819,819,819,819,819,819,819,819,819',
'819,,819,819,,819,819,819,,,,,,,,,,,,,,,,,,,,819,,,819,,,819,,,,,,,',
',819,,,,,,,,819,,,,,819,819,819,819,819,819,,,,819,819,38,38,38,,38',
',,819,38,38,,819,,38,819,38,38,38,38,38,38,38,,,,,38,38,38,38,38,38',
'38,,,38,,,,,,,38,,,38,38,38,38,38,38,38,38,38,38,,38,38,,38,38,38,,',
',,,,,,,,,,,,,,,,,38,,,38,,,38,,,,,,,,,38,,,,,,,,38,,,,,38,38,38,38,38',
'38,,,,38,38,39,39,39,,39,,,38,39,39,,38,,39,38,39,39,39,39,39,39,39',
',,,,39,39,39,39,39,39,39,,,39,,,,,,,39,,,39,39,39,39,39,39,39,39,39',
'39,,39,39,,39,39,39,,,,,,,,,,,,,,,,,,,,39,,,39,,,39,,,,,,,,,39,,,,,',
',,39,,,,,39,39,39,39,39,39,,,,39,39,40,40,40,,40,,,39,40,40,,39,,40',
'39,40,40,40,40,40,40,40,,,,,40,40,40,40,40,40,40,,,40,,,,,,,40,,,40',
'40,40,40,40,40,40,40,40,40,,40,40,,40,40,40,,,,,,,,,,,,,,,,,,,,40,,',
'40,,,40,,,,,,,,,40,,,,,,,,40,,,,,40,40,40,40,40,40,,,,40,40,807,807',
'807,,807,,,40,807,807,,40,,807,40,807,807,807,807,807,807,807,,,,,807',
'807,807,807,807,807,807,,,807,,,,,,,807,,,807,807,807,807,807,807,807',
'807,807,807,,807,807,,807,807,807,,,,,,,,,,,,,,,,,,,,807,,,807,,,807',
',,,,,,,,807,,,,,,,,807,,,,,807,807,807,807,807,807,,,,807,807,793,793',
'793,793,793,,,807,793,793,,807,,793,807,793,793,793,793,793,793,793',
',,,,793,793,793,793,793,793,793,,,793,,,,,,793,793,,793,793,793,793',
'793,793,793,793,793,793,793,,793,793,,793,793,793,,,,,,,,,,,,,,,,,,',
',793,,,793,,,793,,,,,793,,,,793,,,,,,,,793,,,,,793,793,793,793,793,793',
',,,793,793,464,464,464,,464,,,793,464,464,,793,,464,793,464,464,464',
'464,464,464,464,,,,,464,464,464,464,464,464,464,,,464,,,,,,,464,,,464',
'464,464,464,464,464,464,464,464,464,,464,464,,464,464,464,,,,,,,,,,',
',,,,,,,,,464,,,464,,,464,,,,,464,,464,,464,,,,,,,,464,,,,,464,464,464',
'464,464,464,,,,464,464,52,52,52,,52,,464,464,52,52,,464,,52,464,52,52',
'52,52,52,52,52,,,,,52,52,52,52,52,52,52,,,52,,,,,,,52,,,52,52,52,52',
'52,52,52,52,52,52,,52,52,,52,52,52,,,,,,,,,,,,,,,,,,,,52,,,52,,,52,',
',,,,,,,52,,,,,,,,52,,,,,52,52,52,52,52,52,,,,52,52,53,53,53,,53,,,52',
'53,53,,52,,53,52,53,53,53,53,53,53,53,,,,,53,53,53,53,53,53,53,,,53',
',,,,,,53,,,53,53,53,53,53,53,53,53,53,53,,53,53,,53,53,53,,,,,,,,,,',
',,,,,,,,,53,,,53,,,53,,,,,53,,,,53,,,,,,,,53,,,,,53,53,53,53,53,53,',
',,53,53,54,54,54,,54,,53,53,54,54,,53,,54,53,54,54,54,54,54,54,54,,',
',,54,54,54,54,54,54,54,,,54,,,,,,,54,,,54,54,54,54,54,54,54,54,54,54',
',54,54,,54,54,54,,,,,,,,,,,,,,,,,,,,54,,,54,,,54,,,,,,,,,54,,,,,,,,54',
',,,,54,54,54,54,54,54,,,,54,54,466,466,466,,466,,54,54,466,466,,54,',
'466,54,466,466,466,466,466,466,466,,,,,466,466,466,466,466,466,466,',
',466,,,,,,,466,,,466,466,466,466,466,466,466,466,466,466,,466,466,,466',
'466,466,,,,,,,,,,,,,,,,,,,,466,,,466,,,466,,,,,,,466,,466,,,,,,,,466',
',,,,466,466,466,466,466,466,,,,466,466,468,468,468,,468,,466,466,468',
'468,,466,,468,466,468,468,468,468,468,468,468,,,,,468,468,468,468,468',
'468,468,,,468,,,,,,,468,,,468,468,468,468,468,468,468,468,468,468,,468',
'468,,468,468,468,,,,,,,,,,,,,,,,,,,,468,,,468,,,468,,,,,,,,,468,,,,',
',,,468,,,,,468,468,468,468,468,468,,,,468,468,57,57,57,,57,,,468,57',
'57,,468,,57,468,57,57,57,57,57,57,57,,,,,57,57,57,57,57,57,57,,,57,',
',,,,,57,,,57,57,57,57,57,57,57,57,57,57,,57,57,,57,57,57,,,,,,,,,,,',
',,,,,,,,57,,,57,,,57,,,,,,,,,57,,,,,,,,57,,,,,57,57,57,57,57,57,,,,57',
'57,58,58,58,,58,,,57,58,58,,57,,58,57,58,58,58,58,58,58,58,,,,,58,58',
'58,58,58,58,58,,,58,,,,,,,58,,,58,58,58,58,58,58,58,58,58,58,,58,58',
',58,58,58,,,,,,,,,,,,,,,,,,,,58,,,58,,,58,,,,,,,,,58,,,,,,,,58,,,,,58',
'58,58,58,58,58,,,,58,58,61,61,61,,61,,,58,61,61,,58,,61,58,61,61,61',
'61,61,61,61,,,,,61,61,61,61,61,61,61,,,61,,,,,401,,61,,,61,61,61,61',
'61,61,61,61,61,61,,61,61,,61,61,61,401,401,401,401,401,401,401,401,401',
'401,401,,401,401,,,401,401,,61,,,61,,,61,,,,,,401,,401,61,401,401,401',
'401,401,401,401,61,401,,,,61,61,61,61,61,61,,,,61,61,61,401,,401,,61',
',61,62,62,62,61,62,,61,,62,62,,,,62,,62,62,62,62,62,62,62,,,,,62,62',
'62,62,62,62,62,,,62,,,,,,,62,,,62,62,62,62,62,62,62,62,62,62,,62,62',
',,801,62,801,801,801,801,,,,,,,,,,,,,,,,62,,,62,,,62,,,,,62,,,,,801',
',,,,,,,801,801,801,801,62,62,62,62,62,62,,,,62,62,484,484,484,,484,',
',62,484,484,,62,,484,62,484,484,484,484,484,484,484,,,,,484,484,484',
'484,484,484,484,,,484,,,,,,,484,,,484,484,484,484,484,484,484,484,484',
'484,,484,484,,484,484,484,,,,,,,,,,,,,,,,,,,,484,,,484,,484,484,,,,',
',,484,,484,,,,,,,,484,,,,,484,484,484,484,484,484,,,,484,484,352,352',
'352,,352,,,484,352,352,,484,,352,484,352,352,352,352,352,352,352,,,',
',352,352,352,352,352,352,352,,,352,,,,,,,352,,,352,352,352,352,352,352',
'352,352,352,352,,352,352,,,707,352,707,707,707,707,,,,,,,,,,,,,,,,352',
',,352,,,352,,,,,,,,,,707,,,,,,,,707,707,707,707,352,352,352,352,352',
'352,,,,352,352,552,552,552,552,552,,,352,552,552,,352,,552,352,552,552',
'552,552,552,552,552,,,,,552,552,552,552,552,552,552,,,552,,,,,,552,552',
',552,552,552,552,552,552,552,552,552,552,552,,552,552,,552,552,552,',
',,,,,,,,,,,,,,,,,,552,,,552,,,552,,,,,552,,,,552,,,,,,,,552,,,,,552',
'552,552,552,552,552,,,,552,552,783,783,783,783,783,,,552,783,783,,552',
',783,552,783,783,783,783,783,783,783,,,,,783,783,783,783,783,783,783',
',,783,,,,,,783,783,,783,783,783,783,783,783,783,783,783,783,783,,783',
'783,,783,783,783,,,,,,,,,,,,,,,,,,,,783,,,783,,,783,,,,,783,,,,783,',
',,,,,,783,,,,,783,783,783,783,783,783,,,,783,783,762,762,762,762,762',
',,783,762,762,,783,,762,783,762,762,762,762,762,762,762,,,,,762,762',
'762,762,762,762,762,,,762,,,,,,762,762,,762,762,762,762,762,762,762',
'762,762,762,762,,762,762,,762,762,762,,,,,,,,,,,,,,,,,,,,762,,,762,',
',762,,,,,762,,,,762,,,,,,,,762,,,,,762,762,762,762,762,762,,,,762,762',
'350,350,350,,350,,,762,350,350,,762,,350,762,350,350,350,350,350,350',
'350,,,,,350,350,350,350,350,350,350,,,350,,,,,,,350,,,350,350,350,350',
'350,350,350,350,350,350,,350,350,,,317,350,317,317,317,317,,,,,,,,,',
',,,,,,350,,,350,,,350,,,,,,,,,,317,,317,,,,,,317,317,317,317,350,350',
'350,350,350,350,,,,350,350,83,83,83,,83,,,350,83,83,,350,,83,350,83',
'83,83,83,83,83,83,,83,,,83,83,83,83,83,83,83,,,83,,,,,,,83,,,83,83,83',
'83,83,83,83,83,83,83,,83,83,,83,83,83,,,,,,,,,,,,,,,,,,,,83,,,83,83',
',83,,,,,83,,83,,83,,,,,,,,83,,83,,,83,83,83,83,83,83,,,,83,83,86,86',
'86,,86,,83,83,86,86,,83,,86,83,86,86,86,86,86,86,86,,86,,,86,86,86,86',
'86,86,86,,,86,,,,,,,86,,,86,86,86,86,86,86,86,86,86,86,,86,86,,86,86',
'86,,,,,,,,,,,,,,,,,,,,86,,,86,86,,86,,,,,86,,86,,86,,,,,,,,86,,86,,',
'86,86,86,86,86,86,,,,86,86,752,752,752,,752,,86,86,752,752,,86,,752',
'86,752,752,752,752,752,752,752,,,,,752,752,752,752,752,752,752,,,752',
',,,,,,752,,,752,752,752,752,752,752,752,752,752,752,,752,752,,752,752',
'752,,,,,,,,,,,,,,,,,,,,752,,,752,,,752,,,,,752,,,,752,,,,,,,,752,,,',
',752,752,752,752,752,752,,,,752,752,98,98,98,98,98,,,752,98,98,,752',
',98,752,98,98,98,98,98,98,98,,,,,98,98,98,98,98,98,98,,,98,,,,,,98,98',
'98,98,98,98,98,98,98,98,98,98,98,98,,98,98,,98,98,98,,,,,,,,,,,,,,,',
',,,,98,,,98,,,98,,,,,98,,,,98,,,,,,,,98,,,,,98,98,98,98,98,98,,,,98',
'98,102,102,102,,102,98,,98,102,102,,98,,102,98,102,102,102,102,102,102',
'102,,,,,102,102,102,102,102,102,102,,,102,,,,,,,102,,,102,102,102,102',
'102,102,102,102,102,102,,102,102,,102,102,102,,,,,,,,,,,,,,,,,,,,102',
',,102,,,102,,,,,,,,,102,,,,,,,,102,,,,,102,102,102,102,102,102,,,,102',
'102,103,103,103,,103,,,102,103,103,,102,,103,102,103,103,103,103,103',
'103,103,,,,,103,103,103,103,103,103,103,,,103,,,,,,,103,,,103,103,103',
'103,103,103,103,103,103,103,,103,103,,103,103,103,,,,,,,,,,,,,,,,,,',
',103,,,103,,,103,,,,,,,,,103,,,,,,,,103,,,,,103,103,103,103,103,103',
',,,103,103,104,104,104,,104,,,103,104,104,,103,,104,103,104,104,104',
'104,104,104,104,,,,,104,104,104,104,104,104,104,,,104,,,,,,,104,,,104',
'104,104,104,104,104,104,104,104,104,,104,104,,104,104,104,,,,,,,,,,',
',,,,,,,,,104,,,104,,,104,,,,,,,,,104,,,,,,,,104,,,,,104,104,104,104',
'104,104,,,,104,104,105,105,105,,105,,,104,105,105,,104,,105,104,105',
'105,105,105,105,105,105,,,,,105,105,105,105,105,105,105,,,105,,,,,,',
'105,,,105,105,105,105,105,105,105,105,105,105,,105,105,,105,105,105',
',,,,,,,,,,,,,,,,,,,105,,,105,,,105,,,,,,,,,105,,,,,,,,105,,,,,105,105',
'105,105,105,105,,,,105,105,106,106,106,106,106,,,105,106,106,,105,,106',
'105,106,106,106,106,106,106,106,,,,,106,106,106,106,106,106,106,,,106',
',,,,,106,106,,106,106,106,106,106,106,106,106,106,106,106,,106,106,',
'106,106,106,,,,,,,,,,,,,,,,,,,,106,,,106,,,106,,,,,106,,,,106,,,,,,',
',106,,,,,106,106,106,106,106,106,,,,106,106,107,107,107,107,107,,,106',
'107,107,,106,,107,106,107,107,107,107,107,107,107,,,,,107,107,107,107',
'107,107,107,,,107,,,,,,107,107,107,107,107,107,107,107,107,107,107,107',
'107,107,,107,107,,107,107,107,,,,,,,,,,,,,,,,,,,,107,,,107,,,107,,,',
',107,,,,107,,,,,,,,107,,,,,107,107,107,107,107,107,,,,107,107,737,737',
'737,,737,,,107,737,737,,107,,737,107,737,737,737,737,737,737,737,,,',
',737,737,737,737,737,737,737,,,737,,,,,,,737,,,737,737,737,737,737,737',
'737,737,737,737,,737,737,,737,737,737,,,,,,,,,,,,,,,,,,,,737,,,737,',
',737,,,,,,,,,737,,,,,,,,737,,,,,737,737,737,737,737,737,,,,737,737,490',
'490,490,490,490,,,737,490,490,,737,,490,737,490,490,490,490,490,490',
'490,,,,,490,490,490,490,490,490,490,,,490,,,,,,490,490,,490,490,490',
'490,490,490,490,490,490,490,490,,490,490,,490,490,490,,,,,,,,,,,,,,',
',,,,,490,,,490,,,490,,,,,490,,,,490,,,,,,,,490,,,,,490,490,490,490,490',
'490,,,,490,490,736,736,736,,736,490,,490,736,736,,490,,736,490,736,736',
'736,736,736,736,736,,,,,736,736,736,736,736,736,736,,,736,,,,,,,736',
',,736,736,736,736,736,736,736,736,736,736,,736,736,,736,736,736,,,,',
',,,,,,,,,,,,,,,736,,,736,,,736,,,,,,,,,736,,,,,,,,736,,,,,736,736,736',
'736,736,736,,,,736,736,193,193,193,193,193,,,736,193,193,,736,,193,736',
'193,193,193,193,193,193,193,,,,,193,193,193,193,193,193,193,,,193,,',
',,,193,193,,193,193,193,193,193,193,193,193,193,193,193,,193,193,,193',
'193,193,,,,,,,,,,,,,,,,,,,,193,,,193,,,193,,,,,193,,,,193,,,,,,,,193',
',,,,193,193,193,193,193,193,,,,193,193,194,194,194,,194,,,193,194,194',
',193,,194,193,194,194,194,194,194,194,194,,,,,194,194,194,194,194,194',
'194,,,194,,,,,,,194,,,194,194,194,194,194,194,194,194,194,194,,194,194',
',194,194,194,,,,,,,,,,,,,,,,,,,,194,,,194,,,194,,,,,194,,,,194,,,,,',
',,194,,,,,194,194,194,194,194,194,,,,194,194,195,195,195,,195,,,194',
'195,195,,194,,195,194,195,195,195,195,195,195,195,,,,,195,195,195,195',
'195,195,195,,,195,,,,,,,195,,,195,195,195,195,195,195,195,195,195,195',
',195,195,,195,195,195,,,,,,,,,,,,,,,,,,,,195,,,195,,,195,,,,,195,,,',
'195,,,,,,,,195,,,,,195,195,195,195,195,195,,,,195,195,196,196,196,,196',
',,195,196,196,,195,,196,195,196,196,196,196,196,196,196,,,,,196,196',
'196,196,196,196,196,,,196,,,,,,,196,,,196,196,196,196,196,196,196,196',
'196,196,,196,196,,196,196,196,,,,,,,,,,,,,,,,,,,,196,,,196,,,196,,,',
',,,,,196,,,,,,,,196,,,,,196,196,196,196,196,196,,,,196,196,197,197,197',
',197,,,196,197,197,,196,,197,196,197,197,197,197,197,197,197,,,,,197',
'197,197,197,197,197,197,,,197,,,,,,,197,,,197,197,197,197,197,197,197',
'197,197,197,,197,197,,197,197,197,,,,,,,,,,,,,,,,,,,,197,,,197,,,197',
',,,,197,,,,197,,,,,,,,197,,,,,197,197,197,197,197,197,,,,197,197,735',
'735,735,,735,,197,197,735,735,,197,,735,197,735,735,735,735,735,735',
'735,,,,,735,735,735,735,735,735,735,,,735,,,,,,,735,,,735,735,735,735',
'735,735,735,735,735,735,,735,735,,735,735,735,,,,,,,,,,,,,,,,,,,,735',
',,735,,,735,,,,,,,,,735,,,,,,,,735,,,,,735,735,735,735,735,735,,,,735',
'735,725,725,725,,725,,,735,725,725,,735,,725,735,725,725,725,725,725',
'725,725,,,,,725,725,725,725,725,725,725,,,725,,,,,,,725,,,725,725,725',
'725,725,725,725,725,725,725,,725,725,,725,725,725,,,,,,,,,,,,,,,,,,',
',725,,,725,,,725,,,,,,,,,725,,,,,,,,725,,,,,725,725,725,725,725,725',
',,,725,725,200,200,200,,200,,,725,200,200,,725,,200,725,200,200,200',
'200,200,200,200,,,,,200,200,200,200,200,200,200,,,200,,,,,,,200,,,200',
'200,200,200,200,200,200,200,200,200,,200,200,,200,200,200,,,,,,,,,,',
',,,,,,,,,200,,,200,,,200,,,,,,,,,200,,,,,,,,200,,,,,200,200,200,200',
'200,200,,,,200,200,201,201,201,,201,,,200,201,201,,200,,201,200,201',
'201,201,201,201,201,201,,,,,201,201,201,201,201,201,201,,,201,,,,,,',
'201,,,201,201,201,201,201,201,201,201,201,201,,201,201,,201,201,201',
',,,,,,,,,,,,,,,,,,,201,,,201,,,201,,,,,,,,,201,,,,,,,,201,,,,,201,201',
'201,201,201,201,,,,201,201,202,202,202,,202,,,201,202,202,,201,,202',
'201,202,202,202,202,202,202,202,,,,,202,202,202,202,202,202,202,,,202',
',,,,,,202,,,202,202,202,202,202,202,202,202,202,202,,202,202,,202,202',
'202,,,,,,,,,,,,,,,,,,,,202,,,202,,,202,,,,,,,,,202,,,,,,,,202,,,,,202',
'202,202,202,202,202,,,,202,202,724,724,724,,724,,,202,724,724,,202,',
'724,202,724,724,724,724,724,724,724,,,,,724,724,724,724,724,724,724',
',,724,,,,,,,724,,,724,724,724,724,724,724,724,724,724,724,,724,724,',
'724,724,724,,,,,,,,,,,,,,,,,,,,724,,,724,,,724,,,,,,,,,724,,,,,,,,724',
',,,,724,724,724,724,724,724,,,,724,724,718,718,718,718,718,,,724,718',
'718,,724,,718,724,718,718,718,718,718,718,718,,,,,718,718,718,718,718',
'718,718,,,718,,,,,,718,718,,718,718,718,718,718,718,718,718,718,718',
'718,,718,718,,718,718,718,,,,,,,,,,,,,,,,,,,,718,,,718,,,718,,,,,718',
',,,718,,,,,,,,718,,,,,718,718,718,718,718,718,,,,718,718,496,496,496',
',496,,,718,496,496,,718,,496,718,496,496,496,496,496,496,496,,,,,496',
'496,496,496,496,496,496,,,496,,,,,,,496,,,496,496,496,496,496,496,496',
'496,496,496,,496,496,,,535,496,535,535,535,535,,,,,,,,,,,,,,,,496,,',
'496,,,496,,,,,,,,,,535,,,,,,,,535,535,535,535,496,496,496,496,496,496',
',,,496,496,706,706,706,706,706,,,496,706,706,,496,,706,496,706,706,706',
'706,706,706,706,,,,,706,706,706,706,706,706,706,,,706,,,,,,706,706,',
'706,706,706,706,706,706,706,706,706,706,706,,706,706,,706,706,706,,',
',,,,,,,,,,,,,,,,,706,,,706,,,706,,,,,706,,,,706,,,,,,,,706,,,,,706,706',
'706,706,706,706,,,,706,706,705,705,705,705,705,,,706,705,705,,706,,705',
'706,705,705,705,705,705,705,705,,,,,705,705,705,705,705,705,705,,,705',
',,,,,705,705,,705,705,705,705,705,705,705,705,705,705,705,,705,705,',
'705,705,705,,,,,,,,,,,,,,,,,,,,705,,,705,,,705,,,,,705,,,,705,,,,,,',
',705,,,,,705,705,705,705,705,705,,,,705,705,498,498,498,,498,,,705,498',
'498,,705,,498,705,498,498,498,498,498,498,498,,,,,498,498,498,498,498',
'498,498,,,498,,,,,,,498,,,498,498,498,498,498,498,498,498,498,498,,498',
'498,,498,498,498,,,,,,,,,,,,,,,,,,,,498,,,498,,,498,,,,,498,,,,498,',
',,,,,,498,,,,,498,498,498,498,498,498,,,,498,498,210,210,210,210,210',
',498,498,210,210,,498,,210,498,210,210,210,210,210,210,210,,,,,210,210',
'210,210,210,210,210,,,210,,,,,,210,210,,210,210,210,210,210,210,210',
'210,210,210,210,,210,210,,210,210,210,,,,,,,,,,,,,,,,,,,,210,,,210,',
',210,,,,,210,,,,210,,,,,,,,210,,,,,210,210,210,210,210,210,,,,210,210',
'211,211,211,,211,,,210,211,211,,210,,211,210,211,211,211,211,211,211',
'211,,,,,211,211,211,211,211,211,211,,,211,,,,,,,211,,,211,211,211,211',
'211,211,211,211,211,211,,211,211,,211,211,211,,,,,,,,,,,,,,,,,,,,211',
',,211,,211,211,,,,,,,,,211,,,,,,,,211,,,,,211,211,211,211,211,211,,',
',211,211,214,214,214,,214,,,211,214,214,,211,,214,211,214,214,214,214',
'214,214,214,,,,,214,214,214,214,214,214,214,,,214,,,,,,,214,,,214,214',
'214,214,214,214,214,214,214,214,,214,214,,214,214,214,,,,,,,,,,,,,,',
',,,,,214,,,214,,,214,,,,,,,,,214,,,,,,,,214,,,,,214,214,214,214,214',
'214,,,,214,214,702,702,702,,702,,,214,702,702,,214,,702,214,702,702',
'702,702,702,702,702,,,,,702,702,702,702,702,702,702,,,702,,,,,,,702',
',,702,702,702,702,702,702,702,702,702,702,,702,702,,702,702,702,,,,',
',,,,,,,,,,,,,,,702,,,702,,,702,,,,,,,,,702,,,,,,,,702,,,,,702,702,702',
'702,702,702,,,,702,702,216,216,216,,216,,,702,216,216,,702,,216,702',
'216,216,216,216,216,216,216,,,,,216,216,216,216,216,216,216,,,216,,',
',,,,216,,,216,216,216,216,216,216,216,216,216,216,,216,216,,216,216',
'216,,,,,,,,,,,,,,,,,,,,216,,,216,,,216,,,,,,,,,216,,,,,,,,216,,,,,216',
'216,216,216,216,216,,,,216,216,217,217,217,,217,,,216,217,217,,216,',
'217,216,217,217,217,217,217,217,217,,,,,217,217,217,217,217,217,217',
',,217,,,,,,,217,,,217,217,217,217,217,217,217,217,217,217,,217,217,',
'217,217,217,,,,,,,,,,,,,,,,,,,,217,,,217,,,217,,,,,,,,,217,,,,,,,,217',
',,,,217,217,217,217,217,217,,,,217,217,218,218,218,,218,,,217,218,218',
',217,,218,217,218,218,218,218,218,218,218,,,,,218,218,218,218,218,218',
'218,,,218,,,,,,,218,,,218,218,218,218,218,218,218,218,218,218,,218,218',
',218,218,218,,,,,,,,,,,,,,,,,,,,218,,,218,,,218,,,,,,,,,218,,,,,,,,218',
',,,,218,218,218,218,218,218,,,,218,218,219,219,219,,219,,,218,219,219',
',218,,219,218,219,219,219,219,219,219,219,,,,,219,219,219,219,219,219',
'219,,,219,,,,,,,219,,,219,219,219,219,219,219,219,219,219,219,,219,219',
',219,219,219,,,,,,,,,,,,,,,,,,,,219,,,219,,,219,,,,,,,,,219,,,,,,,,219',
',,,,219,219,219,219,219,219,,,,219,219,220,220,220,,220,,,219,220,220',
',219,,220,219,220,220,220,220,220,220,220,,,,,220,220,220,220,220,220',
'220,,,220,,,,,,,220,,,220,220,220,220,220,220,220,220,220,220,,220,220',
',220,220,220,,,,,,,,,,,,,,,,,,,,220,,,220,,,220,,,,,,,,,220,,,,,,,,220',
',,,,220,220,220,220,220,220,,,,220,220,221,221,221,,221,,,220,221,221',
',220,,221,220,221,221,221,221,221,221,221,,,,,221,221,221,221,221,221',
'221,,,221,,,,,,,221,,,221,221,221,221,221,221,221,221,221,221,,221,221',
',221,221,221,,,,,,,,,,,,,,,,,,,,221,,,221,,,221,,,,,,,,,221,,,,,,,,221',
',,,,221,221,221,221,221,221,,,,221,221,222,222,222,,222,,,221,222,222',
',221,,222,221,222,222,222,222,222,222,222,,,,,222,222,222,222,222,222',
'222,,,222,,,,,,,222,,,222,222,222,222,222,222,222,222,222,222,,222,222',
',222,222,222,,,,,,,,,,,,,,,,,,,,222,,,222,,,222,,,,,,,,,222,,,,,,,,222',
',,,,222,222,222,222,222,222,,,,222,222,223,223,223,,223,,,222,223,223',
',222,,223,222,223,223,223,223,223,223,223,,,,,223,223,223,223,223,223',
'223,,,223,,,,,,,223,,,223,223,223,223,223,223,223,223,223,223,,223,223',
',223,223,223,,,,,,,,,,,,,,,,,,,,223,,,223,,,223,,,,,,,,,223,,,,,,,,223',
',,,,223,223,223,223,223,223,,,,223,223,224,224,224,,224,,,223,224,224',
',223,,224,223,224,224,224,224,224,224,224,,,,,224,224,224,224,224,224',
'224,,,224,,,,,,,224,,,224,224,224,224,224,224,224,224,224,224,,224,224',
',224,224,224,,,,,,,,,,,,,,,,,,,,224,,,224,,,224,,,,,,,,,224,,,,,,,,224',
',,,,224,224,224,224,224,224,,,,224,224,225,225,225,,225,,,224,225,225',
',224,,225,224,225,225,225,225,225,225,225,,,,,225,225,225,225,225,225',
'225,,,225,,,,,,,225,,,225,225,225,225,225,225,225,225,225,225,,225,225',
',225,225,225,,,,,,,,,,,,,,,,,,,,225,,,225,,,225,,,,,,,,,225,,,,,,,,225',
',,,,225,225,225,225,225,225,,,,225,225,226,226,226,,226,,,225,226,226',
',225,,226,225,226,226,226,226,226,226,226,,,,,226,226,226,226,226,226',
'226,,,226,,,,,,,226,,,226,226,226,226,226,226,226,226,226,226,,226,226',
',226,226,226,,,,,,,,,,,,,,,,,,,,226,,,226,,,226,,,,,,,,,226,,,,,,,,226',
',,,,226,226,226,226,226,226,,,,226,226,227,227,227,,227,,,226,227,227',
',226,,227,226,227,227,227,227,227,227,227,,,,,227,227,227,227,227,227',
'227,,,227,,,,,,,227,,,227,227,227,227,227,227,227,227,227,227,,227,227',
',227,227,227,,,,,,,,,,,,,,,,,,,,227,,,227,,,227,,,,,,,,,227,,,,,,,,227',
',,,,227,227,227,227,227,227,,,,227,227,228,228,228,,228,,,227,228,228',
',227,,228,227,228,228,228,228,228,228,228,,,,,228,228,228,228,228,228',
'228,,,228,,,,,,,228,,,228,228,228,228,228,228,228,228,228,228,,228,228',
',228,228,228,,,,,,,,,,,,,,,,,,,,228,,,228,,,228,,,,,,,,,228,,,,,,,,228',
',,,,228,228,228,228,228,228,,,,228,228,229,229,229,,229,,,228,229,229',
',228,,229,228,229,229,229,229,229,229,229,,,,,229,229,229,229,229,229',
'229,,,229,,,,,,,229,,,229,229,229,229,229,229,229,229,229,229,,229,229',
',229,229,229,,,,,,,,,,,,,,,,,,,,229,,,229,,,229,,,,,,,,,229,,,,,,,,229',
',,,,229,229,229,229,229,229,,,,229,229,230,230,230,,230,,,229,230,230',
',229,,230,229,230,230,230,230,230,230,230,,,,,230,230,230,230,230,230',
'230,,,230,,,,,,,230,,,230,230,230,230,230,230,230,230,230,230,,230,230',
',230,230,230,,,,,,,,,,,,,,,,,,,,230,,,230,,,230,,,,,,,,,230,,,,,,,,230',
',,,,230,230,230,230,230,230,,,,230,230,231,231,231,,231,,,230,231,231',
',230,,231,230,231,231,231,231,231,231,231,,,,,231,231,231,231,231,231',
'231,,,231,,,,,,,231,,,231,231,231,231,231,231,231,231,231,231,,231,231',
',231,231,231,,,,,,,,,,,,,,,,,,,,231,,,231,,,231,,,,,,,,,231,,,,,,,,231',
',,,,231,231,231,231,231,231,,,,231,231,232,232,232,,232,,,231,232,232',
',231,,232,231,232,232,232,232,232,232,232,,,,,232,232,232,232,232,232',
'232,,,232,,,,,,,232,,,232,232,232,232,232,232,232,232,232,232,,232,232',
',232,232,232,,,,,,,,,,,,,,,,,,,,232,,,232,,,232,,,,,,,,,232,,,,,,,,232',
',,,,232,232,232,232,232,232,,,,232,232,233,233,233,,233,,,232,233,233',
',232,,233,232,233,233,233,233,233,233,233,,,,,233,233,233,233,233,233',
'233,,,233,,,,,,,233,,,233,233,233,233,233,233,233,233,233,233,,233,233',
',233,233,233,,,,,,,,,,,,,,,,,,,,233,,,233,,,233,,,,,,,,,233,,,,,,,,233',
',,,,233,233,233,233,233,233,,,,233,233,234,234,234,,234,,,233,234,234',
',233,,234,233,234,234,234,234,234,234,234,,,,,234,234,234,234,234,234',
'234,,,234,,,,,,,234,,,234,234,234,234,234,234,234,234,234,234,,234,234',
',234,234,234,,,,,,,,,,,,,,,,,,,,234,,,234,,,234,,,,,,,,,234,,,,,,,,234',
',,,,234,234,234,234,234,234,,,,234,234,235,235,235,,235,,,234,235,235',
',234,,235,234,235,235,235,235,235,235,235,,,,,235,235,235,235,235,235',
'235,,,235,,,,,,,235,,,235,235,235,235,235,235,235,235,235,235,,235,235',
',235,235,235,,,,,,,,,,,,,,,,,,,,235,,,235,,,235,,,,,,,,,235,,,,,,,,235',
',,,,235,235,235,235,235,235,,,,235,235,236,236,236,,236,,,235,236,236',
',235,,236,235,236,236,236,236,236,236,236,,,,,236,236,236,236,236,236',
'236,,,236,,,,,,,236,,,236,236,236,236,236,236,236,236,236,236,,236,236',
',236,236,236,,,,,,,,,,,,,,,,,,,,236,,,236,,,236,,,,,,,,,236,,,,,,,,236',
',,,,236,236,236,236,236,236,,,,236,236,237,237,237,,237,,,236,237,237',
',236,,237,236,237,237,237,237,237,237,237,,,,,237,237,237,237,237,237',
'237,,,237,,,,,,,237,,,237,237,237,237,237,237,237,237,237,237,,237,237',
',237,237,237,,,,,,,,,,,,,,,,,,,,237,,,237,,,237,,,,,,,,,237,,,,,,,,237',
',,,,237,237,237,237,237,237,,,,237,237,238,238,238,,238,,,237,238,238',
',237,,238,237,238,238,238,238,238,238,238,,,,,238,238,238,238,238,238',
'238,,,238,,,,,,,238,,,238,238,238,238,238,238,238,238,238,238,,238,238',
',238,238,238,,,,,,,,,,,,,,,,,,,,238,,,238,,,238,,,,,,,,,238,,,,,,,,238',
',,,,238,238,238,238,238,238,,,,238,238,239,239,239,,239,,,238,239,239',
',238,,239,238,239,239,239,239,239,239,239,,,,,239,239,239,239,239,239',
'239,,,239,,,,,,,239,,,239,239,239,239,239,239,239,239,239,239,,239,239',
',239,239,239,,,,,,,,,,,,,,,,,,,,239,,,239,,,239,,,,,,,,,239,,,,,,,,239',
',,,,239,239,239,239,239,239,,,,239,239,240,240,240,,240,,,239,240,240',
',239,,240,239,240,240,240,240,240,240,240,,,,,240,240,240,240,240,240',
'240,,,240,,,,,,,240,,,240,240,240,240,240,240,240,240,240,240,,240,240',
',240,240,240,,,,,,,,,,,,,,,,,,,,240,,,240,,,240,,,,,,,,,240,,,,,,,,240',
',,,,240,240,240,240,240,240,,,,240,240,241,241,241,,241,,,240,241,241',
',240,,241,240,241,241,241,241,241,241,241,,,,,241,241,241,241,241,241',
'241,,,241,,,,,,,241,,,241,241,241,241,241,241,241,241,241,241,,241,241',
',241,241,241,,,,,,,,,,,,,,,,,,,,241,,,241,,,241,,,,,,,,,241,,,,,,,,241',
',,,,241,241,241,241,241,241,,,,241,241,698,698,698,,698,,,241,698,698',
',241,,698,241,698,698,698,698,698,698,698,,,,,698,698,698,698,698,698',
'698,,,698,,,,,,,698,,,698,698,698,698,698,698,698,698,698,698,,698,698',
',698,698,698,,,,,,,,,,,,,,,,,,,,698,,,698,,,698,,,,,698,,,,698,,,,,',
',,698,,,,,698,698,698,698,698,698,,,,698,698,694,694,694,,694,,698,698',
'694,694,,698,,694,698,694,694,694,694,694,694,694,,,,,694,694,694,694',
'694,694,694,,,694,,,,,,,694,,,694,694,694,694,694,694,694,694,694,694',
',694,694,,694,694,694,,,,,,,,,,,,,,,,,,,,694,,,694,,,694,,,,,,,,,694',
',,,,,,,694,,,,,694,694,694,694,694,694,,,,694,694,693,693,693,,693,',
',694,693,693,,694,,693,694,693,693,693,693,693,693,693,,,,,693,693,693',
'693,693,693,693,,,693,,,,,,,693,,,693,693,693,693,693,693,693,693,693',
'693,,693,693,,693,693,693,,,,,,,,,,,,,,,,,,,,693,,,693,,,693,,,,,693',
',,,693,,,,,,,,693,,,,,693,693,693,693,693,693,,,,693,693,250,250,250',
',250,,,693,250,250,,693,,250,693,250,250,250,250,250,250,250,,,,,250',
'250,250,250,250,250,250,,,250,,,,,,,250,,,250,250,250,250,250,250,250',
'250,250,250,,250,250,,250,250,250,,,,,,,,,,,,,,,,,,,,250,,,250,,,250',
',,,,,,,,250,,,,,,,,250,,,,,250,250,250,250,250,250,,,,250,250,662,662',
'662,,662,,,250,662,662,,250,,662,250,662,662,662,662,662,662,662,,,',
',662,662,662,662,662,662,662,,,662,,,,,,,662,,,662,662,662,662,662,662',
'662,662,662,662,,662,662,,662,662,662,,,,,,,,,,,,,,,,,,,,662,,,662,',
',662,,,,,662,,,,662,,,,,,,,662,,,,,662,662,662,662,662,662,,,,662,662',
'252,252,252,,252,,,662,252,252,,662,,252,662,252,252,252,252,252,252',
'252,,,,,252,252,252,252,252,252,252,,,252,,,,,,,252,,,252,252,252,252',
'252,252,252,252,252,252,,252,252,,252,252,252,,,,,,,,,,,,,,,,,,,,252',
',,252,,,252,,,,,,,,,252,,,,,,,,252,,,,,252,252,252,252,252,252,,,,252',
'252,257,257,257,,257,,,252,257,257,,252,,257,252,257,257,257,257,257',
'257,257,,,,,257,257,257,257,257,257,257,,,257,,,,,,,257,,,257,257,257',
'257,257,257,257,257,257,257,,257,257,,257,257,257,,,,,,,,,,,,,,,,,,',
',257,,,257,,,257,,,,,,,,,257,,,,,,,,257,,,,,257,257,257,257,257,257',
',,,257,257,656,656,656,,656,,,257,656,656,,257,,656,257,656,656,656',
'656,656,656,656,,,,,656,656,656,656,656,656,656,,,656,,,,,,,656,,,656',
'656,656,656,656,656,656,656,656,656,,656,656,,,568,656,568,568,568,568',
',,,,,,,,,,,,,,,656,,,656,,,656,,,,,,,,,,568,568,,,,,,,568,568,568,568',
'656,656,656,656,656,656,,,,656,656,507,507,507,,507,,,656,507,507,,656',
',507,656,507,507,507,507,507,507,507,,,,,507,507,507,507,507,507,507',
',,507,,,,,,,507,,,507,507,507,507,507,507,507,507,507,507,,507,507,',
'507,507,507,,,,,,,,,,,,,,,,,,,,507,,,507,,,507,,,,,,,,,507,,,,,,,,507',
',,,,507,507,507,507,507,507,,,,507,507,345,345,345,,345,,,507,345,345',
',507,,345,507,345,345,345,345,345,345,345,,,,,345,345,345,345,345,345',
'345,,,345,,,,,,,345,,,345,345,345,345,345,345,345,345,345,345,,345,345',
',345,345,345,,,,,,,,,,,,,,,,,,,,345,,,345,,,345,,,,,,,,,345,,,,,,,,345',
',,,,345,345,345,345,345,345,,,,345,345,263,263,263,,263,,,345,263,263',
',345,,263,345,263,263,263,263,263,263,263,,,,,263,263,263,263,263,263',
'263,,,263,,,,,,,263,,,263,263,263,263,263,263,263,263,263,263,,263,263',
',263,263,263,,,,,,,,,,,,,,,,,,,,263,,,263,,,263,,,,,263,,263,,263,,',
',,,,,263,,,,,263,263,263,263,263,263,,,,263,263,264,264,264,,264,,263',
'263,264,264,,263,,264,263,264,264,264,264,264,264,264,,,,,264,264,264',
'264,264,264,264,,,264,,,,,,,264,,,264,264,264,264,264,264,264,264,264',
'264,,264,264,,264,264,264,,,,,,,,,,,,,,,,,,,,264,,,264,,,264,,,,,264',
',264,,264,,,,,,,,264,,,,,264,264,264,264,264,264,,,,264,264,272,272',
'272,,272,,264,264,272,272,,264,,272,264,272,272,272,272,272,272,272',
',,,,272,272,272,272,272,272,272,,,272,,,,,,,272,,,272,272,272,272,272',
'272,272,272,272,272,,272,272,,272,272,272,,,,,,,,,,,,,,,,,,,,272,,,272',
',272,272,,,,,272,,272,,272,,,,,,,,272,,,,,272,272,272,272,272,272,,',
',272,272,344,344,344,,344,,272,272,344,344,,272,,344,272,344,344,344',
'344,344,344,344,,,,,344,344,344,344,344,344,344,,,344,,,,,,,344,,,344',
'344,344,344,344,344,344,344,344,344,,344,344,,344,344,344,,,,,,,,,,',
',,,,,,,,,344,,,344,,,344,,,,,,,,,344,,,,,,,,344,,,,,344,344,344,344',
'344,344,,,,344,344,646,646,646,,646,,,344,646,646,,344,,646,344,646',
'646,646,646,646,646,646,,,,,646,646,646,646,646,646,646,,,646,,,,,,',
'646,,,646,646,646,646,646,646,646,646,646,646,,646,646,,,,646,,,,,,',
',,,,,,,,,,,,,646,,,646,,,646,,,,,,,,,,,,,,,,,,,,,,646,646,646,646,646',
'646,,,,646,646,642,642,642,642,642,,,646,642,642,,646,,642,646,642,642',
'642,642,642,642,642,,,,,642,642,642,642,642,642,642,,,642,,,,,,642,642',
',642,642,642,642,642,642,642,642,642,642,642,,642,642,,642,642,642,',
',,,,,,,,,,,,,,,,,,642,,,642,,,642,,,,,642,,,,642,,,,,,,,642,,,,,642',
'642,642,642,642,642,,,,642,642,276,276,276,276,276,,,642,276,276,,642',
',276,642,276,276,276,276,276,276,276,,,,,276,276,276,276,276,276,276',
',,276,,,,,,276,276,,276,276,276,276,276,276,276,276,276,276,276,,276',
'276,,276,276,276,,,,,,,,,,,,,,,,,,,,276,,,276,,,276,,,,,276,,,,276,',
',,,,,,276,,,,,276,276,276,276,276,276,,,,276,276,641,641,641,641,641',
',,276,641,641,,276,,641,276,641,641,641,641,641,641,641,,,,,641,641',
'641,641,641,641,641,,,641,,,,,,641,641,,641,641,641,641,641,641,641',
'641,641,641,641,,641,641,,641,641,641,,,,,,,,,,,,,,,,,,,,641,,,641,',
',641,,,,,641,,,,641,,,,,,,,641,,,,,641,641,641,641,641,641,,,,641,641',
'635,635,635,,635,,,641,635,635,,641,,635,641,635,635,635,635,635,635',
'635,,,,,635,635,635,635,635,635,635,,,635,,,,,,,635,,,635,635,635,635',
'635,635,635,635,635,635,,635,635,,635,635,635,,,,,,,,,,,,,,,,,,,,635',
',,635,,,635,,,,,635,,635,,635,,,,,,,,635,,,,,635,635,635,635,635,635',
',,,635,635,629,629,629,629,629,,635,635,629,629,,635,,629,635,629,629',
'629,629,629,629,629,,,,,629,629,629,629,629,629,629,,,629,,,,,,629,629',
',629,629,629,629,629,629,629,629,629,629,629,,629,629,,629,629,629,',
',,,,,,,,,,,,,,,,,,629,,,629,,,629,,,,,629,,,,629,,,,,,,,629,,,,,629',
'629,629,629,629,629,,,,629,629,280,280,280,,280,,,629,280,280,,629,',
'280,629,280,280,280,280,280,280,280,,,,,280,280,280,280,280,280,280',
',,280,,,,,612,,280,,,280,280,280,280,280,280,280,280,280,280,,280,280',
',,,280,612,612,612,612,612,612,612,612,612,612,612,,612,612,,,612,612',
',280,,,280,,,280,,,,,,612,,612,,612,612,612,612,612,612,612,,612,,,',
'280,280,280,280,280,280,,,,280,280,,612,,280,,,,280,,,,280,,,280,281',
'281,281,281,281,,,,281,281,,,,281,,281,281,281,281,281,281,281,,,,,281',
'281,281,281,281,281,281,,,281,,,,,,281,281,,281,281,281,281,281,281',
'281,281,281,281,281,,281,281,,281,281,281,,,,,,,,,,,,,,,,,,,,281,,,281',
',,281,,,,,281,,,,281,,,,,,,,281,,,,,281,281,281,281,281,281,,,,281,281',
'622,622,622,,622,,,281,622,622,,281,,622,281,622,622,622,622,622,622',
'622,,,,,622,622,622,622,622,622,622,,,622,,,,,,,622,,,622,622,622,622',
'622,622,622,622,622,622,,622,622,,622,622,622,,,,,,,,,,,,,,,,,,,,622',
',,622,,,622,,,,,,,,,622,,,,,,,,622,,,,,622,622,622,622,622,622,,,,622',
'622,618,618,618,618,618,,,622,618,618,,622,,618,622,618,618,618,618',
'618,618,618,,,,,618,618,618,618,618,618,618,,,618,,,,,,618,618,,618',
'618,618,618,618,618,618,618,618,618,618,,618,618,,618,618,618,,,,,,',
',,,,,,,,,,,,,618,,,618,,,618,,,,,618,,,,618,,,,,,,,618,,,,,618,618,618',
'618,618,618,,,,618,618,614,614,614,,614,,,618,614,614,,618,,614,618',
'614,614,614,614,614,614,614,,,,,614,614,614,614,614,614,614,,,614,,',
',,,,614,,,614,614,614,614,614,614,614,614,614,614,,614,614,,614,614',
'614,,,,,,,,,,,,,,,,,,,,614,,,614,,,614,,,,,,,,,614,,,,,,,,614,,,,,614',
'614,614,614,614,614,,,,614,614,508,508,508,,508,,,614,508,508,,614,',
'508,614,508,508,508,508,508,508,508,,,,,508,508,508,508,508,508,508',
',,508,,,,,,,508,,,508,508,508,508,508,508,508,508,508,508,,508,508,',
'508,508,508,461,461,461,461,461,461,461,461,461,461,461,,461,461,,,461',
'461,,508,,,508,,,508,,,,,,461,,461,508,461,461,461,461,461,461,461,508',
'461,,,,508,508,508,508,508,508,,610,,508,508,,461,461,610,610,610,,508',
'610,610,610,508,610,,508,,,,,,,,610,610,,,,,,,,610,610,,610,610,610',
'610,610,,,,,,,,,,,,,,,,,,,,,,610,610,610,610,610,610,610,610,610,610',
'610,610,610,610,,,610,610,610,,610,610,,,610,,,610,,610,,610,,610,,610',
'610,610,610,610,610,610,,610,,610,,,,,,,,,,,,,610,610,610,610,,610,609',
',,,610,,610,609,609,609,,,609,609,609,,609,,,,,,,,,609,609,609,,,,,',
',,609,609,,609,609,609,609,609,,,,,,,,,,,,,,,,,,,,,,609,609,609,609',
'609,609,609,609,609,609,609,609,609,609,,,609,609,609,,609,609,,,609',
',,609,,609,,609,,609,,609,609,609,609,609,609,609,,609,609,609,,,,,',
',,,,,,,609,609,609,609,,609,,509,509,509,609,509,609,,,509,509,,,,509',
',509,509,509,509,509,509,509,,,,,509,509,509,509,509,509,509,,,509,',
',,,,,509,,,509,509,509,509,509,509,509,509,509,509,,509,509,,509,509',
'509,,,,,,,,,,,,,,,,,,,,509,,,509,,,509,,,,,,,,,509,,,,,,,,509,,,,,509',
'509,509,509,509,509,,,,509,509,606,606,606,,606,,,509,606,606,,509,',
'606,509,606,606,606,606,606,606,606,,,,,606,606,606,606,606,606,606',
',,606,,,,,,,606,,,606,606,606,606,606,606,606,606,606,606,,606,606,',
'606,606,606,,,,,,,,,,,,,,,,,,,,606,,,606,,,606,,,,,,,,,606,,,,,,,,606',
',,,,606,606,606,606,606,606,,,,606,606,603,603,603,,603,,,606,603,603',
',606,,603,606,603,603,603,603,603,603,603,,,,,603,603,603,603,603,603',
'603,,,603,,,,,,,603,,,603,603,603,603,603,603,603,603,603,603,,603,603',
',603,603,603,,,,,,,,,,,,,,,,,,,,603,,,603,,,603,,,,,,,,,603,,,,,,,,603',
',,,,603,603,603,603,603,603,,,,603,603,293,293,293,,293,,,603,293,293',
',603,,293,603,293,293,293,293,293,293,293,,,,,293,293,293,293,293,293',
'293,,,293,,,,,,,293,,,293,293,293,293,293,293,293,293,293,293,,293,293',
',,,293,,,,,,,,,,,,,,,,,,,,293,,,293,,,293,,,,,,,,,,,,,,,,,,,,,,293,293',
'293,293,293,293,,,,293,293,598,598,598,,598,,,293,598,598,,293,,598',
'293,598,598,598,598,598,598,598,,,,,598,598,598,598,598,598,598,,,598',
',,,,,,598,,,598,598,598,598,598,598,598,598,598,598,,598,598,,598,598',
'598,,,,,,,,,,,,,,,,,,,,598,,,598,,,598,,,,,,,,,598,,,,,,,,598,,,,,598',
'598,598,598,598,598,,,,598,598,597,597,597,,597,,,598,597,597,,598,',
'597,598,597,597,597,597,597,597,597,,,,,597,597,597,597,597,597,597',
',,597,,,,,,,597,,,597,597,597,597,597,597,597,597,597,597,,597,597,',
'597,597,597,,,,,,,,,,,,,,,,,,,,597,,,597,,,597,,,,,,,,,597,,,,,,,,597',
',,,,597,597,597,597,597,597,,,,597,597,595,595,595,,595,,,597,595,595',
',597,,595,597,595,595,595,595,595,595,595,,,,,595,595,595,595,595,595',
'595,,,595,,,,,,,595,,,595,595,595,595,595,595,595,595,595,595,,595,595',
',595,595,595,,,,,,,,,,,,,,,,,,,,595,,,595,,,595,,,,,595,,,,595,,,,,',
',,595,,,,,595,595,595,595,595,595,,,,595,595,593,593,593,,593,,,595',
'593,593,,595,,593,595,593,593,593,593,593,593,593,,,,,593,593,593,593',
'593,593,593,,,593,,,,,,,593,,,593,593,593,593,593,593,593,593,593,593',
',593,593,,593,593,593,,,,,,,,,,,,,,,,,,,,593,,,593,,,593,,,,,,,,,593',
',,,,,,,593,,,,,593,593,593,593,593,593,,,,593,593,513,513,513,,513,',
',593,513,513,,593,,513,593,513,513,513,513,513,513,513,,,,,513,513,513',
'513,513,513,513,,,513,,,,,,,513,,,513,513,513,513,513,513,513,513,513',
'513,,513,513,,513,513,513,,,,,,,,,,,,,,,,,,,,513,,,513,,,513,,,,,,,',
',513,,,,,,,,513,,,,,513,513,513,513,513,513,,,,513,513,302,302,302,',
'302,,,513,302,302,,513,,302,513,302,302,302,302,302,302,302,,,,,302',
'302,302,302,302,302,302,,,302,,,,,,,302,,,302,302,302,302,302,302,302',
'302,302,302,,302,302,,302,302,302,,,,,,,,,,,,,,,,,,,,302,,,302,302,',
'302,,,,,,,,,302,,,,,,,,302,,,,,302,302,302,302,302,302,,,,302,302,304',
'304,304,304,304,,,302,304,304,,302,,304,302,304,304,304,304,304,304',
'304,,,,,304,304,304,304,304,304,304,,,304,,,,,,304,304,,304,304,304',
'304,304,304,304,304,304,304,304,,304,304,,304,304,304,,,,,,,,,,,,,,',
',,,,,304,,,304,,,304,,,,,304,,,,304,,,,,,,,304,,,,,304,304,304,304,304',
'304,,,,304,304,519,519,519,,519,,,304,519,519,,304,,519,304,519,519',
'519,519,519,519,519,,,,,519,519,519,519,519,519,519,,,519,,,,,,,519',
',,519,519,519,519,519,519,519,519,519,519,,519,519,,519,519,519,,,,',
',,,,,,,,,,,,,,,519,,,519,,,519,,,,,519,,,,519,,,,,,,,519,,,,,519,519',
'519,519,519,519,,,,519,519,522,522,522,,522,,519,519,522,522,,519,,522',
'519,522,522,522,522,522,522,522,,,,,522,522,522,522,522,522,522,,,522',
',,,,,,522,,,522,522,522,522,522,522,522,522,522,522,,522,522,,522,522',
'522,,,,,,,,,,,,,,,,,,,,522,,,522,,,522,,,,,,,,,522,,,,,,,,522,,,,,522',
'522,522,522,522,522,,,,522,522,566,566,566,,566,,522,522,566,566,,522',
',566,522,566,566,566,566,566,566,566,,,,,566,566,566,566,566,566,566',
',,566,,,,,,,566,,,566,566,566,566,566,566,566,566,566,566,,566,566,',
'566,566,566,,,,,,,,,,,,,,,,,,,,566,,,566,,,566,,,,,,,,,566,,,,,,,,566',
',,,,566,566,566,566,566,566,,,,566,566,527,527,527,527,527,,,566,527',
'527,,566,,527,566,527,527,527,527,527,527,527,,,,,527,527,527,527,527',
'527,527,,,527,,,,,,527,527,,527,527,527,527,527,527,527,527,527,527',
'527,,527,527,,527,527,527,,,,,,,,,,,,,,,,,,,,527,,,527,,,527,,,,,527',
',,,527,,,,,,,,527,,,,,527,527,527,527,527,527,,,,527,527,528,528,528',
'528,528,,,527,528,528,,527,,528,527,528,528,528,528,528,528,528,,,,',
'528,528,528,528,528,528,528,,,528,,,,,,528,528,,528,528,528,528,528',
'528,528,528,528,528,528,,528,528,,528,528,528,,,,,,,,,,,,,,,,,,,,528',
',,528,,,528,,,,,528,,,,528,,,,,,,,528,,,,,528,528,528,528,528,528,,',
',528,528,557,557,557,557,557,,,528,557,557,,528,,557,528,557,557,557',
'557,557,557,557,,,,,557,557,557,557,557,557,557,,,557,,,,,,557,557,',
'557,557,557,557,557,557,557,557,557,557,557,,557,557,,557,557,557,,',
',,,,,,,,,,,,,,,,,557,,,557,,,557,,,,,557,,,,557,,,,,,,,557,,,,,557,557',
'557,557,557,557,,,,557,557,534,534,534,,534,,,557,534,534,,557,,534',
'557,534,534,534,534,534,534,534,,,,,534,534,534,534,534,534,534,,,534',
',,,,,,534,,,534,534,534,534,534,534,534,534,534,534,,534,534,,,,534',
',,,,,,,,,,,,,,,,,,,534,,,534,,,534,,,,,,,,,,,,,,,,,,,,,,534,534,534',
'534,534,534,,,,534,534,548,548,548,548,548,,,534,548,548,,534,,548,534',
'548,548,548,548,548,548,548,,,,,548,548,548,548,548,548,548,,,548,,',
',,,548,548,,548,548,548,548,548,548,548,548,548,548,548,,548,548,,548',
'548,548,,,,,,,,,,,,,,,,,,,,548,,,548,,,548,,,,,548,,,,548,,,,,,,,548',
',,,,548,548,548,548,548,548,,,,548,548,784,784,784,784,784,,,548,784',
'784,,548,,784,548,784,784,784,784,784,784,784,,,,,784,784,784,784,784',
'784,784,,,784,,,,,,784,784,,784,784,784,784,784,784,784,784,784,784',
'784,,784,784,,784,784,784,729,729,729,729,729,729,729,729,729,729,729',
',729,729,,,729,729,,784,,,784,,,784,,,,,784,729,,729,784,729,729,729',
'729,729,729,729,784,729,,,,784,784,784,784,784,784,,27,,784,784,,729',
',27,27,27,,784,27,27,27,784,27,,784,,,,,,,27,27,27,,,,,,,,27,27,,27',
'27,27,27,27,,,,,,,,,,,,,,,,,,,,,,27,27,27,27,27,27,27,27,27,27,27,27',
'27,27,,,27,27,27,,,27,,27,27,,,27,,27,,27,,27,,27,27,27,27,27,27,27',
',27,27,27,,,,,,,,,,,,50,27,27,27,27,,27,50,50,50,,27,50,50,50,,50,,',
',,,,,,,50,50,,,,,,,,50,50,,50,50,50,50,50,,,,,,,,,,,,,,,,,,,,,,50,50',
'50,50,50,50,50,50,50,50,50,50,50,50,,,50,50,50,,,50,,,50,,,50,,50,,50',
',50,,50,50,50,50,50,50,50,,50,,50,,,,,,,,,,,,,50,50,50,50,413,50,,,50',
'50,50,413,413,413,,,413,413,413,,413,,,,,,,,,413,413,413,,,,,,,,413',
'413,,413,413,413,413,413,,,,,,,,,,,,,,,,,,,,,,413,413,413,413,413,413',
'413,413,413,413,413,413,413,413,,,413,413,413,,,413,,413,413,,,413,',
'413,,413,,413,,413,413,413,413,413,413,413,,413,413,413,,,,,,,,,,,,28',
'413,413,413,413,,413,28,28,28,,413,28,28,28,,28,,,,,,,,,,28,28,,,,,',
',,28,28,,28,28,28,28,28,,,,,,,,,,,,,,,,,,,,,,28,28,28,28,28,28,28,28',
'28,28,28,28,28,28,,,28,28,28,,,28,,28,28,,,28,,28,,28,,28,,28,28,28',
'28,28,28,28,,28,,28,,,,,,,,,,,,474,28,28,28,28,,28,474,474,474,,28,474',
'474,474,,474,,,,,,,,,,474,,,,,,,,,474,474,,474,474,474,474,474,,,,,',
',,,,,,471,,,,,,,471,471,471,,,471,471,471,,471,,,,,474,,,,,471,,474',
',,,,474,474,471,471,,471,471,471,471,471,,,,,,,,,,,,,474,,,,,,,,,,,',
',474,,474,,,474,,471,,,,,,,471,,,,,471,471,,,,,,,,,,,,,,,,,,,,,471,',
',,,,,,,,,,,471,,471,,,471,393,393,393,393,393,393,393,393,393,393,393',
'393,393,393,393,393,393,393,393,393,393,393,393,393,,,393,393,393,393',
'393,393,393,393,393,393,393,393,393,393,393,393,393,393,393,393,393',
'393,393,,,393,,,,,,,,393,393,,393,393,393,393,393,393,393,,,393,,,,',
'393,393,393,393,,,,,,,,,,,,,393,393,,393,393,393,393,393,393,393,393',
'393,393,393,,,393,393,,,,,,,,,,393,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8',
'8,8,8,8,8,8,8,,,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,,,8,,',
',,,,,8,8,,8,8,8,8,8,8,8,,,8,,,,,8,8,8,8,,,,,,,,,,,,,8,8,,8,8,8,8,8,8',
'8,8,8,8,8,,,8,8,,,,,,,,,,8,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7',
'7,7,7,,,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,,7,,,,,,,,7',
'7,,7,7,7,7,7,7,7,,,7,,,,,7,7,7,7,,,,,,,,,,,,,7,7,,7,7,7,7,7,7,7,7,7',
'7,7,,,7,7,,,,,,,,,,7,397,397,397,397,397,397,397,397,397,397,397,397',
'397,397,397,397,397,397,397,397,397,397,397,397,,,397,397,397,397,397',
'397,397,397,397,397,397,397,397,397,397,397,397,397,397,397,397,397',
'397,,,397,,,,,,,,397,397,,397,397,397,397,397,397,397,,,397,,,,,397',
'397,397,397,,,,,,,,,,,,,397,397,,397,397,397,397,397,397,397,397,397',
'397,397,,,397,397,,,,,,,,,,397,715,715,715,715,715,715,715,715,715,715',
'715,715,715,715,715,715,715,715,715,715,715,715,715,715,,,715,715,715',
'715,715,715,715,715,715,715,715,715,715,715,715,715,715,715,715,715',
'715,715,715,,,715,,,,,,,,715,715,,715,715,715,715,715,715,715,,,715',
',,,,715,715,715,715,,,,,,,,,,,,,715,715,,715,715,715,715,715,715,715',
'715,715,715,715,,,715,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65',
'65,65,65,65,65,65,65,65,,,65,65,65,65,65,65,65,65,65,65,65,65,65,65',
'65,65,65,65,65,65,65,65,65,65,65,65,65,,,,,,,65,65,,65,65,65,65,65,65',
'65,,,65,,,,,65,65,65,65,,,,,,65,,,,,,,65,65,,65,65,65,65,65,65,65,65',
'65,65,65,,,65,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79',
'79,79,79,79,79,79,,,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79',
'79,79,79,79,79,79,79,79,79,79,79,,,,,,,79,79,,79,79,79,79,79,79,79,',
',79,,,,,79,79,79,79,,,,,,,,,,,,,79,79,,79,79,79,79,79,79,79,79,79,79',
'79,,,79,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190',
'190,190,190,190,190,190,190,190,190,,,190,190,190,190,190,190,190,190',
'190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190',
'190,190,,,,,,,190,190,,190,190,190,190,190,190,190,,,190,,,,,190,190',
'190,190,,,,,,,,,,,,,190,190,,190,190,190,190,190,190,190,190,190,190',
'190,500,500,190,,500,,,,,,,,500,500,,500,500,500,500,500,500,500,,,500',
',,,,500,500,500,500,,,,,,,,,,,,,500,500,,500,500,500,500,500,500,500',
'500,500,500,500,697,697,500,,697,,,,,,,,697,697,,697,697,697,697,697',
'697,697,,,697,,,,,697,697,697,697,,,,,,,,,,,,,697,697,,697,697,697,697',
'697,697,697,697,697,697,697,889,889,697,,889,,,,,,,,889,889,,889,889',
'889,889,889,889,889,,,889,,,,,889,889,889,889,,,,,,,,,,,,,889,889,,889',
'889,889,889,889,889,889,889,889,889,889,198,198,889,,198,,,,,,,,198',
'198,,198,198,198,198,198,198,198,,,198,,,,,198,198,198,198,,,,,,198',
',,,,,,198,198,,198,198,198,198,198,198,198,198,198,198,198,633,633,198',
',633,,,,,,,,633,633,,633,633,633,633,633,633,633,,,633,,,,,633,633,633',
'633,,,,,,,,,,,,,633,633,,633,633,633,633,633,633,633,633,633,633,633',
'888,888,633,,888,,,,,,,,888,888,,888,888,888,888,888,888,888,,,888,',
',,,888,888,888,888,,,,,,888,,,,,,,888,888,,888,888,888,888,888,888,888',
'888,888,888,888,499,499,888,,499,,,,,,,,499,499,,499,499,499,499,499',
'499,499,,,499,,,,,499,499,499,499,,,,,,499,,,,,,,499,499,,499,499,499',
'499,499,499,499,499,499,499,499,634,634,499,,634,,,,,,,,634,634,,634',
'634,634,634,634,634,634,,,634,,,,,634,634,634,634,,,,,,,,,,,,,634,634',
',634,634,634,634,634,634,634,634,634,634,634,771,771,634,,771,,,,,,',
',771,771,,771,771,771,771,771,771,771,,,771,,,,,771,771,771,771,,,,',
',,,,,,,,771,771,,771,771,771,771,771,771,771,771,771,771,771,699,699',
'771,,699,,,,,,,,699,699,,699,699,699,699,699,699,699,,,699,,,,,699,699',
'699,699,,,,,,699,,,,,,,699,699,,699,699,699,699,699,699,699,699,699',
'699,699,511,511,699,,511,,,,,,,,511,511,,511,511,511,511,511,511,511',
',,511,,,,,511,511,511,511,,,,,,,,,,,,,511,511,,511,511,511,511,511,511',
'511,511,511,511,511,427,427,511,,427,,,,,,,,427,427,,427,427,427,427',
'427,427,427,,,427,,,,,427,427,427,427,,,,,,427,,,,,,,427,427,,427,427',
'427,427,427,427,427,427,427,427,427,428,428,427,,428,,,,,,,,428,428',
',428,428,428,428,428,428,428,,,428,,,,,428,428,428,428,,,,,,,,,,,,,428',
'428,,428,428,428,428,428,428,428,428,428,428,428,260,260,428,,260,,',
',,,,,260,260,,260,260,260,260,260,260,260,,,260,,,,,260,260,260,260',
',,,,,,,,,,,,260,260,,260,260,260,260,260,260,260,260,260,260,260,,,260',
'636,636,636,636,636,636,636,636,636,636,636,,636,636,,,636,636,,,,,',
',,,,,,,,636,,636,,636,636,636,636,636,636,636,,636,,,,,,,261,261,,,261',
',,,,636,,636,261,261,,261,261,261,261,261,261,261,,,261,,,,,261,261',
'261,261,,,,,,,,,,,,,261,261,,261,261,261,261,261,261,261,261,261,261',
'261,510,510,261,,510,,,,,,,,510,510,,510,510,510,510,510,510,510,,,510',
',,,,510,510,510,510,,,,,,510,,,,,,,510,510,,510,510,510,510,510,510',
'510,510,510,510,510,199,199,510,,199,,,,,,,,199,199,,199,199,199,199',
'199,199,199,,,199,,,,,199,199,199,199,,,,,,,,,,,,,199,199,,199,199,199',
'199,199,199,199,199,199,199,199,,,199,512,512,512,512,512,512,512,512',
'512,512,512,,512,512,,,512,512,,,,,,,,,,,,,,512,,512,,512,512,512,512',
'512,512,512,,512,739,739,739,739,739,739,739,739,739,739,739,,739,739',
',512,739,739,,,,,,,,,,,,,,739,,739,,739,739,739,739,739,739,739,,739',
'424,424,424,424,424,424,424,424,424,424,424,,424,424,,739,424,424,,',
',,,,,,,,,,,424,,424,,424,424,424,424,424,424,424,,424,734,734,734,734',
'734,734,734,734,734,734,734,,734,734,,424,734,734,,,,,,,,,,,,,,734,',
'734,,734,734,734,734,734,734,734,,734,732,732,732,732,732,732,732,732',
'732,732,732,,732,732,,734,732,732,,,,,,,,,,,,,,732,,732,,732,732,732',
'732,732,732,732,,732,657,657,657,657,657,657,657,657,657,657,657,,657',
'657,,732,657,657,,,,,,,,,,,,,,657,,657,,657,657,657,657,657,657,657',
',657,409,409,409,409,409,409,409,409,409,409,409,,409,409,,657,409,409',
',,,,,,,,,,,,,409,,409,,409,409,409,409,409,409,409,,409,245,245,245',
'245,245,245,245,245,245,245,245,,245,245,,409,245,245,,,,,,,,,,,,,,245',
',245,,245,245,245,245,245,245,245,,245,19,19,19,19,19,19,19,19,19,19',
'19,,19,19,,245,19,19,,,,,,,,,,,,,,19,,19,,19,19,19,19,19,19,19,,19,722',
'722,722,722,722,722,722,722,722,722,722,,722,722,,19,722,722,,,,,,,',
',,,,,,722,,722,,722,722,722,722,722,722,722,,722,727,727,727,727,727',
'727,727,727,727,727,727,,727,727,,722,727,727,,,,,,,,,,,,,,727,,727',
',727,727,727,727,727,727,727,,727,818,818,818,818,818,818,818,818,818',
'818,818,,818,818,,727,818,818,,,,,,,,,,,,,,818,,818,,818,818,818,818',
'818,818,818,,818,,,,,,,,,,,,,,,,818' ]
        racc_action_check = arr = ::Array.new(22380, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_action_pointer = [
    -2,  1065,   nil,   511,   nil,   946,   930, 20102, 19982,   920,
   889,   878,   926,   140,   396,   608,   nil,  1639,  1759, 22124,
   962,   nil,  2119,  2239,  2359,   -11,   118, 19193, 19561,   nil,
  2959,  3079,  3199,   nil,   821,   227,   891,   582,  3799,  3919,
  4039,   794,   465,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
 19314,   nil,  4519,  4639,  4759,     9,  3332,  5119,  5239,   nil,
   nil,  5359,  5487,   801,   nil, 20451,   nil,   nil,   nil,   nil,
   nil,   -37,   nil,   nil,   nil,   nil,   nil,   752,   715, 20560,
   nil,   nil,   nil,  6327,   nil,   nil,  6447,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   813,   nil,  6687,   nil,
   nil,   nil,  6807,  6927,  7047,  7167,  7287,  7407,   nil,   581,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
 20669,   651,   nil,  7887,  8007,  8127,  8247,  8367, 20905, 21725,
  8727,  8847,  8967,   nil,   314,   156,   683,   -61,   526,   572,
  9807,  9927,   nil,   nil, 10047,   514, 10287, 10407, 10527, 10647,
 10767, 10887, 11007, 11127, 11247, 11367, 11487, 11607, 11727, 11847,
 11967, 12087, 12207, 12327, 12447, 12567, 12687, 12807, 12927, 13047,
 13167, 13287,   nil,   nil,   nil, 22080,   nil,   421,   419,   nil,
 13767,   269, 14007,   nil,   nil,   nil,   nil, 14127,   nil,   nil,
 21495, 21607,    33, 14607, 14727,   nil,   nil,   nil,   nil,   nil,
   nil,   nil, 14847,   532,   919,   275, 15327,   420,   656,   806,
 15807, 15942,   435,   454,   901,   467,   905,   723,   -13,   nil,
   672,   610,   nil, 17155,   nil,   259,   111,   159,   345,   nil,
   262,   nil, 17875,   nil, 17995,     3,   nil,   325,    35,   312,
   492,   476,   -57,   608,   nil,   nil,   291,  6220,   nil,   nil,
   nil,   636,   630,   nil,   642,   649,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   694,   nil,   nil,   nil,   757,   nil,   nil,
   777,   429,    87,    67, 14967, 14487,   478,   234,   757,   879,
  6207,   nil,  5727,   170,   337,   520,   274,   103,   449,   322,
   553,   nil,   457,   nil,   nil,  2599,   nil,   160,   nil,   164,
   nil,   -24,   890,   281,   nil,   910,   -43,   nil,   168,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   966, 19862,   nil,   nil,   nil, 20222,   957,   nil,
   nil,  5359,   nil,   118,   939,   nil,   912,   nil,   nil, 22036,
   945,   301,   233, 19440,   nil,   nil,   nil,   228,   935,   306,
   nil,   559,   679,   nil, 21860,   nil,   nil, 21377, 21436,  1159,
   128,  2719,  2839,  3439,    54,   nil,  2359,  2239,   530,   420,
   942,   940,   939,   937,  2712,  2832,  2592,  2479,  1879,   919,
  1399,  1279,  1159,  1039,  2119,  1759,  1639,   807,   799,  1999,
  1519, 16422,   216,   nil,  4399,   nil,  4879,   nil,  4999,   nil,
   nil, 19736,   nil,   nil, 19682,   235,   nil,   910,   868,   421,
   839,   918,   nil,   nil,  5607,   186,    58,   838,   nil,   nil,
  7647,   808,   765,   nil,   nil,   764,  9327,   795,  9687, 21082,
 20728,   434,   772,   nil,   nil,   731,   nil, 14367, 16422, 16795,
 21666, 21318, 21772, 17755,   780,   777,   690,   nil,   nil, 18115,
   nil,   nil, 18235,   nil,   nil,   nil,   nil, 18475, 18595,   675,
   nil,   675,   nil,   nil, 18835,  9340,   nil,   295,   nil,   nil,
   670,   nil,   786,   nil,   631,   815,   nil,   nil, 18955,   737,
   nil,   nil,  5847,    75,    32,   661,   638, 18715,   nil,   nil,
   343,   520,   nil,   111,   nil,    61, 18355,   nil, 14260,   nil,
   nil,   nil,    31,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   101,   nil,   nil,   nil,   163,   nil,   nil,
   nil,   nil,   nil, 17635,   140, 17515,   379, 17395, 17275,    -2,
   nil,   nil,   nil, 17035,   585,   nil, 16915,   122,   112, 16668,
 16540,   983, 15807,   nil, 16302,   nil,  3092,   nil, 16182,   938,
   nil,   926, 16062,   nil,   nil,   nil,   nil,   nil,   nil, 15687,
   nil,   816,   791, 20964, 21141, 15567, 21542,   446,   nil,   nil,
   424, 15447, 15207,   nil,   835,   -25, 15087,   -47,   nil,    -9,
   -19,   -18,    57,    -2,   424,   162, 14247, 21992,   254,   260,
   -11,   325, 13887,   nil,   nil,   -85,   256,   360,   nil,   nil,
   289,   nil,   311,   342,   400,   341,   353,   nil,   nil,   393,
   666,   nil,   610,   nil,   512,   nil,   nil,   nil,   nil,   nil,
   526,   nil,   529, 13647, 13527,   320,   nil, 20787, 13407, 21259,
   nil,   nil, 10167,   564,   -25,  9567,  9447,  5740,   396,   589,
   596,   597,   nil,   591,   nil, 20342,   651,   699,  9207,   nil,
   nil,   nil, 22168,   632,  9087,  8607,   nil, 22212,   nil, 19075,
   nil,   nil, 21948,   nil, 21904,  8487,  7767,  7527,   200, 21816,
   nil,   684,   787,   nil,   nil,   688,   nil,   nil,   711,   717,
   357,   784,  6567,   nil,   714,   815,   700,   373,   nil,   nil,
   826,   nil,  6087,   717,   759,   nil,   nil,   nil,   nil,   nil,
   nil, 21200,   nil,   567,   nil,   nil,   nil,   nil,   730,   856,
   nil,   nil,   861,  5967, 19075,   nil,   nil,   149,   -19,   544,
   nil,   799,   796,  4279,   153,   nil,   nil,   882,   883,   773,
   nil,  5500,   nil,   609,   nil,   nil,   461,  4159,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   808,   793,   nil, 22256,  3679,
   nil,   nil,   nil,   845,   818,   nil,   nil,   nil,  3559,   nil,
   nil,    76,  3319,   nil,   -32,   830,   nil,   nil,  2479,   nil,
   967,   970,  1999,  1879,   nil,   nil,   982,   nil,  1519,   nil,
   nil,   905,   869,   870,   nil,   871,   863,   nil,   nil,  3212,
   nil,   nil,   nil,  1399,   nil,  1279,   282,   284,   954,   432,
   nil,   nil,    60,   nil,   nil,   nil,   245,  1039,   nil,  1006,
   nil,   555,   nil,   nil,   nil,   919,  1020,   799, 21023, 20846,
   452,   439,   nil,   nil,   nil,  1037,   nil,   922,  1042,   nil,
   962,    68,    86,   133,   552,   653,   nil,   nil,   nil,   466,
   nil ]

racc_action_default = [
    -3,  -525,    -1,  -513,    -4,    -6,  -525,  -525,  -525,  -525,
  -525,  -525,  -525,  -525,  -267,   -36,   -37,  -525,  -525,   -42,
   -44,   -45,  -278,  -317,  -318,   -49,  -245,  -245,  -245,   -61,
   -10,   -65,   -72,   -74,  -525,  -444,  -525,  -525,  -525,  -525,
  -525,  -515,  -225,  -260,  -261,  -262,  -263,  -264,  -265,  -266,
  -503,  -269,  -525,  -524,  -495,  -286,  -524,  -525,  -525,  -291,
  -294,  -513,  -525,  -303,  -309,  -525,  -319,  -320,  -389,  -390,
  -391,  -392,  -393,  -524,  -396,  -524,  -524,  -524,  -524,  -524,
  -423,  -429,  -430,  -433,  -434,  -435,  -436,  -437,  -438,  -439,
  -440,  -441,  -442,  -443,  -446,  -447,  -525,    -2,  -514,  -520,
  -521,  -522,  -525,  -525,  -525,  -525,  -525,    -3,   -13,  -525,
  -100,  -101,  -102,  -103,  -104,  -105,  -106,  -109,  -110,  -111,
  -112,  -113,  -114,  -115,  -116,  -117,  -118,  -119,  -120,  -121,
  -122,  -123,  -124,  -125,  -126,  -127,  -128,  -129,  -130,  -131,
  -132,  -133,  -134,  -135,  -136,  -137,  -138,  -139,  -140,  -141,
  -142,  -143,  -144,  -145,  -146,  -147,  -148,  -149,  -150,  -151,
  -152,  -153,  -154,  -155,  -156,  -157,  -158,  -159,  -160,  -161,
  -162,  -163,  -164,  -165,  -166,  -167,  -168,  -169,  -170,  -171,
  -172,  -173,  -174,  -175,  -176,  -177,  -178,  -179,  -180,  -181,
  -525,   -18,  -107,   -10,  -525,  -525,  -525,  -524,  -525,  -525,
  -525,  -525,  -525,   -40,  -525,  -444,  -525,  -267,  -525,  -525,
   -10,  -525,   -41,  -217,  -525,  -525,  -525,  -525,  -525,  -525,
  -525,  -525,  -525,  -525,  -525,  -525,  -525,  -525,  -525,  -525,
  -525,  -525,  -525,  -525,  -525,  -525,  -525,  -525,  -525,  -525,
  -525,  -525,  -360,  -362,   -46,  -226,  -238,  -252,  -252,  -242,
  -525,  -253,  -525,  -278,  -317,  -318,  -497,  -525,   -47,   -48,
  -525,  -525,   -53,  -524,  -525,  -285,  -365,  -372,  -374,   -59,
  -370,   -60,  -525,  -513,   -11,   -61,   -10,  -525,  -525,   -66,
   -69,   -10,   -80,  -525,  -525,   -87,  -281,  -515,  -525,  -321,
  -371,  -525,   -71,  -525,   -76,  -274,  -431,  -432,  -525,  -202,
  -203,  -218,  -525,  -516,   -10,  -515,  -227,  -515,  -517,  -517,
  -525,  -525,  -517,  -525,  -287,  -288,  -525,  -525,  -332,  -333,
  -341,  -524,  -463,  -348,  -524,  -524,  -359,  -462,  -464,  -465,
  -466,  -467,  -468,  -525,  -479,  -484,  -485,  -487,  -488,  -489,
  -525,   -43,  -525,  -525,  -525,  -525,  -513,  -525,  -514,  -525,
  -525,  -306,  -525,  -100,  -101,  -137,  -138,  -154,  -159,  -166,
  -169,  -312,  -525,  -444,  -493,  -525,  -394,  -525,  -409,  -525,
  -411,  -525,  -525,  -525,  -401,  -525,  -525,  -407,  -525,  -422,
  -424,  -425,  -426,  -427,   911,    -5,  -523,   -19,   -20,   -21,
   -22,   -23,  -525,  -525,   -15,   -16,   -17,  -525,  -525,   -25,
   -33,  -182,  -253,  -525,  -525,   -26,   -34,   -35,   -27,  -184,
  -525,  -504,  -505,  -245,  -367,  -506,  -507,  -504,  -245,  -505,
  -369,  -509,  -510,   -32,  -191,   -38,   -39,  -525,  -525,  -524,
  -274,  -525,  -525,  -525,  -525,  -284,  -192,  -193,  -194,  -195,
  -196,  -197,  -198,  -199,  -204,  -205,  -206,  -207,  -208,  -209,
  -210,  -211,  -212,  -213,  -214,  -215,  -216,  -219,  -220,  -221,
  -222,  -525,  -524,  -239,  -525,  -240,  -525,  -250,  -525,  -254,
  -500,  -245,  -504,  -505,  -245,  -524,   -54,  -525,  -515,  -515,
  -252,  -238,  -246,  -247,  -525,  -524,  -524,  -525,  -280,    -9,
  -514,  -525,   -62,  -272,   -77,   -67,  -525,  -525,  -524,  -525,
  -525,   -86,  -525,  -431,  -432,   -73,   -78,  -525,  -525,  -525,
  -525,  -525,  -223,  -525,  -381,  -525,  -525,  -228,  -229,  -519,
  -518,  -231,  -519,  -276,  -277,  -496,  -329,   -10,   -10,  -525,
  -331,  -525,  -350,  -357,  -525,  -354,  -355,  -525,  -358,  -463,
  -525,  -470,  -525,  -472,  -474,  -478,  -486,  -490,   -10,  -322,
  -323,  -324,   -10,  -525,  -525,  -525,  -525,   -10,  -376,  -300,
   -96,  -525,   -98,  -525,  -267,  -525,  -525,  -310,  -461,  -314,
  -511,  -512,  -515,  -395,  -410,  -413,  -414,  -416,  -397,  -412,
  -398,  -399,  -400,  -525,  -403,  -405,  -406,  -525,  -428,    -7,
   -14,  -108,   -24,  -525,  -259,  -525,  -275,  -525,  -525,   -55,
  -236,  -237,  -366,  -525,   -57,  -368,  -525,  -504,  -505,  -504,
  -505,  -525,  -182,  -283,  -525,  -344,  -525,  -346,   -10,  -252,
  -251,  -255,  -525,  -498,  -499,   -50,  -363,   -51,  -364,   -10,
  -232,  -525,  -525,  -525,  -525,  -525,   -42,  -525,  -244,  -248,
  -525,   -10,   -10,  -279,   -12,   -62,  -525,   -70,   -75,  -525,
  -504,  -505,  -524,  -508,   -85,  -525,  -525,  -190,  -200,  -201,
  -525,  -524,  -524,  -270,  -271,  -517,  -525,  -525,  -330,  -342,
  -525,  -349,  -524,  -343,  -525,  -524,  -524,  -480,  -469,  -525,
  -525,  -477,  -524,  -325,  -524,  -292,  -326,  -327,  -328,  -295,
  -525,  -298,  -525,  -525,  -525,   -96,   -97,  -525,  -524,  -525,
  -304,  -448,  -525,  -525,  -525,   -10,   -10,  -461,  -525,  -492,
  -492,  -492,  -460,  -463,  -482,  -525,  -525,  -525,   -10,  -402,
  -404,  -408,  -183,  -257,  -525,  -525,   -29,  -186,   -30,  -187,
   -56,   -31,  -188,   -58,  -189,  -525,  -525,  -525,  -275,  -224,
  -345,  -525,  -525,  -241,  -256,  -525,  -233,  -234,  -524,  -524,
  -515,  -525,  -525,  -249,  -525,  -525,   -68,   -81,   -79,  -282,
  -524,  -339,   -10,  -382,  -524,  -383,  -384,  -230,  -334,  -335,
  -356,  -525,  -274,  -525,  -352,  -353,  -471,  -473,  -476,  -525,
  -336,  -337,  -525,   -10,   -10,  -297,  -299,  -525,  -525,   -96,
   -99,  -508,  -525,   -10,  -525,  -450,  -307,  -525,  -525,  -515,
  -452,  -525,  -456,  -525,  -458,  -459,  -525,  -525,  -315,  -494,
  -415,  -418,  -419,  -420,  -421,  -525,  -258,   -28,  -185,  -525,
  -347,  -361,   -52,  -525,  -252,  -373,  -375,    -8,   -10,  -388,
  -340,  -525,  -525,  -386,  -273,  -524,  -475,  -289,  -525,  -290,
  -525,  -525,  -525,   -10,  -301,  -275,  -525,  -449,   -10,  -311,
  -313,  -525,  -492,  -492,  -491,  -492,  -525,  -483,  -481,  -461,
  -417,  -235,  -243,  -525,  -387,   -10,   -88,  -525,  -525,   -95,
  -385,  -351,  -525,  -293,  -296,  -255,  -524,   -10,  -305,  -525,
  -451,  -525,  -454,  -455,  -457,   -10,  -381,  -524,  -525,  -525,
   -94,   -10,  -377,  -378,  -379,  -525,  -308,  -492,  -525,  -380,
  -525,  -504,  -505,  -508,   -93,  -524,  -302,  -453,  -316,   -89,
  -338 ]

clist = [
'35,465,361,556,310,309,312,541,113,113,246,246,246,289,289,279,380,5',
'302,14,400,407,515,479,533,326,318,536,538,661,35,282,282,101,505,620',
'98,620,706,342,343,307,677,346,289,108,192,709,476,14,285,285,518,521',
'292,638,525,540,116,116,779,696,282,672,2,363,113,676,857,247,247,247',
'669,640,275,97,574,344,783,212,113,285,584,623,387,388,389,390,413,418',
'626,101,345,628,203,277,685,689,35,784,711,244,258,259,369,371,35,35',
'378,548,552,262,269,271,565,5,567,14,618,694,877,760,350,391,5,14,14',
'380,712,305,793,629,566,347,341,341,848,352,341,623,705,641,642,568',
'782,715,857,859,410,309,471,474,316,526,315,838,675,314,311,364,482',
'304,700,462,485,486,892,693,764,831,366,392,367,569,373,583,362,376',
'810,341,341,341,341,717,718,307,709,799,852,393,349,113,191,35,827,777',
'385,790,1,,422,,,,,,620,,,,35,690,14,,,,541,,,681,,,,,,,,,,14,,,,,,266',
'270,647,,711,,404,404,,,,,,,,,481,246,,,399,405,408,,,246,423,289,,502',
',679,712,,,,,,,,289,35,506,425,426,282,35,516,910,517,,326,529,434,',
',,720,282,,14,,,10,285,14,,495,101,35,835,490,,677,,480,247,285,,669',
',,413,418,247,275,,,14,,275,553,554,10,885,,844,289,853,289,855,893',
',709,,,491,478,483,,489,497,,,,363,487,363,,541,,,,,,,854,,854,,,854',
'626,628,564,,564,743,,,770,101,,774,775,611,309,,,,730,,756,,652,733',
'711,,,113,750,10,,113,,652,899,,313,10,10,,,,767,,,,897,,13,619,307',
'555,712,,341,341,797,798,,802,804,805,422,,590,204,204,620,591,,204',
'204,204,,854,572,,116,13,283,283,116,649,309,,836,,,631,632,,,,,,,,',
',,204,204,,,665,204,204,,,204,283,289,,506,,,,,,307,,765,,35,10,,,,',
'282,266,599,270,,422,,604,,,,644,10,14,,846,422,13,,285,289,204,204',
'204,204,13,13,748,749,,,35,35,,,,894,,363,,,,871,,,,,402,406,,14,14',
'35,716,278,,35,564,843,,625,35,,627,,305,,,,,879,14,,882,883,14,884',
',10,,14,862,,10,,,,686,686,326,741,619,,652,660,,,,,701,,,865,467,,469',
'10,898,,,470,,13,204,204,204,204,,907,204,204,204,35,,,,601,751,,13',
'204,605,289,35,506,,,,,,,14,289,891,758,35,35,704,12,,282,,14,792,309',
',808,,,,282,,726,728,14,14,,,731,285,,,,,,,,,12,285,788,,204,204,601',
',,601,794,,307,204,,,,13,,,,283,13,,422,,,,,,,35,35,,283,404,,,,398',
',,113,,35,13,,,,,14,14,,823,,,278,,,795,796,,814,14,800,,787,,12,,,',
',,,,12,12,594,,,,,,,204,204,,35,,,563,,563,,,,341,422,,,,851,,652,341',
'204,14,,35,35,,817,,10,,,,,35,,,278,,,824,,278,14,14,,,,,,,,,14,621',
'289,313,,624,686,,872,,,,847,10,10,,35,,,,866,637,,,,12,900,309,,,,35',
'204,,10,14,35,,10,869,,,12,10,,,,,,601,14,,605,35,,14,621,,,313,,,,307',
',35,,,,,,,14,35,,,,,422,35,,,,,14,,,204,,,,,14,13,,,,,14,283,,204,,341',
'10,,,,12,,,,,12,,10,204,,,,,,,,,,,10,10,,13,13,723,,,,12,673,,,,,,,',
'601,601,,,,,13,,,,13,,,,744,13,,,,,,,,,204,,,621,,,,,,,,,,,,,,,,,,,10',
'10,,,,,,,763,204,204,,,10,,204,,,,,,,,,,,306,,,319,13,,,,,,,,,402,,13',
',,666,667,368,204,370,370,374,377,370,13,13,,,10,283,,,,,,,682,,,283',
'684,816,,,,692,,,,10,10,,,,,,,,,10,,,,,,,,,,402,,,,,,,,204,,,,204,,',
',204,,,13,13,,,,,10,,,,870,,,13,12,,,,742,,204,10,,,,,10,,,745,,,,,',
',858,,,,,754,755,10,,,,,,,,12,12,306,,10,,13,,,,,,10,,,,,,10,,875,12',
',,,12,,13,13,,12,,,,,,,13,,,,875,,,,,,,,,,,,,,,,,,,,,,,,,,815,477,,',
',13,,,,867,,,,,,204,,,,,13,,,,12,13,,,,,,,,,,12,,,,,,,13,,830,,,12,12',
',,,,,13,,,,,,,,13,,204,840,841,,13,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,213',
',,,245,245,245,,,,864,12,12,,,,,,,,299,300,301,,12,876,,,,,,,,,,245',
'245,,,,,,,,,,,886,,,,600,,,,,,,,895,,,,,,,,306,12,,288,288,,905,,,,288',
'288,288,,,,,,,,,,12,12,,,288,,,,,,12,615,288,,,,,,,,600,,,600,615,,',
',,,,,,,615,615,,,,,,,,,,12,,306,,,,,,,,,,,,,12,,,,,12,,,,,,,,,,,,,,',
',,12,,,,,401,245,409,245,,,424,12,,,,,,,,12,,,,,213,12,436,437,438,439',
'440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456',
'457,458,459,460,461,,,,,,,,,245,,245,,,,,245,,,,,,245,245,,,,,,,288',
'245,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288',
'288,288,288,288,288,288,288,288,288,288,,,,512,,,,,288,600,288,,,,,288',
',,761,766,,,,,,,,,,,,,,,,,,,288,761,,761,,,,,,,,,,288,,,,306,,,,,288',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,245,600,600,,288,,288,,,',
',,,829,,,,833,,,,,,,,,245,,424,612,409,,,,,,,,,,,,,,,,,,,,,,,,,,,288',
',,,245,,245,,245,,,,,,,,,,,,,,,,636,,,,288,288,288,,,,,,,,245,,,,,,',
',,657,658,659,,,,,,,,,,245,,288,245,288,,288,,,,,,,761,,,,,,,,,,,306',
',,,,,,,,,288,,,,,,,,761,,,288,288,288,,,,,,,,,,288,,,288,,,,,,,,,,,',
'288,,722,,245,,727,729,,,,,732,,,734,,,,,,,,739,,,,,,,,245,,,,,,,,,',
',,,245,,,,,,,,,,,,,,,288,,288,,,,,,,,,,245,288,,,,,,,,288,,,,,,,,288',
',,,,,,,,,,,,,245,,,,,245,,,,,288,,,,,,,,,,288,,,,,,288,,,,,245,818,',
',,,,,,,,727,729,732,,,,,,,,,,,,,288,,245,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',288,,,,,,,,,,,288,288,288,,,,,,,,,,,,,245,,288,,,,,,,,,,818,,,,,,,',
',,,,,,,,,,,,,,,245,,,,,,,,,,,,,,,,,,,,,245,288,,,,,,,,,,,,288,,,,,,',
',,,,245,,288,,,,,,,,,,288,,,,,,,,,,,,,,,,,,,,,288' ]
        racc_goto_table = arr = ::Array.new(2241, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'44,59,47,78,22,56,56,137,48,48,29,29,29,52,52,41,47,7,51,23,24,24,8',
'32,108,106,102,108,108,10,44,44,44,80,43,60,6,60,81,16,16,29,139,16',
'52,14,14,109,35,23,23,23,55,55,42,60,55,140,50,50,76,45,44,110,2,44',
'48,110,143,54,54,54,105,61,38,4,128,85,86,18,48,23,128,146,16,16,16',
'16,33,33,58,80,87,58,26,39,77,77,44,88,110,31,31,31,125,125,44,44,125',
'75,75,34,34,34,46,7,46,23,36,89,90,11,91,7,7,23,23,47,107,26,92,36,93',
'4,26,26,94,95,26,146,96,36,36,97,11,98,143,99,22,56,33,33,100,101,74',
'103,104,72,71,70,62,84,79,112,114,115,116,117,118,119,123,2,124,83,126',
'127,82,129,130,26,26,26,26,131,132,29,109,134,135,27,19,48,15,44,12',
'141,5,45,1,,48,,,,,,60,,,,44,78,23,,,,137,,,137,,,,,,,,,,23,,,,,,57',
'57,43,,110,,54,54,,,,,,,,,29,29,,,18,18,18,,,29,18,52,,51,,140,107,',
',,,,,,52,44,41,26,26,44,44,51,76,51,,106,102,26,,,,128,44,,23,,,17,23',
'23,,42,80,44,110,6,,139,,54,54,23,,105,,,33,33,54,38,,,23,,38,16,16',
'17,81,,77,52,110,52,110,11,,109,,,39,31,31,,4,39,,,,44,31,44,,137,,',
',,,,107,,107,,,107,58,58,23,,23,59,,,108,80,,108,108,22,56,,,,35,,43',
',33,35,110,,,48,32,17,,48,,33,10,,25,17,17,,,,55,,,,110,,21,56,29,4',
'107,,26,26,8,8,,136,136,136,48,,14,21,21,60,14,,21,21,21,,107,26,,50',
'21,21,21,50,22,56,,137,,,51,51,,,,,,,,,,,21,21,,,56,21,21,,,21,21,52',
',41,,,,,,29,,24,,44,17,,,,,44,57,34,57,,48,,34,,,,7,17,23,,8,48,21,',
'23,52,21,21,21,21,21,21,33,33,,,44,44,,,,78,,44,,,,108,,,,,25,25,,23',
'23,44,51,9,,44,23,75,,34,44,,34,,26,,,,,8,23,,136,136,23,136,,17,,23',
'59,,17,,,,80,80,106,102,56,,33,26,,,,,80,,,75,25,,25,17,8,,,25,,21,21',
'21,21,21,,136,21,21,21,44,,,,57,29,,21,21,57,52,44,41,,,,,,,23,52,75',
'41,44,44,26,20,,44,,23,22,56,,47,,,,44,,18,18,23,23,,,18,23,,,,,,,,',
'20,23,16,,21,21,57,,,57,16,,29,21,,,,21,,,,21,21,,48,,,,,,,44,44,,21',
'54,,,,9,,,48,,44,21,,,,,23,23,,51,,,9,,,80,80,,23,23,80,,54,,20,,,,',
',,,20,20,25,,,,,,,21,21,,44,,,21,,21,,,,26,48,,,,51,,33,26,21,23,,44',
'44,,18,,17,,,,,44,,,9,,,54,,9,23,23,,,,,,,,,23,25,52,25,,25,80,,16,',
',,80,17,17,,44,,,,44,25,,,,20,22,56,,,,44,21,,17,23,44,,17,23,,,20,17',
',,,,,57,23,,57,44,,23,25,,,25,,,,29,,44,,,,,,,23,44,,,,,48,44,,,,,23',
',,21,,,,,23,21,,,,,23,21,,21,,26,17,,,,20,,,,,20,,17,21,,,,,,,,,,,17',
'17,,21,21,25,,,,20,21,,,,,,,,57,57,,,,,21,,,,21,,,,25,21,,,,,,,,,21',
',,25,,,,,,,,,,,,,,,,,,,17,17,,,,,,,25,21,21,,,17,,21,,,,,,,,,,,53,,',
'53,21,,,,,,,,,25,,21,,,9,9,53,21,53,53,53,53,53,21,21,,,17,21,,,,,,',
'9,,,21,9,25,,,,9,,,,17,17,,,,,,,,,17,,,,,,,,,,25,,,,,,,,21,,,,21,,,',
'21,,,21,21,,,,,17,,,,17,,,21,20,,,,9,,21,17,,,,,17,,,9,,,,,,,25,,,,',
'9,9,17,,,,,,,,20,20,53,,17,,21,,,,,,17,,,,,,17,,25,20,,,,20,,21,21,',
'20,,,,,,,21,,,,25,,,,,,,,,,,,,,,,,,,,,,,,,,9,53,,,,21,,,,21,,,,,,21',
',,,,21,,,,20,21,,,,,,,,,,20,,,,,,,21,,9,,,20,20,,,,,,21,,,,,,,,21,,21',
'9,9,,21,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,28,,,,28,28,28,,,,9,20,20,,,',
',,,,28,28,28,,20,9,,,,,,,,,,28,28,,,,,,,,,,,9,,,,53,,,,,,,,9,,,,,,,',
'53,20,,37,37,,9,,,,37,37,37,,,,,,,,,,20,20,,,37,,,,,,20,53,37,,,,,,',
',53,,,53,53,,,,,,,,,,53,53,,,,,,,,,,20,,53,,,,,,,,,,,,,20,,,,,20,,,',
',,,,,,,,,,,,,20,,,,,28,28,28,28,,,28,20,,,,,,,,20,,,,,28,20,28,28,28',
'28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28',
',,,,,,,,28,,28,,,,,28,,,,,,28,28,,,,,,,37,28,37,37,37,37,37,37,37,37',
'37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,,,,28,,,,,37,53',
'37,,,,,37,,,53,53,,,,,,,,,,,,,,,,,,,37,53,,53,,,,,,,,,,37,,,,53,,,,',
'37,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,28,53,53,,37,,37,,,,,',
',53,,,,53,,,,,,,,,28,,28,28,28,,,,,,,,,,,,,,,,,,,,,,,,,,,37,,,,28,,28',
',28,,,,,,,,,,,,,,,,28,,,,37,37,37,,,,,,,,28,,,,,,,,,28,28,28,,,,,,,',
',,28,,37,28,37,,37,,,,,,,53,,,,,,,,,,,53,,,,,,,,,,37,,,,,,,,53,,,37',
'37,37,,,,,,,,,,37,,,37,,,,,,,,,,,,37,,28,,28,,28,28,,,,,28,,,28,,,,',
',,,28,,,,,,,,28,,,,,,,,,,,,,28,,,,,,,,,,,,,,,37,,37,,,,,,,,,,28,37,',
',,,,,,37,,,,,,,,37,,,,,,,,,,,,,,28,,,,,28,,,,,37,,,,,,,,,,37,,,,,,37',
',,,,28,28,,,,,,,,,,28,28,28,,,,,,,,,,,,,37,,28,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,37,,,,,,,,,,,37,37,37,,,,,,,,,,,,,28,,37,,,,,,,,,,28,,,,,,,,',
',,,,,,,,,,,,,,28,,,,,,,,,,,,,,,,,,,,,28,37,,,,,,,,,,,,37,,,,,,,,,,,28',
',37,,,,,,,,,,37,,,,,,,,,,,,,,,,,,,,,37' ]
        racc_goto_check = arr = ::Array.new(2241, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_goto_pointer = [
   nil,   198,    64,   nil,    72,    98,    33,    17,  -282,   520,
  -485,  -540,  -566,   nil,    38,   184,   -18,   298,    61,   128,
   644,   415,   -49,    19,  -174,   349,    77,    81,  1320,   -12,
   nil,    79,  -240,  -110,    85,  -214,  -344,  1377,    44,    65,
   nil,   -16,    22,  -259,     0,  -500,  -236,   -63,     1,   nil,
    51,   -23,   -18,   976,    47,  -256,   -48,   209,  -381,  -247,
  -429,  -411,  -104,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    94,   104,   102,   nil,    98,  -233,  -622,  -457,  -344,  -403,
    30,  -530,   111,  -189,   110,    18,  -607,    32,  -590,  -440,
  -724,    59,  -570,  -219,  -660,    73,  -427,  -218,  -424,  -661,
    96,  -163,   -30,  -626,  -379,  -459,   -31,  -440,  -297,  -521,
  -468,   nil,   -79,   nil,  -103,  -103,  -710,  -391,  -494,  -595,
   nil,   nil,   nil,    99,    99,    29,    97,  -198,  -291,    99,
  -539,  -393,  -393,   nil,  -520,  -613,  -283,  -326,   nil,  -493,
  -276,  -485,   nil,  -735,   nil,   nil,  -383 ]

racc_goto_default = [
   nil,   nil,   nil,     3,   nil,     4,   348,   274,   nil,   514,
   nil,   780,   nil,   273,   nil,   nil,   nil,   208,    16,    11,
   209,   298,   nil,   207,   nil,   251,    15,   nil,    19,    20,
    21,   nil,    25,   655,   nil,   nil,   nil,    26,    29,   nil,
    31,    34,    33,   nil,   205,   562,   nil,   115,   416,   114,
    69,   nil,    42,   532,   308,   nil,   248,   414,   602,   463,
   249,   nil,   nil,   264,    43,    44,    45,    46,    47,    48,
    49,   nil,   265,    55,   nil,   nil,   nil,   nil,   nil,   nil,
   549,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   321,   320,   671,   323,   nil,   324,
   325,   243,   nil,   420,   nil,   nil,   nil,   nil,   nil,   nil,
    68,    70,    71,    72,   nil,   nil,   nil,   nil,   579,   nil,
   nil,   nil,   nil,   379,   708,   710,   nil,   332,   327,   334,
   nil,   543,   544,   714,   337,   340,   256 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 138, :_reduce_1,
  2, 139, :_reduce_2,
  0, 140, :_reduce_3,
  1, 140, :_reduce_4,
  3, 140, :_reduce_5,
  1, 142, :_reduce_none,
  4, 142, :_reduce_7,
  4, 145, :_reduce_8,
  2, 146, :_reduce_9,
  0, 150, :_reduce_10,
  1, 150, :_reduce_11,
  3, 150, :_reduce_12,
  0, 164, :_reduce_13,
  4, 144, :_reduce_14,
  3, 144, :_reduce_15,
  3, 144, :_reduce_none,
  3, 144, :_reduce_17,
  2, 144, :_reduce_18,
  3, 144, :_reduce_19,
  3, 144, :_reduce_20,
  3, 144, :_reduce_21,
  3, 144, :_reduce_22,
  3, 144, :_reduce_23,
  4, 144, :_reduce_none,
  3, 144, :_reduce_25,
  3, 144, :_reduce_26,
  3, 144, :_reduce_27,
  6, 144, :_reduce_none,
  5, 144, :_reduce_29,
  5, 144, :_reduce_none,
  5, 144, :_reduce_none,
  3, 144, :_reduce_none,
  3, 144, :_reduce_33,
  3, 144, :_reduce_34,
  3, 144, :_reduce_35,
  1, 144, :_reduce_none,
  1, 163, :_reduce_none,
  3, 163, :_reduce_38,
  3, 163, :_reduce_39,
  2, 163, :_reduce_40,
  2, 163, :_reduce_41,
  1, 163, :_reduce_none,
  1, 153, :_reduce_none,
  1, 155, :_reduce_none,
  1, 155, :_reduce_none,
  2, 155, :_reduce_46,
  2, 155, :_reduce_47,
  2, 155, :_reduce_48,
  1, 167, :_reduce_none,
  4, 167, :_reduce_none,
  4, 167, :_reduce_none,
  4, 172, :_reduce_none,
  2, 166, :_reduce_53,
  3, 166, :_reduce_none,
  4, 166, :_reduce_55,
  5, 166, :_reduce_none,
  4, 166, :_reduce_57,
  5, 166, :_reduce_none,
  2, 166, :_reduce_59,
  2, 166, :_reduce_60,
  1, 156, :_reduce_61,
  3, 156, :_reduce_62,
  1, 176, :_reduce_63,
  3, 176, :_reduce_64,
  1, 175, :_reduce_65,
  2, 175, :_reduce_66,
  3, 175, :_reduce_67,
  5, 175, :_reduce_none,
  2, 175, :_reduce_69,
  4, 175, :_reduce_none,
  2, 175, :_reduce_71,
  1, 175, :_reduce_72,
  3, 175, :_reduce_none,
  1, 178, :_reduce_74,
  3, 178, :_reduce_75,
  2, 177, :_reduce_76,
  3, 177, :_reduce_77,
  1, 180, :_reduce_none,
  3, 180, :_reduce_none,
  1, 179, :_reduce_80,
  4, 179, :_reduce_81,
  3, 179, :_reduce_82,
  3, 179, :_reduce_none,
  3, 179, :_reduce_none,
  3, 179, :_reduce_none,
  2, 179, :_reduce_none,
  1, 179, :_reduce_none,
  1, 154, :_reduce_88,
  4, 154, :_reduce_89,
  3, 154, :_reduce_90,
  3, 154, :_reduce_91,
  3, 154, :_reduce_92,
  3, 154, :_reduce_93,
  2, 154, :_reduce_94,
  1, 154, :_reduce_none,
  1, 182, :_reduce_none,
  2, 183, :_reduce_97,
  1, 183, :_reduce_98,
  3, 183, :_reduce_99,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_103,
  1, 184, :_reduce_104,
  1, 151, :_reduce_105,
  1, 151, :_reduce_none,
  1, 152, :_reduce_107,
  3, 152, :_reduce_108,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  3, 165, :_reduce_182,
  5, 165, :_reduce_183,
  3, 165, :_reduce_184,
  6, 165, :_reduce_185,
  5, 165, :_reduce_186,
  5, 165, :_reduce_none,
  5, 165, :_reduce_none,
  5, 165, :_reduce_none,
  4, 165, :_reduce_none,
  3, 165, :_reduce_none,
  3, 165, :_reduce_192,
  3, 165, :_reduce_193,
  3, 165, :_reduce_194,
  3, 165, :_reduce_195,
  3, 165, :_reduce_196,
  3, 165, :_reduce_197,
  3, 165, :_reduce_198,
  3, 165, :_reduce_199,
  4, 165, :_reduce_none,
  4, 165, :_reduce_none,
  2, 165, :_reduce_202,
  2, 165, :_reduce_203,
  3, 165, :_reduce_204,
  3, 165, :_reduce_205,
  3, 165, :_reduce_206,
  3, 165, :_reduce_207,
  3, 165, :_reduce_208,
  3, 165, :_reduce_209,
  3, 165, :_reduce_210,
  3, 165, :_reduce_211,
  3, 165, :_reduce_212,
  3, 165, :_reduce_213,
  3, 165, :_reduce_214,
  3, 165, :_reduce_215,
  3, 165, :_reduce_216,
  2, 165, :_reduce_217,
  2, 165, :_reduce_218,
  3, 165, :_reduce_219,
  3, 165, :_reduce_220,
  3, 165, :_reduce_221,
  3, 165, :_reduce_222,
  3, 165, :_reduce_223,
  5, 165, :_reduce_224,
  1, 165, :_reduce_none,
  1, 162, :_reduce_none,
  1, 159, :_reduce_227,
  2, 159, :_reduce_228,
  2, 159, :_reduce_229,
  4, 159, :_reduce_230,
  2, 159, :_reduce_231,
  3, 194, :_reduce_232,
  4, 194, :_reduce_233,
  4, 194, :_reduce_none,
  6, 194, :_reduce_none,
  1, 195, :_reduce_none,
  1, 195, :_reduce_none,
  1, 168, :_reduce_238,
  2, 168, :_reduce_239,
  2, 168, :_reduce_240,
  4, 168, :_reduce_241,
  1, 168, :_reduce_242,
  4, 198, :_reduce_none,
  1, 198, :_reduce_none,
  0, 200, :_reduce_245,
  2, 171, :_reduce_246,
  1, 199, :_reduce_none,
  2, 199, :_reduce_248,
  3, 199, :_reduce_249,
  2, 197, :_reduce_250,
  2, 196, :_reduce_251,
  0, 196, :_reduce_252,
  1, 191, :_reduce_253,
  2, 191, :_reduce_254,
  3, 191, :_reduce_255,
  4, 191, :_reduce_256,
  3, 161, :_reduce_257,
  4, 161, :_reduce_none,
  2, 161, :_reduce_259,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  0, 221, :_reduce_269,
  4, 189, :_reduce_270,
  4, 189, :_reduce_271,
  3, 189, :_reduce_272,
  3, 189, :_reduce_273,
  2, 189, :_reduce_274,
  4, 189, :_reduce_275,
  3, 189, :_reduce_276,
  3, 189, :_reduce_277,
  1, 189, :_reduce_278,
  4, 189, :_reduce_279,
  3, 189, :_reduce_280,
  1, 189, :_reduce_281,
  5, 189, :_reduce_282,
  4, 189, :_reduce_283,
  3, 189, :_reduce_284,
  2, 189, :_reduce_285,
  1, 189, :_reduce_none,
  2, 189, :_reduce_287,
  2, 189, :_reduce_288,
  6, 189, :_reduce_289,
  6, 189, :_reduce_290,
  0, 222, :_reduce_291,
  0, 223, :_reduce_292,
  7, 189, :_reduce_293,
  0, 224, :_reduce_294,
  0, 225, :_reduce_295,
  7, 189, :_reduce_296,
  5, 189, :_reduce_297,
  4, 189, :_reduce_298,
  5, 189, :_reduce_299,
  0, 226, :_reduce_300,
  0, 227, :_reduce_301,
  9, 189, :_reduce_none,
  0, 228, :_reduce_303,
  0, 229, :_reduce_304,
  7, 189, :_reduce_305,
  0, 230, :_reduce_306,
  0, 231, :_reduce_307,
  8, 189, :_reduce_308,
  0, 232, :_reduce_309,
  0, 233, :_reduce_310,
  6, 189, :_reduce_311,
  0, 234, :_reduce_312,
  6, 189, :_reduce_313,
  0, 235, :_reduce_314,
  0, 236, :_reduce_315,
  9, 189, :_reduce_316,
  1, 189, :_reduce_317,
  1, 189, :_reduce_318,
  1, 189, :_reduce_319,
  1, 189, :_reduce_none,
  1, 158, :_reduce_none,
  1, 212, :_reduce_none,
  1, 212, :_reduce_none,
  1, 212, :_reduce_none,
  2, 212, :_reduce_none,
  1, 214, :_reduce_none,
  1, 214, :_reduce_none,
  1, 214, :_reduce_none,
  2, 211, :_reduce_329,
  3, 237, :_reduce_330,
  2, 237, :_reduce_331,
  1, 237, :_reduce_none,
  1, 237, :_reduce_none,
  3, 238, :_reduce_334,
  3, 238, :_reduce_335,
  1, 213, :_reduce_336,
  0, 240, :_reduce_337,
  6, 213, :_reduce_338,
  1, 148, :_reduce_none,
  2, 148, :_reduce_340,
  1, 241, :_reduce_341,
  3, 241, :_reduce_342,
  3, 242, :_reduce_343,
  1, 173, :_reduce_none,
  2, 173, :_reduce_345,
  1, 173, :_reduce_346,
  3, 173, :_reduce_347,
  1, 243, :_reduce_348,
  2, 245, :_reduce_349,
  1, 245, :_reduce_350,
  6, 239, :_reduce_351,
  4, 239, :_reduce_352,
  4, 239, :_reduce_353,
  2, 239, :_reduce_354,
  2, 239, :_reduce_355,
  4, 239, :_reduce_356,
  2, 239, :_reduce_357,
  2, 239, :_reduce_358,
  1, 239, :_reduce_359,
  0, 249, :_reduce_360,
  5, 248, :_reduce_361,
  2, 169, :_reduce_362,
  4, 169, :_reduce_none,
  4, 169, :_reduce_none,
  2, 210, :_reduce_365,
  4, 210, :_reduce_366,
  3, 210, :_reduce_367,
  4, 210, :_reduce_368,
  3, 210, :_reduce_369,
  2, 210, :_reduce_370,
  1, 210, :_reduce_371,
  0, 251, :_reduce_372,
  5, 209, :_reduce_373,
  0, 252, :_reduce_374,
  5, 209, :_reduce_375,
  0, 254, :_reduce_376,
  6, 215, :_reduce_377,
  1, 253, :_reduce_378,
  1, 253, :_reduce_none,
  6, 147, :_reduce_380,
  0, 147, :_reduce_381,
  1, 255, :_reduce_382,
  1, 255, :_reduce_none,
  1, 255, :_reduce_none,
  2, 256, :_reduce_385,
  1, 256, :_reduce_386,
  2, 149, :_reduce_387,
  1, 149, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 202, :_reduce_392,
  1, 259, :_reduce_none,
  2, 259, :_reduce_none,
  3, 260, :_reduce_395,
  1, 260, :_reduce_396,
  3, 203, :_reduce_397,
  3, 204, :_reduce_398,
  3, 205, :_reduce_399,
  3, 205, :_reduce_400,
  1, 263, :_reduce_401,
  3, 263, :_reduce_402,
  1, 264, :_reduce_403,
  2, 264, :_reduce_404,
  3, 206, :_reduce_405,
  3, 206, :_reduce_406,
  1, 266, :_reduce_407,
  3, 266, :_reduce_408,
  1, 261, :_reduce_409,
  2, 261, :_reduce_410,
  1, 262, :_reduce_411,
  2, 262, :_reduce_412,
  1, 265, :_reduce_413,
  0, 268, :_reduce_414,
  3, 265, :_reduce_415,
  0, 269, :_reduce_416,
  4, 265, :_reduce_417,
  1, 267, :_reduce_418,
  1, 267, :_reduce_419,
  1, 267, :_reduce_420,
  1, 267, :_reduce_none,
  2, 187, :_reduce_422,
  1, 187, :_reduce_423,
  1, 270, :_reduce_none,
  1, 270, :_reduce_none,
  1, 270, :_reduce_none,
  1, 270, :_reduce_none,
  3, 258, :_reduce_428,
  1, 257, :_reduce_429,
  1, 257, :_reduce_430,
  2, 257, :_reduce_none,
  2, 257, :_reduce_none,
  1, 181, :_reduce_433,
  1, 181, :_reduce_434,
  1, 181, :_reduce_435,
  1, 181, :_reduce_436,
  1, 181, :_reduce_437,
  1, 181, :_reduce_438,
  1, 181, :_reduce_439,
  1, 181, :_reduce_440,
  1, 181, :_reduce_441,
  1, 181, :_reduce_442,
  1, 181, :_reduce_443,
  1, 207, :_reduce_444,
  1, 157, :_reduce_445,
  1, 160, :_reduce_446,
  1, 160, :_reduce_none,
  1, 216, :_reduce_448,
  3, 216, :_reduce_449,
  2, 216, :_reduce_450,
  4, 218, :_reduce_451,
  2, 218, :_reduce_452,
  6, 271, :_reduce_453,
  4, 271, :_reduce_454,
  4, 271, :_reduce_455,
  2, 271, :_reduce_456,
  4, 271, :_reduce_457,
  2, 271, :_reduce_458,
  2, 271, :_reduce_459,
  1, 271, :_reduce_460,
  0, 271, :_reduce_461,
  1, 274, :_reduce_none,
  1, 274, :_reduce_463,
  1, 275, :_reduce_464,
  1, 275, :_reduce_465,
  1, 275, :_reduce_466,
  1, 275, :_reduce_467,
  1, 276, :_reduce_468,
  3, 276, :_reduce_469,
  1, 278, :_reduce_470,
  3, 278, :_reduce_none,
  1, 279, :_reduce_472,
  3, 279, :_reduce_473,
  1, 277, :_reduce_none,
  4, 277, :_reduce_none,
  3, 277, :_reduce_none,
  2, 277, :_reduce_none,
  1, 277, :_reduce_none,
  1, 246, :_reduce_479,
  3, 246, :_reduce_480,
  3, 280, :_reduce_481,
  1, 272, :_reduce_482,
  3, 272, :_reduce_483,
  1, 281, :_reduce_none,
  1, 281, :_reduce_none,
  2, 247, :_reduce_486,
  1, 247, :_reduce_487,
  1, 282, :_reduce_none,
  1, 282, :_reduce_none,
  2, 244, :_reduce_490,
  2, 273, :_reduce_491,
  0, 273, :_reduce_492,
  1, 219, :_reduce_493,
  4, 219, :_reduce_494,
  0, 208, :_reduce_495,
  2, 208, :_reduce_496,
  1, 193, :_reduce_497,
  3, 193, :_reduce_498,
  3, 283, :_reduce_499,
  2, 283, :_reduce_500,
  1, 174, :_reduce_none,
  1, 174, :_reduce_none,
  1, 174, :_reduce_none,
  1, 170, :_reduce_none,
  1, 170, :_reduce_none,
  1, 170, :_reduce_none,
  1, 170, :_reduce_none,
  1, 250, :_reduce_none,
  1, 250, :_reduce_none,
  1, 250, :_reduce_none,
  1, 220, :_reduce_none,
  1, 220, :_reduce_none,
  0, 141, :_reduce_none,
  1, 141, :_reduce_none,
  0, 188, :_reduce_none,
  1, 188, :_reduce_none,
  0, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 217, :_reduce_none,
  1, 217, :_reduce_none,
  1, 143, :_reduce_none,
  2, 143, :_reduce_none,
  0, 190, :_reduce_524 ]

racc_reduce_n = 525

racc_shift_n = 911

racc_token_table = {
  false => 0,
  :error => 1,
  :kCLASS => 2,
  :kMODULE => 3,
  :kDEF => 4,
  :kUNDEF => 5,
  :kBEGIN => 6,
  :kRESCUE => 7,
  :kENSURE => 8,
  :kEND => 9,
  :kIF => 10,
  :kUNLESS => 11,
  :kTHEN => 12,
  :kELSIF => 13,
  :kELSE => 14,
  :kCASE => 15,
  :kWHEN => 16,
  :kWHILE => 17,
  :kUNTIL => 18,
  :kFOR => 19,
  :kBREAK => 20,
  :kNEXT => 21,
  :kREDO => 22,
  :kRETRY => 23,
  :kIN => 24,
  :kDO => 25,
  :kDO_COND => 26,
  :kDO_BLOCK => 27,
  :kRETURN => 28,
  :kYIELD => 29,
  :kSUPER => 30,
  :kSELF => 31,
  :kNIL => 32,
  :kTRUE => 33,
  :kFALSE => 34,
  :kAND => 35,
  :kOR => 36,
  :kNOT => 37,
  :kIF_MOD => 38,
  :kUNLESS_MOD => 39,
  :kWHILE_MOD => 40,
  :kUNTIL_MOD => 41,
  :kRESCUE_MOD => 42,
  :kALIAS => 43,
  :kDEFINED => 44,
  :klBEGIN => 45,
  :klEND => 46,
  :k__LINE__ => 47,
  :k__FILE__ => 48,
  :tIDENTIFIER => 49,
  :tFID => 50,
  :tGVAR => 51,
  :tIVAR => 52,
  :tCONSTANT => 53,
  :tCVAR => 54,
  :tNTH_REF => 55,
  :tBACK_REF => 56,
  :tSTRING_CONTENT => 57,
  :tINTEGER => 58,
  :tFLOAT => 59,
  :tREGEXP_END => 60,
  "+@" => 61,
  "-@" => 62,
  "-@NUM" => 63,
  :tPOW => 64,
  :tCMP => 65,
  :tEQ => 66,
  :tEQQ => 67,
  :tNEQ => 68,
  :tGEQ => 69,
  :tLEQ => 70,
  :tANDOP => 71,
  :tOROP => 72,
  :tMATCH => 73,
  :tNMATCH => 74,
  :tDOT => 75,
  :tDOT2 => 76,
  :tDOT3 => 77,
  :tAREF => 78,
  :tASET => 79,
  :tLSHFT => 80,
  :tRSHFT => 81,
  :tCOLON2 => 82,
  :tCOLON3 => 83,
  :tOP_ASGN => 84,
  :tASSOC => 85,
  :tLPAREN => 86,
  :tLPAREN2 => 87,
  :tRPAREN => 88,
  :tLPAREN_ARG => 89,
  :ARRAY_BEG => 90,
  :tRBRACK => 91,
  :tLBRACE => 92,
  :tLBRACE_ARG => 93,
  :tSTAR => 94,
  :tSTAR2 => 95,
  :tAMPER => 96,
  :tAMPER2 => 97,
  :tTILDE => 98,
  :tPERCENT => 99,
  :tDIVIDE => 100,
  "+" => 101,
  "-" => 102,
  :tLT => 103,
  :tGT => 104,
  :tPIPE => 105,
  :tBANG => 106,
  :tCARET => 107,
  :tLCURLY => 108,
  :tRCURLY => 109,
  :tBACK_REF2 => 110,
  :tSYMBEG => 111,
  :tSTRING_BEG => 112,
  :tXSTRING_BEG => 113,
  :tREGEXP_BEG => 114,
  :tWORDS_BEG => 115,
  :tAWORDS_BEG => 116,
  :tSTRING_DBEG => 117,
  :tSTRING_DVAR => 118,
  :tSTRING_END => 119,
  :tSTRING => 120,
  :tSYMBOL => 121,
  :tNL => 122,
  :tEH => 123,
  :tCOLON => 124,
  :tCOMMA => 125,
  :tSPACE => 126,
  :tSEMI => 127,
  :tLABEL => 128,
  :tLAMBDA => 129,
  :tLAMBEG => 130,
  :kDO_LAMBDA => 131,
  :tLBRACK2 => 132,
  :tLBRACK => 133,
  :tEQL => 134,
  :tLOWEST => 135,
  "{" => 136 }

racc_nt_base = 137

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "kCLASS",
  "kMODULE",
  "kDEF",
  "kUNDEF",
  "kBEGIN",
  "kRESCUE",
  "kENSURE",
  "kEND",
  "kIF",
  "kUNLESS",
  "kTHEN",
  "kELSIF",
  "kELSE",
  "kCASE",
  "kWHEN",
  "kWHILE",
  "kUNTIL",
  "kFOR",
  "kBREAK",
  "kNEXT",
  "kREDO",
  "kRETRY",
  "kIN",
  "kDO",
  "kDO_COND",
  "kDO_BLOCK",
  "kRETURN",
  "kYIELD",
  "kSUPER",
  "kSELF",
  "kNIL",
  "kTRUE",
  "kFALSE",
  "kAND",
  "kOR",
  "kNOT",
  "kIF_MOD",
  "kUNLESS_MOD",
  "kWHILE_MOD",
  "kUNTIL_MOD",
  "kRESCUE_MOD",
  "kALIAS",
  "kDEFINED",
  "klBEGIN",
  "klEND",
  "k__LINE__",
  "k__FILE__",
  "tIDENTIFIER",
  "tFID",
  "tGVAR",
  "tIVAR",
  "tCONSTANT",
  "tCVAR",
  "tNTH_REF",
  "tBACK_REF",
  "tSTRING_CONTENT",
  "tINTEGER",
  "tFLOAT",
  "tREGEXP_END",
  "\"+@\"",
  "\"-@\"",
  "\"-@NUM\"",
  "tPOW",
  "tCMP",
  "tEQ",
  "tEQQ",
  "tNEQ",
  "tGEQ",
  "tLEQ",
  "tANDOP",
  "tOROP",
  "tMATCH",
  "tNMATCH",
  "tDOT",
  "tDOT2",
  "tDOT3",
  "tAREF",
  "tASET",
  "tLSHFT",
  "tRSHFT",
  "tCOLON2",
  "tCOLON3",
  "tOP_ASGN",
  "tASSOC",
  "tLPAREN",
  "tLPAREN2",
  "tRPAREN",
  "tLPAREN_ARG",
  "ARRAY_BEG",
  "tRBRACK",
  "tLBRACE",
  "tLBRACE_ARG",
  "tSTAR",
  "tSTAR2",
  "tAMPER",
  "tAMPER2",
  "tTILDE",
  "tPERCENT",
  "tDIVIDE",
  "\"+\"",
  "\"-\"",
  "tLT",
  "tGT",
  "tPIPE",
  "tBANG",
  "tCARET",
  "tLCURLY",
  "tRCURLY",
  "tBACK_REF2",
  "tSYMBEG",
  "tSTRING_BEG",
  "tXSTRING_BEG",
  "tREGEXP_BEG",
  "tWORDS_BEG",
  "tAWORDS_BEG",
  "tSTRING_DBEG",
  "tSTRING_DVAR",
  "tSTRING_END",
  "tSTRING",
  "tSYMBOL",
  "tNL",
  "tEH",
  "tCOLON",
  "tCOMMA",
  "tSPACE",
  "tSEMI",
  "tLABEL",
  "tLAMBDA",
  "tLAMBEG",
  "kDO_LAMBDA",
  "tLBRACK2",
  "tLBRACK",
  "tEQL",
  "tLOWEST",
  "\"{\"",
  "$start",
  "program",
  "top_compstmt",
  "top_stmts",
  "opt_terms",
  "top_stmt",
  "terms",
  "stmt",
  "bodystmt",
  "compstmt",
  "opt_rescue",
  "opt_else",
  "opt_ensure",
  "stmts",
  "fitem",
  "undef_list",
  "expr_value",
  "lhs",
  "command_call",
  "mlhs",
  "var_lhs",
  "primary_value",
  "aref_args",
  "backref",
  "mrhs",
  "arg_value",
  "expr",
  "@1",
  "arg",
  "command",
  "block_command",
  "call_args",
  "block_call",
  "operation2",
  "command_args",
  "cmd_brace_block",
  "opt_block_var",
  "operation",
  "mlhs_basic",
  "mlhs_entry",
  "mlhs_head",
  "mlhs_item",
  "mlhs_node",
  "mlhs_post",
  "variable",
  "cname",
  "cpath",
  "fname",
  "op",
  "reswords",
  "symbol",
  "opt_nl",
  "primary",
  "none",
  "args",
  "trailer",
  "assocs",
  "paren_args",
  "opt_paren_args",
  "opt_block_arg",
  "block_arg",
  "call_args2",
  "open_args",
  "@2",
  "literal",
  "strings",
  "xstring",
  "regexp",
  "words",
  "awords",
  "var_ref",
  "assoc_list",
  "brace_block",
  "method_call",
  "lambda",
  "then",
  "if_tail",
  "do",
  "case_body",
  "superclass",
  "term",
  "f_arglist",
  "singleton",
  "dot_or_colon",
  "@3",
  "@4",
  "@5",
  "@6",
  "@7",
  "@8",
  "@9",
  "@10",
  "@11",
  "@12",
  "@13",
  "@14",
  "@15",
  "@16",
  "@17",
  "@18",
  "f_larglist",
  "lambda_body",
  "block_param",
  "@19",
  "f_block_optarg",
  "f_block_opt",
  "block_args_tail",
  "f_block_arg",
  "opt_block_args_tail",
  "f_arg",
  "f_rest_arg",
  "do_block",
  "@20",
  "operation3",
  "@21",
  "@22",
  "cases",
  "@23",
  "exc_list",
  "exc_var",
  "numeric",
  "dsym",
  "string",
  "string1",
  "string_contents",
  "xstring_contents",
  "word_list",
  "word",
  "string_content",
  "qword_list",
  "string_dvar",
  "@24",
  "@25",
  "sym",
  "f_args",
  "f_optarg",
  "opt_f_block_arg",
  "f_norm_arg",
  "f_bad_arg",
  "f_arg_item",
  "f_margs",
  "f_marg",
  "f_marg_list",
  "f_opt",
  "restarg_mark",
  "blkarg_mark",
  "assoc" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

def _reduce_1(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_2(val, _values, result)
                      comp = new_compstmt val[0]
                      if comp and comp.type == :begin and comp.size == 2
                        result = comp[1]
                        result.line = comp.line
                      else
                        result = comp
                      end
                    
    result
end

def _reduce_3(val, _values, result)
                      result = new_block
                    
    result
end

def _reduce_4(val, _values, result)
                      result = new_block val[0]
                    
    result
end

def _reduce_5(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

# reduce 6 omitted

def _reduce_7(val, _values, result)
                      result = val[2]
                    
    result
end

def _reduce_8(val, _values, result)
                      result = new_body val[0], val[1], val[2], val[3]
                    
    result
end

def _reduce_9(val, _values, result)
                      comp = new_compstmt val[0]
                      if comp and comp.type == :begin and comp.size == 2
                        result = comp[1]
                        result.line = comp.line
                      else
                        result = comp
                      end
                    
    result
end

def _reduce_10(val, _values, result)
                      result = new_block
                    
    result
end

def _reduce_11(val, _values, result)
                      result = new_block val[0]
                    
    result
end

def _reduce_12(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_13(val, _values, result)
                      lexer.lex_state = :expr_fname
                    
    result
end

def _reduce_14(val, _values, result)
                      result = s(:alias, val[1], val[3])
                    
    result
end

def _reduce_15(val, _values, result)
                      result = s(:valias, val[1].intern, val[2].intern)
                    
    result
end

# reduce 16 omitted

def _reduce_17(val, _values, result)
                      result = s(:valias, val[1].intern, val[2].intern)
                    
    result
end

def _reduce_18(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_19(val, _values, result)
                      result = new_if val[2], val[0], nil
                    
    result
end

def _reduce_20(val, _values, result)
                      result = new_if val[2], nil, val[0]
                    
    result
end

def _reduce_21(val, _values, result)
                      result = s(:while, val[2], val[0], true)
                    
    result
end

def _reduce_22(val, _values, result)
                      result = s(:until, val[2], val[0], true)
                    
    result
end

def _reduce_23(val, _values, result)
                      result = s(:rescue_mod, val[0], val[2])
                    
    result
end

# reduce 24 omitted

def _reduce_25(val, _values, result)
                      result = new_assign val[0], val[2]
                    
    result
end

def _reduce_26(val, _values, result)
                      result = s(:masgn, val[0], s(:to_ary, val[2]))
                    
    result
end

def _reduce_27(val, _values, result)
                      result = new_op_asgn val[1].intern, val[0], val[2]
                    
    result
end

# reduce 28 omitted

def _reduce_29(val, _values, result)
                      result = s(:op_asgn2, val[0], "#{val[2]}=".intern, val[3].intern, val[4])
                    
    result
end

# reduce 30 omitted

# reduce 31 omitted

# reduce 32 omitted

def _reduce_33(val, _values, result)
                      result = new_assign val[0], s(:svalue, val[2])
                    
    result
end

def _reduce_34(val, _values, result)
                      result = s(:masgn, val[0], s(:to_ary, val[2]))
                    
    result
end

def _reduce_35(val, _values, result)
                      result = s(:masgn, val[0], val[2])
                    
    result
end

# reduce 36 omitted

# reduce 37 omitted

def _reduce_38(val, _values, result)
                      result = s(:and, val[0], val[2])
                      result.line = val[0].line
                    
    result
end

def _reduce_39(val, _values, result)
                      result = s(:or, val[0], val[2])
                      result.line = val[0].line
                    
    result
end

def _reduce_40(val, _values, result)
                      result = s(:not, val[1])
                      result.line = val[1].line
                    
    result
end

def _reduce_41(val, _values, result)
                      result = s(:not, val[1])
                    
    result
end

# reduce 42 omitted

# reduce 43 omitted

# reduce 44 omitted

# reduce 45 omitted

def _reduce_46(val, _values, result)
                      args = val[1]
                      args = args[1] if args.size == 2
                      result = s(:return, args)
                    
    result
end

def _reduce_47(val, _values, result)
                      args = val[1]
                      args = args[1] if args.size == 2
                      result = s(:break, args)
                    
    result
end

def _reduce_48(val, _values, result)
                      args = val[1]
                      args = args[1] if args.size == 2
                      result = s(:next, args)
                    
    result
end

# reduce 49 omitted

# reduce 50 omitted

# reduce 51 omitted

# reduce 52 omitted

def _reduce_53(val, _values, result)
                      result = new_call nil, val[0].intern, val[1]
                    
    result
end

# reduce 54 omitted

def _reduce_55(val, _values, result)
                      result = new_call val[0], val[2].intern, val[3]
                    
    result
end

# reduce 56 omitted

def _reduce_57(val, _values, result)
                    result = new_call val[0], val[2].intern, val[3]
                  
    result
end

# reduce 58 omitted

def _reduce_59(val, _values, result)
                      result = new_super val[1]
                    
    result
end

def _reduce_60(val, _values, result)
                      result = new_yield val[1]
                    
    result
end

def _reduce_61(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_62(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_63(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_64(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_65(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_66(val, _values, result)
                      result = val[0] << val[1]
                    
    result
end

def _reduce_67(val, _values, result)
                      result = val[0] << s(:splat, val[2])
                    
    result
end

# reduce 68 omitted

def _reduce_69(val, _values, result)
                      result = val[0] << s(:splat)
                    
    result
end

# reduce 70 omitted

def _reduce_71(val, _values, result)
                      result = s(:array, s(:splat, val[1]))
                    
    result
end

def _reduce_72(val, _values, result)
                      result = s(:array, s(:splat))
                    
    result
end

# reduce 73 omitted

def _reduce_74(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_75(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_76(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

def _reduce_77(val, _values, result)
                      result = val[0] << val[1]
                    
    result
end

# reduce 78 omitted

# reduce 79 omitted

def _reduce_80(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_81(val, _values, result)
                      args = val[2]
                      args.type = :arglist if args.type == :array
                      result = s(:attrasgn, val[0], :[]=, args)
                    
    result
end

def _reduce_82(val, _values, result)
                      result = new_call val[0], val[2].intern, s(:arglist)
                    
    result
end

# reduce 83 omitted

# reduce 84 omitted

# reduce 85 omitted

# reduce 86 omitted

# reduce 87 omitted

def _reduce_88(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_89(val, _values, result)
                      args = val[2]
                      args.type = :arglist if args.type == :array
                      result = s(:attrasgn, val[0], :[]=, args)
                    
    result
end

def _reduce_90(val, _values, result)
                      result = s(:attrasgn, val[0], "#{val[2]}=".intern, s(:arglist))
                    
    result
end

def _reduce_91(val, _values, result)
                      result = s(:attrasgn, val[0], "#{val[2]}=".intern, s(:arglist))
                    
    result
end

def _reduce_92(val, _values, result)
                      result = s(:attrasgn, val[0], "#{val[2]}=".intern, s(:arglist))
                    
    result
end

def _reduce_93(val, _values, result)
                      result = s(:colon2, val[0], val[2].intern)
                    
    result
end

def _reduce_94(val, _values, result)
                      result = s(:colon3, val[1].intern)
                    
    result
end

# reduce 95 omitted

# reduce 96 omitted

def _reduce_97(val, _values, result)
                      result = s(:colon3, val[1].intern)
                    
    result
end

def _reduce_98(val, _values, result)
                      result = val[0].intern
                    
    result
end

def _reduce_99(val, _values, result)
                      result = s(:colon2, val[0], val[2].intern)
                    
    result
end

# reduce 100 omitted

# reduce 101 omitted

# reduce 102 omitted

def _reduce_103(val, _values, result)
                      lexer.lex_state = :expr_end
                      result = val[0]
                    
    result
end

def _reduce_104(val, _values, result)
                      lexer.lex_state = :expr_end
                      result = val[0]
                    
    result
end

def _reduce_105(val, _values, result)
                      result = s(:sym, val[0].intern)
                    
    result
end

# reduce 106 omitted

def _reduce_107(val, _values, result)
                      result = s(:undef, val[0])
                    
    result
end

def _reduce_108(val, _values, result)
                      result = val[0] << val[2]
                    
    result
end

# reduce 109 omitted

# reduce 110 omitted

# reduce 111 omitted

# reduce 112 omitted

# reduce 113 omitted

# reduce 114 omitted

# reduce 115 omitted

# reduce 116 omitted

# reduce 117 omitted

# reduce 118 omitted

# reduce 119 omitted

# reduce 120 omitted

# reduce 121 omitted

# reduce 122 omitted

# reduce 123 omitted

# reduce 124 omitted

# reduce 125 omitted

# reduce 126 omitted

# reduce 127 omitted

# reduce 128 omitted

# reduce 129 omitted

# reduce 130 omitted

# reduce 131 omitted

# reduce 132 omitted

# reduce 133 omitted

# reduce 134 omitted

# reduce 135 omitted

# reduce 136 omitted

# reduce 137 omitted

# reduce 138 omitted

# reduce 139 omitted

# reduce 140 omitted

# reduce 141 omitted

# reduce 142 omitted

# reduce 143 omitted

# reduce 144 omitted

# reduce 145 omitted

# reduce 146 omitted

# reduce 147 omitted

# reduce 148 omitted

# reduce 149 omitted

# reduce 150 omitted

# reduce 151 omitted

# reduce 152 omitted

# reduce 153 omitted

# reduce 154 omitted

# reduce 155 omitted

# reduce 156 omitted

# reduce 157 omitted

# reduce 158 omitted

# reduce 159 omitted

# reduce 160 omitted

# reduce 161 omitted

# reduce 162 omitted

# reduce 163 omitted

# reduce 164 omitted

# reduce 165 omitted

# reduce 166 omitted

# reduce 167 omitted

# reduce 168 omitted

# reduce 169 omitted

# reduce 170 omitted

# reduce 171 omitted

# reduce 172 omitted

# reduce 173 omitted

# reduce 174 omitted

# reduce 175 omitted

# reduce 176 omitted

# reduce 177 omitted

# reduce 178 omitted

# reduce 179 omitted

# reduce 180 omitted

# reduce 181 omitted

def _reduce_182(val, _values, result)
                      result = new_assign val[0], val[2]
                    
    result
end

def _reduce_183(val, _values, result)
                      result = new_assign val[0], s(:rescue_mod, val[2], val[4])
                    
    result
end

def _reduce_184(val, _values, result)
                      result = new_op_asgn val[1].intern, val[0], val[2]
                    
    result
end

def _reduce_185(val, _values, result)
                      args = val[2]
                      args.type = :arglist if args.type == :array
                      result = s(:op_asgn1, val[0], val[2], val[4].intern, val[5])
                      result.line = val[0].line
                    
    result
end

def _reduce_186(val, _values, result)
                      result = s(:op_asgn2, val[0], "#{val[2]}=".intern, val[3].intern, val[4])
                    
    result
end

# reduce 187 omitted

# reduce 188 omitted

# reduce 189 omitted

# reduce 190 omitted

# reduce 191 omitted

def _reduce_192(val, _values, result)
                      result = s(:dot2, val[0], val[2])
                      result.line = val[0].line
                    
    result
end

def _reduce_193(val, _values, result)
                      result = s(:dot3, val[0], val[2])
                      result.line = val[0].line
                    
    result
end

def _reduce_194(val, _values, result)
                      result = new_call val[0], :"+", s(:arglist, val[2])
                    
    result
end

def _reduce_195(val, _values, result)
                      result = new_call val[0], :"-", s(:arglist, val[2])
                    
    result
end

def _reduce_196(val, _values, result)
                      result = new_call val[0], :"*", s(:arglist, val[2])
                    
    result
end

def _reduce_197(val, _values, result)
                      result = new_call val[0], :"/", s(:arglist, val[2])
                    
    result
end

def _reduce_198(val, _values, result)
                      result = new_call val[0], :"%", s(:arglist, val[2])
                    
    result
end

def _reduce_199(val, _values, result)
                      result = new_call val[0], :"**", s(:arglist, val[2])
                    
    result
end

# reduce 200 omitted

# reduce 201 omitted

def _reduce_202(val, _values, result)
                      result = new_call val[1], :"+@", s(:arglist)
                      result = val[1] if [:int, :float].include? val[1].type
                    
    result
end

def _reduce_203(val, _values, result)
                      result = new_call val[1], :"-@", s(:arglist)
                      if val[1].type == :int
                        val[1][1] = -val[1][1]
                        result = val[1]
                      elsif val[1].type == :float
                        val[1][1] = -val[1][1].to_f
                        result = val[1]
                      end
                    
    result
end

def _reduce_204(val, _values, result)
                      result = new_call val[0], :"|", s(:arglist, val[2])
                    
    result
end

def _reduce_205(val, _values, result)
                      result = new_call val[0], :"^", s(:arglist, val[2])
                    
    result
end

def _reduce_206(val, _values, result)
                      result = new_call val[0], :"&", s(:arglist, val[2])
                    
    result
end

def _reduce_207(val, _values, result)
                      result = new_call val[0], :"<=>", s(:arglist, val[2])
                    
    result
end

def _reduce_208(val, _values, result)
                      result = new_call val[0], :">", s(:arglist, val[2])
                    
    result
end

def _reduce_209(val, _values, result)
                      result = new_call val[0], :">=", s(:arglist, val[2])
                    
    result
end

def _reduce_210(val, _values, result)
                      result = new_call val[0], :"<", s(:arglist, val[2])
                    
    result
end

def _reduce_211(val, _values, result)
                      result = new_call val[0], :"<=", s(:arglist, val[2])
                    
    result
end

def _reduce_212(val, _values, result)
                      result = new_call val[0], :"==", s(:arglist, val[2])
                    
    result
end

def _reduce_213(val, _values, result)
                      result = new_call val[0], :"===", s(:arglist, val[2])
                    
    result
end

def _reduce_214(val, _values, result)
                      result = s(:not, new_call(val[0], :"==", s(:arglist, val[2])))
                    
    result
end

def _reduce_215(val, _values, result)
                      result = new_call val[0], :"=~", s(:arglist, val[2])
                    
    result
end

def _reduce_216(val, _values, result)
                      result = s(:not, new_call(val[0], :"=~", s(:arglist, val[2])))
                    
    result
end

def _reduce_217(val, _values, result)
                      result = s(:not, val[1])
                    
    result
end

def _reduce_218(val, _values, result)
                      result = new_call val[1], :"~", s(:arglist)
                    
    result
end

def _reduce_219(val, _values, result)
                      result = new_call val[0], :"<<", s(:arglist, val[2])
                    
    result
end

def _reduce_220(val, _values, result)
                      result = new_call val[0], :">>", s(:arglist, val[2])
                    
    result
end

def _reduce_221(val, _values, result)
                      result = s(:and, val[0], val[2])
                      result.line = val[0].line
                    
    result
end

def _reduce_222(val, _values, result)
                      result = s(:or, val[0], val[2])
                      result.line = val[0].line
                    
    result
end

def _reduce_223(val, _values, result)
                      result = s(:defined, val[2])
                    
    result
end

def _reduce_224(val, _values, result)
                      result = s(:if, val[0], val[2], val[4])
                      result.line = val[0].line
                    
    result
end

# reduce 225 omitted

# reduce 226 omitted

def _reduce_227(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_228(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

def _reduce_229(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_230(val, _values, result)
                      val[0] << s(:hash, *val[2])
                      result = val[0]
                    
    result
end

def _reduce_231(val, _values, result)
                      result = s(:array, s(:hash, *val[0]))
                    
    result
end

def _reduce_232(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_233(val, _values, result)
                      result = val[1]
                    
    result
end

# reduce 234 omitted

# reduce 235 omitted

# reduce 236 omitted

# reduce 237 omitted

def _reduce_238(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

def _reduce_239(val, _values, result)
                      result = val[0]
                      add_block_pass val[0], val[1]
                    
    result
end

def _reduce_240(val, _values, result)
                      result = s(:arglist, s(:hash, *val[0]))
                      add_block_pass result, val[1]
                    
    result
end

def _reduce_241(val, _values, result)
                      result = val[0]
                      result << s(:hash, *val[2])
                    
    result
end

def _reduce_242(val, _values, result)
                      result = s(:arglist)
                      add_block_pass result, val[0]
                    
    result
end

# reduce 243 omitted

# reduce 244 omitted

def _reduce_245(val, _values, result)
                      lexer.cmdarg_push 1
                    
    result
end

def _reduce_246(val, _values, result)
                      lexer.cmdarg_pop
                      result = val[1]
                    
    result
end

# reduce 247 omitted

def _reduce_248(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_249(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_250(val, _values, result)
                      result = s(:block_pass, val[1])
                    
    result
end

def _reduce_251(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_252(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_253(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

def _reduce_254(val, _values, result)
                      result = s(:array, s(:splat, val[1]))
                    
    result
end

def _reduce_255(val, _values, result)
                      result = val[0] << val[2]
                    
    result
end

def _reduce_256(val, _values, result)
                      result  = val[0] << s(:splat, val[3])
                    
    result
end

def _reduce_257(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

# reduce 258 omitted

def _reduce_259(val, _values, result)
                      result = s(:splat, val[1])
                    
    result
end

# reduce 260 omitted

# reduce 261 omitted

# reduce 262 omitted

# reduce 263 omitted

# reduce 264 omitted

# reduce 265 omitted

# reduce 266 omitted

# reduce 267 omitted

# reduce 268 omitted

def _reduce_269(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_270(val, _values, result)
                      result = s(:begin, val[2])
                      result.line = val[1]
                    
    result
end

def _reduce_271(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_272(val, _values, result)
                      result = s(:paren, val[1] || s(:nil))
                    
    result
end

def _reduce_273(val, _values, result)
                      result = s(:colon2, val[0], val[2].intern)
                    
    result
end

def _reduce_274(val, _values, result)
                      result = s(:colon3, val[1])
                    
    result
end

def _reduce_275(val, _values, result)
                      result = new_call val[0], :[], val[2]
                    
    result
end

def _reduce_276(val, _values, result)
                      result = val[1] || s(:array)
                    
    result
end

def _reduce_277(val, _values, result)
                      result = s(:hash, *val[1])
                    
    result
end

def _reduce_278(val, _values, result)
                      result = s(:return)
                    
    result
end

def _reduce_279(val, _values, result)
                      result = new_yield val[2]
                    
    result
end

def _reduce_280(val, _values, result)
                      result = s(:yield)
                    
    result
end

def _reduce_281(val, _values, result)
                      result = s(:yield)
                    
    result
end

def _reduce_282(val, _values, result)
                      result = s(:defined, val[3])
                    
    result
end

def _reduce_283(val, _values, result)
                      result = s(:not, val[2])
                      result.line = val[2].line
                    
    result
end

def _reduce_284(val, _values, result)
                      result = s(:not, s(:nil))
                    
    result
end

def _reduce_285(val, _values, result)
                      result = new_call nil, val[0].intern, s(:arglist)
                      result << val[1]
                    
    result
end

# reduce 286 omitted

def _reduce_287(val, _values, result)
                      val[0] << val[1]
                      result = val[0]
                    
    result
end

def _reduce_288(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_289(val, _values, result)
                      result = new_if val[1], val[3], val[4]
                    
    result
end

def _reduce_290(val, _values, result)
                      result = new_if val[1], val[4], val[3]
                    
    result
end

def _reduce_291(val, _values, result)
                      lexer.cond_push 1
                      result = lexer.line
                    
    result
end

def _reduce_292(val, _values, result)
                      lexer.cond_pop
                    
    result
end

def _reduce_293(val, _values, result)
                      result = s(:while, val[2], val[5], true)
                      result.line = val[1]
                    
    result
end

def _reduce_294(val, _values, result)
                      lexer.cond_push 1
                      result = lexer.line
                    
    result
end

def _reduce_295(val, _values, result)
                      lexer.cond_pop
                    
    result
end

def _reduce_296(val, _values, result)
                      result = s(:until, val[2], val[5], true)
                      result.line = val[1]
                    
    result
end

def _reduce_297(val, _values, result)
                      result = s(:case, val[1], *val[3])
                      result.line = val[1].line
                    
    result
end

def _reduce_298(val, _values, result)
                      result = s(:case, nil, *val[2])
                      # result.line = val[2].line
                    
    result
end

def _reduce_299(val, _values, result)
                      result = s(:case, nil, val[3])
                      # result.line = val[3].line
                    
    result
end

def _reduce_300(val, _values, result)
                      # ...
                    
    result
end

def _reduce_301(val, _values, result)
                      # ...
                    
    result
end

# reduce 302 omitted

def _reduce_303(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_304(val, _values, result)
                      # ...
                    
    result
end

def _reduce_305(val, _values, result)
                      result = new_class val[2], val[3], val[5]
                      result.line = val[1]
                      result.end_line = lexer.line
                    
    result
end

def _reduce_306(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_307(val, _values, result)
                      # ...
                    
    result
end

def _reduce_308(val, _values, result)
                      result = new_sclass val[3], val[6]
                      result.line = val[2]
                    
    result
end

def _reduce_309(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_310(val, _values, result)
                      # ...
                    
    result
end

def _reduce_311(val, _values, result)
                      result = new_module val[2], val[4]
                      result.line = val[1]
                      result.end_line = lexer.line
                    
    result
end

def _reduce_312(val, _values, result)
                      result = lexer.scope_line
                      push_scope
                    
    result
end

def _reduce_313(val, _values, result)
                      result = new_def val[2], nil, val[1], val[3], val[4]
                      pop_scope
                    
    result
end

def _reduce_314(val, _values, result)
                       lexer.lex_state = :expr_fname
                    
    result
end

def _reduce_315(val, _values, result)
                      result = lexer.scope_line
                      push_scope
                    
    result
end

def _reduce_316(val, _values, result)
                      result = new_def val[5], val[1], val[4], val[6], val[7]
                      pop_scope
                    
    result
end

def _reduce_317(val, _values, result)
                      result = s(:break)
                    
    result
end

def _reduce_318(val, _values, result)
                      result = s(:next)
                    
    result
end

def _reduce_319(val, _values, result)
                      result = s(:redo)
                    
    result
end

# reduce 320 omitted

# reduce 321 omitted

# reduce 322 omitted

# reduce 323 omitted

# reduce 324 omitted

# reduce 325 omitted

# reduce 326 omitted

# reduce 327 omitted

# reduce 328 omitted

def _reduce_329(val, _values, result)
                      result = new_call nil, :lambda, s(:arglist)
                      result << new_iter(val[0], val[1])
                    
    result
end

def _reduce_330(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_331(val, _values, result)
                      result = nil
                    
    result
end

# reduce 332 omitted

# reduce 333 omitted

def _reduce_334(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_335(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_336(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_337(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_338(val, _values, result)
                      result = s(:if, val[2], val[4], val[5])
                      result.line = val[1]
                    
    result
end

# reduce 339 omitted

def _reduce_340(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_341(val, _values, result)
                      result = s(:block, val[0])
                    
    result
end

def _reduce_342(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_343(val, _values, result)
                      result = new_assign new_assignable(s(:identifier, val[0].intern)), val[2]
                    
    result
end

# reduce 344 omitted

def _reduce_345(val, _values, result)
                      result = 0
                    
    result
end

def _reduce_346(val, _values, result)
                      result = 0
                    
    result
end

def _reduce_347(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_348(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_349(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_350(val, _values, result)
                      nil
                    
    result
end

def _reduce_351(val, _values, result)
                      result = new_block_args val[0], val[2], val[4], val[5]
                    
    result
end

def _reduce_352(val, _values, result)
                      result = new_block_args val[0], val[2], nil, val[3]
                    
    result
end

def _reduce_353(val, _values, result)
                      result = new_block_args val[0], nil, val[2], val[3]
                    
    result
end

def _reduce_354(val, _values, result)
                      result = new_block_args val[0], nil, nil, nil
                    
    result
end

def _reduce_355(val, _values, result)
                      result = new_block_args val[0], nil, nil, val[1]
                    
    result
end

def _reduce_356(val, _values, result)
                      result = new_block_args nil, val[0], val[2], val[3]
                    
    result
end

def _reduce_357(val, _values, result)
                      result = new_block_args nil, val[0], nil, val[1]
                    
    result
end

def _reduce_358(val, _values, result)
                      result = new_block_args nil, nil, val[0], val[1]
                    
    result
end

def _reduce_359(val, _values, result)
                      result = new_block_args nil, nil, nil, val[0]
                    
    result
end

def _reduce_360(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_361(val, _values, result)
                      result = new_iter val[2], val[3]
                      result.line = val[1]
                      pop_scope
                    
    result
end

def _reduce_362(val, _values, result)
                      val[0] << val[1]
                      result = val[0]
                    
    result
end

# reduce 363 omitted

# reduce 364 omitted

def _reduce_365(val, _values, result)
                      result = new_call nil, val[0].intern, val[1]
                    
    result
end

def _reduce_366(val, _values, result)
                      result = new_call val[0], val[2].intern, val[3]
                    
    result
end

def _reduce_367(val, _values, result)
                      result = new_call val[0], :call, val[2]
                    
    result
end

def _reduce_368(val, _values, result)
                      result = new_call val[0], val[2].intern, val[3]
                    
    result
end

def _reduce_369(val, _values, result)
                      result = new_call val[0], val[2].intern, s(:arglist)
                    
    result
end

def _reduce_370(val, _values, result)
                      result = new_super val[1]
                    
    result
end

def _reduce_371(val, _values, result)
                      result = s(:super, nil)
                    
    result
end

def _reduce_372(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_373(val, _values, result)
                      result = new_iter val[2], val[3]
                      result.line = val[1]
                      pop_scope
                    
    result
end

def _reduce_374(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_375(val, _values, result)
                      result = new_iter val[2], val[3]
                      result.line = val[1]
                      pop_scope
                    
    result
end

def _reduce_376(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_377(val, _values, result)
                      part = s(:when, val[2], val[4])
                      part.line = val[2].line
                      result = [part]
                      result.push *val[5] if val[5]
                    
    result
end

def _reduce_378(val, _values, result)
                      result = [val[0]]
                    
    result
end

# reduce 379 omitted

def _reduce_380(val, _values, result)
                      exc = val[1] || s(:array)
                      exc << new_assign(val[2], s(:gvar, '$!'.intern)) if val[2]
                      result = [s(:resbody, exc, val[4])]
                      result.push val[5].first if val[5]
                    
    result
end

def _reduce_381(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_382(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

# reduce 383 omitted

# reduce 384 omitted

def _reduce_385(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_386(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_387(val, _values, result)
                      result = val[1].nil? ? s(:nil) : val[1]
                    
    result
end

# reduce 388 omitted

# reduce 389 omitted

# reduce 390 omitted

# reduce 391 omitted

def _reduce_392(val, _values, result)
                      result = new_str val[0]
                    
    result
end

# reduce 393 omitted

# reduce 394 omitted

def _reduce_395(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_396(val, _values, result)
                      result = s(:str, val[0])
                    
    result
end

def _reduce_397(val, _values, result)
                      result = new_xstr val[1]
                    
    result
end

def _reduce_398(val, _values, result)
                      result = new_regexp val[1], val[2]
                    
    result
end

def _reduce_399(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_400(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_401(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_402(val, _values, result)
                      part = val[1]
                      part = s(:dstr, "", val[1]) if part.type == :evstr
                      result = val[0] << part
                    
    result
end

def _reduce_403(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_404(val, _values, result)
                      result = val[0].concat([val[1]])
                    
    result
end

def _reduce_405(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_406(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_407(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_408(val, _values, result)
                      result = val[0] << s(:str, val[1])
                    
    result
end

def _reduce_409(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_410(val, _values, result)
                      result = str_append val[0], val[1]
                    
    result
end

def _reduce_411(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_412(val, _values, result)
                      result = str_append val[0], val[1]
                    
    result
end

def _reduce_413(val, _values, result)
                      result = s(:str, val[0])
                    
    result
end

def _reduce_414(val, _values, result)
                      result = lexer.strterm
                      lexer.strterm = nil
                    
    result
end

def _reduce_415(val, _values, result)
                      lexer.strterm = val[1]
                      result = s(:evstr, val[2])
                    
    result
end

def _reduce_416(val, _values, result)
                      lexer.cond_push 0
                      lexer.cmdarg_push 0
                      result = lexer.strterm
                      lexer.strterm = nil
                      lexer.lex_state = :expr_beg
                    
    result
end

def _reduce_417(val, _values, result)
                      lexer.strterm = val[1]
                      lexer.cond_lexpop
                      lexer.cmdarg_lexpop
                      result = s(:evstr, val[2])
                    
    result
end

def _reduce_418(val, _values, result)
                      result = s(:gvar, val[0].intern)
                    
    result
end

def _reduce_419(val, _values, result)
                      result = s(:ivar, val[0].intern)
                    
    result
end

def _reduce_420(val, _values, result)
                      result = s(:cvar, val[0].intern)
                    
    result
end

# reduce 421 omitted

def _reduce_422(val, _values, result)
                      result = s(:sym, val[1].intern)
                      lexer.lex_state = :expr_end
                    
    result
end

def _reduce_423(val, _values, result)
                      result = s(:sym, val[0].intern)
                    
    result
end

# reduce 424 omitted

# reduce 425 omitted

# reduce 426 omitted

# reduce 427 omitted

def _reduce_428(val, _values, result)
                      result = new_dsym val[1]
                    
    result
end

def _reduce_429(val, _values, result)
                      result = s(:int, val[0])
                    
    result
end

def _reduce_430(val, _values, result)
                      result = s(:float, val[0])
                    
    result
end

# reduce 431 omitted

# reduce 432 omitted

def _reduce_433(val, _values, result)
                      result = s(:identifier, val[0].intern)
                    
    result
end

def _reduce_434(val, _values, result)
                      result = s(:ivar, val[0].intern)
                    
    result
end

def _reduce_435(val, _values, result)
                      result = s(:gvar, val[0].intern)
                    
    result
end

def _reduce_436(val, _values, result)
                      result = s(:const, val[0].intern)
                    
    result
end

def _reduce_437(val, _values, result)
                      result = s(:cvar, val[0].intern)
                    
    result
end

def _reduce_438(val, _values, result)
                      result = s(:nil)
                    
    result
end

def _reduce_439(val, _values, result)
                      result = s(:self)
                    
    result
end

def _reduce_440(val, _values, result)
                      result = s(:true)
                    
    result
end

def _reduce_441(val, _values, result)
                      result = s(:false)
                    
    result
end

def _reduce_442(val, _values, result)
                      result = s(:str, self.file)
                    
    result
end

def _reduce_443(val, _values, result)
                      result = s(:int, lexer.line)
                    
    result
end

def _reduce_444(val, _values, result)
                      result = new_var_ref val[0]
                    
    result
end

def _reduce_445(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_446(val, _values, result)
                      result = s(:nth_ref, val[0])
                    
    result
end

# reduce 447 omitted

def _reduce_448(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_449(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_450(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_451(val, _values, result)
                      result = val[1]
                      lexer.lex_state = :expr_beg
                    
    result
end

def _reduce_452(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_453(val, _values, result)
                      result = new_args val[0], val[2], val[4], val[5]
                    
    result
end

def _reduce_454(val, _values, result)
                      result = new_args val[0], val[2], nil, val[3]
                    
    result
end

def _reduce_455(val, _values, result)
                      result = new_args val[0], nil, val[2], val[3]
                    
    result
end

def _reduce_456(val, _values, result)
                      result = new_args val[0], nil, nil, val[1]
                    
    result
end

def _reduce_457(val, _values, result)
                      result = new_args nil, val[0], val[2], val[3]
                    
    result
end

def _reduce_458(val, _values, result)
                      result = new_args nil, val[0], nil, val[1]
                    
    result
end

def _reduce_459(val, _values, result)
                      result = new_args nil, nil, val[0], val[1]
                    
    result
end

def _reduce_460(val, _values, result)
                      result = new_args nil, nil, nil, val[0]
                    
    result
end

def _reduce_461(val, _values, result)
                      result = s(:args)
                    
    result
end

# reduce 462 omitted

def _reduce_463(val, _values, result)
                      result = val[0].intern
                      scope.add_local result
                    
    result
end

def _reduce_464(val, _values, result)
                      raise 'formal argument cannot be a constant'
                    
    result
end

def _reduce_465(val, _values, result)
                      raise 'formal argument cannot be an instance variable'
                    
    result
end

def _reduce_466(val, _values, result)
                      raise 'formal argument cannot be a class variable'
                    
    result
end

def _reduce_467(val, _values, result)
                      raise 'formal argument cannot be a global variable'
                    
    result
end

def _reduce_468(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_469(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_470(val, _values, result)
                      result = s(:lasgn, val[0])
                    
    result
end

# reduce 471 omitted

def _reduce_472(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

def _reduce_473(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

# reduce 474 omitted

# reduce 475 omitted

# reduce 476 omitted

# reduce 477 omitted

# reduce 478 omitted

def _reduce_479(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_480(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_481(val, _values, result)
                      result = new_assign new_assignable(s(:identifier, val[0].intern)), val[2]
                    
    result
end

def _reduce_482(val, _values, result)
                      result = s(:block, val[0])
                    
    result
end

def _reduce_483(val, _values, result)
                      result = val[0]
                      val[0] << val[2]
                    
    result
end

# reduce 484 omitted

# reduce 485 omitted

def _reduce_486(val, _values, result)
                      result = "*#{val[1]}".intern
                    
    result
end

def _reduce_487(val, _values, result)
                      result = :"*"
                    
    result
end

# reduce 488 omitted

# reduce 489 omitted

def _reduce_490(val, _values, result)
                      result = "&#{val[1]}".intern
                    
    result
end

def _reduce_491(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_492(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_493(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_494(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_495(val, _values, result)
                      result = []
                    
    result
end

def _reduce_496(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_497(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_498(val, _values, result)
                      result = val[0].push *val[2]
                    
    result
end

def _reduce_499(val, _values, result)
                      result = [val[0], val[2]]
                    
    result
end

def _reduce_500(val, _values, result)
                      result = [s(:sym, val[0].intern), val[1]]
                    
    result
end

# reduce 501 omitted

# reduce 502 omitted

# reduce 503 omitted

# reduce 504 omitted

# reduce 505 omitted

# reduce 506 omitted

# reduce 507 omitted

# reduce 508 omitted

# reduce 509 omitted

# reduce 510 omitted

# reduce 511 omitted

# reduce 512 omitted

# reduce 513 omitted

# reduce 514 omitted

# reduce 515 omitted

# reduce 516 omitted

# reduce 517 omitted

# reduce 518 omitted

# reduce 519 omitted

# reduce 520 omitted

# reduce 521 omitted

# reduce 522 omitted

# reduce 523 omitted

def _reduce_524(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module Opal
