#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.12
# from Racc grammer file "".
#

require 'racc/parser.rb'
module Opal
  class Parser < Racc::Parser


##### State transition tables begin ###

clist = [
'63,64,65,8,51,568,-90,-91,57,58,611,204,205,61,548,59,60,62,23,24,66',
'67,271,-524,738,204,205,22,28,27,90,89,91,92,-95,735,17,204,205,574',
'483,575,7,41,6,9,94,93,568,84,50,86,85,87,266,88,95,96,853,81,82,-88',
'38,39,793,589,575,-92,342,341,545,204,205,610,-526,568,-441,-441,204',
'205,-89,790,568,714,-441,36,568,73,30,-524,-91,52,-94,638,54,74,32,-92',
'-93,575,40,101,693,-90,736,266,100,-89,18,270,-524,-82,-83,79,73,75',
'76,77,78,101,-82,567,74,80,100,-83,711,63,64,65,56,51,-441,53,711,57',
'58,37,83,-87,61,214,59,60,62,257,258,66,67,339,338,342,341,706,256,289',
'293,90,89,91,92,306,101,218,567,-527,-80,100,306,-526,290,588,-84,94',
'93,544,84,50,86,85,359,271,88,95,96,-81,81,82,-82,101,101,567,-526,-83',
'100,100,101,-86,567,876,101,100,567,-85,-91,100,-91,204,205,-91,-84',
'-92,360,-92,-64,213,-92,-90,52,-90,711,54,-90,226,101,-82,101,642,710',
'100,-83,100,271,-82,101,226,710,226,-83,100,79,73,75,76,77,78,771,266',
'738,74,80,-75,342,341,63,64,65,56,51,735,53,641,57,58,294,83,793,61',
'270,59,60,62,257,258,66,67,599,524,-84,452,-450,256,289,293,90,89,91',
'92,599,788,218,799,342,341,599,-92,642,41,266,226,94,93,599,84,50,86',
'85,87,800,88,95,96,599,81,82,-84,38,39,599,270,101,604,710,-84,551,100',
'-94,642,736,-88,641,223,-278,-278,-444,225,224,601,600,209,-278,-444',
'213,554,450,52,754,679,54,601,600,597,642,-445,40,601,600,602,770,594',
'-445,641,217,601,600,612,595,79,73,75,76,77,78,601,600,606,74,80,803',
'601,600,-528,-528,-528,56,-528,641,53,-278,-528,-528,37,83,-95,-528',
'804,-528,-528,-528,-528,-528,-528,-528,537,520,521,539,-90,-528,-528',
'-528,-528,-528,-528,-528,-279,-279,-528,202,585,101,554,617,-279,-528',
'100,802,-528,-528,807,-528,-528,-528,-528,-528,-528,-528,-528,-528,537',
'-528,-528,536,-528,-528,703,226,230,235,236,237,232,234,242,243,238',
'239,202,527,219,220,-443,101,240,241,528,-528,100,-443,-528,-528,-279',
'-528,537,584,-528,539,-528,223,-528,229,-528,225,224,221,222,233,231',
'227,-528,228,487,-324,-324,-528,-528,-528,-528,-528,-528,-324,793,101',
'-528,-528,816,244,100,63,64,65,-528,51,448,-528,-446,57,58,-528,-528',
'817,61,-446,59,60,62,257,258,66,67,103,104,105,106,107,256,28,27,90',
'89,91,92,-271,-271,218,-449,-449,101,-324,-441,-271,41,100,-449,94,93',
'-441,84,50,86,85,87,260,88,95,96,537,81,82,539,38,39,451,226,230,235',
'236,237,232,234,242,243,238,239,-277,-277,219,220,263,101,240,241,-277',
'209,100,264,213,-527,-271,52,819,-449,54,701,255,223,526,229,40,225',
'224,221,222,233,231,227,217,228,691,202,446,79,73,75,76,77,78,447,204',
'205,74,80,306,244,639,-529,-529,-529,56,-529,-277,53,-447,-529,-529',
'37,83,525,-529,-447,-529,-529,-529,-529,-529,-529,-529,103,104,105,106',
'107,-529,-529,-529,-529,-529,-529,-529,202,577,-529,202,200,784,448',
'-438,578,-529,-526,201,-529,-529,-438,-529,-529,-529,-529,-529,-529',
'-529,-529,-529,821,-529,-529,449,-529,-529,783,226,230,235,236,237,232',
'234,242,243,238,239,-279,-279,219,220,-448,540,240,241,-279,-529,687',
'-448,-529,-529,576,-529,686,199,-529,685,-529,223,-529,229,-529,225',
'224,221,222,233,231,227,-529,228,492,-277,-277,-529,-529,-529,-529,-529',
'-529,-277,299,300,-529,-529,-527,244,829,63,64,65,-529,51,-279,-529',
'541,57,58,-529,-529,831,61,834,59,60,62,257,258,66,67,103,104,105,106',
'107,256,28,27,90,89,91,92,-449,-449,218,202,922,835,-277,617,-449,41',
'837,923,94,93,839,84,50,86,85,87,260,88,95,96,841,81,82,266,38,39,843',
'226,230,235,236,237,232,234,242,243,238,239,-271,-271,219,220,342,341',
'240,241,-271,209,781,760,213,487,-449,52,679,921,54,-259,255,223,413',
'229,40,225,224,221,222,233,231,227,217,228,812,793,621,79,73,75,76,77',
'78,812,793,-63,74,80,622,244,530,-227,-81,891,56,671,-271,53,738,485',
'-89,37,83,63,64,65,8,51,410,735,669,57,58,412,411,400,61,-82,59,60,62',
'23,24,66,67,-90,398,399,487,-84,22,28,27,90,89,91,92,-92,203,17,339',
'338,342,341,389,7,41,-75,9,94,93,668,84,50,86,85,87,524,88,95,96,-450',
'81,82,854,38,39,202,585,855,856,857,226,386,859,583,-278,-278,736,-87',
'891,-278,-278,860,-278,738,679,-95,36,-278,551,30,-277,-277,52,862,735',
'54,-86,32,-277,666,-80,40,223,-527,-94,-257,225,224,-88,18,866,552,658',
'485,79,73,75,76,77,78,871,584,657,74,80,339,338,342,341,873,-278,56',
'306,554,53,-278,306,563,37,83,63,64,65,8,51,564,-277,879,57,58,881,882',
'306,61,509,59,60,62,23,24,66,67,756,736,226,226,226,22,28,27,90,89,91',
'92,510,556,17,334,332,331,895,333,7,41,-260,9,94,93,226,84,50,86,85',
'87,298,88,95,96,-258,81,82,897,38,39,297,226,230,235,236,237,232,234',
'242,243,238,239,202,516,219,220,773,402,240,241,517,36,-527,554,30,245',
'907,52,908,266,54,511,32,223,579,229,40,225,224,221,222,233,231,227',
'18,228,913,834,915,79,73,75,76,77,78,839,839,841,74,80,266,244,580,-227',
'198,693,56,620,515,53,-257,924,619,37,83,63,64,65,8,51,197,845,846,57',
'58,847,95,96,61,306,59,60,62,23,24,66,67,196,930,581,195,685,22,28,27',
'90,89,91,92,108,616,17,339,338,342,341,613,7,41,609,9,94,93,275,84,50',
'86,85,87,940,88,95,96,839,81,82,942,38,39,943,226,230,235,236,237,232',
'234,242,243,238,239,492,518,219,220,97,605,240,241,492,36,,,30,,,52',
',,54,,32,223,,229,40,225,224,221,222,233,231,227,18,228,,,,79,73,75',
'76,77,78,,,,74,80,,244,,,,,56,,,53,,,,37,83,63,64,65,8,51,,,,57,58,',
',,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,556,17,334,332',
'331,,333,7,41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,226',
'230,235,236,237,232,234,242,243,238,239,,,219,220,,,240,241,,36,,,30',
',,52,,,54,,32,223,,229,40,225,224,221,222,233,231,227,18,228,,,,79,73',
'75,76,77,78,,,,74,80,,244,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60',
'62,257,258,66,67,,,,,,256,289,293,90,89,91,92,,,218,,,,,,,41,,,94,93',
',84,50,86,85,87,,88,95,96,,81,82,,38,39,,226,230,235,236,237,232,234',
'242,243,238,239,,,219,220,,,240,241,,209,,,213,,,52,,,54,,647,223,253',
'229,40,225,224,221,222,233,231,227,217,228,,,,79,73,75,76,77,78,,,,74',
'80,,244,,,,,56,,,53,,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,,226,230,235,236,237,232,234,242,243',
'238,239,,,219,220,,,240,241,,36,,,30,,,52,,,54,,32,223,,229,40,225,224',
'221,222,233,231,227,18,228,,,,79,73,75,76,77,78,,,,74,80,,244,,,,,56',
',,53,,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,',
',,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88,95',
'96,,81,82,,38,39,,226,230,235,236,237,232,234,242,243,238,239,,,219',
'220,,,240,241,,36,,,30,,,52,,,54,,32,223,,229,40,225,224,221,222,233',
'231,227,18,228,,,,79,73,75,76,77,78,,,,74,80,,244,,63,64,65,56,51,,53',
',57,58,37,83,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17',
',,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,226,230,235',
'236,237,232,234,242,243,238,239,,,219,220,,,240,241,,209,,,213,214,',
'52,,,54,,,223,,229,40,225,224,221,222,233,231,227,18,228,,,,79,73,75',
'76,77,78,,,,74,80,,244,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,90,89,91,92,,,218,,,,,,,41,,,94,93,,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,,226,230,235,236,237,232,234,242,243',
'238,239,,,219,220,,,240,241,,209,,,213,,,52,,,54,,,223,,229,40,225,224',
'221,222,233,231,227,217,228,,,,79,73,75,76,77,78,,,,74,80,,244,,63,64',
'65,56,51,,53,,57,58,37,83,,61,,59,60,62,257,258,66,67,,,,,,256,289,293',
'90,89,91,92,,,218,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82',
',38,39,,226,230,235,236,237,232,234,242,243,238,239,,,219,220,,,240',
'241,,209,,,213,,,52,,,54,,647,223,,229,40,225,224,221,222,233,231,227',
'217,228,,,,79,73,75,76,77,78,,,,74,80,,244,,63,64,65,56,51,,53,,57,58',
'37,83,,61,,59,60,62,257,258,66,67,,,,,,256,289,293,90,89,91,92,,,218',
',,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,226,230,235',
'236,237,232,234,242,243,238,239,,,219,220,,,240,241,,209,,,213,,,52',
',,54,,,223,,229,40,225,224,221,222,233,231,227,217,228,,,,79,73,75,76',
'77,78,,,,74,80,,244,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60,62,257',
'258,66,67,,,,,,256,28,27,90,89,91,92,,,218,,,,,,,41,,,94,93,,84,50,86',
'85,87,260,88,95,96,,81,82,,38,39,,226,230,235,236,237,232,234,242,243',
'238,239,,,219,220,,,240,241,,209,,,213,,,52,,,54,,255,223,253,229,40',
'225,224,221,222,233,231,227,217,228,,,,79,73,75,76,77,78,,,,74,80,,244',
',63,64,65,56,51,,53,,57,58,37,83,,61,,59,60,62,257,258,66,67,,,,,,256',
'28,27,90,89,91,92,,,218,,,,,,,41,,,94,93,,84,50,86,85,87,260,88,95,96',
',81,82,,38,39,,226,230,235,236,237,232,234,242,243,238,239,,,219,220',
',,240,241,,209,,,213,,,52,,,54,,255,223,253,229,40,225,224,221,222,233',
'231,227,217,228,,,,79,73,75,76,77,78,,,,74,80,,244,,63,64,65,56,51,',
'53,,57,58,37,83,,61,,59,60,62,257,258,66,67,,,,,,256,28,27,90,89,91',
'92,,,218,,,,,,,41,,,94,93,,84,50,86,85,87,260,88,95,96,,81,82,,38,39',
',226,230,235,236,237,232,234,242,243,238,239,,,219,220,,,240,241,,209',
',,213,,,52,,,54,,255,223,253,229,40,225,224,221,222,233,231,227,217',
'228,,,,79,73,75,76,77,78,,,,74,80,,244,,63,64,65,56,51,,53,,57,58,37',
'83,,61,,59,60,62,257,258,66,67,,,,,,256,289,293,90,89,91,92,,556,218',
'334,332,331,,333,,290,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,325,',
'334,332,331,226,333,,,,,,556,559,334,332,331,,333,,,562,,,902,,,213',
',,52,,,54,,,,223,,336,,225,224,221,222,,,339,338,342,341,559,79,73,75',
'76,77,78,775,562,,74,80,,,,63,64,65,56,51,,53,,57,58,294,83,,61,,59',
'60,62,257,258,66,67,,,,,,256,289,293,90,89,91,92,,556,218,334,332,331',
'226,333,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,226,,',
',,,223,,559,,225,224,221,222,,,809,240,241,209,,,213,,,52,,,54,,,,223',
',40,,225,224,221,222,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65',
'56,51,,53,,57,58,37,83,,61,,59,60,62,257,258,66,67,,,,,,256,289,293',
'90,89,91,92,,,218,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82',
',38,39,,226,,,,,,,,,,,,,,,,,240,241,,209,,,213,,,52,,,54,,,223,,229',
'40,225,224,221,222,,,227,217,228,,,,79,73,75,76,77,78,,,,74,80,,,,63',
'64,65,56,51,,53,,57,58,37,83,,61,,59,60,62,23,24,66,67,,,,,,22,28,27',
'90,89,91,92,,,17,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,',
'38,39,,226,-547,-547,-547,-547,232,234,,,-547,-547,,,,,,,240,241,,209',
',,213,,,52,,,54,,,223,,229,40,225,224,221,222,233,231,227,18,228,,,',
'79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,37,83,63,64,65,8,51,,,,57',
'58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7',
'41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,226,-547,-547,-547',
'-547,232,234,,,-547,-547,,,,,,,240,241,,36,,,279,,,52,,,54,,32,223,',
'229,40,225,224,221,222,233,231,227,18,228,,,,79,73,75,76,77,78,,,,74',
'80,,,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60,62,257,258,66,67,,',
',,,256,289,293,90,89,91,92,,,218,,,,,,,290,,,94,93,,84,50,86,85,87,',
'88,95,96,,81,82,325,,334,332,331,,333,,,,,,,,,,,,,,,,,,287,,,284,,,52',
',,54,,283,,,,336,,547,,,,,,339,338,342,341,,79,73,75,76,77,78,,,,74',
'80,,,,63,64,65,56,51,,53,,57,58,294,83,,61,,59,60,62,257,258,66,67,',
',,,,256,289,293,90,89,91,92,,,218,,,,,,,290,,,94,93,,84,50,86,85,87',
',88,95,96,,81,82,748,,334,332,331,738,333,,,,,,,,,,735,,,,,,,,287,,',
'213,,,52,,,54,,,,,,336,,,,,,,,339,338,342,341,,79,73,75,76,77,78,,,',
'74,80,,,,296,,,56,,,53,,,,294,83,63,64,65,8,51,,,736,57,58,,,,61,,59',
'60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93',
',84,50,86,85,87,,88,95,96,,81,82,,38,39,,226,230,235,236,237,232,234',
'242,243,238,239,,,-547,-547,,,240,241,,36,,,30,,,52,,,54,,32,223,,229',
'40,225,224,221,222,233,231,227,18,228,,,,79,73,75,76,77,78,,,,74,80',
',,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60,62,257,258,66,67,,,,,',
'256,289,293,90,89,91,92,,,218,,,,,,,41,,,94,93,,84,50,86,85,87,260,88',
'95,96,,81,82,,38,39,,226,-547,-547,-547,-547,232,234,,,-547,-547,,,',
',,,240,241,,209,,,213,,,52,,,54,,,223,253,229,40,225,224,221,222,233',
'231,227,217,228,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53',
',57,58,37,83,,61,,59,60,62,257,258,66,67,,,,,,256,289,293,90,89,91,92',
',,218,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,226',
'-547,-547,-547,-547,232,234,,,-547,-547,,,,,,,240,241,,209,,,213,,,52',
',,54,,,223,,229,40,225,224,221,222,233,231,227,217,228,,,,79,73,75,76',
'77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60,62,257',
'258,66,67,,,,,,256,289,293,90,89,91,92,,,218,,,,,,,41,,,94,93,,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,,226,,,,,,,,,,,,,,,,,240,241,,209,',
',213,,,52,,,54,,,223,,229,40,225,224,221,222,,,227,217,228,,,,79,73',
'75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60,62',
'257,258,66,67,,,,,,256,289,293,90,89,91,92,,,218,,,,,,,41,,,94,93,,84',
'50,86,85,87,,88,95,96,,81,82,,38,39,,226,,,,,,,,,,,,,,,,,240,241,,209',
',,213,,,52,,,54,,,223,,229,40,225,224,221,222,,,227,217,228,,,,79,73',
'75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60,62',
'257,258,66,67,,,,,,256,289,293,90,89,91,92,,,218,,,,,,,41,,,94,93,,84',
'50,86,85,87,,88,95,96,,81,82,,38,39,,226,,,,,,,,,,,,,,,,,240,241,,209',
',,213,,,52,,,54,,,223,,229,40,225,224,221,222,,,227,217,228,,,,79,73',
'75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60,62',
'257,258,66,67,,,,,,256,289,293,90,89,91,92,,,218,,,,,,,41,,,94,93,,84',
'50,86,85,87,,88,95,96,,81,82,,38,39,,226,-547,-547,-547,-547,232,234',
',,-547,-547,,,,,,,240,241,,209,,,213,,,52,,,54,,,223,,229,40,225,224',
'221,222,233,231,227,217,228,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65',
'56,51,,53,,57,58,37,83,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89',
'91,92,,,17,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39',
',226,-547,-547,-547,-547,232,234,,,-547,-547,,,,,,,240,241,,209,,,213',
',,52,,,54,,,223,,229,40,225,224,221,222,233,231,227,18,228,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,37,83,63,64,65,8,51,,,,57,58,',
',,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41',
',9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,226,230,235,236,237',
'232,234,242,,238,239,,,,,,,240,241,,36,,,30,,,52,,,54,,32,223,,229,40',
'225,224,221,222,233,231,227,18,228,,,,79,73,75,76,77,78,,,,74,80,,,',
'63,64,65,56,51,,53,,57,58,37,83,,61,,59,60,62,257,258,66,67,,,,,,256',
'289,293,90,89,91,92,,,218,,,,,,,41,,,94,93,,84,50,86,85,87,260,88,95',
'96,,81,82,,38,39,,226,230,235,236,237,232,234,,,238,239,,,,,,,240,241',
',209,,,213,,,52,,,54,,647,223,253,229,40,225,224,221,222,233,231,227',
'217,228,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37',
'83,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41',
',,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,226,230,235,236,237',
'232,234,242,243,238,239,,,-547,-547,,,240,241,,209,,,213,,,52,,,54,',
',223,,229,40,225,224,221,222,233,231,227,18,228,,,,79,73,75,76,77,78',
',,,74,80,,,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60,62,257,258,66',
'67,,,,,,256,28,27,90,89,91,92,,,218,,,,,,,41,,,94,93,,84,50,86,85,87',
'260,88,95,96,,81,82,,38,39,,226,,,,,,,,,,,,,,,,,240,241,,209,,,213,',
',52,,,54,,255,223,,229,40,225,224,221,222,,,,217,,,,,79,73,75,76,77',
'78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60,62,257,258',
'66,67,,,,,,256,289,293,90,89,91,92,,,218,,,,,,,41,,,94,93,,84,50,86',
'85,87,260,88,95,96,,81,82,,38,39,,226,,,,,,,,,,,,,,,,,240,241,,209,',
',213,,,52,,,54,,,223,,229,40,225,224,221,222,,,,217,,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,,,,37,83,63,64,65,8,51,,,,57,58,,,,61,',
'59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94',
'93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,36,',
',30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,',
'63,64,65,56,51,,53,,57,58,37,83,,61,,59,60,62,23,24,66,67,,,,,,22,28',
'27,90,89,91,92,,,17,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,18,,',
',,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,83,,61',
',59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93',
',84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,209,,,213',
',,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64',
'65,56,51,,53,,57,58,37,83,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90',
'89,91,92,,,17,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79',
'73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60',
'62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52',
',,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,101,,,,,100,56',
',,53,,,,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,257,258,66,67,,',
',,,256,289,293,90,89,91,92,,,218,,,,,,,290,,,94,93,,84,50,86,85,87,',
'88,95,96,,81,82,325,,334,332,331,,333,,,,,,,,,,,,,,,,,,354,,,30,,,52',
',,54,,32,,,,336,320,,,,,,,339,338,342,341,,79,73,75,76,77,78,,,,74,80',
',,,63,64,65,56,51,,53,,57,58,294,83,,61,,59,60,62,257,258,66,67,,,,',
',256,289,293,90,89,91,92,,,218,,,,,,,290,,,94,93,,84,50,86,85,359,,88',
'95,96,,81,82,325,,334,332,331,,333,,,,,,,,,,,,,,,365,,,360,,,213,,,52',
',,54,,,,,,336,,,,,,,,339,338,342,341,,79,73,75,76,77,78,,,,74,80,,,',
'63,64,65,56,51,,53,,57,58,294,83,,61,,59,60,62,257,258,66,67,,,,,,256',
'289,293,90,89,91,92,,,218,,,,,,,41,,,94,93,,84,50,86,85,87,260,88,95',
'96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,253,,40',
',,,,,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,37,83,63',
'64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89',
'91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73',
'75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60,62',
'257,258,66,67,,,,,,256,289,293,90,89,91,92,,,218,,,,,,,41,,,94,93,,84',
'50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,209,,,213,',
',52,,,54,,255,,,,40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,63',
'64,65,56,51,,53,,57,58,37,83,,61,,59,60,62,257,258,66,67,,,,,,256,289',
'293,90,89,91,92,,,218,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81',
'82,,38,39,,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,217',
',,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,83,,61',
',59,60,62,257,258,66,67,,,,,,256,289,293,90,89,91,92,,,218,,,,,,,41',
',,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,',
',209,,,213,,,52,,,54,,,,,,40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74',
'80,,,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60,62,257,258,66,67,,',
',,,256,289,293,90,89,91,92,,,218,,,,,,,41,,,94,93,,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40',
',,,,,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,-523,-523,-523,56,-523',
',53,,-523,-523,37,83,,-523,,-523,-523,-523,-523,-523,-523,-523,,-523',
',,,-523,-523,-523,-523,-523,-523,-523,,,-523,,,,,,,-523,,,-523,-523',
',-523,-523,-523,-523,-523,-523,-523,-523,-523,,-523,-523,,-523,-523',
',,,,,,,,,,,,,,,,,,,,,-523,,,-523,-523,,-523,,,-523,,-523,,-523,,-523',
',,,,,,,-523,,-523,,,-523,-523,-523,-523,-523,-523,,,,-523,-523,,,,-524',
'-524,-524,-523,-524,,-523,,-524,-524,-523,-523,,-524,,-524,-524,-524',
'-524,-524,-524,-524,,-524,,,,-524,-524,-524,-524,-524,-524,-524,,,-524',
',,,,,,-524,,,-524,-524,,-524,-524,-524,-524,-524,-524,-524,-524,-524',
',-524,-524,,-524,-524,,,,,,,,,,,,,,,,,,,,,,-524,,,-524,-524,,-524,,',
'-524,,-524,,-524,,-524,,,,,,,,-524,,-524,,,-524,-524,-524,-524,-524',
'-524,,,,-524,-524,,,,63,64,65,-524,51,,-524,,57,58,-524,-524,,61,,59',
'60,62,257,258,66,67,,,,,,256,289,293,90,89,91,92,,,218,,,,,,,41,,,94',
'93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,209',
',,213,,,52,,,54,,,,,,40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74,80,,',
',,,,56,,,53,,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66',
'67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,6,9,94,93,,84,50,86,85,87',
',88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,',
',,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,402,56,,,53,,,,37',
'83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90',
'89,91,92,,,17,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79',
'73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60',
'62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52',
',,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56',
'51,,53,,57,58,37,83,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91',
'92,,,17,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,',
',,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75',
'76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60,62,23',
'24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,,84,50,86,85',
'87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54',
',,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,37',
'83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27',
'90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,',
',,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,37,83,63,64,65,8,51,,',
',57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,',
',,,7,41,6,9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,',
',,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77',
'78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60,62,23,24,66',
'67,,,,,,22,28,27,90,89,91,92,,,218,,,,,,,41,,,94,93,,84,50,86,85,87',
',88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,',
',,40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53',
',57,58,37,83,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17',
',,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,',
',,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78',
',,,74,80,,,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60,62,257,258,66',
'67,,,,,,256,289,293,90,89,91,92,,,218,,,,,,,41,,,94,93,,84,50,86,85',
'87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54',
',,,,,40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,37',
'83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27',
'90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,',
',,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,83,,61',
',59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,218,,,,,,,41,,,94',
'93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,209',
',,213,,,52,,,54,,419,,,,40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74,80',
',,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60,62,23,24,66,67,,,,,,22',
'28,27,90,89,91,92,,,218,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,',
'81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,419,,,,40,,,',
',,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58',
'37,83,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,218,,,,',
',,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,',
',,,,,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,217,,,,,79,73,75,76,77,78,',
',,74,80,,,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60,62,257,258,66',
'67,,,,,,256,28,27,90,89,91,92,,,218,,,,,,,41,,,94,93,,84,50,86,85,87',
'260,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54',
',255,,,,40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,',
',,37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28',
'27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88,95,96,,81',
'82,,38,39,,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18',
',,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,83,,61',
',59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93',
',84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,209,,,213',
',662,52,,,54,,,,253,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,',
'63,64,65,56,51,,53,,57,58,37,83,,61,,59,60,62,257,258,66,67,,,,,,256',
'289,293,90,89,91,92,,,218,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,,,',
',,217,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37',
'83,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,218,,,,,,,41',
',,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,',
',209,,,213,,,52,,,54,,,,,,40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74',
'80,,,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60,62,23,24,66,67,,,,',
',22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,,,',
',,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37',
'83,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41',
',,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,',
',209,,,213,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24',
'66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85',
'87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32',
',,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,37,83',
'63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90',
'89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79',
'73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,37,83,63,64,65,8,51,,,,57,58',
',,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41',
',9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,',
',,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74',
'80,,,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60,62,23,24,66,67,,,,',
',22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,,,',
',,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37',
'83,,61,,59,60,62,257,258,66,67,,,,,,256,289,293,90,89,91,92,,,218,,',
',,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,',
',,,,,,,,209,,,213,,,52,,,54,,255,,,,40,,,,,,,,217,,,,,79,73,75,76,77',
'78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60,62,257,258',
'66,67,,,,,,256,289,293,90,89,91,92,,,218,,,,,,,41,,,94,93,,84,50,86',
'85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,',
'54,,419,,,,40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
',,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22',
'28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88,95,96',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,',
',,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37',
'83,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41',
',,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,',
',209,,,213,,454,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74',
'80,,,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60,62,257,258,66,67,,',
',,,256,289,293,90,89,91,92,,,218,,,,,,,41,,,94,93,,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40',
',,,,,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57',
'58,37,83,,61,,59,60,62,257,258,66,67,,,,,,256,289,293,90,89,91,92,,',
'218,,,,,,,290,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,,,,,,,,,,,,',
',,,,,,,,,,,287,,,284,,,52,,,54,,,,,,,,,,,,,,,,,,,79,73,75,76,77,78,',
',,74,80,,,,63,64,65,56,51,,53,,57,58,294,83,,61,,59,60,62,257,258,66',
'67,,,,,,256,289,293,90,89,91,92,,,218,,,,,,,41,,,94,93,,84,50,86,85',
'87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54',
',,,,,40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51',
',53,,57,58,37,83,,61,,59,60,62,257,258,66,67,,,,,,256,289,293,90,89',
'91,92,,,218,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,217,,,,,79,73',
'75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60,62',
'257,258,66,67,,,,,,256,289,293,90,89,91,92,,,218,,,,,,,41,,,94,93,,84',
'50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,209,,,213,',
',52,,,54,,,,,,40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64',
'65,56,51,,53,,57,58,37,83,,61,,59,60,62,257,258,66,67,,,,,,256,289,293',
'90,89,91,92,,,218,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,217,',
',,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,83,,61',
',59,60,62,257,258,66,67,,,,,,256,289,293,90,89,91,92,,,218,,,,,,,41',
',,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,',
',209,,,213,,,52,,,54,,,,,,40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74',
'80,,,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60,62,257,258,66,67,,',
',,,256,289,293,90,89,91,92,,,218,,,,,,,41,,,94,93,,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40',
',,,,,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57',
'58,37,83,,61,,59,60,62,257,258,66,67,,,,,,256,289,293,90,89,91,92,,',
'218,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,',
',,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,217,,,,,79,73,75,76',
'77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60,62,257',
'258,66,67,,,,,,256,289,293,90,89,91,92,,,218,,,,,,,41,,,94,93,,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52',
',,54,,,,,,40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56',
'51,,53,,57,58,37,83,,61,,59,60,62,257,258,66,67,,,,,,256,289,293,90',
'89,91,92,,,218,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,217,,,,,79',
'73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60',
'62,257,258,66,67,,,,,,256,289,293,90,89,91,92,,,218,,,,,,,41,,,94,93',
',84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,209,,,213',
',,52,,,54,,,,,,40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64',
'65,56,51,,53,,57,58,37,83,,61,,59,60,62,257,258,66,67,,,,,,256,289,293',
'90,89,91,92,,,218,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,217,',
',,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,83,,61',
',59,60,62,257,258,66,67,,,,,,256,289,293,90,89,91,92,,,218,,,,,,,41',
',,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,',
',209,,,213,,,52,,,54,,,,,,40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74',
'80,,,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60,62,257,258,66,67,,',
',,,256,289,293,90,89,91,92,,,218,,,,,,,41,,,94,93,,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40',
',,,,,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57',
'58,37,83,,61,,59,60,62,257,258,66,67,,,,,,256,289,293,90,89,91,92,,',
'218,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,',
',,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,217,,,,,79,73,75,76',
'77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60,62,257',
'258,66,67,,,,,,256,289,293,90,89,91,92,,,218,,,,,,,41,,,94,93,,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52',
',,54,,,,,,40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56',
'51,,53,,57,58,37,83,,61,,59,60,62,257,258,66,67,,,,,,256,289,293,90',
'89,91,92,,,218,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,217,,,,,79',
'73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60',
'62,257,258,66,67,,,,,,256,289,293,90,89,91,92,,,218,,,,,,,41,,,94,93',
',84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,209,,,213',
',,52,,,54,,,,,,40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64',
'65,56,51,,53,,57,58,37,83,,61,,59,60,62,257,258,66,67,,,,,,256,289,293',
'90,89,91,92,,,218,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,217,',
',,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,83,,61',
',59,60,62,257,258,66,67,,,,,,256,289,293,90,89,91,92,,,218,,,,,,,41',
',,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,',
',209,,,213,,,52,,,54,,,,,,40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74',
'80,,,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60,62,257,258,66,67,,',
',,,256,289,293,90,89,91,92,,,218,,,,,,,41,,,94,93,,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40',
',,,,,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57',
'58,37,83,,61,,59,60,62,257,258,66,67,,,,,,256,289,293,90,89,91,92,,',
'218,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,',
',,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,217,,,,,79,73,75,76',
'77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60,62,257',
'258,66,67,,,,,,256,289,293,90,89,91,92,,,218,,,,,,,41,,,94,93,,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52',
',,54,,,,,,40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56',
'51,,53,,57,58,37,83,,61,,59,60,62,257,258,66,67,,,,,,256,289,293,90',
'89,91,92,,,218,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,217,,,,,79',
'73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60',
'62,257,258,66,67,,,,,,256,289,293,90,89,91,92,,,218,,,,,,,41,,,94,93',
',84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,209,,,213',
',,52,,,54,,,,,,40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64',
'65,56,51,,53,,57,58,37,83,,61,,59,60,62,257,258,66,67,,,,,,256,289,293',
'90,89,91,92,,,218,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,217,',
',,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,83,,61',
',59,60,62,257,258,66,67,,,,,,256,289,293,90,89,91,92,,,218,,,,,,,41',
',,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,',
',209,,,213,,,52,,,54,,,,,,40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74',
'80,,,,,,,56,,,53,,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23',
'24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86',
'85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54',
',32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,402,56,,,53',
',,,37,83,63,64,65,,51,,,,57,58,,,,61,,59,60,62,257,258,66,67,,,,,,256',
'289,293,90,89,91,92,,,218,,,,,,,290,,,94,93,,84,50,86,85,87,,88,95,96',
',81,82,,,,,,,,,,,,,,,,,,,,,,,,,287,,,284,,,52,,,54,,,,,,,,,,,,,,,,,',
',79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,294,83,,61',
',59,60,62,257,258,66,67,,,,,,256,28,27,90,89,91,92,,,218,,,,,,,41,,',
'94,93,,84,50,86,85,87,260,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,',
',,209,,,213,,,52,,,54,,255,,,,40,,,,,,,,217,,,,,79,73,75,76,77,78,,',
',74,80,,,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60,62,257,258,66,67',
',,,,,256,289,293,90,89,91,92,,,218,,,,,,,41,,,94,93,,84,50,86,85,87',
',88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,',
',,40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53',
',57,58,37,83,,61,,59,60,62,257,258,66,67,,,,,,256,289,293,90,89,91,92',
',,218,,,,,,,290,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,,,,,,,,,,',
',,,,,,,,,,,,,287,,,284,,,52,,,54,,,,,,,,,,,,,,,,,,,79,73,75,76,77,78',
',,,74,80,,,,63,64,65,56,51,,53,,57,58,294,83,,61,,59,60,62,257,258,66',
'67,,,,,,256,289,293,90,89,91,92,,,218,,,,,,,41,,,94,93,,84,50,86,85',
'87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54',
',,,,,40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51',
',53,,57,58,37,83,,61,,59,60,62,257,258,66,67,,,,,,256,289,293,90,89',
'91,92,,,218,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,217,,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,37,83,63,64,65,8,51,,,,57,58,',
',,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41',
',9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,',
',,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74',
'80,,,,,,,56,,,53,,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23',
'24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86',
'85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54',
',32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51',
',53,,57,58,37,83,,61,,59,60,62,257,258,66,67,,,,,,256,289,293,90,89',
'91,92,,,218,,,,,,,41,,,94,93,,84,50,86,85,87,260,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,253,,40,,,,,,,,217,,',
',,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,83,,61',
',59,60,62,257,258,66,67,,,,,,256,28,27,90,89,91,92,,,218,,,,,,,41,,',
'94,93,,84,50,86,85,87,260,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,',
',,209,,,213,,,52,,,54,,255,,253,,40,,,,,,,,217,,,,,79,73,75,76,77,78',
',,,74,80,,,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60,62,257,258,66',
'67,,,,,,256,28,27,90,89,91,92,,,218,,,,,,,41,,,94,93,,84,50,86,85,87',
'260,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,209,,,213,,,501,,,54',
',255,,253,,40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65',
'56,51,,53,,57,58,37,83,,61,,59,60,62,257,258,66,67,,,,,,256,28,27,90',
'89,91,92,,,218,,,,,,,41,,,94,93,,84,50,86,85,87,260,88,95,96,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,,209,,,213,,505,52,,,54,,255,,253,,40,,,',
',,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58',
'37,83,,61,,59,60,62,257,258,66,67,,,,,,256,289,293,90,89,91,92,,,218',
',,,,,,41,,,94,93,,84,50,86,85,87,260,88,95,96,,81,82,,38,39,,,,,,,,',
',,,,,,,,,,,,,209,,,213,,,52,,,54,,647,,253,,40,,,,,,,,217,,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,37,83,63,64,65,8,51,,,,57,58,',
',,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41',
',9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,',
',,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74',
'80,,,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60,62,257,258,66,67,,',
',,,256,289,293,90,89,91,92,,,218,,,,,,,41,,,94,93,,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40',
',,,,,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,37,83,63',
'64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89',
'91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,,36,,,279,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,37,83,63,64,65,8,51,,,,57,58,',
',,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41',
',9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,',
',,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74',
'80,,,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60,62,257,258,66,67,,',
',,,256,289,293,90,89,91,92,,,218,,,,,,,41,,,94,93,,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40',
',,,,,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57',
'58,37,83,,61,,59,60,62,257,258,66,67,,,,,,256,289,293,90,89,91,92,,',
'218,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,',
',,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,217,,,,,79,73,75,76',
'77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60,62,257',
'258,66,67,,,,,,256,289,293,90,89,91,92,,,218,,,,,,,290,,,94,93,,84,50',
'86,85,87,,88,95,96,,81,82,748,,334,332,331,738,333,,,,,,,,,,735,,,,',
',,,287,,,213,,,52,,,54,,,,,,336,,,,,,,,339,338,342,341,,79,73,75,76',
'77,78,,,,74,80,,,,513,,,56,,,53,,,,294,83,63,64,65,8,51,,,736,57,58',
',,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41',
',9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,',
',,36,,,279,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74',
'80,,,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60,62,257,258,66,67,,',
',,,256,289,293,90,89,91,92,,,218,,,,,,,41,,,94,93,,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40',
',,,,,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57',
'58,37,83,,61,,59,60,62,257,258,66,67,,,,,,256,289,293,90,89,91,92,,',
'218,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,',
',,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,217,,,,,79,73,75,76',
'77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60,62,23,24',
'66,67,,,,,,22,28,27,90,89,91,92,,,218,,,,,,,41,,,94,93,,84,50,86,85',
'87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54',
',,,,,40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51',
',53,,57,58,37,83,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92',
',,218,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,',
',,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,217,,,,,79,73,75',
'76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60,62,23',
'24,66,67,,,,,,22,28,27,90,89,91,92,,,218,,,,,,,41,,,94,93,,84,50,86',
'85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,',
'54,,,,,,40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56',
'51,,53,,57,58,37,83,,61,,59,60,62,257,258,66,67,,,,,,256,289,293,90',
'89,91,92,,,218,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,217,,,,,79',
'73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60',
'62,257,258,66,67,,,,,,256,289,293,90,89,91,92,,,218,,,,,,,41,,,94,93',
',84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,209,,,213',
',,52,,,54,,,,,,40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64',
'65,56,51,,53,,57,58,37,83,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90',
'89,91,92,,,17,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79',
'73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60',
'62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52',
',,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56',
'51,,53,,57,58,37,83,,61,,59,60,62,257,258,66,67,,,,,,256,289,293,90',
'89,91,92,,,218,,,,,,,290,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,',
',,,,,,,,,,,,,,,,,,,,,,287,,,284,,,52,,,54,,,,,,,,,,,,,,,,,,,79,73,75',
'76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,294,83,,61,,59,60,62',
'257,258,66,67,,,,,,256,28,27,90,89,91,92,,,218,,,,,,,41,,,94,93,,84',
'50,86,85,87,260,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,209,,,213',
',,52,,,54,,255,,,,40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,63',
'64,65,56,51,,53,,57,58,37,83,,61,,59,60,62,257,258,66,67,,,,,,256,28',
'27,90,89,91,92,,,218,,,,,,,41,,,94,93,,84,50,86,85,87,260,88,95,96,',
'81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,255,,,,40,,,',
',,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,37,83,63,64',
'65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91',
'92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,',
',,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,37,83,63,64,65,8,51,,,,57,58,',
',,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41',
',9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,',
',,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74',
'80,,,,,,,56,,,53,,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23',
'24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86',
'85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54',
',32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51',
',53,,57,58,37,83,,61,,59,60,62,257,258,66,67,,,,,,256,289,293,90,89',
'91,92,,,218,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,,209,,,213,530,,52,,,54,,,,,,40,,,,,,,,217,,,,,79',
'73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,37,83,63,64,65,8,51,,,,57,58',
',,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41',
',9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,',
',,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74',
'80,,,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60,62,257,258,66,67,,',
',,,256,289,293,90,89,91,92,,,218,,,,,,,290,,,94,93,,84,50,86,85,87,',
'88,95,96,,81,82,748,,334,332,331,738,333,,,,,,,,,,735,,,,,,,,697,,,213',
',,52,,,54,,,,,,336,733,,,,,,,339,338,342,341,,79,73,75,76,77,78,,,,74',
'80,,,,,,,56,,,53,,,,294,83,63,64,65,8,51,,,736,57,58,,,,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,',
',54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
',,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22',
'28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88,95,96',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,',
',,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37',
'83,,61,,59,60,62,257,258,66,67,,,,,,256,289,293,90,89,91,92,,,218,,',
',,,,41,,,94,93,,84,50,86,85,87,260,88,95,96,,81,82,,38,39,,,,,,,,,,',
',,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,217,,,,,79,73,75,76,77',
'78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60,62,257,258',
'66,67,,,,,,256,289,293,90,89,91,92,,,218,,,,,,,41,,,94,93,,84,50,86',
'85,87,260,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52',
',,54,,647,,,,40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65',
'56,51,,53,,57,58,37,83,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89',
'91,92,,,17,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73',
'75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60,62',
'257,258,66,67,,,,,,256,289,293,90,89,91,92,,,218,,,,,,,41,,,94,93,,84',
'50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,209,,,213,',
',52,,,54,,759,,,,40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,-530',
',,56,,,53,-530,-530,-530,37,83,-530,-530,-530,748,-530,334,332,331,738',
'333,,,,-530,-530,-530,,,,735,,,,,-530,-530,,-530,-530,-530,-530,-530',
',,,,,,,,,,336,733,,,,,,,339,338,342,341,,-530,-530,-530,-530,-530,-530',
'-530,-530,-530,-530,-530,-530,-530,-530,-530,,,-530,-530,-530,,772,-530',
',,-530,,,-530,,-530,,-530,736,-530,,-530,-530,-530,-530,-530,-530,-530',
',-530,-530,-530,,,,,,,,,,,,,-530,-530,-530,-530,,-530,-277,,-530,,,-91',
',-277,-277,-277,,,-277,-277,-277,,-277,,,,,,,,,,-277,-277,,,,,,,,,-277',
'-277,,-277,-277,-277,-277,-277,,,,,,,,,,,,,,,,,,,,,,,,-277,-277,-277',
'-277,-277,-277,-277,-277,-277,-277,-277,-277,-277,-277,-277,,,-277,-277',
'-277,,630,-277,,,-277,,,-277,,-277,,-277,,-277,,-277,-277,-277,-277',
'-277,-277,-277,,-277,,-277,,,,,,,,,,,,,-277,-277,-277,-277,,-277,-277',
',-277,,,-93,,-277,-277,-277,,,,-277,-277,,-277,,,,,,,,,,,,,,,,,,,,-277',
'-277,,-277,-277,-277,-277,-277,,,,,,,,,,,,,,,,,,,,,,,,-277,-277,-277',
'-277,-277,-277,-277,-277,-277,-277,-277,-277,-277,-277,-277,,,-277,-277',
'-277,,630,,,,-277,,,,,,,-277,,-277,,-277,-277,-277,-277,-277,-277,-277',
',-277,,-277,,,,,,,,,,,,,-277,-277,,-85,,-277,-530,,-277,,,-93,,-530',
'-530,-530,,,,-530,-530,,-530,,,,,,,,,-530,,,,,,,,,,,-530,-530,,-530',
'-530,-530,-530,-530,,,,,,,,,,,,,,,,,,,,,,,,-530,-530,-530,-530,-530',
'-530,-530,-530,-530,-530,-530,-530,-530,-530,-530,,,-530,-530,-530,',
'627,,,,-530,,,,,,,-530,,-530,,-530,-530,-530,-530,-530,-530,-530,,-530',
'-530,-530,,,,,,,,,,,,,-530,-530,,-83,,-530,-546,,-530,,,-91,,-546,-546',
'-546,,,-546,-546,-546,,-546,,,,,,,,,-546,-546,-546,,,,,,,,,-546,-546',
',-546,-546,-546,-546,-546,,,,,,,,,,,,,,,,,,,,,,,,-546,-546,-546,-546',
'-546,-546,-546,-546,-546,-546,-546,-546,-546,-546,-546,,,-546,-546,-546',
',,-546,,266,-546,,,-546,,-546,,-546,,-546,,-546,-546,-546,-546,-546',
'-546,-546,,-546,-546,-546,,,,,,,,,,,,,-546,-546,-546,-546,-374,-546',
',,-546,,,-374,-374,-374,,,-374,-374,-374,,-374,,,,,,,,,-374,-374,-374',
',,,,,,,,-374,-374,,-374,-374,-374,-374,-374,,,,,,,,,,,,,,,,,,,,,,,,-374',
'-374,-374,-374,-374,-374,-374,-374,-374,-374,-374,-374,-374,-374,-374',
',,-374,-374,-374,,,-374,,266,-374,,,-374,,-374,,-374,,-374,,-374,-374',
'-374,-374,-374,-374,-374,,-374,-374,-374,,,,,,,,,,,,,-374,-374,-374',
'-374,-272,-374,,,-374,,,-272,-272,-272,,,-272,-272,-272,,-272,,,,,,',
',,,-272,-272,-272,,,,,,,,-272,-272,,-272,-272,-272,-272,-272,,,,,,,',
',,,,,,,,,,,,,,,,-272,-272,-272,-272,-272,-272,-272,-272,-272,-272,-272',
'-272,-272,-272,-272,,,-272,-272,-272,,,-272,,,-272,,,-272,,-272,,-272',
',-272,,-272,-272,-272,-272,-272,-272,-272,,-272,,-272,,,,,,,,,,,,,-272',
'-272,-272,-272,-285,-272,,-272,-272,,,-285,-285,-285,,,-285,-285,-285',
',-285,,,,,,,,,,-285,-285,,,,,,,,,-285,-285,,-285,-285,-285,-285,-285',
',,,,,,,,,,,,,,,,,,,,,,,-285,-285,-285,-285,-285,-285,-285,-285,-285',
'-285,-285,-285,-285,-285,-285,,,-285,-285,-285,,,-285,,275,-285,,,-285',
',-285,,-285,,-285,,-285,-285,-285,-285,-285,-285,-285,,-285,,-285,,',
',,,,,,,,,,-285,-285,-285,-285,-546,-285,,,-285,,,-546,-546,-546,,,-546',
'-546,-546,,-546,,,,,,,,,,-546,,,,,,,,,,-546,-546,,-546,-546,-546,-546',
'-546,,,,,,,,,,,,,,-546,,,,,,,-546,-546,-546,,,-546,-546,-546,,-546,',
',,,,-546,,,,-546,,,-546,,,,,266,-546,-546,-546,,-546,-546,-546,-546',
'-546,,,,,,,,,,,,,-546,,,,,,,,,,,,,-546,,-546,,,-546,,,,,-546,,,,,,,-546',
',,,,266,-546,,,,,,,,,,,,,,,,,,,,,-546,,,,,,,,,,,,,-546,,-546,,,-546',
'156,167,157,180,153,173,163,162,188,191,178,161,160,155,181,189,190',
'165,154,168,172,174,166,159,,,,175,182,177,176,169,179,164,152,171,170',
'183,184,185,186,187,151,158,149,150,147,148,,111,113,,,112,,,,,,,,,142',
'143,,139,121,122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,',
',,,,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119,,,146,192',
',,,,,,,,,80,156,167,157,180,153,173,163,162,188,191,178,161,160,155',
'181,189,190,165,154,168,172,174,166,159,,,,175,182,177,176,169,179,164',
'152,171,170,183,184,185,186,187,151,158,149,150,147,148,,111,113,110',
',112,,,,,,,,,142,143,,139,121,122,123,130,127,129,,,124,125,,,,,144',
'145,131,132,,,,,,,,,,,,,136,135,,120,141,138,137,133,134,128,126,118',
'140,119,,,146,192,,,,,,,,,,80,156,167,157,180,153,173,163,162,188,191',
'178,161,160,155,181,189,190,165,154,168,172,174,166,159,,,,175,182,177',
'176,169,179,164,152,171,170,183,184,185,186,187,151,158,149,150,147',
'148,,111,113,,,112,,,,,,,,,142,143,,139,121,122,123,130,127,129,,,124',
'125,,,,,144,145,131,132,,,,,,,,,,,,,136,135,,120,141,138,137,133,134',
'128,126,118,140,119,,,146,192,,,,,,,,,,80,156,167,157,180,153,173,163',
'162,188,191,178,161,160,155,181,189,190,165,154,168,172,174,166,159',
',,,175,182,177,176,169,179,164,152,171,170,183,184,185,186,187,151,158',
'149,150,147,148,,111,113,,,112,,,,,,,,,142,143,,139,121,122,123,130',
'127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,,,,136,135,,120,141,138',
'137,133,134,128,126,118,140,119,,,146,192,,,,,,,,,,80,156,167,157,180',
'153,173,163,162,188,191,178,161,160,155,181,189,190,165,154,168,172',
'174,166,159,,,,175,182,177,176,169,179,164,152,171,170,183,184,185,186',
'187,151,158,149,150,147,148,,111,113,,,112,,,,,,,,,142,143,,139,121',
'122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,,,,136,135',
',120,141,138,137,133,134,128,126,118,140,119,,,146,156,167,157,180,153',
'173,163,162,188,191,178,161,160,155,181,189,190,165,154,168,172,174',
'166,159,,,,175,182,177,374,373,375,372,152,171,170,183,184,185,186,187',
'151,158,149,150,370,371,,368,113,86,85,369,,88,,,,,,,142,143,,139,121',
'122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,379,,,,,,,136',
'135,,120,141,138,137,133,134,128,126,118,140,119,,,146,156,167,157,180',
'153,173,163,162,188,191,178,161,160,155,181,189,190,165,154,168,172',
'174,166,159,,,,175,182,177,176,169,179,164,152,171,170,183,184,185,186',
'187,151,158,149,150,147,148,,111,113,396,395,112,,397,,,,,,,142,143',
',139,121,122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,',
',,,136,135,,120,141,138,137,133,134,128,126,118,140,119,,,146,156,167',
'157,180,153,173,163,162,188,191,178,161,160,155,181,189,190,165,154',
'168,172,174,166,159,,,,175,182,177,176,169,179,164,152,171,170,183,184',
'185,186,187,151,158,149,150,147,148,,111,113,396,395,112,,397,,,,,,',
'142,143,,139,121,122,123,130,127,129,,,124,125,,,,,144,145,131,132,',
',,,,,,,,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119,440',
'431,146,,441,,,,,,,,,142,143,,139,121,122,123,130,127,129,,,124,125',
',,,,144,145,131,132,,,,,,266,,,,,,,136,135,,120,141,138,137,133,134',
'128,126,118,140,119,433,437,146,,435,,,,,,,,,142,143,,139,121,122,123',
'130,127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,,,,136,135,,120,141',
'138,137,133,134,128,126,118,140,119,440,431,146,,441,,,,,,,,,142,143',
',139,121,122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,',
',,,136,135,,120,141,138,137,133,134,128,126,118,140,119,676,437,146',
',677,,,,,,,,,142,143,,139,121,122,123,130,127,129,,,124,125,,,,,144',
'145,131,132,,,,,,,,,,,,,136,135,,120,141,138,137,133,134,128,126,118',
'140,119,632,431,146,,633,,,,,,,,,142,143,,139,121,122,123,130,127,129',
',,124,125,,,,,144,145,131,132,,,,,,266,,,,,,,136,135,,120,141,138,137',
'133,134,128,126,118,140,119,632,431,146,,633,,,,,,,,,142,143,,139,121',
'122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,266,,,,,,,136',
'135,,120,141,138,137,133,134,128,126,118,140,119,634,437,146,,635,,',
',,,,,,142,143,,139,121,122,123,130,127,129,,,124,125,,,,,144,145,131',
'132,,,,,,,,,,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119',
'634,437,146,,635,,,,,,,,,142,143,,139,121,122,123,130,127,129,,,124',
'125,,,,,144,145,131,132,,,,,,,,,,,,,136,135,,120,141,138,137,133,134',
'128,126,118,140,119,725,437,146,,723,,,,,,,,,142,143,,139,121,122,123',
'130,127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,,,,136,135,,120,141',
'138,137,133,134,128,126,118,140,119,935,431,146,,936,,,,,,,,,142,143',
',139,121,122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,266',
',,,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119,725,437,146',
',868,,,,,,,,,142,143,,139,121,122,123,130,127,129,,,124,125,,,,,144',
'145,131,132,,,,,,,,,,,,,136,135,,120,141,138,137,133,134,128,126,118',
'140,119,673,431,146,,674,,,,,,,,,142,143,,139,121,122,123,130,127,129',
',,124,125,,,,,144,145,131,132,,,,,,266,,,,,,,136,135,,120,141,138,137',
'133,134,128,126,118,140,119,937,437,146,,938,,,,,,,,,142,143,,139,121',
'122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,,,,136,135',
',120,141,138,137,133,134,128,126,118,140,119,720,437,146,,721,,,,,,',
',,142,143,,139,121,122,123,130,127,129,,,124,125,,,,,144,145,131,132',
',,,,,,,,,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119,718',
'431,146,,719,,,,,,,,,142,143,,139,121,122,123,130,127,129,,,124,125',
',,,,144,145,131,132,,,,,,266,,,,,,,136,135,,120,141,138,137,133,134',
'128,126,118,140,119,440,431,146,,441,,,,,,,,,142,143,,139,121,122,123',
'130,127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,,,,136,135,,120,141',
'138,137,133,134,128,126,118,140,119,427,431,146,,428,,,,,,,,,142,143',
',139,121,122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,266',
',,,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119,440,431,146',
',441,,,,,,,,,142,143,,139,121,122,123,130,127,129,,,124,125,,,,,144',
'145,131,132,,,,,,,,,,,,,136,135,,120,141,138,137,133,134,128,126,118',
'140,119,,,146' ]
        racc_action_table = arr = ::Array.new(24035, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'0,0,0,0,0,345,718,720,0,0,390,730,730,0,324,0,0,0,0,0,0,0,55,359,839',
'683,683,0,0,0,0,0,0,0,355,839,0,453,453,350,250,350,0,0,0,0,0,0,865',
'0,0,0,0,0,675,0,0,0,773,0,0,352,0,0,910,364,910,719,839,839,319,308',
'308,390,720,872,359,359,596,596,819,683,818,573,359,0,346,71,0,359,937',
'0,579,453,0,71,0,936,721,572,0,730,804,935,839,678,730,773,0,55,359',
'718,720,0,0,0,0,0,0,345,673,345,0,0,345,676,820,367,367,367,0,367,359',
'0,570,367,367,0,0,355,367,218,367,367,367,367,367,367,367,804,804,804',
'804,566,367,367,367,367,367,367,367,308,865,367,865,721,352,865,596',
'937,367,364,719,367,367,319,367,367,367,367,367,26,367,367,367,819,367',
'367,673,872,364,872,676,676,872,364,818,579,818,818,346,818,346,721',
'937,346,937,344,344,937,674,936,367,936,668,367,936,935,367,935,571',
'367,935,681,589,673,820,481,820,589,676,820,291,673,570,682,570,303',
'676,570,367,367,367,367,367,367,633,26,831,367,367,668,834,834,419,419',
'419,367,419,831,367,481,419,419,367,367,684,419,26,419,419,419,419,419',
'419,419,607,449,674,212,208,419,419,419,419,419,419,419,381,672,419',
'689,831,831,383,633,492,419,291,458,419,419,392,419,419,419,419,419',
'690,419,419,419,387,419,419,674,419,419,385,291,571,385,571,674,693',
'571,449,503,831,208,492,458,581,581,374,458,458,607,607,419,581,374',
'419,695,210,419,607,670,419,381,381,381,502,375,419,383,383,383,632',
'377,375,503,419,392,392,392,377,419,419,419,419,419,419,387,387,387',
'419,419,697,385,385,437,437,437,419,437,502,419,581,437,437,419,419',
'210,437,698,437,437,437,437,437,437,437,688,294,294,688,632,437,437',
'437,437,437,437,437,943,943,437,696,696,728,699,637,943,437,728,696',
'437,437,702,437,437,437,437,437,437,437,437,437,311,437,437,311,437',
'437,561,637,637,637,637,637,637,637,637,637,637,637,301,301,637,637',
'373,276,637,637,301,437,276,373,437,437,943,437,315,696,437,315,437',
'637,437,637,437,637,637,637,637,637,637,637,437,637,254,42,42,437,437',
'437,437,437,437,42,707,349,437,437,713,637,349,921,921,921,437,921,301',
'437,372,921,921,437,437,715,921,372,921,921,921,921,921,921,921,5,5',
'5,5,5,921,921,921,921,921,921,921,288,288,921,285,285,3,42,369,288,921',
'3,285,921,921,369,921,921,921,921,921,921,921,921,921,312,921,921,312',
'921,921,211,480,480,480,480,480,480,480,480,480,480,480,677,677,480',
'480,25,734,480,480,677,921,734,25,921,677,288,921,717,285,921,557,921',
'480,300,480,921,480,480,480,480,480,480,480,921,480,546,207,207,921',
'921,921,921,921,921,207,15,15,921,921,310,480,480,438,438,438,921,438',
'677,921,371,438,438,921,921,299,438,371,438,438,438,438,438,438,438',
'667,667,667,667,667,438,438,438,438,438,438,438,353,353,438,13,13,663',
'207,368,353,438,725,13,438,438,368,438,438,438,438,438,438,438,438,438',
'726,438,438,209,438,438,660,19,19,19,19,19,19,19,19,19,19,19,788,788',
'19,19,370,313,19,19,788,438,533,370,438,438,353,438,532,13,438,531,438',
'19,438,19,438,19,19,19,19,19,19,19,438,19,265,723,723,438,438,438,438',
'438,438,723,37,37,438,438,723,19,737,448,448,448,438,448,788,438,314',
'448,448,438,438,741,448,742,448,448,448,448,448,448,448,277,277,277',
'277,277,448,448,448,448,448,448,448,900,900,448,901,901,744,723,417',
'900,448,745,901,448,448,746,448,448,448,448,448,448,448,448,448,748',
'448,448,293,448,448,751,417,417,417,417,417,417,417,417,417,417,417',
'903,903,417,417,554,554,417,417,903,448,656,620,448,316,900,448,522',
'901,448,758,448,417,193,417,448,417,417,417,417,417,417,417,448,417',
'705,705,427,448,448,448,448,448,448,925,925,278,448,448,428,417,519',
'417,620,915,448,514,903,448,915,251,620,448,448,919,919,919,919,919',
'110,915,512,919,919,110,110,97,919,427,919,919,919,919,919,919,919,427',
'83,83,646,428,919,919,919,919,919,919,919,428,14,919,915,915,915,915',
'78,919,919,509,919,919,919,508,919,919,919,919,919,298,919,919,919,35',
'919,919,776,919,919,362,362,777,780,782,457,77,785,362,924,924,915,14',
'837,518,518,786,924,837,787,14,919,518,325,919,938,938,919,791,837,919',
'298,919,938,504,35,919,457,938,298,794,457,457,35,919,795,327,498,644',
'919,919,919,919,919,919,810,362,497,919,919,837,837,837,837,813,924',
'919,494,328,919,518,41,340,919,919,911,911,911,911,911,343,938,822,911',
'911,825,826,827,911,280,911,911,911,911,911,911,911,611,837,462,461',
'460,911,911,911,911,911,911,911,281,809,911,809,809,809,849,809,911',
'911,850,911,911,911,459,911,911,911,911,911,36,911,911,911,618,911,911',
'858,911,911,34,659,659,659,659,659,659,659,659,659,659,659,286,286,659',
'659,636,351,659,659,286,911,868,869,911,20,874,911,875,439,911,282,911',
'659,354,659,911,659,659,659,659,659,659,659,911,659,883,885,888,911',
'911,911,911,911,911,889,890,891,911,911,434,659,356,659,12,548,911,426',
'286,911,422,902,420,911,911,906,906,906,906,906,11,752,752,906,906,752',
'752,752,906,290,906,906,906,906,906,906,906,10,912,360,9,920,906,906',
'906,906,906,906,906,6,414,906,548,548,548,548,408,906,906,389,906,906',
'906,289,906,906,906,906,906,929,906,906,906,931,906,906,932,906,906',
'934,680,680,680,680,680,680,680,680,680,680,680,623,287,680,680,1,386',
'680,680,628,906,,,906,,,906,,,906,,906,680,,680,906,680,680,680,680',
'680,680,680,906,680,,,,906,906,906,906,906,906,,,,906,906,,680,,,,,906',
',,906,,,,906,906,899,899,899,899,899,,,,899,899,,,,899,,899,899,899',
'899,899,899,899,,,,,,899,899,899,899,899,899,899,,562,899,562,562,562',
',562,899,899,,899,899,899,,899,899,899,899,899,,899,899,899,,899,899',
',899,899,,769,769,769,769,769,769,769,769,769,769,769,,,769,769,,,769',
'769,,899,,,899,,,899,,,899,,899,769,,769,899,769,769,769,769,769,769',
'769,899,769,,,,899,899,899,899,899,899,,,,899,899,,769,,897,897,897',
'899,897,,899,,897,897,899,899,,897,,897,897,897,897,897,897,897,,,,',
',897,897,897,897,897,897,897,,,897,,,,,,,897,,,897,897,,897,897,897',
'897,897,,897,897,897,,897,897,,897,897,,443,443,443,443,443,443,443',
'443,443,443,443,,,443,443,,,443,443,,897,,,897,,,897,,,897,,897,443',
'897,443,897,443,443,443,443,443,443,443,897,443,,,,897,897,897,897,897',
'897,,,,897,897,,443,,,,,897,,,897,,,,897,897,880,880,880,880,880,,,',
'880,880,,,,880,,880,880,880,880,880,880,880,,,,,,880,880,880,880,880',
'880,880,,,880,,,,,,880,880,,880,880,880,,880,880,880,880,880,,880,880',
'880,,880,880,,880,880,,767,767,767,767,767,767,767,767,767,767,767,',
',767,767,,,767,767,,880,,,880,,,880,,,880,,880,767,,767,880,767,767',
'767,767,767,767,767,880,767,,,,880,880,880,880,880,880,,,,880,880,,767',
',,,,880,,,880,,,,880,880,877,877,877,877,877,,,,877,877,,,,877,,877',
'877,877,877,877,877,877,,,,,,877,877,877,877,877,877,877,,,877,,,,,',
'877,877,,877,877,877,,877,877,877,877,877,,877,877,877,,877,877,,877',
'877,,529,529,529,529,529,529,529,529,529,529,529,,,529,529,,,529,529',
',877,,,877,,,877,,,877,,877,529,,529,877,529,529,529,529,529,529,529',
'877,529,,,,877,877,877,877,877,877,,,,877,877,,529,,17,17,17,877,17',
',877,,17,17,877,877,,17,,17,17,17,17,17,17,17,,,,,,17,17,17,17,17,17',
'17,,,17,,,,,,,17,,,17,17,,17,17,17,17,17,,17,17,17,,17,17,,17,17,,425',
'425,425,425,425,425,425,425,425,425,425,,,425,425,,,425,425,,17,,,17',
'17,,17,,,17,,,425,,425,17,425,425,425,425,425,425,425,17,425,,,,17,17',
'17,17,17,17,,,,17,17,,425,,18,18,18,17,18,,17,,18,18,17,17,,18,,18,18',
'18,18,18,18,18,,,,,,18,18,18,18,18,18,18,,,18,,,,,,,18,,,18,18,,18,18',
'18,18,18,,18,18,18,,18,18,,18,18,,774,774,774,774,774,774,774,774,774',
'774,774,,,774,774,,,774,774,,18,,,18,,,18,,,18,,,774,,774,18,774,774',
'774,774,774,774,774,18,774,,,,18,18,18,18,18,18,,,,18,18,,774,,876,876',
'876,18,876,,18,,876,876,18,18,,876,,876,876,876,876,876,876,876,,,,',
',876,876,876,876,876,876,876,,,876,,,,,,,876,,,876,876,,876,876,876',
'876,876,,876,876,876,,876,876,,876,876,,764,764,764,764,764,764,764',
'764,764,764,764,,,764,764,,,764,764,,876,,,876,,,876,,,876,,876,764',
',764,876,764,764,764,764,764,764,764,876,764,,,,876,876,876,876,876',
'876,,,,876,876,,764,,450,450,450,876,450,,876,,450,450,876,876,,450',
',450,450,450,450,450,450,450,,,,,,450,450,450,450,450,450,450,,,450',
',,,,,,450,,,450,450,,450,450,450,450,450,,450,450,450,,450,450,,450',
'450,,762,762,762,762,762,762,762,762,762,762,762,,,762,762,,,762,762',
',450,,,450,,,450,,,450,,,762,,762,450,762,762,762,762,762,762,762,450',
'762,,,,450,450,450,450,450,450,,,,450,450,,762,,22,22,22,450,22,,450',
',22,22,450,450,,22,,22,22,22,22,22,22,22,,,,,,22,22,22,22,22,22,22,',
',22,,,,,,,22,,,22,22,,22,22,22,22,22,22,22,22,22,,22,22,,22,22,,757',
'757,757,757,757,757,757,757,757,757,757,,,757,757,,,757,757,,22,,,22',
',,22,,,22,,22,757,22,757,22,757,757,757,757,757,757,757,22,757,,,,22',
'22,22,22,22,22,,,,22,22,,757,,23,23,23,22,23,,22,,23,23,22,22,,23,,23',
'23,23,23,23,23,23,,,,,,23,23,23,23,23,23,23,,,23,,,,,,,23,,,23,23,,23',
'23,23,23,23,23,23,23,23,,23,23,,23,23,,248,248,248,248,248,248,248,248',
'248,248,248,,,248,248,,,248,248,,23,,,23,,,23,,,23,,23,248,23,248,23',
'248,248,248,248,248,248,248,23,248,,,,23,23,23,23,23,23,,,,23,23,,248',
',24,24,24,23,24,,23,,24,24,23,23,,24,,24,24,24,24,24,24,24,,,,,,24,24',
'24,24,24,24,24,,,24,,,,,,,24,,,24,24,,24,24,24,24,24,24,24,24,24,,24',
'24,,24,24,,852,852,852,852,852,852,852,852,852,852,852,,,852,852,,,852',
'852,,24,,,24,,,24,,,24,,24,852,24,852,24,852,852,852,852,852,852,852',
'24,852,,,,24,24,24,24,24,24,,,,24,24,,852,,866,866,866,24,866,,24,,866',
'866,24,24,,866,,866,866,866,866,866,866,866,,,,,,866,866,866,866,866',
'866,866,,559,866,559,559,559,,559,,866,,,866,866,,866,866,866,866,866',
',866,866,866,,866,866,641,,641,641,641,476,641,,,,,,336,559,336,336',
'336,,336,,,559,,,866,,,866,,,866,,,866,,,,476,,641,,476,476,476,476',
',,641,641,641,641,336,866,866,866,866,866,866,641,336,,866,866,,,,451',
'451,451,866,451,,866,,451,451,866,866,,451,,451,451,451,451,451,451',
'451,,,,,,451,451,451,451,451,451,451,,703,451,703,703,703,477,703,,451',
',,451,451,,451,451,451,451,451,,451,451,451,,451,451,,451,451,,,465',
',,,,,477,,703,,477,477,477,477,,,703,465,465,451,,,451,,,451,,,451,',
',,465,,451,,465,465,465,465,,,451,,,,,451,451,451,451,451,451,,,,451',
'451,,,,452,452,452,451,452,,451,,452,452,451,451,,452,,452,452,452,452',
'452,452,452,,,,,,452,452,452,452,452,452,452,,,452,,,,,,,452,,,452,452',
',452,452,452,452,452,,452,452,452,,452,452,,452,452,,470,,,,,,,,,,,',
',,,,,470,470,,452,,,452,,,452,,,452,,,470,,470,452,470,470,470,470,',
',470,452,470,,,,452,452,452,452,452,452,,,,452,452,,,,348,348,348,452',
'348,,452,,348,348,452,452,,348,,348,348,348,348,348,348,348,,,,,,348',
'348,348,348,348,348,348,,,348,,,,,,,348,,,348,348,,348,348,348,348,348',
',348,348,348,,348,348,,348,348,,472,472,472,472,472,472,472,,,472,472',
',,,,,,472,472,,348,,,348,,,348,,,348,,,472,,472,348,472,472,472,472',
'472,472,472,348,472,,,,348,348,348,348,348,348,,,,348,348,,,,,,,348',
',,348,,,,348,348,30,30,30,30,30,,,,30,30,,,,30,,30,30,30,30,30,30,30',
',,,,,30,30,30,30,30,30,30,,,30,,,,,,30,30,,30,30,30,,30,30,30,30,30',
',30,30,30,,30,30,,30,30,,471,471,471,471,471,471,471,,,471,471,,,,,',
',471,471,,30,,,30,,,30,,,30,,30,471,,471,30,471,471,471,471,471,471',
'471,30,471,,,,30,30,30,30,30,30,,,,30,30,,,,31,31,31,30,31,,30,,31,31',
'30,30,,31,,31,31,31,31,31,31,31,,,,,,31,31,31,31,31,31,31,,,31,,,,,',
',31,,,31,31,,31,31,31,31,31,,31,31,31,,31,31,320,,320,320,320,,320,',
',,,,,,,,,,,,,,,,31,,,31,,,31,,,31,,31,,,,320,,320,,,,,,320,320,320,320',
',31,31,31,31,31,31,,,,31,31,,,,32,32,32,31,32,,31,,32,32,31,31,,32,',
'32,32,32,32,32,32,32,,,,,,32,32,32,32,32,32,32,,,32,,,,,,,32,,,32,32',
',32,32,32,32,32,,32,32,32,,32,32,835,,835,835,835,835,835,,,,,,,,,,835',
',,,,,,,32,,,32,,,32,,,32,,,,,,835,,,,,,,,835,835,835,835,,32,32,32,32',
'32,32,,,,32,32,,,,32,,,32,,,32,,,,32,32,862,862,862,862,862,,,835,862',
'862,,,,862,,862,862,862,862,862,862,862,,,,,,862,862,862,862,862,862',
'862,,,862,,,,,,862,862,,862,862,862,,862,862,862,862,862,,862,862,862',
',862,862,,862,862,,456,456,456,456,456,456,456,456,456,456,456,,,456',
'456,,,456,456,,862,,,862,,,862,,,862,,862,456,,456,862,456,456,456,456',
'456,456,456,862,456,,,,862,862,862,862,862,862,,,,862,862,,,,857,857',
'857,862,857,,862,,857,857,862,862,,857,,857,857,857,857,857,857,857',
',,,,,857,857,857,857,857,857,857,,,857,,,,,,,857,,,857,857,,857,857',
'857,857,857,857,857,857,857,,857,857,,857,857,,474,474,474,474,474,474',
'474,,,474,474,,,,,,,474,474,,857,,,857,,,857,,,857,,,474,857,474,857',
'474,474,474,474,474,474,474,857,474,,,,857,857,857,857,857,857,,,,857',
'857,,,,853,853,853,857,853,,857,,853,853,857,857,,853,,853,853,853,853',
'853,853,853,,,,,,853,853,853,853,853,853,853,,,853,,,,,,,853,,,853,853',
',853,853,853,853,853,,853,853,853,,853,853,,853,853,,473,473,473,473',
'473,473,473,,,473,473,,,,,,,473,473,,853,,,853,,,853,,,853,,,473,,473',
'853,473,473,473,473,473,473,473,853,473,,,,853,853,853,853,853,853,',
',,853,853,,,,841,841,841,853,841,,853,,841,841,853,853,,841,,841,841',
'841,841,841,841,841,,,,,,841,841,841,841,841,841,841,,,841,,,,,,,841',
',,841,841,,841,841,841,841,841,,841,841,841,,841,841,,841,841,,469,',
',,,,,,,,,,,,,,,469,469,,841,,,841,,,841,,,841,,,469,,469,841,469,469',
'469,469,,,469,841,469,,,,841,841,841,841,841,841,,,,841,841,,,,38,38',
'38,841,38,,841,,38,38,841,841,,38,,38,38,38,38,38,38,38,,,,,,38,38,38',
'38,38,38,38,,,38,,,,,,,38,,,38,38,,38,38,38,38,38,,38,38,38,,38,38,',
'38,38,,468,,,,,,,,,,,,,,,,,468,468,,38,,,38,,,38,,,38,,,468,,468,38',
'468,468,468,468,,,468,38,468,,,,38,38,38,38,38,38,,,,38,38,,,,39,39',
'39,38,39,,38,,39,39,38,38,,39,,39,39,39,39,39,39,39,,,,,,39,39,39,39',
'39,39,39,,,39,,,,,,,39,,,39,39,,39,39,39,39,39,,39,39,39,,39,39,,39',
'39,,467,,,,,,,,,,,,,,,,,467,467,,39,,,39,,,39,,,39,,,467,,467,39,467',
'467,467,467,,,467,39,467,,,,39,39,39,39,39,39,,,,39,39,,,,40,40,40,39',
'40,,39,,40,40,39,39,,40,,40,40,40,40,40,40,40,,,,,,40,40,40,40,40,40',
'40,,,40,,,,,,,40,,,40,40,,40,40,40,40,40,,40,40,40,,40,40,,40,40,,466',
'466,466,466,466,466,466,,,466,466,,,,,,,466,466,,40,,,40,,,40,,,40,',
',466,,466,40,466,466,466,466,466,466,466,40,466,,,,40,40,40,40,40,40',
',,,40,40,,,,347,347,347,40,347,,40,,347,347,40,40,,347,,347,347,347',
'347,347,347,347,,,,,,347,347,347,347,347,347,347,,,347,,,,,,,347,,,347',
'347,,347,347,347,347,347,,347,347,347,,347,347,,347,347,,475,475,475',
'475,475,475,475,,,475,475,,,,,,,475,475,,347,,,347,,,347,,,347,,,475',
',475,347,475,475,475,475,475,475,475,347,475,,,,347,347,347,347,347',
'347,,,,347,347,,,,,,,347,,,347,,,,347,347,815,815,815,815,815,,,,815',
'815,,,,815,,815,815,815,815,815,815,815,,,,,,815,815,815,815,815,815',
'815,,,815,,,,,,815,815,,815,815,815,,815,815,815,815,815,,815,815,815',
',815,815,,815,815,,479,479,479,479,479,479,479,479,,479,479,,,,,,,479',
'479,,815,,,815,,,815,,,815,,815,479,,479,815,479,479,479,479,479,479',
'479,815,479,,,,815,815,815,815,815,815,,,,815,815,,,,483,483,483,815',
'483,,815,,483,483,815,815,,483,,483,483,483,483,483,483,483,,,,,,483',
'483,483,483,483,483,483,,,483,,,,,,,483,,,483,483,,483,483,483,483,483',
'483,483,483,483,,483,483,,483,483,,478,478,478,478,478,478,478,,,478',
'478,,,,,,,478,478,,483,,,483,,,483,,,483,,483,478,483,478,483,478,478',
'478,478,478,478,478,483,478,,,,483,483,483,483,483,483,,,,483,483,,',
',52,52,52,483,52,,483,,52,52,483,483,,52,,52,52,52,52,52,52,52,,,,,',
'52,52,52,52,52,52,52,,,52,,,,,,,52,,,52,52,,52,52,52,52,52,,52,52,52',
',52,52,,52,52,,455,455,455,455,455,455,455,455,455,455,455,,,455,455',
',,455,455,,52,,,52,,,52,,,52,,,455,,455,52,455,455,455,455,455,455,455',
'52,455,,,,52,52,52,52,52,52,,,,52,52,,,,53,53,53,52,53,,52,,53,53,52',
'52,,53,,53,53,53,53,53,53,53,,,,,,53,53,53,53,53,53,53,,,53,,,,,,,53',
',,53,53,,53,53,53,53,53,53,53,53,53,,53,53,,53,53,,464,,,,,,,,,,,,,',
',,,464,464,,53,,,53,,,53,,,53,,53,464,,464,53,464,464,464,464,,,,53',
',,,,53,53,53,53,53,53,,,,53,53,,,,54,54,54,53,54,,53,,54,54,53,53,,54',
',54,54,54,54,54,54,54,,,,,,54,54,54,54,54,54,54,,,54,,,,,,,54,,,54,54',
',54,54,54,54,54,54,54,54,54,,54,54,,54,54,,463,,,,,,,,,,,,,,,,,463,463',
',54,,,54,,,54,,,54,,,463,,463,54,463,463,463,463,,,,54,,,,,54,54,54',
'54,54,54,,,,54,54,,,,,,,54,,,54,,,,54,54,814,814,814,814,814,,,,814',
'814,,,,814,,814,814,814,814,814,814,814,,,,,,814,814,814,814,814,814',
'814,,,814,,,,,,814,814,,814,814,814,,814,814,814,814,814,,814,814,814',
',814,814,,814,814,,,,,,,,,,,,,,,,,,,,,,814,,,814,,,814,,,814,,814,,',
',814,,,,,,,,814,,,,,814,814,814,814,814,814,,,,814,814,,,,812,812,812',
'814,812,,814,,812,812,814,814,,812,,812,812,812,812,812,812,812,,,,',
',812,812,812,812,812,812,812,,,812,,,,,,,812,,,812,812,,812,812,812',
'812,812,,812,812,812,,812,812,,812,812,,,,,,,,,,,,,,,,,,,,,,812,,,812',
',,812,,,812,,,,,,812,,,,,,,,812,,,,,812,812,812,812,812,812,,,,812,812',
',,,57,57,57,812,57,,812,,57,57,812,812,,57,,57,57,57,57,57,57,57,,,',
',,57,57,57,57,57,57,57,,,57,,,,,,,57,,,57,57,,57,57,57,57,57,,57,57',
'57,,57,57,,57,57,,,,,,,,,,,,,,,,,,,,,,57,,,57,,,57,,,57,,,,,,57,,,,',
',,,57,,,,,57,57,57,57,57,57,,,,57,57,,,,58,58,58,57,58,,57,,58,58,57',
'57,,58,,58,58,58,58,58,58,58,,,,,,58,58,58,58,58,58,58,,,58,,,,,,,58',
',,58,58,,58,58,58,58,58,,58,58,58,,58,58,,58,58,,,,,,,,,,,,,,,,,,,,',
',58,,,58,,,58,,,58,,,,,,58,,,,,,,,58,,,,,58,58,58,58,58,58,,,,58,58',
',,,61,61,61,58,61,,58,,61,61,58,58,,61,,61,61,61,61,61,61,61,,,,,,61',
'61,61,61,61,61,61,,,61,,,,,,,61,,,61,61,,61,61,61,61,61,,61,61,61,,61',
'61,,61,61,,,,,,,,,,,,,,,,,,,,,,61,,,61,,,61,,,61,,,,,,61,,,,,,,,61,',
',,,61,61,61,61,61,61,,,,61,61,61,,,,,61,61,,,61,,,,61,61,62,62,62,,62',
',,,62,62,,,,62,,62,62,62,62,62,62,62,,,,,,62,62,62,62,62,62,62,,,62',
',,,,,,62,,,62,62,,62,62,62,62,62,,62,62,62,,62,62,56,,56,56,56,,56,',
',,,,,,,,,,,,,,,,62,,,62,,,62,,,62,,62,,,,56,56,,,,,,,56,56,56,56,,62',
'62,62,62,62,62,,,,62,62,,,,63,63,63,62,63,,62,,63,63,62,62,,63,,63,63',
'63,63,63,63,63,,,,,,63,63,63,63,63,63,63,,,63,,,,,,,63,,,63,63,,63,63',
'63,63,63,,63,63,63,,63,63,552,,552,552,552,,552,,,,,,,,,,,,,,,63,,,63',
',,63,,,63,,,63,,,,,,552,,,,,,,,552,552,552,552,,63,63,63,63,63,63,,',
',63,63,,,,485,485,485,63,485,,63,,485,485,63,63,,485,,485,485,485,485',
'485,485,485,,,,,,485,485,485,485,485,485,485,,,485,,,,,,,485,,,485,485',
',485,485,485,485,485,485,485,485,485,,485,485,,485,485,,,,,,,,,,,,,',
',,,,,,,,485,,,485,,,485,,,485,,,,485,,485,,,,,,,,485,,,,,485,485,485',
'485,485,485,,,,485,485,,,,,,,485,,,485,,,,485,485,793,793,793,793,793',
',,,793,793,,,,793,,793,793,793,793,793,793,793,,,,,,793,793,793,793',
'793,793,793,,,793,,,,,,793,793,,793,793,793,,793,793,793,793,793,,793',
'793,793,,793,793,,793,793,,,,,,,,,,,,,,,,,,,,,,793,,,793,,,793,,,793',
',793,,,,793,,,,,,,,793,,,,,793,793,793,793,793,793,,,,793,793,,,,783',
'783,783,793,783,,793,,783,783,793,793,,783,,783,783,783,783,783,783',
'783,,,,,,783,783,783,783,783,783,783,,,783,,,,,,,783,,,783,783,,783',
'783,783,783,783,,783,783,783,,783,783,,783,783,,,,,,,,,,,,,,,,,,,,,',
'783,,,783,,,783,,,783,,783,,,,783,,,,,,,,783,,,,,783,783,783,783,783',
'783,,,,783,783,,,,772,772,772,783,772,,783,,772,772,783,783,,772,,772',
'772,772,772,772,772,772,,,,,,772,772,772,772,772,772,772,,,772,,,,,',
',772,,,772,772,,772,772,772,772,772,,772,772,772,,772,772,,772,772,',
',,,,,,,,,,,,,,,,,,,,772,,,772,,,772,,,772,,,,,,772,,,,,,,,772,,,,,772',
'772,772,772,772,772,,,,772,772,,,,487,487,487,772,487,,772,,487,487',
'772,772,,487,,487,487,487,487,487,487,487,,,,,,487,487,487,487,487,487',
'487,,,487,,,,,,,487,,,487,487,,487,487,487,487,487,,487,487,487,,487',
'487,,487,487,,,,,,,,,,,,,,,,,,,,,,487,,,487,,,487,,,487,,,,,,487,,,',
',,,,487,,,,,487,487,487,487,487,487,,,,487,487,,,,771,771,771,487,771',
',487,,771,771,487,487,,771,,771,771,771,771,771,771,771,,,,,,771,771',
'771,771,771,771,771,,,771,,,,,,,771,,,771,771,,771,771,771,771,771,',
'771,771,771,,771,771,,771,771,,,,,,,,,,,,,,,,,,,,,,771,,,771,,,771,',
',771,,,,,,771,,,,,,,,771,,,,,771,771,771,771,771,771,,,,771,771,,,,84',
'84,84,771,84,,771,,84,84,771,771,,84,,84,84,84,84,84,84,84,,84,,,,84',
'84,84,84,84,84,84,,,84,,,,,,,84,,,84,84,,84,84,84,84,84,84,84,84,84',
',84,84,,84,84,,,,,,,,,,,,,,,,,,,,,,84,,,84,84,,84,,,84,,84,,84,,84,',
',,,,,,84,,84,,,84,84,84,84,84,84,,,,84,84,,,,87,87,87,84,87,,84,,87',
'87,84,84,,87,,87,87,87,87,87,87,87,,87,,,,87,87,87,87,87,87,87,,,87',
',,,,,,87,,,87,87,,87,87,87,87,87,87,87,87,87,,87,87,,87,87,,,,,,,,,',
',,,,,,,,,,,,87,,,87,87,,87,,,87,,87,,87,,87,,,,,,,,87,,87,,,87,87,87',
'87,87,87,,,,87,87,,,,770,770,770,87,770,,87,,770,770,87,87,,770,,770',
'770,770,770,770,770,770,,,,,,770,770,770,770,770,770,770,,,770,,,,,',
',770,,,770,770,,770,770,770,770,770,,770,770,770,,770,770,,770,770,',
',,,,,,,,,,,,,,,,,,,,770,,,770,,,770,,,770,,,,,,770,,,,,,,,770,,,,,770',
'770,770,770,770,770,,,,770,770,,,,,,,770,,,770,,,,770,770,99,99,99,99',
'99,,,,99,99,,,,99,,99,99,99,99,99,99,99,,,,,,99,99,99,99,99,99,99,,',
'99,,,,,,99,99,99,99,99,99,,99,99,99,99,99,,99,99,99,,99,99,,99,99,,',
',,,,,,,,,,,,,,,,,,,99,,,99,,,99,,,99,,99,,,,99,,,,,,,,99,,,,,99,99,99',
'99,99,99,,,,99,99,,,,,,99,99,,,99,,,,99,99,103,103,103,,103,,,,103,103',
',,,103,,103,103,103,103,103,103,103,,,,,,103,103,103,103,103,103,103',
',,103,,,,,,,103,,,103,103,,103,103,103,103,103,,103,103,103,,103,103',
',103,103,,,,,,,,,,,,,,,,,,,,,,103,,,103,,,103,,,103,,,,,,103,,,,,,,',
'103,,,,,103,103,103,103,103,103,,,,103,103,,,,104,104,104,103,104,,103',
',104,104,103,103,,104,,104,104,104,104,104,104,104,,,,,,104,104,104',
'104,104,104,104,,,104,,,,,,,104,,,104,104,,104,104,104,104,104,,104',
'104,104,,104,104,,104,104,,,,,,,,,,,,,,,,,,,,,,104,,,104,,,104,,,104',
',,,,,104,,,,,,,,104,,,,,104,104,104,104,104,104,,,,104,104,,,,105,105',
'105,104,105,,104,,105,105,104,104,,105,,105,105,105,105,105,105,105',
',,,,,105,105,105,105,105,105,105,,,105,,,,,,,105,,,105,105,,105,105',
'105,105,105,,105,105,105,,105,105,,105,105,,,,,,,,,,,,,,,,,,,,,,105',
',,105,,,105,,,105,,,,,,105,,,,,,,,105,,,,,105,105,105,105,105,105,,',
',105,105,,,,106,106,106,105,106,,105,,106,106,105,105,,106,,106,106',
'106,106,106,106,106,,,,,,106,106,106,106,106,106,106,,,106,,,,,,,106',
',,106,106,,106,106,106,106,106,,106,106,106,,106,106,,106,106,,,,,,',
',,,,,,,,,,,,,,,106,,,106,,,106,,,106,,,,,,106,,,,,,,,106,,,,,106,106',
'106,106,106,106,,,,106,106,,,,,,,106,,,106,,,,106,106,107,107,107,107',
'107,,,,107,107,,,,107,,107,107,107,107,107,107,107,,,,,,107,107,107',
'107,107,107,107,,,107,,,,,,107,107,,107,107,107,,107,107,107,107,107',
',107,107,107,,107,107,,107,107,,,,,,,,,,,,,,,,,,,,,,107,,,107,,,107',
',,107,,107,,,,107,,,,,,,,107,,,,,107,107,107,107,107,107,,,,107,107',
',,,,,,107,,,107,,,,107,107,108,108,108,108,108,,,,108,108,,,,108,,108',
'108,108,108,108,108,108,,,,,,108,108,108,108,108,108,108,,,108,,,,,',
'108,108,108,108,108,108,,108,108,108,108,108,,108,108,108,,108,108,',
'108,108,,,,,,,,,,,,,,,,,,,,,,108,,,108,,,108,,,108,,108,,,,108,,,,,',
',,108,,,,,108,108,108,108,108,108,,,,108,108,,,,760,760,760,108,760',
',108,,760,760,108,108,,760,,760,760,760,760,760,760,760,,,,,,760,760',
'760,760,760,760,760,,,760,,,,,,,760,,,760,760,,760,760,760,760,760,',
'760,760,760,,760,760,,760,760,,,,,,,,,,,,,,,,,,,,,,760,,,760,,,760,',
',760,,,,,,760,,,,,,,,760,,,,,760,760,760,760,760,760,,,,760,760,,,,379',
'379,379,760,379,,760,,379,379,760,760,,379,,379,379,379,379,379,379',
'379,,,,,,379,379,379,379,379,379,379,,,379,,,,,,,379,,,379,379,,379',
'379,379,379,379,,379,379,379,,379,379,,379,379,,,,,,,,,,,,,,,,,,,,,',
'379,,,379,,,379,,,379,,,,,,379,,,,,,,,379,,,,,379,379,379,379,379,379',
',,,379,379,,,,759,759,759,379,759,,379,,759,759,379,379,,759,,759,759',
'759,759,759,759,759,,,,,,759,759,759,759,759,759,759,,,759,,,,,,,759',
',,759,759,,759,759,759,759,759,,759,759,759,,759,759,,759,759,,,,,,',
',,,,,,,,,,,,,,,759,,,759,,,759,,,759,,,,,,759,,,,,,,,759,,,,,759,759',
'759,759,759,759,,,,759,759,,,,,,,759,,,759,,,,759,759,195,195,195,195',
'195,,,,195,195,,,,195,,195,195,195,195,195,195,195,,,,,,195,195,195',
'195,195,195,195,,,195,,,,,,195,195,,195,195,195,,195,195,195,195,195',
',195,195,195,,195,195,,195,195,,,,,,,,,,,,,,,,,,,,,,195,,,195,,,195',
',,195,,195,,,,195,,,,,,,,195,,,,,195,195,195,195,195,195,,,,195,195',
',,,196,196,196,195,196,,195,,196,196,195,195,,196,,196,196,196,196,196',
'196,196,,,,,,196,196,196,196,196,196,196,,,196,,,,,,,196,,,196,196,',
'196,196,196,196,196,,196,196,196,,196,196,,196,196,,,,,,,,,,,,,,,,,',
',,,,196,,,196,,,196,,,196,,196,,,,196,,,,,,,,196,,,,,196,196,196,196',
'196,196,,,,196,196,,,,197,197,197,196,197,,196,,197,197,196,196,,197',
',197,197,197,197,197,197,197,,,,,,197,197,197,197,197,197,197,,,197',
',,,,,,197,,,197,197,,197,197,197,197,197,,197,197,197,,197,197,,197',
'197,,,,,,,,,,,,,,,,,,,,,,197,,,197,,,197,,,197,,197,,,,197,,,,,,,,197',
',,,,197,197,197,197,197,197,,,,197,197,,,,198,198,198,197,198,,197,',
'198,198,197,197,,198,,198,198,198,198,198,198,198,,,,,,198,198,198,198',
'198,198,198,,,198,,,,,,,198,,,198,198,,198,198,198,198,198,,198,198',
'198,,198,198,,198,198,,,,,,,,,,,,,,,,,,,,,,198,,,198,,,198,,,198,,,',
',,198,,,,,,,,198,,,,,198,198,198,198,198,198,,,,198,198,,,,199,199,199',
'198,199,,198,,199,199,198,198,,199,,199,199,199,199,199,199,199,,,,',
',199,199,199,199,199,199,199,,,199,,,,,,,199,,,199,199,,199,199,199',
'199,199,199,199,199,199,,199,199,,199,199,,,,,,,,,,,,,,,,,,,,,,199,',
',199,,,199,,,199,,199,,,,199,,,,,,,,199,,,,,199,199,199,199,199,199',
',,,199,199,,,,,,,199,,,199,,,,199,199,753,753,753,753,753,,,,753,753',
',,,753,,753,753,753,753,753,753,753,,,,,,753,753,753,753,753,753,753',
',,753,,,,,,753,753,,753,753,753,,753,753,753,753,753,,753,753,753,,753',
'753,,753,753,,,,,,,,,,,,,,,,,,,,,,753,,,753,,,753,,,753,,753,,,,753',
',,,,,,,753,,,,,753,753,753,753,753,753,,,,753,753,,,,501,501,501,753',
'501,,753,,501,501,753,753,,501,,501,501,501,501,501,501,501,,,,,,501',
'501,501,501,501,501,501,,,501,,,,,,,501,,,501,501,,501,501,501,501,501',
',501,501,501,,501,501,,501,501,,,,,,,,,,,,,,,,,,,,,,501,,,501,,501,501',
',,501,,,,501,,501,,,,,,,,501,,,,,501,501,501,501,501,501,,,,501,501',
',,,739,739,739,501,739,,501,,739,739,501,501,,739,,739,739,739,739,739',
'739,739,,,,,,739,739,739,739,739,739,739,,,739,,,,,,,739,,,739,739,',
'739,739,739,739,739,,739,739,739,,739,739,,739,739,,,,,,,,,,,,,,,,,',
',,,,739,,,739,,,739,,,739,,,,,,739,,,,,,,,739,,,,,739,739,739,739,739',
'739,,,,739,739,,,,203,203,203,739,203,,739,,203,203,739,739,,203,,203',
'203,203,203,203,203,203,,,,,,203,203,203,203,203,203,203,,,203,,,,,',
',203,,,203,203,,203,203,203,203,203,,203,203,203,,203,203,,203,203,',
',,,,,,,,,,,,,,,,,,,,203,,,203,,,203,,,203,,,,,,203,,,,,,,,203,,,,,203',
'203,203,203,203,203,,,,203,203,,,,204,204,204,203,204,,203,,204,204',
'203,203,,204,,204,204,204,204,204,204,204,,,,,,204,204,204,204,204,204',
'204,,,204,,,,,,,204,,,204,204,,204,204,204,204,204,,204,204,204,,204',
'204,,204,204,,,,,,,,,,,,,,,,,,,,,,204,,,204,,,204,,,204,,,,,,204,,,',
',,,,204,,,,,204,204,204,204,204,204,,,,204,204,,,,205,205,205,204,205',
',204,,205,205,204,204,,205,,205,205,205,205,205,205,205,,,,,,205,205',
'205,205,205,205,205,,,205,,,,,,,205,,,205,205,,205,205,205,205,205,',
'205,205,205,,205,205,,205,205,,,,,,,,,,,,,,,,,,,,,,205,,,205,,,205,',
',205,,,,,,205,,,,,,,,205,,,,,205,205,205,205,205,205,,,,205,205,,,,',
',,205,,,205,,,,205,205,732,732,732,732,732,,,,732,732,,,,732,,732,732',
'732,732,732,732,732,,,,,,732,732,732,732,732,732,732,,,732,,,,,,732',
'732,,732,732,732,,732,732,732,732,732,,732,732,732,,732,732,,732,732',
',,,,,,,,,,,,,,,,,,,,,732,,,732,,,732,,,732,,732,,,,732,,,,,,,,732,,',
',,732,732,732,732,732,732,,,,732,732,,,,,,,732,,,732,,,,732,732,731',
'731,731,731,731,,,,731,731,,,,731,,731,731,731,731,731,731,731,,,,,',
'731,731,731,731,731,731,731,,,731,,,,,,731,731,,731,731,731,,731,731',
'731,731,731,,731,731,731,,731,731,,731,731,,,,,,,,,,,,,,,,,,,,,,731',
',,731,,,731,,,731,,731,,,,731,,,,,,,,731,,,,,731,731,731,731,731,731',
',,,731,731,,,,,,,731,,,731,,,,731,731,727,727,727,727,727,,,,727,727',
',,,727,,727,727,727,727,727,727,727,,,,,,727,727,727,727,727,727,727',
',,727,,,,,,727,727,,727,727,727,,727,727,727,727,727,,727,727,727,,727',
'727,,727,727,,,,,,,,,,,,,,,,,,,,,,727,,,727,,,727,,,727,,727,,,,727',
',,,,,,,727,,,,,727,727,727,727,727,727,,,,727,727,,,,722,722,722,727',
'722,,727,,722,722,727,727,,722,,722,722,722,722,722,722,722,,,,,,722',
'722,722,722,722,722,722,,,722,,,,,,,722,,,722,722,,722,722,722,722,722',
',722,722,722,,722,722,,722,722,,,,,,,,,,,,,,,,,,,,,,722,,,722,,,722',
',,722,,,,,,722,,,,,,,,722,,,,,722,722,722,722,722,722,,,,722,722,,,',
'716,716,716,722,716,,722,,716,716,722,722,,716,,716,716,716,716,716',
'716,716,,,,,,716,716,716,716,716,716,716,,,716,,,,,,,716,,,716,716,',
'716,716,716,716,716,,716,716,716,,716,716,,716,716,,,,,,,,,,,,,,,,,',
',,,,716,,,716,,,716,,,716,,716,,,,716,,,,,,,,716,,,,,716,716,716,716',
'716,716,,,,716,716,,,,685,685,685,716,685,,716,,685,685,716,716,,685',
',685,685,685,685,685,685,685,,,,,,685,685,685,685,685,685,685,,,685',
',,,,,,685,,,685,685,,685,685,685,685,685,,685,685,685,,685,685,,685',
'685,,,,,,,,,,,,,,,,,,,,,,685,,,685,,,685,,,685,,685,,,,685,,,,,,,,685',
',,,,685,685,685,685,685,685,,,,685,685,,,,,,,685,,,685,,,,685,685,213',
'213,213,213,213,,,,213,213,,,,213,,213,213,213,213,213,213,213,,,,,',
'213,213,213,213,213,213,213,,,213,,,,,,213,213,,213,213,213,,213,213',
'213,213,213,,213,213,213,,213,213,,213,213,,,,,,,,,,,,,,,,,,,,,,213',
',,213,,,213,,,213,,213,,,,213,,,,,,,,213,,,,,213,213,213,213,213,213',
',,,213,213,,,,214,214,214,213,214,,213,,214,214,213,213,,214,,214,214',
'214,214,214,214,214,,,,,,214,214,214,214,214,214,214,,,214,,,,,,,214',
',,214,214,,214,214,214,214,214,,214,214,214,,214,214,,214,214,,,,,,',
',,,,,,,,,,,,,,,214,,,214,,214,214,,,214,,,,,,214,,,,,,,,214,,,,,214',
'214,214,214,214,214,,,,214,214,,,,217,217,217,214,217,,214,,217,217',
'214,214,,217,,217,217,217,217,217,217,217,,,,,,217,217,217,217,217,217',
'217,,,217,,,,,,,217,,,217,217,,217,217,217,217,217,,217,217,217,,217',
'217,,217,217,,,,,,,,,,,,,,,,,,,,,,217,,,217,,,217,,,217,,,,,,217,,,',
',,,,217,,,,,217,217,217,217,217,217,,,,217,217,,,,679,679,679,217,679',
',217,,679,679,217,217,,679,,679,679,679,679,679,679,679,,,,,,679,679',
'679,679,679,679,679,,,679,,,,,,,679,,,679,679,,679,679,679,679,679,',
'679,679,679,,679,679,,,,,,,,,,,,,,,,,,,,,,,,,679,,,679,,,679,,,679,',
',,,,,,,,,,,,,,,,,679,679,679,679,679,679,,,,679,679,,,,219,219,219,679',
'219,,679,,219,219,679,679,,219,,219,219,219,219,219,219,219,,,,,,219',
'219,219,219,219,219,219,,,219,,,,,,,219,,,219,219,,219,219,219,219,219',
',219,219,219,,219,219,,219,219,,,,,,,,,,,,,,,,,,,,,,219,,,219,,,219',
',,219,,,,,,219,,,,,,,,219,,,,,219,219,219,219,219,219,,,,219,219,,,',
'220,220,220,219,220,,219,,220,220,219,219,,220,,220,220,220,220,220',
'220,220,,,,,,220,220,220,220,220,220,220,,,220,,,,,,,220,,,220,220,',
'220,220,220,220,220,,220,220,220,,220,220,,220,220,,,,,,,,,,,,,,,,,',
',,,,220,,,220,,,220,,,220,,,,,,220,,,,,,,,220,,,,,220,220,220,220,220',
'220,,,,220,220,,,,221,221,221,220,221,,220,,221,221,220,220,,221,,221',
'221,221,221,221,221,221,,,,,,221,221,221,221,221,221,221,,,221,,,,,',
',221,,,221,221,,221,221,221,221,221,,221,221,221,,221,221,,221,221,',
',,,,,,,,,,,,,,,,,,,,221,,,221,,,221,,,221,,,,,,221,,,,,,,,221,,,,,221',
'221,221,221,221,221,,,,221,221,,,,222,222,222,221,222,,221,,222,222',
'221,221,,222,,222,222,222,222,222,222,222,,,,,,222,222,222,222,222,222',
'222,,,222,,,,,,,222,,,222,222,,222,222,222,222,222,,222,222,222,,222',
'222,,222,222,,,,,,,,,,,,,,,,,,,,,,222,,,222,,,222,,,222,,,,,,222,,,',
',,,,222,,,,,222,222,222,222,222,222,,,,222,222,,,,223,223,223,222,223',
',222,,223,223,222,222,,223,,223,223,223,223,223,223,223,,,,,,223,223',
'223,223,223,223,223,,,223,,,,,,,223,,,223,223,,223,223,223,223,223,',
'223,223,223,,223,223,,223,223,,,,,,,,,,,,,,,,,,,,,,223,,,223,,,223,',
',223,,,,,,223,,,,,,,,223,,,,,223,223,223,223,223,223,,,,223,223,,,,224',
'224,224,223,224,,223,,224,224,223,223,,224,,224,224,224,224,224,224',
'224,,,,,,224,224,224,224,224,224,224,,,224,,,,,,,224,,,224,224,,224',
'224,224,224,224,,224,224,224,,224,224,,224,224,,,,,,,,,,,,,,,,,,,,,',
'224,,,224,,,224,,,224,,,,,,224,,,,,,,,224,,,,,224,224,224,224,224,224',
',,,224,224,,,,225,225,225,224,225,,224,,225,225,224,224,,225,,225,225',
'225,225,225,225,225,,,,,,225,225,225,225,225,225,225,,,225,,,,,,,225',
',,225,225,,225,225,225,225,225,,225,225,225,,225,225,,225,225,,,,,,',
',,,,,,,,,,,,,,,225,,,225,,,225,,,225,,,,,,225,,,,,,,,225,,,,,225,225',
'225,225,225,225,,,,225,225,,,,226,226,226,225,226,,225,,226,226,225',
'225,,226,,226,226,226,226,226,226,226,,,,,,226,226,226,226,226,226,226',
',,226,,,,,,,226,,,226,226,,226,226,226,226,226,,226,226,226,,226,226',
',226,226,,,,,,,,,,,,,,,,,,,,,,226,,,226,,,226,,,226,,,,,,226,,,,,,,',
'226,,,,,226,226,226,226,226,226,,,,226,226,,,,227,227,227,226,227,,226',
',227,227,226,226,,227,,227,227,227,227,227,227,227,,,,,,227,227,227',
'227,227,227,227,,,227,,,,,,,227,,,227,227,,227,227,227,227,227,,227',
'227,227,,227,227,,227,227,,,,,,,,,,,,,,,,,,,,,,227,,,227,,,227,,,227',
',,,,,227,,,,,,,,227,,,,,227,227,227,227,227,227,,,,227,227,,,,228,228',
'228,227,228,,227,,228,228,227,227,,228,,228,228,228,228,228,228,228',
',,,,,228,228,228,228,228,228,228,,,228,,,,,,,228,,,228,228,,228,228',
'228,228,228,,228,228,228,,228,228,,228,228,,,,,,,,,,,,,,,,,,,,,,228',
',,228,,,228,,,228,,,,,,228,,,,,,,,228,,,,,228,228,228,228,228,228,,',
',228,228,,,,229,229,229,228,229,,228,,229,229,228,228,,229,,229,229',
'229,229,229,229,229,,,,,,229,229,229,229,229,229,229,,,229,,,,,,,229',
',,229,229,,229,229,229,229,229,,229,229,229,,229,229,,229,229,,,,,,',
',,,,,,,,,,,,,,,229,,,229,,,229,,,229,,,,,,229,,,,,,,,229,,,,,229,229',
'229,229,229,229,,,,229,229,,,,230,230,230,229,230,,229,,230,230,229',
'229,,230,,230,230,230,230,230,230,230,,,,,,230,230,230,230,230,230,230',
',,230,,,,,,,230,,,230,230,,230,230,230,230,230,,230,230,230,,230,230',
',230,230,,,,,,,,,,,,,,,,,,,,,,230,,,230,,,230,,,230,,,,,,230,,,,,,,',
'230,,,,,230,230,230,230,230,230,,,,230,230,,,,231,231,231,230,231,,230',
',231,231,230,230,,231,,231,231,231,231,231,231,231,,,,,,231,231,231',
'231,231,231,231,,,231,,,,,,,231,,,231,231,,231,231,231,231,231,,231',
'231,231,,231,231,,231,231,,,,,,,,,,,,,,,,,,,,,,231,,,231,,,231,,,231',
',,,,,231,,,,,,,,231,,,,,231,231,231,231,231,231,,,,231,231,,,,232,232',
'232,231,232,,231,,232,232,231,231,,232,,232,232,232,232,232,232,232',
',,,,,232,232,232,232,232,232,232,,,232,,,,,,,232,,,232,232,,232,232',
'232,232,232,,232,232,232,,232,232,,232,232,,,,,,,,,,,,,,,,,,,,,,232',
',,232,,,232,,,232,,,,,,232,,,,,,,,232,,,,,232,232,232,232,232,232,,',
',232,232,,,,233,233,233,232,233,,232,,233,233,232,232,,233,,233,233',
'233,233,233,233,233,,,,,,233,233,233,233,233,233,233,,,233,,,,,,,233',
',,233,233,,233,233,233,233,233,,233,233,233,,233,233,,233,233,,,,,,',
',,,,,,,,,,,,,,,233,,,233,,,233,,,233,,,,,,233,,,,,,,,233,,,,,233,233',
'233,233,233,233,,,,233,233,,,,234,234,234,233,234,,233,,234,234,233',
'233,,234,,234,234,234,234,234,234,234,,,,,,234,234,234,234,234,234,234',
',,234,,,,,,,234,,,234,234,,234,234,234,234,234,,234,234,234,,234,234',
',234,234,,,,,,,,,,,,,,,,,,,,,,234,,,234,,,234,,,234,,,,,,234,,,,,,,',
'234,,,,,234,234,234,234,234,234,,,,234,234,,,,235,235,235,234,235,,234',
',235,235,234,234,,235,,235,235,235,235,235,235,235,,,,,,235,235,235',
'235,235,235,235,,,235,,,,,,,235,,,235,235,,235,235,235,235,235,,235',
'235,235,,235,235,,235,235,,,,,,,,,,,,,,,,,,,,,,235,,,235,,,235,,,235',
',,,,,235,,,,,,,,235,,,,,235,235,235,235,235,235,,,,235,235,,,,236,236',
'236,235,236,,235,,236,236,235,235,,236,,236,236,236,236,236,236,236',
',,,,,236,236,236,236,236,236,236,,,236,,,,,,,236,,,236,236,,236,236',
'236,236,236,,236,236,236,,236,236,,236,236,,,,,,,,,,,,,,,,,,,,,,236',
',,236,,,236,,,236,,,,,,236,,,,,,,,236,,,,,236,236,236,236,236,236,,',
',236,236,,,,237,237,237,236,237,,236,,237,237,236,236,,237,,237,237',
'237,237,237,237,237,,,,,,237,237,237,237,237,237,237,,,237,,,,,,,237',
',,237,237,,237,237,237,237,237,,237,237,237,,237,237,,237,237,,,,,,',
',,,,,,,,,,,,,,,237,,,237,,,237,,,237,,,,,,237,,,,,,,,237,,,,,237,237',
'237,237,237,237,,,,237,237,,,,238,238,238,237,238,,237,,238,238,237',
'237,,238,,238,238,238,238,238,238,238,,,,,,238,238,238,238,238,238,238',
',,238,,,,,,,238,,,238,238,,238,238,238,238,238,,238,238,238,,238,238',
',238,238,,,,,,,,,,,,,,,,,,,,,,238,,,238,,,238,,,238,,,,,,238,,,,,,,',
'238,,,,,238,238,238,238,238,238,,,,238,238,,,,239,239,239,238,239,,238',
',239,239,238,238,,239,,239,239,239,239,239,239,239,,,,,,239,239,239',
'239,239,239,239,,,239,,,,,,,239,,,239,239,,239,239,239,239,239,,239',
'239,239,,239,239,,239,239,,,,,,,,,,,,,,,,,,,,,,239,,,239,,,239,,,239',
',,,,,239,,,,,,,,239,,,,,239,239,239,239,239,239,,,,239,239,,,,240,240',
'240,239,240,,239,,240,240,239,239,,240,,240,240,240,240,240,240,240',
',,,,,240,240,240,240,240,240,240,,,240,,,,,,,240,,,240,240,,240,240',
'240,240,240,,240,240,240,,240,240,,240,240,,,,,,,,,,,,,,,,,,,,,,240',
',,240,,,240,,,240,,,,,,240,,,,,,,,240,,,,,240,240,240,240,240,240,,',
',240,240,,,,241,241,241,240,241,,240,,241,241,240,240,,241,,241,241',
'241,241,241,241,241,,,,,,241,241,241,241,241,241,241,,,241,,,,,,,241',
',,241,241,,241,241,241,241,241,,241,241,241,,241,241,,241,241,,,,,,',
',,,,,,,,,,,,,,,241,,,241,,,241,,,241,,,,,,241,,,,,,,,241,,,,,241,241',
'241,241,241,241,,,,241,241,,,,242,242,242,241,242,,241,,242,242,241',
'241,,242,,242,242,242,242,242,242,242,,,,,,242,242,242,242,242,242,242',
',,242,,,,,,,242,,,242,242,,242,242,242,242,242,,242,242,242,,242,242',
',242,242,,,,,,,,,,,,,,,,,,,,,,242,,,242,,,242,,,242,,,,,,242,,,,,,,',
'242,,,,,242,242,242,242,242,242,,,,242,242,,,,243,243,243,242,243,,242',
',243,243,242,242,,243,,243,243,243,243,243,243,243,,,,,,243,243,243',
'243,243,243,243,,,243,,,,,,,243,,,243,243,,243,243,243,243,243,,243',
'243,243,,243,243,,243,243,,,,,,,,,,,,,,,,,,,,,,243,,,243,,,243,,,243',
',,,,,243,,,,,,,,243,,,,,243,243,243,243,243,243,,,,243,243,,,,244,244',
'244,243,244,,243,,244,244,243,243,,244,,244,244,244,244,244,244,244',
',,,,,244,244,244,244,244,244,244,,,244,,,,,,,244,,,244,244,,244,244',
'244,244,244,,244,244,244,,244,244,,244,244,,,,,,,,,,,,,,,,,,,,,,244',
',,244,,,244,,,244,,,,,,244,,,,,,,,244,,,,,244,244,244,244,244,244,,',
',244,244,,,,,,,244,,,244,,,,244,244,507,507,507,507,507,,,,507,507,',
',,507,,507,507,507,507,507,507,507,,,,,,507,507,507,507,507,507,507',
',,507,,,,,,507,507,,507,507,507,,507,507,507,507,507,,507,507,507,,507',
'507,,507,507,,,,,,,,,,,,,,,,,,,,,,507,,,507,,,507,,,507,,507,,,,507',
',,,,,,,507,,,,,507,507,507,507,507,507,,,,507,507,,,,,,507,507,,,507',
',,,507,507,513,513,513,,513,,,,513,513,,,,513,,513,513,513,513,513,513',
'513,,,,,,513,513,513,513,513,513,513,,,513,,,,,,,513,,,513,513,,513',
'513,513,513,513,,513,513,513,,513,513,,,,,,,,,,,,,,,,,,,,,,,,,513,,',
'513,,,513,,,513,,,,,,,,,,,,,,,,,,,513,513,513,513,513,513,,,,513,513',
',,,515,515,515,513,515,,513,,515,515,513,513,,515,,515,515,515,515,515',
'515,515,,,,,,515,515,515,515,515,515,515,,,515,,,,,,,515,,,515,515,',
'515,515,515,515,515,515,515,515,515,,515,515,,515,515,,,,,,,,,,,,,,',
',,,,,,,515,,,515,,,515,,,515,,515,,,,515,,,,,,,,515,,,,,515,515,515',
'515,515,515,,,,515,515,,,,253,253,253,515,253,,515,,253,253,515,515',
',253,,253,253,253,253,253,253,253,,,,,,253,253,253,253,253,253,253,',
',253,,,,,,,253,,,253,253,,253,253,253,253,253,,253,253,253,,253,253',
',253,253,,,,,,,,,,,,,,,,,,,,,,253,,,253,,,253,,,253,,,,,,253,,,,,,,',
'253,,,,,253,253,253,253,253,253,,,,253,253,,,,669,669,669,253,669,,253',
',669,669,253,253,,669,,669,669,669,669,669,669,669,,,,,,669,669,669',
'669,669,669,669,,,669,,,,,,,669,,,669,669,,669,669,669,669,669,,669',
'669,669,,669,669,,,,,,,,,,,,,,,,,,,,,,,,,669,,,669,,,669,,,669,,,,,',
',,,,,,,,,,,,,669,669,669,669,669,669,,,,669,669,,,,255,255,255,669,255',
',669,,255,255,669,669,,255,,255,255,255,255,255,255,255,,,,,,255,255',
'255,255,255,255,255,,,255,,,,,,,255,,,255,255,,255,255,255,255,255,',
'255,255,255,,255,255,,255,255,,,,,,,,,,,,,,,,,,,,,,255,,,255,,,255,',
',255,,,,,,255,,,,,,,,255,,,,,255,255,255,255,255,255,,,,255,255,,,,260',
'260,260,255,260,,255,,260,260,255,255,,260,,260,260,260,260,260,260',
'260,,,,,,260,260,260,260,260,260,260,,,260,,,,,,,260,,,260,260,,260',
'260,260,260,260,,260,260,260,,260,260,,260,260,,,,,,,,,,,,,,,,,,,,,',
'260,,,260,,,260,,,260,,,,,,260,,,,,,,,260,,,,,260,260,260,260,260,260',
',,,260,260,,,,,,,260,,,260,,,,260,260,665,665,665,665,665,,,,665,665',
',,,665,,665,665,665,665,665,665,665,,,,,,665,665,665,665,665,665,665',
',,665,,,,,,665,665,,665,665,665,,665,665,665,665,665,,665,665,665,,665',
'665,,665,665,,,,,,,,,,,,,,,,,,,,,,665,,,665,,,665,,,665,,665,,,,665',
',,,,,,,665,,,,,665,665,665,665,665,665,,,,665,665,,,,,,,665,,,665,,',
',665,665,664,664,664,664,664,,,,664,664,,,,664,,664,664,664,664,664',
'664,664,,,,,,664,664,664,664,664,664,664,,,664,,,,,,664,664,,664,664',
'664,,664,664,664,664,664,,664,664,664,,664,664,,664,664,,,,,,,,,,,,',
',,,,,,,,,664,,,664,,,664,,,664,,664,,,,664,,,,,,,,664,,,,,664,664,664',
'664,664,664,,,,664,664,,,,658,658,658,664,658,,664,,658,658,664,664',
',658,,658,658,658,658,658,658,658,,,,,,658,658,658,658,658,658,658,',
',658,,,,,,,658,,,658,658,,658,658,658,658,658,658,658,658,658,,658,658',
',658,658,,,,,,,,,,,,,,,,,,,,,,658,,,658,,,658,,,658,,,,658,,658,,,,',
',,,658,,,,,658,658,658,658,658,658,,,,658,658,,,,266,266,266,658,266',
',658,,266,266,658,658,,266,,266,266,266,266,266,266,266,,,,,,266,266',
'266,266,266,266,266,,,266,,,,,,,266,,,266,266,,266,266,266,266,266,266',
'266,266,266,,266,266,,266,266,,,,,,,,,,,,,,,,,,,,,,266,,,266,,,266,',
',266,,266,,266,,266,,,,,,,,266,,,,,266,266,266,266,266,266,,,,266,266',
',,,267,267,267,266,267,,266,,267,267,266,266,,267,,267,267,267,267,267',
'267,267,,,,,,267,267,267,267,267,267,267,,,267,,,,,,,267,,,267,267,',
'267,267,267,267,267,267,267,267,267,,267,267,,267,267,,,,,,,,,,,,,,',
',,,,,,,267,,,267,,,267,,,267,,267,,267,,267,,,,,,,,267,,,,,267,267,267',
'267,267,267,,,,267,267,,,,275,275,275,267,275,,267,,275,275,267,267',
',275,,275,275,275,275,275,275,275,,,,,,275,275,275,275,275,275,275,',
',275,,,,,,,275,,,275,275,,275,275,275,275,275,275,275,275,275,,275,275',
',275,275,,,,,,,,,,,,,,,,,,,,,,275,,,275,,275,275,,,275,,275,,275,,275',
',,,,,,,275,,,,,275,275,275,275,275,275,,,,275,275,,,,657,657,657,275',
'657,,275,,657,657,275,275,,657,,657,657,657,657,657,657,657,,,,,,657',
'657,657,657,657,657,657,,,657,,,,,,,657,,,657,657,,657,657,657,657,657',
'657,657,657,657,,657,657,,657,657,,,,,,,,,,,,,,,,,,,,,,657,,,657,,,657',
',,657,,657,,657,,657,,,,,,,,657,,,,,657,657,657,657,657,657,,,,657,657',
',,,,,,657,,,657,,,,657,657,654,654,654,654,654,,,,654,654,,,,654,,654',
'654,654,654,654,654,654,,,,,,654,654,654,654,654,654,654,,,654,,,,,',
'654,654,,654,654,654,,654,654,654,654,654,,654,654,654,,654,654,,654',
'654,,,,,,,,,,,,,,,,,,,,,,654,,,654,,,654,,,654,,654,,,,654,,,,,,,,654',
',,,,654,654,654,654,654,654,,,,654,654,,,,647,647,647,654,647,,654,',
'647,647,654,654,,647,,647,647,647,647,647,647,647,,,,,,647,647,647,647',
'647,647,647,,,647,,,,,,,647,,,647,647,,647,647,647,647,647,,647,647',
'647,,647,647,,647,647,,,,,,,,,,,,,,,,,,,,,,647,,,647,,,647,,,647,,,',
',,647,,,,,,,,647,,,,,647,647,647,647,647,647,,,,647,647,,,,,,,647,,',
'647,,,,647,647,279,279,279,279,279,,,,279,279,,,,279,,279,279,279,279',
'279,279,279,,,,,,279,279,279,279,279,279,279,,,279,,,,,,279,279,,279',
'279,279,,279,279,279,279,279,,279,279,279,,279,279,,279,279,,,,,,,,',
',,,,,,,,,,,,,279,,,279,,,279,,,279,,279,,,,279,,,,,,,,279,,,,,279,279',
'279,279,279,279,,,,279,279,,,,,,,279,,,279,,,,279,279,643,643,643,643',
'643,,,,643,643,,,,643,,643,643,643,643,643,643,643,,,,,,643,643,643',
'643,643,643,643,,,643,,,,,,643,643,,643,643,643,,643,643,643,643,643',
',643,643,643,,643,643,,643,643,,,,,,,,,,,,,,,,,,,,,,643,,,643,,,643',
',,643,,643,,,,643,,,,,,,,643,,,,,643,643,643,643,643,643,,,,643,643',
',,,639,639,639,643,639,,643,,639,639,643,643,,639,,639,639,639,639,639',
'639,639,,,,,,639,639,639,639,639,639,639,,,639,,,,,,,639,,,639,639,',
'639,639,639,639,639,,639,639,639,,639,639,,639,639,,,,,,,,,,,,,,,,,',
',,,,639,,,639,,,639,,,639,,,,,,639,,,,,,,,639,,,,,639,639,639,639,639',
'639,,,,639,639,,,,524,524,524,639,524,,639,,524,524,639,639,,524,,524',
'524,524,524,524,524,524,,,,,,524,524,524,524,524,524,524,,,524,,,,,',
',524,,,524,524,,524,524,524,524,524,,524,524,524,,524,524,,524,524,',
',,,,,,,,,,,,,,,,,,,,524,,,524,,,524,,,524,,,,,,524,,,,,,,,524,,,,,524',
'524,524,524,524,524,,,,524,524,,,,283,283,283,524,283,,524,,283,283',
'524,524,,283,,283,283,283,283,283,283,283,,,,,,283,283,283,283,283,283',
'283,,,283,,,,,,,283,,,283,283,,283,283,283,283,283,,283,283,283,,283',
'283,733,,733,733,733,733,733,,,,,,,,,,733,,,,,,,,283,,,283,,,283,,,283',
',,,,,733,,,,,,,,733,733,733,733,,283,283,283,283,283,283,,,,283,283',
',,,283,,,283,,,283,,,,283,283,284,284,284,284,284,,,733,284,284,,,,284',
',284,284,284,284,284,284,284,,,,,,284,284,284,284,284,284,284,,,284',
',,,,,284,284,,284,284,284,,284,284,284,284,284,,284,284,284,,284,284',
',284,284,,,,,,,,,,,,,,,,,,,,,,284,,,284,,,284,,,284,,284,,,,284,,,,',
',,,284,,,,,284,284,284,284,284,284,,,,284,284,,,,525,525,525,284,525',
',284,,525,525,284,284,,525,,525,525,525,525,525,525,525,,,,,,525,525',
'525,525,525,525,525,,,525,,,,,,,525,,,525,525,,525,525,525,525,525,',
'525,525,525,,525,525,,525,525,,,,,,,,,,,,,,,,,,,,,,525,,,525,,,525,',
',525,,,,,,525,,,,,,,,525,,,,,525,525,525,525,525,525,,,,525,525,,,,630',
'630,630,525,630,,525,,630,630,525,525,,630,,630,630,630,630,630,630',
'630,,,,,,630,630,630,630,630,630,630,,,630,,,,,,,630,,,630,630,,630',
'630,630,630,630,,630,630,630,,630,630,,630,630,,,,,,,,,,,,,,,,,,,,,',
'630,,,630,,,630,,,630,,,,,,630,,,,,,,,630,,,,,630,630,630,630,630,630',
',,,630,630,,,,627,627,627,630,627,,630,,627,627,630,630,,627,,627,627',
'627,627,627,627,627,,,,,,627,627,627,627,627,627,627,,,627,,,,,,,627',
',,627,627,,627,627,627,627,627,,627,627,627,,627,627,,627,627,,,,,,',
',,,,,,,,,,,,,,,627,,,627,,,627,,,627,,,,,,627,,,,,,,,627,,,,,627,627',
'627,627,627,627,,,,627,627,,,,622,622,622,627,622,,627,,622,622,627',
'627,,622,,622,622,622,622,622,622,622,,,,,,622,622,622,622,622,622,622',
',,622,,,,,,,622,,,622,622,,622,622,622,622,622,,622,622,622,,622,622',
',622,622,,,,,,,,,,,,,,,,,,,,,,622,,,622,,,622,,,622,,,,,,622,,,,,,,',
'622,,,,,622,622,622,622,622,622,,,,622,622,,,,621,621,621,622,621,,622',
',621,621,622,622,,621,,621,621,621,621,621,621,621,,,,,,621,621,621',
'621,621,621,621,,,621,,,,,,,621,,,621,621,,621,621,621,621,621,,621',
'621,621,,621,621,,621,621,,,,,,,,,,,,,,,,,,,,,,621,,,621,,,621,,,621',
',,,,,621,,,,,,,,621,,,,,621,621,621,621,621,621,,,,621,621,,,,526,526',
'526,621,526,,621,,526,526,621,621,,526,,526,526,526,526,526,526,526',
',,,,,526,526,526,526,526,526,526,,,526,,,,,,,526,,,526,526,,526,526',
'526,526,526,,526,526,526,,526,526,,526,526,,,,,,,,,,,,,,,,,,,,,,526',
',,526,,,526,,,526,,,,,,526,,,,,,,,526,,,,,526,526,526,526,526,526,,',
',526,526,,,,617,617,617,526,617,,526,,617,617,526,526,,617,,617,617',
'617,617,617,617,617,,,,,,617,617,617,617,617,617,617,,,617,,,,,,,617',
',,617,617,,617,617,617,617,617,,617,617,617,,617,617,,617,617,,,,,,',
',,,,,,,,,,,,,,,617,,,617,,,617,,,617,,,,,,617,,,,,,,,617,,,,,617,617',
'617,617,617,617,,,,617,617,,,,590,590,590,617,590,,617,,590,590,617',
'617,,590,,590,590,590,590,590,590,590,,,,,,590,590,590,590,590,590,590',
',,590,,,,,,,590,,,590,590,,590,590,590,590,590,,590,590,590,,590,590',
',590,590,,,,,,,,,,,,,,,,,,,,,,590,,,590,,,590,,,590,,,,,,590,,,,,,,',
'590,,,,,590,590,590,590,590,590,,,,590,590,,,,588,588,588,590,588,,590',
',588,588,590,590,,588,,588,588,588,588,588,588,588,,,,,,588,588,588',
'588,588,588,588,,,588,,,,,,,588,,,588,588,,588,588,588,588,588,,588',
'588,588,,588,588,,588,588,,,,,,,,,,,,,,,,,,,,,,588,,,588,,,588,,,588',
',,,,,588,,,,,,,,588,,,,,588,588,588,588,588,588,,,,588,588,,,,296,296',
'296,588,296,,588,,296,296,588,588,,296,,296,296,296,296,296,296,296',
',,,,,296,296,296,296,296,296,296,,,296,,,,,,,296,,,296,296,,296,296',
'296,296,296,,296,296,296,,296,296,,,,,,,,,,,,,,,,,,,,,,,,,296,,,296',
',,296,,,296,,,,,,,,,,,,,,,,,,,296,296,296,296,296,296,,,,296,296,,,',
'584,584,584,296,584,,296,,584,584,296,296,,584,,584,584,584,584,584',
'584,584,,,,,,584,584,584,584,584,584,584,,,584,,,,,,,584,,,584,584,',
'584,584,584,584,584,584,584,584,584,,584,584,,584,584,,,,,,,,,,,,,,',
',,,,,,,584,,,584,,,584,,,584,,584,,,,584,,,,,,,,584,,,,,584,584,584',
'584,584,584,,,,584,584,,,,576,576,576,584,576,,584,,576,576,584,584',
',576,,576,576,576,576,576,576,576,,,,,,576,576,576,576,576,576,576,',
',576,,,,,,,576,,,576,576,,576,576,576,576,576,576,576,576,576,,576,576',
',576,576,,,,,,,,,,,,,,,,,,,,,,576,,,576,,,576,,,576,,576,,,,576,,,,',
',,,576,,,,,576,576,576,576,576,576,,,,576,576,,,,,,,576,,,576,,,,576',
'576,574,574,574,574,574,,,,574,574,,,,574,,574,574,574,574,574,574,574',
',,,,,574,574,574,574,574,574,574,,,574,,,,,,574,574,,574,574,574,,574',
'574,574,574,574,,574,574,574,,574,574,,574,574,,,,,,,,,,,,,,,,,,,,,',
'574,,,574,,,574,,,574,,574,,,,574,,,,,,,,574,,,,,574,574,574,574,574',
'574,,,,574,574,,,,,,,574,,,574,,,,574,574,569,569,569,569,569,,,,569',
'569,,,,569,,569,569,569,569,569,569,569,,,,,,569,569,569,569,569,569',
'569,,,569,,,,,,569,569,,569,569,569,,569,569,569,569,569,,569,569,569',
',569,569,,569,569,,,,,,,,,,,,,,,,,,,,,,569,,,569,,,569,,,569,,569,,',
',569,,,,,,,,569,,,,,569,569,569,569,569,569,,,,569,569,,,,,,,569,,,569',
',,,569,569,565,565,565,565,565,,,,565,565,,,,565,,565,565,565,565,565',
'565,565,,,,,,565,565,565,565,565,565,565,,,565,,,,,,565,565,,565,565',
'565,,565,565,565,565,565,,565,565,565,,565,565,,565,565,,,,,,,,,,,,',
',,,,,,,,,565,,,565,,,565,,,565,,565,,,,565,,,,,,,,565,,,,,565,565,565',
'565,565,565,,,,565,565,,,,305,305,305,565,305,,565,,305,305,565,565',
',305,,305,305,305,305,305,305,305,,,,,,305,305,305,305,305,305,305,',
',305,,,,,,,305,,,305,305,,305,305,305,305,305,,305,305,305,,305,305',
',305,305,,,,,,,,,,,,,,,,,,,,,,305,,,305,305,,305,,,305,,,,,,305,,,,',
',,,305,,,,,305,305,305,305,305,305,,,,305,305,,,,,,,305,,,305,,,,305',
'305,307,307,307,307,307,,,,307,307,,,,307,,307,307,307,307,307,307,307',
',,,,,307,307,307,307,307,307,307,,,307,,,,,,307,307,,307,307,307,,307',
'307,307,307,307,,307,307,307,,307,307,,307,307,,,,,,,,,,,,,,,,,,,,,',
'307,,,307,,,307,,,307,,307,,,,307,,,,,,,,307,,,,,307,307,307,307,307',
'307,,,,307,307,,,,551,551,551,307,551,,307,,551,551,307,307,,551,,551',
'551,551,551,551,551,551,,,,,,551,551,551,551,551,551,551,,,551,,,,,',
',551,,,551,551,,551,551,551,551,551,,551,551,551,,551,551,894,,894,894',
'894,894,894,,,,,,,,,,894,,,,,,,,551,,,551,,,551,,,551,,,,,,894,894,',
',,,,,894,894,894,894,,551,551,551,551,551,551,,,,551,551,,,,,,,551,',
',551,,,,551,551,545,545,545,545,545,,,894,545,545,,,,545,,545,545,545',
'545,545,545,545,,,,,,545,545,545,545,545,545,545,,,545,,,,,,545,545',
',545,545,545,,545,545,545,545,545,,545,545,545,,545,545,,545,545,,,',
',,,,,,,,,,,,,,,,,,545,,,545,,,545,,,545,,545,,,,545,,,,,,,,545,,,,,545',
'545,545,545,545,545,,,,545,545,,,,,,,545,,,545,,,,545,545,544,544,544',
'544,544,,,,544,544,,,,544,,544,544,544,544,544,544,544,,,,,,544,544',
'544,544,544,544,544,,,544,,,,,,544,544,,544,544,544,,544,544,544,544',
'544,,544,544,544,,544,544,,544,544,,,,,,,,,,,,,,,,,,,,,,544,,,544,,',
'544,,,544,,544,,,,544,,,,,,,,544,,,,,544,544,544,544,544,544,,,,544',
'544,,,,539,539,539,544,539,,544,,539,539,544,544,,539,,539,539,539,539',
'539,539,539,,,,,,539,539,539,539,539,539,539,,,539,,,,,,,539,,,539,539',
',539,539,539,539,539,539,539,539,539,,539,539,,539,539,,,,,,,,,,,,,',
',,,,,,,,539,,,539,,,539,,,539,,,,,,539,,,,,,,,539,,,,,539,539,539,539',
'539,539,,,,539,539,,,,536,536,536,539,536,,539,,536,536,539,539,,536',
',536,536,536,536,536,536,536,,,,,,536,536,536,536,536,536,536,,,536',
',,,,,,536,,,536,536,,536,536,536,536,536,536,536,536,536,,536,536,,536',
'536,,,,,,,,,,,,,,,,,,,,,,536,,,536,,,536,,,536,,536,,,,536,,,,,,,,536',
',,,,536,536,536,536,536,536,,,,536,536,,,,530,530,530,536,530,,536,',
'530,530,536,536,,530,,530,530,530,530,530,530,530,,,,,,530,530,530,530',
'530,530,530,,,530,,,,,,,530,,,530,530,,530,530,530,530,530,,530,530',
'530,,530,530,,530,530,,,,,,,,,,,,,,,,,,,,,,530,,,530,,,530,,,530,,,',
',,530,,,,,,,,530,,,,,530,530,530,530,530,530,,,,530,530,,,,619,619,619',
'530,619,,530,,619,619,530,530,,619,,619,619,619,619,619,619,619,,,,',
',619,619,619,619,619,619,619,,,619,,,,,,,619,,,619,619,,619,619,619',
'619,619,,619,619,619,,619,619,,619,619,,,,,,,,,,,,,,,,,,,,,,619,,,619',
',,619,,,619,,619,,,,619,,,,,,,,619,,,,,619,619,619,619,619,619,,,,619',
'619,,,,634,,,619,,,619,634,634,634,619,619,634,634,634,592,634,592,592',
'592,592,592,,,,634,634,634,,,,592,,,,,634,634,,634,634,634,634,634,',
',,,,,,,,,592,592,,,,,,,592,592,592,592,,634,634,634,634,634,634,634',
'634,634,634,634,634,634,634,634,,,634,634,634,,634,634,,,634,,,634,',
'634,,634,592,634,,634,634,634,634,634,634,634,,634,634,634,,,,,,,,,',
',,,634,634,634,634,,634,635,,634,,,634,,635,635,635,,,635,635,635,,635',
',,,,,,,,,635,635,,,,,,,,,635,635,,635,635,635,635,635,,,,,,,,,,,,,,',
',,,,,,,,,635,635,635,635,635,635,635,635,635,635,635,635,635,635,635',
',,635,635,635,,635,635,,,635,,,635,,635,,635,,635,,635,635,635,635,635',
'635,635,,635,,635,,,,,,,,,,,,,635,635,635,635,,635,435,,635,,,635,,435',
'435,435,,,,435,435,,435,,,,,,,,,,,,,,,,,,,,435,435,,435,435,435,435',
'435,,,,,,,,,,,,,,,,,,,,,,,,435,435,435,435,435,435,435,435,435,435,435',
'435,435,435,435,,,435,435,435,,435,,,,435,,,,,,,435,,435,,435,435,435',
'435,435,435,435,,435,,435,,,,,,,,,,,,,435,435,,435,,435,433,,435,,,435',
',433,433,433,,,,433,433,,433,,,,,,,,,433,,,,,,,,,,,433,433,,433,433',
'433,433,433,,,,,,,,,,,,,,,,,,,,,,,,433,433,433,433,433,433,433,433,433',
'433,433,433,433,433,433,,,433,433,433,,433,,,,433,,,,,,,433,,433,,433',
'433,433,433,433,433,433,,433,433,433,,,,,,,,,,,,,433,433,,433,,433,429',
',433,,,433,,429,429,429,,,429,429,429,,429,,,,,,,,,429,429,429,,,,,',
',,,429,429,,429,429,429,429,429,,,,,,,,,,,,,,,,,,,,,,,,429,429,429,429',
'429,429,429,429,429,429,429,429,429,429,429,,,429,429,429,,,429,,429',
'429,,,429,,429,,429,,429,,429,429,429,429,429,429,429,,429,429,429,',
',,,,,,,,,,,429,429,429,429,27,429,,,429,,,27,27,27,,,27,27,27,,27,,',
',,,,,,27,27,27,,,,,,,,,27,27,,27,27,27,27,27,,,,,,,,,,,,,,,,,,,,,,,',
'27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,,,27,27,27,,,27,,27,27',
',,27,,27,,27,,27,,27,27,27,27,27,27,27,,27,27,27,,,,,,,,,,,,,27,27,27',
'27,50,27,,,27,,,50,50,50,,,50,50,50,,50,,,,,,,,,,50,50,50,,,,,,,,50',
'50,,50,50,50,50,50,,,,,,,,,,,,,,,,,,,,,,,,50,50,50,50,50,50,50,50,50',
'50,50,50,50,50,50,,,50,50,50,,,50,,,50,,,50,,50,,50,,50,,50,50,50,50',
'50,50,50,,50,,50,,,,,,,,,,,,,50,50,50,50,28,50,,50,50,,,28,28,28,,,28',
'28,28,,28,,,,,,,,,,28,28,,,,,,,,,28,28,,28,28,28,28,28,,,,,,,,,,,,,',
',,,,,,,,,,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,,,28,28,28,,',
'28,,28,28,,,28,,28,,28,,28,,28,28,28,28,28,28,28,,28,,28,,,,,,,,,,,',
',28,28,28,28,491,28,,,28,,,491,491,491,,,491,491,491,,491,,,,,,,,,,491',
',,,,,,,,,491,491,,491,491,491,491,491,,,,,,,,,,,,,,490,,,,,,,490,490',
'490,,,490,490,490,,490,,,,,,491,,,,490,,,491,,,,,491,491,490,490,,490',
'490,490,490,490,,,,,,,,,,,,,491,,,,,,,,,,,,,491,,491,,,491,,,,,490,',
',,,,,490,,,,,490,490,,,,,,,,,,,,,,,,,,,,,490,,,,,,,,,,,,,490,,490,,',
'490,413,413,413,413,413,413,413,413,413,413,413,413,413,413,413,413',
'413,413,413,413,413,413,413,413,,,,413,413,413,413,413,413,413,413,413',
'413,413,413,413,413,413,413,413,413,413,413,413,,413,413,,,413,,,,,',
',,,413,413,,413,413,413,413,413,413,413,,,413,413,,,,,413,413,413,413',
',,,,,,,,,,,,413,413,,413,413,413,413,413,413,413,413,413,413,413,,,413',
'413,,,,,,,,,,413,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,,,',
'7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,,7,7,7,,7,,,,,,,,,7,7,,7,7',
'7,7,7,7,7,,,7,7,,,,,7,7,7,7,,,,,,,,,,,,,7,7,,7,7,7,7,7,7,7,7,7,7,7,',
',7,7,,,,,,,,,,7,409,409,409,409,409,409,409,409,409,409,409,409,409',
'409,409,409,409,409,409,409,409,409,409,409,,,,409,409,409,409,409,409',
'409,409,409,409,409,409,409,409,409,409,409,409,409,409,409,,409,409',
',,409,,,,,,,,,409,409,,409,409,409,409,409,409,409,,,409,409,,,,,409',
'409,409,409,,,,,,,,,,,,,409,409,,409,409,409,409,409,409,409,409,409',
'409,409,,,409,409,,,,,,,,,,409,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8',
'8,8,8,8,8,,,,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,,8,8,,,8,,,,',
',,,,8,8,,8,8,8,8,8,8,8,,,8,8,,,,,8,8,8,8,,,,,,,,,,,,,8,8,,8,8,8,8,8',
'8,8,8,8,8,8,,,8,8,,,,,,,,,,8,750,750,750,750,750,750,750,750,750,750',
'750,750,750,750,750,750,750,750,750,750,750,750,750,750,,,,750,750,750',
'750,750,750,750,750,750,750,750,750,750,750,750,750,750,750,750,750',
'750,,750,750,,,750,,,,,,,,,750,750,,750,750,750,750,750,750,750,,,750',
'750,,,,,750,750,750,750,,,,,,,,,,,,,750,750,,750,750,750,750,750,750',
'750,750,750,750,750,,,750,65,65,65,65,65,65,65,65,65,65,65,65,65,65',
'65,65,65,65,65,65,65,65,65,65,,,,65,65,65,65,65,65,65,65,65,65,65,65',
'65,65,65,65,65,65,65,65,65,,65,65,65,65,65,,65,,,,,,,65,65,,65,65,65',
'65,65,65,65,,,65,65,,,,,65,65,65,65,,,,,,65,,,,,,,65,65,,65,65,65,65',
'65,65,65,65,65,65,65,,,65,79,79,79,79,79,79,79,79,79,79,79,79,79,79',
'79,79,79,79,79,79,79,79,79,79,,,,79,79,79,79,79,79,79,79,79,79,79,79',
'79,79,79,79,79,79,79,79,79,,79,79,79,79,79,,79,,,,,,,79,79,,79,79,79',
'79,79,79,79,,,79,79,,,,,79,79,79,79,,,,,,,,,,,,,79,79,,79,79,79,79,79',
'79,79,79,79,79,79,,,79,192,192,192,192,192,192,192,192,192,192,192,192',
'192,192,192,192,192,192,192,192,192,192,192,192,,,,192,192,192,192,192',
'192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,,192',
'192,192,192,192,,192,,,,,,,192,192,,192,192,192,192,192,192,192,,,192',
'192,,,,,192,192,192,192,,,,,,,,,,,,,192,192,,192,192,192,192,192,192',
'192,192,192,192,192,585,585,192,,585,,,,,,,,,585,585,,585,585,585,585',
'585,585,585,,,585,585,,,,,585,585,585,585,,,,,,585,,,,,,,585,585,,585',
'585,585,585,585,585,585,585,585,585,585,201,201,585,,201,,,,,,,,,201',
'201,,201,201,201,201,201,201,201,,,201,201,,,,,201,201,201,201,,,,,',
',,,,,,,201,201,,201,201,201,201,201,201,201,201,201,201,201,264,264',
'201,,264,,,,,,,,,264,264,,264,264,264,264,264,264,264,,,264,264,,,,',
'264,264,264,264,,,,,,,,,,,,,264,264,,264,264,264,264,264,264,264,264',
'264,264,264,517,517,264,,517,,,,,,,,,517,517,,517,517,517,517,517,517',
'517,,,517,517,,,,,517,517,517,517,,,,,,,,,,,,,517,517,,517,517,517,517',
'517,517,517,517,517,517,517,527,527,517,,527,,,,,,,,,527,527,,527,527',
'527,527,527,527,527,,,527,527,,,,,527,527,527,527,,,,,,527,,,,,,,527',
'527,,527,527,527,527,527,527,527,527,527,527,527,446,446,527,,446,,',
',,,,,,446,446,,446,446,446,446,446,446,446,,,446,446,,,,,446,446,446',
'446,,,,,,446,,,,,,,446,446,,446,446,446,446,446,446,446,446,446,446',
'446,447,447,446,,447,,,,,,,,,447,447,,447,447,447,447,447,447,447,,',
'447,447,,,,,447,447,447,447,,,,,,,,,,,,,447,447,,447,447,447,447,447',
'447,447,447,447,447,447,528,528,447,,528,,,,,,,,,528,528,,528,528,528',
'528,528,528,528,,,528,528,,,,,528,528,528,528,,,,,,,,,,,,,528,528,,528',
'528,528,528,528,528,528,528,528,528,528,583,583,528,,583,,,,,,,,,583',
'583,,583,583,583,583,583,583,583,,,583,583,,,,,583,583,583,583,,,,,',
',,,,,,,583,583,,583,583,583,583,583,583,583,583,583,583,583,922,922',
'583,,922,,,,,,,,,922,922,,922,922,922,922,922,922,922,,,922,922,,,,',
'922,922,922,922,,,,,,922,,,,,,,922,922,,922,922,922,922,922,922,922',
'922,922,922,922,802,802,922,,802,,,,,,,,,802,802,,802,802,802,802,802',
'802,802,,,802,802,,,,,802,802,802,802,,,,,,,,,,,,,802,802,,802,802,802',
'802,802,802,802,802,802,802,802,516,516,802,,516,,,,,,,,,516,516,,516',
'516,516,516,516,516,516,,,516,516,,,,,516,516,516,516,,,,,,516,,,,,',
',516,516,,516,516,516,516,516,516,516,516,516,516,516,923,923,516,,923',
',,,,,,,,923,923,,923,923,923,923,923,923,923,,,923,923,,,,,923,923,923',
'923,,,,,,,,,,,,,923,923,,923,923,923,923,923,923,923,923,923,923,923',
'578,578,923,,578,,,,,,,,,578,578,,578,578,578,578,578,578,578,,,578',
'578,,,,,578,578,578,578,,,,,,,,,,,,,578,578,,578,578,578,578,578,578',
'578,578,578,578,578,577,577,578,,577,,,,,,,,,577,577,,577,577,577,577',
'577,577,577,,,577,577,,,,,577,577,577,577,,,,,,577,,,,,,,577,577,,577',
'577,577,577,577,577,577,577,577,577,577,202,202,577,,202,,,,,,,,,202',
'202,,202,202,202,202,202,202,202,,,202,202,,,,,202,202,202,202,,,,,',
',,,,,,,202,202,,202,202,202,202,202,202,202,202,202,202,202,200,200',
'202,,200,,,,,,,,,200,200,,200,200,200,200,200,200,200,,,200,200,,,,',
'200,200,200,200,,,,,,200,,,,,,,200,200,,200,200,200,200,200,200,200',
'200,200,200,200,263,263,200,,263,,,,,,,,,263,263,,263,263,263,263,263',
'263,263,,,263,263,,,,,263,263,263,263,,,,,,,,,,,,,263,263,,263,263,263',
'263,263,263,263,263,263,263,263,,,263' ]
        racc_action_check = arr = ::Array.new(24035, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_action_pointer = [
    -2,  1259,   nil,   421,   nil,   491,  1101, 22111, 22359,  1092,
  1064,  1047,  1080,   594,   848,   592,   nil,  1848,  1975,   633,
  1102,   nil,  2356,  2483,  2610,   509,   156, 21410, 21670,   nil,
  3257,  3384,  3511,   nil,   975,   871,  1039,   694,  4158,  4285,
  4412,   910,   414,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
 21540,   nil,  4932,  5059,  5186,    -3,  5984,  5579,  5706,   nil,
   nil,  5833,  5972,  6099,   nil, 22596,   nil,   nil,   nil,   nil,
   nil,   -29,   nil,   nil,   nil,   nil,   nil,   841,   812, 22709,
   nil,   nil,   nil,   863,  7000,   nil,   nil,  7127,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   913,   nil,  7393,
   nil,   nil,   nil,  7532,  7659,  7786,  7913,  8052,  8191,   nil,
   853,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil, 22822,   731,   nil,  8711,  8838,  8965,  9092,  9219,
 23859, 22944, 23798,  9739,  9866,  9993,   nil,   541,   192,   641,
   256,   435,   191, 10930, 11057,   nil,   nil, 11184,    50, 11438,
 11565, 11692, 11819, 11946, 12073, 12200, 12327, 12454, 12581, 12708,
 12835, 12962, 13089, 13216, 13343, 13470, 13597, 13724, 13851, 13978,
 14105, 14232, 14359, 14486, 14613,   nil,   nil,   nil,  2483,   nil,
   -89,   768,   nil, 15145,   402, 15399,   nil,   nil,   nil,   nil,
 15526,   nil,   nil, 23920, 23005,   648, 16058, 16185,   nil,   nil,
   nil,   nil,   nil,   nil,   nil, 16312,   336,   745,   791, 16844,
   962,   982,  1006, 17364, 17503,   467,  1038,  1201,   464,  1136,
  1067,   207,   nil,   732,   343,   nil, 18773,   nil,   867,   580,
   539,   379,   nil,   170,   nil, 19571,   nil, 19710,    35,   nil,
   506,   313,   440,   621,   656,   347,   762,   nil,   nil,    42,
  3396,   nil,   nil,   nil,  -115,   851,   nil,   882,   904,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,  2761,   nil,   nil,   nil,
   986,   nil,   nil,   994,   171,    -7,    74,  4539,  3118,   376,
    25,   990,    37,   591,  1083,    10,  1142,   nil,   nil,    -2,
  1148,   nil,   887,   nil,    64,   nil,   nil,   125,   597,   470,
   636,   563,   436,   382,   255,   274,   nil,   280,   nil,  8445,
   nil,   228,   nil,   234,   nil,   258,  1137,   252,   nil,  1100,
   -50,   nil,   242,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,  1107, 22235,
   nil,   nil,   nil, 21987,  1101,   nil,   nil,   760,   nil,   252,
  1047,   nil,  1045,   nil,   nil,  1848,  1076,   786,   798, 21280,
   nil,   nil,   nil, 21148,  1073, 21016,   nil,   379,   633,  1042,
   nil,   nil,   nil,  1443,   nil,   nil, 23188, 23249,   760,   189,
  2229,  2864,  2991,     1,   nil,  4932,  3650,   903,   232,  1021,
   999,   998,   997,  5186,  5059,  2865,  4412,  4285,  4158,  4031,
  2991,  3257,  3118,  3904,  3777,  4539,  2738,  2839,  4805,  4678,
   506,   152,   nil,  4805,   nil,  6226,   nil,  6746,   nil,   nil,
 21857, 21800,   221,   nil,   906,   nil,   nil,   893,   883,   nil,
   nil,  9485,   277,   252,   907,   nil,   nil, 14752,   857,   816,
   nil,   nil,   779, 14891,   801, 15018, 23554, 23066,   901,   797,
   nil,   nil,   725,   nil, 17237, 17630, 18265, 23127, 23310,  1721,
 20496,   723,   718,   629,   nil,   nil, 20369,   nil,   nil, 20242,
   nil,   nil,   nil,   nil, 20115, 19976,   526,   nil,  1118,   nil,
   nil, 19837,  6111,   nil,   742,   nil,   nil,   511,   nil,  2723,
   nil,   316,  1302,   nil,   nil, 19444,   141,   nil,   nil, 19305,
   108,   194,    83,    74, 19166,   nil, 19027, 23737, 23676,    68,
   nil,   254,   nil, 23371, 18900, 22883,   nil,   nil, 18646,    98,
 18519,   nil, 20716,   nil,   nil,   nil,    42,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   216,   nil,   nil,
   nil,   932,   nil,   nil,   nil,   nil,   nil, 18392,   969, 20623,
   761, 18138, 18011,  1158,   nil,   nil,   nil, 17884,  1166,   nil,
 17757,   nil,   270,   158, 20752, 20884,  1025,   379,   nil, 17110,
   nil,  2749,   nil, 16983,   884,   nil,   837, 16705,   nil,   nil,
   nil,   nil,   nil,   nil, 16578,   nil,   756, 16439, 15931,  1038,
   570,   nil,   nil,   582, 15804, 15665,   nil,   618,   122, 15272,
   218,   nil,   194,    96,   186,   -37,   101,   506,    14, 11311,
  1177,   156,   168,   -11,   252, 10791,   nil,   nil,   277,   178,
   299,   nil,   nil,   187,   nil,   214,   340,   323,   266,   292,
   nil,   nil,   337,  2850,   nil,   859,   nil,   487,   nil,   nil,
   nil,   nil,   nil,   496,   nil,   511, 10664,   505,   -18,    43,
   -17,    74, 10537,   668,   nil,   588,   598, 10410,   294,   nil,
   -25, 10271, 10132, 17376,   463,   nil,   nil,   710,   nil,  9612,
   nil,   645,   647,   nil,   672,   677,   681,   nil,   683,   nil,
 22483,   734,  1132,  9358,   nil,   nil,   nil,  2356,   728,  8572,
  8318,   nil,  2229,   nil,  2102,   nil,   nil,  1582,   nil,  1316,
  7254,  6873,  6619,   -30,  1975,   nil,   853,   958,   nil,   nil,
   855,   nil,   840,  6492,   nil,   859,   972,   855,   633,   nil,
   nil,   985,   nil,  6365,   876,   921,   nil,   nil,   nil,   nil,
   nil,   nil, 23493,   nil,    51,   nil,   nil,   nil,   nil,  1024,
  1011,   nil,  5452,  1020,  5325,  4678,   nil,   nil,    70,    56,
   100,   nil,  1038,   nil,   nil,  1041,  1042,   926,   nil,   nil,
   nil,   192,   nil,   nil,   152,  3523,   nil,   927,   nil,   -32,
   nil,  4031,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   967,
   955,   nil,  2610,  3904,   nil,   nil,   nil,  3777,   972,   nil,
   nil,   nil,  3650,   nil,   nil,    36,  2737,   nil,  1035,   998,
   nil,   nil,    63,   nil,  1121,  1123,  2102,  1721,   nil,   nil,
  1582,   nil,   nil,  1058,   nil,  1022,   nil,   nil,  1023,  1030,
  1031,  1024,   nil,   nil, 19849,   nil,   nil,  1443,   nil,  1316,
   718,   721,  1120,   760,   nil,   nil,  1177,   nil,   nil,   nil,
    50,  1038,  1193,   nil,   nil,   840,   nil,   nil,   nil,   899,
  1198,   506, 23432, 23615,   896,   868,   nil,   nil,   nil,  1224,
   nil,  1108,  1231,   nil,  1148,    91,    85,    78,   912,   nil,
   nil,   nil,   nil,   337 ]

racc_action_default = [
    -3,  -547,    -1,  -535,    -4,    -6,  -547,  -547,  -547,  -547,
  -547,  -547,  -547,  -547,  -271,   -36,   -37,  -547,  -547,   -42,
   -44,   -45,  -282,  -320,  -321,   -49,  -249,  -249,  -249,   -61,
   -10,   -65,   -72,   -74,  -547,  -449,  -547,  -547,  -547,  -547,
  -547,  -537,  -226,  -264,  -265,  -266,  -267,  -268,  -269,  -270,
  -525,  -273,  -547,  -546,  -517,  -290,  -546,  -547,  -547,  -295,
  -298,  -535,  -547,  -547,  -312,  -547,  -322,  -323,  -392,  -393,
  -394,  -395,  -396,  -546,  -399,  -546,  -546,  -546,  -546,  -546,
  -426,  -432,  -433,  -547,  -438,  -439,  -440,  -441,  -442,  -443,
  -444,  -445,  -446,  -447,  -448,  -451,  -452,  -547,    -2,  -536,
  -542,  -543,  -544,  -547,  -547,  -547,  -547,  -547,    -3,   -13,
  -547,  -100,  -101,  -102,  -103,  -104,  -105,  -106,  -109,  -110,
  -111,  -112,  -113,  -114,  -115,  -116,  -117,  -118,  -119,  -120,
  -121,  -122,  -123,  -124,  -125,  -126,  -127,  -128,  -129,  -130,
  -131,  -132,  -133,  -134,  -135,  -136,  -137,  -138,  -139,  -140,
  -141,  -142,  -143,  -144,  -145,  -146,  -147,  -148,  -149,  -150,
  -151,  -152,  -153,  -154,  -155,  -156,  -157,  -158,  -159,  -160,
  -161,  -162,  -163,  -164,  -165,  -166,  -167,  -168,  -169,  -170,
  -171,  -172,  -173,  -174,  -175,  -176,  -177,  -178,  -179,  -180,
  -181,  -182,  -547,   -18,  -107,   -10,  -547,  -547,  -547,  -546,
  -547,  -547,  -547,  -547,  -547,  -547,   -40,  -547,  -449,  -547,
  -271,  -547,  -547,   -10,  -547,   -41,  -218,  -547,  -547,  -547,
  -547,  -547,  -547,  -547,  -547,  -547,  -547,  -547,  -547,  -547,
  -547,  -547,  -547,  -547,  -547,  -547,  -547,  -547,  -547,  -547,
  -547,  -547,  -547,  -547,  -547,  -362,  -364,   -46,  -227,  -242,
  -256,  -256,  -246,  -547,  -257,  -547,  -282,  -320,  -321,  -519,
  -547,   -47,   -48,  -547,  -547,   -53,  -546,  -547,  -289,  -367,
  -375,  -377,   -59,  -373,   -60,  -547,  -535,   -11,   -61,   -10,
  -547,  -547,   -66,   -69,   -10,   -80,  -547,  -547,   -87,  -285,
  -537,  -547,  -324,  -374,  -547,   -71,  -547,   -76,  -278,  -434,
  -435,  -547,  -203,  -204,  -219,  -547,  -538,   -10,  -537,  -228,
  -537,  -539,  -539,  -547,  -547,  -539,  -547,  -291,  -292,  -547,
  -547,  -335,  -336,  -343,  -546,  -483,  -350,  -546,  -546,  -361,
  -482,  -484,  -485,  -486,  -487,  -488,  -547,  -501,  -506,  -507,
  -509,  -510,  -511,  -547,   -43,  -547,  -547,  -547,  -547,  -535,
  -547,  -536,  -449,  -547,  -547,  -271,  -547,  -490,  -491,   -96,
  -547,   -98,  -547,  -271,  -547,  -309,  -449,  -547,  -100,  -101,
  -138,  -139,  -155,  -160,  -167,  -170,  -315,  -547,  -515,  -547,
  -397,  -547,  -412,  -547,  -414,  -547,  -547,  -547,  -404,  -547,
  -547,  -410,  -547,  -425,  -427,  -428,  -429,  -430,  -436,  -437,
   944,    -5,  -545,   -19,   -20,   -21,   -22,   -23,  -547,  -547,
   -15,   -16,   -17,  -547,  -547,   -25,   -33,  -183,  -257,  -547,
  -547,   -26,   -34,   -35,   -27,  -185,  -547,  -526,  -527,  -249,
  -370,  -528,  -529,  -526,  -249,  -527,  -372,  -531,  -532,  -546,
  -526,  -527,   -32,  -192,   -38,   -39,  -547,  -547,  -546,  -278,
  -547,  -547,  -547,  -547,  -288,  -193,  -194,  -195,  -196,  -197,
  -198,  -199,  -200,  -205,  -206,  -207,  -208,  -209,  -210,  -211,
  -212,  -213,  -214,  -215,  -216,  -217,  -220,  -221,  -222,  -223,
  -547,  -546,  -243,  -547,  -244,  -547,  -254,  -547,  -258,  -522,
  -249,  -249,  -546,   -54,  -537,  -237,  -238,  -256,  -256,  -250,
  -251,  -547,  -546,  -546,  -547,  -284,    -9,  -536,  -547,   -62,
  -276,   -77,   -67,  -547,  -547,  -546,  -547,  -547,   -86,  -547,
  -434,  -435,   -73,   -78,  -547,  -547,  -547,  -547,  -547,  -224,
  -547,  -384,  -547,  -547,  -229,  -230,  -541,  -540,  -232,  -541,
  -280,  -281,  -518,  -332,   -10,   -10,  -547,  -334,  -547,  -352,
  -359,  -547,  -356,  -357,  -547,  -360,  -483,  -547,  -492,  -547,
  -494,  -496,  -500,  -508,  -512,   -10,  -325,  -326,  -327,   -10,
  -547,  -547,  -547,  -547,   -10,  -379,  -546,  -547,  -547,  -278,
  -304,   -96,   -97,  -547,  -546,  -547,  -307,  -453,  -547,  -547,
  -547,  -313,  -481,  -317,  -533,  -534,  -537,  -398,  -413,  -416,
  -417,  -419,  -400,  -415,  -401,  -402,  -403,  -547,  -406,  -408,
  -409,  -547,  -431,    -7,   -14,  -108,   -24,  -547,  -263,  -547,
  -279,  -547,  -547,   -55,  -235,  -236,  -368,  -547,   -57,  -371,
  -547,  -369,  -526,  -527,  -526,  -527,  -547,  -183,  -287,  -547,
  -346,  -547,  -348,   -10,  -256,  -255,  -259,  -547,  -520,  -521,
   -50,  -365,   -51,  -366,   -10,  -233,  -547,  -239,  -241,   -42,
  -547,  -248,  -252,  -547,   -10,   -10,  -283,   -12,   -62,  -547,
   -70,   -75,  -547,  -526,  -527,  -546,  -530,   -85,  -547,  -547,
  -191,  -201,  -202,  -547,  -546,  -546,  -274,  -275,  -539,  -547,
  -547,  -333,  -344,  -547,  -351,  -546,  -345,  -547,  -546,  -546,
  -502,  -489,  -547,  -547,  -499,  -546,  -328,  -546,  -296,  -329,
  -330,  -331,  -299,  -547,  -302,  -547,  -547,  -547,  -526,  -527,
  -530,  -277,  -547,   -96,   -99,  -530,  -547,   -10,  -547,  -455,
  -547,   -10,   -10,  -481,  -547,  -458,  -459,  -461,  -462,  -464,
  -465,  -514,  -514,  -470,  -472,  -472,  -472,  -480,  -483,  -504,
  -547,  -547,  -547,   -10,  -405,  -407,  -411,  -184,  -261,  -547,
  -547,   -29,  -187,   -30,  -188,   -56,   -31,  -189,   -58,  -190,
  -547,  -547,  -547,  -279,  -225,  -347,  -547,  -547,  -245,  -260,
  -547,  -234,  -256,  -547,  -253,  -547,  -547,   -68,   -81,   -79,
  -286,  -546,  -341,   -10,  -385,  -546,  -386,  -387,  -231,  -337,
  -338,  -358,  -547,  -278,  -547,  -354,  -355,  -493,  -495,  -498,
  -547,  -339,  -547,  -547,   -10,   -10,  -301,  -303,  -547,  -279,
  -547,  -279,  -547,  -454,  -310,  -547,  -547,  -537,  -457,  -460,
  -463,  -547,  -468,  -469,  -547,  -547,  -476,  -547,  -478,  -547,
  -479,  -547,  -318,  -516,  -418,  -421,  -422,  -423,  -424,  -547,
  -262,   -28,  -186,  -547,  -349,  -363,   -52,  -240,  -256,  -376,
  -378,    -8,   -10,  -391,  -342,  -547,  -547,  -389,  -277,  -546,
  -497,  -293,  -547,  -294,  -547,  -547,  -547,   -10,  -305,  -308,
   -10,  -314,  -316,  -547,  -466,  -514,  -513,  -471,  -472,  -472,
  -472,  -547,  -505,  -503,  -481,  -420,  -247,  -547,  -390,   -10,
   -88,  -547,  -547,   -95,  -388,  -353,   -10,  -297,  -300,  -259,
  -546,   -10,  -547,  -456,  -467,  -547,  -474,  -475,  -477,   -10,
  -384,  -546,  -547,  -547,   -94,  -546,  -380,  -381,  -382,  -547,
  -311,  -472,  -547,  -383,  -547,  -526,  -527,  -530,   -93,  -340,
  -306,  -473,  -319,   -89 ]

clist = [
'26,305,532,573,249,249,249,114,114,292,292,313,5,684,329,109,194,26',
'26,321,565,569,26,26,26,522,484,493,376,98,26,364,282,416,423,310,250',
'250,250,747,292,292,394,700,117,117,345,346,744,215,349,732,26,26,99',
'535,538,26,26,542,692,26,558,557,582,114,295,550,648,280,553,555,265',
'272,274,810,892,598,791,114,251,251,251,608,645,278,645,350,708,712',
'631,894,403,404,405,406,832,833,2,26,307,813,661,26,26,26,26,26,26,347',
'643,5,315,247,261,262,13,814,348,407,5,654,648,383,385,815,722,392,102',
'911,727,664,665,207,207,590,880,367,207,207,207,651,653,731,592,750',
'13,286,286,593,319,543,377,698,892,394,861,426,586,356,401,193,358,246',
'481,502,503,926,207,207,716,795,865,207,207,380,381,207,353,362,747',
'310,318,387,269,273,102,607,317,744,390,844,114,752,753,26,26,26,26',
'26,827,438,12,26,26,26,408,885,884,314,420,420,378,26,26,13,499,888',
'663,207,207,207,207,13,13,713,409,415,421,424,655,808,12,494,442,1,',
',,,914,648,670,,,,,,249,249,519,,,,,,,249,645,645,,292,,,,,26,26,533',
',534,,,484,292,26,,,329,26,497,250,,546,26,558,702,724,704,250,,,429',
'434,439,939,,523,,,,12,506,755,927,,,26,,12,12,13,207,207,207,207,692',
'512,508,207,207,207,,514,498,251,700,507,,13,207,,,251,278,591,570,571',
'878,278,,747,,,,292,,26,26,,744,,,919,,490,491,496,500,,,,,,,,504,,',
',,,,,,572,,,,26,,,207,207,,765,,,,,768,207,,,,13,,12,787,286,13,102',
'933,10,,14,636,,,114,,,286,114,,12,,614,,778,,615,822,13,,,825,826,',
'558,310,,798,10,,14,288,288,801,,648,805,806,,,,117,438,26,269,117,273',
',,656,,,,645,,,,,207,207,357,,355,363,,,,,672,102,623,,,,,628,12,,362',
',,12,,,587,,292,,877,,207,,310,645,,,26,10,,14,,,26,,12,10,10,14,14',
'523,26,,438,,667,,,796,,,,,,438,292,26,,,,717,870,650,652,429,434,899',
'644,726,,26,26,,906,,,,,,,,,751,778,310,,,,,928,207,26,310,,,26,,,,',
'26,912,26,728,438,836,838,840,,438,26,743,,625,26,,26,,629,,688,,,625',
'10,329,14,,,,776,,,,675,35,,,905,,932,,10,207,14,675,,26,26,13,,,,26',
',286,,207,,896,,,,,,35,285,285,,26,,,207,292,625,625,,,761,763,26,,',
'292,766,,13,13,,,26,26,,696,,675,523,352,366,,366,,,675,,,789,13,10',
',14,13,,10,288,14,13,,207,,,709,709,,695,420,207,288,699,,207,,207,',
'35,12,10,820,14,842,729,782,35,35,,,,,26,916,917,918,743,26,,,818,26',
'26,,,,,207,207,,,,746,207,,,12,12,,,114,,,26,,,,,,13,26,,,,,,941,12',
',,13,12,363,,,,12,,,,13,13,,,,286,,883,,,,851,,26,,286,,858,,,,872,438',
',35,,,,,,,,26,,26,26,,,,,,,35,,886,,,886,743,,743,,743,625,,,629,,207',
',,,,13,292,12,,13,13,,,,,823,,824,12,,,828,,,26,,,,12,12,,13,,,,,,,207',
'26,,934,26,,,746,,,,743,35,,,,285,35,,,,,,26,,,,310,,285,26,,743,13',
'10,26,14,281,,,35,,288,26,,26,,438,,,,,207,12,13,13,,12,12,,,,,,,,,',
',709,,10,10,14,14,,,,869,12,363,,,,,,,,,,,,10,,14,,10,,14,,366,10,13',
'14,,,901,,,889,,890,,,,,,13,,12,13,,,,,,,,,,,,,,,,,,675,13,12,12,,,',
',13,,,,,13,,,,,,,,13,,207,,,,,,,746,,10,,14,,,,,,,,,10,,14,,,,,12,931',
',10,10,14,14,,,,288,,,,414,12,,,12,,288,,,,,,,,,,,,281,,,,,12,,,,,,',
'12,,,,,12,,,35,,,,,12,285,,,,,,,,10,,14,,10,10,14,14,,,,,,,,,,,,,,,',
'35,35,,10,848,14,,366,,281,,216,,,281,248,248,248,,,,35,,,,35,,,,,35',
'302,303,304,,,,,,,,,,10,,14,248,248,,,,,322,,,,,206,,,,,,,10,10,14,14',
',382,,384,384,388,391,384,,,,,,,,,,,,,,,,,308,,,,,344,344,35,,344,,',
',,,,,316,35,,10,,14,,904,,903,,35,35,,,,285,,10,,14,10,,14,,,285,,,',
',,,,344,344,344,344,,,10,,14,,,,,10,,14,,,10,,14,,,,,,10,,14,,,,,,,',
',,,,35,,,,35,35,417,248,425,248,,,,443,,,,,,,,,,,,,35,216,,455,456,457',
'458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474',
'475,476,477,478,479,480,,,,,,,444,445,248,,248,35,,418,422,248,453,',
',,,248,248,,495,,,,,,248,,35,35,,,689,690,,,,,,,,,,,,,,,,,,,,705,,,529',
'707,,,,,715,,,,486,,488,,,,,489,,,35,,549,,900,549,549,,,,,,,,,35,,',
'35,,,,,,,,,,,,,,,,,,,35,,,,,,,35,,,,,35,,,,,,777,,35,,,,,,,,,780,,,344',
'344,,,,,,785,786,,,,,,,,,,,,,,,,,248,,,,,,,596,,,,,,624,,,,,,,,,,624',
',,,,,248,,443,637,425,,,,,,,,,,,,,,,,,,,,,,,,,,,,,618,,248,640,248,',
'248,,,849,,,624,624,640,,,,,,659,,,,640,640,,,,,,,,,248,,,,,,,,,680',
'681,682,,,,864,,,,,,248,,,248,,,,,,646,,316,308,649,,874,875,,,,,,,',
',,,660,,,,,,,,,,,,,248,683,,,,,,,248,,,,,,,,,,,,,,646,898,,316,,,,,',
',,,,,,,910,,,757,,248,,762,764,,,,,767,,,769,,,,,344,920,730,,774,,',
',925,,,,248,929,,,,,,,,,248,248,,,,,,,,,,,,,,,,,,,,624,,,758,,,,248',
',792,797,,,,,,,,,,549,,,549,549,,,,,,792,779,792,,,,,,248,,,646,316',
',,,,,,,,,,,,,,,,,,248,,,,,,,,794,,,,,,,,,,,,248,852,,,,,,,,,344,762',
'764,767,,,,,,418,,,,,248,,,,,,,,,,,863,,,,867,,,830,,,,,,,,,,,,,,,,',
',,,850,,,,,,,,,,,,,,,,,,,,248,,,,418,,,,,,,,852,,,,248,,344,,,,,,,,',
',,,,549,,,,248,,,,,,,,,,,,,,,,,,,,,248,,,,,,893,,,,,,,,,,792,,,,,,316',
',248,,,,,,,792,,,,,,,,,,909,,,,,,,,,,,,,,,,,,,,,909' ]
        racc_goto_table = arr = ::Array.new(2106, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'37,51,8,80,29,29,29,48,48,52,52,22,7,10,107,14,14,37,37,104,77,77,37',
'37,37,43,61,35,47,4,37,46,41,24,24,29,54,54,54,141,52,52,47,147,50,50',
'16,16,110,18,16,84,37,37,6,55,55,37,37,55,106,37,145,148,45,48,42,109',
'154,39,109,109,34,34,34,78,151,129,11,48,56,56,56,129,62,38,62,4,79',
'79,60,101,16,16,16,16,142,142,2,37,87,11,62,37,37,37,37,37,37,88,36',
'7,56,31,31,31,21,89,90,7,7,36,154,126,126,91,92,126,83,93,94,36,36,21',
'21,95,96,97,21,21,21,60,60,98,99,100,21,21,21,86,102,103,85,105,151',
'47,12,22,82,81,5,15,19,112,113,115,116,117,21,21,118,119,120,21,21,124',
'125,21,21,21,141,29,76,127,57,57,83,128,74,110,130,131,48,132,133,37',
'37,37,37,37,135,48,20,37,37,37,2,137,139,73,54,54,72,37,37,21,64,144',
'63,21,21,21,21,21,21,80,27,18,18,18,59,149,20,58,18,1,,,,,142,154,43',
',,,,,29,29,51,,,,,,,29,62,62,,52,,,,,37,37,51,,51,,,61,52,37,,,107,37',
'54,54,,104,37,145,148,45,145,54,,,33,33,33,78,,41,,,,20,4,129,11,,,37',
',20,20,21,21,21,21,21,106,42,39,21,21,21,,39,56,56,147,6,,21,21,,,56',
'38,46,16,16,79,38,,141,,,,52,,37,37,,110,,,84,,33,33,31,31,,,,,,,,31',
',,,,,,,,4,,,,37,,,21,21,,35,,,,,35,21,,,,21,,20,43,21,21,83,10,17,,23',
'22,,,48,,,21,48,,20,,14,,61,,14,8,21,,,8,8,,145,29,,55,17,,23,23,23',
'109,,154,109,109,,,,50,48,37,57,50,57,,,51,,,,62,,,,,21,21,17,,23,23',
',,,,22,83,34,,,,,34,20,,21,,,20,,,83,,52,,77,,21,,29,62,,,37,17,,23',
',,37,,20,17,17,23,23,41,37,,48,,7,,,24,,,,,,48,52,37,,,,22,145,34,34',
'33,33,77,56,22,,37,37,,77,,,,,,,,,51,61,29,,,,,80,21,37,29,,,37,,,,',
'37,8,37,16,48,143,143,143,,48,37,108,,57,37,,37,,57,,56,,,57,17,107',
'23,,,,104,,,,33,44,,,109,,8,,17,21,23,33,,37,37,21,,,,37,,21,,21,,61',
',,,,,44,44,44,,37,,,21,52,57,57,,,18,18,37,,,52,18,,21,21,,,37,37,,21',
',33,41,44,44,,44,,,33,,,41,21,17,,23,21,,17,23,23,21,,21,,,83,83,,111',
'54,21,23,111,,21,,21,,44,20,17,16,23,47,83,56,44,44,,,,,37,143,143,143',
'108,37,,,54,37,37,,,,,21,21,,,,111,21,,,20,20,,,48,,,37,,,,,,21,37,',
',,,,143,20,,,21,20,23,,,,20,,,,21,21,,,,21,,51,,,,18,,37,,21,,54,,,',
'16,48,,44,,,,,,,,37,,37,37,,,,,,,44,,108,,,108,108,,108,,108,57,,,57',
',21,,,,,21,52,20,,21,21,,,,,83,,83,20,,,83,,,37,,,,20,20,,21,,,,,,,21',
'37,,22,37,,,111,,,,108,44,,,,44,44,,,,,,37,,,,29,,44,37,,108,21,17,37',
'23,9,,,44,,23,37,,37,,48,,,,,21,20,21,21,,20,20,,,,,,,,,,,83,,17,17',
'23,23,,,,111,20,23,,,,,,,,,,,,17,,23,,17,,23,,44,17,21,23,,,21,,,111',
',111,,,,,,21,,20,21,,,,,,,,,,,,,,,,,,33,21,20,20,,,,,21,,,,,21,,,,,',
',,21,,21,,,,,,,111,,17,,23,,,,,,,,,17,,23,,,,,20,111,,17,17,23,23,,',
',23,,,,9,20,,,20,,23,,,,,,,,,,,,9,,,,,20,,,,,,,20,,,,,20,,,44,,,,,20',
'44,,,,,,,,17,,23,,17,17,23,23,,,,,,,,,,,,,,,,44,44,,17,23,23,,44,,9',
',28,,,9,28,28,28,,,,44,,,,44,,,,,44,28,28,28,,,,,,,,,,17,,23,28,28,',
',,,53,,,,,26,,,,,,,17,17,23,23,,53,,53,53,53,53,53,,,,,,,,,,,,,,,,,26',
',,,,26,26,44,,26,,,,,,,,25,44,,17,,23,,17,,23,,44,44,,,,44,,17,,23,17',
',23,,,44,,,,,,,,26,26,26,26,,,17,,23,,,,,17,,23,,,17,,23,,,,,,17,,23',
',,,,,,,,,,,44,,,,44,44,28,28,28,28,,,,28,,,,,,,,,,,,,44,28,,28,28,28',
'28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28',
',,,,,,26,26,28,,28,44,,25,25,28,26,,,,,28,28,,53,,,,,,28,,44,44,,,9',
'9,,,,,,,,,,,,,,,,,,,,9,,,28,9,,,,,9,,,,25,,25,,,,,25,,,44,,53,,44,53',
'53,,,,,,,,,44,,,44,,,,,,,,,,,,,,,,,,,44,,,,,,,44,,,,,44,,,,,,9,,44,',
',,,,,,,9,,,26,26,,,,,,9,9,,,,,,,,,,,,,,,,,28,,,,,,,26,,,,,,53,,,,,,',
',,,53,,,,,,28,,28,28,28,,,,,,,,,,,,,,,,,,,,,,,,,,,,,25,,28,53,28,,28',
',,9,,,53,53,53,,,,,,28,,,,53,53,,,,,,,,,28,,,,,,,,,28,28,28,,,,9,,,',
',,28,,,28,,,,,,25,,25,26,25,,9,9,,,,,,,,,,,25,,,,,,,,,,,,,28,26,,,,',
',,28,,,,,,,,,,,,,,25,9,,25,,,,,,,,,,,,,9,,,28,,28,,28,28,,,,,28,,,28',
',,,,26,9,26,,28,,,,9,,,,28,9,,,,,,,,,28,28,,,,,,,,,,,,,,,,,,,,53,,,25',
',,,28,,53,53,,,,,,,,,,53,,,53,53,,,,,,53,25,53,,,,,,28,,,25,25,,,,,',
',,,,,,,,,,,,,28,,,,,,,,25,,,,,,,,,,,,28,28,,,,,,,,,26,28,28,28,,,,,',
'25,,,,,28,,,,,,,,,,,53,,,,53,,,25,,,,,,,,,,,,,,,,,,,,25,,,,,,,,,,,,',
',,,,,,,28,,,,25,,,,,,,,28,,,,28,,26,,,,,,,,,,,,,53,,,,28,,,,,,,,,,,',
',,,,,,,,,28,,,,,,25,,,,,,,,,,53,,,,,,25,,28,,,,,,,53,,,,,,,,,,25,,,',
',,,,,,,,,,,,,,,,,25' ]
        racc_goto_check = arr = ::Array.new(2106, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_goto_pointer = [
   nil,   235,    98,   nil,    26,    61,    51,    12,  -305,   883,
  -518,  -606,  -635,   nil,     8,   153,   -11,   403,    31,   100,
   202,   116,   -42,   405,  -163,  1208,  1193,   117,  1146,   -18,
   nil,    91,   nil,    92,    46,  -238,  -371,     0,    55,    39,
   nil,     1,    34,  -271,   609,  -296,   -32,   -37,     0,   nil,
    37,   -40,   -22,  1149,    14,  -256,    58,   158,   -33,  -264,
  -349,  -225,  -399,  -283,   -51,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   147,   155,   133,   nil,   126,  -325,  -630,  -482,
  -347,    97,  -206,   125,  -541,    87,  -228,    49,    50,  -591,
    58,  -587,  -454,  -749,  -456,  -230,  -688,    73,  -448,  -232,
  -448,  -751,    94,  -168,   -37,  -399,  -488,   -42,    -7,  -257,
  -544,   150,   143,   -81,   nil,  -105,  -105,  -743,  -405,  -514,
  -623,   nil,   nil,   nil,   104,   103,    48,   106,  -200,  -304,
   112,  -561,  -407,  -407,   nil,  -533,   nil,  -624,   nil,  -623,
   nil,  -553,  -645,  -165,  -618,  -274,   nil,  -509,  -273,  -472,
   nil,  -761,   nil,   nil,  -417 ]

racc_goto_default = [
   nil,   nil,   nil,     3,   nil,     4,   351,   277,   nil,   531,
   nil,   811,   nil,   276,   nil,   nil,   nil,   211,    16,    11,
   212,   301,   nil,   210,   nil,   254,    15,   nil,    19,    20,
    21,   nil,    25,   678,   nil,   nil,   nil,   291,    29,   nil,
    31,    34,    33,   nil,   208,   361,   nil,   116,   432,   115,
    69,   nil,    42,   309,   311,   nil,   312,   430,   nil,   nil,
   626,   482,   252,   nil,   nil,   267,    43,    44,    45,    46,
    47,    48,    49,   nil,   268,    55,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   566,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   324,   323,   694,   326,   nil,
   327,   328,   nil,   nil,   436,   nil,   nil,   nil,   nil,   nil,
   nil,    68,    70,    71,    72,   nil,   nil,   nil,   nil,   603,
   nil,   nil,   nil,   nil,   393,   734,   737,   742,   739,   740,
   741,   887,   nil,   nil,   745,   335,   330,   337,   nil,   560,
   561,   749,   340,   343,   259 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 142, :_reduce_none,
  2, 143, :_reduce_2,
  0, 144, :_reduce_3,
  1, 144, :_reduce_4,
  3, 144, :_reduce_5,
  1, 146, :_reduce_none,
  4, 146, :_reduce_7,
  4, 149, :_reduce_8,
  2, 150, :_reduce_9,
  0, 154, :_reduce_10,
  1, 154, :_reduce_11,
  3, 154, :_reduce_12,
  0, 168, :_reduce_13,
  4, 148, :_reduce_14,
  3, 148, :_reduce_15,
  3, 148, :_reduce_none,
  3, 148, :_reduce_17,
  2, 148, :_reduce_18,
  3, 148, :_reduce_19,
  3, 148, :_reduce_20,
  3, 148, :_reduce_21,
  3, 148, :_reduce_22,
  3, 148, :_reduce_23,
  4, 148, :_reduce_none,
  3, 148, :_reduce_25,
  3, 148, :_reduce_26,
  3, 148, :_reduce_27,
  6, 148, :_reduce_none,
  5, 148, :_reduce_29,
  5, 148, :_reduce_none,
  5, 148, :_reduce_none,
  3, 148, :_reduce_none,
  3, 148, :_reduce_33,
  3, 148, :_reduce_34,
  3, 148, :_reduce_35,
  1, 148, :_reduce_none,
  1, 167, :_reduce_none,
  3, 167, :_reduce_38,
  3, 167, :_reduce_39,
  2, 167, :_reduce_40,
  2, 167, :_reduce_41,
  1, 167, :_reduce_none,
  1, 157, :_reduce_none,
  1, 159, :_reduce_none,
  1, 159, :_reduce_none,
  2, 159, :_reduce_46,
  2, 159, :_reduce_47,
  2, 159, :_reduce_48,
  1, 171, :_reduce_none,
  4, 171, :_reduce_none,
  4, 171, :_reduce_none,
  4, 176, :_reduce_none,
  2, 170, :_reduce_53,
  3, 170, :_reduce_none,
  4, 170, :_reduce_55,
  5, 170, :_reduce_none,
  4, 170, :_reduce_57,
  5, 170, :_reduce_none,
  2, 170, :_reduce_59,
  2, 170, :_reduce_60,
  1, 160, :_reduce_61,
  3, 160, :_reduce_62,
  1, 180, :_reduce_63,
  3, 180, :_reduce_64,
  1, 179, :_reduce_65,
  2, 179, :_reduce_66,
  3, 179, :_reduce_67,
  5, 179, :_reduce_none,
  2, 179, :_reduce_69,
  4, 179, :_reduce_none,
  2, 179, :_reduce_71,
  1, 179, :_reduce_72,
  3, 179, :_reduce_none,
  1, 182, :_reduce_74,
  3, 182, :_reduce_75,
  2, 181, :_reduce_76,
  3, 181, :_reduce_77,
  1, 184, :_reduce_none,
  3, 184, :_reduce_none,
  1, 183, :_reduce_80,
  4, 183, :_reduce_81,
  3, 183, :_reduce_82,
  3, 183, :_reduce_none,
  3, 183, :_reduce_none,
  3, 183, :_reduce_none,
  2, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 158, :_reduce_88,
  4, 158, :_reduce_89,
  3, 158, :_reduce_90,
  3, 158, :_reduce_91,
  3, 158, :_reduce_92,
  3, 158, :_reduce_93,
  2, 158, :_reduce_94,
  1, 158, :_reduce_none,
  1, 186, :_reduce_none,
  2, 187, :_reduce_97,
  1, 187, :_reduce_98,
  3, 187, :_reduce_99,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_103,
  1, 188, :_reduce_104,
  1, 155, :_reduce_105,
  1, 155, :_reduce_none,
  1, 156, :_reduce_107,
  3, 156, :_reduce_108,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  3, 169, :_reduce_183,
  5, 169, :_reduce_184,
  3, 169, :_reduce_185,
  6, 169, :_reduce_186,
  5, 169, :_reduce_187,
  5, 169, :_reduce_none,
  5, 169, :_reduce_none,
  5, 169, :_reduce_none,
  4, 169, :_reduce_none,
  3, 169, :_reduce_none,
  3, 169, :_reduce_193,
  3, 169, :_reduce_194,
  3, 169, :_reduce_195,
  3, 169, :_reduce_196,
  3, 169, :_reduce_197,
  3, 169, :_reduce_198,
  3, 169, :_reduce_199,
  3, 169, :_reduce_200,
  4, 169, :_reduce_201,
  4, 169, :_reduce_202,
  2, 169, :_reduce_203,
  2, 169, :_reduce_204,
  3, 169, :_reduce_205,
  3, 169, :_reduce_206,
  3, 169, :_reduce_207,
  3, 169, :_reduce_208,
  3, 169, :_reduce_209,
  3, 169, :_reduce_210,
  3, 169, :_reduce_211,
  3, 169, :_reduce_212,
  3, 169, :_reduce_213,
  3, 169, :_reduce_214,
  3, 169, :_reduce_215,
  3, 169, :_reduce_216,
  3, 169, :_reduce_217,
  2, 169, :_reduce_218,
  2, 169, :_reduce_219,
  3, 169, :_reduce_220,
  3, 169, :_reduce_221,
  3, 169, :_reduce_222,
  3, 169, :_reduce_223,
  3, 169, :_reduce_224,
  5, 169, :_reduce_225,
  1, 169, :_reduce_none,
  1, 166, :_reduce_none,
  1, 163, :_reduce_228,
  2, 163, :_reduce_229,
  2, 163, :_reduce_230,
  4, 163, :_reduce_231,
  2, 163, :_reduce_232,
  3, 198, :_reduce_233,
  2, 200, :_reduce_none,
  1, 201, :_reduce_235,
  1, 201, :_reduce_none,
  1, 199, :_reduce_237,
  1, 199, :_reduce_none,
  2, 199, :_reduce_239,
  4, 199, :_reduce_240,
  2, 199, :_reduce_241,
  1, 172, :_reduce_242,
  2, 172, :_reduce_243,
  2, 172, :_reduce_244,
  4, 172, :_reduce_245,
  1, 172, :_reduce_246,
  4, 204, :_reduce_none,
  1, 204, :_reduce_none,
  0, 206, :_reduce_249,
  2, 175, :_reduce_250,
  1, 205, :_reduce_none,
  2, 205, :_reduce_252,
  3, 205, :_reduce_253,
  2, 203, :_reduce_254,
  2, 202, :_reduce_255,
  0, 202, :_reduce_256,
  1, 195, :_reduce_257,
  2, 195, :_reduce_258,
  3, 195, :_reduce_259,
  4, 195, :_reduce_260,
  3, 165, :_reduce_261,
  4, 165, :_reduce_262,
  2, 165, :_reduce_263,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  0, 228, :_reduce_273,
  4, 193, :_reduce_274,
  4, 193, :_reduce_275,
  3, 193, :_reduce_276,
  3, 193, :_reduce_277,
  2, 193, :_reduce_278,
  4, 193, :_reduce_279,
  3, 193, :_reduce_280,
  3, 193, :_reduce_281,
  1, 193, :_reduce_282,
  4, 193, :_reduce_283,
  3, 193, :_reduce_284,
  1, 193, :_reduce_285,
  5, 193, :_reduce_286,
  4, 193, :_reduce_287,
  3, 193, :_reduce_288,
  2, 193, :_reduce_289,
  1, 193, :_reduce_none,
  2, 193, :_reduce_291,
  2, 193, :_reduce_292,
  6, 193, :_reduce_293,
  6, 193, :_reduce_294,
  0, 229, :_reduce_295,
  0, 230, :_reduce_296,
  7, 193, :_reduce_297,
  0, 231, :_reduce_298,
  0, 232, :_reduce_299,
  7, 193, :_reduce_300,
  5, 193, :_reduce_301,
  4, 193, :_reduce_302,
  5, 193, :_reduce_303,
  0, 233, :_reduce_304,
  0, 234, :_reduce_305,
  9, 193, :_reduce_306,
  0, 235, :_reduce_307,
  6, 193, :_reduce_308,
  0, 236, :_reduce_309,
  0, 237, :_reduce_310,
  8, 193, :_reduce_311,
  0, 238, :_reduce_312,
  0, 239, :_reduce_313,
  6, 193, :_reduce_314,
  0, 240, :_reduce_315,
  6, 193, :_reduce_316,
  0, 241, :_reduce_317,
  0, 242, :_reduce_318,
  9, 193, :_reduce_319,
  1, 193, :_reduce_320,
  1, 193, :_reduce_321,
  1, 193, :_reduce_322,
  1, 193, :_reduce_none,
  1, 162, :_reduce_none,
  1, 218, :_reduce_none,
  1, 218, :_reduce_none,
  1, 218, :_reduce_none,
  2, 218, :_reduce_none,
  1, 220, :_reduce_none,
  1, 220, :_reduce_none,
  1, 220, :_reduce_none,
  2, 217, :_reduce_332,
  3, 243, :_reduce_333,
  2, 243, :_reduce_334,
  1, 243, :_reduce_none,
  1, 243, :_reduce_none,
  3, 244, :_reduce_337,
  3, 244, :_reduce_338,
  1, 219, :_reduce_339,
  5, 219, :_reduce_340,
  1, 152, :_reduce_none,
  2, 152, :_reduce_342,
  1, 246, :_reduce_343,
  3, 246, :_reduce_344,
  3, 247, :_reduce_345,
  1, 177, :_reduce_none,
  2, 177, :_reduce_347,
  1, 177, :_reduce_348,
  3, 177, :_reduce_349,
  1, 248, :_reduce_350,
  2, 250, :_reduce_351,
  1, 250, :_reduce_352,
  6, 245, :_reduce_353,
  4, 245, :_reduce_354,
  4, 245, :_reduce_355,
  2, 245, :_reduce_356,
  2, 245, :_reduce_357,
  4, 245, :_reduce_358,
  2, 245, :_reduce_359,
  2, 245, :_reduce_360,
  1, 245, :_reduce_361,
  0, 254, :_reduce_362,
  5, 253, :_reduce_363,
  2, 173, :_reduce_364,
  4, 173, :_reduce_none,
  4, 173, :_reduce_none,
  2, 216, :_reduce_367,
  4, 216, :_reduce_368,
  4, 216, :_reduce_369,
  3, 216, :_reduce_370,
  4, 216, :_reduce_371,
  3, 216, :_reduce_372,
  2, 216, :_reduce_373,
  1, 216, :_reduce_374,
  0, 256, :_reduce_375,
  5, 215, :_reduce_376,
  0, 257, :_reduce_377,
  5, 215, :_reduce_378,
  0, 259, :_reduce_379,
  6, 221, :_reduce_380,
  1, 258, :_reduce_381,
  1, 258, :_reduce_none,
  6, 151, :_reduce_383,
  0, 151, :_reduce_384,
  1, 260, :_reduce_385,
  1, 260, :_reduce_none,
  1, 260, :_reduce_none,
  2, 261, :_reduce_388,
  1, 261, :_reduce_389,
  2, 153, :_reduce_390,
  1, 153, :_reduce_none,
  1, 207, :_reduce_none,
  1, 207, :_reduce_none,
  1, 207, :_reduce_none,
  1, 208, :_reduce_395,
  1, 264, :_reduce_none,
  2, 264, :_reduce_397,
  3, 265, :_reduce_398,
  1, 265, :_reduce_399,
  3, 209, :_reduce_400,
  3, 210, :_reduce_401,
  3, 211, :_reduce_402,
  3, 211, :_reduce_403,
  1, 268, :_reduce_404,
  3, 268, :_reduce_405,
  1, 269, :_reduce_406,
  2, 269, :_reduce_407,
  3, 212, :_reduce_408,
  3, 212, :_reduce_409,
  1, 271, :_reduce_410,
  3, 271, :_reduce_411,
  1, 266, :_reduce_412,
  2, 266, :_reduce_413,
  1, 267, :_reduce_414,
  2, 267, :_reduce_415,
  1, 270, :_reduce_416,
  0, 273, :_reduce_417,
  3, 270, :_reduce_418,
  0, 274, :_reduce_419,
  4, 270, :_reduce_420,
  1, 272, :_reduce_421,
  1, 272, :_reduce_422,
  1, 272, :_reduce_423,
  1, 272, :_reduce_none,
  2, 191, :_reduce_425,
  1, 191, :_reduce_426,
  1, 275, :_reduce_none,
  1, 275, :_reduce_none,
  1, 275, :_reduce_none,
  1, 275, :_reduce_none,
  3, 263, :_reduce_431,
  1, 262, :_reduce_432,
  1, 262, :_reduce_433,
  2, 262, :_reduce_434,
  2, 262, :_reduce_435,
  2, 262, :_reduce_436,
  2, 262, :_reduce_437,
  1, 185, :_reduce_438,
  1, 185, :_reduce_439,
  1, 185, :_reduce_440,
  1, 185, :_reduce_441,
  1, 185, :_reduce_442,
  1, 185, :_reduce_443,
  1, 185, :_reduce_444,
  1, 185, :_reduce_445,
  1, 185, :_reduce_446,
  1, 185, :_reduce_447,
  1, 185, :_reduce_448,
  1, 213, :_reduce_449,
  1, 161, :_reduce_450,
  1, 164, :_reduce_451,
  1, 164, :_reduce_none,
  1, 223, :_reduce_453,
  3, 223, :_reduce_454,
  2, 223, :_reduce_455,
  4, 225, :_reduce_456,
  2, 225, :_reduce_457,
  1, 277, :_reduce_none,
  1, 277, :_reduce_none,
  2, 278, :_reduce_460,
  1, 278, :_reduce_461,
  1, 279, :_reduce_462,
  2, 280, :_reduce_463,
  1, 280, :_reduce_464,
  1, 281, :_reduce_465,
  3, 281, :_reduce_466,
  4, 282, :_reduce_467,
  2, 282, :_reduce_468,
  2, 282, :_reduce_469,
  1, 282, :_reduce_470,
  2, 284, :_reduce_471,
  0, 284, :_reduce_472,
  6, 276, :_reduce_473,
  4, 276, :_reduce_474,
  4, 276, :_reduce_475,
  2, 276, :_reduce_476,
  4, 276, :_reduce_477,
  2, 276, :_reduce_478,
  2, 276, :_reduce_479,
  1, 276, :_reduce_480,
  0, 276, :_reduce_481,
  1, 286, :_reduce_none,
  1, 286, :_reduce_483,
  1, 287, :_reduce_484,
  1, 287, :_reduce_485,
  1, 287, :_reduce_486,
  1, 287, :_reduce_487,
  1, 288, :_reduce_488,
  3, 288, :_reduce_489,
  1, 222, :_reduce_none,
  1, 222, :_reduce_none,
  1, 290, :_reduce_492,
  3, 290, :_reduce_none,
  1, 291, :_reduce_494,
  3, 291, :_reduce_495,
  1, 289, :_reduce_none,
  4, 289, :_reduce_none,
  3, 289, :_reduce_none,
  2, 289, :_reduce_none,
  1, 289, :_reduce_none,
  1, 251, :_reduce_501,
  3, 251, :_reduce_502,
  3, 292, :_reduce_503,
  1, 285, :_reduce_504,
  3, 285, :_reduce_505,
  1, 293, :_reduce_none,
  1, 293, :_reduce_none,
  2, 252, :_reduce_508,
  1, 252, :_reduce_509,
  1, 294, :_reduce_none,
  1, 294, :_reduce_none,
  2, 249, :_reduce_512,
  2, 283, :_reduce_513,
  0, 283, :_reduce_514,
  1, 226, :_reduce_515,
  4, 226, :_reduce_516,
  0, 214, :_reduce_517,
  2, 214, :_reduce_518,
  1, 197, :_reduce_519,
  3, 197, :_reduce_520,
  3, 295, :_reduce_521,
  2, 295, :_reduce_522,
  1, 178, :_reduce_none,
  1, 178, :_reduce_none,
  1, 178, :_reduce_none,
  1, 174, :_reduce_none,
  1, 174, :_reduce_none,
  1, 174, :_reduce_none,
  1, 174, :_reduce_none,
  1, 255, :_reduce_none,
  1, 255, :_reduce_none,
  1, 255, :_reduce_none,
  1, 227, :_reduce_none,
  1, 227, :_reduce_none,
  0, 145, :_reduce_none,
  1, 145, :_reduce_none,
  0, 192, :_reduce_none,
  1, 192, :_reduce_none,
  0, 196, :_reduce_none,
  1, 196, :_reduce_none,
  1, 196, :_reduce_none,
  1, 224, :_reduce_none,
  1, 224, :_reduce_none,
  1, 147, :_reduce_none,
  2, 147, :_reduce_none,
  0, 194, :_reduce_546 ]

racc_reduce_n = 547

racc_shift_n = 944

racc_token_table = {
  false => 0,
  :error => 1,
  :kCLASS => 2,
  :kMODULE => 3,
  :kDEF => 4,
  :kUNDEF => 5,
  :kBEGIN => 6,
  :kRESCUE => 7,
  :kENSURE => 8,
  :kEND => 9,
  :kIF => 10,
  :kUNLESS => 11,
  :kTHEN => 12,
  :kELSIF => 13,
  :kELSE => 14,
  :kCASE => 15,
  :kWHEN => 16,
  :kWHILE => 17,
  :kUNTIL => 18,
  :kFOR => 19,
  :kBREAK => 20,
  :kNEXT => 21,
  :kREDO => 22,
  :kRETRY => 23,
  :kIN => 24,
  :kDO => 25,
  :kDO_COND => 26,
  :kDO_BLOCK => 27,
  :kDO_LAMBDA => 28,
  :kRETURN => 29,
  :kYIELD => 30,
  :kSUPER => 31,
  :kSELF => 32,
  :kNIL => 33,
  :kTRUE => 34,
  :kFALSE => 35,
  :kAND => 36,
  :kOR => 37,
  :kNOT => 38,
  :kIF_MOD => 39,
  :kUNLESS_MOD => 40,
  :kWHILE_MOD => 41,
  :kUNTIL_MOD => 42,
  :kRESCUE_MOD => 43,
  :kALIAS => 44,
  :kDEFINED => 45,
  :klBEGIN => 46,
  :klEND => 47,
  :k__LINE__ => 48,
  :k__FILE__ => 49,
  :k__ENCODING__ => 50,
  :tIDENTIFIER => 51,
  :tFID => 52,
  :tGVAR => 53,
  :tIVAR => 54,
  :tCONSTANT => 55,
  :tLABEL => 56,
  :tCVAR => 57,
  :tNTH_REF => 58,
  :tBACK_REF => 59,
  :tSTRING_CONTENT => 60,
  :tINTEGER => 61,
  :tFLOAT => 62,
  :tREGEXP_END => 63,
  :tUPLUS => 64,
  :tUMINUS => 65,
  :tUMINUS_NUM => 66,
  :tPOW => 67,
  :tCMP => 68,
  :tEQ => 69,
  :tEQQ => 70,
  :tNEQ => 71,
  :tGEQ => 72,
  :tLEQ => 73,
  :tANDOP => 74,
  :tOROP => 75,
  :tMATCH => 76,
  :tNMATCH => 77,
  :tJSDOT => 78,
  :tDOT => 79,
  :tDOT2 => 80,
  :tDOT3 => 81,
  :tAREF => 82,
  :tASET => 83,
  :tLSHFT => 84,
  :tRSHFT => 85,
  :tCOLON2 => 86,
  :tCOLON3 => 87,
  :tOP_ASGN => 88,
  :tASSOC => 89,
  :tLPAREN => 90,
  :tLPAREN2 => 91,
  :tRPAREN => 92,
  :tLPAREN_ARG => 93,
  :ARRAY_BEG => 94,
  :tRBRACK => 95,
  :tLBRACE => 96,
  :tLBRACE_ARG => 97,
  :tSTAR => 98,
  :tSTAR2 => 99,
  :tAMPER => 100,
  :tAMPER2 => 101,
  :tTILDE => 102,
  :tPERCENT => 103,
  :tDIVIDE => 104,
  :tPLUS => 105,
  :tMINUS => 106,
  :tLT => 107,
  :tGT => 108,
  :tPIPE => 109,
  :tBANG => 110,
  :tCARET => 111,
  :tLCURLY => 112,
  :tRCURLY => 113,
  :tBACK_REF2 => 114,
  :tSYMBEG => 115,
  :tSTRING_BEG => 116,
  :tXSTRING_BEG => 117,
  :tREGEXP_BEG => 118,
  :tWORDS_BEG => 119,
  :tAWORDS_BEG => 120,
  :tSTRING_DBEG => 121,
  :tSTRING_DVAR => 122,
  :tSTRING_END => 123,
  :tSTRING => 124,
  :tSYMBOL => 125,
  :tNL => 126,
  :tEH => 127,
  :tCOLON => 128,
  :tCOMMA => 129,
  :tSPACE => 130,
  :tSEMI => 131,
  :tLAMBDA => 132,
  :tLAMBEG => 133,
  :tLBRACK2 => 134,
  :tLBRACK => 135,
  :tDSTAR => 136,
  :tEQL => 137,
  :tLOWEST => 138,
  "-@NUM" => 139,
  "+@NUM" => 140 }

racc_nt_base = 141

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "kCLASS",
  "kMODULE",
  "kDEF",
  "kUNDEF",
  "kBEGIN",
  "kRESCUE",
  "kENSURE",
  "kEND",
  "kIF",
  "kUNLESS",
  "kTHEN",
  "kELSIF",
  "kELSE",
  "kCASE",
  "kWHEN",
  "kWHILE",
  "kUNTIL",
  "kFOR",
  "kBREAK",
  "kNEXT",
  "kREDO",
  "kRETRY",
  "kIN",
  "kDO",
  "kDO_COND",
  "kDO_BLOCK",
  "kDO_LAMBDA",
  "kRETURN",
  "kYIELD",
  "kSUPER",
  "kSELF",
  "kNIL",
  "kTRUE",
  "kFALSE",
  "kAND",
  "kOR",
  "kNOT",
  "kIF_MOD",
  "kUNLESS_MOD",
  "kWHILE_MOD",
  "kUNTIL_MOD",
  "kRESCUE_MOD",
  "kALIAS",
  "kDEFINED",
  "klBEGIN",
  "klEND",
  "k__LINE__",
  "k__FILE__",
  "k__ENCODING__",
  "tIDENTIFIER",
  "tFID",
  "tGVAR",
  "tIVAR",
  "tCONSTANT",
  "tLABEL",
  "tCVAR",
  "tNTH_REF",
  "tBACK_REF",
  "tSTRING_CONTENT",
  "tINTEGER",
  "tFLOAT",
  "tREGEXP_END",
  "tUPLUS",
  "tUMINUS",
  "tUMINUS_NUM",
  "tPOW",
  "tCMP",
  "tEQ",
  "tEQQ",
  "tNEQ",
  "tGEQ",
  "tLEQ",
  "tANDOP",
  "tOROP",
  "tMATCH",
  "tNMATCH",
  "tJSDOT",
  "tDOT",
  "tDOT2",
  "tDOT3",
  "tAREF",
  "tASET",
  "tLSHFT",
  "tRSHFT",
  "tCOLON2",
  "tCOLON3",
  "tOP_ASGN",
  "tASSOC",
  "tLPAREN",
  "tLPAREN2",
  "tRPAREN",
  "tLPAREN_ARG",
  "ARRAY_BEG",
  "tRBRACK",
  "tLBRACE",
  "tLBRACE_ARG",
  "tSTAR",
  "tSTAR2",
  "tAMPER",
  "tAMPER2",
  "tTILDE",
  "tPERCENT",
  "tDIVIDE",
  "tPLUS",
  "tMINUS",
  "tLT",
  "tGT",
  "tPIPE",
  "tBANG",
  "tCARET",
  "tLCURLY",
  "tRCURLY",
  "tBACK_REF2",
  "tSYMBEG",
  "tSTRING_BEG",
  "tXSTRING_BEG",
  "tREGEXP_BEG",
  "tWORDS_BEG",
  "tAWORDS_BEG",
  "tSTRING_DBEG",
  "tSTRING_DVAR",
  "tSTRING_END",
  "tSTRING",
  "tSYMBOL",
  "tNL",
  "tEH",
  "tCOLON",
  "tCOMMA",
  "tSPACE",
  "tSEMI",
  "tLAMBDA",
  "tLAMBEG",
  "tLBRACK2",
  "tLBRACK",
  "tDSTAR",
  "tEQL",
  "tLOWEST",
  "\"-@NUM\"",
  "\"+@NUM\"",
  "$start",
  "program",
  "top_compstmt",
  "top_stmts",
  "opt_terms",
  "top_stmt",
  "terms",
  "stmt",
  "bodystmt",
  "compstmt",
  "opt_rescue",
  "opt_else",
  "opt_ensure",
  "stmts",
  "fitem",
  "undef_list",
  "expr_value",
  "lhs",
  "command_call",
  "mlhs",
  "var_lhs",
  "primary_value",
  "aref_args",
  "backref",
  "mrhs",
  "arg_value",
  "expr",
  "@1",
  "arg",
  "command",
  "block_command",
  "call_args",
  "block_call",
  "operation2",
  "command_args",
  "cmd_brace_block",
  "opt_block_var",
  "operation",
  "mlhs_basic",
  "mlhs_entry",
  "mlhs_head",
  "mlhs_item",
  "mlhs_node",
  "mlhs_post",
  "variable",
  "cname",
  "cpath",
  "fname",
  "op",
  "reswords",
  "symbol",
  "opt_nl",
  "primary",
  "none",
  "args",
  "trailer",
  "assocs",
  "paren_args",
  "opt_call_args",
  "rparen",
  "opt_paren_args",
  "opt_block_arg",
  "block_arg",
  "call_args2",
  "open_args",
  "@2",
  "literal",
  "strings",
  "xstring",
  "regexp",
  "words",
  "awords",
  "var_ref",
  "assoc_list",
  "brace_block",
  "method_call",
  "lambda",
  "then",
  "if_tail",
  "do",
  "case_body",
  "for_var",
  "superclass",
  "term",
  "f_arglist",
  "singleton",
  "dot_or_colon",
  "@3",
  "@4",
  "@5",
  "@6",
  "@7",
  "@8",
  "@9",
  "@10",
  "@11",
  "@12",
  "@13",
  "@14",
  "@15",
  "@16",
  "@17",
  "f_larglist",
  "lambda_body",
  "block_param",
  "f_block_optarg",
  "f_block_opt",
  "block_args_tail",
  "f_block_arg",
  "opt_block_args_tail",
  "f_arg",
  "f_rest_arg",
  "do_block",
  "@18",
  "operation3",
  "@19",
  "@20",
  "cases",
  "@21",
  "exc_list",
  "exc_var",
  "numeric",
  "dsym",
  "string",
  "string1",
  "string_contents",
  "xstring_contents",
  "word_list",
  "word",
  "string_content",
  "qword_list",
  "string_dvar",
  "@22",
  "@23",
  "sym",
  "f_args",
  "kwrest_mark",
  "f_kwrest",
  "f_label",
  "f_kw",
  "f_kwarg",
  "args_tail",
  "opt_f_block_arg",
  "opt_args_tail",
  "f_optarg",
  "f_norm_arg",
  "f_bad_arg",
  "f_arg_item",
  "f_margs",
  "f_marg",
  "f_marg_list",
  "f_opt",
  "restarg_mark",
  "blkarg_mark",
  "assoc" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

def _reduce_2(val, _values, result)
                      result = new_compstmt val[0]
                    
    result
end

def _reduce_3(val, _values, result)
                      result = new_block
                    
    result
end

def _reduce_4(val, _values, result)
                      result = new_block val[0]
                    
    result
end

def _reduce_5(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

# reduce 6 omitted

def _reduce_7(val, _values, result)
                      result = val[2]
                    
    result
end

def _reduce_8(val, _values, result)
                      result = new_body(val[0], val[1], val[2], val[3])
                    
    result
end

def _reduce_9(val, _values, result)
                      result = new_compstmt val[0]
                    
    result
end

def _reduce_10(val, _values, result)
                      result = new_block
                    
    result
end

def _reduce_11(val, _values, result)
                      result = new_block val[0]
                    
    result
end

def _reduce_12(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_13(val, _values, result)
                      lexer.lex_state = :expr_fname
                    
    result
end

def _reduce_14(val, _values, result)
                      result = new_alias(val[0], val[1], val[3])
                    
    result
end

def _reduce_15(val, _values, result)
                      result = s(:valias, value(val[1]).to_sym, value(val[2]).to_sym)
                    
    result
end

# reduce 16 omitted

def _reduce_17(val, _values, result)
                      result = s(:valias, value(val[1]).to_sym, value(val[2]).to_sym)
                    
    result
end

def _reduce_18(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_19(val, _values, result)
                      result = new_if(val[1], val[2], val[0], nil)
                    
    result
end

def _reduce_20(val, _values, result)
                      result = new_if(val[1], val[2], nil, val[0])
                    
    result
end

def _reduce_21(val, _values, result)
                      result = new_while(val[1], val[2], val[0])
                    
    result
end

def _reduce_22(val, _values, result)
                      result = new_until(val[1], val[2], val[0])
                    
    result
end

def _reduce_23(val, _values, result)
                      result = new_rescue_mod(val[1], val[0], val[2])
                    
    result
end

# reduce 24 omitted

def _reduce_25(val, _values, result)
                      result = new_assign(val[0], val[1], val[2])
                    
    result
end

def _reduce_26(val, _values, result)
                      result = s(:masgn, val[0], s(:to_ary, val[2]))
                    
    result
end

def _reduce_27(val, _values, result)
                      result = new_op_asgn val[1], val[0], val[2]
                    
    result
end

# reduce 28 omitted

def _reduce_29(val, _values, result)
                      result = s(:op_asgn2, val[0], op_to_setter(val[2]), value(val[3]).to_sym, val[4])
                    
    result
end

# reduce 30 omitted

# reduce 31 omitted

# reduce 32 omitted

def _reduce_33(val, _values, result)
                      result = new_assign val[0], val[1], s(:svalue, val[2])
                    
    result
end

def _reduce_34(val, _values, result)
                      result = s(:masgn, val[0], s(:to_ary, val[2]))
                    
    result
end

def _reduce_35(val, _values, result)
                      result = s(:masgn, val[0], val[2])
                    
    result
end

# reduce 36 omitted

# reduce 37 omitted

def _reduce_38(val, _values, result)
                      result = s(:and, val[0], val[2])
                    
    result
end

def _reduce_39(val, _values, result)
                      result = s(:or, val[0], val[2])
                    
    result
end

def _reduce_40(val, _values, result)
                      result = new_unary_call(['!', []], val[1])
                    
    result
end

def _reduce_41(val, _values, result)
                      result = new_unary_call(val[0], val[1])
                    
    result
end

# reduce 42 omitted

# reduce 43 omitted

# reduce 44 omitted

# reduce 45 omitted

def _reduce_46(val, _values, result)
                      result = new_return(val[0], val[1])
                    
    result
end

def _reduce_47(val, _values, result)
                      result = new_break(val[0], val[1])
                    
    result
end

def _reduce_48(val, _values, result)
                      result = new_next(val[0], val[1])
                    
    result
end

# reduce 49 omitted

# reduce 50 omitted

# reduce 51 omitted

# reduce 52 omitted

def _reduce_53(val, _values, result)
                      result = new_call(nil, val[0], val[1])
                    
    result
end

# reduce 54 omitted

def _reduce_55(val, _values, result)
                      result = new_call(val[0], val[2], val[3])
                    
    result
end

# reduce 56 omitted

def _reduce_57(val, _values, result)
                    result = new_call(val[0], val[2], val[3])
                  
    result
end

# reduce 58 omitted

def _reduce_59(val, _values, result)
                      result = new_super(val[0], val[1])
                    
    result
end

def _reduce_60(val, _values, result)
                      result = new_yield val[1]
                    
    result
end

def _reduce_61(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_62(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_63(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_64(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_65(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_66(val, _values, result)
                      result = val[0] << val[1]
                    
    result
end

def _reduce_67(val, _values, result)
                      result = val[0] << s(:splat, val[2])
                    
    result
end

# reduce 68 omitted

def _reduce_69(val, _values, result)
                      result = val[0] << s(:splat)
                    
    result
end

# reduce 70 omitted

def _reduce_71(val, _values, result)
                      result = s(:array, s(:splat, val[1]))
                    
    result
end

def _reduce_72(val, _values, result)
                      result = s(:array, s(:splat))
                    
    result
end

# reduce 73 omitted

def _reduce_74(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_75(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_76(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

def _reduce_77(val, _values, result)
                      result = val[0] << val[1]
                    
    result
end

# reduce 78 omitted

# reduce 79 omitted

def _reduce_80(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_81(val, _values, result)
                      args = val[2] ? val[2] : []
                      result = s(:attrasgn, val[0], :[]=, s(:arglist, *args))
                    
    result
end

def _reduce_82(val, _values, result)
                      result = new_call val[0], val[2], []
                    
    result
end

# reduce 83 omitted

# reduce 84 omitted

# reduce 85 omitted

# reduce 86 omitted

# reduce 87 omitted

def _reduce_88(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_89(val, _values, result)
                      result = new_attrasgn(val[0], :[]=, val[2])
                    
    result
end

def _reduce_90(val, _values, result)
                      result = new_attrasgn(val[0], op_to_setter(val[2]))
                    
    result
end

def _reduce_91(val, _values, result)
                      result = new_attrasgn(val[0], op_to_setter(val[2]))
                    
    result
end

def _reduce_92(val, _values, result)
                      result = new_attrasgn(val[0], op_to_setter(val[2]))
                    
    result
end

def _reduce_93(val, _values, result)
                      result = new_colon2(val[0], val[1], val[2])
                    
    result
end

def _reduce_94(val, _values, result)
                      result = new_colon3(val[0], val[1])
                    
    result
end

# reduce 95 omitted

# reduce 96 omitted

def _reduce_97(val, _values, result)
                      result = new_colon3(val[0], val[1])
                    
    result
end

def _reduce_98(val, _values, result)
                      result = new_const(val[0])
                    
    result
end

def _reduce_99(val, _values, result)
                      result = new_colon2(val[0], val[1], val[2])
                    
    result
end

# reduce 100 omitted

# reduce 101 omitted

# reduce 102 omitted

def _reduce_103(val, _values, result)
                      lexer.lex_state = :expr_end
                      result = val[0]
                    
    result
end

def _reduce_104(val, _values, result)
                      lexer.lex_state = :expr_end
                      result = val[0]
                    
    result
end

def _reduce_105(val, _values, result)
                      result = new_sym(val[0])
                    
    result
end

# reduce 106 omitted

def _reduce_107(val, _values, result)
                      result = s(:undef, val[0])
                    
    result
end

def _reduce_108(val, _values, result)
                      result = val[0] << val[2]
                    
    result
end

# reduce 109 omitted

# reduce 110 omitted

# reduce 111 omitted

# reduce 112 omitted

# reduce 113 omitted

# reduce 114 omitted

# reduce 115 omitted

# reduce 116 omitted

# reduce 117 omitted

# reduce 118 omitted

# reduce 119 omitted

# reduce 120 omitted

# reduce 121 omitted

# reduce 122 omitted

# reduce 123 omitted

# reduce 124 omitted

# reduce 125 omitted

# reduce 126 omitted

# reduce 127 omitted

# reduce 128 omitted

# reduce 129 omitted

# reduce 130 omitted

# reduce 131 omitted

# reduce 132 omitted

# reduce 133 omitted

# reduce 134 omitted

# reduce 135 omitted

# reduce 136 omitted

# reduce 137 omitted

# reduce 138 omitted

# reduce 139 omitted

# reduce 140 omitted

# reduce 141 omitted

# reduce 142 omitted

# reduce 143 omitted

# reduce 144 omitted

# reduce 145 omitted

# reduce 146 omitted

# reduce 147 omitted

# reduce 148 omitted

# reduce 149 omitted

# reduce 150 omitted

# reduce 151 omitted

# reduce 152 omitted

# reduce 153 omitted

# reduce 154 omitted

# reduce 155 omitted

# reduce 156 omitted

# reduce 157 omitted

# reduce 158 omitted

# reduce 159 omitted

# reduce 160 omitted

# reduce 161 omitted

# reduce 162 omitted

# reduce 163 omitted

# reduce 164 omitted

# reduce 165 omitted

# reduce 166 omitted

# reduce 167 omitted

# reduce 168 omitted

# reduce 169 omitted

# reduce 170 omitted

# reduce 171 omitted

# reduce 172 omitted

# reduce 173 omitted

# reduce 174 omitted

# reduce 175 omitted

# reduce 176 omitted

# reduce 177 omitted

# reduce 178 omitted

# reduce 179 omitted

# reduce 180 omitted

# reduce 181 omitted

# reduce 182 omitted

def _reduce_183(val, _values, result)
                      result = new_assign(val[0], val[1], val[2])
                    
    result
end

def _reduce_184(val, _values, result)
                      result = new_assign val[0], val[1], s(:rescue_mod, val[2], val[4])
                    
    result
end

def _reduce_185(val, _values, result)
                      result = new_op_asgn val[1], val[0], val[2]
                    
    result
end

def _reduce_186(val, _values, result)
                      result = new_op_asgn1(val[0], val[2], val[4], val[5])
                    
    result
end

def _reduce_187(val, _values, result)
                      result = s(:op_asgn2, val[0], op_to_setter(val[2]), value(val[3]).to_sym, val[4])
                    
    result
end

# reduce 188 omitted

# reduce 189 omitted

# reduce 190 omitted

# reduce 191 omitted

# reduce 192 omitted

def _reduce_193(val, _values, result)
                      result = new_irange(val[0], val[1], val[2])
                    
    result
end

def _reduce_194(val, _values, result)
                      result = new_erange(val[0], val[1], val[2])
                    
    result
end

def _reduce_195(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_196(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_197(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_198(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_199(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_200(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_201(val, _values, result)
                      result = new_call new_binary_call(new_int(val[1]), val[2], val[3]), [:"-@", []], []
                    
    result
end

def _reduce_202(val, _values, result)
                      result = new_call new_binary_call(new_float(val[1]), val[2], val[3]), [:"-@", []], []
                    
    result
end

def _reduce_203(val, _values, result)
                      result = new_call val[1], [:"+@", []], []
                      if [:int, :float].include? val[1].type
                        result = val[1]
                      end
                    
    result
end

def _reduce_204(val, _values, result)
                      result = new_call val[1], [:"-@", []], []
                      if val[1].type == :int
                        val[1][1] = -val[1][1]
                        result = val[1]
                      elsif val[1].type == :float
                        val[1][1] = -val[1][1].to_f
                        result = val[1]
                      end
                    
    result
end

def _reduce_205(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_206(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_207(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_208(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_209(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_210(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_211(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_212(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_213(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_214(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_215(val, _values, result)
                      result = new_unary_call(['!', []], new_binary_call(
                                 val[0], ['==', []], val[2]))
                    
    result
end

def _reduce_216(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_217(val, _values, result)
                      result = new_not(val[1], new_binary_call(
                                 val[0], ['=~', []], val[2]))
                    
    result
end

def _reduce_218(val, _values, result)
                      result = new_unary_call(val[0], val[1])
                    
    result
end

def _reduce_219(val, _values, result)
                      result = new_unary_call(val[0], val[1])
                    
    result
end

def _reduce_220(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_221(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_222(val, _values, result)
                      result = new_and(val[0], val[1], val[2])
                    
    result
end

def _reduce_223(val, _values, result)
                      result = new_or(val[0], val[1], val[2])
                    
    result
end

def _reduce_224(val, _values, result)
                      result = s(:defined, val[2])
                    
    result
end

def _reduce_225(val, _values, result)
                      result = new_if(val[1], val[0], val[2], val[4])
                    
    result
end

# reduce 226 omitted

# reduce 227 omitted

def _reduce_228(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_229(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_230(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_231(val, _values, result)
                      val[0] << s(:hash, *val[2])
                      result = val[0]
                    
    result
end

def _reduce_232(val, _values, result)
                      result = [s(:hash, *val[0])]
                    
    result
end

def _reduce_233(val, _values, result)
                      result = val[1]
                    
    result
end

# reduce 234 omitted

def _reduce_235(val, _values, result)
                      result = []
                    
    result
end

# reduce 236 omitted

def _reduce_237(val, _values, result)
                      result = []
                    
    result
end

# reduce 238 omitted

def _reduce_239(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_240(val, _values, result)
                      result = val[0]
                      result << new_hash(nil, val[2], nil)
                    
    result
end

def _reduce_241(val, _values, result)
                      result = [new_hash(nil, val[0], nil)]
                    
    result
end

def _reduce_242(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_243(val, _values, result)
                      result = val[0]
                      add_block_pass val[0], val[1]
                    
    result
end

def _reduce_244(val, _values, result)
                      result = [new_hash(nil, val[0], nil)]
                      add_block_pass result, val[1]
                    
    result
end

def _reduce_245(val, _values, result)
                      result = val[0]
                      result << new_hash(nil, val[2], nil)
                    
    result
end

def _reduce_246(val, _values, result)
                      result = []
                      add_block_pass result, val[0]
                    
    result
end

# reduce 247 omitted

# reduce 248 omitted

def _reduce_249(val, _values, result)
                      lexer.cmdarg_push 1
                    
    result
end

def _reduce_250(val, _values, result)
                      lexer.cmdarg_pop
                      result = val[1]
                    
    result
end

# reduce 251 omitted

def _reduce_252(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_253(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_254(val, _values, result)
                      result = new_block_pass(val[0], val[1])
                    
    result
end

def _reduce_255(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_256(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_257(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_258(val, _values, result)
                      result = [new_splat(val[0], val[1])]
                    
    result
end

def _reduce_259(val, _values, result)
                      result = val[0] << val[2]
                    
    result
end

def _reduce_260(val, _values, result)
                      result  = val[0] << new_splat(val[2], val[3])
                    
    result
end

def _reduce_261(val, _values, result)
                      val[0] << val[2]
                      result = s(:array, *val[0])
                    
    result
end

def _reduce_262(val, _values, result)
                      val[0] << s(:splat, val[3])
                      result = s(:array, *val[0])
                    
    result
end

def _reduce_263(val, _values, result)
                      result = s(:splat, val[1])
                    
    result
end

# reduce 264 omitted

# reduce 265 omitted

# reduce 266 omitted

# reduce 267 omitted

# reduce 268 omitted

# reduce 269 omitted

# reduce 270 omitted

# reduce 271 omitted

# reduce 272 omitted

def _reduce_273(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_274(val, _values, result)
                      result = s(:begin, val[2])
                    
    result
end

def _reduce_275(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_276(val, _values, result)
                      result = new_paren(val[0], val[1], val[2])
                    
    result
end

def _reduce_277(val, _values, result)
                      result = new_colon2(val[0], val[1], val[2])
                    
    result
end

def _reduce_278(val, _values, result)
                      result = new_colon3(val[0], val[1])
                    
    result
end

def _reduce_279(val, _values, result)
                      result = new_call val[0], [:[], []], val[2]
                    
    result
end

def _reduce_280(val, _values, result)
                      result = new_array(val[0], val[1], val[2])
                    
    result
end

def _reduce_281(val, _values, result)
                      result = new_hash(val[0], val[1], val[2])
                    
    result
end

def _reduce_282(val, _values, result)
                      result = new_return(val[0])
                    
    result
end

def _reduce_283(val, _values, result)
                      result = new_yield val[2]
                    
    result
end

def _reduce_284(val, _values, result)
                      result = s(:yield)
                    
    result
end

def _reduce_285(val, _values, result)
                      result = s(:yield)
                    
    result
end

def _reduce_286(val, _values, result)
                      result = s(:defined, val[3])
                    
    result
end

def _reduce_287(val, _values, result)
                      result = new_unary_call(['!', []], val[2])
                    
    result
end

def _reduce_288(val, _values, result)
                      result = new_unary_call(['!', []], new_nil(val[0]))
                    
    result
end

def _reduce_289(val, _values, result)
                      result = new_call(nil, val[0], [])
                      result << val[1]
                    
    result
end

# reduce 290 omitted

def _reduce_291(val, _values, result)
                      val[0] << val[1]
                      result = val[0]
                    
    result
end

def _reduce_292(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_293(val, _values, result)
                      result = new_if(val[0], val[1], val[3], val[4])
                    
    result
end

def _reduce_294(val, _values, result)
                      result = new_if(val[0], val[1], val[4], val[3])
                    
    result
end

def _reduce_295(val, _values, result)
                      lexer.cond_push 1
                      result = lexer.line
                    
    result
end

def _reduce_296(val, _values, result)
                      lexer.cond_pop
                    
    result
end

def _reduce_297(val, _values, result)
                      result = s(:while, val[2], val[5])
                    
    result
end

def _reduce_298(val, _values, result)
                      lexer.cond_push 1
                      result = lexer.line
                    
    result
end

def _reduce_299(val, _values, result)
                      lexer.cond_pop
                    
    result
end

def _reduce_300(val, _values, result)
                      result = s(:until, val[2], val[5])
                    
    result
end

def _reduce_301(val, _values, result)
                      result = s(:case, val[1], *val[3])
                    
    result
end

def _reduce_302(val, _values, result)
                      result = s(:case, nil, *val[2])
                    
    result
end

def _reduce_303(val, _values, result)
                      result = s(:case, nil, val[3])
                    
    result
end

def _reduce_304(val, _values, result)
                      lexer.cond_push 1
                      result = lexer.line
                    
    result
end

def _reduce_305(val, _values, result)
                      lexer.cond_pop
                    
    result
end

def _reduce_306(val, _values, result)
                      result = s(:for, val[4], val[1], val[7])
                    
    result
end

def _reduce_307(val, _values, result)
                      # ...
                    
    result
end

def _reduce_308(val, _values, result)
                      result = new_class val[0], val[1], val[2], val[4], val[5]
                    
    result
end

def _reduce_309(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_310(val, _values, result)
                      # ...
                    
    result
end

def _reduce_311(val, _values, result)
                      result = new_sclass(val[0], val[3], val[6], val[7])
                    
    result
end

def _reduce_312(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_313(val, _values, result)
                      # ...
                    
    result
end

def _reduce_314(val, _values, result)
                      result = new_module(val[0], val[2], val[4], val[5])
                    
    result
end

def _reduce_315(val, _values, result)
                      push_scope
                      lexer.lex_state = :expr_endfn
                    
    result
end

def _reduce_316(val, _values, result)
                      result = new_def(val[0], nil, val[1], val[3], val[4], val[5])
                      pop_scope
                    
    result
end

def _reduce_317(val, _values, result)
                       lexer.lex_state = :expr_fname
                    
    result
end

def _reduce_318(val, _values, result)
                      push_scope
                      lexer.lex_state = :expr_endfn
                    
    result
end

def _reduce_319(val, _values, result)
                      result = new_def(val[0], val[1], val[4], val[6], val[7], val[8])
                      pop_scope
                    
    result
end

def _reduce_320(val, _values, result)
                      result = new_break(val[0])
                    
    result
end

def _reduce_321(val, _values, result)
                      result = s(:next)
                    
    result
end

def _reduce_322(val, _values, result)
                      result = s(:redo)
                    
    result
end

# reduce 323 omitted

# reduce 324 omitted

# reduce 325 omitted

# reduce 326 omitted

# reduce 327 omitted

# reduce 328 omitted

# reduce 329 omitted

# reduce 330 omitted

# reduce 331 omitted

def _reduce_332(val, _values, result)
                      result = new_call nil, [:lambda, []], []
                      result << new_iter(val[0], val[1])
                    
    result
end

def _reduce_333(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_334(val, _values, result)
                      result = nil
                    
    result
end

# reduce 335 omitted

# reduce 336 omitted

def _reduce_337(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_338(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_339(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_340(val, _values, result)
                      result = new_if(val[0], val[1], val[3], val[4])
                    
    result
end

# reduce 341 omitted

def _reduce_342(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_343(val, _values, result)
                      result = s(:block, val[0])
                    
    result
end

def _reduce_344(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_345(val, _values, result)
                      result = new_assign(new_assignable(new_ident(
                                  val[0])), val[1], val[2])
                    
    result
end

# reduce 346 omitted

def _reduce_347(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_348(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_349(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_350(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_351(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_352(val, _values, result)
                      nil
                    
    result
end

def _reduce_353(val, _values, result)
                      result = new_block_args(val[0], val[2], val[4], val[5])
                    
    result
end

def _reduce_354(val, _values, result)
                      result = new_block_args(val[0], val[2], nil, val[3])
                    
    result
end

def _reduce_355(val, _values, result)
                      result = new_block_args(val[0], nil, val[2], val[3])
                    
    result
end

def _reduce_356(val, _values, result)
                      result = new_block_args(val[0], nil, nil, nil)
                    
    result
end

def _reduce_357(val, _values, result)
                      result = new_block_args(val[0], nil, nil, val[1])
                    
    result
end

def _reduce_358(val, _values, result)
                      result = new_block_args(nil, val[0], val[2], val[3])
                    
    result
end

def _reduce_359(val, _values, result)
                      result = new_block_args(nil, val[0], nil, val[1])
                    
    result
end

def _reduce_360(val, _values, result)
                      result = new_block_args(nil, nil, val[0], val[1])
                    
    result
end

def _reduce_361(val, _values, result)
                      result = new_block_args(nil, nil, nil, val[0])
                    
    result
end

def _reduce_362(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_363(val, _values, result)
                      result = new_iter val[2], val[3]
                      pop_scope
                    
    result
end

def _reduce_364(val, _values, result)
                      val[0] << val[1]
                      result = val[0]
                    
    result
end

# reduce 365 omitted

# reduce 366 omitted

def _reduce_367(val, _values, result)
                      result = new_call(nil, val[0], val[1])
                    
    result
end

def _reduce_368(val, _values, result)
                      result = new_call(val[0], val[2], val[3])
                    
    result
end

def _reduce_369(val, _values, result)
                      result = new_js_call(val[0], val[2], val[3])
                    
    result
end

def _reduce_370(val, _values, result)
                      result = new_call(val[0], [:call, []], val[2])
                    
    result
end

def _reduce_371(val, _values, result)
                      result = new_call(val[0], val[2], val[3])
                    
    result
end

def _reduce_372(val, _values, result)
                      result = new_call(val[0], val[2])
                    
    result
end

def _reduce_373(val, _values, result)
                      result = new_super(val[0], val[1])
                    
    result
end

def _reduce_374(val, _values, result)
                      result = new_super(val[0], nil)
                    
    result
end

def _reduce_375(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_376(val, _values, result)
                      result = new_iter val[2], val[3]
                      pop_scope
                    
    result
end

def _reduce_377(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_378(val, _values, result)
                      result = new_iter val[2], val[3]
                      pop_scope
                    
    result
end

def _reduce_379(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_380(val, _values, result)
                      part = s(:when, s(:array, *val[2]), val[4])
                      result = [part]
                      result.push(*val[5]) if val[5]
                    
    result
end

def _reduce_381(val, _values, result)
                      result = [val[0]]
                    
    result
end

# reduce 382 omitted

def _reduce_383(val, _values, result)
                      exc = val[1] || s(:array)
                      exc << new_assign(val[2], val[2], s(:gvar, '$!'.intern)) if val[2]
                      result = [s(:resbody, exc, val[4])]
                      result.push val[5].first if val[5]
                    
    result
end

def _reduce_384(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_385(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

# reduce 386 omitted

# reduce 387 omitted

def _reduce_388(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_389(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_390(val, _values, result)
                      result = val[1].nil? ? s(:nil) : val[1]
                    
    result
end

# reduce 391 omitted

# reduce 392 omitted

# reduce 393 omitted

# reduce 394 omitted

def _reduce_395(val, _values, result)
                      result = new_str val[0]
                    
    result
end

# reduce 396 omitted

def _reduce_397(val, _values, result)
                    result = str_append val[0], val[1]
                  
    result
end

def _reduce_398(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_399(val, _values, result)
                      result = s(:str, value(val[0]))
                    
    result
end

def _reduce_400(val, _values, result)
                      result = new_xstr(val[0], val[1], val[2])
                    
    result
end

def _reduce_401(val, _values, result)
                      result = new_regexp val[1], val[2]
                    
    result
end

def _reduce_402(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_403(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_404(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_405(val, _values, result)
                      part = val[1]
                      part = s(:dstr, "", val[1]) if part.type == :evstr
                      result = val[0] << part
                    
    result
end

def _reduce_406(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_407(val, _values, result)
                      result = val[0].concat([val[1]])
                    
    result
end

def _reduce_408(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_409(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_410(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_411(val, _values, result)
                      result = val[0] << s(:str, value(val[1]))
                    
    result
end

def _reduce_412(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_413(val, _values, result)
                      result = str_append val[0], val[1]
                    
    result
end

def _reduce_414(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_415(val, _values, result)
                      result = str_append val[0], val[1]
                    
    result
end

def _reduce_416(val, _values, result)
                      result = new_str_content(val[0])
                    
    result
end

def _reduce_417(val, _values, result)
                      result = lexer.strterm
                      lexer.strterm = nil
                    
    result
end

def _reduce_418(val, _values, result)
                      lexer.strterm = val[1]
                      result = new_evstr(val[2])
                    
    result
end

def _reduce_419(val, _values, result)
                      lexer.cond_push 0
                      lexer.cmdarg_push 0
                      result = lexer.strterm
                      lexer.strterm = nil
                      lexer.lex_state = :expr_beg
                    
    result
end

def _reduce_420(val, _values, result)
                      lexer.strterm = val[1]
                      lexer.cond_lexpop
                      lexer.cmdarg_lexpop
                      result = new_evstr(val[2])
                    
    result
end

def _reduce_421(val, _values, result)
                      result = new_gvar(val[0])
                    
    result
end

def _reduce_422(val, _values, result)
                      result = new_ivar(val[0])
                    
    result
end

def _reduce_423(val, _values, result)
                      result = new_cvar(val[0])
                    
    result
end

# reduce 424 omitted

def _reduce_425(val, _values, result)
                      result = new_sym(val[1])
                      lexer.lex_state = :expr_end
                    
    result
end

def _reduce_426(val, _values, result)
                      result = new_sym(val[0])
                    
    result
end

# reduce 427 omitted

# reduce 428 omitted

# reduce 429 omitted

# reduce 430 omitted

def _reduce_431(val, _values, result)
                      result = new_dsym val[1]
                    
    result
end

def _reduce_432(val, _values, result)
                      result = new_int(val[0])
                    
    result
end

def _reduce_433(val, _values, result)
                      result = new_float(val[0])
                    
    result
end

def _reduce_434(val, _values, result)
                    result = negate_num(new_int(val[1]))
                  
    result
end

def _reduce_435(val, _values, result)
                    result = negate_num(new_float(val[1]))
                  
    result
end

def _reduce_436(val, _values, result)
                    result = new_int(val[1])
                  
    result
end

def _reduce_437(val, _values, result)
                    result = new_float(val[1])
                  
    result
end

def _reduce_438(val, _values, result)
                      result = new_ident(val[0])
                    
    result
end

def _reduce_439(val, _values, result)
                      result = new_ivar(val[0])
                    
    result
end

def _reduce_440(val, _values, result)
                      result = new_gvar(val[0])
                    
    result
end

def _reduce_441(val, _values, result)
                      result = new_const(val[0])
                    
    result
end

def _reduce_442(val, _values, result)
                      result = new_cvar(val[0])
                    
    result
end

def _reduce_443(val, _values, result)
                      result = new_nil(val[0])
                    
    result
end

def _reduce_444(val, _values, result)
                      result = new_self(val[0])
                    
    result
end

def _reduce_445(val, _values, result)
                      result = new_true(val[0])
                    
    result
end

def _reduce_446(val, _values, result)
                      result = new_false(val[0])
                    
    result
end

def _reduce_447(val, _values, result)
                      result = new___FILE__(val[0])
                    
    result
end

def _reduce_448(val, _values, result)
                      result = new___LINE__(val[0])
                    
    result
end

def _reduce_449(val, _values, result)
                      result = new_var_ref(val[0])
                    
    result
end

def _reduce_450(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_451(val, _values, result)
                      result = s(:nth_ref, value(val[0]))
                    
    result
end

# reduce 452 omitted

def _reduce_453(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_454(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_455(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_456(val, _values, result)
                      result = val[1]
                      lexer.lex_state = :expr_beg
                    
    result
end

def _reduce_457(val, _values, result)
                      result = val[0]
                      lexer.lex_state = :expr_beg
                    
    result
end

# reduce 458 omitted

# reduce 459 omitted

def _reduce_460(val, _values, result)
                      result = new_kwrestarg(val[1])
                    
    result
end

def _reduce_461(val, _values, result)
                      result = new_kwrestarg()
                    
    result
end

def _reduce_462(val, _values, result)
                      result = new_sym(val[0])
                    
    result
end

def _reduce_463(val, _values, result)
                      result = new_kwoptarg(val[0], val[1])
                    
    result
end

def _reduce_464(val, _values, result)
                      result = new_kwarg(val[0])
                    
    result
end

def _reduce_465(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_466(val, _values, result)
                      result = val[0]
                      result << val[2]
                    
    result
end

def _reduce_467(val, _values, result)
                      result = new_args_tail(val[0], val[2], val[3])
                    
    result
end

def _reduce_468(val, _values, result)
                      result = new_args_tail(val[0], nil, val[1])
                    
    result
end

def _reduce_469(val, _values, result)
                      result = new_args_tail(nil, val[0], val[1])
                    
    result
end

def _reduce_470(val, _values, result)
                      result = new_args_tail(nil, nil, val[0])
                    
    result
end

def _reduce_471(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_472(val, _values, result)
                      result = new_args_tail(nil, nil, nil)
                    
    result
end

def _reduce_473(val, _values, result)
                      result = new_args(val[0], val[2], val[4], val[5])
                    
    result
end

def _reduce_474(val, _values, result)
                      result = new_args(val[0], val[2], nil, val[3])
                    
    result
end

def _reduce_475(val, _values, result)
                      result = new_args(val[0], nil, val[2], val[3])
                    
    result
end

def _reduce_476(val, _values, result)
                      result = new_args(val[0], nil, nil, val[1])
                    
    result
end

def _reduce_477(val, _values, result)
                      result = new_args(nil, val[0], val[2], val[3])
                    
    result
end

def _reduce_478(val, _values, result)
                      result = new_args(nil, val[0], nil, val[1])
                    
    result
end

def _reduce_479(val, _values, result)
                      result = new_args(nil, nil, val[0], val[1])
                    
    result
end

def _reduce_480(val, _values, result)
                      result = new_args(nil, nil, nil, val[0])
                    
    result
end

def _reduce_481(val, _values, result)
                      result = new_args(nil, nil, nil, nil)
                    
    result
end

# reduce 482 omitted

def _reduce_483(val, _values, result)
                      result = value(val[0]).to_sym
                      scope.add_local result
                    
    result
end

def _reduce_484(val, _values, result)
                      raise 'formal argument cannot be a constant'
                    
    result
end

def _reduce_485(val, _values, result)
                      raise 'formal argument cannot be an instance variable'
                    
    result
end

def _reduce_486(val, _values, result)
                      raise 'formal argument cannot be a class variable'
                    
    result
end

def _reduce_487(val, _values, result)
                      raise 'formal argument cannot be a global variable'
                    
    result
end

def _reduce_488(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_489(val, _values, result)
                      result = val[1]
                    
    result
end

# reduce 490 omitted

# reduce 491 omitted

def _reduce_492(val, _values, result)
                      result = s(:lasgn, val[0])
                    
    result
end

# reduce 493 omitted

def _reduce_494(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

def _reduce_495(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

# reduce 496 omitted

# reduce 497 omitted

# reduce 498 omitted

# reduce 499 omitted

# reduce 500 omitted

def _reduce_501(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_502(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_503(val, _values, result)
                      result = new_assign(new_assignable(new_ident(val[0])), val[1], val[2])
                    
    result
end

def _reduce_504(val, _values, result)
                      result = s(:block, val[0])
                    
    result
end

def _reduce_505(val, _values, result)
                      result = val[0]
                      val[0] << val[2]
                    
    result
end

# reduce 506 omitted

# reduce 507 omitted

def _reduce_508(val, _values, result)
                      result = "*#{value(val[1])}".to_sym
                    
    result
end

def _reduce_509(val, _values, result)
                      result = :"*"
                    
    result
end

# reduce 510 omitted

# reduce 511 omitted

def _reduce_512(val, _values, result)
                      result = "&#{value(val[1])}".to_sym
                    
    result
end

def _reduce_513(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_514(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_515(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_516(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_517(val, _values, result)
                      result = []
                    
    result
end

def _reduce_518(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_519(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_520(val, _values, result)
                      result = val[0].push(*val[2])
                    
    result
end

def _reduce_521(val, _values, result)
                      result = [val[0], val[2]]
                    
    result
end

def _reduce_522(val, _values, result)
                      result = [new_sym(val[0]), val[1]]
                    
    result
end

# reduce 523 omitted

# reduce 524 omitted

# reduce 525 omitted

# reduce 526 omitted

# reduce 527 omitted

# reduce 528 omitted

# reduce 529 omitted

# reduce 530 omitted

# reduce 531 omitted

# reduce 532 omitted

# reduce 533 omitted

# reduce 534 omitted

# reduce 535 omitted

# reduce 536 omitted

# reduce 537 omitted

# reduce 538 omitted

# reduce 539 omitted

# reduce 540 omitted

# reduce 541 omitted

# reduce 542 omitted

# reduce 543 omitted

# reduce 544 omitted

# reduce 545 omitted

def _reduce_546(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module Opal
