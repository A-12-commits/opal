#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.10
# from Racc grammer file "".
#

require 'racc/parser.rb'
module Opal
  class Parser < Racc::Parser


##### State transition tables begin ###

clist = [
'63,64,65,8,51,555,579,694,57,58,201,202,541,61,591,59,60,62,23,24,66',
'67,621,-502,268,621,22,28,27,89,88,90,91,579,709,17,584,661,201,202',
'509,7,41,6,9,93,92,83,50,85,84,86,87,94,95,620,81,82,620,38,39,37,268',
'-64,73,763,581,580,586,201,202,260,74,-436,-92,-90,590,768,261,562,-436',
'36,555,-91,30,-502,263,52,-94,555,340,339,32,581,580,555,40,100,742',
'741,-75,555,99,100,18,693,-502,267,99,79,73,75,76,77,78,100,-82,554',
'74,80,99,-440,63,64,65,304,51,56,-440,268,57,58,-436,53,54,61,708,59',
'60,62,254,255,66,67,621,267,-92,-90,253,287,291,89,88,90,91,100,304',
'215,-504,-83,99,-84,201,202,41,744,432,93,92,83,50,85,84,86,87,94,95',
'620,81,82,-82,38,39,37,-92,-90,-92,-90,694,-92,-90,263,100,-91,554,-91',
'694,99,-91,100,-445,554,848,206,99,100,210,554,477,52,99,100,267,554',
'-95,765,99,-82,40,201,202,579,-504,-83,-82,-84,214,522,621,263,524,79',
'73,75,76,77,78,-267,-524,579,74,80,201,202,-267,-524,-524,-524,-88,56',
'-524,-524,-524,100,-524,53,54,272,99,574,-83,620,-84,-524,-524,-524',
'575,-83,-274,-84,297,298,617,-524,-524,-274,-524,-524,-524,-524,-524',
'581,580,561,100,562,693,304,579,99,725,579,100,100,693,263,-267,99,99',
'581,580,577,-524,-524,-524,-524,-524,-524,-524,-524,-524,-524,-524,-524',
'-524,-524,263,512,-524,-524,-524,825,477,-524,513,263,-524,-274,223',
'-524,200,-524,223,-524,753,-524,768,-524,-524,-524,-524,-524,-524,-524',
'470,-524,-524,-524,581,580,592,581,580,582,100,522,477,893,524,99,-524',
'-524,-524,-524,894,-524,-508,505,506,-89,-444,-87,-524,-508,-508,-508',
'430,-444,-95,-508,-508,-433,-508,774,100,198,705,-443,-433,99,705,-508',
'199,777,-443,100,428,703,787,768,99,-508,-508,429,-508,-508,-508,-508',
'-508,100,602,-436,-445,-273,99,638,892,-275,-436,-267,-273,501,639,775',
'-275,-505,-267,538,502,-444,-508,-508,-508,-508,-508,-508,-508,-508',
'-508,-508,-508,-508,-508,-508,197,704,-508,-508,-508,704,607,-84,-274',
'-80,-508,430,541,-438,-92,-274,-88,-508,304,-508,-438,-508,-508,-508',
'-508,-508,-508,-508,-273,-508,-508,-508,-275,638,-267,-441,500,201,202',
'-442,639,-274,-441,-439,-508,-508,-442,-83,-274,-508,-439,340,339,510',
'-91,-273,-508,63,64,65,8,51,-273,-273,-273,57,58,-274,-273,-273,61,-273',
'59,60,62,23,24,66,67,522,304,778,526,22,28,27,89,88,90,91,-273,-273',
'17,-273,-273,-273,-273,-273,7,41,-274,9,93,92,83,50,85,84,86,87,94,95',
'522,81,82,524,38,39,37,-273,-273,-273,-273,-273,-273,-273,-273,-273',
'-273,-273,-273,-273,-273,531,532,-273,-273,-273,36,610,-444,30,522,-273',
'52,521,779,-444,541,32,-273,782,-273,40,-273,-273,-273,-273,-273,-273',
'-273,18,-273,511,-273,468,79,73,75,76,77,78,-321,768,-273,74,80,-273',
'-273,-321,-85,-273,-273,791,56,792,-505,-93,-275,-273,53,54,-506,-506',
'-506,-275,-506,468,395,-444,-506,-506,397,396,465,-506,-254,-506,-506',
'-506,-506,-506,-506,-506,787,768,727,223,-506,-506,-506,-506,-506,-506',
'-506,817,818,-506,819,94,95,-321,597,-273,-506,304,211,-506,-506,-506',
'-506,-506,-506,-506,-506,-506,-506,-275,-506,-506,701,-506,-506,-506',
'223,227,232,233,234,229,231,239,240,235,236,434,216,217,-273,433,237',
'238,525,-506,697,-273,-506,-506,562,-506,-505,807,509,809,-506,220,-506',
'226,-506,222,221,218,219,230,228,224,-506,225,812,813,431,-506,-506',
'-506,-506,-506,-506,815,528,470,-506,-506,689,241,-255,-226,601,686',
'-506,-506,63,64,65,-86,51,-506,-506,-273,57,58,-94,684,-63,61,535,59',
'60,62,254,255,66,67,674,538,539,398,253,28,27,89,88,90,91,541,550,215',
'669,-82,826,827,597,828,41,862,-90,93,92,83,50,85,84,86,87,94,95,263',
'81,82,263,38,39,37,223,227,232,233,234,229,231,239,240,235,236,668,216',
'217,242,862,237,238,385,206,831,832,210,661,667,52,337,336,340,339,252',
'220,731,226,40,222,221,218,219,230,228,224,214,225,834,376,-253,79,73',
'75,76,77,78,838,551,494,74,80,676,241,337,336,340,339,257,56,63,64,65',
'8,51,53,54,-81,57,58,759,843,845,61,-89,59,60,62,23,24,66,67,373,661',
'352,515,22,28,27,89,88,90,91,387,-504,17,851,337,336,340,339,7,41,676',
'9,93,92,83,50,85,84,86,87,94,95,653,81,82,563,38,39,37,223,227,232,233',
'234,229,231,239,240,235,236,855,216,217,856,304,237,238,651,36,-75,758',
'30,304,866,52,337,336,340,339,32,220,-256,226,40,222,221,218,219,230',
'228,224,18,225,650,470,867,79,73,75,76,77,78,869,296,648,74,80,295,241',
'63,64,65,8,51,56,-505,503,57,58,242,53,54,61,879,59,60,62,23,24,66,67',
'880,242,640,883,22,28,27,89,88,90,91,495,543,17,332,330,329,331,885',
'7,41,886,9,93,92,83,50,85,84,86,87,94,95,223,81,82,812,38,39,37,223',
'227,232,233,234,229,231,239,240,235,236,812,216,217,813,304,237,238',
'635,36,223,223,30,223,220,52,895,223,222,221,32,220,196,226,40,222,221',
'218,219,230,228,224,18,225,496,195,901,79,73,75,76,77,78,585,194,667',
'74,80,193,241,-507,-507,-507,223,-507,56,263,589,-507,-507,600,53,54',
'-507,107,-507,-507,-507,-507,-507,-507,-507,911,812,913,914,-507,-507',
'-507,-507,-507,-507,-507,-253,220,-507,599,96,222,221,218,219,-507,593',
'752,-507,-507,-507,-507,-507,-507,-507,-507,-507,-507,223,-507,-507',
'596,-507,-507,-507,223,227,232,233,234,229,231,239,240,235,236,,216',
'217,,,237,238,,-507,,,-507,-507,220,-507,,,222,221,-507,220,-507,226',
'-507,222,221,218,219,230,228,224,-507,225,,,,-507,-507,-507,-507,-507',
'-507,,,,-507,-507,,241,,-226,,,-507,-507,63,64,65,8,51,-507,-507,,57',
'58,,,,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,543,17,332',
'330,329,331,,7,41,,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37',
'223,227,232,233,234,229,231,239,240,235,236,,216,217,,,237,238,,36,',
',30,,,52,,,,,32,220,,226,40,222,221,218,219,230,228,224,18,225,,,,79',
'73,75,76,77,78,,,,74,80,,241,63,64,65,223,51,56,,,57,58,,53,54,61,,59',
'60,62,254,255,66,67,,,,,253,287,291,89,88,90,91,,220,215,,,222,221,218',
'219,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,223,227,232',
'233,234,229,231,239,240,235,236,,216,217,,,237,238,,206,,,210,,,52,',
',,,626,220,250,226,40,222,221,218,219,230,228,224,214,225,,,,79,73,75',
'76,77,78,,,,74,80,,241,63,64,65,8,51,56,,,57,58,,53,54,61,,59,60,62',
'23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,102,103,104,105,106,7,41,',
'9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,223,227,232,233,234',
'229,231,239,240,235,236,,216,217,,,237,238,,36,,,30,,,52,,,,,32,220',
',226,40,222,221,218,219,230,228,224,18,225,,,,79,73,75,76,77,78,,,,74',
'80,,241,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,',
'22,28,27,89,88,90,91,,,17,102,103,104,105,106,,41,,,93,92,83,50,85,84',
'86,87,94,95,,81,82,,38,39,37,223,227,232,233,234,229,231,239,240,235',
'236,,216,217,,,237,238,,206,,,210,211,,52,102,103,104,105,106,220,,226',
'40,222,221,218,219,230,228,224,18,225,,,,79,73,75,76,77,78,,,,74,80',
',241,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22',
'28,27,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81',
'82,,38,39,37,223,227,232,233,234,229,231,239,240,235,236,,216,217,,',
'237,238,,206,,,210,,,52,,,,,,220,,226,40,222,221,218,219,230,228,224',
'214,225,,,,79,73,75,76,77,78,,,,74,80,,241,63,64,65,8,51,56,,,57,58',
',53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,7',
'41,,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,223,227,232,233',
'234,229,231,239,240,235,236,,216,217,,,237,238,,36,,,30,,,52,,,,,32',
'220,,226,40,222,221,218,219,230,228,224,18,225,,,,79,73,75,76,77,78',
',,,74,80,,241,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66',
'67,,,,,253,287,291,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86',
'87,94,95,,81,82,,38,39,37,223,227,232,233,234,229,231,239,240,235,236',
',216,217,,,237,238,,206,,,210,,,52,,,,,626,220,,226,40,222,221,218,219',
'230,228,224,214,225,,,,79,73,75,76,77,78,,,,74,80,,241,63,64,65,,51',
'56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253,28,27,89,88,90',
'91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,223',
'227,232,233,234,229,231,239,240,235,236,,216,217,,,237,238,,206,,,210',
',543,52,332,330,329,331,252,220,250,226,40,222,221,218,219,230,228,224',
'214,225,,,,79,73,75,76,77,78,,,,74,80,,241,618,546,,,257,56,63,64,65',
'549,51,53,54,,57,58,,,,61,,59,60,62,254,255,66,67,,,,,253,28,27,89,88',
'90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37',
'223,227,232,233,234,229,231,239,240,235,236,,216,217,,,237,238,,206',
',,210,,543,52,332,330,329,331,252,220,250,226,40,222,221,218,219,230',
'228,224,214,225,,,,79,73,75,76,77,78,,,,74,80,,241,,546,,,257,56,63',
'64,65,549,51,53,54,,57,58,,,,61,,59,60,62,254,255,66,67,,,,,253,28,27',
'89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38',
'39,37,223,227,232,233,234,229,231,239,240,235,236,,216,217,,,237,238',
',206,,,210,,543,52,332,330,329,331,252,220,250,226,40,222,221,218,219',
'230,228,224,214,225,,,,79,73,75,76,77,78,,,,74,80,,241,,546,,,257,56',
'63,64,65,784,51,53,54,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,22,28,27',
'89,88,90,91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38',
'39,37,223,227,232,233,234,229,231,239,240,235,236,,216,217,,,237,238',
',206,,,210,,,52,,,,,,220,,226,40,222,221,218,219,230,228,224,18,225',
',,,79,73,75,76,77,78,,,,74,80,,241,63,64,65,,51,56,,,57,58,,53,54,61',
',59,60,62,254,255,66,67,,,,,253,28,27,89,88,90,91,,,215,,,,,,,41,,,93',
'92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,223,227,232,233,234,229',
'231,239,240,235,236,,216,217,,,237,238,,206,,,210,,,52,,,,,252,220,',
'226,40,222,221,218,219,230,228,224,214,225,,,,79,73,75,76,77,78,,-371',
',74,80,,241,,-371,-371,-371,257,56,-371,-371,-371,223,-371,53,54,,,',
',,,-371,-371,-371,,,,237,238,,,-371,-371,,-371,-371,-371,-371,-371,',
',,220,,226,,222,221,218,219,,,224,,225,,,,,,-371,-371,-371,-371,-371',
'-371,-371,-371,-371,-371,-371,-371,-371,-371,,,-371,-371,-371,,,-371',
',263,-371,,,-371,,-371,,-371,,-371,,-371,-371,-371,-371,-371,-371,-371',
',-371,-371,-371,,719,,332,330,329,331,,,,,,-371,-371,-371,-371,,-371',
'-281,,,,,,-371,-281,-281,-281,,,-281,-281,-281,,-281,223,,,334,713,',
',,,-281,-281,337,336,340,339,,237,238,-281,-281,,-281,-281,-281,-281',
'-281,,,,,,220,,226,,222,221,218,219,,,224,,225,,,,-281,-281,-281,-281',
'-281,-281,-281,-281,-281,-281,-281,-281,-281,-281,,,-281,-281,-281,',
',-281,,272,-281,,,-281,,-281,,-281,,-281,,-281,-281,-281,-281,-281,-281',
'-281,,-281,,-281,,,,,,,,,,,,,-281,-281,-281,-281,,-281,63,64,65,8,51',
',-281,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,',
'17,,,,,,7,41,,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,223,-526',
'-526,-526,-526,229,231,,,-526,-526,,,,,,237,238,,36,,,277,,,52,,,,,32',
'220,,226,40,222,221,218,219,230,228,224,18,225,,,,79,73,75,76,77,78',
',,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67',
',,,,253,287,291,89,88,90,91,,,215,,,,,,,288,,,93,92,83,50,85,84,86,87',
'94,95,,81,82,223,,324,292,332,330,329,331,,,,,,,,,237,238,,,,,,285,',
',282,,,52,,220,,,281,222,221,218,219,334,,719,,332,330,329,331,337,336',
'340,339,79,73,75,76,77,78,,746,,74,80,,,63,64,65,,51,56,,,57,58,,53',
'54,61,334,59,60,62,254,255,66,67,337,336,340,339,253,287,291,89,88,90',
'91,,,215,,,,,,,288,,,93,92,83,50,85,84,86,87,94,95,223,81,82,,,324,292',
'332,330,329,331,,,,,,237,238,,,,,,,,,285,,,210,,220,52,226,,222,221',
'218,219,,,224,334,225,,,,,,,337,336,340,339,79,73,75,76,77,78,,,,74',
'80,,,,294,,,,56,63,64,65,,51,53,54,,57,58,,,,61,,59,60,62,254,255,66',
'67,,,,,253,287,291,89,88,90,91,,,215,,,,,,,288,,,93,92,83,50,85,84,86',
'87,94,95,223,81,82,,,324,292,332,330,329,331,,,,,,237,238,,,,,,,,,874',
',,210,,220,52,226,,222,221,218,219,,,,334,319,719,,332,330,329,331,337',
'336,340,339,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53',
'54,61,334,59,60,62,254,255,66,67,337,336,340,339,253,287,291,89,88,90',
'91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,223',
'-526,-526,-526,-526,229,231,,,-526,-526,,,,,,237,238,,206,,,210,,,52',
',,,,,220,,226,40,222,221,218,219,230,228,224,214,225,,,,79,73,75,76',
'77,78,,,,74,80,,,63,64,65,8,51,56,,,57,58,,53,54,61,,59,60,62,23,24',
'66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,83,50,85,84,86',
'87,94,95,,81,82,,38,39,37,223,-526,-526,-526,-526,229,231,,,-526,-526',
',,,,,237,238,,36,,,30,,,52,,,,,32,220,,226,40,222,221,218,219,230,228',
'224,18,225,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,',
'53,54,61,,59,60,62,254,255,66,67,,,,,253,287,291,89,88,90,91,,,215,',
',,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,223,-526,-526',
'-526,-526,229,231,,,-526,-526,,,,,,237,238,,206,,,210,,,52,,,,,,220',
',226,40,222,221,218,219,230,228,224,214,225,,,,79,73,75,76,77,78,,,',
'74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,',
',,253,287,291,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94',
'95,,81,82,,38,39,37,223,227,232,233,234,229,231,239,240,235,236,,-526',
'-526,,,237,238,,206,,,210,,,52,,,,,,220,,226,40,222,221,218,219,230',
'228,224,214,225,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57',
'58,,53,54,61,,59,60,62,254,255,66,67,,,,,253,287,291,89,88,90,91,,,215',
',,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,223,-526,-526',
'-526,-526,229,231,,,-526,-526,,,,,,237,238,,206,,,210,,,52,,,,,,220',
',226,40,222,221,218,219,230,228,224,214,225,,,,79,73,75,76,77,78,,,',
'74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,',
',,253,287,291,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94',
'95,,81,82,,38,39,37,223,227,232,233,234,229,231,239,,235,236,,,,,,237',
'238,,206,,,210,,,52,,,,,,220,,226,40,222,221,218,219,230,228,224,214',
'225,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61',
',59,60,62,254,255,66,67,,,,,253,287,291,89,88,90,91,,,215,,,,,,,41,',
',93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,223,227,232,233,234',
'229,231,,,235,236,,,,,,237,238,,206,,,210,,,52,,,,,,220,,226,40,222',
'221,218,219,230,228,224,214,225,,,,79,73,75,76,77,78,,,,74,80,,,63,64',
'65,8,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88',
'90,91,,,17,,,,,,7,41,,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39',
'37,223,-526,-526,-526,-526,229,231,,,-526,-526,,,,,,237,238,,36,,,30',
',,52,,,,,32,220,,226,40,222,221,218,219,230,228,224,18,225,,,,79,73',
'75,76,77,78,,-268,,74,80,,,,-268,-268,-268,,56,-268,-268,-268,223,-268',
'53,54,,,,,,,,-268,-268,,,,237,238,,,-268,-268,,-268,-268,-268,-268,-268',
',,,220,,226,,222,221,218,219,,,224,,225,,,,,,-268,-268,-268,-268,-268',
'-268,-268,-268,-268,-268,-268,-268,-268,-268,,,-268,-268,-268,,,-268',
',,-268,,,-268,,-268,,-268,,-268,,-268,-268,-268,-268,-268,-268,-268',
',-268,,-268,,,,,,,,,,,,,-268,-268,-268,-268,,-268,,,-268,-268,,,-268',
'63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88',
'90,91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37',
'223,227,232,233,234,229,231,239,240,235,236,,-526,-526,,,237,238,,206',
',,210,,,52,,,,,,220,,226,40,222,221,218,219,230,228,224,18,225,,,,79',
'73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62',
'254,255,66,67,,,,,253,28,27,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50',
'85,84,86,87,94,95,,81,82,,38,39,37,223,,,,,,,,,,,,,,,,237,238,,206,',
',210,,,52,,,,,252,220,,226,40,222,221,218,219,,,,214,,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,257,56,63,64,65,,51,53,54,,57,58,,,,61,,59,60,62',
'254,255,66,67,,,,,253,287,291,89,88,90,91,,,215,,,,,,,41,,,93,92,83',
'50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,',
',52,,,,,252,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,257',
'56,63,64,65,,51,53,54,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,22,28,27',
'89,88,90,91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38',
'39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,18,,,,,79',
'73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62',
'254,255,66,67,,,,,253,287,291,89,88,90,91,,,215,,,,,,,41,,,93,92,83',
'50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,',
',52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65',
',51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90',
'91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,',
',,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76',
'77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66',
'67,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87',
'94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40',
',,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,',
'53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,',
'206,,,210,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,100',
',63,64,65,99,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253',
'287,291,89,88,90,91,,,215,,,,,,,288,,,93,92,83,50,85,84,86,87,94,95',
',81,82,,,719,292,332,330,329,331,,,,,,,,,,,,,,,,285,,,30,,,52,,,,,32',
',,,,334,713,,,,,,,337,336,340,339,79,73,75,76,77,78,,,,74,80,,,63,64',
'65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253,287,291',
'89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38',
'39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79',
'73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62',
'254,255,66,67,,,,,253,287,291,89,88,90,91,,,215,,,,,,,41,,,93,92,83',
'50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,',
',52,,,,,626,,250,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,,,,,',
',257,56,63,64,65,,51,53,54,,57,58,,,,61,,59,60,62,254,255,66,67,,,,',
'253,287,291,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94',
'95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,626,,,,40',
',,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,8,51,56,,,57,58',
',53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,7',
'41,,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,',
',,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74',
'80,,,63,64,65,8,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22',
'28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,83,50,85,84,86,87,94,95,,81',
'82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18',
',,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,',
'59,60,62,254,255,66,67,,,,,253,287,291,89,88,90,91,,,215,,,,,,,41,,',
'93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206',
',,210,,,52,,,,,,,250,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,',
',,,,,257,56,-501,-501,-501,,-501,53,54,,-501,-501,,,,-501,,-501,-501',
'-501,-501,-501,-501,-501,,-501,,,-501,-501,-501,-501,-501,-501,-501',
',,-501,,,,,,,-501,,,-501,-501,-501,-501,-501,-501,-501,-501,-501,-501',
',-501,-501,,-501,-501,-501,,,,,,,,,,,,,,,,,,,,-501,,,-501,-501,,-501',
',,,,-501,,-501,,-501,,,,,,,,-501,,-501,,,-501,-501,-501,-501,-501,-501',
',,,-501,-501,,,,,,,-501,-501,-502,-502,-502,,-502,-501,-501,,-502,-502',
',,,-502,,-502,-502,-502,-502,-502,-502,-502,,-502,,,-502,-502,-502,-502',
'-502,-502,-502,,,-502,,,,,,,-502,,,-502,-502,-502,-502,-502,-502,-502',
'-502,-502,-502,,-502,-502,,-502,-502,-502,,,,,,,,,,,,,,,,,,,,-502,,',
'-502,-502,,-502,,,,,-502,,-502,,-502,,,,,,,,-502,,-502,,,-502,-502,-502',
'-502,-502,-502,,,,-502,-502,,,,,,,-502,-502,63,64,65,,51,-502,-502,',
'57,58,,,,61,,59,60,62,254,255,66,67,,,,,253,287,291,89,88,90,91,,,215',
',,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,',
',,,,,,,,,206,,,210,,,52,,,,,252,,,,40,,,,,,,,214,,,,,79,73,75,76,77',
'78,,,,74,80,,,63,64,65,8,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66',
'67,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,6,9,93,92,83,50,85,84,86',
'87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,',
'40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,387,51,56,,,57',
'58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,',
',,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,',
',,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74',
'80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22',
'28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81',
'82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,18',
',,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,',
'59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92',
'83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210',
',,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65',
',51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90',
'91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,',
',,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76',
'77,78,,,,74,80,,,63,64,65,8,51,56,,,57,58,,53,54,61,,59,60,62,23,24',
'66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,83,50,85,84,86',
'87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,',
'40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,8,51,56,,,57',
'58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,',
',,7,41,6,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,',
',,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,',
',,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67',
',,,,253,287,291,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87',
'94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40',
',,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58',
',53,54,61,,59,60,62,254,255,66,67,,,,,253,287,291,89,88,90,91,,,215',
',,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,',
',,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78',
',,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67',
',,,,253,287,291,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87',
'94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40',
',,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,8,51,56,,,57,58',
',53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,7',
'41,,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,',
',,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74',
'80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22',
'28,27,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81',
'82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,404,,,,40,,,,,,,',
'214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,215,,,,,,,41,,,93',
'92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,',
',210,,,52,,,,,404,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,,',
'63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27',
'89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38',
'39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79',
'73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62',
'254,255,66,67,,,,,253,28,27,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50',
'85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52',
',,,,252,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,257,56',
'63,64,65,,51,53,54,,57,58,,,,61,,59,60,62,254,255,66,67,,,,,253,287',
'291,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82',
',38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,',
',,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59',
'60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,215,,,,,,,41,,,93,92,83',
'50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,',
',52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65',
',51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90',
'91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,',
',,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75',
'76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,23,24',
'66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,83,50,85,84,86',
'87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,',
'40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58',
',53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,',
'41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,',
',,,206,,,210,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253',
'287,291,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,',
'214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,8,51,56,,,57,58,,53,54',
'61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9',
'93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36',
',,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63',
'64,65,,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89',
'88,90,91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39',
'37,,,,,,,,,,,,,,,,,,,,206,,,210,,644,52,,,,,,,250,,40,,,,,,,,18,,,,',
'79,73,75,76,77,78,,,,74,80,,,63,64,65,8,51,56,,,57,58,,53,54,61,,59',
'60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,83',
'50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52',
',,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,8,51',
'56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91',
',,17,,,,,,7,41,,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,',
',,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76',
'77,78,,,,74,80,,,63,64,65,8,51,56,,,57,58,,53,54,61,,59,60,62,23,24',
'66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,83,50,85,84,86',
'87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,',
'40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,387,,56,63,64,65,8',
'51,53,54,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91',
',,17,,,,,,7,41,,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,',
',,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76',
'77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66',
'67,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87',
'94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,436,52,,,,,,,,',
'40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58',
',53,54,61,,59,60,62,254,255,66,67,,,,,253,287,291,89,88,90,91,,,215',
',,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,',
',,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78',
',,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,',
',,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95',
',81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,',
',18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,254,255,66,67,,,,,253,287,291,89,88,90,91,,,215,,,,,,,41',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,',
'206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253',
'287,291,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,',
'214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,254,255,66,67,,,,,253,287,291,89,88,90,91,,,215,,,,,,,41',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,',
'206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253',
'287,291,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,',
'214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,254,255,66,67,,,,,253,287,291,89,88,90,91,,,215,,,,,,,41',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,',
'206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253',
'287,291,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,',
'214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,254,255,66,67,,,,,253,287,291,89,88,90,91,,,215,,,,,,,41',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,',
'206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253',
'287,291,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,',
'214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,254,255,66,67,,,,,253,287,291,89,88,90,91,,,215,,,,,,,41',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,',
'206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253',
'287,291,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,',
'214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,254,255,66,67,,,,,253,287,291,89,88,90,91,,,215,,,,,,,41',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,',
'206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253',
'287,291,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,',
'214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,254,255,66,67,,,,,253,287,291,89,88,90,91,,,215,,,,,,,41',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,',
'206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253',
'287,291,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,',
'214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,254,255,66,67,,,,,253,287,291,89,88,90,91,,,215,,,,,,,41',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,',
'206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253',
'287,291,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,',
'214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,254,255,66,67,,,,,253,287,291,89,88,90,91,,,215,,,,,,,41',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,',
'206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253',
'287,291,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,',
'214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,254,255,66,67,,,,,253,287,291,89,88,90,91,,,215,,,,,,,41',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,',
'206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253',
'287,291,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,',
'214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,254,255,66,67,,,,,253,287,291,89,88,90,91,,,215,,,,,,,41',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,',
'206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253',
'287,291,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,',
'214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,254,255,66,67,,,,,253,287,291,89,88,90,91,,,215,,,,,,,41',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,',
'206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253',
'287,291,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,',
'214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,254,255,66,67,,,,,253,287,291,89,88,90,91,,,215,,,,,,,41',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,',
'206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253',
'287,291,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,',
'214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,254,255,66,67,,,,,253,28,27,89,88,90,91,,,215,,,,,,,41',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,',
'206,,,210,,,52,,,,,252,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74',
'80,,,,,,,257,56,63,64,65,,51,53,54,,57,58,,,,61,,59,60,62,23,24,66,67',
',,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87,94',
'95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,',
',,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53',
'54,61,,59,60,62,254,255,66,67,,,,,253,287,291,89,88,90,91,,,215,,,,',
',,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,',
',,,,,206,,,210,,,52,,,,,252,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,',
',,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67',
',,,,253,287,291,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87',
'94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40',
',,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58',
',53,54,61,,59,60,62,254,255,66,67,,,,,253,287,291,89,88,90,91,,,215',
',,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,',
',,,,,,,,,206,,,210,,,52,,,,,404,,,,40,,,,,,,,214,,,,,79,73,75,76,77',
'78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66',
'67,,,,,253,287,291,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86',
'87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,',
'40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57',
'58,,53,54,61,,59,60,62,254,255,66,67,,,,,253,287,291,89,88,90,91,,,215',
',,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,',
',,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78',
',,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67',
',,,,253,287,291,89,88,90,91,,,215,,,,,,,288,,,93,92,83,50,85,84,86,87',
'94,95,,81,82,,,324,292,332,330,329,331,,,,,,,,,,,,,,,,285,,,282,,,52',
',,,,,,,,,334,,534,,,,,,337,336,340,339,79,73,75,76,77,78,,,,74,80,,',
'63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253,287',
'291,89,88,90,91,,,215,,,,,,,288,,,93,92,83,50,85,84,564,87,94,95,,81',
'82,,,,292,,,,,,,,,,,,,,,,,,,,565,,,210,,,52,,,,,,,,,,,,,,,,,,,,,,79',
'73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62',
'254,255,66,67,,,,,253,287,291,89,88,90,91,,,215,,,,,,,288,,,93,92,83',
'50,85,84,564,87,94,95,,81,82,,,,292,,,,,,,,,,,,,,,,,,,,565,,,210,,,52',
',,,,,,,,,,,,,,,,,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,',
'57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253,28,27,89,88,90,91,,',
'215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,',
',,,,,,,,,,,,,206,,,210,,,52,,,,,252,,250,,40,,,,,,,,214,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,257,56,63,64,65,,51,53,54,,57,58,,,,61,,59,60',
'62,254,255,66,67,,,,,253,28,27,89,88,90,91,,,215,,,,,,,41,,,93,92,83',
'50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,',
',486,,,,,252,,250,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,,,,',
',,257,56,63,64,65,,51,53,54,,57,58,,,,61,,59,60,62,254,255,66,67,,,',
',253,28,27,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95',
',81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,490,52,,,,,252,,250,',
'40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,257,56,63,64,65,',
'51,53,54,,57,58,,,,61,,59,60,62,254,255,66,67,,,,,253,287,291,89,88',
'90,91,,,215,,,,,,,288,,,93,92,83,50,85,84,86,87,94,95,,81,82,,,,292',
',,,,,,,,,,,,,,,,,,,285,,,282,,,52,,,,,,,,,,,,,,,,,,,,,,79,73,75,76,77',
'78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66',
'67,,,,,253,287,291,89,88,90,91,,,215,,,,,,,288,,,93,92,83,50,85,84,86',
'87,94,95,,81,82,,,,292,,,,,,,,,,,,,,,,,,,,285,,,282,,,52,,,,,,,,,,,',
',,,,,,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,8,51,56,,,57,58,,53',
'54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41',
',9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,',
',36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,8,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28',
'27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,83,50,85,84,86,87,94,95,,81,82',
',38,39,37,,,,,,,,,,,,,,,,,,,,36,,,277,,,52,,,,,32,,,,40,,,,,,,,18,,',
',,79,73,75,76,77,78,,,,74,80,,,63,64,65,8,51,56,,,57,58,,53,54,61,,59',
'60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,83',
'50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52',
',,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51',
'56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253,28,27,89,88,90',
'91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,',
',,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,626,,250,,40,,,,,,,,214,,,,,79',
'73,75,76,77,78,,,,74,80,,,,,,,257,56,63,64,65,8,51,53,54,,57,58,,,,61',
',59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93',
'92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,',
'30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64',
'65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253,287,291',
'89,88,90,91,,,215,,,,,,,288,,,93,92,83,50,85,84,86,87,94,95,,81,82,',
',,292,,,,,,,,,,,,,,,,,,,,285,,,210,,,52,,,,,,,,,,,,,,,,,,,,,,79,73,75',
'76,77,78,,,,74,80,,,,498,,,,56,63,64,65,8,51,53,54,,57,58,,,,61,,59',
'60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,83',
'50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,277,,',
'52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65',
',51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253,287,291,89',
'88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39',
'37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73',
'75,76,77,78,,,,74,80,,,63,64,65,8,51,56,,,57,58,,53,54,61,,59,60,62',
'23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,83,50,85',
'84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,',
'32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56',
',,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253,287,291,89,88,90,91',
',,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,',
',,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76',
'77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255',
'66,67,,,,,253,28,27,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86',
'87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,252',
',,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,-273,,74,80,,,,-273,-273,-273',
'257,56,-273,-273,-273,,-273,53,54,,,,,,,,-273,-273,,,,,,,,-273,-273',
',-273,-273,-273,-273,-273,,,,,,,,,,,,,,,,,,,,,,-273,-273,-273,-273,-273',
'-273,-273,-273,-273,-273,-273,-273,-273,-273,,,-273,-273,-273,,610,-273',
',,-273,,,-273,,-273,,-273,,-273,,-273,-273,-273,-273,-273,-273,-273',
',-273,,-273,,,,,,,,,,,,,-273,-273,-273,-273,,-273,-508,,,,-93,,-273',
'-508,-508,-508,,,-508,-508,-508,,-508,,,,,,,,,-508,-508,-508,,,,,,,',
'-508,-508,,-508,-508,-508,-508,-508,,,,,,,,,,,,,,,,,,,,,,-508,-508,-508',
'-508,-508,-508,-508,-508,-508,-508,-508,-508,-508,-508,,,-508,-508,-508',
',743,-508,,,-508,,,-508,,-508,,-508,,-508,,-508,-508,-508,-508,-508',
'-508,-508,,-508,-508,-508,,,,,,,,,,,,,-508,-508,-508,-508,,-508,,63',
'64,65,-91,51,-508,,,57,58,,,,61,,59,60,62,254,255,66,67,,,,,253,287',
'291,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82',
',38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,',
',,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59',
'60,62,254,255,66,67,,,,,253,287,291,89,88,90,91,,,215,,,,,,,41,,,93',
'92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,',
',210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,,,63',
'64,65,,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89',
'88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39',
'37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73',
'75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254',
'255,66,67,,,,,253,287,291,89,88,90,91,,,215,,,,,,,288,,,93,92,83,50',
'85,84,86,87,94,95,,81,82,,,,292,,,,,,,,,,,,,,,,,,,,285,,,282,,,52,,',
',,,,,,,,,,,,,,,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57',
'58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,215,,',
',,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,',
',,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,',
',74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,',
',22,28,27,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95',
',81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,',
',214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,254,255,66,67,,,,,253,287,291,89,88,90,91,,,215,,,,,,,41',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,',
'206,,,210,,,52,,,,,730,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74',
'80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253',
'287,291,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,',
'214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,254,255,66,67,,,,,253,287,291,89,88,90,91,,,215,,,,,,,41',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,',
'206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253',
'287,291,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,515,,52,,,,,,,,,40,,,,',
',,,214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,8,51,56,,,57,58,,53',
'54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41',
',9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,',
',36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28',
'27,89,88,90,91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82',
',38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,18,,,',
',79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59',
'60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,83',
'50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,',
',52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,',
'51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90',
'91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,',
',,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76',
'77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255',
'66,67,,,,,253,287,291,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84',
'86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,',
',,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,',
'57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17',
',,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,',
',,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,',
',,74,80,,,63,64,65,8,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,',
',,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,83,50,85,84,86,87,94',
'95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,',
',,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53',
'54,61,,59,60,62,254,255,66,67,,,,,253,287,291,89,88,90,91,,,215,,,,',
',,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,',
',,,,,206,,,210,,,52,,,,,626,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,',
',,74,80,,,,,,,257,56,63,64,65,,51,53,54,,57,58,,,,61,,59,60,62,254,255',
'66,67,,,,,253,287,291,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84',
'86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,',
',,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,257,56,63,64,65',
'8,51,53,54,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90',
'91,,,17,,,,,,7,41,,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37',
',,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75',
'76,77,78,,,,74,80,,,63,64,65,8,51,56,,,57,58,,53,54,61,,59,60,62,23',
'24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,83,50,85,84',
'86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32',
',,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57',
'58,,53,54,61,,59,60,62,254,255,66,67,,,,,253,287,291,89,88,90,91,,,215',
',,,,,,288,,,93,92,83,50,85,84,86,87,94,95,,81,82,,,,292,,,,,,,,,,,,',
',,,,,,,680,,,210,,,52,,,,,,,,,,,,,,,,,,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,8,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28',
'27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,83,50,85,84,86,87,94,95,,81,82',
',38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,',
',79,73,75,76,77,78,,,,74,80,,,63,64,65,8,51,56,,,57,58,,53,54,61,,59',
'60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,83',
'50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52',
',,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,8,51',
'56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91',
',,17,,,,,,7,41,,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,',
',,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76',
'77,78,,-524,,74,80,,,,-524,-524,-524,,56,-524,-524,-524,,-524,53,54',
',,,,,,,-524,,,,,,,,,-524,-524,,-524,-524,-524,-524,-524,,,,,,,,,,,,-524',
',,,,,,-524,-524,-524,,,-524,-524,-524,,-524,,,,,-524,,,,,-524,,-524',
',,,,263,-524,-524,-524,,-524,-524,-524,-524,-524,,,,,,,,,,,,,-524,,',
',,,,,,,,,,-524,,-524,,,-524,,-524,,,,,,,-524,,,,,263,-524,,,,,,,,,,',
',,,,,,,,,,-524,,,,,,,,,,,,,-524,,-524,,,-524,154,165,155,178,151,171',
'161,160,186,189,176,159,158,153,179,187,188,163,152,166,170,172,164',
'157,,,173,180,175,174,167,177,162,150,169,168,181,182,183,184,185,149',
'156,147,148,145,146,110,112,,,111,,,,,,,,138,139,,136,120,121,122,144',
'125,127,,,123,,,,,140,141,128,129,,,,,,,,,,,,,133,132,,119,137,135,134',
'130,131,126,124,117,143,118,,,142,190,,,,,,,,,,80,154,165,155,178,151',
'171,161,160,186,189,176,159,158,153,179,187,188,163,152,166,170,172',
'164,157,,,173,180,175,174,167,177,162,150,169,168,181,182,183,184,185',
'149,156,147,148,145,146,110,112,109,,111,,,,,,,,138,139,,136,120,121',
'122,144,125,127,,,123,,,,,140,141,128,129,,,,,,,,,,,,,133,132,,119,137',
'135,134,130,131,126,124,117,143,118,,,142,190,,,,,,,,,,80,154,165,155',
'178,151,171,161,160,186,189,176,159,158,153,179,187,188,163,152,166',
'170,172,164,157,,,173,180,175,174,167,177,162,150,169,168,181,182,183',
'184,185,149,156,147,148,145,146,110,112,,,111,,,,,,,,138,139,,136,120',
'121,122,144,125,127,,,123,,,,,140,141,128,129,,,,,,,,,,,,,133,132,,119',
'137,135,134,130,131,126,124,117,143,118,,,142,190,,,,,,,,,,80,154,165',
'155,178,151,171,161,160,186,189,176,159,158,153,179,187,188,163,152',
'166,170,172,164,157,,,173,180,175,174,167,177,162,150,169,168,181,182',
'183,184,185,149,156,147,148,145,146,110,112,,,111,,,,,,,,138,139,,136',
'120,121,122,144,125,127,,,123,,,,,140,141,128,129,,,,,,,,,,,,,133,132',
',119,137,135,134,130,131,126,124,117,143,118,,,142,190,,,,,,,,,,80,154',
'165,155,178,151,171,161,160,186,189,176,159,158,153,179,187,188,163',
'152,166,170,172,164,157,,,173,180,175,174,167,177,162,150,169,168,181',
'182,183,184,185,149,156,147,148,145,146,110,112,383,382,111,384,,,,',
',,138,139,,136,120,121,122,144,125,127,,,123,,,,,140,141,128,129,,,',
',,,,,,,,,133,132,,119,137,135,134,130,131,126,124,117,143,118,,,142',
'154,165,155,178,151,171,161,160,186,189,176,159,158,153,179,187,188',
'163,152,166,170,172,164,157,,,173,180,175,360,359,361,358,150,169,168',
'181,182,183,184,185,149,156,147,148,356,357,354,112,85,84,355,87,,,',
',,,138,139,,136,120,121,122,144,125,127,,,123,,,,,140,141,128,129,,',
',,,366,,,,,,,133,132,,119,137,135,134,130,131,126,124,117,143,118,,',
'142,154,165,155,178,151,171,161,160,186,189,176,159,158,153,179,187',
'188,163,152,166,170,172,164,157,,,173,180,175,174,167,177,162,150,169',
'168,181,182,183,184,185,149,156,147,148,145,146,110,112,383,382,111',
'384,,,,,,,138,139,,136,120,121,122,144,125,127,,,123,,,,,140,141,128',
'129,,,,,,,,,,,,,133,132,,119,137,135,134,130,131,126,124,117,143,118',
',,142,154,165,155,178,151,171,161,160,186,189,176,159,158,153,179,187',
'188,163,152,166,170,172,164,157,,,173,180,175,174,167,177,162,150,169',
'168,181,182,183,184,185,149,156,147,148,145,146,110,112,,,111,,,,,,',
',138,139,,136,120,121,122,144,125,127,,,123,,,,,140,141,128,129,,,,',
',,,,,,,,133,132,,119,137,135,134,130,131,126,124,117,143,118,474,416',
'142,,475,,,,,,,,138,139,,136,120,121,122,144,125,127,,,123,,,,,140,141',
'128,129,,,,,,,,,,,,,133,132,,119,137,135,134,130,131,126,124,117,143',
'118,797,422,142,,795,,,,,,,,138,139,,136,120,121,122,144,125,127,,,123',
',,,,140,141,128,129,,,,,,,,,,,,,133,132,,119,137,135,134,130,131,126',
'124,117,143,118,613,422,142,,614,,,,,,,,138,139,,136,120,121,122,144',
'125,127,,,123,,,,,140,141,128,129,,,,,,,,,,,,,133,132,,119,137,135,134',
'130,131,126,124,117,143,118,797,422,142,,840,,,,,,,,138,139,,136,120',
'121,122,144,125,127,,,123,,,,,140,141,128,129,,,,,,,,,,,,,133,132,,119',
'137,135,134,130,131,126,124,117,143,118,658,422,142,,659,,,,,,,,138',
'139,,136,120,121,122,144,125,127,,,123,,,,,140,141,128,129,,,,,,,,,',
',,,133,132,,119,137,135,134,130,131,126,124,117,143,118,908,422,142',
',909,,,,,,,,138,139,,136,120,121,122,144,125,127,,,123,,,,,140,141,128',
'129,,,,,,,,,,,,,133,132,,119,137,135,134,130,131,126,124,117,143,118',
'906,416,142,,907,,,,,,,,138,139,,136,120,121,122,144,125,127,,,123,',
',,,140,141,128,129,,,,,,263,,,,,,,133,132,,119,137,135,134,130,131,126',
'124,117,143,118,611,416,142,,612,,,,,,,,138,139,,136,120,121,122,144',
'125,127,,,123,,,,,140,141,128,129,,,,,,263,,,,,,,133,132,,119,137,135',
'134,130,131,126,124,117,143,118,474,416,142,,475,,,,,,,,138,139,,136',
'120,121,122,144,125,127,,,123,,,,,140,141,128,129,,,,,,,,,,,,,133,132',
',119,137,135,134,130,131,126,124,117,143,118,474,416,142,,475,,,,,,',
',138,139,,136,120,121,122,144,125,127,,,123,,,,,140,141,128,129,,,,',
',263,,,,,,,133,132,,119,137,135,134,130,131,126,124,117,143,118,611',
'416,142,,612,,,,,,,,138,139,,136,120,121,122,144,125,127,,,123,,,,,140',
'141,128,129,,,,,,263,,,,,,,133,132,,119,137,135,134,130,131,126,124',
'117,143,118,613,422,142,,614,,,,,,,,138,139,,136,120,121,122,144,125',
'127,,,123,,,,,140,141,128,129,,,,,,,,,,,,,133,132,,119,137,135,134,130',
'131,126,124,117,143,118,418,422,142,,420,,,,,,,,138,139,,136,120,121',
'122,144,125,127,,,123,,,,,140,141,128,129,,,,,,,,,,,,,133,132,,119,137',
'135,134,130,131,126,124,117,143,118,655,416,142,,656,,,,,,,,138,139',
',136,120,121,122,144,125,127,,,123,,,,,140,141,128,129,,,,,,263,,,,',
',,133,132,,119,137,135,134,130,131,126,124,117,143,118,474,416,142,',
'475,,,,,,,,138,139,,136,120,121,122,144,125,127,,,123,,,,,140,141,128',
'129,,,,,,,,,,,,,133,132,,119,137,135,134,130,131,126,124,117,143,118',
'474,416,142,,475,,,,,,,,138,139,,136,120,121,122,144,125,127,,,123,',
',,,140,141,128,129,,,,,,,,,,,,,133,132,,119,137,135,134,130,131,126',
'124,117,143,118,412,416,142,,413,,,,,,,,138,139,,136,120,121,122,144',
'125,127,,,123,,,,,140,141,128,129,,,,,,263,,,,,,,133,132,,119,137,135',
'134,130,131,126,124,117,143,118,,,142' ]
        racc_action_table = arr = ::Array.new(22287, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'0,0,0,0,0,837,374,794,0,0,710,710,841,0,377,0,0,0,0,0,0,0,487,564,289',
'477,0,0,0,0,0,0,0,372,569,0,372,652,576,576,431,0,0,0,0,0,0,0,0,0,0',
'0,0,0,0,487,0,0,477,0,0,0,55,650,71,654,374,374,374,306,306,25,71,564',
'907,906,377,881,25,881,564,0,878,908,0,564,289,0,431,793,812,812,0,372',
'372,343,0,710,612,611,650,344,710,794,0,794,564,289,794,0,0,0,0,0,0',
'837,655,837,0,0,837,361,404,404,404,576,404,0,361,26,404,404,564,0,0',
'404,569,404,404,404,404,404,404,404,463,55,612,611,404,404,404,404,404',
'404,404,569,306,404,908,658,569,656,665,665,404,615,207,404,404,404',
'404,404,404,404,404,404,404,463,404,404,655,404,404,404,907,906,907',
'906,558,907,906,26,878,908,878,908,557,878,908,793,205,793,793,404,793',
'343,404,343,262,404,343,344,26,344,207,665,344,655,404,435,435,587,658',
'658,655,656,404,310,488,657,310,404,404,404,404,404,404,875,414,368',
'404,404,15,15,875,414,414,414,205,404,414,414,414,714,414,404,404,287',
'714,363,658,488,656,414,414,414,363,658,701,656,37,37,435,414,414,701',
'414,414,414,414,414,587,587,348,558,348,558,288,379,558,587,370,557',
'800,557,660,875,557,800,368,368,368,414,414,414,414,414,414,414,414',
'414,414,414,414,414,414,291,299,414,414,414,744,608,414,299,414,414',
'701,663,414,14,414,664,414,637,414,666,414,414,414,414,414,414,414,251',
'414,414,414,379,379,379,370,370,370,709,315,603,873,315,709,414,414',
'414,414,873,414,418,292,292,744,872,14,414,418,418,418,299,872,14,418',
'418,354,418,672,3,13,679,356,354,3,567,418,13,679,356,273,204,567,910',
'910,273,418,418,204,418,418,418,418,418,347,413,355,35,659,347,756,873',
'763,355,286,659,284,756,673,763,659,286,676,284,872,418,418,418,418',
'418,418,418,418,418,418,418,418,418,418,13,679,418,418,418,567,418,413',
'895,35,418,204,678,359,413,895,35,418,756,418,359,418,418,418,418,418',
'418,418,659,418,418,418,763,481,286,358,284,342,342,357,481,503,358',
'360,418,418,357,418,503,418,360,541,541,297,418,420,418,896,896,896',
'896,896,420,420,420,896,896,895,420,420,896,420,896,896,896,896,896',
'896,896,312,481,680,312,896,896,896,896,896,896,896,420,420,896,420',
'420,420,420,420,896,896,503,896,896,896,896,896,896,896,896,896,896',
'896,670,896,896,670,896,896,896,420,420,420,420,420,420,420,420,420',
'420,420,420,420,420,318,318,420,420,420,896,420,283,896,309,420,896',
'309,681,283,682,896,420,685,420,896,420,420,420,420,420,420,420,896',
'420,298,420,623,896,896,896,896,896,896,42,690,909,896,896,420,420,42',
'420,909,420,696,896,698,909,420,914,420,896,896,422,422,422,914,422',
'248,109,283,422,422,109,109,247,422,598,422,422,422,422,422,422,422',
'688,688,591,301,422,422,422,422,422,422,422,723,723,422,723,723,723',
'42,402,909,422,308,215,422,422,422,422,422,422,422,422,422,422,914,422',
'422,565,422,422,422,402,402,402,402,402,402,402,402,402,402,402,209',
'402,402,795,208,402,402,311,422,560,795,422,422,559,422,795,715,296',
'716,422,402,422,402,422,402,402,402,402,402,402,402,422,402,717,719',
'206,422,422,422,422,422,422,722,313,625,422,422,553,402,729,402,412',
'548,422,422,892,892,892,296,892,422,422,795,892,892,296,544,276,892',
'323,892,892,892,892,892,892,892,533,324,326,191,892,892,892,892,892',
'892,892,327,338,892,518,412,747,748,616,751,892,886,412,892,892,892',
'892,892,892,892,892,892,892,754,892,892,755,892,892,892,616,616,616',
'616,616,616,616,616,616,616,616,517,616,616,757,809,616,616,96,892,760',
'761,892,762,516,892,886,886,886,886,892,616,600,616,892,616,616,616',
'616,616,616,616,892,616,766,78,769,892,892,892,892,892,892,770,341,278',
'892,892,535,616,809,809,809,809,892,892,890,890,890,890,890,892,892',
'600,890,890,645,785,788,890,600,890,890,890,890,890,890,890,77,507,63',
'504,890,890,890,890,890,890,890,349,797,890,798,535,535,535,535,890',
'890,779,890,890,890,890,890,890,890,890,890,890,890,499,890,890,350',
'890,890,890,245,245,245,245,245,245,245,245,245,245,245,803,245,245',
'804,805,245,245,497,890,494,642,890,41,821,890,779,779,779,779,890,245',
'822,245,890,245,245,245,245,245,245,245,890,245,493,628,829,890,890',
'890,890,890,890,830,36,489,890,890,34,245,882,882,882,882,882,890,840',
'285,882,882,483,890,890,882,846,882,882,882,882,882,882,882,847,20,482',
'852,882,882,882,882,882,882,882,279,549,882,549,549,549,549,857,882',
'882,858,882,882,882,882,882,882,882,882,882,882,882,440,882,882,859',
'882,882,882,662,662,662,662,662,662,662,662,662,662,662,861,662,662',
'862,480,662,662,479,882,444,443,882,442,440,882,874,441,440,440,882',
'662,12,662,882,662,662,662,662,662,662,662,882,662,280,11,884,882,882',
'882,882,882,882,373,10,891,882,882,9,662,423,423,423,459,423,882,419',
'376,423,423,411,882,882,423,6,423,423,423,423,423,423,423,900,902,903',
'905,423,423,423,423,423,423,423,407,459,423,405,1,459,459,459,459,423',
'393,636,423,423,423,423,423,423,423,423,423,423,439,423,423,399,423',
'423,423,641,641,641,641,641,641,641,641,641,641,641,,641,641,,,641,641',
',423,,,423,423,439,423,,,439,439,423,641,423,641,423,641,641,641,641',
'641,641,641,423,641,,,,423,423,423,423,423,423,,,,423,423,,641,,641',
',,423,423,871,871,871,871,871,423,423,,871,871,,,,871,,871,871,871,871',
'871,871,871,,,,,871,871,871,871,871,871,871,,784,871,784,784,784,784',
',871,871,,871,871,871,871,871,871,871,871,871,871,871,,871,871,,871',
'871,871,19,19,19,19,19,19,19,19,19,19,19,,19,19,,,19,19,,871,,,871,',
',871,,,,,871,19,,19,871,19,19,19,19,19,19,19,871,19,,,,871,871,871,871',
'871,871,,,,871,871,,19,869,869,869,458,869,871,,,869,869,,871,871,869',
',869,869,869,869,869,869,869,,,,,869,869,869,869,869,869,869,,458,869',
',,458,458,458,458,869,,,869,869,869,869,869,869,869,869,869,869,,869',
'869,,869,869,869,728,728,728,728,728,728,728,728,728,728,728,,728,728',
',,728,728,,869,,,869,,,869,,,,,869,728,869,728,869,728,728,728,728,728',
'728,728,869,728,,,,869,869,869,869,869,869,,,,869,869,,728,854,854,854',
'854,854,869,,,854,854,,869,869,854,,854,854,854,854,854,854,854,,,,',
'854,854,854,854,854,854,854,,,854,275,275,275,275,275,854,854,,854,854',
'854,854,854,854,854,854,854,854,854,,854,854,,854,854,854,733,733,733',
'733,733,733,733,733,733,733,733,,733,733,,,733,733,,854,,,854,,,854',
',,,,854,733,,733,854,733,733,733,733,733,733,733,854,733,,,,854,854',
'854,854,854,854,,,,854,854,,733,17,17,17,,17,854,,,17,17,,854,854,17',
',17,17,17,17,17,17,17,,,,,17,17,17,17,17,17,17,,,17,5,5,5,5,5,,17,,',
'17,17,17,17,17,17,17,17,17,17,,17,17,,17,17,17,735,735,735,735,735,735',
'735,735,735,735,735,,735,735,,,735,735,,17,,,17,17,,17,649,649,649,649',
'649,735,,735,17,735,735,735,735,735,735,735,17,735,,,,17,17,17,17,17',
'17,,,,17,17,,735,18,18,18,,18,17,,,18,18,,17,17,18,,18,18,18,18,18,18',
'18,,,,,18,18,18,18,18,18,18,,,18,,,,,,,18,,,18,18,18,18,18,18,18,18',
'18,18,,18,18,,18,18,18,738,738,738,738,738,738,738,738,738,738,738,',
'738,738,,,738,738,,18,,,18,,,18,,,,,,738,,738,18,738,738,738,738,738',
'738,738,18,738,,,,18,18,18,18,18,18,,,,18,18,,738,849,849,849,849,849',
'18,,,849,849,,18,18,849,,849,849,849,849,849,849,849,,,,,849,849,849',
'849,849,849,849,,,849,,,,,,849,849,,849,849,849,849,849,849,849,849',
'849,849,849,,849,849,,849,849,849,740,740,740,740,740,740,740,740,740',
'740,740,,740,740,,,740,740,,849,,,849,,,849,,,,,849,740,,740,849,740',
'740,740,740,740,740,740,849,740,,,,849,849,849,849,849,849,,,,849,849',
',740,848,848,848,,848,849,,,848,848,,849,849,848,,848,848,848,848,848',
'848,848,,,,,848,848,848,848,848,848,848,,,848,,,,,,,848,,,848,848,848',
'848,848,848,848,848,848,848,,848,848,,848,848,848,425,425,425,425,425',
'425,425,425,425,425,425,,425,425,,,425,425,,848,,,848,,,848,,,,,848',
'425,,425,848,425,425,425,425,425,425,425,848,425,,,,848,848,848,848',
'848,848,,,,848,848,,425,22,22,22,,22,848,,,22,22,,848,848,22,,22,22',
'22,22,22,22,22,,,,,22,22,22,22,22,22,22,,,22,,,,,,,22,,,22,22,22,22',
'22,22,22,22,22,22,,22,22,,22,22,22,462,462,462,462,462,462,462,462,462',
'462,462,,462,462,,,462,462,,22,,,22,,546,22,546,546,546,546,22,462,22',
'462,22,462,462,462,462,462,462,462,22,462,,,,22,22,22,22,22,22,,,,22',
'22,,462,462,546,,,22,22,23,23,23,546,23,22,22,,23,23,,,,23,,23,23,23',
'23,23,23,23,,,,,23,23,23,23,23,23,23,,,23,,,,,,,23,,,23,23,23,23,23',
'23,23,23,23,23,,23,23,,23,23,23,745,745,745,745,745,745,745,745,745',
'745,745,,745,745,,,745,745,,23,,,23,,334,23,334,334,334,334,23,745,23',
'745,23,745,745,745,745,745,745,745,23,745,,,,23,23,23,23,23,23,,,,23',
'23,,745,,334,,,23,23,24,24,24,334,24,23,23,,24,24,,,,24,,24,24,24,24',
'24,24,24,,,,,24,24,24,24,24,24,24,,,24,,,,,,,24,,,24,24,24,24,24,24',
'24,24,24,24,,24,24,,24,24,24,514,514,514,514,514,514,514,514,514,514',
'514,,514,514,,,514,514,,24,,,24,,686,24,686,686,686,686,24,514,24,514',
'24,514,514,514,514,514,514,514,24,514,,,,24,24,24,24,24,24,,,,24,24',
',514,,686,,,24,24,844,844,844,686,844,24,24,,844,844,,,,844,,844,844',
'844,844,844,844,844,,,,,844,844,844,844,844,844,844,,,844,,,,,,,844',
',,844,844,844,844,844,844,844,844,844,844,,844,844,,844,844,844,410',
'410,410,410,410,410,410,410,410,410,410,,410,410,,,410,410,,844,,,844',
',,844,,,,,,410,,410,844,410,410,410,410,410,410,410,844,410,,,,844,844',
'844,844,844,844,,,,844,844,,410,430,430,430,,430,844,,,430,430,,844',
'844,430,,430,430,430,430,430,430,430,,,,,430,430,430,430,430,430,430',
',,430,,,,,,,430,,,430,430,430,430,430,430,430,430,430,430,,430,430,',
'430,430,430,824,824,824,824,824,824,824,824,824,824,824,,824,824,,,824',
'824,,430,,,430,,,430,,,,,430,824,,824,430,824,824,824,824,824,824,824',
'430,824,,,,430,430,430,430,430,430,,27,,430,430,,824,,27,27,27,430,430',
'27,27,27,450,27,430,430,,,,,,,27,27,27,,,,450,450,,,27,27,,27,27,27',
'27,27,,,,450,,450,,450,450,450,450,,,450,,450,,,,,,27,27,27,27,27,27',
'27,27,27,27,27,27,27,27,,,27,27,27,,,27,,27,27,,,27,,27,,27,,27,,27',
'27,27,27,27,27,27,,27,27,27,,865,,865,865,865,865,,,,,,27,27,27,27,',
'27,28,,,,,,27,28,28,28,,,28,28,28,,28,449,,,865,865,,,,,28,28,865,865',
'865,865,,449,449,28,28,,28,28,28,28,28,,,,,,449,,449,,449,449,449,449',
',,449,,449,,,,28,28,28,28,28,28,28,28,28,28,28,28,28,28,,,28,28,28,',
',28,,28,28,,,28,,28,,28,,28,,28,28,28,28,28,28,28,,28,,28,,,,,,,,,,',
',,28,28,28,28,,28,30,30,30,30,30,,28,,30,30,,,,30,,30,30,30,30,30,30',
'30,,,,,30,30,30,30,30,30,30,,,30,,,,,,30,30,,30,30,30,30,30,30,30,30',
'30,30,30,,30,30,,30,30,30,448,448,448,448,448,448,448,,,448,448,,,,',
',448,448,,30,,,30,,,30,,,,,30,448,,448,30,448,448,448,448,448,448,448',
'30,448,,,,30,30,30,30,30,30,,,,30,30,,,31,31,31,,31,30,,,31,31,,30,30',
'31,,31,31,31,31,31,31,31,,,,,31,31,31,31,31,31,31,,,31,,,,,,,31,,,31',
'31,31,31,31,31,31,31,31,31,,31,31,447,,620,31,620,620,620,620,,,,,,',
',,447,447,,,,,,31,,,31,,,31,,447,,,31,447,447,447,447,620,,807,,807',
'807,807,807,620,620,620,620,31,31,31,31,31,31,,620,,31,31,,,32,32,32',
',32,31,,,32,32,,31,31,32,807,32,32,32,32,32,32,32,807,807,807,807,32',
'32,32,32,32,32,32,,,32,,,,,,,32,,,32,32,32,32,32,32,32,32,32,32,452',
'32,32,,,539,32,539,539,539,539,,,,,,452,452,,,,,,,,,32,,,32,,452,32',
'452,,452,452,452,452,,,452,539,452,,,,,,,539,539,539,539,32,32,32,32',
'32,32,,,,32,32,,,,32,,,,32,838,838,838,,838,32,32,,838,838,,,,838,,838',
'838,838,838,838,838,838,,,,,838,838,838,838,838,838,838,,,838,,,,,,',
'838,,,838,838,838,838,838,838,838,838,838,838,446,838,838,,,56,838,56',
'56,56,56,,,,,,446,446,,,,,,,,,838,,,838,,446,838,446,,446,446,446,446',
',,,56,56,713,,713,713,713,713,56,56,56,56,838,838,838,838,838,838,,',
',838,838,,,432,432,432,,432,838,,,432,432,,838,838,432,713,432,432,432',
'432,432,432,432,713,713,713,713,432,432,432,432,432,432,432,,,432,,',
',,,,432,,,432,432,432,432,432,432,432,432,432,432,,432,432,,432,432',
'432,456,456,456,456,456,456,456,,,456,456,,,,,,456,456,,432,,,432,,',
'432,,,,,,456,,456,432,456,456,456,456,456,456,456,432,456,,,,432,432',
'432,432,432,432,,,,432,432,,,834,834,834,834,834,432,,,834,834,,432',
'432,834,,834,834,834,834,834,834,834,,,,,834,834,834,834,834,834,834',
',,834,,,,,,834,834,,834,834,834,834,834,834,834,834,834,834,834,,834',
'834,,834,834,834,455,455,455,455,455,455,455,,,455,455,,,,,,455,455',
',834,,,834,,,834,,,,,834,455,,455,834,455,455,455,455,455,455,455,834',
'455,,,,834,834,834,834,834,834,,,,834,834,,,825,825,825,,825,834,,,825',
'825,,834,834,825,,825,825,825,825,825,825,825,,,,,825,825,825,825,825',
'825,825,,,825,,,,,,,825,,,825,825,825,825,825,825,825,825,825,825,,825',
'825,,825,825,825,454,454,454,454,454,454,454,,,454,454,,,,,,454,454',
',825,,,825,,,825,,,,,,454,,454,825,454,454,454,454,454,454,454,825,454',
',,,825,825,825,825,825,825,,,,825,825,,,38,38,38,,38,825,,,38,38,,825',
'825,38,,38,38,38,38,38,38,38,,,,,38,38,38,38,38,38,38,,,38,,,,,,,38',
',,38,38,38,38,38,38,38,38,38,38,,38,38,,38,38,38,438,438,438,438,438',
'438,438,438,438,438,438,,438,438,,,438,438,,38,,,38,,,38,,,,,,438,,438',
'38,438,438,438,438,438,438,438,38,438,,,,38,38,38,38,38,38,,,,38,38',
',,39,39,39,,39,38,,,39,39,,38,38,39,,39,39,39,39,39,39,39,,,,,39,39',
'39,39,39,39,39,,,39,,,,,,,39,,,39,39,39,39,39,39,39,39,39,39,,39,39',
',39,39,39,453,453,453,453,453,453,453,,,453,453,,,,,,453,453,,39,,,39',
',,39,,,,,,453,,453,39,453,453,453,453,453,453,453,39,453,,,,39,39,39',
'39,39,39,,,,39,39,,,40,40,40,,40,39,,,40,40,,39,39,40,,40,40,40,40,40',
'40,40,,,,,40,40,40,40,40,40,40,,,40,,,,,,,40,,,40,40,40,40,40,40,40',
'40,40,40,,40,40,,40,40,40,461,461,461,461,461,461,461,461,,461,461,',
',,,,461,461,,40,,,40,,,40,,,,,,461,,461,40,461,461,461,461,461,461,461',
'40,461,,,,40,40,40,40,40,40,,,,40,40,,,813,813,813,,813,40,,,813,813',
',40,40,813,,813,813,813,813,813,813,813,,,,,813,813,813,813,813,813',
'813,,,813,,,,,,,813,,,813,813,813,813,813,813,813,813,813,813,,813,813',
',813,813,813,460,460,460,460,460,460,460,,,460,460,,,,,,460,460,,813',
',,813,,,813,,,,,,460,,460,813,460,460,460,460,460,460,460,813,460,,',
',813,813,813,813,813,813,,,,813,813,,,799,799,799,799,799,813,,,799',
'799,,813,813,799,,799,799,799,799,799,799,799,,,,,799,799,799,799,799',
'799,799,,,799,,,,,,799,799,,799,799,799,799,799,799,799,799,799,799',
'799,,799,799,,799,799,799,457,457,457,457,457,457,457,,,457,457,,,,',
',457,457,,799,,,799,,,799,,,,,799,457,,457,799,457,457,457,457,457,457',
'457,799,457,,,,799,799,799,799,799,799,,50,,799,799,,,,50,50,50,,799',
'50,50,50,451,50,799,799,,,,,,,,50,50,,,,451,451,,,50,50,,50,50,50,50',
'50,,,,451,,451,,451,451,451,451,,,451,,451,,,,,,50,50,50,50,50,50,50',
'50,50,50,50,50,50,50,,,50,50,50,,,50,,,50,,,50,,50,,50,,50,,50,50,50',
'50,50,50,50,,50,,50,,,,,,,,,,,,,50,50,50,50,,50,,,50,50,,,50,52,52,52',
',52,,,,52,52,,,,52,,52,52,52,52,52,52,52,,,,,52,52,52,52,52,52,52,,',
'52,,,,,,,52,,,52,52,52,52,52,52,52,52,52,52,,52,52,,52,52,52,437,437',
'437,437,437,437,437,437,437,437,437,,437,437,,,437,437,,52,,,52,,,52',
',,,,,437,,437,52,437,437,437,437,437,437,437,52,437,,,,52,52,52,52,52',
'52,,,,52,52,,,53,53,53,,53,52,,,53,53,,52,52,53,,53,53,53,53,53,53,53',
',,,,53,53,53,53,53,53,53,,,53,,,,,,,53,,,53,53,53,53,53,53,53,53,53',
'53,,53,53,,53,53,53,445,,,,,,,,,,,,,,,,445,445,,53,,,53,,,53,,,,,53',
'445,,445,53,445,445,445,445,,,,53,,,,,53,53,53,53,53,53,,,,53,53,,,',
',,,53,53,54,54,54,,54,53,53,,54,54,,,,54,,54,54,54,54,54,54,54,,,,,54',
'54,54,54,54,54,54,,,54,,,,,,,54,,,54,54,54,54,54,54,54,54,54,54,,54',
'54,,54,54,54,,,,,,,,,,,,,,,,,,,,54,,,54,,,54,,,,,54,,,,54,,,,,,,,54',
',,,,54,54,54,54,54,54,,,,54,54,,,,,,,54,54,366,366,366,,366,54,54,,366',
'366,,,,366,,366,366,366,366,366,366,366,,,,,366,366,366,366,366,366',
'366,,,366,,,,,,,366,,,366,366,366,366,366,366,366,366,366,366,,366,366',
',366,366,366,,,,,,,,,,,,,,,,,,,,366,,,366,,,366,,,,,,,,,366,,,,,,,,366',
',,,,366,366,366,366,366,366,,,,366,366,,,433,433,433,,433,366,,,433',
'433,,366,366,433,,433,433,433,433,433,433,433,,,,,433,433,433,433,433',
'433,433,,,433,,,,,,,433,,,433,433,433,433,433,433,433,433,433,433,,433',
'433,,433,433,433,,,,,,,,,,,,,,,,,,,,433,,,433,,,433,,,,,,,,,433,,,,',
',,,433,,,,,433,433,433,433,433,433,,,,433,433,,,57,57,57,,57,433,,,57',
'57,,433,433,57,,57,57,57,57,57,57,57,,,,,57,57,57,57,57,57,57,,,57,',
',,,,,57,,,57,57,57,57,57,57,57,57,57,57,,57,57,,57,57,57,,,,,,,,,,,',
',,,,,,,,57,,,57,,,57,,,,,,,,,57,,,,,,,,57,,,,,57,57,57,57,57,57,,,,57',
'57,,,58,58,58,,58,57,,,58,58,,57,57,58,,58,58,58,58,58,58,58,,,,,58',
'58,58,58,58,58,58,,,58,,,,,,,58,,,58,58,58,58,58,58,58,58,58,58,,58',
'58,,58,58,58,,,,,,,,,,,,,,,,,,,,58,,,58,,,58,,,,,,,,,58,,,,,,,,58,,',
',,58,58,58,58,58,58,,,,58,58,,,61,61,61,,61,58,,,61,61,,58,58,61,,61',
'61,61,61,61,61,61,,,,,61,61,61,61,61,61,61,,,61,,,,,,,61,,,61,61,61',
'61,61,61,61,61,61,61,,61,61,,61,61,61,,,,,,,,,,,,,,,,,,,,61,,,61,,,61',
',,,,,,,,61,,,,,,,,61,,,,,61,61,61,61,61,61,,,,61,61,61,,62,62,62,61',
'62,61,,,62,62,,61,61,62,,62,62,62,62,62,62,62,,,,,62,62,62,62,62,62',
'62,,,62,,,,,,,62,,,62,62,62,62,62,62,62,62,62,62,,62,62,,,572,62,572',
'572,572,572,,,,,,,,,,,,,,,,62,,,62,,,62,,,,,62,,,,,572,572,,,,,,,572',
'572,572,572,62,62,62,62,62,62,,,,62,62,,,434,434,434,,434,62,,,434,434',
',62,62,434,,434,434,434,434,434,434,434,,,,,434,434,434,434,434,434',
'434,,,434,,,,,,,434,,,434,434,434,434,434,434,434,434,434,434,,434,434',
',434,434,434,,,,,,,,,,,,,,,,,,,,434,,,434,,,434,,,,,,,,,434,,,,,,,,434',
',,,,434,434,434,434,434,434,,,,434,434,,,465,465,465,,465,434,,,465',
'465,,434,434,465,,465,465,465,465,465,465,465,,,,,465,465,465,465,465',
'465,465,,,465,,,,,,,465,,,465,465,465,465,465,465,465,465,465,465,,465',
'465,,465,465,465,,,,,,,,,,,,,,,,,,,,465,,,465,,,465,,,,,465,,465,,465',
',,,,,,,465,,,,,465,465,465,465,465,465,,,,465,465,,,,,,,465,465,526',
'526,526,,526,465,465,,526,526,,,,526,,526,526,526,526,526,526,526,,',
',,526,526,526,526,526,526,526,,,526,,,,,,,526,,,526,526,526,526,526',
'526,526,526,526,526,,526,526,,526,526,526,,,,,,,,,,,,,,,,,,,,526,,,526',
',,526,,,,,526,,,,526,,,,,,,,526,,,,,526,526,526,526,526,526,,,,526,526',
',,789,789,789,789,789,526,,,789,789,,526,526,789,,789,789,789,789,789',
'789,789,,,,,789,789,789,789,789,789,789,,,789,,,,,,789,789,,789,789',
'789,789,789,789,789,789,789,789,789,,789,789,,789,789,789,,,,,,,,,,',
',,,,,,,,,789,,,789,,,789,,,,,789,,,,789,,,,,,,,789,,,,,789,789,789,789',
'789,789,,,,789,789,,,768,768,768,768,768,789,,,768,768,,789,789,768',
',768,768,768,768,768,768,768,,,,,768,768,768,768,768,768,768,,,768,',
',,,,768,768,,768,768,768,768,768,768,768,768,768,768,768,,768,768,,768',
'768,768,,,,,,,,,,,,,,,,,,,,768,,,768,,,768,,,,,768,,,,768,,,,,,,,768',
',,,,768,768,768,768,768,768,,,,768,768,,,468,468,468,,468,768,,,468',
'468,,768,768,468,,468,468,468,468,468,468,468,,,,,468,468,468,468,468',
'468,468,,,468,,,,,,,468,,,468,468,468,468,468,468,468,468,468,468,,468',
'468,,468,468,468,,,,,,,,,,,,,,,,,,,,468,,,468,,,468,,,,,,,468,,468,',
',,,,,,468,,,,,468,468,468,468,468,468,,,,468,468,,,,,,,468,468,83,83',
'83,,83,468,468,,83,83,,,,83,,83,83,83,83,83,83,83,,83,,,83,83,83,83',
'83,83,83,,,83,,,,,,,83,,,83,83,83,83,83,83,83,83,83,83,,83,83,,83,83',
'83,,,,,,,,,,,,,,,,,,,,83,,,83,83,,83,,,,,83,,83,,83,,,,,,,,83,,83,,',
'83,83,83,83,83,83,,,,83,83,,,,,,,83,83,86,86,86,,86,83,83,,86,86,,,',
'86,,86,86,86,86,86,86,86,,86,,,86,86,86,86,86,86,86,,,86,,,,,,,86,,',
'86,86,86,86,86,86,86,86,86,86,,86,86,,86,86,86,,,,,,,,,,,,,,,,,,,,86',
',,86,86,,86,,,,,86,,86,,86,,,,,,,,86,,86,,,86,86,86,86,86,86,,,,86,86',
',,,,,,86,86,758,758,758,,758,86,86,,758,758,,,,758,,758,758,758,758',
'758,758,758,,,,,758,758,758,758,758,758,758,,,758,,,,,,,758,,,758,758',
'758,758,758,758,758,758,758,758,,758,758,,758,758,758,,,,,,,,,,,,,,',
',,,,,758,,,758,,,758,,,,,758,,,,758,,,,,,,,758,,,,,758,758,758,758,758',
'758,,,,758,758,,,98,98,98,98,98,758,,,98,98,,758,758,98,,98,98,98,98',
'98,98,98,,,,,98,98,98,98,98,98,98,,,98,,,,,,98,98,98,98,98,98,98,98',
'98,98,98,98,98,98,,98,98,,98,98,98,,,,,,,,,,,,,,,,,,,,98,,,98,,,98,',
',,,98,,,,98,,,,,,,,98,,,,,98,98,98,98,98,98,,,,98,98,,,102,102,102,98',
'102,98,,,102,102,,98,98,102,,102,102,102,102,102,102,102,,,,,102,102',
'102,102,102,102,102,,,102,,,,,,,102,,,102,102,102,102,102,102,102,102',
'102,102,,102,102,,102,102,102,,,,,,,,,,,,,,,,,,,,102,,,102,,,102,,,',
',,,,,102,,,,,,,,102,,,,,102,102,102,102,102,102,,,,102,102,,,103,103',
'103,,103,102,,,103,103,,102,102,103,,103,103,103,103,103,103,103,,,',
',103,103,103,103,103,103,103,,,103,,,,,,,103,,,103,103,103,103,103,103',
'103,103,103,103,,103,103,,103,103,103,,,,,,,,,,,,,,,,,,,,103,,,103,',
',103,,,,,,,,,103,,,,,,,,103,,,,,103,103,103,103,103,103,,,,103,103,',
',104,104,104,,104,103,,,104,104,,103,103,104,,104,104,104,104,104,104',
'104,,,,,104,104,104,104,104,104,104,,,104,,,,,,,104,,,104,104,104,104',
'104,104,104,104,104,104,,104,104,,104,104,104,,,,,,,,,,,,,,,,,,,,104',
',,104,,,104,,,,,,,,,104,,,,,,,,104,,,,,104,104,104,104,104,104,,,,104',
'104,,,105,105,105,,105,104,,,105,105,,104,104,105,,105,105,105,105,105',
'105,105,,,,,105,105,105,105,105,105,105,,,105,,,,,,,105,,,105,105,105',
'105,105,105,105,105,105,105,,105,105,,105,105,105,,,,,,,,,,,,,,,,,,',
',105,,,105,,,105,,,,,,,,,105,,,,,,,,105,,,,,105,105,105,105,105,105',
',,,105,105,,,106,106,106,106,106,105,,,106,106,,105,105,106,,106,106',
'106,106,106,106,106,,,,,106,106,106,106,106,106,106,,,106,,,,,,106,106',
',106,106,106,106,106,106,106,106,106,106,106,,106,106,,106,106,106,',
',,,,,,,,,,,,,,,,,,106,,,106,,,106,,,,,106,,,,106,,,,,,,,106,,,,,106',
'106,106,106,106,106,,,,106,106,,,107,107,107,107,107,106,,,107,107,',
'106,106,107,,107,107,107,107,107,107,107,,,,,107,107,107,107,107,107',
'107,,,107,,,,,,107,107,107,107,107,107,107,107,107,107,107,107,107,107',
',107,107,,107,107,107,,,,,,,,,,,,,,,,,,,,107,,,107,,,107,,,,,107,,,',
'107,,,,,,,,107,,,,,107,107,107,107,107,107,,,,107,107,,,743,743,743',
',743,107,,,743,743,,107,107,743,,743,743,743,743,743,743,743,,,,,743',
'743,743,743,743,743,743,,,743,,,,,,,743,,,743,743,743,743,743,743,743',
'743,743,743,,743,743,,743,743,743,,,,,,,,,,,,,,,,,,,,743,,,743,,,743',
',,,,,,,,743,,,,,,,,743,,,,,743,743,743,743,743,743,,,,743,743,,,470',
'470,470,,470,743,,,470,470,,743,743,470,,470,470,470,470,470,470,470',
',,,,470,470,470,470,470,470,470,,,470,,,,,,,470,,,470,470,470,470,470',
'470,470,470,470,470,,470,470,,470,470,470,,,,,,,,,,,,,,,,,,,,470,,,470',
',,470,,,,,,,,,470,,,,,,,,470,,,,,470,470,470,470,470,470,,,,470,470',
',,742,742,742,,742,470,,,742,742,,470,470,742,,742,742,742,742,742,742',
'742,,,,,742,742,742,742,742,742,742,,,742,,,,,,,742,,,742,742,742,742',
'742,742,742,742,742,742,,742,742,,742,742,742,,,,,,,,,,,,,,,,,,,,742',
',,742,,,742,,,,,,,,,742,,,,,,,,742,,,,,742,742,742,742,742,742,,,,742',
'742,,,193,193,193,193,193,742,,,193,193,,742,742,193,,193,193,193,193',
'193,193,193,,,,,193,193,193,193,193,193,193,,,193,,,,,,193,193,,193',
'193,193,193,193,193,193,193,193,193,193,,193,193,,193,193,193,,,,,,',
',,,,,,,,,,,,,193,,,193,,,193,,,,,193,,,,193,,,,,,,,193,,,,,193,193,193',
'193,193,193,,,,193,193,,,194,194,194,,194,193,,,194,194,,193,193,194',
',194,194,194,194,194,194,194,,,,,194,194,194,194,194,194,194,,,194,',
',,,,,194,,,194,194,194,194,194,194,194,194,194,194,,194,194,,194,194',
'194,,,,,,,,,,,,,,,,,,,,194,,,194,,,194,,,,,194,,,,194,,,,,,,,194,,,',
',194,194,194,194,194,194,,,,194,194,,,195,195,195,,195,194,,,195,195',
',194,194,195,,195,195,195,195,195,195,195,,,,,195,195,195,195,195,195',
'195,,,195,,,,,,,195,,,195,195,195,195,195,195,195,195,195,195,,195,195',
',195,195,195,,,,,,,,,,,,,,,,,,,,195,,,195,,,195,,,,,195,,,,195,,,,,',
',,195,,,,,195,195,195,195,195,195,,,,195,195,,,196,196,196,,196,195',
',,196,196,,195,195,196,,196,196,196,196,196,196,196,,,,,196,196,196',
'196,196,196,196,,,196,,,,,,,196,,,196,196,196,196,196,196,196,196,196',
'196,,196,196,,196,196,196,,,,,,,,,,,,,,,,,,,,196,,,196,,,196,,,,,,,',
',196,,,,,,,,196,,,,,196,196,196,196,196,196,,,,196,196,,,197,197,197',
',197,196,,,197,197,,196,196,197,,197,197,197,197,197,197,197,,,,,197',
'197,197,197,197,197,197,,,197,,,,,,,197,,,197,197,197,197,197,197,197',
'197,197,197,,197,197,,197,197,197,,,,,,,,,,,,,,,,,,,,197,,,197,,,197',
',,,,197,,,,197,,,,,,,,197,,,,,197,197,197,197,197,197,,,,197,197,,,',
',,,197,197,741,741,741,,741,197,197,,741,741,,,,741,,741,741,741,741',
'741,741,741,,,,,741,741,741,741,741,741,741,,,741,,,,,,,741,,,741,741',
'741,741,741,741,741,741,741,741,,741,741,,741,741,741,,,,,,,,,,,,,,',
',,,,,741,,,741,,,741,,,,,,,,,741,,,,,,,,741,,,,,741,741,741,741,741',
'741,,,,741,741,,,731,731,731,,731,741,,,731,731,,741,741,731,,731,731',
'731,731,731,731,731,,,,,731,731,731,731,731,731,731,,,731,,,,,,,731',
',,731,731,731,731,731,731,731,731,731,731,,731,731,,731,731,731,,,,',
',,,,,,,,,,,,,,,731,,,731,,,731,,,,,,,,,731,,,,,,,,731,,,,,731,731,731',
'731,731,731,,,,731,731,,,200,200,200,,200,731,,,200,200,,731,731,200',
',200,200,200,200,200,200,200,,,,,200,200,200,200,200,200,200,,,200,',
',,,,,200,,,200,200,200,200,200,200,200,200,200,200,,200,200,,200,200',
'200,,,,,,,,,,,,,,,,,,,,200,,,200,,,200,,,,,,,,,200,,,,,,,,200,,,,,200',
'200,200,200,200,200,,,,200,200,,,201,201,201,,201,200,,,201,201,,200',
'200,201,,201,201,201,201,201,201,201,,,,,201,201,201,201,201,201,201',
',,201,,,,,,,201,,,201,201,201,201,201,201,201,201,201,201,,201,201,',
'201,201,201,,,,,,,,,,,,,,,,,,,,201,,,201,,,201,,,,,,,,,201,,,,,,,,201',
',,,,201,201,201,201,201,201,,,,201,201,,,202,202,202,,202,201,,,202',
'202,,201,201,202,,202,202,202,202,202,202,202,,,,,202,202,202,202,202',
'202,202,,,202,,,,,,,202,,,202,202,202,202,202,202,202,202,202,202,,202',
'202,,202,202,202,,,,,,,,,,,,,,,,,,,,202,,,202,,,202,,,,,,,,,202,,,,',
',,,202,,,,,202,202,202,202,202,202,,,,202,202,,,730,730,730,,730,202',
',,730,730,,202,202,730,,730,730,730,730,730,730,730,,,,,730,730,730',
'730,730,730,730,,,730,,,,,,,730,,,730,730,730,730,730,730,730,730,730',
'730,,730,730,,730,730,730,,,,,,,,,,,,,,,,,,,,730,,,730,,,730,,,,,,,',
',730,,,,,,,,730,,,,,730,730,730,730,730,730,,,,730,730,,,724,724,724',
'724,724,730,,,724,724,,730,730,724,,724,724,724,724,724,724,724,,,,',
'724,724,724,724,724,724,724,,,724,,,,,,724,724,,724,724,724,724,724',
'724,724,724,724,724,724,,724,724,,724,724,724,,,,,,,,,,,,,,,,,,,,724',
',,724,,,724,,,,,724,,,,724,,,,,,,,724,,,,,724,724,724,724,724,724,,',
',724,724,,,486,486,486,,486,724,,,486,486,,724,724,486,,486,486,486',
'486,486,486,486,,,,,486,486,486,486,486,486,486,,,486,,,,,,,486,,,486',
'486,486,486,486,486,486,486,486,486,,486,486,,486,486,486,,,,,,,,,,',
',,,,,,,,,486,,,486,,486,486,,,,,,,486,,486,,,,,,,,486,,,,,486,486,486',
'486,486,486,,,,486,486,,,712,712,712,712,712,486,,,712,712,,486,486',
'712,,712,712,712,712,712,712,712,,,,,712,712,712,712,712,712,712,,,712',
',,,,,712,712,,712,712,712,712,712,712,712,712,712,712,712,,712,712,',
'712,712,712,,,,,,,,,,,,,,,,,,,,712,,,712,,,712,,,,,712,,,,712,,,,,,',
',712,,,,,712,712,712,712,712,712,,,,712,712,,,711,711,711,711,711,712',
',,711,711,,712,712,711,,711,711,711,711,711,711,711,,,,,711,711,711',
'711,711,711,711,,,711,,,,,,711,711,,711,711,711,711,711,711,711,711',
'711,711,711,,711,711,,711,711,711,,,,,,,,,,,,,,,,,,,,711,,,711,,,711',
',,,,711,,,,711,,,,,,,,711,,,,,711,711,711,711,711,711,,,,711,711,,,492',
'492,492,492,492,711,,,492,492,,711,711,492,,492,492,492,492,492,492',
'492,,,,,492,492,492,492,492,492,492,,,492,,,,,,492,492,,492,492,492',
'492,492,492,492,492,492,492,492,,492,492,,492,492,492,,,,,,,,,,,,,,',
',,,,,492,,,492,,,492,,,,,492,,,,492,,,,,,,,492,,,,,492,492,492,492,492',
'492,,,,492,492,,,,,,492,,492,210,210,210,210,210,492,492,,210,210,,',
',210,,210,210,210,210,210,210,210,,,,,210,210,210,210,210,210,210,,',
'210,,,,,,210,210,,210,210,210,210,210,210,210,210,210,210,210,,210,210',
',210,210,210,,,,,,,,,,,,,,,,,,,,210,,,210,,,210,,,,,210,,,,210,,,,,',
',,210,,,,,210,210,210,210,210,210,,,,210,210,,,211,211,211,,211,210',
',,211,211,,210,210,211,,211,211,211,211,211,211,211,,,,,211,211,211',
'211,211,211,211,,,211,,,,,,,211,,,211,211,211,211,211,211,211,211,211',
'211,,211,211,,211,211,211,,,,,,,,,,,,,,,,,,,,211,,,211,,211,211,,,,',
',,,,211,,,,,,,,211,,,,,211,211,211,211,211,211,,,,211,211,,,214,214',
'214,,214,211,,,214,214,,211,211,214,,214,214,214,214,214,214,214,,,',
',214,214,214,214,214,214,214,,,214,,,,,,,214,,,214,214,214,214,214,214',
'214,214,214,214,,214,214,,214,214,214,,,,,,,,,,,,,,,,,,,,214,,,214,',
',214,,,,,,,,,214,,,,,,,,214,,,,,214,214,214,214,214,214,,,,214,214,',
',708,708,708,,708,214,,,708,708,,214,214,708,,708,708,708,708,708,708',
'708,,,,,708,708,708,708,708,708,708,,,708,,,,,,,708,,,708,708,708,708',
'708,708,708,708,708,708,,708,708,,708,708,708,,,,,,,,,,,,,,,,,,,,708',
',,708,,,708,,,,,,,,,708,,,,,,,,708,,,,,708,708,708,708,708,708,,,,708',
'708,,,216,216,216,,216,708,,,216,216,,708,708,216,,216,216,216,216,216',
'216,216,,,,,216,216,216,216,216,216,216,,,216,,,,,,,216,,,216,216,216',
'216,216,216,216,216,216,216,,216,216,,216,216,216,,,,,,,,,,,,,,,,,,',
',216,,,216,,,216,,,,,,,,,216,,,,,,,,216,,,,,216,216,216,216,216,216',
',,,216,216,,,217,217,217,,217,216,,,217,217,,216,216,217,,217,217,217',
'217,217,217,217,,,,,217,217,217,217,217,217,217,,,217,,,,,,,217,,,217',
'217,217,217,217,217,217,217,217,217,,217,217,,217,217,217,,,,,,,,,,',
',,,,,,,,,217,,,217,,,217,,,,,,,,,217,,,,,,,,217,,,,,217,217,217,217',
'217,217,,,,217,217,,,218,218,218,,218,217,,,218,218,,217,217,218,,218',
'218,218,218,218,218,218,,,,,218,218,218,218,218,218,218,,,218,,,,,,',
'218,,,218,218,218,218,218,218,218,218,218,218,,218,218,,218,218,218',
',,,,,,,,,,,,,,,,,,,218,,,218,,,218,,,,,,,,,218,,,,,,,,218,,,,,218,218',
'218,218,218,218,,,,218,218,,,219,219,219,,219,218,,,219,219,,218,218',
'219,,219,219,219,219,219,219,219,,,,,219,219,219,219,219,219,219,,,219',
',,,,,,219,,,219,219,219,219,219,219,219,219,219,219,,219,219,,219,219',
'219,,,,,,,,,,,,,,,,,,,,219,,,219,,,219,,,,,,,,,219,,,,,,,,219,,,,,219',
'219,219,219,219,219,,,,219,219,,,220,220,220,,220,219,,,220,220,,219',
'219,220,,220,220,220,220,220,220,220,,,,,220,220,220,220,220,220,220',
',,220,,,,,,,220,,,220,220,220,220,220,220,220,220,220,220,,220,220,',
'220,220,220,,,,,,,,,,,,,,,,,,,,220,,,220,,,220,,,,,,,,,220,,,,,,,,220',
',,,,220,220,220,220,220,220,,,,220,220,,,221,221,221,,221,220,,,221',
'221,,220,220,221,,221,221,221,221,221,221,221,,,,,221,221,221,221,221',
'221,221,,,221,,,,,,,221,,,221,221,221,221,221,221,221,221,221,221,,221',
'221,,221,221,221,,,,,,,,,,,,,,,,,,,,221,,,221,,,221,,,,,,,,,221,,,,',
',,,221,,,,,221,221,221,221,221,221,,,,221,221,,,222,222,222,,222,221',
',,222,222,,221,221,222,,222,222,222,222,222,222,222,,,,,222,222,222',
'222,222,222,222,,,222,,,,,,,222,,,222,222,222,222,222,222,222,222,222',
'222,,222,222,,222,222,222,,,,,,,,,,,,,,,,,,,,222,,,222,,,222,,,,,,,',
',222,,,,,,,,222,,,,,222,222,222,222,222,222,,,,222,222,,,223,223,223',
',223,222,,,223,223,,222,222,223,,223,223,223,223,223,223,223,,,,,223',
'223,223,223,223,223,223,,,223,,,,,,,223,,,223,223,223,223,223,223,223',
'223,223,223,,223,223,,223,223,223,,,,,,,,,,,,,,,,,,,,223,,,223,,,223',
',,,,,,,,223,,,,,,,,223,,,,,223,223,223,223,223,223,,,,223,223,,,224',
'224,224,,224,223,,,224,224,,223,223,224,,224,224,224,224,224,224,224',
',,,,224,224,224,224,224,224,224,,,224,,,,,,,224,,,224,224,224,224,224',
'224,224,224,224,224,,224,224,,224,224,224,,,,,,,,,,,,,,,,,,,,224,,,224',
',,224,,,,,,,,,224,,,,,,,,224,,,,,224,224,224,224,224,224,,,,224,224',
',,225,225,225,,225,224,,,225,225,,224,224,225,,225,225,225,225,225,225',
'225,,,,,225,225,225,225,225,225,225,,,225,,,,,,,225,,,225,225,225,225',
'225,225,225,225,225,225,,225,225,,225,225,225,,,,,,,,,,,,,,,,,,,,225',
',,225,,,225,,,,,,,,,225,,,,,,,,225,,,,,225,225,225,225,225,225,,,,225',
'225,,,226,226,226,,226,225,,,226,226,,225,225,226,,226,226,226,226,226',
'226,226,,,,,226,226,226,226,226,226,226,,,226,,,,,,,226,,,226,226,226',
'226,226,226,226,226,226,226,,226,226,,226,226,226,,,,,,,,,,,,,,,,,,',
',226,,,226,,,226,,,,,,,,,226,,,,,,,,226,,,,,226,226,226,226,226,226',
',,,226,226,,,227,227,227,,227,226,,,227,227,,226,226,227,,227,227,227',
'227,227,227,227,,,,,227,227,227,227,227,227,227,,,227,,,,,,,227,,,227',
'227,227,227,227,227,227,227,227,227,,227,227,,227,227,227,,,,,,,,,,',
',,,,,,,,,227,,,227,,,227,,,,,,,,,227,,,,,,,,227,,,,,227,227,227,227',
'227,227,,,,227,227,,,228,228,228,,228,227,,,228,228,,227,227,228,,228',
'228,228,228,228,228,228,,,,,228,228,228,228,228,228,228,,,228,,,,,,',
'228,,,228,228,228,228,228,228,228,228,228,228,,228,228,,228,228,228',
',,,,,,,,,,,,,,,,,,,228,,,228,,,228,,,,,,,,,228,,,,,,,,228,,,,,228,228',
'228,228,228,228,,,,228,228,,,229,229,229,,229,228,,,229,229,,228,228',
'229,,229,229,229,229,229,229,229,,,,,229,229,229,229,229,229,229,,,229',
',,,,,,229,,,229,229,229,229,229,229,229,229,229,229,,229,229,,229,229',
'229,,,,,,,,,,,,,,,,,,,,229,,,229,,,229,,,,,,,,,229,,,,,,,,229,,,,,229',
'229,229,229,229,229,,,,229,229,,,230,230,230,,230,229,,,230,230,,229',
'229,230,,230,230,230,230,230,230,230,,,,,230,230,230,230,230,230,230',
',,230,,,,,,,230,,,230,230,230,230,230,230,230,230,230,230,,230,230,',
'230,230,230,,,,,,,,,,,,,,,,,,,,230,,,230,,,230,,,,,,,,,230,,,,,,,,230',
',,,,230,230,230,230,230,230,,,,230,230,,,231,231,231,,231,230,,,231',
'231,,230,230,231,,231,231,231,231,231,231,231,,,,,231,231,231,231,231',
'231,231,,,231,,,,,,,231,,,231,231,231,231,231,231,231,231,231,231,,231',
'231,,231,231,231,,,,,,,,,,,,,,,,,,,,231,,,231,,,231,,,,,,,,,231,,,,',
',,,231,,,,,231,231,231,231,231,231,,,,231,231,,,232,232,232,,232,231',
',,232,232,,231,231,232,,232,232,232,232,232,232,232,,,,,232,232,232',
'232,232,232,232,,,232,,,,,,,232,,,232,232,232,232,232,232,232,232,232',
'232,,232,232,,232,232,232,,,,,,,,,,,,,,,,,,,,232,,,232,,,232,,,,,,,',
',232,,,,,,,,232,,,,,232,232,232,232,232,232,,,,232,232,,,233,233,233',
',233,232,,,233,233,,232,232,233,,233,233,233,233,233,233,233,,,,,233',
'233,233,233,233,233,233,,,233,,,,,,,233,,,233,233,233,233,233,233,233',
'233,233,233,,233,233,,233,233,233,,,,,,,,,,,,,,,,,,,,233,,,233,,,233',
',,,,,,,,233,,,,,,,,233,,,,,233,233,233,233,233,233,,,,233,233,,,234',
'234,234,,234,233,,,234,234,,233,233,234,,234,234,234,234,234,234,234',
',,,,234,234,234,234,234,234,234,,,234,,,,,,,234,,,234,234,234,234,234',
'234,234,234,234,234,,234,234,,234,234,234,,,,,,,,,,,,,,,,,,,,234,,,234',
',,234,,,,,,,,,234,,,,,,,,234,,,,,234,234,234,234,234,234,,,,234,234',
',,235,235,235,,235,234,,,235,235,,234,234,235,,235,235,235,235,235,235',
'235,,,,,235,235,235,235,235,235,235,,,235,,,,,,,235,,,235,235,235,235',
'235,235,235,235,235,235,,235,235,,235,235,235,,,,,,,,,,,,,,,,,,,,235',
',,235,,,235,,,,,,,,,235,,,,,,,,235,,,,,235,235,235,235,235,235,,,,235',
'235,,,236,236,236,,236,235,,,236,236,,235,235,236,,236,236,236,236,236',
'236,236,,,,,236,236,236,236,236,236,236,,,236,,,,,,,236,,,236,236,236',
'236,236,236,236,236,236,236,,236,236,,236,236,236,,,,,,,,,,,,,,,,,,',
',236,,,236,,,236,,,,,,,,,236,,,,,,,,236,,,,,236,236,236,236,236,236',
',,,236,236,,,237,237,237,,237,236,,,237,237,,236,236,237,,237,237,237',
'237,237,237,237,,,,,237,237,237,237,237,237,237,,,237,,,,,,,237,,,237',
'237,237,237,237,237,237,237,237,237,,237,237,,237,237,237,,,,,,,,,,',
',,,,,,,,,237,,,237,,,237,,,,,,,,,237,,,,,,,,237,,,,,237,237,237,237',
'237,237,,,,237,237,,,238,238,238,,238,237,,,238,238,,237,237,238,,238',
'238,238,238,238,238,238,,,,,238,238,238,238,238,238,238,,,238,,,,,,',
'238,,,238,238,238,238,238,238,238,238,238,238,,238,238,,238,238,238',
',,,,,,,,,,,,,,,,,,,238,,,238,,,238,,,,,,,,,238,,,,,,,,238,,,,,238,238',
'238,238,238,238,,,,238,238,,,239,239,239,,239,238,,,239,239,,238,238',
'239,,239,239,239,239,239,239,239,,,,,239,239,239,239,239,239,239,,,239',
',,,,,,239,,,239,239,239,239,239,239,239,239,239,239,,239,239,,239,239',
'239,,,,,,,,,,,,,,,,,,,,239,,,239,,,239,,,,,,,,,239,,,,,,,,239,,,,,239',
'239,239,239,239,239,,,,239,239,,,240,240,240,,240,239,,,240,240,,239',
'239,240,,240,240,240,240,240,240,240,,,,,240,240,240,240,240,240,240',
',,240,,,,,,,240,,,240,240,240,240,240,240,240,240,240,240,,240,240,',
'240,240,240,,,,,,,,,,,,,,,,,,,,240,,,240,,,240,,,,,,,,,240,,,,,,,,240',
',,,,240,240,240,240,240,240,,,,240,240,,,241,241,241,,241,240,,,241',
'241,,240,240,241,,241,241,241,241,241,241,241,,,,,241,241,241,241,241',
'241,241,,,241,,,,,,,241,,,241,241,241,241,241,241,241,241,241,241,,241',
'241,,241,241,241,,,,,,,,,,,,,,,,,,,,241,,,241,,,241,,,,,,,,,241,,,,',
',,,241,,,,,241,241,241,241,241,241,,,,241,241,,,704,704,704,,704,241',
',,704,704,,241,241,704,,704,704,704,704,704,704,704,,,,,704,704,704',
'704,704,704,704,,,704,,,,,,,704,,,704,704,704,704,704,704,704,704,704',
'704,,704,704,,704,704,704,,,,,,,,,,,,,,,,,,,,704,,,704,,,704,,,,,704',
',,,704,,,,,,,,704,,,,,704,704,704,704,704,704,,,,704,704,,,,,,,704,704',
'700,700,700,,700,704,704,,700,700,,,,700,,700,700,700,700,700,700,700',
',,,,700,700,700,700,700,700,700,,,700,,,,,,,700,,,700,700,700,700,700',
'700,700,700,700,700,,700,700,,700,700,700,,,,,,,,,,,,,,,,,,,,700,,,700',
',,700,,,,,,,,,700,,,,,,,,700,,,,,700,700,700,700,700,700,,,,700,700',
',,699,699,699,,699,700,,,699,699,,700,700,699,,699,699,699,699,699,699',
'699,,,,,699,699,699,699,699,699,699,,,699,,,,,,,699,,,699,699,699,699',
'699,699,699,699,699,699,,699,699,,699,699,699,,,,,,,,,,,,,,,,,,,,699',
',,699,,,699,,,,,699,,,,699,,,,,,,,699,,,,,699,699,699,699,699,699,,',
',699,699,,,250,250,250,,250,699,,,250,250,,699,699,250,,250,250,250',
'250,250,250,250,,,,,250,250,250,250,250,250,250,,,250,,,,,,,250,,,250',
'250,250,250,250,250,250,250,250,250,,250,250,,250,250,250,,,,,,,,,,',
',,,,,,,,,250,,,250,,,250,,,,,,,,,250,,,,,,,,250,,,,,250,250,250,250',
'250,250,,,,250,250,,,667,667,667,,667,250,,,667,667,,250,250,667,,667',
'667,667,667,667,667,667,,,,,667,667,667,667,667,667,667,,,667,,,,,,',
'667,,,667,667,667,667,667,667,667,667,667,667,,667,667,,667,667,667',
',,,,,,,,,,,,,,,,,,,667,,,667,,,667,,,,,667,,,,667,,,,,,,,667,,,,,667',
'667,667,667,667,667,,,,667,667,,,252,252,252,,252,667,,,252,252,,667',
'667,252,,252,252,252,252,252,252,252,,,,,252,252,252,252,252,252,252',
',,252,,,,,,,252,,,252,252,252,252,252,252,252,252,252,252,,252,252,',
'252,252,252,,,,,,,,,,,,,,,,,,,,252,,,252,,,252,,,,,,,,,252,,,,,,,,252',
',,,,252,252,252,252,252,252,,,,252,252,,,257,257,257,,257,252,,,257',
'257,,252,252,257,,257,257,257,257,257,257,257,,,,,257,257,257,257,257',
'257,257,,,257,,,,,,,257,,,257,257,257,257,257,257,257,257,257,257,,257',
'257,,257,257,257,,,,,,,,,,,,,,,,,,,,257,,,257,,,257,,,,,,,,,257,,,,',
',,,257,,,,,257,257,257,257,257,257,,,,257,257,,,661,661,661,,661,257',
',,661,661,,257,257,661,,661,661,661,661,661,661,661,,,,,661,661,661',
'661,661,661,661,,,661,,,,,,,661,,,661,661,661,661,661,661,661,661,661',
'661,,661,661,,,319,661,319,319,319,319,,,,,,,,,,,,,,,,661,,,661,,,661',
',,,,,,,,,319,,319,,,,,,319,319,319,319,661,661,661,661,661,661,,,,661',
'661,,,353,353,353,,353,661,,,353,353,,661,661,353,,353,353,353,353,353',
'353,353,,,,,353,353,353,353,353,353,353,,,353,,,,,,,353,,,353,353,353',
'353,353,353,353,353,353,353,,353,353,,,,353,,,,,,,,,,,,,,,,,,,,353,',
',353,,,353,,,,,,,,,,,,,,,,,,,,,,353,353,353,353,353,353,,,,353,353,',
',351,351,351,,351,353,,,351,351,,353,353,351,,351,351,351,351,351,351',
'351,,,,,351,351,351,351,351,351,351,,,351,,,,,,,351,,,351,351,351,351',
'351,351,351,351,351,351,,351,351,,,,351,,,,,,,,,,,,,,,,,,,,351,,,351',
',,351,,,,,,,,,,,,,,,,,,,,,,351,351,351,351,351,351,,,,351,351,,,263',
'263,263,,263,351,,,263,263,,351,351,263,,263,263,263,263,263,263,263',
',,,,263,263,263,263,263,263,263,,,263,,,,,,,263,,,263,263,263,263,263',
'263,263,263,263,263,,263,263,,263,263,263,,,,,,,,,,,,,,,,,,,,263,,,263',
',,263,,,,,263,,263,,263,,,,,,,,263,,,,,263,263,263,263,263,263,,,,263',
'263,,,,,,,263,263,264,264,264,,264,263,263,,264,264,,,,264,,264,264',
'264,264,264,264,264,,,,,264,264,264,264,264,264,264,,,264,,,,,,,264',
',,264,264,264,264,264,264,264,264,264,264,,264,264,,264,264,264,,,,',
',,,,,,,,,,,,,,,264,,,264,,,264,,,,,264,,264,,264,,,,,,,,264,,,,,264',
'264,264,264,264,264,,,,264,264,,,,,,,264,264,272,272,272,,272,264,264',
',272,272,,,,272,,272,272,272,272,272,272,272,,,,,272,272,272,272,272',
'272,272,,,272,,,,,,,272,,,272,272,272,272,272,272,272,272,272,272,,272',
'272,,272,272,272,,,,,,,,,,,,,,,,,,,,272,,,272,,272,272,,,,,272,,272',
',272,,,,,,,,272,,,,,272,272,272,272,272,272,,,,272,272,,,,,,,272,272',
'498,498,498,,498,272,272,,498,498,,,,498,,498,498,498,498,498,498,498',
',,,,498,498,498,498,498,498,498,,,498,,,,,,,498,,,498,498,498,498,498',
'498,498,498,498,498,,498,498,,,,498,,,,,,,,,,,,,,,,,,,,498,,,498,,,498',
',,,,,,,,,,,,,,,,,,,,,498,498,498,498,498,498,,,,498,498,,,651,651,651',
',651,498,,,651,651,,498,498,651,,651,651,651,651,651,651,651,,,,,651',
'651,651,651,651,651,651,,,651,,,,,,,651,,,651,651,651,651,651,651,651',
'651,651,651,,651,651,,,,651,,,,,,,,,,,,,,,,,,,,651,,,651,,,651,,,,,',
',,,,,,,,,,,,,,,,651,651,651,651,651,651,,,,651,651,,,647,647,647,647',
'647,651,,,647,647,,651,651,647,,647,647,647,647,647,647,647,,,,,647',
'647,647,647,647,647,647,,,647,,,,,,647,647,,647,647,647,647,647,647',
'647,647,647,647,647,,647,647,,647,647,647,,,,,,,,,,,,,,,,,,,,647,,,647',
',,647,,,,,647,,,,647,,,,,,,,647,,,,,647,647,647,647,647,647,,,,647,647',
',,277,277,277,277,277,647,,,277,277,,647,647,277,,277,277,277,277,277',
'277,277,,,,,277,277,277,277,277,277,277,,,277,,,,,,277,277,,277,277',
'277,277,277,277,277,277,277,277,277,,277,277,,277,277,277,,,,,,,,,,',
',,,,,,,,,277,,,277,,,277,,,,,277,,,,277,,,,,,,,277,,,,,277,277,277,277',
'277,277,,,,277,277,,,646,646,646,646,646,277,,,646,646,,277,277,646',
',646,646,646,646,646,646,646,,,,,646,646,646,646,646,646,646,,,646,',
',,,,646,646,,646,646,646,646,646,646,646,646,646,646,646,,646,646,,646',
'646,646,,,,,,,,,,,,,,,,,,,,646,,,646,,,646,,,,,646,,,,646,,,,,,,,646',
',,,,646,646,646,646,646,646,,,,646,646,,,640,640,640,,640,646,,,640',
'640,,646,646,640,,640,640,640,640,640,640,640,,,,,640,640,640,640,640',
'640,640,,,640,,,,,,,640,,,640,640,640,640,640,640,640,640,640,640,,640',
'640,,640,640,640,,,,,,,,,,,,,,,,,,,,640,,,640,,,640,,,,,640,,640,,640',
',,,,,,,640,,,,,640,640,640,640,640,640,,,,640,640,,,,,,,640,640,634',
'634,634,634,634,640,640,,634,634,,,,634,,634,634,634,634,634,634,634',
',,,,634,634,634,634,634,634,634,,,634,,,,,,634,634,,634,634,634,634',
'634,634,634,634,634,634,634,,634,634,,634,634,634,,,,,,,,,,,,,,,,,,',
',634,,,634,,,634,,,,,634,,,,634,,,,,,,,634,,,,,634,634,634,634,634,634',
',,,634,634,,,281,281,281,,281,634,,,281,281,,634,634,281,,281,281,281',
'281,281,281,281,,,,,281,281,281,281,281,281,281,,,281,,,,,,,281,,,281',
'281,281,281,281,281,281,281,281,281,,281,281,,,,281,,,,,,,,,,,,,,,,',
',,,281,,,281,,,281,,,,,,,,,,,,,,,,,,,,,,281,281,281,281,281,281,,,,281',
'281,,,,281,,,,281,282,282,282,282,282,281,281,,282,282,,,,282,,282,282',
'282,282,282,282,282,,,,,282,282,282,282,282,282,282,,,282,,,,,,282,282',
',282,282,282,282,282,282,282,282,282,282,282,,282,282,,282,282,282,',
',,,,,,,,,,,,,,,,,,282,,,282,,,282,,,,,282,,,,282,,,,,,,,282,,,,,282',
'282,282,282,282,282,,,,282,282,,,626,626,626,,626,282,,,626,626,,282',
'282,626,,626,626,626,626,626,626,626,,,,,626,626,626,626,626,626,626',
',,626,,,,,,,626,,,626,626,626,626,626,626,626,626,626,626,,626,626,',
'626,626,626,,,,,,,,,,,,,,,,,,,,626,,,626,,,626,,,,,,,,,626,,,,,,,,626',
',,,,626,626,626,626,626,626,,,,626,626,,,622,622,622,622,622,626,,,622',
'622,,626,626,622,,622,622,622,622,622,622,622,,,,,622,622,622,622,622',
'622,622,,,622,,,,,,622,622,,622,622,622,622,622,622,622,622,622,622',
'622,,622,622,,622,622,622,,,,,,,,,,,,,,,,,,,,622,,,622,,,622,,,,,622',
',,,622,,,,,,,,622,,,,,622,622,622,622,622,622,,,,622,622,,,618,618,618',
',618,622,,,618,618,,622,622,618,,618,618,618,618,618,618,618,,,,,618',
'618,618,618,618,618,618,,,618,,,,,,,618,,,618,618,618,618,618,618,618',
'618,618,618,,618,618,,618,618,618,,,,,,,,,,,,,,,,,,,,618,,,618,,,618',
',,,,,,,,618,,,,,,,,618,,,,,618,618,618,618,618,618,,,,618,618,,,500',
'500,500,,500,618,,,500,500,,618,618,500,,500,500,500,500,500,500,500',
',,,,500,500,500,500,500,500,500,,,500,,,,,,,500,,,500,500,500,500,500',
'500,500,500,500,500,,500,500,,500,500,500,,,,,,,,,,,,,,,,,,,,500,,,500',
',,500,,,,,500,,,,500,,,,,,,,500,,,,,500,500,500,500,500,500,,614,,500',
'500,,,,614,614,614,500,500,614,614,614,,614,500,500,,,,,,,,614,614,',
',,,,,,614,614,,614,614,614,614,614,,,,,,,,,,,,,,,,,,,,,,614,614,614',
'614,614,614,614,614,614,614,614,614,614,614,,,614,614,614,,614,614,',
',614,,,614,,614,,614,,614,,614,614,614,614,614,614,614,,614,,614,,,',
',,,,,,,,,614,614,614,614,,614,613,,,,614,,614,613,613,613,,,613,613',
'613,,613,,,,,,,,,613,613,613,,,,,,,,613,613,,613,613,613,613,613,,,',
',,,,,,,,,,,,,,,,,,613,613,613,613,613,613,613,613,613,613,613,613,613',
'613,,,613,613,613,,613,613,,,613,,,613,,613,,613,,613,,613,613,613,613',
'613,613,613,,613,613,613,,,,,,,,,,,,,613,613,613,613,,613,,509,509,509',
'613,509,613,,,509,509,,,,509,,509,509,509,509,509,509,509,,,,,509,509',
'509,509,509,509,509,,,509,,,,,,,509,,,509,509,509,509,509,509,509,509',
'509,509,,509,509,,509,509,509,,,,,,,,,,,,,,,,,,,,509,,,509,,,509,,,',
',,,,,509,,,,,,,,509,,,,,509,509,509,509,509,509,,,,509,509,,,610,610',
'610,,610,509,,,610,610,,509,509,610,,610,610,610,610,610,610,610,,,',
',610,610,610,610,610,610,610,,,610,,,,,,,610,,,610,610,610,610,610,610',
'610,610,610,610,,610,610,,610,610,610,,,,,,,,,,,,,,,,,,,,610,,,610,',
',610,,,,,,,,,610,,,,,,,,610,,,,,610,610,610,610,610,610,,,,610,610,',
',607,607,607,,607,610,,,607,607,,610,610,607,,607,607,607,607,607,607',
'607,,,,,607,607,607,607,607,607,607,,,607,,,,,,,607,,,607,607,607,607',
'607,607,607,607,607,607,,607,607,,607,607,607,,,,,,,,,,,,,,,,,,,,607',
',,607,,,607,,,,,,,,,607,,,,,,,,607,,,,,607,607,607,607,607,607,,,,607',
'607,,,294,294,294,,294,607,,,294,294,,607,607,294,,294,294,294,294,294',
'294,294,,,,,294,294,294,294,294,294,294,,,294,,,,,,,294,,,294,294,294',
'294,294,294,294,294,294,294,,294,294,,,,294,,,,,,,,,,,,,,,,,,,,294,',
',294,,,294,,,,,,,,,,,,,,,,,,,,,,294,294,294,294,294,294,,,,294,294,',
',602,602,602,,602,294,,,602,602,,294,294,602,,602,602,602,602,602,602',
'602,,,,,602,602,602,602,602,602,602,,,602,,,,,,,602,,,602,602,602,602',
'602,602,602,602,602,602,,602,602,,602,602,602,,,,,,,,,,,,,,,,,,,,602',
',,602,,,602,,,,,,,,,602,,,,,,,,602,,,,,602,602,602,602,602,602,,,,602',
'602,,,601,601,601,,601,602,,,601,601,,602,602,601,,601,601,601,601,601',
'601,601,,,,,601,601,601,601,601,601,601,,,601,,,,,,,601,,,601,601,601',
'601,601,601,601,601,601,601,,601,601,,601,601,601,,,,,,,,,,,,,,,,,,',
',601,,,601,,,601,,,,,,,,,601,,,,,,,,601,,,,,601,601,601,601,601,601',
',,,601,601,,,599,599,599,,599,601,,,599,599,,601,601,599,,599,599,599',
'599,599,599,599,,,,,599,599,599,599,599,599,599,,,599,,,,,,,599,,,599',
'599,599,599,599,599,599,599,599,599,,599,599,,599,599,599,,,,,,,,,,',
',,,,,,,,,599,,,599,,,599,,,,,599,,,,599,,,,,,,,599,,,,,599,599,599,599',
'599,599,,,,599,599,,,597,597,597,,597,599,,,597,597,,599,599,597,,597',
'597,597,597,597,597,597,,,,,597,597,597,597,597,597,597,,,597,,,,,,',
'597,,,597,597,597,597,597,597,597,597,597,597,,597,597,,597,597,597',
',,,,,,,,,,,,,,,,,,,597,,,597,,,597,,,,,,,,,597,,,,,,,,597,,,,,597,597',
'597,597,597,597,,,,597,597,,,510,510,510,,510,597,,,510,510,,597,597',
'510,,510,510,510,510,510,510,510,,,,,510,510,510,510,510,510,510,,,510',
',,,,,,510,,,510,510,510,510,510,510,510,510,510,510,,510,510,,510,510',
'510,,,,,,,,,,,,,,,,,,,,510,,,510,,,510,,,,,,,,,510,,,,,,,,510,,,,,510',
'510,510,510,510,510,,,,510,510,,,303,303,303,,303,510,,,303,303,,510',
'510,303,,303,303,303,303,303,303,303,,,,,303,303,303,303,303,303,303',
',,303,,,,,,,303,,,303,303,303,303,303,303,303,303,303,303,,303,303,',
'303,303,303,,,,,,,,,,,,,,,,,,,,303,,,303,303,,303,,,,,,,,,303,,,,,,',
',303,,,,,303,303,303,303,303,303,,,,303,303,,,305,305,305,305,305,303',
',,305,305,,303,303,305,,305,305,305,305,305,305,305,,,,,305,305,305',
'305,305,305,305,,,305,,,,,,305,305,,305,305,305,305,305,305,305,305',
'305,305,305,,305,305,,305,305,305,,,,,,,,,,,,,,,,,,,,305,,,305,,,305',
',,,,305,,,,305,,,,,,,,305,,,,,305,305,305,305,305,305,,,,305,305,,,346',
'346,346,,346,305,,,346,346,,305,305,346,,346,346,346,346,346,346,346',
',,,,346,346,346,346,346,346,346,,,346,,,,,,,346,,,346,346,346,346,346',
'346,346,346,346,346,,346,346,,346,346,346,,,,,,,,,,,,,,,,,,,,346,,,346',
',,346,,,,,,,,,346,,,,,,,,346,,,,,346,346,346,346,346,346,,,,346,346',
',,345,345,345,,345,346,,,345,345,,346,346,345,,345,345,345,345,345,345',
'345,,,,,345,345,345,345,345,345,345,,,345,,,,,,,345,,,345,345,345,345',
'345,345,345,345,345,345,,345,345,,345,345,345,,,,,,,,,,,,,,,,,,,,345',
',,345,,,345,,,,,,,,,345,,,,,,,,345,,,,,345,345,345,345,345,345,,,,345',
'345,,,570,570,570,,570,345,,,570,570,,345,345,570,,570,570,570,570,570',
'570,570,,,,,570,570,570,570,570,570,570,,,570,,,,,,,570,,,570,570,570',
'570,570,570,570,570,570,570,,570,570,,570,570,570,,,,,,,,,,,,,,,,,,',
',570,,,570,,,570,,,,,,,,,570,,,,,,,,570,,,,,570,570,570,570,570,570',
',,,570,570,,,511,511,511,,511,570,,,511,511,,570,570,511,,511,511,511',
'511,511,511,511,,,,,511,511,511,511,511,511,511,,,511,,,,,,,511,,,511',
'511,511,511,511,511,511,511,511,511,,511,511,,511,511,511,,,,,,,,,,',
',,,,,,,,,511,,,511,,,511,,,,,,,,,511,,,,,,,,511,,,,,511,511,511,511',
'511,511,,,,511,511,,,515,515,515,,515,511,,,515,515,,511,511,515,,515',
'515,515,515,515,515,515,,,,,515,515,515,515,515,515,515,,,515,,,,,,',
'515,,,515,515,515,515,515,515,515,515,515,515,,515,515,,515,515,515',
',,,,,,,,,,,,,,,,,,,515,,,515,,,515,,,,,,,,,515,,,,,,,,515,,,,,515,515',
'515,515,515,515,,,,515,515,,,561,561,561,561,561,515,,,561,561,,515',
'515,561,,561,561,561,561,561,561,561,,,,,561,561,561,561,561,561,561',
',,561,,,,,,561,561,,561,561,561,561,561,561,561,561,561,561,561,,561',
'561,,561,561,561,,,,,,,,,,,,,,,,,,,,561,,,561,,,561,,,,,561,,,,561,',
',,,,,,561,,,,,561,561,561,561,561,561,,,,561,561,,,521,521,521,,521',
'561,,,521,521,,561,561,521,,521,521,521,521,521,521,521,,,,,521,521',
'521,521,521,521,521,,,521,,,,,,,521,,,521,521,521,521,521,521,521,521',
'521,521,,521,521,,521,521,521,,,,,,,,,,,,,,,,,,,,521,,,521,,,521,,,',
',521,,,,521,,,,,,,,521,,,,,521,521,521,521,521,521,,,,521,521,,,,,,',
'521,521,524,524,524,,524,521,521,,524,524,,,,524,,524,524,524,524,524',
'524,524,,,,,524,524,524,524,524,524,524,,,524,,,,,,,524,,,524,524,524',
'524,524,524,524,524,524,524,,524,524,,524,524,524,,,,,,,,,,,,,,,,,,',
',524,,,524,,,524,,,,,,,,,524,,,,,,,,524,,,,,524,524,524,524,524,524',
',,,524,524,,,,,,,524,524,556,556,556,556,556,524,524,,556,556,,,,556',
',556,556,556,556,556,556,556,,,,,556,556,556,556,556,556,556,,,556,',
',,,,556,556,,556,556,556,556,556,556,556,556,556,556,556,,556,556,,556',
'556,556,,,,,,,,,,,,,,,,,,,,556,,,556,,,556,,,,,556,,,,556,,,,,,,,556',
',,,,556,556,556,556,556,556,,,,556,556,,,552,552,552,552,552,556,,,552',
'552,,556,556,552,,552,552,552,552,552,552,552,,,,,552,552,552,552,552',
'552,552,,,552,,,,,,552,552,,552,552,552,552,552,552,552,552,552,552',
'552,,552,552,,552,552,552,,,,,,,,,,,,,,,,,,,,552,,,552,,,552,,,,,552',
',,,552,,,,,,,,552,,,,,552,552,552,552,552,552,,,,552,552,,,538,538,538',
',538,552,,,538,538,,552,552,538,,538,538,538,538,538,538,538,,,,,538',
'538,538,538,538,538,538,,,538,,,,,,,538,,,538,538,538,538,538,538,538',
'538,538,538,,538,538,,,,538,,,,,,,,,,,,,,,,,,,,538,,,538,,,538,,,,,',
',,,,,,,,,,,,,,,,538,538,538,538,538,538,,,,538,538,,,532,532,532,532',
'532,538,,,532,532,,538,538,532,,532,532,532,532,532,532,532,,,,,532',
'532,532,532,532,532,532,,,532,,,,,,532,532,,532,532,532,532,532,532',
'532,532,532,532,532,,532,532,,532,532,532,,,,,,,,,,,,,,,,,,,,532,,,532',
',,532,,,,,532,,,,532,,,,,,,,532,,,,,532,532,532,532,532,532,,,,532,532',
',,531,531,531,531,531,532,,,531,531,,532,532,531,,531,531,531,531,531',
'531,531,,,,,531,531,531,531,531,531,531,,,531,,,,,,531,531,,531,531',
'531,531,531,531,531,531,531,531,531,,531,531,,531,531,531,,,,,,,,,,',
',,,,,,,,,531,,,531,,,531,,,,,531,,,,531,,,,,,,,531,,,,,531,531,531,531',
'531,531,,,,531,531,,,790,790,790,790,790,531,,,790,790,,531,531,790',
',790,790,790,790,790,790,790,,,,,790,790,790,790,790,790,790,,,790,',
',,,,790,790,,790,790,790,790,790,790,790,790,790,790,790,,790,790,,790',
'790,790,,,,,,,,,,,,,,,,,,,,790,,,790,,,790,,,,,790,,,,790,,,,,,,,790',
',,,,790,790,790,790,790,790,,473,,790,790,,,,473,473,473,,790,473,473',
'473,,473,790,790,,,,,,,,473,,,,,,,,,473,473,,473,473,473,473,473,,,',
',,,,,,,,476,,,,,,,476,476,476,,,476,476,476,,476,,,,,473,,,,,476,,473',
',,,,473,473,476,476,,476,476,476,476,476,,,,,,,,,,,,,473,,,,,,,,,,,',
',473,,473,,,473,,476,,,,,,,476,,,,,476,476,,,,,,,,,,,,,,,,,,,,,476,',
',,,,,,,,,,,476,,476,,,476,398,398,398,398,398,398,398,398,398,398,398',
'398,398,398,398,398,398,398,398,398,398,398,398,398,,,398,398,398,398',
'398,398,398,398,398,398,398,398,398,398,398,398,398,398,398,398,398',
'398,398,,,398,,,,,,,,398,398,,398,398,398,398,398,398,398,,,398,,,,',
'398,398,398,398,,,,,,,,,,,,,398,398,,398,398,398,398,398,398,398,398',
'398,398,398,,,398,398,,,,,,,,,,398,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7',
'7,7,7,7,7,7,7,,,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,,7,',
',,,,,,7,7,,7,7,7,7,7,7,7,,,7,,,,,7,7,7,7,,,,,,,,,,,,,7,7,,7,7,7,7,7',
'7,7,7,7,7,7,,,7,7,,,,,,,,,,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8',
'8,8,8,8,,,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,,,8,,,,,,,,8',
'8,,8,8,8,8,8,8,8,,,8,,,,,8,8,8,8,,,,,,,,,,,,,8,8,,8,8,8,8,8,8,8,8,8',
'8,8,,,8,8,,,,,,,,,,8,394,394,394,394,394,394,394,394,394,394,394,394',
'394,394,394,394,394,394,394,394,394,394,394,394,,,394,394,394,394,394',
'394,394,394,394,394,394,394,394,394,394,394,394,394,394,394,394,394',
'394,,,394,,,,,,,,394,394,,394,394,394,394,394,394,394,,,394,,,,,394',
'394,394,394,,,,,,,,,,,,,394,394,,394,394,394,394,394,394,394,394,394',
'394,394,,,394,394,,,,,,,,,,394,190,190,190,190,190,190,190,190,190,190',
'190,190,190,190,190,190,190,190,190,190,190,190,190,190,,,190,190,190',
'190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190',
'190,190,190,190,190,190,190,,,,,,,190,190,,190,190,190,190,190,190,190',
',,190,,,,,190,190,190,190,,,,,,,,,,,,,190,190,,190,190,190,190,190,190',
'190,190,190,190,190,,,190,65,65,65,65,65,65,65,65,65,65,65,65,65,65',
'65,65,65,65,65,65,65,65,65,65,,,65,65,65,65,65,65,65,65,65,65,65,65',
'65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,,,,,,,65,65,,65,65,65,65',
'65,65,65,,,65,,,,,65,65,65,65,,,,,,65,,,,,,,65,65,,65,65,65,65,65,65',
'65,65,65,65,65,,,65,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79',
'79,79,79,79,79,79,79,79,,,79,79,79,79,79,79,79,79,79,79,79,79,79,79',
'79,79,79,79,79,79,79,79,79,79,79,79,79,,,,,,,79,79,,79,79,79,79,79,79',
'79,,,79,,,,,79,79,79,79,,,,,,,,,,,,,79,79,,79,79,79,79,79,79,79,79,79',
'79,79,,,79,721,721,721,721,721,721,721,721,721,721,721,721,721,721,721',
'721,721,721,721,721,721,721,721,721,,,721,721,721,721,721,721,721,721',
'721,721,721,721,721,721,721,721,721,721,721,721,721,721,721,,,721,,',
',,,,,721,721,,721,721,721,721,721,721,721,,,721,,,,,721,721,721,721',
',,,,,,,,,,,,721,721,,721,721,721,721,721,721,721,721,721,721,721,639',
'639,721,,639,,,,,,,,639,639,,639,639,639,639,639,639,639,,,639,,,,,639',
'639,639,639,,,,,,,,,,,,,639,639,,639,639,639,639,639,639,639,639,639',
'639,639,703,703,639,,703,,,,,,,,703,703,,703,703,703,703,703,703,703',
',,703,,,,,703,703,703,703,,,,,,,,,,,,,703,703,,703,703,703,703,703,703',
'703,703,703,703,703,513,513,703,,513,,,,,,,,513,513,,513,513,513,513',
'513,513,513,,,513,,,,,513,513,513,513,,,,,,,,,,,,,513,513,,513,513,513',
'513,513,513,513,513,513,513,513,777,777,513,,777,,,,,,,,777,777,,777',
'777,777,777,777,777,777,,,777,,,,,777,777,777,777,,,,,,,,,,,,,777,777',
',777,777,777,777,777,777,777,777,777,777,777,502,502,777,,502,,,,,,',
',502,502,,502,502,502,502,502,502,502,,,502,,,,,502,502,502,502,,,,',
',,,,,,,,502,502,,502,502,502,502,502,502,502,502,502,502,502,894,894',
'502,,894,,,,,,,,894,894,,894,894,894,894,894,894,894,,,894,,,,,894,894',
'894,894,,,,,,,,,,,,,894,894,,894,894,894,894,894,894,894,894,894,894',
'894,893,893,894,,893,,,,,,,,893,893,,893,893,893,893,893,893,893,,,893',
',,,,893,893,893,893,,,,,,893,,,,,,,893,893,,893,893,893,893,893,893',
'893,893,893,893,893,512,512,893,,512,,,,,,,,512,512,,512,512,512,512',
'512,512,512,,,512,,,,,512,512,512,512,,,,,,512,,,,,,,512,512,,512,512',
'512,512,512,512,512,512,512,512,512,261,261,512,,261,,,,,,,,261,261',
',261,261,261,261,261,261,261,,,261,,,,,261,261,261,261,,,,,,,,,,,,,261',
'261,,261,261,261,261,261,261,261,261,261,261,261,705,705,261,,705,,',
',,,,,705,705,,705,705,705,705,705,705,705,,,705,,,,,705,705,705,705',
',,,,,705,,,,,,,705,705,,705,705,705,705,705,705,705,705,705,705,705',
'428,428,705,,428,,,,,,,,428,428,,428,428,428,428,428,428,428,,,428,',
',,,428,428,428,428,,,,,,428,,,,,,,428,428,,428,428,428,428,428,428,428',
'428,428,428,428,429,429,428,,429,,,,,,,,429,429,,429,429,429,429,429',
'429,429,,,429,,,,,429,429,429,429,,,,,,,,,,,,,429,429,,429,429,429,429',
'429,429,429,429,429,429,429,199,199,429,,199,,,,,,,,199,199,,199,199',
'199,199,199,199,199,,,199,,,,,199,199,199,199,,,,,,,,,,,,,199,199,,199',
'199,199,199,199,199,199,199,199,199,199,501,501,199,,501,,,,,,,,501',
'501,,501,501,501,501,501,501,501,,,501,,,,,501,501,501,501,,,,,,501',
',,,,,,501,501,,501,501,501,501,501,501,501,501,501,501,501,260,260,501',
',260,,,,,,,,260,260,,260,260,260,260,260,260,260,,,260,,,,,260,260,260',
'260,,,,,,,,,,,,,260,260,,260,260,260,260,260,260,260,260,260,260,260',
'638,638,260,,638,,,,,,,,638,638,,638,638,638,638,638,638,638,,,638,',
',,,638,638,638,638,,,,,,,,,,,,,638,638,,638,638,638,638,638,638,638',
'638,638,638,638,198,198,638,,198,,,,,,,,198,198,,198,198,198,198,198',
'198,198,,,198,,,,,198,198,198,198,,,,,,198,,,,,,,198,198,,198,198,198',
'198,198,198,198,198,198,198,198,,,198' ]
        racc_action_check = arr = ::Array.new(22287, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_action_pointer = [
    -2,  1173,   nil,   262,   nil,  1628,  1042, 20486, 20606,  1026,
   998,   989,  1024,   310,   246,   207,   nil,  1628,  1750,  1262,
  1010,   nil,  2116,  2244,  2372,    -4,   104,  2740,  2868,   nil,
  2994,  3116,  3238,   nil,   887,   328,   955,   212,  3854,  3976,
  4098,   855,   541,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
  4460,   nil,  4593,  4715,  4843,    37,  3379,  5215,  5337,   nil,
   nil,  5459,  5581,   836,   nil, 20955,   nil,   nil,   nil,   nil,
   nil,   -48,   nil,   nil,   nil,   nil,   nil,   788,   745, 21064,
   nil,   nil,   nil,  6447,   nil,   nil,  6575,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   844,   nil,  6825,   nil,
   nil,   nil,  6947,  7069,  7191,  7313,  7435,  7557,   nil,   591,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
 20846,   664,   nil,  8045,  8167,  8289,  8411,  8533, 22176, 21940,
  8905,  9027,  9149,   nil,   321,   116,   691,    82,   581,   625,
 10009, 10131,   nil,   nil, 10253,   593, 10497, 10619, 10741, 10863,
 10985, 11107, 11229, 11351, 11473, 11595, 11717, 11839, 11961, 12083,
 12205, 12327, 12449, 12571, 12693, 12815, 12937, 13059, 13181, 13303,
 13425, 13547,   nil,   nil,   nil,   890,   nil,   523,   516,   nil,
 14041,   259, 14285,   nil,   nil,   nil,   nil, 14407,   nil,   nil,
 22058, 21704,   115, 14895, 15023,   nil,   nil,   nil,   nil,   nil,
   nil,   nil, 15151,   273,   nil,  1506,   688, 15645,   793,   959,
   995, 16139, 16267,   509,   346,   968,   344,   170,   165,    -1,
   nil,   229,   309,   nil, 17494,   nil,   642,   433,   543,   242,
   nil,   597,   nil, 18226,   nil, 18348,    34,   nil,   557,   464,
   105,   625,   401,   643,   nil,   233,   nil,   nil,   447, 14542,
   nil,   nil,   nil,   653,   655,   nil,   663,   672,   nil,   nil,
   nil,   nil,   nil,   nil,  2283,   nil,   nil,   nil,   749,   nil,
   nil,   831,   446,    83,    89, 18592, 18470,   287,   269,   798,
   926, 14773,   nil, 14651,   306,   336,   312,   408,   404,   382,
   412,    46,   nil,   184,   nil,   nil,  4971,   nil,   182,   nil,
   234,   nil,   -24,  1010,   -51,   nil,  1024,   -43,   nil,   231,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,  1070, 20726,   nil,   nil,   nil, 20366,  1085,
   nil,   nil,   634,   nil,   120,  1047,   nil,  1044,   nil,   nil,
  2500,  1055,   676,   326,   238,   nil,   nil,   nil,   366,  1055,
   499,   nil,   634,  1134,   nil,  1994,   nil,   nil, 21822, 21881,
  2622,   -44,  3488,  5093,  5703,   184,   nil,  4593,  3854,  1127,
  1005,  1039,  1035,  1033,  1032,  4715,  3359,  3112,  2994,  2821,
  2691,  4411,  3231,  3976,  3732,  3610,  3488,  4342,  1325,  1075,
  4220,  4098,  2116,    72,   nil,  5825,   nil,   nil,  6319,   nil,
  7801,   nil,   nil, 20186,   nil,   nil, 20240,   -47,   nil,  1006,
   969,   402,   913,   997,   nil,   nil,  9515,   -50,   156,   921,
   nil,   nil,  9881,   910,   849,   nil,   nil,   847, 15279,   859,
 16755, 21999, 21468,   410,   830,   nil,   nil,   790,   nil, 17128,
 18104, 18836, 21645, 21350,  2372, 18958,   843,   828,   712,   nil,
   nil, 19202,   nil,   nil, 19330,   nil,  5953,   nil,   nil,   nil,
   nil, 19946, 19824,   698,   nil,   835,   nil,   nil, 19702,  3251,
   nil,   399,   nil,   nil,   687,   nil,  2155,   nil,   636,   999,
   nil,   nil, 19580,   744,   nil,   nil, 19458,   170,   162,   706,
   709, 19080,   nil,   nil,    -2,   641,   nil,   315,   nil,    33,
 18714,   nil,  5594,   nil,   nil,   nil,     3,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   164,   nil,   nil,
   nil,   534,   nil,   nil,   nil,   nil,   nil, 17982,   525, 17860,
   774, 17738, 17616,   263,   nil,   nil,   nil, 17372,   229,   nil,
 17250,    15,    14, 17001, 16873,    74,   762,   nil, 16633,   nil,
  3129,   nil, 16511,   484,   nil,   668, 16389,   nil,   914,   nil,
   nil,   nil,   nil,   nil, 16017,   nil,  1092,   246, 22117, 21232,
 15889,  1134,   850,   nil,   nil,   814, 15767, 15523,   nil,  1680,
   -25, 15401,   -88,   nil,   -26,    92,   137,   142,   135,   338,
   208, 14529,  1012,   264,   268,   127,   322, 14163,   nil,   nil,
   434,   nil,   274,   414,   nil,   nil,   295,   nil,   331,   311,
   472,   465,   467,   nil,   nil,   507,  2411,   nil,   645,   nil,
   603,   nil,   nil,   nil,   nil,   nil,   618,   nil,   620, 13919,
 13797,   193,   nil, 21291, 13669, 21763,   nil,   nil, 10375,   232,
   -25,  9759,  9637,  3418,   131,   600,   602,   617,   nil,   611,
   nil, 21173,   663,   618,  9393,   nil,   nil,   nil,  1384,   633,
  9271,  8783,   nil,  1506,   nil,  1628,   nil,   nil,  1750,   nil,
  1872,  8661,  7923,  7679,   237,  2244,   nil,   697,   794,   nil,
   nil,   696,   nil,   nil,   732,   735,   340,   813,  6703,   nil,
   737,   838,   724,   342,   nil,   nil,   862,   nil,  6197,   747,
   794,   nil,   nil,   nil,   nil,   nil,   nil, 21409,   nil,   886,
   nil,   nil,   nil,   nil,  1249,   894,   nil,   nil,   895,  6075,
 20068,   nil,   nil,    77,   -19,   637,   nil,   839,   837,  4342,
   171,   nil,   nil,   956,   959,   847,   nil,  3168,   nil,   792,
   nil,   nil,    -6,  4220,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   869,   861,   nil,  2622,  3732,   nil,   nil,   nil,   912,
   882,   nil,   nil,   nil,  3610,   nil,   nil,    -7,  3366,   nil,
   933,  -113,   nil,   nil,  2500,   nil,  1019,  1027,  1994,  1872,
   nil,   nil,  1030,   nil,  1506,   nil,   nil,   966,   932,   947,
   nil,   962,   958,   nil,   nil,  2802,   nil,   nil,   nil,  1384,
   nil,  1262,   295,   282,  1049,   162,   nil,   nil,    70,   nil,
   nil,    63,  1012,   nil,  1113,   nil,   758,   nil,   nil,   nil,
   890,  1124,   762, 21586, 21527,   377,   499,   nil,   nil,   nil,
  1149,   nil,  1034,  1151,   nil,  1070,    63,    62,    71,   543,
   385,   nil,   nil,   nil,   557,   nil ]

racc_action_default = [
    -3,  -526,    -1,  -513,    -4,    -6,  -526,  -526,  -526,  -526,
  -526,  -526,  -526,  -526,  -267,   -36,   -37,  -526,  -526,   -42,
   -44,   -45,  -278,  -317,  -318,   -49,  -245,  -245,  -245,   -61,
  -524,   -65,   -72,   -74,  -526,  -444,  -526,  -526,  -526,  -526,
  -526,  -515,  -225,  -260,  -261,  -262,  -263,  -264,  -265,  -266,
  -503,  -269,  -526,  -524,  -524,  -286,  -524,  -526,  -526,  -291,
  -294,  -513,  -526,  -303,  -309,  -526,  -319,  -320,  -389,  -390,
  -391,  -392,  -393,  -524,  -396,  -524,  -524,  -524,  -524,  -524,
  -423,  -429,  -430,  -433,  -434,  -435,  -436,  -437,  -438,  -439,
  -440,  -441,  -442,  -443,  -446,  -447,  -526,    -2,  -514,  -520,
  -521,  -522,  -526,  -526,  -526,  -526,  -526,    -3,   -13,  -526,
  -100,  -101,  -102,  -103,  -104,  -105,  -106,  -109,  -110,  -111,
  -112,  -113,  -114,  -115,  -116,  -117,  -118,  -119,  -120,  -121,
  -122,  -123,  -124,  -125,  -126,  -127,  -128,  -129,  -130,  -131,
  -132,  -133,  -134,  -135,  -136,  -137,  -138,  -139,  -140,  -141,
  -142,  -143,  -144,  -145,  -146,  -147,  -148,  -149,  -150,  -151,
  -152,  -153,  -154,  -155,  -156,  -157,  -158,  -159,  -160,  -161,
  -162,  -163,  -164,  -165,  -166,  -167,  -168,  -169,  -170,  -171,
  -172,  -173,  -174,  -175,  -176,  -177,  -178,  -179,  -180,  -181,
  -526,   -18,  -107,  -524,  -526,  -526,  -526,  -524,  -526,  -526,
  -526,  -526,  -526,   -40,  -526,  -444,  -526,  -267,  -526,  -526,
  -524,  -526,   -41,  -217,  -526,  -526,  -526,  -526,  -526,  -526,
  -526,  -526,  -526,  -526,  -526,  -526,  -526,  -526,  -526,  -526,
  -526,  -526,  -526,  -526,  -526,  -526,  -526,  -526,  -526,  -526,
  -526,  -526,  -360,  -362,   -46,  -226,  -238,  -525,  -525,  -242,
  -526,  -253,  -526,  -278,  -317,  -318,  -497,  -526,   -47,   -48,
  -526,  -526,   -53,  -524,  -526,  -285,  -365,  -372,  -374,   -59,
  -370,   -60,  -526,  -513,   -10,   -11,   -61,  -524,  -526,  -526,
   -66,   -69,  -524,   -80,  -526,  -526,   -87,  -281,  -515,  -526,
  -321,  -371,  -526,   -71,  -526,   -76,  -274,  -431,  -432,  -526,
  -202,  -203,  -218,  -526,  -516,  -524,  -515,  -227,  -515,  -517,
  -517,  -526,  -517,  -526,  -494,  -517,  -287,  -288,  -526,  -526,
  -332,  -333,  -341,  -524,  -466,  -348,  -524,  -524,  -359,  -462,
  -463,  -464,  -465,  -467,  -526,  -478,  -483,  -484,  -486,  -487,
  -488,  -526,   -43,  -526,  -526,  -526,  -526,  -513,  -526,  -514,
  -526,  -526,  -306,  -526,  -100,  -101,  -137,  -138,  -154,  -159,
  -166,  -169,  -312,  -526,  -444,  -492,  -526,  -394,  -526,  -409,
  -526,  -411,  -526,  -526,  -526,  -401,  -526,  -526,  -407,  -526,
  -422,  -424,  -425,  -426,  -427,   916,    -5,  -523,   -19,   -20,
   -21,   -22,   -23,  -526,  -526,   -15,   -16,   -17,  -526,  -526,
   -25,   -33,  -182,  -253,  -526,  -526,   -26,   -34,   -35,   -27,
  -184,  -526,  -504,  -505,  -245,  -367,  -506,  -507,  -504,  -245,
  -505,  -369,  -509,  -510,   -32,  -191,   -38,   -39,  -526,  -526,
  -524,  -274,  -526,  -526,  -526,  -526,  -284,  -192,  -193,  -194,
  -195,  -196,  -197,  -198,  -199,  -204,  -205,  -206,  -207,  -208,
  -209,  -210,  -211,  -212,  -213,  -214,  -215,  -216,  -219,  -220,
  -221,  -222,  -526,  -524,  -239,  -526,  -252,  -240,  -526,  -250,
  -526,  -254,  -500,  -245,  -504,  -505,  -245,  -524,   -54,  -526,
  -515,  -515,  -525,  -238,  -246,  -247,  -526,  -524,  -524,  -526,
  -280,    -9,  -514,  -526,   -62,  -272,   -77,   -67,  -526,  -526,
  -524,  -526,  -526,   -86,  -526,  -431,  -432,   -73,   -78,  -526,
  -526,  -526,  -526,  -526,  -223,  -526,  -381,  -526,  -526,  -228,
  -229,  -519,  -518,  -231,  -519,  -276,  -519,  -496,  -277,  -495,
  -329,  -524,  -524,  -526,  -331,  -526,  -350,  -357,  -526,  -354,
  -355,  -526,  -358,  -466,  -526,  -469,  -526,  -471,  -473,  -477,
  -485,  -489,  -524,  -322,  -323,  -324,  -524,  -526,  -526,  -526,
  -526,  -524,  -376,  -300,   -96,  -526,   -98,  -526,  -267,  -526,
  -526,  -310,  -461,  -314,  -511,  -512,  -515,  -395,  -410,  -413,
  -414,  -416,  -397,  -412,  -398,  -399,  -400,  -526,  -403,  -405,
  -406,  -526,  -428,    -7,   -14,  -108,   -24,  -526,  -259,  -526,
  -275,  -526,  -526,   -55,  -236,  -237,  -366,  -526,   -57,  -368,
  -526,  -504,  -505,  -504,  -505,  -526,  -182,  -283,  -526,  -344,
  -526,  -346,  -524,  -525,  -251,  -255,  -526,  -498,  -526,  -499,
   -50,  -363,   -51,  -364,  -524,  -232,  -526,  -526,  -526,  -526,
  -526,   -42,  -526,  -244,  -248,  -526,  -524,  -524,  -279,   -12,
   -62,  -526,   -70,   -75,  -526,  -504,  -505,  -524,  -508,   -85,
  -526,  -526,  -190,  -200,  -201,  -526,  -524,  -524,  -270,  -271,
  -517,  -255,  -526,  -526,  -330,  -342,  -526,  -349,  -524,  -343,
  -526,  -524,  -524,  -479,  -468,  -526,  -526,  -476,  -524,  -325,
  -524,  -292,  -326,  -327,  -328,  -295,  -526,  -298,  -526,  -526,
  -526,   -96,   -97,  -526,  -524,  -526,  -304,  -448,  -526,  -526,
  -526,  -524,  -524,  -461,  -526,  -491,  -491,  -491,  -460,  -466,
  -481,  -526,  -526,  -526,  -524,  -402,  -404,  -408,  -183,  -257,
  -526,  -526,   -29,  -186,   -30,  -187,   -56,   -31,  -188,   -58,
  -189,  -526,  -526,  -526,  -275,  -224,  -345,  -526,  -526,  -241,
  -256,  -526,  -233,  -234,  -524,  -524,  -515,  -526,  -526,  -249,
  -526,  -526,   -68,   -81,   -79,  -282,  -524,  -339,  -524,  -382,
  -524,  -383,  -384,  -230,  -334,  -335,  -356,  -526,  -274,  -526,
  -352,  -353,  -470,  -472,  -475,  -526,  -336,  -337,  -526,  -524,
  -524,  -297,  -299,  -526,  -526,   -96,   -99,  -508,  -526,  -524,
  -526,  -450,  -307,  -526,  -526,  -515,  -452,  -526,  -456,  -526,
  -458,  -459,  -526,  -526,  -315,  -493,  -415,  -418,  -419,  -420,
  -421,  -526,  -258,   -28,  -185,  -526,  -347,  -361,   -52,  -526,
  -525,  -373,  -375,    -8,  -524,  -388,  -340,  -526,  -526,  -386,
  -273,  -524,  -474,  -289,  -526,  -290,  -526,  -526,  -526,  -524,
  -301,  -275,  -526,  -449,  -524,  -311,  -313,  -526,  -491,  -491,
  -490,  -491,  -526,  -482,  -480,  -461,  -417,  -235,  -243,  -526,
  -387,  -524,   -88,  -526,  -526,   -95,  -385,  -351,  -526,  -293,
  -296,  -524,  -524,  -305,  -526,  -451,  -526,  -454,  -455,  -457,
  -524,  -381,  -524,  -526,  -526,   -94,  -524,  -377,  -378,  -379,
  -526,  -308,  -491,  -526,  -380,  -526,  -504,  -505,  -508,   -93,
  -524,  -302,  -453,  -316,   -89,  -338 ]

clist = [
'35,467,545,10,414,419,310,315,303,246,246,246,311,517,481,247,247,247',
'552,556,666,560,362,280,113,113,320,328,266,270,35,283,283,10,5,203',
'381,401,408,507,308,478,116,116,262,269,271,312,537,212,715,540,542',
'624,12,712,624,631,97,98,633,293,283,108,192,364,473,476,278,683,306',
'544,276,675,643,342,342,290,290,342,520,523,113,527,12,702,529,785,691',
'695,101,343,344,578,2,347,113,863,35,588,622,10,569,645,571,345,35,35',
'290,10,10,766,718,627,634,789,348,346,790,700,342,342,342,342,646,647',
'678,244,258,259,682,882,5,351,799,788,388,389,390,391,392,5,370,372',
'570,854,379,381,101,353,310,711,12,572,721,865,411,808,810,811,12,12',
'318,717,530,317,844,681,316,627,313,365,484,305,863,706,463,487,488',
'897,699,770,837,367,308,368,573,405,405,374,587,715,363,35,377,816,10',
'723,724,805,858,393,394,350,191,833,783,113,386,1,35,,,10,545,,423,687',
',426,427,,,796,,400,406,409,624,435,,424,696,,414,419,,,,,,,,652,,,',
'12,,,483,246,,718,,504,482,247,,246,,,,,12,247,,,,,,,,518,,519,,35,',
',10,283,35,685,,10,508,,,533,328,266,,270,283,,,,,,887,888,,889,717',
'35,,657,10,915,497,,726,,,493,,675,657,276,499,,,,276,850,898,290,491',
'492,,12,,,,,12,683,631,633,290,,,715,912,,,860,890,860,,364,860,364',
'545,,,,,12,101,,,342,342,,,,480,485,841,,,,,,749,489,,557,558,,736,310',
'576,,,739,,615,,756,,,,904,762,290,859,290,861,,559,776,,718,780,781',
'14,,,113,,,,113,605,308,623,803,804,609,,,,,860,,,116,,,603,116,101',
',,608,14,286,286,773,,,754,755,423,636,637,,594,,842,310,595,,717,624',
',654,,,,,,,,,849,,286,,,,670,605,,902,605,,,,,,,,,308,,279,508,630,35',
',632,10,,,283,,,,,,306,,14,852,,,771,657,871,,14,14,,,,423,,,,,,,649',
',,,423,35,35,665,10,10,,,364,,,,,722,290,,12,,,,,,35,896,899,10,35,',
',10,,35,884,,10,,877,,,,,,,,,,,,,,,,,868,290,12,12,,710,,747,328,,623',
',,,,903,,,14,,,,,12,,,,12,,,,,12,,,14,,,,35,,,10,,757,,,,,732,734,35',
',,10,737,,,,,508,692,692,35,35,,10,10,283,399,764,,,707,310,,605,405',
'283,609,798,,,,,,279,,,,,,,12,,814,,,,,,,14,,,12,286,14,308,793,,,,',
'290,,657,12,12,286,,,,,290,,,,35,35,14,10,10,,,342,,423,,13,829,35,',
'342,10,,,,,,,794,,279,,113,204,204,279,800,,204,204,204,,,,,830,13,284',
'284,,605,605,,568,,568,823,,,12,12,,35,,,10,857,,204,204,,,12,204,204',
',,204,284,,,,,35,35,,10,10,423,,801,802,,35,,806,10,,,,,,,,,,,,,,,,',
',13,,12,,204,204,204,204,13,13,,,,,35,,,10,872,,,876,,12,12,310,,,,35',
',905,10,12,35,,,10,,,,,342,,,,,,,,,35,,,10,,,,878,308,,692,35,,290,10',
',853,12,,35,,,10,,,35,,,10,14,,,12,,,286,,12,,,423,,,,13,204,204,204',
'204,,,204,204,204,12,,,,,,,13,204,,,12,,,14,14,,,,12,,568,,,,12,,,,',
',,,,,14,,,,14,,,,,14,,,,,,,,,,,,,,,,204,204,,,,672,673,,,204,,,,,13',
',,,284,13,,,,,,,688,,,,690,284,,,,698,,,,,,,13,,,14,,,,,,,,,,,,14,,',
',,,,,,,,,14,14,,,,286,,,,,,,,204,204,286,,,,567,,567,,,,,,748,,,,,,',
'204,,,,,751,,,,,,,,,,,,760,761,,,,,,,,,307,314,,321,14,14,,,,,,,,,,',
'820,14,,,369,,371,371,375,378,371,,403,407,,,,,,,,204,,,,,,,,,,,,,,',
',,,,,,,,,14,,,,,,,821,,,,,,,,,,,,,,14,14,469,,471,,,,,472,14,204,,,',
',,13,,,,,,284,,204,,,,,836,,,,,,,,,,204,,,,,14,,,,875,,846,847,,,,13',
'13,,,14,,307,679,,14,,,,,,,,,,,,13,,,,13,14,,,,13,,,,,,,14,,204,870',
',,,,14,,,,,,14,,,,881,,,,,,,,,,,,,,,204,204,479,,,,204,891,,,,,,,,,',
',900,,,13,,,,,,,,,598,,910,13,,,,,,204,,,,,,13,13,,,,284,,,,,,,,,,284',
',536,,,536,536,,,,,,,,,,,,,,,,,,,,,,,,,625,,,628,,629,,,204,213,,,204',
'245,245,245,204,,,13,13,642,,,,,,,,300,301,302,13,,,,,,,204,,,,,245',
'245,,,,,,,,,,,625,,,628,,671,604,,,,,,,,,,,,,,13,,307,,,,,,,,,,,,,,',
',,,,13,13,,,,,,,,,13,,,,619,,,,,,,,,,604,,,604,619,,,,,,,,,729,619,619',
',,,,,13,,,,873,,307,,,,204,,,,,13,,,,750,13,,,,,,,,,,,,,625,,,,13,,',
',,,402,245,410,245,,13,425,,,,,,,13,,204,,769,,13,213,,437,438,439,440',
'441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457',
'458,459,460,461,462,,403,,,,,,,245,,245,,,,,245,,,,,,245,245,,,,,,,',
'245,,822,,,,,,,,,,,,,,,,,,,,,,,,,,,,403,514,,,,,,,,,,,604,,,,,,,,,767',
'772,,,,,,,,,,,536,,,536,536,,,,,,767,,767,,,,,,,,,,864,,,,307,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,671,,,,,,,,,,,,245,,,,,,,604,604,671,,,,,,,',
',,835,,,,839,,,245,,425,616,410,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,245,,',
'245,,245,,,,,,,,,,,,,,,,641,,,,,,,,,,,,536,,245,,,,,,,,,662,663,664',
',,,,,,,,,245,,,245,,245,,,,,,,,,,,,767,,,,,,,,,,,307,,,,,,,,,,,,,,,',
',,767,,,,,,,,,,289,289,,,,,,289,289,289,,,,,,,,,,,728,,245,289,733,735',
',,,,738,289,,740,,,,,,,,745,,,,,,,,245,,,,,,,,,,,,,,245,,,,,,,,,,,,',
',,,,,,,,,,,,,,245,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,245,,,,,245,,,,,,,',
',,,,,,,,,,,,,,,,,,245,824,,,,,,,,,,733,735,738,,,,,,,,,,,,,,,245,,289',
',289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289',
'289,289,289,289,289,289,289,289,289,,,,,,,,,289,,289,,,,,289,,,,,,,',
',,245,,,,,,,,,,,,824,,289,,,,,,,,,,,,,289,,,,,,,,245,289,,,,,,,,,,,',
',,,,,,,,245,,,,,,,,,,,,,,,,,,,,,,,245,,,,,289,,289,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,289,,,,,,,,,,,,,,,,,,,,,,,,,,,,289',
'289,289,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,289,,,289,,289,,,,,,,,,,,,,,,',
',,,,,,,,,,,,289,,,,,,,,,,,289,289,289,,,,,,,,,,289,,,289,,289,,,,,,',
',,,,,289,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,289',
',289,,,,,,,,,,,289,,,,,,,,289,,,,,,,,289,,,,,,,,,,,,,,,,,,,,,,,,,289',
',,,,,,,,,289,,,,,,289,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,289,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,289,,,,,,,,,,,289,289,289,,,,,,,,,,,,,,,289,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,289,,,,,,,,,,,,289',
',,,,,,,,,,,,289,,,,,,,,,,289,,,,,,,,,,,,,,,,,,,,,289' ]
        racc_goto_table = arr = ::Array.new(2821, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'45,59,138,18,34,34,56,56,52,30,30,30,23,8,33,54,54,54,76,76,10,79,48',
'42,49,49,103,107,57,57,45,45,45,18,7,27,48,25,25,44,30,36,51,51,35,35',
'35,54,109,19,110,109,109,60,21,82,60,58,4,6,58,43,45,15,15,45,34,34',
'40,139,27,140,39,106,60,27,27,53,53,27,55,55,49,55,21,46,55,77,78,78',
'81,17,17,129,2,17,49,143,45,129,37,18,47,61,47,86,45,45,53,18,18,11',
'108,146,37,87,4,88,89,90,27,27,27,27,37,37,111,32,32,32,111,91,7,92',
'93,11,17,17,17,17,7,7,126,126,94,95,126,48,81,96,56,97,21,98,99,100',
'23,137,137,137,21,21,101,111,102,75,104,105,73,146,72,71,62,85,143,80',
'113,115,116,117,118,119,120,124,30,125,84,54,54,127,128,110,83,45,130',
'131,18,132,133,135,136,2,28,20,16,12,141,49,5,1,45,,,18,138,,49,138',
',27,27,,,46,,19,19,19,60,27,,19,79,,34,34,,,,,,,,44,,,,21,,,30,30,,108',
',52,54,54,,30,,,,,21,54,,,,,,,,52,,52,,45,,,18,45,45,140,,18,42,,,103',
'107,57,,57,45,,,,,,137,137,,137,111,45,,34,18,77,43,,129,,,40,,106,34',
'39,40,,,,39,78,11,53,4,6,,21,,,,,21,139,58,58,53,,,110,137,,,108,82',
'108,,45,108,45,138,,,,,21,81,,,27,27,,,,32,32,111,,,,,,59,32,,17,17',
',36,56,27,,,36,,23,,33,,,,10,44,53,111,53,111,,4,109,,108,109,109,24',
',,49,,,,49,57,30,56,8,8,57,,,,,108,,,51,,,35,51,81,,,35,24,24,24,55',
',,34,34,49,52,52,,15,,138,56,15,,111,60,,23,,,,,,,,,76,,24,,,,56,57',
',111,57,,,,,,,,,30,,9,42,35,45,,35,18,,,45,,,,,,27,,24,8,,,25,34,76',
',24,24,,,,49,,,,,,,7,,,,49,45,45,27,18,18,,,45,,,,,52,53,,21,,,,,,45',
'76,79,18,45,,,18,,45,8,,18,,109,,,,,,,,,,,,,,,,,59,53,21,21,,27,,103',
'107,,56,,,,,8,,,24,,,,,21,,,,21,,,,,21,,,24,,,,45,,,18,,30,,,,,19,19',
'45,,,18,19,,,,,42,81,81,45,45,,18,18,45,9,42,,,81,56,,57,54,45,57,23',
',,,,,9,,,,,,,21,,48,,,,,,,24,,,21,24,24,30,54,,,,,53,,34,21,21,24,,',
',,53,,,,45,45,24,18,18,,,27,,49,,22,52,45,,27,18,,,,,,,17,,9,,49,22',
'22,9,17,,22,22,22,,,,,54,22,22,22,,57,57,,24,,24,19,,,21,21,,45,,,18',
'52,,22,22,,,21,22,22,,,22,22,,,,,45,45,,18,18,49,,81,81,,45,,81,18,',
',,,,,,,,,,,,,,,,22,,21,,22,22,22,22,22,22,,,,,45,,,18,45,,,18,,21,21',
'56,,,,45,,23,18,21,45,,,18,,,,,27,,,,,,,,,45,,,18,,,,17,30,,81,45,,53',
'18,,81,21,,45,,,18,,,45,,,18,24,,,21,,,24,,21,,,49,,,,22,22,22,22,22',
',,22,22,22,21,,,,,,,22,22,,,21,,,24,24,,,,21,,24,,,,21,,,,,,,,,,24,',
',,24,,,,,24,,,,,,,,,,,,,,,,22,22,,,,9,9,,,22,,,,,22,,,,22,22,,,,,,,9',
',,,9,22,,,,9,,,,,,,22,,,24,,,,,,,,,,,,24,,,,,,,,,,,,24,24,,,,24,,,,',
',,,22,22,24,,,,22,,22,,,,,,9,,,,,,,22,,,,,9,,,,,,,,,,,,9,9,,,,,,,,,14',
'14,,14,24,24,,,,,,,,,,,24,24,,,14,,14,14,14,14,14,,26,26,,,,,,,,22,',
',,,,,,,,,,,,,,,,,,,,,,24,,,,,,,9,,,,,,,,,,,,,,24,24,26,,26,,,,,26,24',
'22,,,,,,22,,,,,,22,,22,,,,,9,,,,,,,,,,22,,,,,24,,,,24,,9,9,,,,22,22',
',,24,,14,22,,24,,,,,,,,,,,,22,,,,22,24,,,,22,,,,,,,24,,22,9,,,,,24,',
',,,,24,,,,9,,,,,,,,,,,,,,,22,22,14,,,,22,9,,,,,,,,,,,9,,,22,,,,,,,,',
'26,,9,22,,,,,,22,,,,,,22,22,,,,22,,,,,,,,,,22,,14,,,14,14,,,,,,,,,,',
',,,,,,,,,,,,,,26,,,26,,26,,,22,29,,,22,29,29,29,22,,,22,22,26,,,,,,',
',29,29,29,22,,,,,,,22,,,,,29,29,,,,,,,,,,,26,,,26,,26,14,,,,,,,,,,,',
',,22,,14,,,,,,,,,,,,,,,,,,,22,22,,,,,,,,,22,,,,14,,,,,,,,,,14,,,14,14',
',,,,,,,,26,14,14,,,,,,22,,,,22,,14,,,,22,,,,,22,,,,26,22,,,,,,,,,,,',
',26,,,,22,,,,,,29,29,29,29,,22,29,,,,,,,22,,22,,26,,22,29,,29,29,29',
'29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29',
',26,,,,,,,29,,29,,,,,29,,,,,,29,29,,,,,,,,29,,26,,,,,,,,,,,,,,,,,,,',
',,,,,,,,26,29,,,,,,,,,,,14,,,,,,,,,14,14,,,,,,,,,,,14,,,14,14,,,,,,14',
',14,,,,,,,,,,26,,,,14,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,26,,,,,,,,,,,,29',
',,,,,,14,14,26,,,,,,,,,,14,,,,14,,,29,,29,29,29,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,29,,,29,,29,,,,,,,,,,,,,,,,29,,,,,,,,,,,,14,,29,,,,,,,,,29',
'29,29,,,,,,,,,,29,,,29,,29,,,,,,,,,,,,14,,,,,,,,,,,14,,,,,,,,,,,,,,',
',,,14,,,,,,,,,,38,38,,,,,,38,38,38,,,,,,,,,,,29,,29,38,29,29,,,,,29',
'38,,29,,,,,,,,29,,,,,,,,29,,,,,,,,,,,,,,29,,,,,,,,,,,,,,,,,,,,,,,,,',
',29,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,29,,,,,29,,,,,,,,,,,,,,,,,,,,,,,',
',,29,29,,,,,,,,,,29,29,29,,,,,,,,,,,,,,,29,,38,,38,38,38,38,38,38,38',
'38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,,,,,,,,,38',
',38,,,,,38,,,,,,,,,,29,,,,,,,,,,,,29,,38,,,,,,,,,,,,,38,,,,,,,,29,38',
',,,,,,,,,,,,,,,,,,,29,,,,,,,,,,,,,,,,,,,,,,,29,,,,,38,,38,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,38,,,,,,,,,,,,,,,,,,,,,,,,,',
',,38,38,38,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,38,,,38,,38,,,,,,,,,,,,,,,',
',,,,,,,,,,,,38,,,,,,,,,,,38,38,38,,,,,,,,,,38,,,38,,38,,,,,,,,,,,,38',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,38,,38,,,',
',,,,,,,38,,,,,,,,38,,,,,,,,38,,,,,,,,,,,,,,,,,,,,,,,,,38,,,,,,,,,,38',
',,,,,38,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,38,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,38,,,,,,,,,,,38,38,38,,,,,,,,,,,,,,,38,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,38,,,,,,,,,,,,38,,,,,,,,,,,,,38,,,,,,,',
',,38,,,,,,,,,,,,,,,,,,,,,38' ]
        racc_goto_check = arr = ::Array.new(2821, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_goto_pointer = [
   nil,   209,    94,   nil,    55,   110,    56,    34,  -292,   459,
  -496,  -555,  -561,   nil,  1062,    56,   196,    34,     3,    31,
   141,    54,   722,   -41,   408,  -157,   949,    18,    94,  1405,
   -13,   nil,   105,  -249,  -194,    18,  -221,  -363,  1951,    42,
    38,   nil,    -8,    29,  -255,     0,  -480,  -249,   -43,    17,
   nil,    35,   -33,    46,    -7,  -229,   -47,     2,  -416,  -247,
  -412,  -383,   -92,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   106,   116,   113,   nil,   109,  -325,  -601,  -469,  -327,
  -394,    87,  -517,   127,  -177,   122,    46,  -576,    57,  -577,
  -444,  -719,    70,  -572,  -208,  -657,    85,  -420,  -209,  -419,
  -659,   106,  -154,   -30,  -621,  -372,  -462,   -29,  -460,  -275,
  -522,  -409,   nil,   -66,   nil,   -90,   -90,  -702,  -382,  -486,
  -588,   nil,   nil,   nil,   112,   112,    67,   112,  -184,  -275,
   116,  -528,  -383,  -383,   nil,  -514,  -607,  -558,  -332,  -470,
  -263,  -480,   nil,  -712,   nil,   nil,  -355 ]

racc_goto_default = [
   nil,   nil,   nil,     3,   nil,     4,   349,   275,   nil,   516,
   nil,   786,   nil,   273,   274,   nil,   nil,   nil,   208,    16,
    11,   209,   299,   nil,   207,   nil,   251,    15,   nil,    19,
    20,    21,   nil,    25,   660,   nil,   nil,   nil,    26,    29,
   nil,    31,    34,    33,   nil,   205,   566,   nil,   115,   417,
   114,    69,   nil,    42,   309,   nil,   248,   415,   606,   464,
   249,   nil,   nil,   264,   466,    43,    44,    45,    46,    47,
    48,    49,   nil,   265,    55,   nil,   nil,   nil,   nil,   nil,
   nil,   553,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   323,   322,   677,   325,   nil,
   326,   327,   243,   nil,   421,   nil,   nil,   nil,   nil,   nil,
   nil,    68,    70,    71,    72,   nil,   nil,   nil,   nil,   583,
   nil,   nil,   nil,   nil,   380,   714,   716,   nil,   333,   335,
   nil,   547,   548,   720,   338,   341,   256 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 138, :_reduce_1,
  2, 139, :_reduce_2,
  0, 140, :_reduce_3,
  1, 140, :_reduce_4,
  3, 140, :_reduce_5,
  1, 142, :_reduce_none,
  4, 142, :_reduce_7,
  4, 145, :_reduce_8,
  2, 146, :_reduce_9,
  1, 150, :_reduce_10,
  1, 150, :_reduce_11,
  3, 150, :_reduce_12,
  0, 165, :_reduce_13,
  4, 144, :_reduce_14,
  3, 144, :_reduce_15,
  3, 144, :_reduce_none,
  3, 144, :_reduce_17,
  2, 144, :_reduce_18,
  3, 144, :_reduce_19,
  3, 144, :_reduce_20,
  3, 144, :_reduce_21,
  3, 144, :_reduce_22,
  3, 144, :_reduce_23,
  4, 144, :_reduce_none,
  3, 144, :_reduce_25,
  3, 144, :_reduce_26,
  3, 144, :_reduce_27,
  6, 144, :_reduce_none,
  5, 144, :_reduce_29,
  5, 144, :_reduce_none,
  5, 144, :_reduce_none,
  3, 144, :_reduce_none,
  3, 144, :_reduce_33,
  3, 144, :_reduce_34,
  3, 144, :_reduce_35,
  1, 144, :_reduce_none,
  1, 164, :_reduce_none,
  3, 164, :_reduce_38,
  3, 164, :_reduce_39,
  2, 164, :_reduce_40,
  2, 164, :_reduce_41,
  1, 164, :_reduce_none,
  1, 154, :_reduce_none,
  1, 156, :_reduce_none,
  1, 156, :_reduce_none,
  2, 156, :_reduce_46,
  2, 156, :_reduce_47,
  2, 156, :_reduce_48,
  1, 168, :_reduce_none,
  4, 168, :_reduce_none,
  4, 168, :_reduce_none,
  4, 173, :_reduce_none,
  2, 167, :_reduce_53,
  3, 167, :_reduce_none,
  4, 167, :_reduce_55,
  5, 167, :_reduce_none,
  4, 167, :_reduce_57,
  5, 167, :_reduce_none,
  2, 167, :_reduce_59,
  2, 167, :_reduce_60,
  1, 157, :_reduce_61,
  3, 157, :_reduce_62,
  1, 177, :_reduce_63,
  3, 177, :_reduce_64,
  1, 176, :_reduce_65,
  2, 176, :_reduce_66,
  3, 176, :_reduce_67,
  5, 176, :_reduce_none,
  2, 176, :_reduce_69,
  4, 176, :_reduce_none,
  2, 176, :_reduce_71,
  1, 176, :_reduce_72,
  3, 176, :_reduce_none,
  1, 179, :_reduce_74,
  3, 179, :_reduce_75,
  2, 178, :_reduce_76,
  3, 178, :_reduce_77,
  1, 181, :_reduce_none,
  3, 181, :_reduce_none,
  1, 180, :_reduce_80,
  4, 180, :_reduce_81,
  3, 180, :_reduce_82,
  3, 180, :_reduce_none,
  3, 180, :_reduce_none,
  3, 180, :_reduce_none,
  2, 180, :_reduce_none,
  1, 180, :_reduce_none,
  1, 155, :_reduce_88,
  4, 155, :_reduce_89,
  3, 155, :_reduce_90,
  3, 155, :_reduce_91,
  3, 155, :_reduce_92,
  3, 155, :_reduce_93,
  2, 155, :_reduce_94,
  1, 155, :_reduce_none,
  1, 183, :_reduce_none,
  2, 184, :_reduce_97,
  1, 184, :_reduce_98,
  3, 184, :_reduce_99,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_103,
  1, 185, :_reduce_104,
  1, 152, :_reduce_105,
  1, 152, :_reduce_none,
  1, 153, :_reduce_107,
  3, 153, :_reduce_108,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  3, 166, :_reduce_182,
  5, 166, :_reduce_183,
  3, 166, :_reduce_184,
  6, 166, :_reduce_185,
  5, 166, :_reduce_186,
  5, 166, :_reduce_none,
  5, 166, :_reduce_none,
  5, 166, :_reduce_none,
  4, 166, :_reduce_none,
  3, 166, :_reduce_none,
  3, 166, :_reduce_192,
  3, 166, :_reduce_193,
  3, 166, :_reduce_194,
  3, 166, :_reduce_195,
  3, 166, :_reduce_196,
  3, 166, :_reduce_197,
  3, 166, :_reduce_198,
  3, 166, :_reduce_199,
  4, 166, :_reduce_none,
  4, 166, :_reduce_none,
  2, 166, :_reduce_202,
  2, 166, :_reduce_203,
  3, 166, :_reduce_204,
  3, 166, :_reduce_205,
  3, 166, :_reduce_206,
  3, 166, :_reduce_207,
  3, 166, :_reduce_208,
  3, 166, :_reduce_209,
  3, 166, :_reduce_210,
  3, 166, :_reduce_211,
  3, 166, :_reduce_212,
  3, 166, :_reduce_213,
  3, 166, :_reduce_214,
  3, 166, :_reduce_215,
  3, 166, :_reduce_216,
  2, 166, :_reduce_217,
  2, 166, :_reduce_218,
  3, 166, :_reduce_219,
  3, 166, :_reduce_220,
  3, 166, :_reduce_221,
  3, 166, :_reduce_222,
  3, 166, :_reduce_223,
  5, 166, :_reduce_224,
  1, 166, :_reduce_none,
  1, 163, :_reduce_none,
  1, 160, :_reduce_227,
  2, 160, :_reduce_228,
  2, 160, :_reduce_229,
  4, 160, :_reduce_230,
  2, 160, :_reduce_231,
  3, 194, :_reduce_232,
  4, 194, :_reduce_233,
  4, 194, :_reduce_none,
  6, 194, :_reduce_none,
  1, 195, :_reduce_none,
  1, 195, :_reduce_none,
  1, 169, :_reduce_238,
  2, 169, :_reduce_239,
  2, 169, :_reduce_240,
  4, 169, :_reduce_241,
  1, 169, :_reduce_242,
  4, 198, :_reduce_none,
  1, 198, :_reduce_none,
  0, 200, :_reduce_245,
  2, 172, :_reduce_246,
  1, 199, :_reduce_none,
  2, 199, :_reduce_248,
  3, 199, :_reduce_249,
  2, 197, :_reduce_250,
  2, 196, :_reduce_251,
  1, 196, :_reduce_252,
  1, 191, :_reduce_253,
  2, 191, :_reduce_254,
  3, 191, :_reduce_255,
  4, 191, :_reduce_256,
  3, 162, :_reduce_257,
  4, 162, :_reduce_none,
  2, 162, :_reduce_259,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  0, 222, :_reduce_269,
  4, 190, :_reduce_270,
  4, 190, :_reduce_271,
  3, 190, :_reduce_272,
  3, 190, :_reduce_273,
  2, 190, :_reduce_274,
  4, 190, :_reduce_275,
  3, 190, :_reduce_276,
  3, 190, :_reduce_277,
  1, 190, :_reduce_278,
  4, 190, :_reduce_279,
  3, 190, :_reduce_280,
  1, 190, :_reduce_281,
  5, 190, :_reduce_282,
  4, 190, :_reduce_283,
  3, 190, :_reduce_284,
  2, 190, :_reduce_285,
  1, 190, :_reduce_none,
  2, 190, :_reduce_287,
  2, 190, :_reduce_288,
  6, 190, :_reduce_289,
  6, 190, :_reduce_290,
  0, 223, :_reduce_291,
  0, 224, :_reduce_292,
  7, 190, :_reduce_293,
  0, 225, :_reduce_294,
  0, 226, :_reduce_295,
  7, 190, :_reduce_296,
  5, 190, :_reduce_297,
  4, 190, :_reduce_298,
  5, 190, :_reduce_299,
  0, 227, :_reduce_300,
  0, 228, :_reduce_301,
  9, 190, :_reduce_none,
  0, 229, :_reduce_303,
  0, 230, :_reduce_304,
  7, 190, :_reduce_305,
  0, 231, :_reduce_306,
  0, 232, :_reduce_307,
  8, 190, :_reduce_308,
  0, 233, :_reduce_309,
  0, 234, :_reduce_310,
  6, 190, :_reduce_311,
  0, 235, :_reduce_312,
  6, 190, :_reduce_313,
  0, 236, :_reduce_314,
  0, 237, :_reduce_315,
  9, 190, :_reduce_316,
  1, 190, :_reduce_317,
  1, 190, :_reduce_318,
  1, 190, :_reduce_319,
  1, 190, :_reduce_none,
  1, 159, :_reduce_none,
  1, 213, :_reduce_none,
  1, 213, :_reduce_none,
  1, 213, :_reduce_none,
  2, 213, :_reduce_none,
  1, 215, :_reduce_none,
  1, 215, :_reduce_none,
  1, 215, :_reduce_none,
  2, 212, :_reduce_329,
  3, 238, :_reduce_330,
  2, 238, :_reduce_331,
  1, 238, :_reduce_none,
  1, 238, :_reduce_none,
  3, 239, :_reduce_334,
  3, 239, :_reduce_335,
  1, 214, :_reduce_336,
  0, 241, :_reduce_337,
  6, 214, :_reduce_338,
  1, 148, :_reduce_none,
  2, 148, :_reduce_340,
  1, 242, :_reduce_341,
  3, 242, :_reduce_342,
  3, 243, :_reduce_343,
  1, 174, :_reduce_none,
  2, 174, :_reduce_345,
  1, 174, :_reduce_346,
  3, 174, :_reduce_347,
  1, 244, :_reduce_348,
  2, 246, :_reduce_349,
  1, 246, :_reduce_350,
  6, 240, :_reduce_351,
  4, 240, :_reduce_352,
  4, 240, :_reduce_353,
  2, 240, :_reduce_354,
  2, 240, :_reduce_355,
  4, 240, :_reduce_356,
  2, 240, :_reduce_357,
  2, 240, :_reduce_358,
  1, 240, :_reduce_359,
  0, 250, :_reduce_360,
  5, 249, :_reduce_361,
  2, 170, :_reduce_362,
  4, 170, :_reduce_none,
  4, 170, :_reduce_none,
  2, 211, :_reduce_365,
  4, 211, :_reduce_366,
  3, 211, :_reduce_367,
  4, 211, :_reduce_368,
  3, 211, :_reduce_369,
  2, 211, :_reduce_370,
  1, 211, :_reduce_371,
  0, 252, :_reduce_372,
  5, 210, :_reduce_373,
  0, 253, :_reduce_374,
  5, 210, :_reduce_375,
  0, 255, :_reduce_376,
  6, 216, :_reduce_377,
  1, 254, :_reduce_378,
  1, 254, :_reduce_none,
  6, 147, :_reduce_380,
  0, 147, :_reduce_381,
  1, 256, :_reduce_382,
  1, 256, :_reduce_none,
  1, 256, :_reduce_none,
  2, 257, :_reduce_385,
  1, 257, :_reduce_386,
  2, 149, :_reduce_387,
  1, 149, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 203, :_reduce_392,
  1, 260, :_reduce_none,
  2, 260, :_reduce_none,
  3, 261, :_reduce_395,
  1, 261, :_reduce_396,
  3, 204, :_reduce_397,
  3, 205, :_reduce_398,
  3, 206, :_reduce_399,
  3, 206, :_reduce_400,
  1, 264, :_reduce_401,
  3, 264, :_reduce_402,
  1, 265, :_reduce_403,
  2, 265, :_reduce_404,
  3, 207, :_reduce_405,
  3, 207, :_reduce_406,
  1, 267, :_reduce_407,
  3, 267, :_reduce_408,
  1, 262, :_reduce_409,
  2, 262, :_reduce_410,
  1, 263, :_reduce_411,
  2, 263, :_reduce_412,
  1, 266, :_reduce_413,
  0, 269, :_reduce_414,
  3, 266, :_reduce_415,
  0, 270, :_reduce_416,
  4, 266, :_reduce_417,
  1, 268, :_reduce_418,
  1, 268, :_reduce_419,
  1, 268, :_reduce_420,
  1, 268, :_reduce_none,
  2, 188, :_reduce_422,
  1, 188, :_reduce_423,
  1, 271, :_reduce_none,
  1, 271, :_reduce_none,
  1, 271, :_reduce_none,
  1, 271, :_reduce_none,
  3, 259, :_reduce_428,
  1, 258, :_reduce_429,
  1, 258, :_reduce_430,
  2, 258, :_reduce_none,
  2, 258, :_reduce_none,
  1, 182, :_reduce_433,
  1, 182, :_reduce_434,
  1, 182, :_reduce_435,
  1, 182, :_reduce_436,
  1, 182, :_reduce_437,
  1, 182, :_reduce_438,
  1, 182, :_reduce_439,
  1, 182, :_reduce_440,
  1, 182, :_reduce_441,
  1, 182, :_reduce_442,
  1, 182, :_reduce_443,
  1, 208, :_reduce_444,
  1, 158, :_reduce_445,
  1, 161, :_reduce_446,
  1, 161, :_reduce_none,
  1, 217, :_reduce_448,
  3, 217, :_reduce_449,
  2, 217, :_reduce_450,
  4, 219, :_reduce_451,
  2, 219, :_reduce_452,
  6, 272, :_reduce_453,
  4, 272, :_reduce_454,
  4, 272, :_reduce_455,
  2, 272, :_reduce_456,
  4, 272, :_reduce_457,
  2, 272, :_reduce_458,
  2, 272, :_reduce_459,
  1, 272, :_reduce_460,
  0, 272, :_reduce_461,
  1, 275, :_reduce_462,
  1, 275, :_reduce_463,
  1, 275, :_reduce_464,
  1, 275, :_reduce_465,
  1, 275, :_reduce_466,
  1, 276, :_reduce_467,
  3, 276, :_reduce_468,
  1, 278, :_reduce_469,
  3, 278, :_reduce_none,
  1, 279, :_reduce_471,
  3, 279, :_reduce_472,
  1, 277, :_reduce_none,
  4, 277, :_reduce_none,
  3, 277, :_reduce_none,
  2, 277, :_reduce_none,
  1, 277, :_reduce_none,
  1, 247, :_reduce_478,
  3, 247, :_reduce_479,
  3, 280, :_reduce_480,
  1, 273, :_reduce_481,
  3, 273, :_reduce_482,
  1, 281, :_reduce_none,
  1, 281, :_reduce_none,
  2, 248, :_reduce_485,
  1, 248, :_reduce_486,
  1, 282, :_reduce_none,
  1, 282, :_reduce_none,
  2, 245, :_reduce_489,
  2, 274, :_reduce_490,
  0, 274, :_reduce_491,
  1, 220, :_reduce_492,
  4, 220, :_reduce_493,
  1, 209, :_reduce_494,
  2, 209, :_reduce_495,
  2, 209, :_reduce_496,
  1, 193, :_reduce_497,
  3, 193, :_reduce_498,
  3, 283, :_reduce_499,
  2, 283, :_reduce_500,
  1, 175, :_reduce_none,
  1, 175, :_reduce_none,
  1, 175, :_reduce_none,
  1, 171, :_reduce_none,
  1, 171, :_reduce_none,
  1, 171, :_reduce_none,
  1, 171, :_reduce_none,
  1, 251, :_reduce_none,
  1, 251, :_reduce_none,
  1, 251, :_reduce_none,
  1, 221, :_reduce_none,
  1, 221, :_reduce_none,
  0, 141, :_reduce_none,
  1, 141, :_reduce_none,
  0, 189, :_reduce_none,
  1, 189, :_reduce_none,
  0, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 218, :_reduce_none,
  1, 218, :_reduce_none,
  1, 143, :_reduce_none,
  2, 143, :_reduce_none,
  0, 151, :_reduce_none,
  0, 201, :_reduce_none ]

racc_reduce_n = 526

racc_shift_n = 916

racc_token_table = {
  false => 0,
  :error => 1,
  :kCLASS => 2,
  :kMODULE => 3,
  :kDEF => 4,
  :kUNDEF => 5,
  :kBEGIN => 6,
  :kRESCUE => 7,
  :kENSURE => 8,
  :kEND => 9,
  :kIF => 10,
  :kUNLESS => 11,
  :kTHEN => 12,
  :kELSIF => 13,
  :kELSE => 14,
  :kCASE => 15,
  :kWHEN => 16,
  :kWHILE => 17,
  :kUNTIL => 18,
  :kFOR => 19,
  :kBREAK => 20,
  :kNEXT => 21,
  :kREDO => 22,
  :kRETRY => 23,
  :kIN => 24,
  :kDO => 25,
  :kDO_COND => 26,
  :kDO_BLOCK => 27,
  :kRETURN => 28,
  :kYIELD => 29,
  :kSUPER => 30,
  :kSELF => 31,
  :kNIL => 32,
  :kTRUE => 33,
  :kFALSE => 34,
  :kAND => 35,
  :kOR => 36,
  :kNOT => 37,
  :kIF_MOD => 38,
  :kUNLESS_MOD => 39,
  :kWHILE_MOD => 40,
  :kUNTIL_MOD => 41,
  :kRESCUE_MOD => 42,
  :kALIAS => 43,
  :kDEFINED => 44,
  :klBEGIN => 45,
  :klEND => 46,
  :k__LINE__ => 47,
  :k__FILE__ => 48,
  :tIDENTIFIER => 49,
  :tFID => 50,
  :tGVAR => 51,
  :tIVAR => 52,
  :tCONSTANT => 53,
  :tCVAR => 54,
  :tNTH_REF => 55,
  :tBACK_REF => 56,
  :tSTRING_CONTENT => 57,
  :tINTEGER => 58,
  :tFLOAT => 59,
  :tREGEXP_END => 60,
  "+@" => 61,
  "-@" => 62,
  "-@NUM" => 63,
  :tPOW => 64,
  :tCMP => 65,
  :tEQ => 66,
  :tEQQ => 67,
  :tNEQ => 68,
  :tGEQ => 69,
  :tLEQ => 70,
  :tANDOP => 71,
  :tOROP => 72,
  :tMATCH => 73,
  :tNMATCH => 74,
  "." => 75,
  :tDOT2 => 76,
  :tDOT3 => 77,
  "[]" => 78,
  "[]=" => 79,
  :tLSHFT => 80,
  :tRSHFT => 81,
  "::" => 82,
  "::@" => 83,
  :tOP_ASGN => 84,
  :tASSOC => 85,
  :tLPAREN => 86,
  "(" => 87,
  ")" => 88,
  :tLPAREN_ARG => 89,
  :ARRAY_BEG => 90,
  "]" => 91,
  :tLBRACE => 92,
  :tLBRACE_ARG => 93,
  :tSTAR => 94,
  :tSTAR2 => 95,
  "&@" => 96,
  :tAMPER2 => 97,
  :tTILDE => 98,
  :tPERCENT => 99,
  :tDIVIDE => 100,
  "+" => 101,
  "-" => 102,
  :tLT => 103,
  :tGT => 104,
  :tPIPE => 105,
  :tBANG => 106,
  :tCARET => 107,
  :tLCURLY => 108,
  "}" => 109,
  :tBACK_REF2 => 110,
  :tSYMBEG => 111,
  :tSTRING_BEG => 112,
  :tXSTRING_BEG => 113,
  :tREGEXP_BEG => 114,
  :tWORDS_BEG => 115,
  :tAWORDS_BEG => 116,
  :tSTRING_DBEG => 117,
  :tSTRING_DVAR => 118,
  :tSTRING_END => 119,
  :tSTRING => 120,
  :tSYMBOL => 121,
  "\\n" => 122,
  :tEH => 123,
  :tCOLON => 124,
  "," => 125,
  :tSPACE => 126,
  ";" => 127,
  :tLABEL => 128,
  :tLAMBDA => 129,
  :tLAMBEG => 130,
  :kDO_LAMBDA => 131,
  :tEQL => 132,
  :tLOWEST => 133,
  "[@" => 134,
  "[" => 135,
  "{" => 136 }

racc_nt_base = 137

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "kCLASS",
  "kMODULE",
  "kDEF",
  "kUNDEF",
  "kBEGIN",
  "kRESCUE",
  "kENSURE",
  "kEND",
  "kIF",
  "kUNLESS",
  "kTHEN",
  "kELSIF",
  "kELSE",
  "kCASE",
  "kWHEN",
  "kWHILE",
  "kUNTIL",
  "kFOR",
  "kBREAK",
  "kNEXT",
  "kREDO",
  "kRETRY",
  "kIN",
  "kDO",
  "kDO_COND",
  "kDO_BLOCK",
  "kRETURN",
  "kYIELD",
  "kSUPER",
  "kSELF",
  "kNIL",
  "kTRUE",
  "kFALSE",
  "kAND",
  "kOR",
  "kNOT",
  "kIF_MOD",
  "kUNLESS_MOD",
  "kWHILE_MOD",
  "kUNTIL_MOD",
  "kRESCUE_MOD",
  "kALIAS",
  "kDEFINED",
  "klBEGIN",
  "klEND",
  "k__LINE__",
  "k__FILE__",
  "tIDENTIFIER",
  "tFID",
  "tGVAR",
  "tIVAR",
  "tCONSTANT",
  "tCVAR",
  "tNTH_REF",
  "tBACK_REF",
  "tSTRING_CONTENT",
  "tINTEGER",
  "tFLOAT",
  "tREGEXP_END",
  "\"+@\"",
  "\"-@\"",
  "\"-@NUM\"",
  "tPOW",
  "tCMP",
  "tEQ",
  "tEQQ",
  "tNEQ",
  "tGEQ",
  "tLEQ",
  "tANDOP",
  "tOROP",
  "tMATCH",
  "tNMATCH",
  "\".\"",
  "tDOT2",
  "tDOT3",
  "\"[]\"",
  "\"[]=\"",
  "tLSHFT",
  "tRSHFT",
  "\"::\"",
  "\"::@\"",
  "tOP_ASGN",
  "tASSOC",
  "tLPAREN",
  "\"(\"",
  "\")\"",
  "tLPAREN_ARG",
  "ARRAY_BEG",
  "\"]\"",
  "tLBRACE",
  "tLBRACE_ARG",
  "tSTAR",
  "tSTAR2",
  "\"&@\"",
  "tAMPER2",
  "tTILDE",
  "tPERCENT",
  "tDIVIDE",
  "\"+\"",
  "\"-\"",
  "tLT",
  "tGT",
  "tPIPE",
  "tBANG",
  "tCARET",
  "tLCURLY",
  "\"}\"",
  "tBACK_REF2",
  "tSYMBEG",
  "tSTRING_BEG",
  "tXSTRING_BEG",
  "tREGEXP_BEG",
  "tWORDS_BEG",
  "tAWORDS_BEG",
  "tSTRING_DBEG",
  "tSTRING_DVAR",
  "tSTRING_END",
  "tSTRING",
  "tSYMBOL",
  "\"\\\\n\"",
  "tEH",
  "tCOLON",
  "\",\"",
  "tSPACE",
  "\";\"",
  "tLABEL",
  "tLAMBDA",
  "tLAMBEG",
  "kDO_LAMBDA",
  "tEQL",
  "tLOWEST",
  "\"[@\"",
  "\"[\"",
  "\"{\"",
  "$start",
  "program",
  "top_compstmt",
  "top_stmts",
  "opt_terms",
  "top_stmt",
  "terms",
  "stmt",
  "bodystmt",
  "compstmt",
  "opt_rescue",
  "opt_else",
  "opt_ensure",
  "stmts",
  "none",
  "fitem",
  "undef_list",
  "expr_value",
  "lhs",
  "command_call",
  "mlhs",
  "var_lhs",
  "primary_value",
  "aref_args",
  "backref",
  "mrhs",
  "arg_value",
  "expr",
  "@1",
  "arg",
  "command",
  "block_command",
  "call_args",
  "block_call",
  "operation2",
  "command_args",
  "cmd_brace_block",
  "opt_block_var",
  "operation",
  "mlhs_basic",
  "mlhs_entry",
  "mlhs_head",
  "mlhs_item",
  "mlhs_node",
  "mlhs_post",
  "variable",
  "cname",
  "cpath",
  "fname",
  "op",
  "reswords",
  "symbol",
  "opt_nl",
  "primary",
  "args",
  "trailer",
  "assocs",
  "paren_args",
  "opt_paren_args",
  "opt_block_arg",
  "block_arg",
  "call_args2",
  "open_args",
  "@2",
  "none_block_pass",
  "literal",
  "strings",
  "xstring",
  "regexp",
  "words",
  "awords",
  "var_ref",
  "assoc_list",
  "brace_block",
  "method_call",
  "lambda",
  "then",
  "if_tail",
  "do",
  "case_body",
  "superclass",
  "term",
  "f_arglist",
  "singleton",
  "dot_or_colon",
  "@3",
  "@4",
  "@5",
  "@6",
  "@7",
  "@8",
  "@9",
  "@10",
  "@11",
  "@12",
  "@13",
  "@14",
  "@15",
  "@16",
  "@17",
  "@18",
  "f_larglist",
  "lambda_body",
  "block_param",
  "@19",
  "f_block_optarg",
  "f_block_opt",
  "block_args_tail",
  "f_block_arg",
  "opt_block_args_tail",
  "f_arg",
  "f_rest_arg",
  "do_block",
  "@20",
  "operation3",
  "@21",
  "@22",
  "cases",
  "@23",
  "exc_list",
  "exc_var",
  "numeric",
  "dsym",
  "string",
  "string1",
  "string_contents",
  "xstring_contents",
  "word_list",
  "word",
  "string_content",
  "qword_list",
  "string_dvar",
  "@24",
  "@25",
  "sym",
  "f_args",
  "f_optarg",
  "opt_f_block_arg",
  "f_norm_arg",
  "f_arg_item",
  "f_margs",
  "f_marg",
  "f_marg_list",
  "f_opt",
  "restarg_mark",
  "blkarg_mark",
  "assoc" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

def _reduce_1(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_2(val, _values, result)
                      comp = new_compstmt val[0]
                      if comp and comp.type == :begin and comp.size == 2
                        result = comp[1]
                        result.line = comp.line
                      else
                        result = comp
                      end
                    
    result
end

def _reduce_3(val, _values, result)
                      result = new_block
                    
    result
end

def _reduce_4(val, _values, result)
                      result = new_block val[0]
                    
    result
end

def _reduce_5(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

# reduce 6 omitted

def _reduce_7(val, _values, result)
                      result = val[2]
                    
    result
end

def _reduce_8(val, _values, result)
                      result = new_body val[0], val[1], val[2], val[3]
                    
    result
end

def _reduce_9(val, _values, result)
                      comp = new_compstmt val[0]
                      if comp and comp.type == :begin and comp.size == 2
                        result = comp[1]
                        result.line = comp.line
                      else
                        result = comp
                      end
                    
    result
end

def _reduce_10(val, _values, result)
                      result = new_block
                    
    result
end

def _reduce_11(val, _values, result)
                      result = new_block val[0]
                    
    result
end

def _reduce_12(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_13(val, _values, result)
                      lexer.lex_state = :expr_fname
                    
    result
end

def _reduce_14(val, _values, result)
                      result = s(:alias, val[1], val[3])
                    
    result
end

def _reduce_15(val, _values, result)
                      result = s(:valias, val[1].intern, val[2].intern)
                    
    result
end

# reduce 16 omitted

def _reduce_17(val, _values, result)
                      result = s(:valias, val[1].intern, val[2].intern)
                    
    result
end

def _reduce_18(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_19(val, _values, result)
                      result = new_if val[2], val[0], nil
                    
    result
end

def _reduce_20(val, _values, result)
                      result = new_if val[2], nil, val[0]
                    
    result
end

def _reduce_21(val, _values, result)
                      result = s(:while, val[2], val[0], true)
                    
    result
end

def _reduce_22(val, _values, result)
                      result = s(:until, val[2], val[0], true)
                    
    result
end

def _reduce_23(val, _values, result)
                      result = s(:rescue_mod, val[0], val[2])
                    
    result
end

# reduce 24 omitted

def _reduce_25(val, _values, result)
                      result = new_assign val[0], val[2]
                    
    result
end

def _reduce_26(val, _values, result)
                      result = s(:masgn, val[0], s(:to_ary, val[2]))
                    
    result
end

def _reduce_27(val, _values, result)
                      result = new_op_asgn val[1].intern, val[0], val[2]
                    
    result
end

# reduce 28 omitted

def _reduce_29(val, _values, result)
                      result = s(:op_asgn2, val[0], "#{val[2]}=".intern, val[3].intern, val[4])
                    
    result
end

# reduce 30 omitted

# reduce 31 omitted

# reduce 32 omitted

def _reduce_33(val, _values, result)
                      result = new_assign val[0], s(:svalue, val[2])
                    
    result
end

def _reduce_34(val, _values, result)
                      result = s(:masgn, val[0], s(:to_ary, val[2]))
                    
    result
end

def _reduce_35(val, _values, result)
                      result = s(:masgn, val[0], val[2])
                    
    result
end

# reduce 36 omitted

# reduce 37 omitted

def _reduce_38(val, _values, result)
                      result = s(:and, val[0], val[2])
                      result.line = val[0].line
                    
    result
end

def _reduce_39(val, _values, result)
                      result = s(:or, val[0], val[2])
                      result.line = val[0].line
                    
    result
end

def _reduce_40(val, _values, result)
                      result = s(:not, val[1])
                      result.line = val[1].line
                    
    result
end

def _reduce_41(val, _values, result)
                      result = s(:not, val[1])
                    
    result
end

# reduce 42 omitted

# reduce 43 omitted

# reduce 44 omitted

# reduce 45 omitted

def _reduce_46(val, _values, result)
                      args = val[1]
                      args = args[1] if args.size == 2
                      result = s(:return, args)
                    
    result
end

def _reduce_47(val, _values, result)
                      args = val[1]
                      args = args[1] if args.size == 2
                      result = s(:break, args)
                    
    result
end

def _reduce_48(val, _values, result)
                      args = val[1]
                      args = args[1] if args.size == 2
                      result = s(:next, args)
                    
    result
end

# reduce 49 omitted

# reduce 50 omitted

# reduce 51 omitted

# reduce 52 omitted

def _reduce_53(val, _values, result)
                      result = new_call nil, val[0].intern, val[1]
                    
    result
end

# reduce 54 omitted

def _reduce_55(val, _values, result)
                      result = new_call val[0], val[2].intern, val[3]
                    
    result
end

# reduce 56 omitted

def _reduce_57(val, _values, result)
                    result = new_call val[0], val[2].intern, val[3]
                  
    result
end

# reduce 58 omitted

def _reduce_59(val, _values, result)
                      result = new_super val[1]
                    
    result
end

def _reduce_60(val, _values, result)
                      result = new_yield val[1]
                    
    result
end

def _reduce_61(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_62(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_63(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_64(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_65(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_66(val, _values, result)
                      result = val[0] << val[1]
                    
    result
end

def _reduce_67(val, _values, result)
                      result = val[0] << s(:splat, val[2])
                    
    result
end

# reduce 68 omitted

def _reduce_69(val, _values, result)
                      result = val[0] << s(:splat)
                    
    result
end

# reduce 70 omitted

def _reduce_71(val, _values, result)
                      result = s(:array, s(:splat, val[1]))
                    
    result
end

def _reduce_72(val, _values, result)
                      result = s(:array, s(:splat))
                    
    result
end

# reduce 73 omitted

def _reduce_74(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_75(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_76(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

def _reduce_77(val, _values, result)
                      result = val[0] << val[1]
                    
    result
end

# reduce 78 omitted

# reduce 79 omitted

def _reduce_80(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_81(val, _values, result)
                      args = val[2]
                      args.type = :arglist if args.type == :array
                      result = s(:attrasgn, val[0], :[]=, args)
                    
    result
end

def _reduce_82(val, _values, result)
                      result = new_call val[0], val[2].intern, s(:arglist)
                    
    result
end

# reduce 83 omitted

# reduce 84 omitted

# reduce 85 omitted

# reduce 86 omitted

# reduce 87 omitted

def _reduce_88(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_89(val, _values, result)
                      args = val[2]
                      args.type = :arglist if args.type == :array
                      result = s(:attrasgn, val[0], :[]=, args)
                    
    result
end

def _reduce_90(val, _values, result)
                      result = s(:attrasgn, val[0], "#{val[2]}=".intern, s(:arglist))
                    
    result
end

def _reduce_91(val, _values, result)
                      result = s(:attrasgn, val[0], "#{val[2]}=".intern, s(:arglist))
                    
    result
end

def _reduce_92(val, _values, result)
                      result = s(:attrasgn, val[0], "#{val[2]}=".intern, s(:arglist))
                    
    result
end

def _reduce_93(val, _values, result)
                      result = s(:colon2, val[0], val[2].intern)
                    
    result
end

def _reduce_94(val, _values, result)
                      result = s(:colon3, val[1].intern)
                    
    result
end

# reduce 95 omitted

# reduce 96 omitted

def _reduce_97(val, _values, result)
                      result = s(:colon3, val[1].intern)
                    
    result
end

def _reduce_98(val, _values, result)
                      result = val[0].intern
                    
    result
end

def _reduce_99(val, _values, result)
                      result = s(:colon2, val[0], val[2].intern)
                    
    result
end

# reduce 100 omitted

# reduce 101 omitted

# reduce 102 omitted

def _reduce_103(val, _values, result)
                      lexer.lex_state = :expr_end
                      result = val[0]
                    
    result
end

def _reduce_104(val, _values, result)
                      lexer.lex_state = :expr_end
                      result = val[0]
                    
    result
end

def _reduce_105(val, _values, result)
                      result = s(:sym, val[0].intern)
                    
    result
end

# reduce 106 omitted

def _reduce_107(val, _values, result)
                      result = s(:undef, val[0])
                    
    result
end

def _reduce_108(val, _values, result)
                      result = val[0] << val[2]
                    
    result
end

# reduce 109 omitted

# reduce 110 omitted

# reduce 111 omitted

# reduce 112 omitted

# reduce 113 omitted

# reduce 114 omitted

# reduce 115 omitted

# reduce 116 omitted

# reduce 117 omitted

# reduce 118 omitted

# reduce 119 omitted

# reduce 120 omitted

# reduce 121 omitted

# reduce 122 omitted

# reduce 123 omitted

# reduce 124 omitted

# reduce 125 omitted

# reduce 126 omitted

# reduce 127 omitted

# reduce 128 omitted

# reduce 129 omitted

# reduce 130 omitted

# reduce 131 omitted

# reduce 132 omitted

# reduce 133 omitted

# reduce 134 omitted

# reduce 135 omitted

# reduce 136 omitted

# reduce 137 omitted

# reduce 138 omitted

# reduce 139 omitted

# reduce 140 omitted

# reduce 141 omitted

# reduce 142 omitted

# reduce 143 omitted

# reduce 144 omitted

# reduce 145 omitted

# reduce 146 omitted

# reduce 147 omitted

# reduce 148 omitted

# reduce 149 omitted

# reduce 150 omitted

# reduce 151 omitted

# reduce 152 omitted

# reduce 153 omitted

# reduce 154 omitted

# reduce 155 omitted

# reduce 156 omitted

# reduce 157 omitted

# reduce 158 omitted

# reduce 159 omitted

# reduce 160 omitted

# reduce 161 omitted

# reduce 162 omitted

# reduce 163 omitted

# reduce 164 omitted

# reduce 165 omitted

# reduce 166 omitted

# reduce 167 omitted

# reduce 168 omitted

# reduce 169 omitted

# reduce 170 omitted

# reduce 171 omitted

# reduce 172 omitted

# reduce 173 omitted

# reduce 174 omitted

# reduce 175 omitted

# reduce 176 omitted

# reduce 177 omitted

# reduce 178 omitted

# reduce 179 omitted

# reduce 180 omitted

# reduce 181 omitted

def _reduce_182(val, _values, result)
                      result = new_assign val[0], val[2]
                    
    result
end

def _reduce_183(val, _values, result)
                      result = new_assign val[0], s(:rescue_mod, val[2], val[4])
                    
    result
end

def _reduce_184(val, _values, result)
                      result = new_op_asgn val[1].intern, val[0], val[2]
                    
    result
end

def _reduce_185(val, _values, result)
                      args = val[2]
                      args.type = :arglist if args.type == :array
                      result = s(:op_asgn1, val[0], val[2], val[4].intern, val[5])
                      result.line = val[0].line
                    
    result
end

def _reduce_186(val, _values, result)
                      result = s(:op_asgn2, val[0], "#{val[2]}=".intern, val[3].intern, val[4])
                    
    result
end

# reduce 187 omitted

# reduce 188 omitted

# reduce 189 omitted

# reduce 190 omitted

# reduce 191 omitted

def _reduce_192(val, _values, result)
                      result = s(:dot2, val[0], val[2])
                      result.line = val[0].line
                    
    result
end

def _reduce_193(val, _values, result)
                      result = s(:dot3, val[0], val[2])
                      result.line = val[0].line
                    
    result
end

def _reduce_194(val, _values, result)
                      result = new_call val[0], :"+", s(:arglist, val[2])
                    
    result
end

def _reduce_195(val, _values, result)
                      result = new_call val[0], :"-", s(:arglist, val[2])
                    
    result
end

def _reduce_196(val, _values, result)
                      result = new_call val[0], :"*", s(:arglist, val[2])
                    
    result
end

def _reduce_197(val, _values, result)
                      result = new_call val[0], :"/", s(:arglist, val[2])
                    
    result
end

def _reduce_198(val, _values, result)
                      result = new_call val[0], :"%", s(:arglist, val[2])
                    
    result
end

def _reduce_199(val, _values, result)
                      result = new_call val[0], :"**", s(:arglist, val[2])
                    
    result
end

# reduce 200 omitted

# reduce 201 omitted

def _reduce_202(val, _values, result)
                      result = new_call val[1], :"+@", s(:arglist)
                      result = val[1] if [:int, :float].include? val[1].type
                    
    result
end

def _reduce_203(val, _values, result)
                      result = new_call val[1], :"-@", s(:arglist)
                      if val[1].type == :int
                        val[1][1] = -val[1][1]
                        result = val[1]
                      elsif val[1].type == :float
                        val[1][1] = -val[1][1].to_f
                        result = val[1]
                      end
                    
    result
end

def _reduce_204(val, _values, result)
                      result = new_call val[0], :"|", s(:arglist, val[2])
                    
    result
end

def _reduce_205(val, _values, result)
                      result = new_call val[0], :"^", s(:arglist, val[2])
                    
    result
end

def _reduce_206(val, _values, result)
                      result = new_call val[0], :"&", s(:arglist, val[2])
                    
    result
end

def _reduce_207(val, _values, result)
                      result = new_call val[0], :"<=>", s(:arglist, val[2])
                    
    result
end

def _reduce_208(val, _values, result)
                      result = new_call val[0], :">", s(:arglist, val[2])
                    
    result
end

def _reduce_209(val, _values, result)
                      result = new_call val[0], :">=", s(:arglist, val[2])
                    
    result
end

def _reduce_210(val, _values, result)
                      result = new_call val[0], :"<", s(:arglist, val[2])
                    
    result
end

def _reduce_211(val, _values, result)
                      result = new_call val[0], :"<=", s(:arglist, val[2])
                    
    result
end

def _reduce_212(val, _values, result)
                      result = new_call val[0], :"==", s(:arglist, val[2])
                    
    result
end

def _reduce_213(val, _values, result)
                      result = new_call val[0], :"===", s(:arglist, val[2])
                    
    result
end

def _reduce_214(val, _values, result)
                      result = s(:not, new_call(val[0], :"==", s(:arglist, val[2])))
                    
    result
end

def _reduce_215(val, _values, result)
                      result = new_call val[0], :"=~", s(:arglist, val[2])
                    
    result
end

def _reduce_216(val, _values, result)
                      result = s(:not, new_call(val[0], :"=~", s(:arglist, val[2])))
                    
    result
end

def _reduce_217(val, _values, result)
                      result = s(:not, val[1])
                    
    result
end

def _reduce_218(val, _values, result)
                      result = new_call val[1], :"~", s(:arglist)
                    
    result
end

def _reduce_219(val, _values, result)
                      result = new_call val[0], :"<<", s(:arglist, val[2])
                    
    result
end

def _reduce_220(val, _values, result)
                      result = new_call val[0], :">>", s(:arglist, val[2])
                    
    result
end

def _reduce_221(val, _values, result)
                      result = s(:and, val[0], val[2])
                      result.line = val[0].line
                    
    result
end

def _reduce_222(val, _values, result)
                      result = s(:or, val[0], val[2])
                      result.line = val[0].line
                    
    result
end

def _reduce_223(val, _values, result)
                      result = s(:defined, val[2])
                    
    result
end

def _reduce_224(val, _values, result)
                      result = s(:if, val[0], val[2], val[4])
                      result.line = val[0].line
                    
    result
end

# reduce 225 omitted

# reduce 226 omitted

def _reduce_227(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_228(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

def _reduce_229(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_230(val, _values, result)
                      val[0] << s(:hash, *val[2])
                      result = val[0]
                    
    result
end

def _reduce_231(val, _values, result)
                      result = s(:array, s(:hash, *val[0]))
                    
    result
end

def _reduce_232(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_233(val, _values, result)
                      result = val[1]
                    
    result
end

# reduce 234 omitted

# reduce 235 omitted

# reduce 236 omitted

# reduce 237 omitted

def _reduce_238(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

def _reduce_239(val, _values, result)
                      result = val[0]
                      add_block_pass val[0], val[1]
                    
    result
end

def _reduce_240(val, _values, result)
                      result = s(:arglist, s(:hash, *val[0]))
                      add_block_pass result, val[1]
                    
    result
end

def _reduce_241(val, _values, result)
                      result = val[0]
                      result << s(:hash, *val[2])
                    
    result
end

def _reduce_242(val, _values, result)
                      result = s(:arglist)
                      add_block_pass result, val[0]
                    
    result
end

# reduce 243 omitted

# reduce 244 omitted

def _reduce_245(val, _values, result)
                      lexer.cmdarg_push 1
                    
    result
end

def _reduce_246(val, _values, result)
                      lexer.cmdarg_pop
                      result = val[1]
                    
    result
end

# reduce 247 omitted

def _reduce_248(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_249(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_250(val, _values, result)
                      result = s(:block_pass, val[1])
                    
    result
end

def _reduce_251(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_252(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_253(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

def _reduce_254(val, _values, result)
                      result = s(:array, s(:splat, val[1]))
                    
    result
end

def _reduce_255(val, _values, result)
                      result = val[0] << val[2]
                    
    result
end

def _reduce_256(val, _values, result)
                      result  = val[0] << s(:splat, val[3])
                    
    result
end

def _reduce_257(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

# reduce 258 omitted

def _reduce_259(val, _values, result)
                      result = s(:splat, val[1])
                    
    result
end

# reduce 260 omitted

# reduce 261 omitted

# reduce 262 omitted

# reduce 263 omitted

# reduce 264 omitted

# reduce 265 omitted

# reduce 266 omitted

# reduce 267 omitted

# reduce 268 omitted

def _reduce_269(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_270(val, _values, result)
                      result = s(:begin, val[2])
                      result.line = val[1]
                    
    result
end

def _reduce_271(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_272(val, _values, result)
                      result = s(:paren, val[1] || s(:nil))
                    
    result
end

def _reduce_273(val, _values, result)
                      result = s(:colon2, val[0], val[2].intern)
                    
    result
end

def _reduce_274(val, _values, result)
                      result = s(:colon3, val[1])
                    
    result
end

def _reduce_275(val, _values, result)
                      result = new_call val[0], :[], val[2]
                    
    result
end

def _reduce_276(val, _values, result)
                      result = val[1] || s(:array)
                    
    result
end

def _reduce_277(val, _values, result)
                      result = s(:hash, *val[1])
                    
    result
end

def _reduce_278(val, _values, result)
                      result = s(:return)
                    
    result
end

def _reduce_279(val, _values, result)
                      result = new_yield val[2]
                    
    result
end

def _reduce_280(val, _values, result)
                      result = s(:yield)
                    
    result
end

def _reduce_281(val, _values, result)
                      result = s(:yield)
                    
    result
end

def _reduce_282(val, _values, result)
                      result = s(:defined, val[3])
                    
    result
end

def _reduce_283(val, _values, result)
                      result = s(:not, val[2])
                      result.line = val[2].line
                    
    result
end

def _reduce_284(val, _values, result)
                      result = s(:not, s(:nil))
                    
    result
end

def _reduce_285(val, _values, result)
                      result = new_call nil, val[0].intern, s(:arglist)
                      result << val[1]
                    
    result
end

# reduce 286 omitted

def _reduce_287(val, _values, result)
                      val[0] << val[1]
                      result = val[0]
                    
    result
end

def _reduce_288(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_289(val, _values, result)
                      result = new_if val[1], val[3], val[4]
                    
    result
end

def _reduce_290(val, _values, result)
                      result = new_if val[1], val[4], val[3]
                    
    result
end

def _reduce_291(val, _values, result)
                      lexer.cond_push 1
                      result = lexer.line
                    
    result
end

def _reduce_292(val, _values, result)
                      lexer.cond_pop
                    
    result
end

def _reduce_293(val, _values, result)
                      result = s(:while, val[2], val[5], true)
                      result.line = val[1]
                    
    result
end

def _reduce_294(val, _values, result)
                      lexer.cond_push 1
                      result = lexer.line
                    
    result
end

def _reduce_295(val, _values, result)
                      lexer.cond_pop
                    
    result
end

def _reduce_296(val, _values, result)
                      result = s(:until, val[2], val[5], true)
                      result.line = val[1]
                    
    result
end

def _reduce_297(val, _values, result)
                      result = s(:case, val[1], *val[3])
                      result.line = val[1].line
                    
    result
end

def _reduce_298(val, _values, result)
                      result = s(:case, nil, *val[2])
                      # result.line = val[2].line
                    
    result
end

def _reduce_299(val, _values, result)
                      result = s(:case, nil, val[3])
                      # result.line = val[3].line
                    
    result
end

def _reduce_300(val, _values, result)
                      # ...
                    
    result
end

def _reduce_301(val, _values, result)
                      # ...
                    
    result
end

# reduce 302 omitted

def _reduce_303(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_304(val, _values, result)
                      # ...
                    
    result
end

def _reduce_305(val, _values, result)
                      result = new_class val[2], val[3], val[5]
                      result.line = val[1]
                      result.end_line = lexer.line
                    
    result
end

def _reduce_306(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_307(val, _values, result)
                      # ...
                    
    result
end

def _reduce_308(val, _values, result)
                      result = new_sclass val[3], val[6]
                      result.line = val[2]
                    
    result
end

def _reduce_309(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_310(val, _values, result)
                      # ...
                    
    result
end

def _reduce_311(val, _values, result)
                      result = new_module val[2], val[4]
                      result.line = val[1]
                      result.end_line = lexer.line
                    
    result
end

def _reduce_312(val, _values, result)
                      result = lexer.scope_line
                      push_scope
                    
    result
end

def _reduce_313(val, _values, result)
                      result = new_def val[2], nil, val[1], val[3], val[4]
                      pop_scope
                    
    result
end

def _reduce_314(val, _values, result)
                       lexer.lex_state = :expr_fname
                    
    result
end

def _reduce_315(val, _values, result)
                      result = lexer.scope_line
                      push_scope
                    
    result
end

def _reduce_316(val, _values, result)
                      result = new_def val[5], val[1], val[4], val[6], val[7]
                      pop_scope
                    
    result
end

def _reduce_317(val, _values, result)
                      result = s(:break)
                    
    result
end

def _reduce_318(val, _values, result)
                      result = s(:next)
                    
    result
end

def _reduce_319(val, _values, result)
                      result = s(:redo)
                    
    result
end

# reduce 320 omitted

# reduce 321 omitted

# reduce 322 omitted

# reduce 323 omitted

# reduce 324 omitted

# reduce 325 omitted

# reduce 326 omitted

# reduce 327 omitted

# reduce 328 omitted

def _reduce_329(val, _values, result)
                      result = new_call nil, :lambda, s(:arglist)
                      result << new_iter(val[0], val[1])
                    
    result
end

def _reduce_330(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_331(val, _values, result)
                      result = nil
                    
    result
end

# reduce 332 omitted

# reduce 333 omitted

def _reduce_334(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_335(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_336(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_337(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_338(val, _values, result)
                      result = s(:if, val[2], val[4], val[5])
                      result.line = val[1]
                    
    result
end

# reduce 339 omitted

def _reduce_340(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_341(val, _values, result)
                      result = s(:block, val[0])
                    
    result
end

def _reduce_342(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_343(val, _values, result)
                      result = new_assign new_assignable(s(:identifier, val[0].intern)), val[2]
                    
    result
end

# reduce 344 omitted

def _reduce_345(val, _values, result)
                      result = 0
                    
    result
end

def _reduce_346(val, _values, result)
                      result = 0
                    
    result
end

def _reduce_347(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_348(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_349(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_350(val, _values, result)
                      nil
                    
    result
end

def _reduce_351(val, _values, result)
                      result = new_block_args val[0], val[2], val[4], val[5]
                    
    result
end

def _reduce_352(val, _values, result)
                      result = new_block_args val[0], val[2], nil, val[3]
                    
    result
end

def _reduce_353(val, _values, result)
                      result = new_block_args val[0], nil, val[2], val[3]
                    
    result
end

def _reduce_354(val, _values, result)
                      result = new_block_args val[0], nil, nil, nil
                    
    result
end

def _reduce_355(val, _values, result)
                      result = new_block_args val[0], nil, nil, val[1]
                    
    result
end

def _reduce_356(val, _values, result)
                      result = new_block_args nil, val[0], val[2], val[3]
                    
    result
end

def _reduce_357(val, _values, result)
                      result = new_block_args nil, val[0], nil, val[1]
                    
    result
end

def _reduce_358(val, _values, result)
                      result = new_block_args nil, nil, val[0], val[1]
                    
    result
end

def _reduce_359(val, _values, result)
                      result = new_block_args nil, nil, nil, val[0]
                    
    result
end

def _reduce_360(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_361(val, _values, result)
                      result = new_iter val[2], val[3]
                      result.line = val[1]
                      pop_scope
                    
    result
end

def _reduce_362(val, _values, result)
                      val[0] << val[1]
                      result = val[0]
                    
    result
end

# reduce 363 omitted

# reduce 364 omitted

def _reduce_365(val, _values, result)
                      result = new_call nil, val[0].intern, val[1]
                    
    result
end

def _reduce_366(val, _values, result)
                      result = new_call val[0], val[2].intern, val[3]
                    
    result
end

def _reduce_367(val, _values, result)
                      result = new_call val[0], :call, val[2]
                    
    result
end

def _reduce_368(val, _values, result)
                      result = new_call val[0], val[2].intern, val[3]
                    
    result
end

def _reduce_369(val, _values, result)
                      result = new_call val[0], val[2].intern, s(:arglist)
                    
    result
end

def _reduce_370(val, _values, result)
                      result = new_super val[1]
                    
    result
end

def _reduce_371(val, _values, result)
                      result = s(:super, nil)
                    
    result
end

def _reduce_372(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_373(val, _values, result)
                      result = new_iter val[2], val[3]
                      result.line = val[1]
                      pop_scope
                    
    result
end

def _reduce_374(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_375(val, _values, result)
                      result = new_iter val[2], val[3]
                      result.line = val[1]
                      pop_scope
                    
    result
end

def _reduce_376(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_377(val, _values, result)
                      part = s(:when, val[2], val[4])
                      part.line = val[2].line
                      result = [part]
                      result.push *val[5] if val[5]
                    
    result
end

def _reduce_378(val, _values, result)
                      result = [val[0]]
                    
    result
end

# reduce 379 omitted

def _reduce_380(val, _values, result)
                      exc = val[1] || s(:array)
                      exc << new_assign(val[2], s(:gvar, '$!'.intern)) if val[2]
                      result = [s(:resbody, exc, val[4])]
                      result.push val[5].first if val[5]
                    
    result
end

def _reduce_381(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_382(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

# reduce 383 omitted

# reduce 384 omitted

def _reduce_385(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_386(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_387(val, _values, result)
                      result = val[1].nil? ? s(:nil) : val[1]
                    
    result
end

# reduce 388 omitted

# reduce 389 omitted

# reduce 390 omitted

# reduce 391 omitted

def _reduce_392(val, _values, result)
                      result = new_str val[0]
                    
    result
end

# reduce 393 omitted

# reduce 394 omitted

def _reduce_395(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_396(val, _values, result)
                      result = s(:str, val[0])
                    
    result
end

def _reduce_397(val, _values, result)
                      result = new_xstr val[1]
                    
    result
end

def _reduce_398(val, _values, result)
                      result = new_regexp val[1], val[2]
                    
    result
end

def _reduce_399(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_400(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_401(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_402(val, _values, result)
                      part = val[1]
                      part = s(:dstr, "", val[1]) if part.type == :evstr
                      result = val[0] << part
                    
    result
end

def _reduce_403(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_404(val, _values, result)
                      result = val[0].concat([val[1]])
                    
    result
end

def _reduce_405(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_406(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_407(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_408(val, _values, result)
                      result = val[0] << s(:str, val[1])
                    
    result
end

def _reduce_409(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_410(val, _values, result)
                      result = str_append val[0], val[1]
                    
    result
end

def _reduce_411(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_412(val, _values, result)
                      result = str_append val[0], val[1]
                    
    result
end

def _reduce_413(val, _values, result)
                      result = s(:str, val[0])
                    
    result
end

def _reduce_414(val, _values, result)
                      result = lexer.strterm
                      lexer.strterm = nil
                    
    result
end

def _reduce_415(val, _values, result)
                      lexer.strterm = val[1]
                      result = s(:evstr, val[2])
                    
    result
end

def _reduce_416(val, _values, result)
                      lexer.cond_push 0
                      lexer.cmdarg_push 0
                      result = lexer.strterm
                      lexer.strterm = nil
                      lexer.lex_state = :expr_beg
                    
    result
end

def _reduce_417(val, _values, result)
                      lexer.strterm = val[1]
                      lexer.cond_lexpop
                      lexer.cmdarg_lexpop
                      result = s(:evstr, val[2])
                    
    result
end

def _reduce_418(val, _values, result)
                      result = s(:gvar, val[0].intern)
                    
    result
end

def _reduce_419(val, _values, result)
                      result = s(:ivar, val[0].intern)
                    
    result
end

def _reduce_420(val, _values, result)
                      result = s(:cvar, val[0].intern)
                    
    result
end

# reduce 421 omitted

def _reduce_422(val, _values, result)
                      result = s(:sym, val[1].intern)
                      lexer.lex_state = :expr_end
                    
    result
end

def _reduce_423(val, _values, result)
                      result = s(:sym, val[0].intern)
                    
    result
end

# reduce 424 omitted

# reduce 425 omitted

# reduce 426 omitted

# reduce 427 omitted

def _reduce_428(val, _values, result)
                      result = new_dsym val[1]
                    
    result
end

def _reduce_429(val, _values, result)
                      result = s(:int, val[0])
                    
    result
end

def _reduce_430(val, _values, result)
                      result = s(:float, val[0])
                    
    result
end

# reduce 431 omitted

# reduce 432 omitted

def _reduce_433(val, _values, result)
                      result = s(:identifier, val[0].intern)
                    
    result
end

def _reduce_434(val, _values, result)
                      result = s(:ivar, val[0].intern)
                    
    result
end

def _reduce_435(val, _values, result)
                      result = s(:gvar, val[0].intern)
                    
    result
end

def _reduce_436(val, _values, result)
                      result = s(:const, val[0].intern)
                    
    result
end

def _reduce_437(val, _values, result)
                      result = s(:cvar, val[0].intern)
                    
    result
end

def _reduce_438(val, _values, result)
                      result = s(:nil)
                    
    result
end

def _reduce_439(val, _values, result)
                      result = s(:self)
                    
    result
end

def _reduce_440(val, _values, result)
                      result = s(:true)
                    
    result
end

def _reduce_441(val, _values, result)
                      result = s(:false)
                    
    result
end

def _reduce_442(val, _values, result)
                      result = s(:str, self.file)
                    
    result
end

def _reduce_443(val, _values, result)
                      result = s(:int, lexer.line)
                    
    result
end

def _reduce_444(val, _values, result)
                      result = new_var_ref val[0]
                    
    result
end

def _reduce_445(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_446(val, _values, result)
                      result = s(:nth_ref, val[0])
                    
    result
end

# reduce 447 omitted

def _reduce_448(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_449(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_450(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_451(val, _values, result)
                      result = val[1]
                      lexer.lex_state = :expr_beg
                    
    result
end

def _reduce_452(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_453(val, _values, result)
                      result = new_args val[0], val[2], val[4], val[5]
                    
    result
end

def _reduce_454(val, _values, result)
                      result = new_args val[0], val[2], nil, val[3]
                    
    result
end

def _reduce_455(val, _values, result)
                      result = new_args val[0], nil, val[2], val[3]
                    
    result
end

def _reduce_456(val, _values, result)
                      result = new_args val[0], nil, nil, val[1]
                    
    result
end

def _reduce_457(val, _values, result)
                      result = new_args nil, val[0], val[2], val[3]
                    
    result
end

def _reduce_458(val, _values, result)
                      result = new_args nil, val[0], nil, val[1]
                    
    result
end

def _reduce_459(val, _values, result)
                      result = new_args nil, nil, val[0], val[1]
                    
    result
end

def _reduce_460(val, _values, result)
                      result = new_args nil, nil, nil, val[0]
                    
    result
end

def _reduce_461(val, _values, result)
                      result = s(:args)
                    
    result
end

def _reduce_462(val, _values, result)
                      raise 'formal argument cannot be a constant'
                    
    result
end

def _reduce_463(val, _values, result)
                      raise 'formal argument cannot be an instance variable'
                    
    result
end

def _reduce_464(val, _values, result)
                      raise 'formal argument cannot be a class variable'
                    
    result
end

def _reduce_465(val, _values, result)
                      raise 'formal argument cannot be a global variable'
                    
    result
end

def _reduce_466(val, _values, result)
                      result = val[0].intern
                      scope.add_local result
                    
    result
end

def _reduce_467(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_468(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_469(val, _values, result)
                      result = s(:lasgn, val[0])
                    
    result
end

# reduce 470 omitted

def _reduce_471(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

def _reduce_472(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

# reduce 473 omitted

# reduce 474 omitted

# reduce 475 omitted

# reduce 476 omitted

# reduce 477 omitted

def _reduce_478(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_479(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_480(val, _values, result)
                      result = new_assign new_assignable(s(:identifier, val[0].intern)), val[2]
                    
    result
end

def _reduce_481(val, _values, result)
                      result = s(:block, val[0])
                    
    result
end

def _reduce_482(val, _values, result)
                      result = val[0]
                      val[0] << val[2]
                    
    result
end

# reduce 483 omitted

# reduce 484 omitted

def _reduce_485(val, _values, result)
                      result = "*#{val[1]}".intern
                    
    result
end

def _reduce_486(val, _values, result)
                      result = :"*"
                    
    result
end

# reduce 487 omitted

# reduce 488 omitted

def _reduce_489(val, _values, result)
                      result = "&#{val[1]}".intern
                    
    result
end

def _reduce_490(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_491(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_492(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_493(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_494(val, _values, result)
                      result = []
                    
    result
end

def _reduce_495(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_496(val, _values, result)
                      raise "unsupported assoc list type (#@line_number)"
                    
    result
end

def _reduce_497(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_498(val, _values, result)
                      result = val[0].push *val[2]
                    
    result
end

def _reduce_499(val, _values, result)
                      result = [val[0], val[2]]
                    
    result
end

def _reduce_500(val, _values, result)
                      result = [s(:sym, val[0].intern), val[1]]
                    
    result
end

# reduce 501 omitted

# reduce 502 omitted

# reduce 503 omitted

# reduce 504 omitted

# reduce 505 omitted

# reduce 506 omitted

# reduce 507 omitted

# reduce 508 omitted

# reduce 509 omitted

# reduce 510 omitted

# reduce 511 omitted

# reduce 512 omitted

# reduce 513 omitted

# reduce 514 omitted

# reduce 515 omitted

# reduce 516 omitted

# reduce 517 omitted

# reduce 518 omitted

# reduce 519 omitted

# reduce 520 omitted

# reduce 521 omitted

# reduce 522 omitted

# reduce 523 omitted

# reduce 524 omitted

# reduce 525 omitted

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module Opal
