#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.12
# from Racc grammer file "".
#

require 'racc/parser.rb'
module Opal
  class Parser < Racc::Parser


##### State transition tables begin ###

clist = [
'63,64,65,8,51,-99,-97,-98,57,58,619,205,206,61,681,59,60,62,23,24,66',
'67,607,706,-68,205,206,22,28,27,90,89,91,92,205,206,17,544,273,273,546',
'653,7,41,6,9,94,93,-92,84,50,86,85,87,268,88,95,96,-454,81,82,-79,38',
'39,-94,-454,597,544,808,73,546,205,206,618,-536,652,-95,74,575,-95,-92',
'649,268,609,608,36,575,-97,30,607,810,52,770,101,54,489,32,575,100,-96',
'40,101,-100,575,552,268,100,653,18,-96,575,-88,-89,79,73,75,76,77,78',
'-99,-98,-99,74,80,-99,272,272,63,64,65,56,51,-100,53,653,57,58,308,37',
'83,61,652,59,60,62,258,259,66,67,227,609,608,605,227,257,291,295,90',
'89,91,92,308,-92,219,-92,716,-535,-92,652,-85,41,-99,596,94,93,-94,84',
'50,86,85,87,-86,88,95,96,-84,81,82,-535,38,39,101,101,-95,574,-95,100',
'100,-95,-536,101,-97,574,-97,-87,100,-97,-91,813,551,-88,101,210,574',
'900,214,100,101,52,574,-91,54,100,-96,101,-96,574,40,-96,100,-84,726',
'205,206,-98,218,-98,832,813,-98,79,73,75,76,77,78,-100,487,-100,74,80',
'-100,-87,726,-255,-255,-255,56,-255,-89,53,653,-255,-255,718,37,83,-255',
'819,-255,-255,-255,-255,-255,-255,-255,-90,820,-88,876,776,-255,-255',
'-255,-255,-255,-255,-255,-91,-94,-255,-94,558,273,-94,652,789,-255,-84',
'607,-255,-255,612,-255,-255,-255,-255,-255,-255,-255,-255,-255,561,-255',
'-255,-88,-255,-255,726,-535,-87,-85,308,807,-88,-91,-536,-89,788,-93',
'-94,101,823,725,-91,-84,100,-85,-90,-255,-450,-459,-255,268,-84,-255',
'-97,-450,-255,602,-255,-86,-255,101,-255,725,603,-87,100,268,609,608',
'-255,813,-89,582,-87,-255,-255,-255,-255,-255,-255,-89,400,401,-255',
'-255,-95,454,272,63,64,65,-255,51,581,-255,582,57,58,-92,-255,-255,61',
'531,59,60,62,258,259,66,67,204,754,-85,-90,777,257,291,295,90,89,91',
'92,751,607,219,101,-86,725,607,227,100,292,607,531,94,93,-100,84,50',
'86,85,361,824,88,95,96,-459,81,82,-85,-90,-91,-99,561,544,344,343,546',
'-85,-90,-100,224,877,-86,-93,226,225,222,223,754,264,265,-86,362,-90',
'827,214,547,266,52,751,694,54,-99,609,608,620,-84,630,609,608,614,752',
'609,608,610,-92,205,206,-331,-331,79,73,75,76,77,78,-331,344,343,74',
'80,-94,344,343,-537,-537,-537,56,-537,101,53,813,-537,-537,100,296,83',
'-537,-86,-537,-537,-537,-537,-537,-537,-537,544,-95,836,543,837,-537',
'-537,-537,-537,-537,-537,-537,101,752,-537,203,449,100,-331,625,-331',
'-537,702,450,-537,-537,839,-537,-537,-537,-537,-537,-537,-537,-537,-537',
'701,-537,-537,700,-537,-537,548,227,231,236,237,238,233,235,243,244',
'239,240,524,521,220,221,-453,101,241,242,522,-537,100,-453,-537,-537',
'491,-537,840,452,-537,451,-537,224,-537,230,-537,226,225,222,223,234',
'232,228,-537,229,215,-286,-286,-537,-537,-537,-537,-537,-537,-286,491',
'631,-537,-537,-535,245,842,-538,-538,-538,-537,-538,520,-537,523,-538',
'-538,456,-537,-537,-538,227,-538,-538,-538,-538,-538,-538,-538,103,104',
'105,106,107,-538,-538,-538,-538,-538,-538,-538,-447,-88,-538,524,593',
'694,-286,-447,-286,-538,-97,822,-538,-538,455,-538,-538,-538,-538,-538',
'-538,-538,-538,-538,537,-538,-538,555,-538,-538,721,227,231,236,237',
'238,233,235,243,244,239,240,524,584,220,221,-457,101,241,242,585,-538',
'100,-457,-538,-538,850,-538,453,592,-538,523,-538,224,-538,230,-538',
'226,225,222,223,234,232,228,-538,229,852,524,534,-538,-538,-538,-538',
'-538,-538,535,832,813,-538,-538,855,245,650,-255,-255,-255,-538,-255',
'583,-538,586,-255,-255,856,-538,-538,-255,858,-255,-255,-255,-255,-255',
'-255,-255,103,104,105,106,107,-255,-255,-255,-255,-255,-255,-255,-452',
'860,-255,-284,-284,101,452,-452,451,-255,100,-284,-255,-255,862,-255',
'-255,-255,-255,-255,-255,-255,-255,-255,684,-255,-255,864,-255,-255',
'803,227,231,236,237,238,233,235,243,244,239,240,524,593,220,221,-456',
'558,241,242,591,-255,682,-456,-255,268,-265,-255,-79,-284,-255,-284',
'-255,224,-255,230,-255,226,225,222,223,234,232,228,-255,229,268,-283',
'-283,-255,-255,-255,-255,-255,-255,-283,301,302,-255,-255,-536,245,559',
'63,64,65,-255,51,592,-255,523,57,58,679,-255,-255,61,561,59,60,62,258',
'259,66,67,671,-533,527,528,670,257,28,27,90,89,91,92,-455,308,219,524',
'946,415,-283,-455,-283,41,802,947,94,93,570,84,50,86,85,87,261,88,95',
'96,571,81,82,582,38,39,878,227,231,236,237,238,233,235,243,244,239,240',
'-450,-450,220,221,879,412,241,242,-450,210,414,413,214,-533,880,52,881',
'945,54,586,256,224,402,230,40,226,225,222,223,234,232,228,218,229,-533',
'203,201,79,73,75,76,77,78,202,205,206,74,80,883,245,884,63,64,65,56',
'51,-450,53,-450,57,58,694,37,83,61,729,59,60,62,258,259,66,67,103,104',
'105,106,107,257,28,27,90,89,91,92,344,343,219,886,497,-263,199,625,200',
'41,227,890,94,93,800,84,50,86,85,87,261,88,95,96,404,81,82,491,38,39',
'895,227,231,236,237,238,233,235,243,244,239,240,224,227,220,221,226',
'225,241,242,897,210,391,388,214,489,227,52,227,227,54,227,256,224,903',
'230,40,226,225,222,223,234,232,228,218,229,905,906,308,79,73,75,76,77',
'78,587,-67,588,74,80,224,245,589,-233,226,225,56,915,533,53,268,919',
'754,-266,37,83,63,64,65,8,51,514,532,751,57,58,629,628,-263,61,921,59',
'60,62,23,24,66,67,708,308,792,300,708,22,28,27,90,89,91,92,-536,561',
'17,627,341,340,344,343,7,41,931,9,94,93,932,84,50,86,85,87,299,88,95',
'96,791,81,82,515,38,39,937,227,855,939,860,341,340,344,343,341,340,344',
'343,752,860,915,862,624,241,242,754,36,246,516,30,268,497,52,948,621',
'54,751,32,224,617,230,40,226,225,222,223,497,198,228,18,229,954,613',
'197,79,73,75,76,77,78,700,196,772,74,80,497,195,341,340,344,343,56,866',
'867,53,525,868,95,96,37,83,63,64,65,8,51,964,860,966,57,58,967,108,308',
'61,-264,59,60,62,23,24,66,67,97,277,,752,,22,28,27,90,89,91,92,,563',
'17,336,334,333,,335,7,41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82,',
'38,39,,227,231,236,237,238,233,235,243,244,239,240,,,220,221,,,241,242',
',36,,,30,,,52,,,54,,32,224,,230,40,226,225,222,223,234,232,228,18,229',
',,,79,73,75,76,77,78,,,,74,80,,245,,-233,,,56,,,53,,,,,37,83,63,64,65',
'8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92',
',563,17,336,334,333,,335,7,41,,9,94,93,,84,50,86,85,87,,88,95,96,,81',
'82,,38,39,,227,231,236,237,238,233,235,243,244,239,240,,,220,221,,,241',
'242,,36,,,30,,,52,,,54,,32,224,,230,40,226,225,222,223,234,232,228,18',
'229,,,,79,73,75,76,77,78,,,,74,80,,245,,63,64,65,56,51,,53,,57,58,,37',
'83,61,,59,60,62,258,259,66,67,,,,,,257,28,27,90,89,91,92,,,219,,,,,',
',41,,,94,93,,84,50,86,85,87,261,88,95,96,,81,82,,38,39,,227,231,236',
'237,238,233,235,243,244,239,240,,,220,221,,,241,242,,210,,,214,,,52',
',,54,,256,224,,230,40,226,225,222,223,234,232,228,218,229,,,,79,73,75',
'76,77,78,,,,74,80,,245,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62',
'258,259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,41,,,94,93,,84',
'50,86,85,87,,88,95,96,,81,82,,38,39,,227,231,236,237,238,233,235,243',
'244,239,240,,,220,221,,,241,242,,210,,,214,,,52,,,54,,,224,,230,40,226',
'225,222,223,234,232,228,218,229,,,,79,73,75,76,77,78,,,,74,80,,245,',
'63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,23,24,66,67,,,,,,22,28',
'27,90,89,91,92,,,17,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82',
',38,39,,227,231,236,237,238,233,235,243,244,239,240,,,220,221,,,241',
'242,,210,,,214,215,,52,,,54,,,224,,230,40,226,225,222,223,234,232,228',
'18,229,,,,79,73,75,76,77,78,,,,74,80,,245,,63,64,65,56,51,,53,,57,58',
',37,83,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,219,,,,',
',,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,227,231,236,237',
'238,233,235,243,244,239,240,,,220,221,,,241,242,,210,,,214,,,52,,,54',
',,224,,230,40,226,225,222,223,234,232,228,218,229,,,,79,73,75,76,77',
'78,,,,74,80,,245,,,,,56,,,53,,,,,37,83,63,64,65,8,51,,,,57,58,,,,61',
',59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94',
'93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,227,231,236,237,238,233',
'235,243,244,239,240,,,220,221,,,241,242,,36,,,30,,,52,,,54,,32,224,',
'230,40,226,225,222,223,234,232,228,18,229,,,,79,73,75,76,77,78,,,,74',
'80,,245,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67',
',,,,,257,291,295,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87',
',88,95,96,,81,82,,38,39,,227,231,236,237,238,233,235,243,244,239,240',
',,220,221,,,241,242,,210,,,214,,,52,,,54,,658,224,254,230,40,226,225',
'222,223,234,232,228,218,229,,,,79,73,75,76,77,78,,,,74,80,,245,,63,64',
'65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,28,27',
'90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,261,88,95,96,,81',
'82,,38,39,,227,231,236,237,238,233,235,243,244,239,240,,,220,221,,,241',
'242,,210,,,214,,,52,,,54,,256,224,254,230,40,226,225,222,223,234,232',
'228,218,229,,,,79,73,75,76,77,78,,,,74,80,,245,,63,64,65,56,51,,53,',
'57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,28,27,90,89,91,92,',
',219,,,,,,,41,,,94,93,,84,50,86,85,87,261,88,95,96,,81,82,,38,39,,227',
'231,236,237,238,233,235,243,244,239,240,,,220,221,,,241,242,,210,,,214',
',,52,,,54,,256,224,254,230,40,226,225,222,223,234,232,228,218,229,,',
',79,73,75,76,77,78,,,,74,80,,245,,63,64,65,56,51,,53,,57,58,,37,83,61',
',59,60,62,258,259,66,67,,,,,,257,28,27,90,89,91,92,,,219,,,,,,,41,,',
'94,93,,84,50,86,85,87,261,88,95,96,,81,82,,38,39,,227,231,236,237,238',
'233,235,243,244,239,240,,,220,221,,,241,242,,210,,,214,,,52,,,54,,256',
'224,254,230,40,226,225,222,223,234,232,228,218,229,,,,79,73,75,76,77',
'78,,,,74,80,,245,,,,,56,,,53,,,,,37,83,63,64,65,8,51,,,,57,58,,,,61',
',59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94',
'93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,227,231,236,237,238,233',
'235,243,244,239,240,,,220,221,,,241,242,,36,,,30,,,52,,,54,,32,224,',
'230,40,226,225,222,223,234,232,228,18,229,,,,79,73,75,76,77,78,,,,74',
'80,,245,,,,,56,,,53,,,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,,227,231,236,237,238,233,235,243,244',
'239,240,,,220,221,,,241,242,,36,,,30,,,52,,,54,,32,224,,230,40,226,225',
'222,223,234,232,228,18,229,,,,79,73,75,76,77,78,,,,74,80,,245,,-255',
'-255,-255,56,-255,,53,,-255,-255,,37,83,-255,,-255,-255,-255,-255,-255',
'-255,-255,,,,,,-255,-255,-255,-255,-255,-255,-255,,563,-255,336,334',
'333,,335,,-255,,,-255,-255,,-255,-255,-255,-255,-255,-255,-255,-255',
'-255,,-255,-255,,-255,-255,563,,336,334,333,,335,,,563,566,336,334,333',
',335,,,569,,,-255,,,-255,268,,-255,,,-255,,-255,,-255,,-255,,,566,,',
',,-255,,,569,566,-255,-255,-255,-255,-255,-255,,829,,-255,-255,,,,63',
'64,65,-255,51,,-255,,57,58,,-255,-255,61,,59,60,62,258,259,66,67,,,',
',,257,291,295,90,89,91,92,,,219,,,,227,,,41,,,94,93,,84,50,86,85,87',
',88,95,96,,81,82,,38,39,,227,231,236,237,238,233,235,224,,239,240,226',
'225,222,223,,,241,242,,210,,,214,,,52,,,54,,,224,,230,40,226,225,222',
'223,234,232,228,218,229,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
',,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22',
'28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88,95,96',
',81,82,,38,39,,227,-556,-556,-556,-556,233,235,,,-556,-556,,,,,,,241',
'242,,36,,,281,,,52,,,54,,32,224,,230,40,226,225,222,223,234,232,228',
'18,229,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37',
'83,61,,59,60,62,258,259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,',
',,,292,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,327,,336,334,333,227',
'335,,,,,,,,,,,,,,,,241,242,289,,,286,,,52,,,54,,285,,224,,338,,226,225',
'222,223,,,341,340,344,343,,79,73,75,76,77,78,794,,,74,80,,,,63,64,65',
'56,51,,53,,57,58,,296,83,61,,59,60,62,258,259,66,67,,,,,,257,291,295',
'90,89,91,92,,,219,,,,,,,292,,,94,93,,84,50,86,85,87,,88,95,96,,81,82',
'764,,336,334,333,754,335,,,,,,,,,,751,,,,,,,,289,,,214,,,52,,,54,,,',
',,338,749,,,,,,,341,340,344,343,,79,73,75,76,77,78,,,,74,80,,,,298,',
',56,,,53,,,,,296,83,63,64,65,,51,,,752,57,58,,,,61,,59,60,62,258,259',
'66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86',
'85,87,,88,95,96,,81,82,,38,39,,227,231,236,237,238,233,235,243,244,239',
'240,,,-556,-556,,,241,242,,210,,,214,,,52,,,54,,658,224,,230,40,226',
'225,222,223,234,232,228,218,229,,,,79,73,75,76,77,78,,,,74,80,,,,63',
'64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,291',
'295,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81',
'82,,38,39,,227,231,236,237,238,233,235,243,,239,240,,,,,,,241,242,,210',
',,214,,,52,,,54,,,224,,230,40,226,225,222,223,234,232,228,218,229,,',
',79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,',
'59,60,62,258,259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,292',
',,94,93,,84,50,86,85,87,,88,95,96,,81,82,327,,336,334,333,,335,,,,,',
',,,,,,,,,,,,926,,,214,,,52,,,54,,,,,,338,,554,,,,,,341,340,344,343,',
'79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,296,83,61,',
'59,60,62,258,259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,41,',
',94,93,,84,50,86,85,87,261,88,95,96,,81,82,,38,39,,227,231,236,237,238',
'233,235,243,244,239,240,,,-556,-556,,,241,242,,210,,,214,,,52,,,54,',
'658,224,254,230,40,226,225,222,223,234,232,228,218,229,,,,79,73,75,76',
'77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258',
'259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,,227,,,,,,,,,,,,,,,,,241,242,,210,',
',214,,,52,,,54,,,224,,230,40,226,225,222,223,,,228,218,229,,,,79,73',
'75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62',
'258,259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,41,,,94,93,,84',
'50,86,85,87,,88,95,96,,81,82,,38,39,,227,,,,,,,,,,,,,,,,,241,242,,210',
',,214,,,52,,,54,,,224,,230,40,226,225,222,223,,,228,218,229,,,,79,73',
'75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62',
'258,259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,41,,,94,93,,84',
'50,86,85,87,,88,95,96,,81,82,,38,39,,227,-556,-556,-556,-556,233,235',
',,-556,-556,,,,,,,241,242,,210,,,214,,,52,,,54,,,224,,230,40,226,225',
'222,223,234,232,228,218,229,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,',
',53,,,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,',
',,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88,95',
'96,,81,82,,38,39,,227,-556,-556,-556,-556,233,235,,,-556,-556,,,,,,',
'241,242,,36,,,30,,,52,,,54,,32,224,,230,40,226,225,222,223,234,232,228',
'18,229,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37',
'83,61,,59,60,62,258,259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,',
',,,41,,,94,93,,84,50,86,85,87,261,88,95,96,,81,82,,38,39,,227,-556,-556',
'-556,-556,233,235,,,-556,-556,,,,,,,241,242,,210,,,214,,,52,,,54,,,224',
'254,230,40,226,225,222,223,234,232,228,218,229,,,,79,73,75,76,77,78',
',,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66',
'67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85',
'87,261,88,95,96,,81,82,,38,39,,227,,,,,,,,,,,,,,,,,241,242,,210,,,214',
',,52,,,54,,,224,254,230,40,226,225,222,223,,,228,218,229,,,,79,73,75',
'76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,23',
'24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,,84,50,86,85',
'87,,88,95,96,,81,82,,38,39,,227,-556,-556,-556,-556,233,235,,,-556,-556',
',,,,,,241,242,,210,,,214,,,52,,,54,,,224,,230,40,226,225,222,223,234',
'232,228,18,229,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,',
'57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,28,27,90,89,91,92,',
',219,,,,,,,41,,,94,93,,84,50,86,85,87,261,88,95,96,,81,82,,38,39,,227',
'-556,-556,-556,-556,233,235,,,-556,-556,,,,,,,241,242,,210,,,214,,,52',
',,54,,256,224,,230,40,226,225,222,223,234,232,228,218,229,,,,79,73,75',
'76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258',
'259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50',
'86,85,87,261,88,95,96,,81,82,,38,39,,227,,,,,,,,,,,,,,,,,241,242,,210',
',,214,,,52,,,54,,,224,,230,40,226,225,222,223,,,,218,,,,,79,73,75,76',
'77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258',
'259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,,227,,,,,,,,,,,,,,,,,241,242,,210,',
',214,,,52,,,54,,,224,,230,40,226,225,222,223,,,,218,,,,,79,73,75,76',
'77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258',
'259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52',
',,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56',
'51,,53,,57,58,,37,83,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91',
'92,,,17,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,',
',,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75',
'76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,23',
'24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,,84,50,86,85',
'87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54',
',,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,',
'53,,57,58,,37,83,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92',
',,17,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,',
',,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76',
'77,78,,,,74,80,101,,,,,100,56,,,53,,,,,37,83,63,64,65,,51,,,,57,58,',
',,61,,59,60,62,258,259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,',
',,292,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,327,,336,334,333,,335',
',,,,,,,,,,,,,,,,,356,,,30,,,52,,,54,,32,,,,338,322,,,,,,,341,340,344',
'343,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,296,83',
'61,,59,60,62,258,259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,',
'292,,,94,93,,84,50,86,85,361,,88,95,96,,81,82,327,,336,334,333,,335',
',,,,,,,,,,,,,,367,,,362,,,214,,,52,,,54,,,,,,338,,,,,,,,341,340,344',
'343,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,296,83',
'61,,59,60,62,258,259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,',
'41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,',
',,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,',
'74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67',
',,,,,257,291,295,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87',
',88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,',
',,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,,37',
'83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27',
'90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,',
',,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,,37,83,63,64,65,8,51,',
',,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,',
',,,,7,41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,',
',,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77',
'78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,23,24,66',
'67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,,84,50,86,85,87,',
'88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,',
',40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,,37,83',
'63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90',
'89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79',
'73,75,76,77,78,,,,74,80,,,,-532,-532,-532,56,-532,,53,,-532,-532,,37',
'83,-532,,-532,-532,-532,-532,-532,-532,-532,,-532,,,,-532,-532,-532',
'-532,-532,-532,-532,,,-532,,,,,,,-532,,,-532,-532,,-532,-532,-532,-532',
'-532,-532,-532,-532,-532,,-532,-532,,-532,-532,,,,,,,,,,,,,,,,,,,,,',
'-532,,,-532,-532,,-532,,,-532,,-532,,-532,,-532,,,,,,,,-532,,-532,,',
'-532,-532,-532,-532,-532,-532,,,,-532,-532,,,,-533,-533,-533,-532,-533',
',-532,,-533,-533,,-532,-532,-533,,-533,-533,-533,-533,-533,-533,-533',
',-533,,,,-533,-533,-533,-533,-533,-533,-533,,,-533,,,,,,,-533,,,-533',
'-533,,-533,-533,-533,-533,-533,-533,-533,-533,-533,,-533,-533,,-533',
'-533,,,,,,,,,,,,,,,,,,,,,,-533,,,-533,-533,,-533,,,-533,,-533,,-533',
',-533,,,,,,,,-533,,-533,,,-533,-533,-533,-533,-533,-533,,,,-533,-533',
',,,63,64,65,-533,51,,-533,,57,58,,-533,-533,61,,59,60,62,258,259,66',
'67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85',
'87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54',
',256,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,',
',,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22',
'28,27,90,89,91,92,,,17,,,,,,7,41,6,9,94,93,,84,50,86,85,87,,88,95,96',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,',
',,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,404,56,,,53,,,,,37,83,63,64',
'65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92',
',,17,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,',
',,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76',
'77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,23,24',
'66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,,84,50,86,85,87',
',88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,',
',,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53',
',57,58,,37,83,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17',
',,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,',
',,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78',
',,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,23,24,66,67',
',,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40',
',,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,,37,83,63',
'64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89',
'91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,,37,83,63,64,65,8,51,,,,57,58',
',,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41',
'6,9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,',
',,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74',
'80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,',
',,,257,291,295,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40',
',,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57',
'58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,291,295,90,89,91,92,,',
'219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,',
',,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,,,,,37,83,63,64,65,8,51,,,,57,58,,,,61',
',59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94',
'93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,36,',
',30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,',
'63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,23,24,66,67,,,,,,22,28',
'27,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81',
'82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,421,,,,40,,,,,,',
',218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37',
'83,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,219,,,,,,,41',
',,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,',
',210,,,214,,,52,,,54,,421,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,',
'74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,23,24,66,67,',
',,,,22,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40',
',,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57',
'58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,28,27,90,89,91,92,,,219',
',,,,,,41,,,94,93,,84,50,86,85,87,261,88,95,96,,81,82,,38,39,,,,,,,,',
',,,,,,,,,,,,,210,,,214,,,52,,,54,,256,,,,40,,,,,,,,218,,,,,79,73,75',
'76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258',
'259,66,67,,,,,,257,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86',
'85,87,261,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52',
',,54,,256,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65',
'56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,291,295',
'90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,',
',,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61',
',59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,219,,,,,,,41,,,94',
'93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210',
',,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,',
',63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,23,24,66,67,,,,,,22,28',
'27,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81',
'82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218',
',,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61',
',59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,219,,,,,,,41,,,94',
'93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210',
',,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,',
',63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,23,24,66,67,,,,,,22,28',
'27,90,89,91,92,,,17,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,18,,',
',,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61',
',59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93',
',84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214',
',,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64',
'65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,291,295',
'90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,',
',,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,,37,83,63,64,65,8,51',
',,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17',
',,,,,7,41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,',
',,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77',
'78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259',
'66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86',
'85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,',
'54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,',
',,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22',
'28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88,95,96',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,',
',,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,,37,83,63,64,65',
'8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92',
',,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,',
',,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,,,,,37,83,63,64,65,8,51,,,,57,58,,,',
'61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9',
'94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,36',
',,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,',
',,,,56,,,53,,,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66',
'67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87',
',88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,',
',,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53',
',57,58,,37,83,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17',
',,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,',
',,,,,,,,,,210,,,214,,458,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77',
'78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259',
'66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86',
'85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,',
'54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56',
'51,,53,,57,58,,37,83,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91',
'92,,,17,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,',
',,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75',
'76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258',
'259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52',
',,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56',
'51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,291,295,90',
'89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79',
'73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60',
'62,258,259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,41,,,94,93',
',84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214',
',,52,,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64',
'65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,291,295',
'90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,',
',,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61',
',59,60,62,258,259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,41',
',,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,',
',210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74',
'80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,',
',,,257,291,295,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40',
',,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57',
'58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,291,295,90,89,91,92,,',
'219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,',
',,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76',
'77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258',
'259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52',
',,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56',
'51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,291,295,90',
'89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79',
'73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60',
'62,258,259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,41,,,94,93',
',84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214',
',,52,,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64',
'65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,291,295',
'90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,',
',,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61',
',59,60,62,258,259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,41',
',,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,',
',210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74',
'80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,',
',,,257,291,295,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40',
',,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57',
'58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,291,295,90,89,91,92,,',
'219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,',
',,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76',
'77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258',
'259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52',
',,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56',
'51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,291,295,90',
'89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79',
'73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60',
'62,258,259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,41,,,94,93',
',84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214',
',,52,,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64',
'65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,291,295',
'90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,',
',,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61',
',59,60,62,258,259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,41',
',,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,',
',210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74',
'80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,',
',,,257,291,295,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40',
',,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57',
'58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,291,295,90,89,91,92,,',
'219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,',
',,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76',
'77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258',
'259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52',
',,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56',
'51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,291,295,90',
'89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79',
'73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60',
'62,258,259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,41,,,94,93',
',84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214',
',,52,,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64',
'65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,291,295',
'90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,',
',,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61',
',59,60,62,258,259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,41',
',,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,',
',210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74',
'80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,',
',,,257,291,295,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,256,,',
',40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53',
',57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,291,295,90,89,91,92',
',,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,',
',,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,421,,,,40,,,,,,,,218,,,,,79,73',
'75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62',
'258,259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,292,,,94,93,',
'84,50,86,85,87,,88,95,96,,81,82,,,,,,,,,,,,,,,,,,,,,,,,,289,,,286,,',
'52,,,54,,,,,,,,,,,,,,,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56',
'51,,53,,57,58,,296,83,61,,59,60,62,258,259,66,67,,,,,,257,291,295,90',
'89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79',
'73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60',
'62,258,259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,292,,,94,93',
',84,50,86,85,87,,88,95,96,,81,82,,,,,,,,,,,,,,,,,,,,,,,,,289,,,286,',
',52,,,54,,,,,,,,,,,,,,,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56',
'51,,53,,57,58,,296,83,61,,59,60,62,258,259,66,67,,,,,,257,291,295,90',
'89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79',
'73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60',
'62,258,259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,41,,,94,93',
',84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214',
',,52,,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56',
',,53,,,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,',
',,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40',
',,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,,37,83,63',
'64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89',
'91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73',
'75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62',
'258,259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,41,,,94,93,,84',
'50,86,85,87,261,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214',
',,52,,,54,,,,254,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63',
'64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,291',
'295,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,261,88,95,96',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,658,,254,,40',
',,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57',
'58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,28,27,90,89,91,92,,,219',
',,,,,,41,,,94,93,,84,50,86,85,87,261,88,95,96,,81,82,,38,39,,,,,,,,',
',,,,,,,,,,,,,210,,,214,,,52,,,54,,256,,254,,40,,,,,,,,218,,,,,79,73',
'75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62',
'258,259,66,67,,,,,,257,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,,84',
'50,86,85,87,261,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214',
',,506,,,54,,256,,254,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,',
',,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257',
'28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,261,88,95,96',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,510,52,,,54,,256,,254',
',40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,,37,83',
'63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90',
'89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79',
'73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60',
'62,258,259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,41,,,94,93',
',84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214',
',,52,,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56',
',,53,,,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,',
',,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40',
',,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,,37,83,63',
'64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89',
'91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,,36,,,281,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73',
'75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62',
'258,259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,41,,,94,93,,84',
'50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,',
',52,,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64',
'65,56,51,,53,,57,58,,37,83,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90',
'89,91,92,,,17,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79',
'73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60',
'62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52',
',,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56',
'51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,291,295,90',
'89,91,92,,,219,,,,,,,292,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,764',
',336,334,333,754,335,,,,,,,,,,751,,,,,,,,289,,,214,,,52,,,54,,,,,,338',
',,,,,,,341,340,344,343,,79,73,75,76,77,78,,,,74,80,,,,518,,,56,,,53',
',,,,296,83,63,64,65,8,51,,,752,57,58,,,,61,,59,60,62,23,24,66,67,,,',
',,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88,95',
'96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,36,,,281,,,52,,,54,,32,,,,40,',
',,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58',
',37,83,61,,59,60,62,258,259,66,67,,,,,,257,291,295,90,89,91,92,,,219',
',,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,',
',,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77',
'78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,23,24,66',
'67,,,,,,22,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87',
',88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,',
',,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53',
',57,58,,37,83,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,219',
',,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,',
',,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77',
'78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,23,24,66',
'67,,,,,,22,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87',
',88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,',
',,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53',
',57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,291,295,90,89,91,92',
',,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,',
',,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,775,,,,40,,,,,,,,218,,,,,79,73',
'75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62',
'258,259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,41,,,94,93,,84',
'50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,',
',52,,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64',
'65,56,51,,53,,57,58,,37,83,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90',
'89,91,92,,,17,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79',
'73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60',
'62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52',
',,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56',
'51,,53,,57,58,,37,83,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91',
'92,,,17,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,',
',,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75',
'76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258',
'259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,292,,,94,93,,84,50',
'86,85,87,,88,95,96,,81,82,,,,,,,,,,,,,,,,,,,,,,,,,289,,,286,,,52,,,54',
',,,,,,,,,,,,,,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,',
'57,58,,296,83,61,,59,60,62,258,259,66,67,,,,,,257,28,27,90,89,91,92',
',,219,,,,,,,41,,,94,93,,84,50,86,85,87,261,88,95,96,,81,82,,38,39,,',
',,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,256,,,,40,,,,,,,,218,,,,,79',
'73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60',
'62,258,259,66,67,,,,,,257,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,',
'84,50,86,85,87,261,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,',
',214,,,52,,,54,,256,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,,,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24',
'66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85',
'87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32',
',,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,,37',
'83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27',
'90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,',
',,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,,37,83,63,64,65,8,51,',
',,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,',
',,,,7,41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,',
',,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77',
'78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259',
'66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86',
'85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,537,,52',
',,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
',,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22',
'28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88,95,96',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,',
',,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37',
'83,61,,59,60,62,258,259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,',
',,,292,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,764,,336,334,333,754',
'335,,,,,,,,,,751,,,,,,,,712,,,214,,,52,,,54,,,,,,338,,,,,,,,341,340',
'344,343,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,,296,83,63,64,65',
'8,51,,,752,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91',
'92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,',
',,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,,37,83,63,64,65,8,51,,,,57,58',
',,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41',
',9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,',
',,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74',
'80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,',
',,,257,291,295,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,261',
'88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,',
',40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53',
',57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,291,295,90,89,91,92',
',,219,,,,,,,41,,,94,93,,84,50,86,85,87,261,88,95,96,,81,82,,38,39,,',
',,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,658,,,,40,,,,,,,,218,,,,,79',
'73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60',
'62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52',
',,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56',
'51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,291,295,90',
'89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79',
'73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60',
'62,258,259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,41,,,94,93',
',84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214',
',,52,,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64',
'65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,291,295',
'90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,',
',,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61',
',59,60,62,258,259,66,67,,,,,,257,28,27,90,89,91,92,,,219,,,,,,,41,,',
'94,93,,84,50,86,85,87,261,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,',
',,210,,,214,,,52,,,54,,256,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,',
',74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67',
',,,,,257,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,261',
'88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,256',
',,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53',
',57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,291,295,90,89,91,92',
',,219,,,,,,,292,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,764,,336,334',
'333,754,335,,,,,,,,,,751,,,,,,,,289,,,286,,,52,,,54,,,,,,338,749,,,',
',,,341,340,344,343,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,,296',
'83,63,64,65,8,51,,,752,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28',
'27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88,95,96,,81',
'82,,38,39,,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,404,56,,,53,,,,,37,83,63,64,65,',
'51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,',
'17,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,',
',,,,,,,,,,,,,210,,,214,,675,52,,,54,,,,254,,40,,,,,,,,18,,,,,79,73,75',
'76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258',
'259,66,67,,,,,,257,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86',
'85,87,261,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52',
',,54,,256,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,-283,',
'56,,,53,,-283,-283,-283,37,83,-283,-283,-283,,-283,,,,,,,,,,-283,-283',
',,,,,,,,-283,-283,,-283,-283,-283,-283,-283,,,,,,,,,,,,,,,,,,,,,,,,-283',
'-283,-283,-283,-283,-283,-283,-283,-283,-283,-283,-283,-283,-283,-283',
',,-283,-283,-283,,639,-283,,,-283,,,-283,,-283,,-283,,-283,,-283,-283',
'-283,-283,-283,-283,-283,,-283,,-283,,,,,,,,,,,,,-283,-283,-283,-283',
',-283,-539,,-283,,-283,,-98,-539,-539,-539,,,-539,-539,-539,,-539,,',
',,,,,,-539,-539,-539,,,,,,,,,-539,-539,,-539,-539,-539,-539,-539,,,',
',,,,,,,,,,,,,,,,,,,,-539,-539,-539,-539,-539,-539,-539,-539,-539,-539',
'-539,-539,-539,-539,-539,,,-539,-539,-539,,790,-539,,,-539,,,-539,,-539',
',-539,,-539,,-539,-539,-539,-539,-539,-539,-539,,-539,-539,-539,,,,',
',,,,,,,,-539,-539,-539,-539,,-539,-539,,-539,,-539,,-96,-539,-539,-539',
',,,-539,-539,,-539,,,,,,,,,-539,,,,,,,,,,,-539,-539,,-539,-539,-539',
'-539,-539,,,,,,,,,,,,,,,,,,,,,,,,-539,-539,-539,-539,-539,-539,-539',
'-539,-539,-539,-539,-539,-539,-539,-539,-283,,-539,-539,-539,,636,-283',
'-283,-283,-539,,,-283,-283,,-283,-539,,-539,,-539,-539,-539,-539,-539',
'-539,-539,,-539,-539,-539,,,,,-283,-283,,-283,-283,-283,-283,-283,-539',
'-539,,-87,,-539,,,-539,,-539,,-96,,,,,,,,,,,-283,-283,-283,-283,-283',
'-283,-283,-283,-283,-283,-283,-283,-283,-283,-283,,,-283,-283,-283,',
'639,,,,-283,,,,,,,-283,,-283,,-283,-283,-283,-283,-283,-283,-283,,-283',
',-283,,,,,,,,,,,,,-283,-283,,-89,,-283,-278,,-283,,-283,,-98,-278,-278',
'-278,,,-278,-278,-278,,-278,,,,,,,,,,-278,-278,-278,,,,,,,,-278,-278',
',-278,-278,-278,-278,-278,,,,,,,,,,,,,,,,,,,,,,,,-278,-278,-278,-278',
'-278,-278,-278,-278,-278,-278,-278,-278,-278,-278,-278,,,-278,-278,-278',
',,-278,,,-278,,,-278,,-278,,-278,,-278,,-278,-278,-278,-278,-278,-278',
'-278,,-278,,-278,,,,,,,,,,,,,-278,-278,-278,-278,-292,-278,,-278,-278',
',-278,-292,-292,-292,,,-292,-292,-292,,-292,,,,,,,,,,-292,-292,,,,,',
',,,-292,-292,,-292,-292,-292,-292,-292,,,,,,,,,,,,,,,,,,,,,,,,-292,-292',
'-292,-292,-292,-292,-292,-292,-292,-292,-292,-292,-292,-292,-292,,,-292',
'-292,-292,,,-292,,277,-292,,,-292,,-292,,-292,,-292,,-292,-292,-292',
'-292,-292,-292,-292,,-292,,-292,,,,,,,,,,,,,-292,-292,-292,-292,-555',
'-292,,,-292,,-292,-555,-555,-555,,,-555,-555,-555,,-555,,,,,,,,,,-555',
',,,,,,,,,-555,-555,,-555,-555,-555,-555,-555,,,,,,,,,,,,,,-555,,,,,',
',-555,-555,-555,,,-555,-555,-555,,-555,,,,,-555,-555,,,,-555,,,-555',
',,,,268,-555,-555,-555,,-555,-555,-555,-555,-555,,,,,,,,,,,,,-555,,',
',,,,,,,,,-555,-555,,-555,,,-555,-555,-555,-555,-555,-555,-555,-555,-555',
',-555,,-555,,,,,268,-555,,-555,,,,,,,,,,-555,-555,,-555,-555,-555,-555',
'-555,,-555,,,,,,443,434,,,444,,,-555,,-555,,,-555,142,143,,139,121,122',
'123,130,127,129,,,124,125,-555,-555,,,144,145,131,132,-555,,,,,268,-555',
',,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119,,-555,146',
',,,,,,,,,,,-555,,-555,,,-555,156,167,157,180,153,173,163,162,188,191',
'178,161,160,155,181,189,190,165,154,168,172,174,166,159,,,,175,182,177',
'176,169,179,164,152,171,170,183,184,185,186,187,151,158,149,150,147',
'148,,111,113,110,,112,,,,,,,,,142,143,,139,121,122,123,130,127,129,',
',124,125,,,,,144,145,131,132,,,,,,,,,,,,,136,135,,120,141,138,137,133',
'134,128,126,118,140,119,,,146,79,,,,,,,,,,80,156,167,157,180,153,173',
'163,162,188,191,178,161,160,155,181,189,190,165,154,168,172,174,166',
'159,,,,175,182,177,176,169,179,164,152,171,170,183,184,185,186,187,151',
'158,149,150,147,148,,111,113,,,112,,,,,,,,,142,143,,139,121,122,123',
'130,127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,,,,136,135,,120,141',
'138,137,133,134,128,126,118,140,119,,,146,79,,,,,,,,,,80,156,167,157',
'180,153,173,163,162,188,191,178,161,160,155,181,189,190,165,154,168',
'172,174,166,159,,,,175,182,177,176,169,179,164,152,171,170,183,184,185',
'186,187,151,158,149,150,147,148,,111,113,,,112,,,,,,,,,142,143,,139',
'121,122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,,,,136',
'135,,120,141,138,137,133,134,128,126,118,140,119,,,146,79,,,,,,,,,,80',
'156,167,157,180,153,173,163,162,188,191,178,161,160,155,181,189,190',
'165,154,168,172,174,166,159,,,,175,182,177,176,169,179,164,152,171,170',
'183,184,185,186,187,151,158,149,150,147,148,,111,113,,,112,,,,,,,,,142',
'143,,139,121,122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,',
',,,,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119,,,146,79',
',,,,,,,,,80,156,167,157,180,153,173,163,162,188,191,178,161,160,155',
'181,189,190,165,154,168,172,174,166,159,,,,175,182,177,376,375,377,374',
'152,171,170,183,184,185,186,187,151,158,149,150,372,373,,370,113,86',
'85,371,,88,,,,,,,142,143,,139,121,122,123,130,127,129,,,124,125,,,,',
'144,145,131,132,,,,,,381,,,,,,,136,135,,120,141,138,137,133,134,128',
'126,118,140,119,,,146,156,167,157,180,153,173,163,162,188,191,178,161',
'160,155,181,189,190,165,154,168,172,174,166,159,,,,175,182,177,176,169',
'179,164,152,171,170,183,184,185,186,187,151,158,149,150,147,148,,111',
'113,,,112,,,,,,,,,142,143,,139,121,122,123,130,127,129,,,124,125,,,',
',144,145,131,132,,,,,,,,,,,,,136,135,,120,141,138,137,133,134,128,126',
'118,140,119,,,146,156,167,157,180,153,173,163,162,188,191,178,161,160',
'155,181,189,190,165,154,168,172,174,166,159,,,,175,182,177,176,169,179',
'164,152,171,170,183,184,185,186,187,151,158,149,150,147,148,,111,113',
'398,397,112,,399,,,,,,,142,143,,139,121,122,123,130,127,129,,,124,125',
',,,,144,145,131,132,,,,,,,,,,,,,136,135,,120,141,138,137,133,134,128',
'126,118,140,119,443,434,146,,444,,,,,,,,,142,143,,139,121,122,123,130',
'127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,,,,136,135,,120,141,138',
'137,133,134,128,126,118,140,119,443,434,146,,444,,,,,,,,,142,143,,139',
'121,122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,,,,136',
'135,,120,141,138,137,133,134,128,126,118,140,119,686,434,146,,687,,',
',,,,,,142,143,,139,121,122,123,130,127,129,,,124,125,,,,,144,145,131',
'132,,,,,,268,,,,,,,136,135,,120,141,138,137,133,134,128,126,118,140',
'119,436,440,146,,438,,,,,,,,,142,143,,139,121,122,123,130,127,129,,',
'124,125,,,,,144,145,131,132,,,,,,,,,,,,,136,135,,120,141,138,137,133',
'134,128,126,118,140,119,430,434,146,,431,,,,,,,,,142,143,,139,121,122',
'123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,268,,,,,,,136,135',
',120,141,138,137,133,134,128,126,118,140,119,959,434,146,,960,,,,,,',
',,142,143,,139,121,122,123,130,127,129,,,124,125,,,,,144,145,131,132',
',,,,,268,,,,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119',
'644,440,146,,645,,,,,,,,,142,143,,139,121,122,123,130,127,129,,,124',
'125,,,,,144,145,131,132,,,,,,,,,,,,,136,135,,120,141,138,137,133,134',
'128,126,118,140,119,642,434,146,,643,,,,,,,,,142,143,,139,121,122,123',
'130,127,129,,,124,125,,,,,144,145,131,132,,,,,,268,,,,,,,136,135,,120',
'141,138,137,133,134,128,126,118,140,119,689,440,146,,690,,,,,,,,,142',
'143,,139,121,122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,',
',,,,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119,443,434',
'146,,444,,,,,,,,,142,143,,139,121,122,123,130,127,129,,,124,125,,,,',
'144,145,131,132,,,,,,,,,,,,,136,135,,120,141,138,137,133,134,128,126',
'118,140,119,443,434,146,,444,,,,,,,,,142,143,,139,121,122,123,130,127',
'129,,,124,125,,,,,144,145,131,132,,,,,,268,,,,,,,136,135,,120,141,138',
'137,133,134,128,126,118,140,119,644,440,146,,645,,,,,,,,,142,143,,139',
'121,122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,,,,136',
'135,,120,141,138,137,133,134,128,126,118,140,119,741,440,146,,739,,',
',,,,,,142,143,,139,121,122,123,130,127,129,,,124,125,,,,,144,145,131',
'132,,,,,,,,,,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119',
'961,440,146,,962,,,,,,,,,142,143,,139,121,122,123,130,127,129,,,124',
'125,,,,,144,145,131,132,,,,,,,,,,,,,136,135,,120,141,138,137,133,134',
'128,126,118,140,119,741,440,146,,892,,,,,,,,,142,143,,139,121,122,123',
'130,127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,,,,136,135,,120,141',
'138,137,133,134,128,126,118,140,119,735,440,146,,736,,,,,,,,,142,143',
',139,121,122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,',
',,,136,135,,120,141,138,137,133,134,128,126,118,140,119,733,434,146',
',734,,,,,,,,,142,143,,139,121,122,123,130,127,129,,,124,125,,,,,144',
'145,131,132,,,,,,268,,,,,,,136,135,,120,141,138,137,133,134,128,126',
'118,140,119,642,434,146,,643,,,,,,,,,142,143,,139,121,122,123,130,127',
'129,,,124,125,,,,,144,145,131,132,,,,,,268,,,,,,,136,135,,120,141,138',
'137,133,134,128,126,118,140,119,443,434,146,,444,,,,,,,,,142,143,,139',
'121,122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,,,,136',
'135,,120,141,138,137,133,134,128,126,118,140,119,,,146' ]
        racc_action_table = arr = ::Array.new(24934, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'0,0,0,0,0,948,734,736,0,0,392,746,746,0,513,0,0,0,0,0,0,0,615,553,681',
'457,457,0,0,0,0,0,0,0,698,698,0,314,55,293,314,508,0,0,0,0,0,0,924,0',
'0,0,0,0,691,0,0,0,377,0,0,681,0,0,839,377,366,317,692,71,317,604,604',
'392,736,508,733,71,896,959,354,457,693,615,615,0,889,960,0,383,698,0',
'615,597,0,252,0,838,597,735,0,746,357,348,321,293,746,485,0,961,347',
'734,736,0,0,0,0,0,0,948,962,948,0,0,948,55,293,421,421,421,0,421,927',
'0,507,421,421,312,0,0,421,485,421,421,421,421,421,421,421,696,383,383',
'383,697,421,421,421,421,421,421,421,604,924,421,924,564,735,924,507',
'839,421,587,366,421,421,967,421,421,421,421,421,733,421,421,421,354',
'421,421,961,421,421,366,896,959,896,959,366,896,959,962,889,960,889',
'960,735,889,960,357,699,321,687,838,421,838,838,421,838,348,421,348',
'290,421,348,961,347,961,347,421,961,347,287,578,310,310,962,421,962',
'949,949,962,421,421,421,421,421,421,927,251,927,421,421,927,689,577',
'432,432,432,421,432,690,421,497,432,432,568,421,421,432,704,432,432',
'432,432,432,432,432,587,705,687,791,628,432,432,432,432,432,432,432',
'290,967,432,967,708,26,967,497,643,432,287,387,432,432,387,432,432,432',
'432,432,432,432,432,432,710,432,432,687,432,432,841,689,689,628,310',
'685,687,290,690,690,642,791,628,578,712,578,290,287,578,807,525,432',
'371,209,432,432,287,432,643,371,432,379,432,686,432,577,432,577,379',
'689,577,26,387,387,432,934,690,934,689,432,432,432,432,432,432,690,83',
'83,432,432,642,211,26,369,369,369,432,369,352,432,352,369,369,209,432',
'432,369,453,369,369,369,369,369,369,369,14,852,807,525,629,369,369,369',
'369,369,369,369,852,394,369,841,686,841,389,480,841,369,385,300,369',
'369,211,369,369,369,369,369,713,369,369,369,35,369,369,807,525,14,453',
'714,703,852,852,703,807,525,14,480,792,686,629,480,480,480,480,860,25',
'25,686,369,300,717,369,315,25,369,860,683,369,300,394,394,394,35,430',
'389,389,389,852,385,385,385,35,346,346,42,42,369,369,369,369,369,369',
'42,855,855,369,369,792,860,860,440,440,440,369,440,351,369,722,440,440',
'351,369,369,440,430,440,440,440,440,440,440,440,313,430,728,313,730',
'440,440,440,440,440,440,440,3,860,440,208,208,3,42,648,42,440,540,208',
'440,440,732,440,440,440,440,440,440,440,440,440,539,440,440,538,440',
'440,316,648,648,648,648,648,648,648,648,648,648,648,288,288,648,648',
'376,278,648,648,288,440,278,376,440,440,255,440,737,208,440,208,440',
'648,440,648,440,648,648,648,648,648,648,648,440,648,219,840,840,440',
'440,440,440,440,440,840,318,431,440,440,741,648,742,441,441,441,440',
'441,288,440,288,441,441,213,440,440,441,305,441,441,441,441,441,441',
'441,5,5,5,5,5,441,441,441,441,441,441,441,370,431,441,711,711,529,840',
'370,840,441,431,711,441,441,212,441,441,441,441,441,441,441,441,441',
'526,441,441,326,441,441,573,484,484,484,484,484,484,484,484,484,484',
'484,355,355,484,484,372,744,484,484,355,441,744,372,441,441,753,441',
'210,711,441,711,441,484,441,484,441,484,484,484,484,484,484,484,441',
'484,757,303,303,441,441,441,441,441,441,303,720,720,441,441,758,484',
'484,442,442,442,441,442,355,441,355,442,442,760,441,441,442,761,442',
'442,442,442,442,442,442,680,680,680,680,680,442,442,442,442,442,442',
'442,375,762,442,589,589,750,303,375,303,442,750,589,442,442,764,442',
'442,442,442,442,442,442,442,442,519,442,442,767,442,442,676,786,786',
'786,786,786,786,786,786,786,786,786,364,364,786,786,373,327,786,786',
'364,442,517,373,442,442,774,442,514,589,442,589,442,786,442,786,442',
'786,786,786,786,786,786,786,442,786,688,739,739,442,442,442,442,442',
'442,739,37,37,442,442,739,786,329,451,451,451,442,451,364,442,364,451',
'451,509,442,442,451,330,451,451,451,451,451,451,451,503,361,296,296',
'502,451,451,451,451,451,451,451,374,499,451,925,925,193,739,374,739',
'451,673,925,451,451,342,451,451,451,451,451,451,451,451,451,345,451',
'451,579,451,451,795,875,875,875,875,875,875,875,875,875,875,875,361',
'361,875,875,796,110,875,875,361,451,110,110,451,361,799,451,801,925',
'451,925,451,875,97,875,451,875,875,875,875,875,875,875,451,875,361,13',
'13,451,451,451,451,451,451,13,15,15,451,451,804,875,805,945,945,945',
'451,945,361,451,361,945,945,806,451,451,945,580,945,945,945,945,945',
'945,945,279,279,279,279,279,945,945,945,945,945,945,945,561,561,945',
'811,267,814,13,419,13,945,461,815,945,945,669,945,945,945,945,945,945',
'945,945,945,353,945,945,657,945,945,830,419,419,419,419,419,419,419',
'419,419,419,419,461,466,419,419,461,461,419,419,833,945,78,77,945,655',
'465,945,462,464,945,463,945,419,843,419,945,419,419,419,419,419,419',
'419,945,419,846,847,848,945,945,945,945,945,945,356,280,358,945,945',
'462,419,362,419,462,462,945,858,302,945,437,870,858,871,945,945,943',
'943,943,943,943,282,301,858,943,943,429,428,424,943,882,943,943,943',
'943,943,943,943,824,41,647,36,555,943,943,943,943,943,943,943,892,893',
'943,422,858,858,858,858,943,943,898,943,943,943,899,943,943,943,943',
'943,34,943,943,943,646,943,943,283,943,943,907,471,909,912,913,824,824',
'824,824,555,555,555,555,858,914,939,915,416,471,471,939,943,20,284,943',
'295,640,943,926,410,943,939,943,471,391,471,943,471,471,471,471,637',
'12,471,943,471,936,388,11,943,943,943,943,943,943,944,10,619,943,943',
'632,9,939,939,939,939,943,768,768,943,289,768,768,768,943,943,935,935',
'935,935,935,953,955,956,935,935,958,6,292,935,626,935,935,935,935,935',
'935,935,1,291,,939,,935,935,935,935,935,935,935,,569,935,569,569,569',
',569,935,935,,935,935,935,,935,935,935,935,935,,935,935,935,,935,935',
',935,935,,672,672,672,672,672,672,672,672,672,672,672,,,672,672,,,672',
'672,,935,,,935,,,935,,,935,,935,672,,672,935,672,672,672,672,672,672',
'672,935,672,,,,935,935,935,935,935,935,,,,935,935,,672,,672,,,935,,',
'935,,,,,935,935,930,930,930,930,930,,,,930,930,,,,930,,930,930,930,930',
'930,930,930,,,,,,930,930,930,930,930,930,930,,829,930,829,829,829,,829',
'930,930,,930,930,930,,930,930,930,930,930,,930,930,930,,930,930,,930',
'930,,793,793,793,793,793,793,793,793,793,793,793,,,793,793,,,793,793',
',930,,,930,,,930,,,930,,930,793,,793,930,793,793,793,793,793,793,793',
'930,793,,,,930,930,930,930,930,930,,,,930,930,,793,,452,452,452,930',
'452,,930,,452,452,,930,930,452,,452,452,452,452,452,452,452,,,,,,452',
'452,452,452,452,452,452,,,452,,,,,,,452,,,452,452,,452,452,452,452,452',
'452,452,452,452,,452,452,,452,452,,19,19,19,19,19,19,19,19,19,19,19',
',,19,19,,,19,19,,452,,,452,,,452,,,452,,452,19,,19,452,19,19,19,19,19',
'19,19,452,19,,,,452,452,452,452,452,452,,,,452,452,,19,,454,454,454',
'452,454,,452,,454,454,,452,452,454,,454,454,454,454,454,454,454,,,,',
',454,454,454,454,454,454,454,,,454,,,,,,,454,,,454,454,,454,454,454',
'454,454,,454,454,454,,454,454,,454,454,,873,873,873,873,873,873,873',
'873,873,873,873,,,873,873,,,873,873,,454,,,454,,,454,,,454,,,873,,873',
'454,873,873,873,873,873,873,873,454,873,,,,454,454,454,454,454,454,',
',,454,454,,873,,17,17,17,454,17,,454,,17,17,,454,454,17,,17,17,17,17',
'17,17,17,,,,,,17,17,17,17,17,17,17,,,17,,,,,,,17,,,17,17,,17,17,17,17',
'17,,17,17,17,,17,17,,17,17,,446,446,446,446,446,446,446,446,446,446',
'446,,,446,446,,,446,446,,17,,,17,17,,17,,,17,,,446,,446,17,446,446,446',
'446,446,446,446,17,446,,,,17,17,17,17,17,17,,,,17,17,,446,,18,18,18',
'17,18,,17,,18,18,,17,17,18,,18,18,18,18,18,18,18,,,,,,18,18,18,18,18',
'18,18,,,18,,,,,,,18,,,18,18,,18,18,18,18,18,,18,18,18,,18,18,,18,18',
',249,249,249,249,249,249,249,249,249,249,249,,,249,249,,,249,249,,18',
',,18,,,18,,,18,,,249,,249,18,249,249,249,249,249,249,249,18,249,,,,18',
'18,18,18,18,18,,,,18,18,,249,,,,,18,,,18,,,,,18,18,923,923,923,923,923',
',,,923,923,,,,923,,923,923,923,923,923,923,923,,,,,,923,923,923,923',
'923,923,923,,,923,,,,,,923,923,,923,923,923,,923,923,923,923,923,,923',
'923,923,,923,923,,923,923,,536,536,536,536,536,536,536,536,536,536,536',
',,536,536,,,536,536,,923,,,923,,,923,,,923,,923,536,,536,923,536,536',
'536,536,536,536,536,923,536,,,,923,923,923,923,923,923,,,,923,923,,536',
',921,921,921,923,921,,923,,921,921,,923,923,921,,921,921,921,921,921',
'921,921,,,,,,921,921,921,921,921,921,921,,,921,,,,,,,921,,,921,921,',
'921,921,921,921,921,,921,921,921,,921,921,,921,921,,784,784,784,784',
'784,784,784,784,784,784,784,,,784,784,,,784,784,,921,,,921,,,921,,,921',
',921,784,921,784,921,784,784,784,784,784,784,784,921,784,,,,921,921',
'921,921,921,921,,,,921,921,,784,,22,22,22,921,22,,921,,22,22,,921,921',
'22,,22,22,22,22,22,22,22,,,,,,22,22,22,22,22,22,22,,,22,,,,,,,22,,,22',
'22,,22,22,22,22,22,22,22,22,22,,22,22,,22,22,,781,781,781,781,781,781',
'781,781,781,781,781,,,781,781,,,781,781,,22,,,22,,,22,,,22,,22,781,22',
'781,22,781,781,781,781,781,781,781,22,781,,,,22,22,22,22,22,22,,,,22',
'22,,781,,23,23,23,22,23,,22,,23,23,,22,22,23,,23,23,23,23,23,23,23,',
',,,,23,23,23,23,23,23,23,,,23,,,,,,,23,,,23,23,,23,23,23,23,23,23,23',
'23,23,,23,23,,23,23,,695,695,695,695,695,695,695,695,695,695,695,,,695',
'695,,,695,695,,23,,,23,,,23,,,23,,23,695,23,695,23,695,695,695,695,695',
'695,695,23,695,,,,23,23,23,23,23,23,,,,23,23,,695,,24,24,24,23,24,,23',
',24,24,,23,23,24,,24,24,24,24,24,24,24,,,,,,24,24,24,24,24,24,24,,,24',
',,,,,,24,,,24,24,,24,24,24,24,24,24,24,24,24,,24,24,,24,24,,427,427',
'427,427,427,427,427,427,427,427,427,,,427,427,,,427,427,,24,,,24,,,24',
',,24,,24,427,24,427,24,427,427,427,427,427,427,427,24,427,,,,24,24,24',
'24,24,24,,,,24,24,,427,,,,,24,,,24,,,,,24,24,904,904,904,904,904,,,',
'904,904,,,,904,,904,904,904,904,904,904,904,,,,,,904,904,904,904,904',
'904,904,,,904,,,,,,904,904,,904,904,904,,904,904,904,904,904,,904,904',
'904,,904,904,,904,904,,779,779,779,779,779,779,779,779,779,779,779,',
',779,779,,,779,779,,904,,,904,,,904,,,904,,904,779,,779,904,779,779',
'779,779,779,779,779,904,779,,,,904,904,904,904,904,904,,,,904,904,,779',
',,,,904,,,904,,,,,904,904,901,901,901,901,901,,,,901,901,,,,901,,901',
'901,901,901,901,901,901,,,,,,901,901,901,901,901,901,901,,,901,,,,,',
'901,901,,901,901,901,,901,901,901,901,901,,901,901,901,,901,901,,901',
'901,,773,773,773,773,773,773,773,773,773,773,773,,,773,773,,,773,773',
',901,,,901,,,901,,,901,,901,773,,773,901,773,773,773,773,773,773,773',
'901,773,,,,901,901,901,901,901,901,,,,901,901,,773,,27,27,27,901,27',
',901,,27,27,,901,901,27,,27,27,27,27,27,27,27,,,,,,27,27,27,27,27,27',
'27,,566,27,566,566,566,,566,,27,,,27,27,,27,27,27,27,27,27,27,27,27',
',27,27,,27,27,338,,338,338,338,,338,,,718,566,718,718,718,,718,,,566',
',,27,,,27,27,,27,,,27,,27,,27,,27,,,338,,,,,27,,,338,718,27,27,27,27',
'27,27,,718,,27,27,,,,455,455,455,27,455,,27,,455,455,,27,27,455,,455',
'455,455,455,455,455,455,,,,,,455,455,455,455,455,455,455,,,455,,,,481',
',,455,,,455,455,,455,455,455,455,455,,455,455,455,,455,455,,455,455',
',482,482,482,482,482,482,482,481,,482,482,481,481,481,481,,,482,482',
',455,,,455,,,455,,,455,,,482,,482,455,482,482,482,482,482,482,482,455',
'482,,,,455,455,455,455,455,455,,,,455,455,,,,,,,455,,,455,,,,,455,455',
'30,30,30,30,30,,,,30,30,,,,30,,30,30,30,30,30,30,30,,,,,,30,30,30,30',
'30,30,30,,,30,,,,,,30,30,,30,30,30,,30,30,30,30,30,,30,30,30,,30,30',
',30,30,,470,470,470,470,470,470,470,,,470,470,,,,,,,470,470,,30,,,30',
',,30,,,30,,30,470,,470,30,470,470,470,470,470,470,470,30,470,,,,30,30',
'30,30,30,30,,,,30,30,,,,31,31,31,30,31,,30,,31,31,,30,30,31,,31,31,31',
'31,31,31,31,,,,,,31,31,31,31,31,31,31,,,31,,,,,,,31,,,31,31,,31,31,31',
'31,31,,31,31,31,,31,31,652,,652,652,652,469,652,,,,,,,,,,,,,,,,469,469',
'31,,,31,,,31,,,31,,31,,469,,652,,469,469,469,469,,,652,652,652,652,',
'31,31,31,31,31,31,652,,,31,31,,,,32,32,32,31,32,,31,,32,32,,31,31,32',
',32,32,32,32,32,32,32,,,,,,32,32,32,32,32,32,32,,,32,,,,,,,32,,,32,32',
',32,32,32,32,32,,32,32,32,,32,32,600,,600,600,600,600,600,,,,,,,,,,600',
',,,,,,,32,,,32,,,32,,,32,,,,,,600,600,,,,,,,600,600,600,600,,32,32,32',
'32,32,32,,,,32,32,,,,32,,,32,,,32,,,,,32,32,900,900,900,,900,,,600,900',
'900,,,,900,,900,900,900,900,900,900,900,,,,,,900,900,900,900,900,900',
'900,,,900,,,,,,,900,,,900,900,,900,900,900,900,900,,900,900,900,,900',
'900,,900,900,,459,459,459,459,459,459,459,459,459,459,459,,,459,459',
',,459,459,,900,,,900,,,900,,,900,,900,459,,459,900,459,459,459,459,459',
'459,459,900,459,,,,900,900,900,900,900,900,,,,900,900,,,,456,456,456',
'900,456,,900,,456,456,,900,900,456,,456,456,456,456,456,456,456,,,,',
',456,456,456,456,456,456,456,,,456,,,,,,,456,,,456,456,,456,456,456',
'456,456,,456,456,456,,456,456,,456,456,,483,483,483,483,483,483,483',
'483,,483,483,,,,,,,483,483,,456,,,456,,,456,,,456,,,483,,483,456,483',
'483,483,483,483,483,483,456,483,,,,456,456,456,456,456,456,,,,456,456',
',,,890,890,890,456,890,,456,,890,890,,456,456,890,,890,890,890,890,890',
'890,890,,,,,,890,890,890,890,890,890,890,,,890,,,,,,,890,,,890,890,',
'890,890,890,890,890,,890,890,890,,890,890,322,,322,322,322,,322,,,,',
',,,,,,,,,,,,,890,,,890,,,890,,,890,,,,,,322,,322,,,,,,322,322,322,322',
',890,890,890,890,890,890,,,,890,890,,,,487,487,487,890,487,,890,,487',
'487,,890,890,487,,487,487,487,487,487,487,487,,,,,,487,487,487,487,487',
'487,487,,,487,,,,,,,487,,,487,487,,487,487,487,487,487,487,487,487,487',
',487,487,,487,487,,460,460,460,460,460,460,460,460,460,460,460,,,460',
'460,,,460,460,,487,,,487,,,487,,,487,,487,460,487,460,487,460,460,460',
'460,460,460,460,487,460,,,,487,487,487,487,487,487,,,,487,487,,,,38',
'38,38,487,38,,487,,38,38,,487,487,38,,38,38,38,38,38,38,38,,,,,,38,38',
'38,38,38,38,38,,,38,,,,,,,38,,,38,38,,38,38,38,38,38,,38,38,38,,38,38',
',38,38,,472,,,,,,,,,,,,,,,,,472,472,,38,,,38,,,38,,,38,,,472,,472,38',
'472,472,472,472,,,472,38,472,,,,38,38,38,38,38,38,,,,38,38,,,,39,39',
'39,38,39,,38,,39,39,,38,38,39,,39,39,39,39,39,39,39,,,,,,39,39,39,39',
'39,39,39,,,39,,,,,,,39,,,39,39,,39,39,39,39,39,,39,39,39,,39,39,,39',
'39,,473,,,,,,,,,,,,,,,,,473,473,,39,,,39,,,39,,,39,,,473,,473,39,473',
'473,473,473,,,473,39,473,,,,39,39,39,39,39,39,,,,39,39,,,,40,40,40,39',
'40,,39,,40,40,,39,39,40,,40,40,40,40,40,40,40,,,,,,40,40,40,40,40,40',
'40,,,40,,,,,,,40,,,40,40,,40,40,40,40,40,,40,40,40,,40,40,,40,40,,479',
'479,479,479,479,479,479,,,479,479,,,,,,,479,479,,40,,,40,,,40,,,40,',
',479,,479,40,479,479,479,479,479,479,479,40,479,,,,40,40,40,40,40,40',
',,,40,40,,,,,,,40,,,40,,,,,40,40,886,886,886,886,886,,,,886,886,,,,886',
',886,886,886,886,886,886,886,,,,,,886,886,886,886,886,886,886,,,886',
',,,,,886,886,,886,886,886,,886,886,886,886,886,,886,886,886,,886,886',
',886,886,,478,478,478,478,478,478,478,,,478,478,,,,,,,478,478,,886,',
',886,,,886,,,886,,886,478,,478,886,478,478,478,478,478,478,478,886,478',
',,,886,886,886,886,886,886,,,,886,886,,,,881,881,881,886,881,,886,,881',
'881,,886,886,881,,881,881,881,881,881,881,881,,,,,,881,881,881,881,881',
'881,881,,,881,,,,,,,881,,,881,881,,881,881,881,881,881,881,881,881,881',
',881,881,,881,881,,477,477,477,477,477,477,477,,,477,477,,,,,,,477,477',
',881,,,881,,,881,,,881,,,477,881,477,881,477,477,477,477,477,477,477',
'881,477,,,,881,881,881,881,881,881,,,,881,881,,,,489,489,489,881,489',
',881,,489,489,,881,881,489,,489,489,489,489,489,489,489,,,,,,489,489',
'489,489,489,489,489,,,489,,,,,,,489,,,489,489,,489,489,489,489,489,489',
'489,489,489,,489,489,,489,489,,474,,,,,,,,,,,,,,,,,474,474,,489,,,489',
',,489,,,489,,,474,489,474,489,474,474,474,474,,,474,489,474,,,,489,489',
'489,489,489,489,,,,489,489,,,,52,52,52,489,52,,489,,52,52,,489,489,52',
',52,52,52,52,52,52,52,,,,,,52,52,52,52,52,52,52,,,52,,,,,,,52,,,52,52',
',52,52,52,52,52,,52,52,52,,52,52,,52,52,,475,475,475,475,475,475,475',
',,475,475,,,,,,,475,475,,52,,,52,,,52,,,52,,,475,,475,52,475,475,475',
'475,475,475,475,52,475,,,,52,52,52,52,52,52,,,,52,52,,,,53,53,53,52',
'53,,52,,53,53,,52,52,53,,53,53,53,53,53,53,53,,,,,,53,53,53,53,53,53',
'53,,,53,,,,,,,53,,,53,53,,53,53,53,53,53,53,53,53,53,,53,53,,53,53,',
'476,476,476,476,476,476,476,,,476,476,,,,,,,476,476,,53,,,53,,,53,,',
'53,,53,476,,476,53,476,476,476,476,476,476,476,53,476,,,,53,53,53,53',
'53,53,,,,53,53,,,,54,54,54,53,54,,53,,54,54,,53,53,54,,54,54,54,54,54',
'54,54,,,,,,54,54,54,54,54,54,54,,,54,,,,,,,54,,,54,54,,54,54,54,54,54',
'54,54,54,54,,54,54,,54,54,,467,,,,,,,,,,,,,,,,,467,467,,54,,,54,,,54',
',,54,,,467,,467,54,467,467,467,467,,,,54,,,,,54,54,54,54,54,54,,,,54',
'54,,,,877,877,877,54,877,,54,,877,877,,54,54,877,,877,877,877,877,877',
'877,877,,,,,,877,877,877,877,877,877,877,,,877,,,,,,,877,,,877,877,',
'877,877,877,877,877,,877,877,877,,877,877,,877,877,,468,,,,,,,,,,,,',
',,,,468,468,,877,,,877,,,877,,,877,,,468,,468,877,468,468,468,468,,',
',877,,,,,877,877,877,877,877,877,,,,877,877,,,,876,876,876,877,876,',
'877,,876,876,,877,877,876,,876,876,876,876,876,876,876,,,,,,876,876',
'876,876,876,876,876,,,876,,,,,,,876,,,876,876,,876,876,876,876,876,',
'876,876,876,,876,876,,876,876,,,,,,,,,,,,,,,,,,,,,,876,,,876,,,876,',
',876,,,,,,876,,,,,,,,876,,,,,876,876,876,876,876,876,,,,876,876,,,,57',
'57,57,876,57,,876,,57,57,,876,876,57,,57,57,57,57,57,57,57,,,,,,57,57',
'57,57,57,57,57,,,57,,,,,,,57,,,57,57,,57,57,57,57,57,,57,57,57,,57,57',
',57,57,,,,,,,,,,,,,,,,,,,,,,57,,,57,,,57,,,57,,,,,,57,,,,,,,,57,,,,',
'57,57,57,57,57,57,,,,57,57,,,,58,58,58,57,58,,57,,58,58,,57,57,58,,58',
'58,58,58,58,58,58,,,,,,58,58,58,58,58,58,58,,,58,,,,,,,58,,,58,58,,58',
'58,58,58,58,,58,58,58,,58,58,,58,58,,,,,,,,,,,,,,,,,,,,,,58,,,58,,,58',
',,58,,,,,,58,,,,,,,,58,,,,,58,58,58,58,58,58,,,,58,58,,,,61,61,61,58',
'61,,58,,61,61,,58,58,61,,61,61,61,61,61,61,61,,,,,,61,61,61,61,61,61',
'61,,,61,,,,,,,61,,,61,61,,61,61,61,61,61,,61,61,61,,61,61,,61,61,,,',
',,,,,,,,,,,,,,,,,,61,,,61,,,61,,,61,,,,,,61,,,,,,,,61,,,,,61,61,61,61',
'61,61,,,,61,61,61,,,,,61,61,,,61,,,,,61,61,62,62,62,,62,,,,62,62,,,',
'62,,62,62,62,62,62,62,62,,,,,,62,62,62,62,62,62,62,,,62,,,,,,,62,,,62',
'62,,62,62,62,62,62,,62,62,62,,62,62,56,,56,56,56,,56,,,,,,,,,,,,,,,',
',,62,,,62,,,62,,,62,,62,,,,56,56,,,,,,,56,56,56,56,,62,62,62,62,62,62',
',,,62,62,,,,63,63,63,62,63,,62,,63,63,,62,62,63,,63,63,63,63,63,63,63',
',,,,,63,63,63,63,63,63,63,,,63,,,,,,,63,,,63,63,,63,63,63,63,63,,63',
'63,63,,63,63,559,,559,559,559,,559,,,,,,,,,,,,,,,63,,,63,,,63,,,63,',
',63,,,,,,559,,,,,,,,559,559,559,559,,63,63,63,63,63,63,,,,63,63,,,,862',
'862,862,63,862,,63,,862,862,,63,63,862,,862,862,862,862,862,862,862',
',,,,,862,862,862,862,862,862,862,,,862,,,,,,,862,,,862,862,,862,862',
'862,862,862,,862,862,862,,862,862,,862,862,,,,,,,,,,,,,,,,,,,,,,862',
',,862,,,862,,,862,,,,,,862,,,,,,,,862,,,,,862,862,862,862,862,862,,',
',862,862,,,,491,491,491,862,491,,862,,491,491,,862,862,491,,491,491',
'491,491,491,491,491,,,,,,491,491,491,491,491,491,491,,,491,,,,,,,491',
',,491,491,,491,491,491,491,491,,491,491,491,,491,491,,491,491,,,,,,',
',,,,,,,,,,,,,,,491,,,491,,,491,,,491,,,,,,491,,,,,,,,491,,,,,491,491',
'491,491,491,491,,,,491,491,,,,,,,491,,,491,,,,,491,491,835,835,835,835',
'835,,,,835,835,,,,835,,835,835,835,835,835,835,835,,,,,,835,835,835',
'835,835,835,835,,,835,,,,,,835,835,,835,835,835,,835,835,835,835,835',
',835,835,835,,835,835,,835,835,,,,,,,,,,,,,,,,,,,,,,835,,,835,,,835',
',,835,,835,,,,835,,,,,,,,835,,,,,835,835,835,835,835,835,,,,835,835',
',,,,,,835,,,835,,,,,835,835,834,834,834,834,834,,,,834,834,,,,834,,834',
'834,834,834,834,834,834,,,,,,834,834,834,834,834,834,834,,,834,,,,,',
'834,834,,834,834,834,,834,834,834,834,834,,834,834,834,,834,834,,834',
'834,,,,,,,,,,,,,,,,,,,,,,834,,,834,,,834,,,834,,834,,,,834,,,,,,,,834',
',,,,834,834,834,834,834,834,,,,834,834,,,,832,832,832,834,832,,834,',
'832,832,,834,834,832,,832,832,832,832,832,832,832,,,,,,832,832,832,832',
'832,832,832,,,832,,,,,,,832,,,832,832,,832,832,832,832,832,,832,832',
'832,,832,832,,832,832,,,,,,,,,,,,,,,,,,,,,,832,,,832,,,832,,,832,,,',
',,832,,,,,,,,832,,,,,832,832,832,832,832,832,,,,832,832,,,,,,,832,,',
'832,,,,,832,832,813,813,813,813,813,,,,813,813,,,,813,,813,813,813,813',
'813,813,813,,,,,,813,813,813,813,813,813,813,,,813,,,,,,813,813,,813',
'813,813,,813,813,813,813,813,,813,813,813,,813,813,,813,813,,,,,,,,',
',,,,,,,,,,,,,813,,,813,,,813,,,813,,813,,,,813,,,,,,,,813,,,,,813,813',
'813,813,813,813,,,,813,813,,,,84,84,84,813,84,,813,,84,84,,813,813,84',
',84,84,84,84,84,84,84,,84,,,,84,84,84,84,84,84,84,,,84,,,,,,,84,,,84',
'84,,84,84,84,84,84,84,84,84,84,,84,84,,84,84,,,,,,,,,,,,,,,,,,,,,,84',
',,84,84,,84,,,84,,84,,84,,84,,,,,,,,84,,84,,,84,84,84,84,84,84,,,,84',
'84,,,,87,87,87,84,87,,84,,87,87,,84,84,87,,87,87,87,87,87,87,87,,87',
',,,87,87,87,87,87,87,87,,,87,,,,,,,87,,,87,87,,87,87,87,87,87,87,87',
'87,87,,87,87,,87,87,,,,,,,,,,,,,,,,,,,,,,87,,,87,87,,87,,,87,,87,,87',
',87,,,,,,,,87,,87,,,87,87,87,87,87,87,,,,87,87,,,,802,802,802,87,802',
',87,,802,802,,87,87,802,,802,802,802,802,802,802,802,,,,,,802,802,802',
'802,802,802,802,,,802,,,,,,,802,,,802,802,,802,802,802,802,802,,802',
'802,802,,802,802,,802,802,,,,,,,,,,,,,,,,,,,,,,802,,,802,,,802,,,802',
',802,,,,802,,,,,,,,802,,,,,802,802,802,802,802,802,,,,802,802,,,,,,',
'802,,,802,,,,,802,802,99,99,99,99,99,,,,99,99,,,,99,,99,99,99,99,99',
'99,99,,,,,,99,99,99,99,99,99,99,,,99,,,,,,99,99,99,99,99,99,,99,99,99',
'99,99,,99,99,99,,99,99,,99,99,,,,,,,,,,,,,,,,,,,,,,99,,,99,,,99,,,99',
',99,,,,99,,,,,,,,99,,,,,99,99,99,99,99,99,,,,99,99,,,,,,99,99,,,99,',
',,,99,99,103,103,103,,103,,,,103,103,,,,103,,103,103,103,103,103,103',
'103,,,,,,103,103,103,103,103,103,103,,,103,,,,,,,103,,,103,103,,103',
'103,103,103,103,,103,103,103,,103,103,,103,103,,,,,,,,,,,,,,,,,,,,,',
'103,,,103,,,103,,,103,,,,,,103,,,,,,,,103,,,,,103,103,103,103,103,103',
',,,103,103,,,,104,104,104,103,104,,103,,104,104,,103,103,104,,104,104',
'104,104,104,104,104,,,,,,104,104,104,104,104,104,104,,,104,,,,,,,104',
',,104,104,,104,104,104,104,104,,104,104,104,,104,104,,104,104,,,,,,',
',,,,,,,,,,,,,,,104,,,104,,,104,,,104,,,,,,104,,,,,,,,104,,,,,104,104',
'104,104,104,104,,,,104,104,,,,105,105,105,104,105,,104,,105,105,,104',
'104,105,,105,105,105,105,105,105,105,,,,,,105,105,105,105,105,105,105',
',,105,,,,,,,105,,,105,105,,105,105,105,105,105,,105,105,105,,105,105',
',105,105,,,,,,,,,,,,,,,,,,,,,,105,,,105,,,105,,,105,,,,,,105,,,,,,,',
'105,,,,,105,105,105,105,105,105,,,,105,105,,,,106,106,106,105,106,,105',
',106,106,,105,105,106,,106,106,106,106,106,106,106,,,,,,106,106,106',
'106,106,106,106,,,106,,,,,,,106,,,106,106,,106,106,106,106,106,,106',
'106,106,,106,106,,106,106,,,,,,,,,,,,,,,,,,,,,,106,,,106,,,106,,,106',
',,,,,106,,,,,,,,106,,,,,106,106,106,106,106,106,,,,106,106,,,,,,,106',
',,106,,,,,106,106,107,107,107,107,107,,,,107,107,,,,107,,107,107,107',
'107,107,107,107,,,,,,107,107,107,107,107,107,107,,,107,,,,,,107,107',
',107,107,107,,107,107,107,107,107,,107,107,107,,107,107,,107,107,,,',
',,,,,,,,,,,,,,,,,,107,,,107,,,107,,,107,,107,,,,107,,,,,,,,107,,,,,107',
'107,107,107,107,107,,,,107,107,,,,,,,107,,,107,,,,,107,107,108,108,108',
'108,108,,,,108,108,,,,108,,108,108,108,108,108,108,108,,,,,,108,108',
'108,108,108,108,108,,,108,,,,,,108,108,108,108,108,108,,108,108,108',
'108,108,,108,108,108,,108,108,,108,108,,,,,,,,,,,,,,,,,,,,,,108,,,108',
',,108,,,108,,108,,,,108,,,,,,,,108,,,,,108,108,108,108,108,108,,,,108',
'108,,,,790,790,790,108,790,,108,,790,790,,108,108,790,,790,790,790,790',
'790,790,790,,,,,,790,790,790,790,790,790,790,,,790,,,,,,,790,,,790,790',
',790,790,790,790,790,,790,790,790,,790,790,,790,790,,,,,,,,,,,,,,,,',
',,,,,790,,,790,,,790,,,790,,,,,,790,,,,,,,,790,,,,,790,790,790,790,790',
'790,,,,790,790,,,,789,789,789,790,789,,790,,789,789,,790,790,789,,789',
'789,789,789,789,789,789,,,,,,789,789,789,789,789,789,789,,,789,,,,,',
',789,,,789,789,,789,789,789,789,789,,789,789,789,,789,789,,789,789,',
',,,,,,,,,,,,,,,,,,,,789,,,789,,,789,,,789,,,,,,789,,,,,,,,789,,,,,789',
'789,789,789,789,789,,,,789,789,,,,,,,789,,,789,,,,,789,789,195,195,195',
'195,195,,,,195,195,,,,195,,195,195,195,195,195,195,195,,,,,,195,195',
'195,195,195,195,195,,,195,,,,,,195,195,,195,195,195,,195,195,195,195',
'195,,195,195,195,,195,195,,195,195,,,,,,,,,,,,,,,,,,,,,,195,,,195,,',
'195,,,195,,195,,,,195,,,,,,,,195,,,,,195,195,195,195,195,195,,,,195',
'195,,,,196,196,196,195,196,,195,,196,196,,195,195,196,,196,196,196,196',
'196,196,196,,,,,,196,196,196,196,196,196,196,,,196,,,,,,,196,,,196,196',
',196,196,196,196,196,,196,196,196,,196,196,,196,196,,,,,,,,,,,,,,,,',
',,,,,196,,,196,,,196,,,196,,196,,,,196,,,,,,,,196,,,,,196,196,196,196',
'196,196,,,,196,196,,,,197,197,197,196,197,,196,,197,197,,196,196,197',
',197,197,197,197,197,197,197,,,,,,197,197,197,197,197,197,197,,,197',
',,,,,,197,,,197,197,,197,197,197,197,197,,197,197,197,,197,197,,197',
'197,,,,,,,,,,,,,,,,,,,,,,197,,,197,,,197,,,197,,197,,,,197,,,,,,,,197',
',,,,197,197,197,197,197,197,,,,197,197,,,,198,198,198,197,198,,197,',
'198,198,,197,197,198,,198,198,198,198,198,198,198,,,,,,198,198,198,198',
'198,198,198,,,198,,,,,,,198,,,198,198,,198,198,198,198,198,,198,198',
'198,,198,198,,198,198,,,,,,,,,,,,,,,,,,,,,,198,,,198,,,198,,,198,,,',
',,198,,,,,,,,198,,,,,198,198,198,198,198,198,,,,198,198,,,,199,199,199',
'198,199,,198,,199,199,,198,198,199,,199,199,199,199,199,199,199,,,,',
',199,199,199,199,199,199,199,,,199,,,,,,,199,,,199,199,,199,199,199',
'199,199,199,199,199,199,,199,199,,199,199,,,,,,,,,,,,,,,,,,,,,,199,',
',199,,,199,,,199,,199,,,,199,,,,,,,,199,,,,,199,199,199,199,199,199',
',,,199,199,,,,200,200,200,199,200,,199,,200,200,,199,199,200,,200,200',
'200,200,200,200,200,,,,,,200,200,200,200,200,200,200,,,200,,,,,,,200',
',,200,200,,200,200,200,200,200,200,200,200,200,,200,200,,200,200,,,',
',,,,,,,,,,,,,,,,,,200,,,200,,,200,,,200,,200,,,,200,,,,,,,,200,,,,,200',
'200,200,200,200,200,,,,200,200,,,,788,788,788,200,788,,200,,788,788',
',200,200,788,,788,788,788,788,788,788,788,,,,,,788,788,788,788,788,788',
'788,,,788,,,,,,,788,,,788,788,,788,788,788,788,788,,788,788,788,,788',
'788,,788,788,,,,,,,,,,,,,,,,,,,,,,788,,,788,,,788,,,788,,,,,,788,,,',
',,,,788,,,,,788,788,788,788,788,788,,,,788,788,,,,777,777,777,788,777',
',788,,777,777,,788,788,777,,777,777,777,777,777,777,777,,,,,,777,777',
'777,777,777,777,777,,,777,,,,,,,777,,,777,777,,777,777,777,777,777,',
'777,777,777,,777,777,,777,777,,,,,,,,,,,,,,,,,,,,,,777,,,777,,,777,',
',777,,,,,,777,,,,,,,,777,,,,,777,777,777,777,777,777,,,,777,777,,,,776',
'776,776,777,776,,777,,776,776,,777,777,776,,776,776,776,776,776,776',
'776,,,,,,776,776,776,776,776,776,776,,,776,,,,,,,776,,,776,776,,776',
'776,776,776,776,,776,776,776,,776,776,,776,776,,,,,,,,,,,,,,,,,,,,,',
'776,,,776,,,776,,,776,,,,,,776,,,,,,,,776,,,,,776,776,776,776,776,776',
',,,776,776,,,,204,204,204,776,204,,776,,204,204,,776,776,204,,204,204',
'204,204,204,204,204,,,,,,204,204,204,204,204,204,204,,,204,,,,,,,204',
',,204,204,,204,204,204,204,204,,204,204,204,,204,204,,204,204,,,,,,',
',,,,,,,,,,,,,,,204,,,204,,,204,,,204,,,,,,204,,,,,,,,204,,,,,204,204',
'204,204,204,204,,,,204,204,,,,205,205,205,204,205,,204,,205,205,,204',
'204,205,,205,205,205,205,205,205,205,,,,,,205,205,205,205,205,205,205',
',,205,,,,,,,205,,,205,205,,205,205,205,205,205,,205,205,205,,205,205',
',205,205,,,,,,,,,,,,,,,,,,,,,,205,,,205,,,205,,,205,,,,,,205,,,,,,,',
'205,,,,,205,205,205,205,205,205,,,,205,205,,,,206,206,206,205,206,,205',
',206,206,,205,205,206,,206,206,206,206,206,206,206,,,,,,206,206,206',
'206,206,206,206,,,206,,,,,,,206,,,206,206,,206,206,206,206,206,,206',
'206,206,,206,206,,206,206,,,,,,,,,,,,,,,,,,,,,,206,,,206,,,206,,,206',
',,,,,206,,,,,,,,206,,,,,206,206,206,206,206,206,,,,206,206,,,,775,775',
'775,206,775,,206,,775,775,,206,206,775,,775,775,775,775,775,775,775',
',,,,,775,775,775,775,775,775,775,,,775,,,,,,,775,,,775,775,,775,775',
'775,775,775,,775,775,775,,775,775,,775,775,,,,,,,,,,,,,,,,,,,,,,775',
',,775,,,775,,,775,,,,,,775,,,,,,,,775,,,,,775,775,775,775,775,775,,',
',775,775,,,,,,,775,,,775,,,,,775,775,769,769,769,769,769,,,,769,769',
',,,769,,769,769,769,769,769,769,769,,,,,,769,769,769,769,769,769,769',
',,769,,,,,,769,769,,769,769,769,,769,769,769,769,769,,769,769,769,,769',
'769,,769,769,,,,,,,,,,,,,,,,,,,,,,769,,,769,,,769,,,769,,769,,,,769',
',,,,,,,769,,,,,769,769,769,769,769,769,,,,769,769,,,,755,755,755,769',
'755,,769,,755,755,,769,769,755,,755,755,755,755,755,755,755,,,,,,755',
'755,755,755,755,755,755,,,755,,,,,,,755,,,755,755,,755,755,755,755,755',
',755,755,755,,755,755,,755,755,,,,,,,,,,,,,,,,,,,,,,755,,,755,,,755',
',,755,,,,,,755,,,,,,,,755,,,,,755,755,755,755,755,755,,,,755,755,,,',
',,,755,,,755,,,,,755,755,748,748,748,748,748,,,,748,748,,,,748,,748',
'748,748,748,748,748,748,,,,,,748,748,748,748,748,748,748,,,748,,,,,',
'748,748,,748,748,748,,748,748,748,748,748,,748,748,748,,748,748,,748',
'748,,,,,,,,,,,,,,,,,,,,,,748,,,748,,,748,,,748,,748,,,,748,,,,,,,,748',
',,,,748,748,748,748,748,748,,,,748,748,,,,,,,748,,,748,,,,,748,748,747',
'747,747,747,747,,,,747,747,,,,747,,747,747,747,747,747,747,747,,,,,',
'747,747,747,747,747,747,747,,,747,,,,,,747,747,,747,747,747,,747,747',
'747,747,747,,747,747,747,,747,747,,747,747,,,,,,,,,,,,,,,,,,,,,,747',
',,747,,,747,,,747,,747,,,,747,,,,,,,,747,,,,,747,747,747,747,747,747',
',,,747,747,,,,,,,747,,,747,,,,,747,747,743,743,743,743,743,,,,743,743',
',,,743,,743,743,743,743,743,743,743,,,,,,743,743,743,743,743,743,743',
',,743,,,,,,743,743,,743,743,743,,743,743,743,743,743,,743,743,743,,743',
'743,,743,743,,,,,,,,,,,,,,,,,,,,,,743,,,743,,,743,,,743,,743,,,,743',
',,,,,,,743,,,,,743,743,743,743,743,743,,,,743,743,,,,,,,743,,,743,,',
',,743,743,214,214,214,214,214,,,,214,214,,,,214,,214,214,214,214,214',
'214,214,,,,,,214,214,214,214,214,214,214,,,214,,,,,,214,214,,214,214',
'214,,214,214,214,214,214,,214,214,214,,214,214,,214,214,,,,,,,,,,,,',
',,,,,,,,,214,,,214,,,214,,,214,,214,,,,214,,,,,,,,214,,,,,214,214,214',
'214,214,214,,,,214,214,,,,215,215,215,214,215,,214,,215,215,,214,214',
'215,,215,215,215,215,215,215,215,,,,,,215,215,215,215,215,215,215,,',
'215,,,,,,,215,,,215,215,,215,215,215,215,215,,215,215,215,,215,215,',
'215,215,,,,,,,,,,,,,,,,,,,,,,215,,,215,,215,215,,,215,,,,,,215,,,,,',
',,215,,,,,215,215,215,215,215,215,,,,215,215,,,,218,218,218,215,218',
',215,,218,218,,215,215,218,,218,218,218,218,218,218,218,,,,,,218,218',
'218,218,218,218,218,,,218,,,,,,,218,,,218,218,,218,218,218,218,218,',
'218,218,218,,218,218,,218,218,,,,,,,,,,,,,,,,,,,,,,218,,,218,,,218,',
',218,,,,,,218,,,,,,,,218,,,,,218,218,218,218,218,218,,,,218,218,,,,738',
'738,738,218,738,,218,,738,738,,218,218,738,,738,738,738,738,738,738',
'738,,,,,,738,738,738,738,738,738,738,,,738,,,,,,,738,,,738,738,,738',
'738,738,738,738,,738,738,738,,738,738,,738,738,,,,,,,,,,,,,,,,,,,,,',
'738,,,738,,,738,,,738,,,,,,738,,,,,,,,738,,,,,738,738,738,738,738,738',
',,,738,738,,,,220,220,220,738,220,,738,,220,220,,738,738,220,,220,220',
'220,220,220,220,220,,,,,,220,220,220,220,220,220,220,,,220,,,,,,,220',
',,220,220,,220,220,220,220,220,,220,220,220,,220,220,,220,220,,,,,,',
',,,,,,,,,,,,,,,220,,,220,,,220,,,220,,,,,,220,,,,,,,,220,,,,,220,220',
'220,220,220,220,,,,220,220,,,,221,221,221,220,221,,220,,221,221,,220',
'220,221,,221,221,221,221,221,221,221,,,,,,221,221,221,221,221,221,221',
',,221,,,,,,,221,,,221,221,,221,221,221,221,221,,221,221,221,,221,221',
',221,221,,,,,,,,,,,,,,,,,,,,,,221,,,221,,,221,,,221,,,,,,221,,,,,,,',
'221,,,,,221,221,221,221,221,221,,,,221,221,,,,222,222,222,221,222,,221',
',222,222,,221,221,222,,222,222,222,222,222,222,222,,,,,,222,222,222',
'222,222,222,222,,,222,,,,,,,222,,,222,222,,222,222,222,222,222,,222',
'222,222,,222,222,,222,222,,,,,,,,,,,,,,,,,,,,,,222,,,222,,,222,,,222',
',,,,,222,,,,,,,,222,,,,,222,222,222,222,222,222,,,,222,222,,,,223,223',
'223,222,223,,222,,223,223,,222,222,223,,223,223,223,223,223,223,223',
',,,,,223,223,223,223,223,223,223,,,223,,,,,,,223,,,223,223,,223,223',
'223,223,223,,223,223,223,,223,223,,223,223,,,,,,,,,,,,,,,,,,,,,,223',
',,223,,,223,,,223,,,,,,223,,,,,,,,223,,,,,223,223,223,223,223,223,,',
',223,223,,,,224,224,224,223,224,,223,,224,224,,223,223,224,,224,224',
'224,224,224,224,224,,,,,,224,224,224,224,224,224,224,,,224,,,,,,,224',
',,224,224,,224,224,224,224,224,,224,224,224,,224,224,,224,224,,,,,,',
',,,,,,,,,,,,,,,224,,,224,,,224,,,224,,,,,,224,,,,,,,,224,,,,,224,224',
'224,224,224,224,,,,224,224,,,,225,225,225,224,225,,224,,225,225,,224',
'224,225,,225,225,225,225,225,225,225,,,,,,225,225,225,225,225,225,225',
',,225,,,,,,,225,,,225,225,,225,225,225,225,225,,225,225,225,,225,225',
',225,225,,,,,,,,,,,,,,,,,,,,,,225,,,225,,,225,,,225,,,,,,225,,,,,,,',
'225,,,,,225,225,225,225,225,225,,,,225,225,,,,226,226,226,225,226,,225',
',226,226,,225,225,226,,226,226,226,226,226,226,226,,,,,,226,226,226',
'226,226,226,226,,,226,,,,,,,226,,,226,226,,226,226,226,226,226,,226',
'226,226,,226,226,,226,226,,,,,,,,,,,,,,,,,,,,,,226,,,226,,,226,,,226',
',,,,,226,,,,,,,,226,,,,,226,226,226,226,226,226,,,,226,226,,,,227,227',
'227,226,227,,226,,227,227,,226,226,227,,227,227,227,227,227,227,227',
',,,,,227,227,227,227,227,227,227,,,227,,,,,,,227,,,227,227,,227,227',
'227,227,227,,227,227,227,,227,227,,227,227,,,,,,,,,,,,,,,,,,,,,,227',
',,227,,,227,,,227,,,,,,227,,,,,,,,227,,,,,227,227,227,227,227,227,,',
',227,227,,,,228,228,228,227,228,,227,,228,228,,227,227,228,,228,228',
'228,228,228,228,228,,,,,,228,228,228,228,228,228,228,,,228,,,,,,,228',
',,228,228,,228,228,228,228,228,,228,228,228,,228,228,,228,228,,,,,,',
',,,,,,,,,,,,,,,228,,,228,,,228,,,228,,,,,,228,,,,,,,,228,,,,,228,228',
'228,228,228,228,,,,228,228,,,,229,229,229,228,229,,228,,229,229,,228',
'228,229,,229,229,229,229,229,229,229,,,,,,229,229,229,229,229,229,229',
',,229,,,,,,,229,,,229,229,,229,229,229,229,229,,229,229,229,,229,229',
',229,229,,,,,,,,,,,,,,,,,,,,,,229,,,229,,,229,,,229,,,,,,229,,,,,,,',
'229,,,,,229,229,229,229,229,229,,,,229,229,,,,230,230,230,229,230,,229',
',230,230,,229,229,230,,230,230,230,230,230,230,230,,,,,,230,230,230',
'230,230,230,230,,,230,,,,,,,230,,,230,230,,230,230,230,230,230,,230',
'230,230,,230,230,,230,230,,,,,,,,,,,,,,,,,,,,,,230,,,230,,,230,,,230',
',,,,,230,,,,,,,,230,,,,,230,230,230,230,230,230,,,,230,230,,,,231,231',
'231,230,231,,230,,231,231,,230,230,231,,231,231,231,231,231,231,231',
',,,,,231,231,231,231,231,231,231,,,231,,,,,,,231,,,231,231,,231,231',
'231,231,231,,231,231,231,,231,231,,231,231,,,,,,,,,,,,,,,,,,,,,,231',
',,231,,,231,,,231,,,,,,231,,,,,,,,231,,,,,231,231,231,231,231,231,,',
',231,231,,,,232,232,232,231,232,,231,,232,232,,231,231,232,,232,232',
'232,232,232,232,232,,,,,,232,232,232,232,232,232,232,,,232,,,,,,,232',
',,232,232,,232,232,232,232,232,,232,232,232,,232,232,,232,232,,,,,,',
',,,,,,,,,,,,,,,232,,,232,,,232,,,232,,,,,,232,,,,,,,,232,,,,,232,232',
'232,232,232,232,,,,232,232,,,,233,233,233,232,233,,232,,233,233,,232',
'232,233,,233,233,233,233,233,233,233,,,,,,233,233,233,233,233,233,233',
',,233,,,,,,,233,,,233,233,,233,233,233,233,233,,233,233,233,,233,233',
',233,233,,,,,,,,,,,,,,,,,,,,,,233,,,233,,,233,,,233,,,,,,233,,,,,,,',
'233,,,,,233,233,233,233,233,233,,,,233,233,,,,234,234,234,233,234,,233',
',234,234,,233,233,234,,234,234,234,234,234,234,234,,,,,,234,234,234',
'234,234,234,234,,,234,,,,,,,234,,,234,234,,234,234,234,234,234,,234',
'234,234,,234,234,,234,234,,,,,,,,,,,,,,,,,,,,,,234,,,234,,,234,,,234',
',,,,,234,,,,,,,,234,,,,,234,234,234,234,234,234,,,,234,234,,,,235,235',
'235,234,235,,234,,235,235,,234,234,235,,235,235,235,235,235,235,235',
',,,,,235,235,235,235,235,235,235,,,235,,,,,,,235,,,235,235,,235,235',
'235,235,235,,235,235,235,,235,235,,235,235,,,,,,,,,,,,,,,,,,,,,,235',
',,235,,,235,,,235,,,,,,235,,,,,,,,235,,,,,235,235,235,235,235,235,,',
',235,235,,,,236,236,236,235,236,,235,,236,236,,235,235,236,,236,236',
'236,236,236,236,236,,,,,,236,236,236,236,236,236,236,,,236,,,,,,,236',
',,236,236,,236,236,236,236,236,,236,236,236,,236,236,,236,236,,,,,,',
',,,,,,,,,,,,,,,236,,,236,,,236,,,236,,,,,,236,,,,,,,,236,,,,,236,236',
'236,236,236,236,,,,236,236,,,,237,237,237,236,237,,236,,237,237,,236',
'236,237,,237,237,237,237,237,237,237,,,,,,237,237,237,237,237,237,237',
',,237,,,,,,,237,,,237,237,,237,237,237,237,237,,237,237,237,,237,237',
',237,237,,,,,,,,,,,,,,,,,,,,,,237,,,237,,,237,,,237,,,,,,237,,,,,,,',
'237,,,,,237,237,237,237,237,237,,,,237,237,,,,238,238,238,237,238,,237',
',238,238,,237,237,238,,238,238,238,238,238,238,238,,,,,,238,238,238',
'238,238,238,238,,,238,,,,,,,238,,,238,238,,238,238,238,238,238,,238',
'238,238,,238,238,,238,238,,,,,,,,,,,,,,,,,,,,,,238,,,238,,,238,,,238',
',,,,,238,,,,,,,,238,,,,,238,238,238,238,238,238,,,,238,238,,,,239,239',
'239,238,239,,238,,239,239,,238,238,239,,239,239,239,239,239,239,239',
',,,,,239,239,239,239,239,239,239,,,239,,,,,,,239,,,239,239,,239,239',
'239,239,239,,239,239,239,,239,239,,239,239,,,,,,,,,,,,,,,,,,,,,,239',
',,239,,,239,,,239,,,,,,239,,,,,,,,239,,,,,239,239,239,239,239,239,,',
',239,239,,,,240,240,240,239,240,,239,,240,240,,239,239,240,,240,240',
'240,240,240,240,240,,,,,,240,240,240,240,240,240,240,,,240,,,,,,,240',
',,240,240,,240,240,240,240,240,,240,240,240,,240,240,,240,240,,,,,,',
',,,,,,,,,,,,,,,240,,,240,,,240,,,240,,,,,,240,,,,,,,,240,,,,,240,240',
'240,240,240,240,,,,240,240,,,,241,241,241,240,241,,240,,241,241,,240',
'240,241,,241,241,241,241,241,241,241,,,,,,241,241,241,241,241,241,241',
',,241,,,,,,,241,,,241,241,,241,241,241,241,241,,241,241,241,,241,241',
',241,241,,,,,,,,,,,,,,,,,,,,,,241,,,241,,,241,,,241,,,,,,241,,,,,,,',
'241,,,,,241,241,241,241,241,241,,,,241,241,,,,242,242,242,241,242,,241',
',242,242,,241,241,242,,242,242,242,242,242,242,242,,,,,,242,242,242',
'242,242,242,242,,,242,,,,,,,242,,,242,242,,242,242,242,242,242,,242',
'242,242,,242,242,,242,242,,,,,,,,,,,,,,,,,,,,,,242,,,242,,,242,,,242',
',,,,,242,,,,,,,,242,,,,,242,242,242,242,242,242,,,,242,242,,,,243,243',
'243,242,243,,242,,243,243,,242,242,243,,243,243,243,243,243,243,243',
',,,,,243,243,243,243,243,243,243,,,243,,,,,,,243,,,243,243,,243,243',
'243,243,243,,243,243,243,,243,243,,243,243,,,,,,,,,,,,,,,,,,,,,,243',
',,243,,,243,,,243,,,,,,243,,,,,,,,243,,,,,243,243,243,243,243,243,,',
',243,243,,,,244,244,244,243,244,,243,,244,244,,243,243,244,,244,244',
'244,244,244,244,244,,,,,,244,244,244,244,244,244,244,,,244,,,,,,,244',
',,244,244,,244,244,244,244,244,,244,244,244,,244,244,,244,244,,,,,,',
',,,,,,,,,,,,,,,244,,,244,,,244,,,244,,,,,,244,,,,,,,,244,,,,,244,244',
'244,244,244,244,,,,244,244,,,,245,245,245,244,245,,244,,245,245,,244',
'244,245,,245,245,245,245,245,245,245,,,,,,245,245,245,245,245,245,245',
',,245,,,,,,,245,,,245,245,,245,245,245,245,245,,245,245,245,,245,245',
',245,245,,,,,,,,,,,,,,,,,,,,,,245,,,245,,,245,,,245,,,,,,245,,,,,,,',
'245,,,,,245,245,245,245,245,245,,,,245,245,,,,731,731,731,245,731,,245',
',731,731,,245,245,731,,731,731,731,731,731,731,731,,,,,,731,731,731',
'731,731,731,731,,,731,,,,,,,731,,,731,731,,731,731,731,731,731,,731',
'731,731,,731,731,,731,731,,,,,,,,,,,,,,,,,,,,,,731,,,731,,,731,,,731',
',731,,,,731,,,,,,,,731,,,,,731,731,731,731,731,731,,,,731,731,,,,700',
'700,700,731,700,,731,,700,700,,731,731,700,,700,700,700,700,700,700',
'700,,,,,,700,700,700,700,700,700,700,,,700,,,,,,,700,,,700,700,,700',
'700,700,700,700,,700,700,700,,700,700,,700,700,,,,,,,,,,,,,,,,,,,,,',
'700,,,700,,,700,,,700,,700,,,,700,,,,,,,,700,,,,,700,700,700,700,700',
'700,,,,700,700,,,,694,694,694,700,694,,700,,694,694,,700,700,694,,694',
'694,694,694,694,694,694,,,,,,694,694,694,694,694,694,694,,,694,,,,,',
',694,,,694,694,,694,694,694,694,694,,694,694,694,,694,694,,,,,,,,,,',
',,,,,,,,,,,,,,694,,,694,,,694,,,694,,,,,,,,,,,,,,,,,,,694,694,694,694',
'694,694,,,,694,694,,,,254,254,254,694,254,,694,,254,254,,694,694,254',
',254,254,254,254,254,254,254,,,,,,254,254,254,254,254,254,254,,,254',
',,,,,,254,,,254,254,,254,254,254,254,254,,254,254,254,,254,254,,254',
'254,,,,,,,,,,,,,,,,,,,,,,254,,,254,,,254,,,254,,,,,,254,,,,,,,,254,',
',,,254,254,254,254,254,254,,,,254,254,,,,682,682,682,254,682,,254,,682',
'682,,254,254,682,,682,682,682,682,682,682,682,,,,,,682,682,682,682,682',
'682,682,,,682,,,,,,,682,,,682,682,,682,682,682,682,682,,682,682,682',
',682,682,,,,,,,,,,,,,,,,,,,,,,,,,682,,,682,,,682,,,682,,,,,,,,,,,,,',
',,,,,682,682,682,682,682,682,,,,682,682,,,,256,256,256,682,256,,682',
',256,256,,682,682,256,,256,256,256,256,256,256,256,,,,,,256,256,256',
'256,256,256,256,,,256,,,,,,,256,,,256,256,,256,256,256,256,256,,256',
'256,256,,256,256,,256,256,,,,,,,,,,,,,,,,,,,,,,256,,,256,,,256,,,256',
',,,,,256,,,,,,,,256,,,,,256,256,256,256,256,256,,,,256,256,,,,261,261',
'261,256,261,,256,,261,261,,256,256,261,,261,261,261,261,261,261,261',
',,,,,261,261,261,261,261,261,261,,,261,,,,,,,261,,,261,261,,261,261',
'261,261,261,,261,261,261,,261,261,,261,261,,,,,,,,,,,,,,,,,,,,,,261',
',,261,,,261,,,261,,,,,,261,,,,,,,,261,,,,,261,261,261,261,261,261,,',
',261,261,,,,,,,261,,,261,,,,,261,261,678,678,678,678,678,,,,678,678',
',,,678,,678,678,678,678,678,678,678,,,,,,678,678,678,678,678,678,678',
',,678,,,,,,678,678,,678,678,678,,678,678,678,678,678,,678,678,678,,678',
'678,,678,678,,,,,,,,,,,,,,,,,,,,,,678,,,678,,,678,,,678,,678,,,,678',
',,,,,,,678,,,,,678,678,678,678,678,678,,,,678,678,,,,,,,678,,,678,,',
',,678,678,677,677,677,677,677,,,,677,677,,,,677,,677,677,677,677,677',
'677,677,,,,,,677,677,677,677,677,677,677,,,677,,,,,,677,677,,677,677',
'677,,677,677,677,677,677,,677,677,677,,677,677,,677,677,,,,,,,,,,,,',
',,,,,,,,,677,,,677,,,677,,,677,,677,,,,677,,,,,,,,677,,,,,677,677,677',
'677,677,677,,,,677,677,,,,671,671,671,677,671,,677,,671,671,,677,677',
'671,,671,671,671,671,671,671,671,,,,,,671,671,671,671,671,671,671,,',
'671,,,,,,,671,,,671,671,,671,671,671,671,671,671,671,671,671,,671,671',
',671,671,,,,,,,,,,,,,,,,,,,,,,671,,,671,,,671,,,671,,,,671,,671,,,,',
',,,671,,,,,671,671,671,671,671,671,,,,671,671,,,,670,670,670,671,670',
',671,,670,670,,671,671,670,,670,670,670,670,670,670,670,,,,,,670,670',
'670,670,670,670,670,,,670,,,,,,,670,,,670,670,,670,670,670,670,670,670',
'670,670,670,,670,670,,670,670,,,,,,,,,,,,,,,,,,,,,,670,,,670,,,670,',
',670,,670,,670,,670,,,,,,,,670,,,,,670,670,670,670,670,670,,,,670,670',
',,,268,268,268,670,268,,670,,268,268,,670,670,268,,268,268,268,268,268',
'268,268,,,,,,268,268,268,268,268,268,268,,,268,,,,,,,268,,,268,268,',
'268,268,268,268,268,268,268,268,268,,268,268,,268,268,,,,,,,,,,,,,,',
',,,,,,,268,,,268,,,268,,,268,,268,,268,,268,,,,,,,,268,,,,,268,268,268',
'268,268,268,,,,268,268,,,,269,269,269,268,269,,268,,269,269,,268,268',
'269,,269,269,269,269,269,269,269,,,,,,269,269,269,269,269,269,269,,',
'269,,,,,,,269,,,269,269,,269,269,269,269,269,269,269,269,269,,269,269',
',269,269,,,,,,,,,,,,,,,,,,,,,,269,,,269,,,269,,,269,,269,,269,,269,',
',,,,,,269,,,,,269,269,269,269,269,269,,,,269,269,,,,277,277,277,269',
'277,,269,,277,277,,269,269,277,,277,277,277,277,277,277,277,,,,,,277',
'277,277,277,277,277,277,,,277,,,,,,,277,,,277,277,,277,277,277,277,277',
'277,277,277,277,,277,277,,277,277,,,,,,,,,,,,,,,,,,,,,,277,,,277,,277',
'277,,,277,,277,,277,,277,,,,,,,,277,,,,,277,277,277,277,277,277,,,,277',
'277,,,,,,,277,,,277,,,,,277,277,667,667,667,667,667,,,,667,667,,,,667',
',667,667,667,667,667,667,667,,,,,,667,667,667,667,667,667,667,,,667',
',,,,,667,667,,667,667,667,,667,667,667,667,667,,667,667,667,,667,667',
',667,667,,,,,,,,,,,,,,,,,,,,,,667,,,667,,,667,,,667,,667,,,,667,,,,',
',,,667,,,,,667,667,667,667,667,667,,,,667,667,,,,658,658,658,667,658',
',667,,658,658,,667,667,658,,658,658,658,658,658,658,658,,,,,,658,658',
'658,658,658,658,658,,,658,,,,,,,658,,,658,658,,658,658,658,658,658,',
'658,658,658,,658,658,,658,658,,,,,,,,,,,,,,,,,,,,,,658,,,658,,,658,',
',658,,,,,,658,,,,,,,,658,,,,,658,658,658,658,658,658,,,,658,658,,,,',
',,658,,,658,,,,,658,658,654,654,654,654,654,,,,654,654,,,,654,,654,654',
'654,654,654,654,654,,,,,,654,654,654,654,654,654,654,,,654,,,,,,654',
'654,,654,654,654,,654,654,654,654,654,,654,654,654,,654,654,,654,654',
',,,,,,,,,,,,,,,,,,,,,654,,,654,,,654,,,654,,654,,,,654,,,,,,,,654,,',
',,654,654,654,654,654,654,,,,654,654,,,,,,,654,,,654,,,,,654,654,281',
'281,281,281,281,,,,281,281,,,,281,,281,281,281,281,281,281,281,,,,,',
'281,281,281,281,281,281,281,,,281,,,,,,281,281,,281,281,281,,281,281',
'281,281,281,,281,281,281,,281,281,,281,281,,,,,,,,,,,,,,,,,,,,,,281',
',,281,,,281,,,281,,281,,,,281,,,,,,,,281,,,,,281,281,281,281,281,281',
',,,281,281,,,,650,650,650,281,650,,281,,650,650,,281,281,650,,650,650',
'650,650,650,650,650,,,,,,650,650,650,650,650,650,650,,,650,,,,,,,650',
',,650,650,,650,650,650,650,650,,650,650,650,,650,650,,650,650,,,,,,',
',,,,,,,,,,,,,,,650,,,650,,,650,,,650,,,,,,650,,,,,,,,650,,,,,650,650',
'650,650,650,650,,,,650,650,,,,350,350,350,650,350,,650,,350,350,,650',
'650,350,,350,350,350,350,350,350,350,,,,,,350,350,350,350,350,350,350',
',,350,,,,,,,350,,,350,350,,350,350,350,350,350,,350,350,350,,350,350',
',350,350,,,,,,,,,,,,,,,,,,,,,,350,,,350,,,350,,,350,,,,,,350,,,,,,,',
'350,,,,,350,350,350,350,350,350,,,,350,350,,,,349,349,349,350,349,,350',
',349,349,,350,350,349,,349,349,349,349,349,349,349,,,,,,349,349,349',
'349,349,349,349,,,349,,,,,,,349,,,349,349,,349,349,349,349,349,,349',
'349,349,,349,349,,349,349,,,,,,,,,,,,,,,,,,,,,,349,,,349,,,349,,,349',
',,,,,349,,,,,,,,349,,,,,349,349,349,349,349,349,,,,349,349,,,,285,285',
'285,349,285,,349,,285,285,,349,349,285,,285,285,285,285,285,285,285',
',,,,,285,285,285,285,285,285,285,,,285,,,,,,,285,,,285,285,,285,285',
'285,285,285,,285,285,285,,285,285,749,,749,749,749,749,749,,,,,,,,,',
'749,,,,,,,,285,,,285,,,285,,,285,,,,,,749,,,,,,,,749,749,749,749,,285',
'285,285,285,285,285,,,,285,285,,,,285,,,285,,,285,,,,,285,285,286,286',
'286,286,286,,,749,286,286,,,,286,,286,286,286,286,286,286,286,,,,,,286',
'286,286,286,286,286,286,,,286,,,,,,286,286,,286,286,286,,286,286,286',
'286,286,,286,286,286,,286,286,,286,286,,,,,,,,,,,,,,,,,,,,,,286,,,286',
',,286,,,286,,286,,,,286,,,,,,,,286,,,,,286,286,286,286,286,286,,,,286',
'286,,,,639,639,639,286,639,,286,,639,639,,286,286,639,,639,639,639,639',
'639,639,639,,,,,,639,639,639,639,639,639,639,,,639,,,,,,,639,,,639,639',
',639,639,639,639,639,,639,639,639,,639,639,,639,639,,,,,,,,,,,,,,,,',
',,,,,639,,,639,,,639,,,639,,,,,,639,,,,,,,,639,,,,,639,639,639,639,639',
'639,,,,639,639,,,,636,636,636,639,636,,639,,636,636,,639,639,636,,636',
'636,636,636,636,636,636,,,,,,636,636,636,636,636,636,636,,,636,,,,,',
',636,,,636,636,,636,636,636,636,636,,636,636,636,,636,636,,636,636,',
',,,,,,,,,,,,,,,,,,,,636,,,636,,,636,,,636,,,,,,636,,,,,,,,636,,,,,636',
'636,636,636,636,636,,,,636,636,,,,631,631,631,636,631,,636,,631,631',
',636,636,631,,631,631,631,631,631,631,631,,,,,,631,631,631,631,631,631',
'631,,,631,,,,,,,631,,,631,631,,631,631,631,631,631,,631,631,631,,631',
'631,,631,631,,,,,,,,,,,,,,,,,,,,,,631,,,631,,,631,,,631,,,,,,631,,,',
',,,,631,,,,,631,631,631,631,631,631,,,,631,631,,,,630,630,630,631,630',
',631,,630,630,,631,631,630,,630,630,630,630,630,630,630,,,,,,630,630',
'630,630,630,630,630,,,630,,,,,,,630,,,630,630,,630,630,630,630,630,',
'630,630,630,,630,630,,630,630,,,,,,,,,,,,,,,,,,,,,,630,,,630,,,630,',
',630,,,,,,630,,,,,,,,630,,,,,630,630,630,630,630,630,,,,630,630,,,,627',
'627,627,630,627,,630,,627,627,,630,630,627,,627,627,627,627,627,627',
'627,,,,,,627,627,627,627,627,627,627,,,627,,,,,,,627,,,627,627,,627',
'627,627,627,627,,627,627,627,,627,627,,627,627,,,,,,,,,,,,,,,,,,,,,',
'627,,,627,,,627,,,627,,627,,,,627,,,,,,,,627,,,,,627,627,627,627,627',
'627,,,,627,627,,,,625,625,625,627,625,,627,,625,625,,627,627,625,,625',
'625,625,625,625,625,625,,,,,,625,625,625,625,625,625,625,,,625,,,,,',
',625,,,625,625,,625,625,625,625,625,,625,625,625,,625,625,,625,625,',
',,,,,,,,,,,,,,,,,,,,625,,,625,,,625,,,625,,,,,,625,,,,,,,,625,,,,,625',
'625,625,625,625,625,,,,625,625,,,,598,598,598,625,598,,625,,598,598',
',625,625,598,,598,598,598,598,598,598,598,,,,,,598,598,598,598,598,598',
'598,,,598,,,,,,,598,,,598,598,,598,598,598,598,598,,598,598,598,,598',
'598,,598,598,,,,,,,,,,,,,,,,,,,,,,598,,,598,,,598,,,598,,,,,,598,,,',
',,,,598,,,,,598,598,598,598,598,598,,,,598,598,,,,596,596,596,598,596',
',598,,596,596,,598,598,596,,596,596,596,596,596,596,596,,,,,,596,596',
'596,596,596,596,596,,,596,,,,,,,596,,,596,596,,596,596,596,596,596,',
'596,596,596,,596,596,,596,596,,,,,,,,,,,,,,,,,,,,,,596,,,596,,,596,',
',596,,,,,,596,,,,,,,,596,,,,,596,596,596,596,596,596,,,,596,596,,,,381',
'381,381,596,381,,596,,381,381,,596,596,381,,381,381,381,381,381,381',
'381,,,,,,381,381,381,381,381,381,381,,,381,,,,,,,381,,,381,381,,381',
'381,381,381,381,,381,381,381,,381,381,,381,381,,,,,,,,,,,,,,,,,,,,,',
'381,,,381,,,381,,,381,,,,,,381,,,,,,,,381,,,,,381,381,381,381,381,381',
',,,381,381,,,,298,298,298,381,298,,381,,298,298,,381,381,298,,298,298',
'298,298,298,298,298,,,,,,298,298,298,298,298,298,298,,,298,,,,,,,298',
',,298,298,,298,298,298,298,298,,298,298,298,,298,298,,,,,,,,,,,,,,,',
',,,,,,,,,298,,,298,,,298,,,298,,,,,,,,,,,,,,,,,,,298,298,298,298,298',
'298,,,,298,298,,,,586,586,586,298,586,,298,,586,586,,298,298,586,,586',
'586,586,586,586,586,586,,,,,,586,586,586,586,586,586,586,,,586,,,,,',
',586,,,586,586,,586,586,586,586,586,586,586,586,586,,586,586,,586,586',
',,,,,,,,,,,,,,,,,,,,,586,,,586,,,586,,,586,,586,,,,586,,,,,,,,586,,',
',,586,586,586,586,586,586,,,,586,586,,,,583,583,583,586,583,,586,,583',
'583,,586,586,583,,583,583,583,583,583,583,583,,,,,,583,583,583,583,583',
'583,583,,,583,,,,,,,583,,,583,583,,583,583,583,583,583,583,583,583,583',
',583,583,,583,583,,,,,,,,,,,,,,,,,,,,,,583,,,583,,,583,,,583,,583,,',
',583,,,,,,,,583,,,,,583,583,583,583,583,583,,,,583,583,,,,,,,583,,,583',
',,,,583,583,581,581,581,581,581,,,,581,581,,,,581,,581,581,581,581,581',
'581,581,,,,,,581,581,581,581,581,581,581,,,581,,,,,,581,581,,581,581',
'581,,581,581,581,581,581,,581,581,581,,581,581,,581,581,,,,,,,,,,,,',
',,,,,,,,,581,,,581,,,581,,,581,,581,,,,581,,,,,,,,581,,,,,581,581,581',
'581,581,581,,,,581,581,,,,,,,581,,,581,,,,,581,581,576,576,576,576,576',
',,,576,576,,,,576,,576,576,576,576,576,576,576,,,,,,576,576,576,576',
'576,576,576,,,576,,,,,,576,576,,576,576,576,,576,576,576,576,576,,576',
'576,576,,576,576,,576,576,,,,,,,,,,,,,,,,,,,,,,576,,,576,,,576,,,576',
',576,,,,576,,,,,,,,576,,,,,576,576,576,576,576,576,,,,576,576,,,,,,',
'576,,,576,,,,,576,576,572,572,572,572,572,,,,572,572,,,,572,,572,572',
'572,572,572,572,572,,,,,,572,572,572,572,572,572,572,,,572,,,,,,572',
'572,,572,572,572,,572,572,572,572,572,,572,572,572,,572,572,,572,572',
',,,,,,,,,,,,,,,,,,,,,572,,,572,,,572,,,572,,572,,,,572,,,,,,,,572,,',
',,572,572,572,572,572,572,,,,572,572,,,,307,307,307,572,307,,572,,307',
'307,,572,572,307,,307,307,307,307,307,307,307,,,,,,307,307,307,307,307',
'307,307,,,307,,,,,,,307,,,307,307,,307,307,307,307,307,,307,307,307',
',307,307,,307,307,,,,,,,,,,,,,,,,,,,,,,307,,,307,307,,307,,,307,,,,',
',307,,,,,,,,307,,,,,307,307,307,307,307,307,,,,307,307,,,,,,,307,,,307',
',,,,307,307,309,309,309,309,309,,,,309,309,,,,309,,309,309,309,309,309',
'309,309,,,,,,309,309,309,309,309,309,309,,,309,,,,,,309,309,,309,309',
'309,,309,309,309,309,309,,309,309,309,,309,309,,309,309,,,,,,,,,,,,',
',,,,,,,,,309,,,309,,,309,,,309,,309,,,,309,,,,,,,,309,,,,,309,309,309',
'309,309,309,,,,309,309,,,,558,558,558,309,558,,309,,558,558,,309,309',
'558,,558,558,558,558,558,558,558,,,,,,558,558,558,558,558,558,558,,',
'558,,,,,,,558,,,558,558,,558,558,558,558,558,,558,558,558,,558,558,856',
',856,856,856,856,856,,,,,,,,,,856,,,,,,,,558,,,558,,,558,,,558,,,,,',
'856,,,,,,,,856,856,856,856,,558,558,558,558,558,558,,,,558,558,,,,,',
',558,,,558,,,,,558,558,552,552,552,552,552,,,856,552,552,,,,552,,552',
'552,552,552,552,552,552,,,,,,552,552,552,552,552,552,552,,,552,,,,,',
'552,552,,552,552,552,,552,552,552,552,552,,552,552,552,,552,552,,552',
'552,,,,,,,,,,,,,,,,,,,,,,552,,,552,,,552,,,552,,552,,,,552,,,,,,,,552',
',,,,552,552,552,552,552,552,,,,552,552,,,,,,,552,,,552,,,,,552,552,551',
'551,551,551,551,,,,551,551,,,,551,,551,551,551,551,551,551,551,,,,,',
'551,551,551,551,551,551,551,,,551,,,,,,551,551,,551,551,551,,551,551',
'551,551,551,,551,551,551,,551,551,,551,551,,,,,,,,,,,,,,,,,,,,,,551',
',,551,,,551,,,551,,551,,,,551,,,,,,,,551,,,,,551,551,551,551,551,551',
',,,551,551,,,,546,546,546,551,546,,551,,546,546,,551,551,546,,546,546',
'546,546,546,546,546,,,,,,546,546,546,546,546,546,546,,,546,,,,,,,546',
',,546,546,,546,546,546,546,546,546,546,546,546,,546,546,,546,546,,,',
',,,,,,,,,,,,,,,,,,546,,,546,,,546,,,546,,,,,,546,,,,,,,,546,,,,,546',
'546,546,546,546,546,,,,546,546,,,,543,543,543,546,543,,546,,543,543',
',546,546,543,,543,543,543,543,543,543,543,,,,,,543,543,543,543,543,543',
'543,,,543,,,,,,,543,,,543,543,,543,543,543,543,543,543,543,543,543,',
'543,543,,543,543,,,,,,,,,,,,,,,,,,,,,,543,,,543,,,543,,,543,,543,,,',
'543,,,,,,,,543,,,,,543,543,543,543,543,543,,,,543,543,,,,537,537,537',
'543,537,,543,,537,537,,543,543,537,,537,537,537,537,537,537,537,,,,',
',537,537,537,537,537,537,537,,,537,,,,,,,537,,,537,537,,537,537,537',
'537,537,,537,537,537,,537,537,,537,537,,,,,,,,,,,,,,,,,,,,,,537,,,537',
',,537,,,537,,,,,,537,,,,,,,,537,,,,,537,537,537,537,537,537,,,,537,537',
',,,533,533,533,537,533,,537,,533,533,,537,537,533,,533,533,533,533,533',
'533,533,,,,,,533,533,533,533,533,533,533,,,533,,,,,,,533,,,533,533,',
'533,533,533,533,533,,533,533,533,,533,533,,533,533,,,,,,,,,,,,,,,,,',
',,,,533,,,533,,,533,,,533,,,,,,533,,,,,,,,533,,,,,533,533,533,533,533',
'533,,,,533,533,,,,532,532,532,533,532,,533,,532,532,,533,533,532,,532',
'532,532,532,532,532,532,,,,,,532,532,532,532,532,532,532,,,532,,,,,',
',532,,,532,532,,532,532,532,532,532,,532,532,532,,532,532,,532,532,',
',,,,,,,,,,,,,,,,,,,,532,,,532,,,532,,,532,,,,,,532,,,,,,,,532,,,,,532',
'532,532,532,532,532,,,,532,532,,,,531,531,531,532,531,,532,,531,531',
',532,532,531,,531,531,531,531,531,531,531,,,,,,531,531,531,531,531,531',
'531,,,531,,,,,,,531,,,531,531,,531,531,531,531,531,,531,531,531,,531',
'531,,531,531,,,,,,,,,,,,,,,,,,,,,,531,,,531,,,531,,,531,,,,,,531,,,',
',,,,531,,,,,531,531,531,531,531,531,,,,531,531,,,,523,523,523,531,523',
',531,,523,523,,531,531,523,,523,523,523,523,523,523,523,,,,,,523,523',
'523,523,523,523,523,,,523,,,,,,,523,,,523,523,,523,523,523,523,523,523',
'523,523,523,,523,523,,523,523,,,,,,,,,,,,,,,,,,,,,,523,,,523,,,523,',
',523,,523,,,,523,,,,,,,,523,,,,,523,523,523,523,523,523,,,,523,523,',
',,520,520,520,523,520,,523,,520,520,,523,523,520,,520,520,520,520,520',
'520,520,,,,,,520,520,520,520,520,520,520,,,520,,,,,,,520,,,520,520,',
'520,520,520,520,520,520,520,520,520,,520,520,,520,520,,,,,,,,,,,,,,',
',,,,,,,520,,,520,,,520,,,520,,520,,,,520,,,,,,,,520,,,,,520,520,520',
'520,520,520,,,,520,520,,,,518,518,518,520,518,,520,,518,518,,520,520',
'518,,518,518,518,518,518,518,518,,,,,,518,518,518,518,518,518,518,,',
'518,,,,,,,518,,,518,518,,518,518,518,518,518,,518,518,518,,518,518,918',
',918,918,918,918,918,,,,,,,,,,918,,,,,,,,518,,,518,,,518,,,518,,,,,',
'918,918,,,,,,,918,918,918,918,,518,518,518,518,518,518,,,,518,518,,',
',,,,518,,,518,,,,,518,518,512,512,512,512,512,,,918,512,512,,,,512,',
'512,512,512,512,512,512,512,,,,,,512,512,512,512,512,512,512,,,512,',
',,,,512,512,,512,512,512,,512,512,512,512,512,,512,512,512,,512,512',
',512,512,,,,,,,,,,,,,,,,,,,,,,512,,,512,,,512,,,512,,512,,,,512,,,,',
',,,512,,,,,512,512,512,512,512,512,,,,512,512,,,,,,512,512,,,512,,,',
',512,512,506,506,506,,506,,,,506,506,,,,506,,506,506,506,506,506,506',
'506,,,,,,506,506,506,506,506,506,506,,,506,,,,,,,506,,,506,506,,506',
'506,506,506,506,,506,506,506,,506,506,,506,506,,,,,,,,,,,,,,,,,,,,,',
'506,,,506,,506,506,,,506,,,,506,,506,,,,,,,,506,,,,,506,506,506,506',
'506,506,,,,506,506,,,,592,592,592,506,592,,506,,592,592,,506,506,592',
',592,592,592,592,592,592,592,,,,,,592,592,592,592,592,592,592,,,592',
',,,,,,592,,,592,592,,592,592,592,592,592,592,592,592,592,,592,592,,592',
'592,,,,,,,,,,,,,,,,,,,,,,592,,,592,,,592,,,592,,592,,,,592,,,,,,,,592',
',,,,592,592,592,592,592,592,,,,592,592,,,,,645,,592,,,592,,645,645,645',
'592,592,645,645,645,,645,,,,,,,,,,645,645,,,,,,,,,645,645,,645,645,645',
'645,645,,,,,,,,,,,,,,,,,,,,,,,,645,645,645,645,645,645,645,645,645,645',
'645,645,645,645,645,,,645,645,645,,645,645,,,645,,,645,,645,,645,,645',
',645,645,645,645,645,645,645,,645,,645,,,,,,,,,,,,,645,645,645,645,',
'645,644,,645,,645,,645,644,644,644,,,644,644,644,,644,,,,,,,,,644,644',
'644,,,,,,,,,644,644,,644,644,644,644,644,,,,,,,,,,,,,,,,,,,,,,,,644',
'644,644,644,644,644,644,644,644,644,644,644,644,644,644,,,644,644,644',
',644,644,,,644,,,644,,644,,644,,644,,644,644,644,644,644,644,644,,644',
'644,644,,,,,,,,,,,,,644,644,644,644,,644,436,,644,,644,,644,436,436',
'436,,,,436,436,,436,,,,,,,,,436,,,,,,,,,,,436,436,,436,436,436,436,436',
',,,,,,,,,,,,,,,,,,,,,,,436,436,436,436,436,436,436,436,436,436,436,436',
'436,436,436,438,,436,436,436,,436,438,438,438,436,,,438,438,,438,436',
',436,,436,436,436,436,436,436,436,,436,436,436,,,,,438,438,,438,438',
'438,438,438,436,436,,436,,436,,,436,,436,,436,,,,,,,,,,,438,438,438',
'438,438,438,438,438,438,438,438,438,438,438,438,,,438,438,438,,438,',
',,438,,,,,,,438,,438,,438,438,438,438,438,438,438,,438,,438,,,,,,,,',
',,,,438,438,,438,,438,50,,438,,438,,438,50,50,50,,,50,50,50,,50,,,,',
',,,,,50,50,50,,,,,,,,50,50,,50,50,50,50,50,,,,,,,,,,,,,,,,,,,,,,,,50',
'50,50,50,50,50,50,50,50,50,50,50,50,50,50,,,50,50,50,,,50,,,50,,,50',
',50,,50,,50,,50,50,50,50,50,50,50,,50,,50,,,,,,,,,,,,,50,50,50,50,28',
'50,,50,50,,50,28,28,28,,,28,28,28,,28,,,,,,,,,,28,28,,,,,,,,,28,28,',
'28,28,28,28,28,,,,,,,,,,,,,,,,,,,,,,,,28,28,28,28,28,28,28,28,28,28',
'28,28,28,28,28,,,28,28,28,,,28,,28,28,,,28,,28,,28,,28,,28,28,28,28',
'28,28,28,,28,,28,,,,,,,,,,,,,28,28,28,28,496,28,,,28,,28,496,496,496',
',,496,496,496,,496,,,,,,,,,,496,,,,,,,,,,496,496,,496,496,496,496,496',
',,,,,,,,,,,,,494,,,,,,,494,494,494,,,494,494,494,,494,,,,,496,496,,',
',494,,,496,,,,,496,496,494,494,,494,494,494,494,494,,,,,,,,,,,,,496',
',,,,,,,,,,,495,496,,496,,,496,495,495,495,494,494,495,495,495,,495,',
'494,,,,,494,494,,495,,,,,,,,,,495,495,,495,495,495,495,495,,494,,,,',
',265,265,,,265,,,494,,494,,,494,265,265,,265,265,265,265,265,265,265',
',,265,265,495,495,,,265,265,265,265,495,,,,,495,495,,,,,,265,265,,265',
'265,265,265,265,265,265,265,265,265,265,,495,265,,,,,,,,,,,,495,,495',
',,495,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,,,,7,7,7,7,7,7',
'7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,,7,7,7,,7,,,,,,,,,7,7,,7,7,7,7,7,7,7,',
',7,7,,,,,7,7,7,7,,,,,,,,,,,,,7,7,,7,7,7,7,7,7,7,7,7,7,7,,,7,7,,,,,,',
',,,7,415,415,415,415,415,415,415,415,415,415,415,415,415,415,415,415',
'415,415,415,415,415,415,415,415,,,,415,415,415,415,415,415,415,415,415',
'415,415,415,415,415,415,415,415,415,415,415,415,,415,415,,,415,,,,,',
',,,415,415,,415,415,415,415,415,415,415,,,415,415,,,,,415,415,415,415',
',,,,,,,,,,,,415,415,,415,415,415,415,415,415,415,415,415,415,415,,,415',
'415,,,,,,,,,,415,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,,,',
'8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,,8,8,,,8,,,,,,,,,8,8,,8,8',
'8,8,8,8,8,,,8,8,,,,,8,8,8,8,,,,,,,,,,,,,8,8,,8,8,8,8,8,8,8,8,8,8,8,',
',8,8,,,,,,,,,,8,411,411,411,411,411,411,411,411,411,411,411,411,411',
'411,411,411,411,411,411,411,411,411,411,411,,,,411,411,411,411,411,411',
'411,411,411,411,411,411,411,411,411,411,411,411,411,411,411,,411,411',
',,411,,,,,,,,,411,411,,411,411,411,411,411,411,411,,,411,411,,,,,411',
'411,411,411,,,,,,,,,,,,,411,411,,411,411,411,411,411,411,411,411,411',
'411,411,,,411,411,,,,,,,,,,411,65,65,65,65,65,65,65,65,65,65,65,65,65',
'65,65,65,65,65,65,65,65,65,65,65,,,,65,65,65,65,65,65,65,65,65,65,65',
'65,65,65,65,65,65,65,65,65,65,,65,65,65,65,65,,65,,,,,,,65,65,,65,65',
'65,65,65,65,65,,,65,65,,,,,65,65,65,65,,,,,,65,,,,,,,65,65,,65,65,65',
'65,65,65,65,65,65,65,65,,,65,766,766,766,766,766,766,766,766,766,766',
'766,766,766,766,766,766,766,766,766,766,766,766,766,766,,,,766,766,766',
'766,766,766,766,766,766,766,766,766,766,766,766,766,766,766,766,766',
'766,,766,766,,,766,,,,,,,,,766,766,,766,766,766,766,766,766,766,,,766',
'766,,,,,766,766,766,766,,,,,,,,,,,,,766,766,,766,766,766,766,766,766',
'766,766,766,766,766,,,766,79,79,79,79,79,79,79,79,79,79,79,79,79,79',
'79,79,79,79,79,79,79,79,79,79,,,,79,79,79,79,79,79,79,79,79,79,79,79',
'79,79,79,79,79,79,79,79,79,,79,79,79,79,79,,79,,,,,,,79,79,,79,79,79',
'79,79,79,79,,,79,79,,,,,79,79,79,79,,,,,,,,,,,,,79,79,,79,79,79,79,79',
'79,79,79,79,79,79,203,203,79,,203,,,,,,,,,203,203,,203,203,203,203,203',
'203,203,,,203,203,,,,,203,203,203,203,,,,,,,,,,,,,203,203,,203,203,203',
'203,203,203,203,203,203,203,203,264,264,203,,264,,,,,,,,,264,264,,264',
'264,264,264,264,264,264,,,264,264,,,,,264,264,264,264,,,,,,,,,,,,,264',
'264,,264,264,264,264,264,264,264,264,264,264,264,521,521,264,,521,,',
',,,,,,521,521,,521,521,521,521,521,521,521,,,521,521,,,,,521,521,521',
'521,,,,,,521,,,,,,,521,521,,521,521,521,521,521,521,521,521,521,521',
'521,202,202,521,,202,,,,,,,,,202,202,,202,202,202,202,202,202,202,,',
'202,202,,,,,202,202,202,202,,,,,,,,,,,,,202,202,,202,202,202,202,202',
'202,202,202,202,202,202,201,201,202,,201,,,,,,,,,201,201,,201,201,201',
'201,201,201,201,,,201,201,,,,,201,201,201,201,,,,,,201,,,,,,,201,201',
',201,201,201,201,201,201,201,201,201,201,201,946,946,201,,946,,,,,,',
',,946,946,,946,946,946,946,946,946,946,,,946,946,,,,,946,946,946,946',
',,,,,946,,,,,,,946,946,,946,946,946,946,946,946,946,946,946,946,946',
'450,450,946,,450,,,,,,,,,450,450,,450,450,450,450,450,450,450,,,450',
'450,,,,,450,450,450,450,,,,,,,,,,,,,450,450,,450,450,450,450,450,450',
'450,450,450,450,450,449,449,450,,449,,,,,,,,,449,449,,449,449,449,449',
'449,449,449,,,449,449,,,,,449,449,449,449,,,,,,449,,,,,,,449,449,,449',
'449,449,449,449,449,449,449,449,449,449,522,522,449,,522,,,,,,,,,522',
'522,,522,522,522,522,522,522,522,,,522,522,,,,,522,522,522,522,,,,,',
',,,,,,,522,522,,522,522,522,522,522,522,522,522,522,522,522,524,524',
'522,,524,,,,,,,,,524,524,,524,524,524,524,524,524,524,,,524,524,,,,',
'524,524,524,524,,,,,,,,,,,,,524,524,,524,524,524,524,524,524,524,524',
'524,524,524,593,593,524,,593,,,,,,,,,593,593,,593,593,593,593,593,593',
'593,,,593,593,,,,,593,593,593,593,,,,,,593,,,,,,,593,593,,593,593,593',
'593,593,593,593,593,593,593,593,535,535,593,,535,,,,,,,,,535,535,,535',
'535,535,535,535,535,535,,,535,535,,,,,535,535,535,535,,,,,,,,,,,,,535',
'535,,535,535,535,535,535,535,535,535,535,535,535,591,591,535,,591,,',
',,,,,,591,591,,591,591,591,591,591,591,591,,,591,591,,,,,591,591,591',
'591,,,,,,,,,,,,,591,591,,591,591,591,591,591,591,591,591,591,591,591',
'947,947,591,,947,,,,,,,,,947,947,,947,947,947,947,947,947,947,,,947',
'947,,,,,947,947,947,947,,,,,,,,,,,,,947,947,,947,947,947,947,947,947',
'947,947,947,947,947,822,822,947,,822,,,,,,,,,822,822,,822,822,822,822',
'822,822,822,,,822,822,,,,,822,822,822,822,,,,,,,,,,,,,822,822,,822,822',
'822,822,822,822,822,822,822,822,822,585,585,822,,585,,,,,,,,,585,585',
',585,585,585,585,585,585,585,,,585,585,,,,,585,585,585,585,,,,,,,,,',
',,,585,585,,585,585,585,585,585,585,585,585,585,585,585,584,584,585',
',584,,,,,,,,,584,584,,584,584,584,584,584,584,584,,,584,584,,,,,584',
'584,584,584,,,,,,584,,,,,,,584,584,,584,584,584,584,584,584,584,584',
'584,584,584,534,534,584,,534,,,,,,,,,534,534,,534,534,534,534,534,534',
'534,,,534,534,,,,,534,534,534,534,,,,,,534,,,,,,,534,534,,534,534,534',
'534,534,534,534,534,534,534,534,266,266,534,,266,,,,,,,,,266,266,,266',
'266,266,266,266,266,266,,,266,266,,,,,266,266,266,266,,,,,,,,,,,,,266',
'266,,266,266,266,266,266,266,266,266,266,266,266,,,266' ]
        racc_action_check = arr = ::Array.new(24934, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_action_pointer = [
    -2,  1318,   nil,   416,   nil,   618,  1195, 22938, 23186,  1169,
  1138,  1130,  1174,   922,   315,   973,   nil,  1815,  1942,  1561,
  1215,   nil,  2336,  2463,  2590,   385,   268,  2997, 22553,   nil,
  3264,  3391,  3518,   nil,  1081,   351,  1126,   821,  4166,  4293,
  4420,  1053,   414,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
 22423,   nil,  4941,  5068,  5195,    13,  5982,  5576,  5703,   nil,
   nil,  5830,  5970,  6097,   nil, 23434,   nil,   nil,   nil,   nil,
   nil,   -47,   nil,   nil,   nil,   nil,   nil,   973,   972, 23660,
   nil,   nil,   nil,   313,  7025,   nil,   nil,  7152,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   987,   nil,  7419,
   nil,   nil,   nil,  7559,  7686,  7813,  7940,  8080,  8220,   nil,
   917,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   799,   nil,  8614,  8741,  8868,  8995,  9122,
  9249, 23965, 23904, 23721,  9757,  9884, 10011,   nil,   467,   253,
   672,   291,   545,   557, 10965, 11092,   nil,   nil, 11219,   527,
 11473, 11600, 11727, 11854, 11981, 12108, 12235, 12362, 12489, 12616,
 12743, 12870, 12997, 13124, 13251, 13378, 13505, 13632, 13759, 13886,
 14013, 14140, 14267, 14394, 14521, 14648,   nil,   nil,   nil,  1942,
   nil,   118,   -34,   nil, 15156,   509, 15410,   nil,   nil,   nil,
   nil, 15537,   nil,   nil, 23782, 22808, 24819,   957, 16198, 16325,
   nil,   nil,   nil,   nil,   nil,   nil,   nil, 16452,   463,   999,
  1044, 16999,  1069,  1125,  1114, 17507, 17647,   206,   506,  1235,
   196,  1228,  1182,    14,   nil,  1154,   852,   nil, 18917,   nil,
   338,  1095,  1081,   668,   nil,   582,   nil, 19718,   nil, 19858,
   196,   nil,    11,   404,   -89,   375,   459,   -59,   539,   nil,
   nil,    76,  3924,   nil,   nil,   nil,   567,   705,   nil,   759,
   774,   nil,   nil,   nil,   nil,   nil,   nil,   nil,  3012,   nil,
   nil,   nil,   886,   nil,   nil,   896,   454,    98,    91, 17380,
 17253,   387,   372,   943,    56,   633,  1080,    78,  1113,   nil,
   nil,   887,  1087,   nil,   760,   nil,    65,   nil,   nil,   379,
   590,   261,   636,   763,   844,   717,   509,   -21,   nil,   270,
   nil, 18790,   nil,    29,   nil,   365,   nil,   239,  1144,   361,
   nil,  1131,   -50,   nil,   356,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
  1136, 23310,   nil,   nil,   nil, 23062,  1124,   nil,   nil,  1014,
   nil,   125,  1064,   nil,  1039,   nil,   nil,  2590,  1072,  1071,
   393,   541,   252,   nil,   nil,   nil, 22209,  1059, 22291,   nil,
   506,   633,   760,   nil,   nil,   nil,  1815,   nil,   nil, 24148,
 24087,   887,  1561,   307,  1688,  3124,  3785,   -11,   nil,  3658,
  4039,   993,  1041,  1044,  1042,  1039,  1026,  5195,  5322,  3392,
  3264,  1154,  4166,  4293,  4814,  4941,  5068,  4687,  4560,  4420,
   355,  3099,  3124,  3785,   633,    32,   nil,  4039,   nil,  4814,
   nil,  6351,   nil,   nil, 22740, 22808, 22683,   186,   nil,   798,
   nil,   nil,   786,   782,   nil,   nil, 21688,    59,   -34,   807,
   nil,   nil, 21548,   -78,   725,   nil,   nil,   719, 21408,   728,
 21281, 23843, 24209, 21154, 24270,   314,   602,   nil,   nil,   545,
   nil, 21027, 20900, 20773, 24758, 24392,  2082, 20646,   562,   557,
   460,   nil,   nil, 20519,   nil,   nil, 20392,   nil,   nil,   nil,
   nil, 20265, 20125,   -69,   nil,  1131,   nil,   nil, 19985,  6109,
   nil,   950,   nil,   nil,    73,   nil,  2983,   nil,   135,  1280,
   nil,   nil, 19591,   687,   nil,   nil, 19451,   227,   205,   934,
  1021, 19311,   nil, 19171, 24697, 24636, 19044,   147,   nil,   721,
   nil, 24453, 21815, 24331,   nil,   nil, 18663,   -33, 18536,   nil,
  3530,   nil,   nil,   nil,    35,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   -38,   nil,   nil,   nil,  1147,
   nil,   nil,   nil,   nil,   nil, 18409,  1181, 18282,   192,   319,
 18155, 18028,  1183,   nil,   nil,   nil, 17901,  1164,   nil, 17774,
  1149,   nil,   240,   208, 22077, 21945,  1119,  1085,   506,   nil,
 17126,   nil,  3403,   nil, 16859,   976,   nil,   988, 16719,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil, 16592,   nil,   972,
 16071, 15944,  1294,   804,   nil,   nil,   734, 15817, 15677,   nil,
   745,   -68, 15283,   345,   nil,   228,   327,   186,   781,   228,
   235,   -37,   -27,    -9, 15029,  2463,    82,    86,    -2,   194,
 14902,   nil,   nil,   321,   155,   268,   nil,   nil,   154,   nil,
   183,   594,   277,   306,   317,   nil,   nil,   376,  3021,   nil,
   742,   nil,   501,   nil,   nil,   nil,   nil,   nil,   523,   nil,
   525, 14775,   461,    52,   -18,    75,   -17,   505, 11346,   795,
   nil,   541,   539, 10825,   590,   nil,   -25, 10685, 10545, 17519,
   675,   nil,   nil,   674,   nil, 10405,   nil,   616,   630,   nil,
   643,   647,   668,   nil,   672,   nil, 23547,   731,  1234, 10278,
   nil,   nil,   nil,  2870,   723, 10138,  9630,  9503,   nil,  2730,
   nil,  2336,   nil,   nil,  2209,   nil,   760,   nil,  9376,  8474,
  8347,   191,   367,  1434,   nil,   844,   960,   nil,   nil,   866,
   nil,   852,  7279,   nil,   900,  1006,   897,   313,   nil,   nil,
   nil,  1045,   nil,  6898,   926,   972,   nil,   nil,   nil,   nil,
   nil,   nil, 24575,   nil,  1127,   nil,   nil,   nil,   nil,  1420,
  1071,   nil,  6758,  1091,  6631,  6491,   nil,   nil,    85,    40,
   541,   292,   nil,  1105,   nil,   nil,  1117,  1118,  1002,   nil,
   nil,   nil,   348,   nil,   nil,   401, 19997,   nil,  1096,   nil,
   406,   nil,  6224,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
  1038,  1024,   nil,  1688,   nil,   887,  5449,  5322,   nil,   nil,
   nil,  4687,  1041,   nil,   nil,   nil,  4560,   nil,   nil,    74,
  3912,   nil,  1099,  1062,   nil,   nil,    66,   nil,  1191,  1195,
  3658,  2870,   nil,   nil,  2730,   nil,   nil,  1128,   nil,  1093,
   nil,   nil,  1094,  1095,  1105,  1098,   nil,   nil, 21420,   nil,
   nil,  2209,   nil,  2082,    36,   848,  1193,   120,   nil,   nil,
  1434,   nil,   nil,   nil,   349,  1294,  1257,   nil,   nil,  1184,
   nil,   nil,   nil,  1154,  1268,  1014, 24026, 24514,    -7,   224,
   nil,   nil,   nil,  1292,   nil,  1173,  1294,   nil,  1211,    67,
    75,    97,   108,   nil,   nil,   nil,   nil,   163 ]

racc_action_default = [
    -3,  -556,    -1,  -544,    -4,    -6,  -556,  -556,  -556,  -556,
  -556,  -556,  -556,  -556,  -277,   -37,   -38,  -556,  -556,   -43,
   -45,   -46,  -289,  -327,  -328,   -50,  -255,  -382,  -255,   -65,
   -10,   -69,   -76,   -78,  -556,  -458,  -556,  -556,  -556,  -556,
  -556,  -546,  -232,  -270,  -271,  -272,  -273,  -274,  -275,  -276,
  -534,  -279,  -556,  -555,  -526,  -297,  -555,  -556,  -556,  -302,
  -305,  -544,  -556,  -556,  -319,  -556,  -329,  -330,  -400,  -401,
  -402,  -403,  -404,  -555,  -407,  -555,  -555,  -555,  -555,  -555,
  -434,  -441,  -442,  -556,  -447,  -448,  -449,  -450,  -451,  -452,
  -453,  -454,  -455,  -456,  -457,  -460,  -461,  -556,    -2,  -545,
  -551,  -552,  -553,  -556,  -556,  -556,  -556,  -556,    -3,   -13,
  -556,  -105,  -106,  -107,  -108,  -109,  -110,  -111,  -114,  -115,
  -116,  -117,  -118,  -119,  -120,  -121,  -122,  -123,  -124,  -125,
  -126,  -127,  -128,  -129,  -130,  -131,  -132,  -133,  -134,  -135,
  -136,  -137,  -138,  -139,  -140,  -141,  -142,  -143,  -144,  -145,
  -146,  -147,  -148,  -149,  -150,  -151,  -152,  -153,  -154,  -155,
  -156,  -157,  -158,  -159,  -160,  -161,  -162,  -163,  -164,  -165,
  -166,  -167,  -168,  -169,  -170,  -171,  -172,  -173,  -174,  -175,
  -176,  -177,  -178,  -179,  -180,  -181,  -182,  -183,  -184,  -185,
  -186,  -187,  -435,   -18,  -112,   -10,  -556,  -556,  -556,  -555,
  -555,  -556,  -556,  -556,  -556,  -556,  -556,   -41,  -556,  -458,
  -556,  -277,  -556,  -556,   -10,  -556,   -42,  -224,  -556,  -556,
  -556,  -556,  -556,  -556,  -556,  -556,  -556,  -556,  -556,  -556,
  -556,  -556,  -556,  -556,  -556,  -556,  -556,  -556,  -556,  -556,
  -556,  -556,  -556,  -556,  -556,  -556,  -369,  -371,   -47,  -233,
  -248,  -262,  -262,  -252,  -556,  -263,  -556,  -289,  -327,  -328,
  -528,  -556,   -48,   -49,  -556,  -556,  -556,   -55,  -555,  -556,
  -296,  -375,  -383,  -385,   -63,  -381,   -64,  -556,  -544,   -11,
   -65,   -10,  -556,  -556,   -70,   -73,   -10,  -458,  -556,  -556,
  -277,  -292,  -546,  -556,  -331,  -382,  -556,   -75,  -556,   -80,
  -284,  -443,  -444,  -556,  -209,  -210,  -225,  -556,  -547,   -10,
  -546,  -234,  -546,  -548,  -548,  -556,  -556,  -548,  -556,  -298,
  -299,  -556,  -556,  -342,  -343,  -350,  -555,  -492,  -357,  -555,
  -555,  -368,  -491,  -493,  -494,  -495,  -496,  -497,  -556,  -510,
  -515,  -516,  -518,  -519,  -520,  -556,   -44,  -556,  -556,  -556,
  -556,  -544,  -556,  -545,  -458,  -556,  -556,  -277,  -556,  -499,
  -500,  -101,  -556,  -103,  -556,  -277,  -556,  -316,  -458,  -556,
  -105,  -106,  -143,  -144,  -160,  -165,  -172,  -175,  -322,  -556,
  -524,  -556,  -405,  -556,  -420,  -556,  -422,  -556,  -556,  -556,
  -412,  -556,  -556,  -418,  -556,  -433,  -436,  -437,  -438,  -439,
  -445,  -446,   968,    -5,  -554,   -19,   -20,   -21,   -22,   -23,
  -556,  -556,   -15,   -16,   -17,  -556,  -556,   -25,   -34,  -188,
  -263,  -556,  -556,   -26,   -35,   -36,   -27,  -190,  -556,  -556,
  -535,  -536,  -555,  -378,  -537,  -538,  -535,  -255,  -536,  -380,
  -540,  -541,  -555,  -535,  -536,   -33,  -198,   -39,   -40,  -556,
  -556,  -555,  -555,  -284,  -556,  -556,  -556,  -556,  -295,  -199,
  -200,  -201,  -202,  -203,  -204,  -205,  -206,  -211,  -212,  -213,
  -214,  -215,  -216,  -217,  -218,  -219,  -220,  -221,  -222,  -223,
  -226,  -227,  -228,  -229,  -556,  -555,  -249,  -556,  -250,  -556,
  -260,  -556,  -264,  -531,  -255,  -255,  -255,  -555,   -56,  -546,
  -243,  -244,  -262,  -262,  -256,  -257,  -556,  -555,  -555,  -556,
  -291,    -9,  -545,  -556,   -66,  -282,   -81,   -71,  -556,  -556,
  -555,  -556,  -556,  -555,  -556,  -284,  -556,  -443,  -444,   -77,
   -82,  -556,  -556,  -556,  -556,  -556,  -230,  -556,  -392,  -556,
  -556,  -235,  -236,  -550,  -549,  -238,  -550,  -287,  -288,  -527,
  -339,   -10,   -10,  -556,  -341,  -556,  -359,  -366,  -556,  -363,
  -364,  -556,  -367,  -492,  -556,  -501,  -556,  -503,  -505,  -509,
  -517,  -521,   -10,  -332,  -333,  -334,   -10,  -556,  -556,  -556,
  -556,   -10,  -387,  -555,  -556,  -556,  -555,  -284,  -311,  -101,
  -102,  -556,  -555,  -556,  -314,  -462,  -556,  -556,  -556,  -320,
  -490,  -324,  -542,  -543,  -546,  -406,  -421,  -424,  -425,  -427,
  -408,  -423,  -409,  -410,  -411,  -556,  -414,  -416,  -417,  -556,
  -440,    -7,   -14,  -113,   -24,  -556,  -269,  -556,  -285,  -286,
  -556,  -556,   -59,  -241,  -242,  -376,  -556,   -61,  -379,  -556,
   -57,  -377,  -535,  -536,  -535,  -536,  -556,  -556,  -188,  -294,
  -556,  -353,  -556,  -355,   -10,  -262,  -261,  -265,  -556,  -529,
  -530,   -51,  -372,   -52,  -373,   -53,  -374,   -10,  -239,  -556,
  -245,  -247,   -43,  -556,  -254,  -258,  -556,   -10,   -10,  -290,
   -12,   -66,  -556,   -74,   -79,  -556,  -535,  -536,  -555,  -539,
  -283,  -556,  -556,  -555,  -556,  -197,  -207,  -208,  -556,  -555,
  -555,  -280,  -281,  -548,  -556,  -556,  -340,  -351,  -556,  -358,
  -555,  -352,  -556,  -555,  -555,  -511,  -498,  -556,  -556,  -508,
  -555,  -335,  -555,  -303,  -336,  -337,  -338,  -306,  -556,  -309,
  -556,  -556,  -556,  -535,  -536,  -539,  -283,  -556,  -556,  -101,
  -104,  -539,  -556,   -10,  -556,  -464,  -556,   -10,   -10,  -490,
  -556,  -467,  -468,  -470,  -471,  -473,  -474,  -523,  -523,  -479,
  -481,  -481,  -481,  -489,  -492,  -513,  -556,  -556,  -556,   -10,
  -413,  -415,  -419,  -189,  -267,  -556,  -556,  -556,   -30,  -193,
   -31,  -194,   -60,   -32,  -195,   -62,  -196,   -58,  -556,  -556,
  -556,  -286,  -285,  -231,  -354,  -556,  -556,  -251,  -266,  -556,
  -240,  -262,  -556,  -259,  -556,  -556,   -72,  -285,  -286,   -83,
  -293,  -555,  -348,   -10,  -393,  -555,  -394,  -395,  -237,  -344,
  -345,  -365,  -556,  -284,  -556,  -361,  -362,  -502,  -504,  -507,
  -556,  -346,  -556,  -556,   -10,   -10,  -308,  -310,  -556,  -285,
   -93,  -556,  -285,  -556,  -463,  -317,  -556,  -556,  -546,  -466,
  -469,  -472,  -556,  -477,  -478,  -556,  -556,  -485,  -556,  -487,
  -556,  -488,  -556,  -325,  -525,  -426,  -429,  -430,  -431,  -432,
  -556,  -268,   -28,  -191,   -29,  -192,  -556,  -556,  -356,  -370,
   -54,  -246,  -262,  -384,  -386,    -8,   -10,  -399,  -349,  -556,
  -556,  -397,  -283,  -555,  -506,  -300,  -556,  -301,  -556,  -556,
  -556,   -10,  -312,  -315,   -10,  -321,  -323,  -556,  -475,  -523,
  -522,  -480,  -481,  -481,  -481,  -556,  -514,  -512,  -490,  -428,
  -253,  -556,  -398,   -10,  -458,  -556,  -556,  -277,  -396,  -360,
   -10,  -304,  -307,  -265,  -555,   -10,  -556,  -465,  -476,  -556,
  -483,  -484,  -486,   -10,  -392,  -555,  -556,  -556,  -284,  -555,
  -388,  -389,  -390,  -556,  -318,  -481,  -556,  -391,  -556,  -535,
  -536,  -539,  -283,  -347,  -313,  -482,  -326,  -285 ]

clist = [
'13,378,251,251,251,418,425,114,114,529,488,315,284,294,294,396,699,208',
'208,580,760,307,208,208,208,331,5,498,572,576,13,288,288,366,539,659',
'10,323,98,192,192,250,250,250,294,294,542,545,748,715,549,102,208,208',
'656,99,656,208,208,109,194,208,355,364,2,114,10,763,707,565,723,727',
'312,674,557,297,280,560,562,114,564,347,348,117,117,351,309,271,275',
'252,252,252,659,916,811,590,352,282,359,13,349,641,830,208,208,208,208',
'13,13,102,267,274,276,853,854,216,834,833,350,654,835,317,432,437,442',
'5,738,405,406,407,408,667,935,409,5,10,248,262,263,743,606,677,678,10',
'10,598,616,904,35,369,747,600,766,662,664,666,918,428,429,385,387,321',
'550,394,601,713,857,859,861,760,379,885,410,594,916,403,422,422,35,287',
'287,358,193,247,485,494,495,496,507,508,950,731,815,889,360,13,208,208',
'208,208,208,382,441,383,208,208,208,320,389,615,354,368,319,368,13,208',
'763,659,312,312,392,865,768,769,395,848,909,908,316,683,380,10,504,912',
'676,411,668,656,656,828,499,1,,,,,728,35,502,251,10,,,,,35,35,251,,',
'710,488,,,714,938,,294,208,208,,207,526,,,,,208,,530,294,13,,,,288,13',
'250,250,,540,331,541,417,423,426,250,565,288,,719,445,,553,,762,310',
',717,13,,346,346,511,,346,,10,940,941,942,,10,,740,,102,280,517,951',
'512,963,280,12,902,503,252,707,760,599,,,,35,252,10,715,,513,208,208',
'294,641,519,271,,275,346,346,346,346,965,35,12,,,943,,,364,432,437,771',
'577,578,,14,,,,,208,501,505,,763,579,,,,,509,782,806,,,,785,,102,787',
',,,,,14,290,290,646,647,114,,797,595,114,,,,,,,957,,,,,659,,35,,,12',
'287,35,,818,,357,365,12,12,688,192,,693,287,192,656,565,441,208,208',
',762,688,,35,821,447,448,825,826,622,,,,623,843,457,312,312,846,847',
',14,,,685,669,,692,,14,14,,,117,656,,,117,,634,,,,,638,530,294,759,',
'634,,688,208,,,816,,,13,,688,,632,368,288,901,208,637,441,208,,,640',
',12,893,,,,,,441,,208,680,312,294,732,312,,737,,,12,10,,742,13,13,,655',
'634,634,634,711,797,894,913,,914,,,,,,,923,14,13,,,,13,930,661,663,665',
'13,,208,767,441,208,10,10,,14,441,208,,,,208,,208,,,952,312,346,346',
'312,,,10,,703,312,10,,12,,,10,,12,744,331,,762,,724,724,,,936,208,208',
',795,,604,208,,,,920,929,12,,955,745,,,,,759,,,,13,283,,14,,,35,290',
'14,530,294,,287,13,956,,,,,,290,809,294,13,13,,422,,288,,,14,,,,,10',
',,,288,,,,,35,35,,863,10,,,368,,,,,838,,10,10,,,,,,35,,,,35,,,778,780',
'35,,,,783,,,,801,208,,,,,13,,365,,13,13,634,,,638,910,634,,910,759,',
'759,310,759,841,,,,114,,,13,,,,,,,208,208,,10,,,882,10,10,,,324,,,,698',
'844,,845,,,,849,,,,35,,384,10,386,386,390,393,386,,,13,,35,,,,759,416',
',441,,,35,35,,907,,287,,208,,13,13,,,,283,759,,287,,,12,,,,10,346,,746',
',,,896,,,,,,,,,,,688,,,10,10,294,872,874,,,,,,,,,,12,12,13,,14,724,925',
'35,,,290,35,35,,,,,13,,958,13,12,283,,,12,,283,,,12,,,35,,,,,10,13,',
',928,14,14,,13,,,,365,13,,10,,,10,,,13,,208,,441,14,,,,14,,,,,14,,10',
',35,,,312,,10,,,,,10,,,,,,,,10,,,35,35,,,,12,,,,,346,,,,,,,500,12,,',
',,,,,,,12,12,,,,318,,,,,,,,,,,,,,,14,,,,35,,,,924,,,,,14,,,,,,35,,,35',
'14,14,,,556,290,,556,556,,,,,,,,,290,35,,,,,12,,35,,12,12,,35,,,346',
',,,,35,,,,,,,,,,,12,,,,,,,,,,,,,,,,,14,,,,14,14,,,,,,,,,,217,,,,249',
'249,249,,,,869,14,12,,,,,,,,304,305,306,420,424,,,,,633,,,,12,12,249',
'249,,,633,,,704,705,,,,,,,,,,,,14,,,,,,,,720,,,,722,,,,,730,,,,14,14',
',,,490,651,492,,12,,,493,,,633,633,633,651,,,,,,12,,,12,651,651,,,,',
',,,,,,,,,,,,12,,,,,,14,12,,,927,,12,,,,,,,,12,14,,796,14,,,,,,,,,,,',
'799,,,,,,,14,,,804,805,,,14,,,,,14,419,249,427,249,249,,,14,446,,,,',
',,,,,,,,,217,,459,460,461,462,463,464,465,466,467,468,469,470,471,472',
'473,474,475,476,477,478,479,480,481,482,483,484,,,,,,,,,249,,249,,,',
',249,,,,,626,,249,249,,,,,,,,249,870,,,,,,,,,,,,,,,,,,,,,,,,,633,,,',
'536,633,,,,,,812,817,,,,,,,888,,,556,,,556,556,,,657,,318,812,660,812',
',,,,,898,899,,,,,,,673,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,657,,,318',
',,,922,,,,,,,,,,,,,,,934,,,,,,,,,,,249,,,,,887,,,,891,,944,,,,,,,949',
',,,,953,,,,,,,249,249,,446,648,427,,,,,,,,,,,,,,,,774,,,,,,,,,,,,,,',
'249,,249,,249,,,,,,,,,,,,798,,,672,,556,,,,,,,657,318,,,,249,,,249,',
',,,,,,695,696,697,,,,,,,,,,249,,814,249,,,812,,,,,,,,,,,,,,,812,,,,',
',,,,,,,420,,,,,,,249,,,249,,,,,,249,,,,,,,,851,,,,,,,,,,,,,,,,,,,,871',
',,,,773,,249,,,779,781,,,293,293,784,,,786,,293,293,293,,,,420,,,793',
',,,,,,293,249,,,,,,,293,293,,,,249,249,,,,,,,,,,,,,,,,,,,,,,,,,,,,,249',
',,,,,,917,,,,,,,,,,,,,,,,,,,318,,,,,249,,,,,,,,,,,,,,933,,,,,,,,,,249',
',,,,,,,,,,933,,,,,,,,,249,873,875,,,,,,,,,,,779,781,784,,,,,,,,,,,,249',
',,,,,,,,,,,,,,,,,,293,,293,293,293,293,293,293,293,293,293,293,293,293',
'293,293,293,293,293,293,293,293,293,293,293,293,293,293,,,,,,,,,293',
',293,,,249,,293,,,,,,,,,,,,875,873,,,,249,,,,,,,293,,,,,,,,,,,,249,293',
',,,,,,,,293,,,,,,,,,,,249,,,,,,,,,,,,,,,,,,,,,,,,249,,,,,,,,,,,,,,,',
',,,,,,,,,,,293,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,293',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,293,293,293,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,293,,293,,293,,,,,,,,,,,,,,,,,,,,,,,,,,,293,,,,,,,,,,,,,293,293',
'293,,,,,,,,,,293,,,293,,,,,,,,,,,,293,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,293,,293,,,,,,,,,,,,293,,,,,,,,',
',,293,,,,,,,,293,,,,,,,,,,,,293,293,,,,,,,,,,,293,,,,,,,,,,,,293,,,',
',,293,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,293,,,,,,,,,,,,,,,,,,,,,,,,293,',
',,,,,,,,,,,,,,,,,,293,,,,,,,,,,,,,293,293,293,,,,,,,,,,,,293,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,293,,,,,,,,,,,,',
',293,293,,,,293,,,,,,,,,293,,,,,,,,,,293,,,,,,,,,,,,,,,,,,,,,293' ]
        racc_goto_table = arr = ::Array.new(2641, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'21,47,54,54,54,24,24,48,48,43,61,22,41,52,52,47,10,21,21,80,110,51,21',
'21,21,107,7,35,77,77,21,21,21,46,8,154,17,104,4,122,122,29,29,29,52',
'52,55,55,84,147,55,83,21,21,62,6,62,21,21,14,14,21,21,21,2,48,17,141',
'106,145,79,79,29,62,109,42,38,109,109,48,148,16,16,50,50,16,87,57,57',
'56,56,56,154,151,11,45,4,39,17,21,88,60,78,21,21,21,21,21,21,83,34,34',
'34,142,142,18,89,11,90,36,91,56,33,33,33,7,92,16,16,16,16,36,93,7,7',
'17,31,31,31,94,129,36,36,17,17,95,129,96,44,97,98,99,100,60,60,60,101',
'22,22,126,126,102,103,126,86,105,143,143,143,110,85,12,2,82,151,5,54',
'54,44,44,44,81,15,112,113,33,33,33,115,116,117,118,119,120,19,21,21',
'21,21,21,21,124,48,125,21,21,21,76,127,128,44,44,74,44,21,21,141,154',
'29,29,130,131,132,133,134,135,137,139,73,43,72,17,64,144,63,27,59,62',
'62,149,58,1,,,,,80,44,54,54,17,,,,,44,44,54,,,111,61,,,111,142,,52,21',
'21,,26,51,,,,,21,,41,52,21,,,,21,21,29,29,,51,107,51,18,18,18,29,145',
'21,,145,18,,104,,111,26,,148,21,,26,26,4,,26,,17,143,143,143,,17,,45',
',83,38,42,11,6,78,38,20,79,56,56,106,110,46,,,,44,56,17,147,,39,21,21',
'52,60,39,57,,57,26,26,26,26,143,44,20,,,84,,,21,33,33,129,16,16,,23',
',,,,21,31,31,,141,4,,,,,31,35,43,,,,35,,83,35,,,,,,23,23,23,22,22,48',
',61,83,48,,,,,,,10,,,,,154,,44,,,20,44,44,,55,,23,23,20,20,33,122,,33',
'44,122,62,145,48,21,21,,111,33,,44,109,26,26,109,109,14,,,,14,8,26,29',
'29,8,8,,23,,,22,51,,22,,23,23,,,50,62,,,50,,57,,,,,57,41,52,108,,57',
',33,21,,,24,,,21,,33,,34,44,21,77,21,34,48,21,,,34,,20,111,,,,,,48,',
'21,7,29,52,22,29,,22,,,20,17,,22,21,21,,56,57,57,57,21,61,145,111,,111',
',,,,,,77,23,21,,,,21,77,34,34,34,21,,21,51,48,21,17,17,,23,48,21,,,',
'21,,21,,,80,29,26,26,29,,,17,,56,29,17,,20,,,17,,20,16,107,,111,,83',
'83,,,8,21,21,,104,,26,21,,,,61,109,20,,111,83,,,,,108,,,,21,9,,23,,',
'44,23,23,41,52,,44,21,8,,,,,,23,41,52,21,21,,54,,21,,,23,,,,,17,,,,21',
',,,,44,44,,47,17,,,44,,,,,54,,17,17,,,,,,44,,,,44,,,18,18,44,,,,18,',
',,56,21,,,,,21,,23,,21,21,57,,,57,108,57,,108,108,,108,26,108,16,,,',
'48,,,21,,,,,,,21,21,,17,,,54,17,17,,,53,,,,26,83,,83,,,,83,,,,44,,53',
'17,53,53,53,53,53,,,21,,44,,,,108,9,,48,,,44,44,,51,,44,,21,,21,21,',
',,9,108,,44,,,20,,,,17,26,,26,,,,16,,,,,,,,,,,33,,,17,17,52,18,18,,',
',,,,,,,20,20,21,,23,83,21,44,,,23,44,44,,,,,21,,22,21,20,9,,,20,,9,',
',20,,,44,,,,,17,21,,,17,23,23,,21,,,,23,21,,17,,,17,,,21,,21,,48,23',
',,,23,,,,,23,,17,,44,,,29,,17,,,,,17,,,,,,,,17,,,44,44,,,,20,,,,,26',
',,,,,,53,20,,,,,,,,,,20,20,,,,25,,,,,,,,,,,,,,,23,,,,44,,,,44,,,,,23',
',,,,,44,,,44,23,23,,,53,23,,53,53,,,,,,,,,23,44,,,,,20,,44,,20,20,,44',
',,26,,,,,44,,,,,,,,,,,20,,,,,,,,,,,,,,,,,23,,,,23,23,,,,,,,,,,28,,,',
'28,28,28,,,,23,23,20,,,,,,,,28,28,28,25,25,,,,,53,,,,20,20,28,28,,,53',
',,9,9,,,,,,,,,,,,23,,,,,,,,9,,,,9,,,,,9,,,,23,23,,,,25,53,25,,20,,,25',
',,53,53,53,53,,,,,,20,,,20,53,53,,,,,,,,,,,,,,,,,20,,,,,,23,20,,,23',
',20,,,,,,,,20,23,,9,23,,,,,,,,,,,,9,,,,,,,23,,,9,9,,,23,,,,,23,28,28',
'28,28,28,,,23,28,,,,,,,,,,,,,,28,,28,28,28,28,28,28,28,28,28,28,28,28',
'28,28,28,28,28,28,28,28,28,28,28,28,28,28,,,,,,,,,28,,28,,,,,28,,,,',
'25,,28,28,,,,,,,,28,9,,,,,,,,,,,,,,,,,,,,,,,,,53,,,,28,53,,,,,,53,53',
',,,,,,9,,,53,,,53,53,,,25,,25,53,25,53,,,,,,9,9,,,,,,,25,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,25,,,25,,,,9,,,,,,,,,,,,,,,9,,,,,,,,,,,28,',
',,,53,,,,53,,9,,,,,,,9,,,,,9,,,,,,,28,28,,28,28,28,,,,,,,,,,,,,,,,25',
',,,,,,,,,,,,,,28,,28,,28,,,,,,,,,,,,25,,,28,,53,,,,,,,25,25,,,,28,,',
'28,,,,,,,,28,28,28,,,,,,,,,,28,,25,28,,,53,,,,,,,,,,,,,,,53,,,,,,,,',
',,,25,,,,,,,28,,,28,,,,,,28,,,,,,,,25,,,,,,,,,,,,,,,,,,,,25,,,,,28,',
'28,,,28,28,,,37,37,28,,,28,,37,37,37,,,,25,,,28,,,,,,,37,28,,,,,,,37',
'37,,,,28,28,,,,,,,,,,,,,,,,,,,,,,,,,,,,,28,,,,,,,25,,,,,,,,,,,,,,,,',
',,25,,,,,28,,,,,,,,,,,,,,25,,,,,,,,,,28,,,,,,,,,,,25,,,,,,,,,28,28,28',
',,,,,,,,,,28,28,28,,,,,,,,,,,,28,,,,,,,,,,,,,,,,,,,37,,37,37,37,37,37',
'37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,,,,,',
',,,37,,37,,,28,,37,,,,,,,,,,,,28,28,,,,28,,,,,,,37,,,,,,,,,,,,28,37',
',,,,,,,,37,,,,,,,,,,,28,,,,,,,,,,,,,,,,,,,,,,,,28,,,,,,,,,,,,,,,,,,',
',,,,,,,,37,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,37,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,37,37,37,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
'37,,37,,37,,,,,,,,,,,,,,,,,,,,,,,,,,,37,,,,,,,,,,,,,37,37,37,,,,,,,',
',,37,,,37,,,,,,,,,,,,37,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,37,,37,,,,,,,,,,,,37,,,,,,,,,,,37,,,,,,,,37,,',
',,,,,,,,,37,37,,,,,,,,,,,37,,,,,,,,,,,,37,,,,,,37,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,37,,,,,,,,,,,,,,,,,,,,,,,,37,,,,,,,,,,,,,,,,,,,,37,,,,,',
',,,,,,,37,37,37,,,,,,,,,,,,37,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,37,,,,,,,,,,,,,,37,37,,,,37,,,,,,,,,37,,,,,,,,',
',37,,,,,,,,,,,,,,,,,,,,,37' ]
        racc_goto_check = arr = ::Array.new(2641, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_goto_pointer = [
   nil,   241,    64,   nil,    35,    76,    52,    26,  -275,   625,
  -522,  -605,  -640,   nil,    52,   174,    24,    36,    97,   132,
   333,     0,   -42,   376,  -191,   961,   254,   126,  1116,    19,
   nil,   114,   nil,   -79,    84,  -240,  -366,  1719,    46,    67,
   nil,   -19,    43,  -289,   148,  -267,   -30,   -64,     0,   nil,
    76,   -20,   -18,   731,   -20,  -267,    67,    61,   -28,  -263,
  -341,  -242,  -433,  -272,   -37,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   165,   174,   157,   nil,   151,  -319,  -618,  -507,
  -333,   119,  -193,    48,  -552,   105,  -215,    35,    41,  -607,
    58,  -607,  -462,  -770,  -455,  -222,  -698,    85,  -449,  -227,
  -449,  -707,   105,  -159,   -19,  -394,  -487,   -31,   -99,  -252,
  -580,  -295,   163,   -62,   nil,   -84,   -84,  -744,  -391,  -508,
  -622,   nil,    32,   nil,   130,   130,    84,   131,  -180,  -243,
   142,  -547,  -386,  -386,   145,  -524,   nil,  -626,   nil,  -625,
   nil,  -533,  -644,  -594,  -623,  -269,   nil,  -510,  -258,  -479,
   nil,  -765,   nil,   nil,  -454 ]

racc_goto_default = [
   nil,   nil,   nil,     3,   nil,     4,   353,   279,   nil,   538,
   nil,   831,   nil,   278,   nil,   nil,   nil,   212,    16,    11,
   213,   303,   nil,   211,   nil,   255,    15,   nil,    19,    20,
    21,   nil,    25,   691,   nil,   nil,   nil,    26,    29,   nil,
    31,    34,    33,   nil,   209,   363,   nil,   116,   435,   115,
    69,   nil,    42,   311,   313,   nil,   314,   433,   nil,   nil,
   635,   486,   253,   nil,   nil,   269,    43,    44,    45,    46,
    47,    48,    49,   nil,   270,    55,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   573,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   326,   325,   709,   328,   nil,
   329,   330,   nil,   nil,   439,   nil,   nil,   nil,   nil,   nil,
   nil,    68,    70,    71,    72,   nil,   nil,   nil,   nil,   611,
   nil,   nil,   nil,   nil,   nil,   750,   753,   758,   755,   756,
   757,   911,   nil,   nil,   761,   337,   332,   339,   nil,   567,
   568,   765,   342,   345,   260 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 143, :_reduce_none,
  2, 144, :_reduce_2,
  0, 145, :_reduce_3,
  1, 145, :_reduce_4,
  3, 145, :_reduce_5,
  1, 147, :_reduce_none,
  4, 147, :_reduce_7,
  4, 150, :_reduce_8,
  2, 151, :_reduce_9,
  0, 155, :_reduce_10,
  1, 155, :_reduce_11,
  3, 155, :_reduce_12,
  0, 169, :_reduce_13,
  4, 149, :_reduce_14,
  3, 149, :_reduce_15,
  3, 149, :_reduce_none,
  3, 149, :_reduce_17,
  2, 149, :_reduce_18,
  3, 149, :_reduce_19,
  3, 149, :_reduce_20,
  3, 149, :_reduce_21,
  3, 149, :_reduce_22,
  3, 149, :_reduce_23,
  4, 149, :_reduce_none,
  3, 149, :_reduce_25,
  3, 149, :_reduce_26,
  3, 149, :_reduce_27,
  6, 149, :_reduce_none,
  6, 149, :_reduce_none,
  5, 149, :_reduce_30,
  5, 149, :_reduce_none,
  5, 149, :_reduce_none,
  3, 149, :_reduce_none,
  3, 149, :_reduce_34,
  3, 149, :_reduce_35,
  3, 149, :_reduce_36,
  1, 149, :_reduce_none,
  1, 168, :_reduce_none,
  3, 168, :_reduce_39,
  3, 168, :_reduce_40,
  2, 168, :_reduce_41,
  2, 168, :_reduce_42,
  1, 168, :_reduce_none,
  1, 158, :_reduce_none,
  1, 160, :_reduce_none,
  1, 160, :_reduce_none,
  2, 160, :_reduce_47,
  2, 160, :_reduce_48,
  2, 160, :_reduce_49,
  1, 172, :_reduce_none,
  4, 172, :_reduce_none,
  4, 172, :_reduce_none,
  4, 172, :_reduce_none,
  4, 177, :_reduce_none,
  2, 171, :_reduce_55,
  3, 171, :_reduce_none,
  4, 171, :_reduce_57,
  5, 171, :_reduce_none,
  4, 171, :_reduce_59,
  5, 171, :_reduce_none,
  4, 171, :_reduce_61,
  5, 171, :_reduce_none,
  2, 171, :_reduce_63,
  2, 171, :_reduce_64,
  1, 161, :_reduce_65,
  3, 161, :_reduce_66,
  1, 181, :_reduce_67,
  3, 181, :_reduce_68,
  1, 180, :_reduce_69,
  2, 180, :_reduce_70,
  3, 180, :_reduce_71,
  5, 180, :_reduce_none,
  2, 180, :_reduce_73,
  4, 180, :_reduce_none,
  2, 180, :_reduce_75,
  1, 180, :_reduce_76,
  3, 180, :_reduce_none,
  1, 183, :_reduce_78,
  3, 183, :_reduce_79,
  2, 182, :_reduce_80,
  3, 182, :_reduce_81,
  1, 185, :_reduce_none,
  3, 185, :_reduce_none,
  1, 184, :_reduce_84,
  4, 184, :_reduce_85,
  3, 184, :_reduce_86,
  3, 184, :_reduce_none,
  3, 184, :_reduce_none,
  3, 184, :_reduce_none,
  2, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 159, :_reduce_92,
  4, 159, :_reduce_93,
  4, 159, :_reduce_94,
  3, 159, :_reduce_95,
  3, 159, :_reduce_96,
  3, 159, :_reduce_97,
  3, 159, :_reduce_98,
  2, 159, :_reduce_99,
  1, 159, :_reduce_none,
  1, 187, :_reduce_none,
  2, 188, :_reduce_102,
  1, 188, :_reduce_103,
  3, 188, :_reduce_104,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_108,
  1, 189, :_reduce_109,
  1, 156, :_reduce_110,
  1, 156, :_reduce_none,
  1, 157, :_reduce_112,
  3, 157, :_reduce_113,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  3, 170, :_reduce_188,
  5, 170, :_reduce_189,
  3, 170, :_reduce_190,
  6, 170, :_reduce_191,
  6, 170, :_reduce_192,
  5, 170, :_reduce_193,
  5, 170, :_reduce_none,
  5, 170, :_reduce_none,
  5, 170, :_reduce_none,
  4, 170, :_reduce_none,
  3, 170, :_reduce_none,
  3, 170, :_reduce_199,
  3, 170, :_reduce_200,
  3, 170, :_reduce_201,
  3, 170, :_reduce_202,
  3, 170, :_reduce_203,
  3, 170, :_reduce_204,
  3, 170, :_reduce_205,
  3, 170, :_reduce_206,
  4, 170, :_reduce_207,
  4, 170, :_reduce_208,
  2, 170, :_reduce_209,
  2, 170, :_reduce_210,
  3, 170, :_reduce_211,
  3, 170, :_reduce_212,
  3, 170, :_reduce_213,
  3, 170, :_reduce_214,
  3, 170, :_reduce_215,
  3, 170, :_reduce_216,
  3, 170, :_reduce_217,
  3, 170, :_reduce_218,
  3, 170, :_reduce_219,
  3, 170, :_reduce_220,
  3, 170, :_reduce_221,
  3, 170, :_reduce_222,
  3, 170, :_reduce_223,
  2, 170, :_reduce_224,
  2, 170, :_reduce_225,
  3, 170, :_reduce_226,
  3, 170, :_reduce_227,
  3, 170, :_reduce_228,
  3, 170, :_reduce_229,
  3, 170, :_reduce_230,
  5, 170, :_reduce_231,
  1, 170, :_reduce_none,
  1, 167, :_reduce_none,
  1, 164, :_reduce_234,
  2, 164, :_reduce_235,
  2, 164, :_reduce_236,
  4, 164, :_reduce_237,
  2, 164, :_reduce_238,
  3, 199, :_reduce_239,
  2, 201, :_reduce_none,
  1, 202, :_reduce_241,
  1, 202, :_reduce_none,
  1, 200, :_reduce_243,
  1, 200, :_reduce_none,
  2, 200, :_reduce_245,
  4, 200, :_reduce_246,
  2, 200, :_reduce_247,
  1, 173, :_reduce_248,
  2, 173, :_reduce_249,
  2, 173, :_reduce_250,
  4, 173, :_reduce_251,
  1, 173, :_reduce_252,
  4, 205, :_reduce_none,
  1, 205, :_reduce_none,
  0, 207, :_reduce_255,
  2, 176, :_reduce_256,
  1, 206, :_reduce_none,
  2, 206, :_reduce_258,
  3, 206, :_reduce_259,
  2, 204, :_reduce_260,
  2, 203, :_reduce_261,
  0, 203, :_reduce_262,
  1, 196, :_reduce_263,
  2, 196, :_reduce_264,
  3, 196, :_reduce_265,
  4, 196, :_reduce_266,
  3, 166, :_reduce_267,
  4, 166, :_reduce_268,
  2, 166, :_reduce_269,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  0, 229, :_reduce_279,
  4, 194, :_reduce_280,
  4, 194, :_reduce_281,
  3, 194, :_reduce_282,
  3, 194, :_reduce_283,
  2, 194, :_reduce_284,
  4, 194, :_reduce_285,
  4, 194, :_reduce_286,
  3, 194, :_reduce_287,
  3, 194, :_reduce_288,
  1, 194, :_reduce_289,
  4, 194, :_reduce_290,
  3, 194, :_reduce_291,
  1, 194, :_reduce_292,
  5, 194, :_reduce_293,
  4, 194, :_reduce_294,
  3, 194, :_reduce_295,
  2, 194, :_reduce_296,
  1, 194, :_reduce_none,
  2, 194, :_reduce_298,
  2, 194, :_reduce_299,
  6, 194, :_reduce_300,
  6, 194, :_reduce_301,
  0, 230, :_reduce_302,
  0, 231, :_reduce_303,
  7, 194, :_reduce_304,
  0, 232, :_reduce_305,
  0, 233, :_reduce_306,
  7, 194, :_reduce_307,
  5, 194, :_reduce_308,
  4, 194, :_reduce_309,
  5, 194, :_reduce_310,
  0, 234, :_reduce_311,
  0, 235, :_reduce_312,
  9, 194, :_reduce_313,
  0, 236, :_reduce_314,
  6, 194, :_reduce_315,
  0, 237, :_reduce_316,
  0, 238, :_reduce_317,
  8, 194, :_reduce_318,
  0, 239, :_reduce_319,
  0, 240, :_reduce_320,
  6, 194, :_reduce_321,
  0, 241, :_reduce_322,
  6, 194, :_reduce_323,
  0, 242, :_reduce_324,
  0, 243, :_reduce_325,
  9, 194, :_reduce_326,
  1, 194, :_reduce_327,
  1, 194, :_reduce_328,
  1, 194, :_reduce_329,
  1, 194, :_reduce_none,
  1, 163, :_reduce_none,
  1, 219, :_reduce_none,
  1, 219, :_reduce_none,
  1, 219, :_reduce_none,
  2, 219, :_reduce_none,
  1, 221, :_reduce_none,
  1, 221, :_reduce_none,
  1, 221, :_reduce_none,
  2, 218, :_reduce_339,
  3, 244, :_reduce_340,
  2, 244, :_reduce_341,
  1, 244, :_reduce_none,
  1, 244, :_reduce_none,
  3, 245, :_reduce_344,
  3, 245, :_reduce_345,
  1, 220, :_reduce_346,
  5, 220, :_reduce_347,
  1, 153, :_reduce_none,
  2, 153, :_reduce_349,
  1, 247, :_reduce_350,
  3, 247, :_reduce_351,
  3, 248, :_reduce_352,
  1, 178, :_reduce_none,
  2, 178, :_reduce_354,
  1, 178, :_reduce_355,
  3, 178, :_reduce_356,
  1, 249, :_reduce_357,
  2, 251, :_reduce_358,
  1, 251, :_reduce_359,
  6, 246, :_reduce_360,
  4, 246, :_reduce_361,
  4, 246, :_reduce_362,
  2, 246, :_reduce_363,
  2, 246, :_reduce_364,
  4, 246, :_reduce_365,
  2, 246, :_reduce_366,
  2, 246, :_reduce_367,
  1, 246, :_reduce_368,
  0, 255, :_reduce_369,
  5, 254, :_reduce_370,
  2, 174, :_reduce_371,
  4, 174, :_reduce_none,
  4, 174, :_reduce_none,
  4, 174, :_reduce_none,
  2, 217, :_reduce_375,
  4, 217, :_reduce_376,
  4, 217, :_reduce_377,
  3, 217, :_reduce_378,
  4, 217, :_reduce_379,
  3, 217, :_reduce_380,
  2, 217, :_reduce_381,
  1, 217, :_reduce_382,
  0, 257, :_reduce_383,
  5, 216, :_reduce_384,
  0, 258, :_reduce_385,
  5, 216, :_reduce_386,
  0, 260, :_reduce_387,
  6, 222, :_reduce_388,
  1, 259, :_reduce_389,
  1, 259, :_reduce_none,
  6, 152, :_reduce_391,
  0, 152, :_reduce_392,
  1, 261, :_reduce_393,
  1, 261, :_reduce_none,
  1, 261, :_reduce_none,
  2, 262, :_reduce_396,
  1, 262, :_reduce_397,
  2, 154, :_reduce_398,
  1, 154, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 209, :_reduce_403,
  1, 265, :_reduce_none,
  2, 265, :_reduce_405,
  3, 266, :_reduce_406,
  1, 266, :_reduce_407,
  3, 210, :_reduce_408,
  3, 211, :_reduce_409,
  3, 212, :_reduce_410,
  3, 212, :_reduce_411,
  1, 269, :_reduce_412,
  3, 269, :_reduce_413,
  1, 270, :_reduce_414,
  2, 270, :_reduce_415,
  3, 213, :_reduce_416,
  3, 213, :_reduce_417,
  1, 272, :_reduce_418,
  3, 272, :_reduce_419,
  1, 267, :_reduce_420,
  2, 267, :_reduce_421,
  1, 268, :_reduce_422,
  2, 268, :_reduce_423,
  1, 271, :_reduce_424,
  0, 274, :_reduce_425,
  3, 271, :_reduce_426,
  0, 275, :_reduce_427,
  4, 271, :_reduce_428,
  1, 273, :_reduce_429,
  1, 273, :_reduce_430,
  1, 273, :_reduce_431,
  1, 273, :_reduce_none,
  2, 192, :_reduce_433,
  1, 192, :_reduce_434,
  1, 192, :_reduce_435,
  1, 276, :_reduce_none,
  1, 276, :_reduce_none,
  1, 276, :_reduce_none,
  1, 276, :_reduce_none,
  3, 264, :_reduce_440,
  1, 263, :_reduce_441,
  1, 263, :_reduce_442,
  2, 263, :_reduce_443,
  2, 263, :_reduce_444,
  2, 263, :_reduce_445,
  2, 263, :_reduce_446,
  1, 186, :_reduce_447,
  1, 186, :_reduce_448,
  1, 186, :_reduce_449,
  1, 186, :_reduce_450,
  1, 186, :_reduce_451,
  1, 186, :_reduce_452,
  1, 186, :_reduce_453,
  1, 186, :_reduce_454,
  1, 186, :_reduce_455,
  1, 186, :_reduce_456,
  1, 186, :_reduce_457,
  1, 214, :_reduce_458,
  1, 162, :_reduce_459,
  1, 165, :_reduce_460,
  1, 165, :_reduce_none,
  1, 224, :_reduce_462,
  3, 224, :_reduce_463,
  2, 224, :_reduce_464,
  4, 226, :_reduce_465,
  2, 226, :_reduce_466,
  1, 278, :_reduce_none,
  1, 278, :_reduce_none,
  2, 279, :_reduce_469,
  1, 279, :_reduce_470,
  1, 280, :_reduce_471,
  2, 281, :_reduce_472,
  1, 281, :_reduce_473,
  1, 282, :_reduce_474,
  3, 282, :_reduce_475,
  4, 283, :_reduce_476,
  2, 283, :_reduce_477,
  2, 283, :_reduce_478,
  1, 283, :_reduce_479,
  2, 285, :_reduce_480,
  0, 285, :_reduce_481,
  6, 277, :_reduce_482,
  4, 277, :_reduce_483,
  4, 277, :_reduce_484,
  2, 277, :_reduce_485,
  4, 277, :_reduce_486,
  2, 277, :_reduce_487,
  2, 277, :_reduce_488,
  1, 277, :_reduce_489,
  0, 277, :_reduce_490,
  1, 287, :_reduce_none,
  1, 287, :_reduce_492,
  1, 288, :_reduce_493,
  1, 288, :_reduce_494,
  1, 288, :_reduce_495,
  1, 288, :_reduce_496,
  1, 289, :_reduce_497,
  3, 289, :_reduce_498,
  1, 223, :_reduce_none,
  1, 223, :_reduce_none,
  1, 291, :_reduce_501,
  3, 291, :_reduce_none,
  1, 292, :_reduce_503,
  3, 292, :_reduce_504,
  1, 290, :_reduce_none,
  4, 290, :_reduce_none,
  3, 290, :_reduce_none,
  2, 290, :_reduce_none,
  1, 290, :_reduce_none,
  1, 252, :_reduce_510,
  3, 252, :_reduce_511,
  3, 293, :_reduce_512,
  1, 286, :_reduce_513,
  3, 286, :_reduce_514,
  1, 294, :_reduce_none,
  1, 294, :_reduce_none,
  2, 253, :_reduce_517,
  1, 253, :_reduce_518,
  1, 295, :_reduce_none,
  1, 295, :_reduce_none,
  2, 250, :_reduce_521,
  2, 284, :_reduce_522,
  0, 284, :_reduce_523,
  1, 227, :_reduce_524,
  4, 227, :_reduce_525,
  0, 215, :_reduce_526,
  2, 215, :_reduce_527,
  1, 198, :_reduce_528,
  3, 198, :_reduce_529,
  3, 296, :_reduce_530,
  2, 296, :_reduce_531,
  1, 179, :_reduce_none,
  1, 179, :_reduce_none,
  1, 179, :_reduce_none,
  1, 175, :_reduce_none,
  1, 175, :_reduce_none,
  1, 175, :_reduce_none,
  1, 175, :_reduce_none,
  1, 256, :_reduce_none,
  1, 256, :_reduce_none,
  1, 256, :_reduce_none,
  1, 228, :_reduce_none,
  1, 228, :_reduce_none,
  0, 146, :_reduce_none,
  1, 146, :_reduce_none,
  0, 193, :_reduce_none,
  1, 193, :_reduce_none,
  0, 197, :_reduce_none,
  1, 197, :_reduce_none,
  1, 197, :_reduce_none,
  1, 225, :_reduce_none,
  1, 225, :_reduce_none,
  1, 148, :_reduce_none,
  2, 148, :_reduce_none,
  0, 195, :_reduce_555 ]

racc_reduce_n = 556

racc_shift_n = 968

racc_token_table = {
  false => 0,
  :error => 1,
  :kCLASS => 2,
  :kMODULE => 3,
  :kDEF => 4,
  :kUNDEF => 5,
  :kBEGIN => 6,
  :kRESCUE => 7,
  :kENSURE => 8,
  :kEND => 9,
  :kIF => 10,
  :kUNLESS => 11,
  :kTHEN => 12,
  :kELSIF => 13,
  :kELSE => 14,
  :kCASE => 15,
  :kWHEN => 16,
  :kWHILE => 17,
  :kUNTIL => 18,
  :kFOR => 19,
  :kBREAK => 20,
  :kNEXT => 21,
  :kREDO => 22,
  :kRETRY => 23,
  :kIN => 24,
  :kDO => 25,
  :kDO_COND => 26,
  :kDO_BLOCK => 27,
  :kDO_LAMBDA => 28,
  :kRETURN => 29,
  :kYIELD => 30,
  :kSUPER => 31,
  :kSELF => 32,
  :kNIL => 33,
  :kTRUE => 34,
  :kFALSE => 35,
  :kAND => 36,
  :kOR => 37,
  :kNOT => 38,
  :kIF_MOD => 39,
  :kUNLESS_MOD => 40,
  :kWHILE_MOD => 41,
  :kUNTIL_MOD => 42,
  :kRESCUE_MOD => 43,
  :kALIAS => 44,
  :kDEFINED => 45,
  :klBEGIN => 46,
  :klEND => 47,
  :k__LINE__ => 48,
  :k__FILE__ => 49,
  :k__ENCODING__ => 50,
  :tIDENTIFIER => 51,
  :tFID => 52,
  :tGVAR => 53,
  :tIVAR => 54,
  :tCONSTANT => 55,
  :tLABEL => 56,
  :tCVAR => 57,
  :tNTH_REF => 58,
  :tBACK_REF => 59,
  :tSTRING_CONTENT => 60,
  :tINTEGER => 61,
  :tFLOAT => 62,
  :tREGEXP_END => 63,
  :tUPLUS => 64,
  :tUMINUS => 65,
  :tUMINUS_NUM => 66,
  :tPOW => 67,
  :tCMP => 68,
  :tEQ => 69,
  :tEQQ => 70,
  :tNEQ => 71,
  :tGEQ => 72,
  :tLEQ => 73,
  :tANDOP => 74,
  :tOROP => 75,
  :tMATCH => 76,
  :tNMATCH => 77,
  :tJSDOT => 78,
  :tDOT => 79,
  :tDOT2 => 80,
  :tDOT3 => 81,
  :tAREF => 82,
  :tASET => 83,
  :tLSHFT => 84,
  :tRSHFT => 85,
  :tCOLON2 => 86,
  :tCOLON3 => 87,
  :tOP_ASGN => 88,
  :tASSOC => 89,
  :tLPAREN => 90,
  :tLPAREN2 => 91,
  :tRPAREN => 92,
  :tLPAREN_ARG => 93,
  :ARRAY_BEG => 94,
  :tRBRACK => 95,
  :tLBRACE => 96,
  :tLBRACE_ARG => 97,
  :tSTAR => 98,
  :tSTAR2 => 99,
  :tAMPER => 100,
  :tAMPER2 => 101,
  :tTILDE => 102,
  :tPERCENT => 103,
  :tDIVIDE => 104,
  :tPLUS => 105,
  :tMINUS => 106,
  :tLT => 107,
  :tGT => 108,
  :tPIPE => 109,
  :tBANG => 110,
  :tCARET => 111,
  :tLCURLY => 112,
  :tRCURLY => 113,
  :tBACK_REF2 => 114,
  :tSYMBEG => 115,
  :tSTRING_BEG => 116,
  :tXSTRING_BEG => 117,
  :tREGEXP_BEG => 118,
  :tWORDS_BEG => 119,
  :tAWORDS_BEG => 120,
  :tSTRING_DBEG => 121,
  :tSTRING_DVAR => 122,
  :tSTRING_END => 123,
  :tSTRING => 124,
  :tSYMBOL => 125,
  :tNL => 126,
  :tEH => 127,
  :tCOLON => 128,
  :tCOMMA => 129,
  :tSPACE => 130,
  :tSEMI => 131,
  :tLAMBDA => 132,
  :tLAMBEG => 133,
  :tLBRACK2 => 134,
  :tLBRACK => 135,
  :tJSLBRACK => 136,
  :tDSTAR => 137,
  :tEQL => 138,
  :tLOWEST => 139,
  "-@NUM" => 140,
  "+@NUM" => 141 }

racc_nt_base = 142

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "kCLASS",
  "kMODULE",
  "kDEF",
  "kUNDEF",
  "kBEGIN",
  "kRESCUE",
  "kENSURE",
  "kEND",
  "kIF",
  "kUNLESS",
  "kTHEN",
  "kELSIF",
  "kELSE",
  "kCASE",
  "kWHEN",
  "kWHILE",
  "kUNTIL",
  "kFOR",
  "kBREAK",
  "kNEXT",
  "kREDO",
  "kRETRY",
  "kIN",
  "kDO",
  "kDO_COND",
  "kDO_BLOCK",
  "kDO_LAMBDA",
  "kRETURN",
  "kYIELD",
  "kSUPER",
  "kSELF",
  "kNIL",
  "kTRUE",
  "kFALSE",
  "kAND",
  "kOR",
  "kNOT",
  "kIF_MOD",
  "kUNLESS_MOD",
  "kWHILE_MOD",
  "kUNTIL_MOD",
  "kRESCUE_MOD",
  "kALIAS",
  "kDEFINED",
  "klBEGIN",
  "klEND",
  "k__LINE__",
  "k__FILE__",
  "k__ENCODING__",
  "tIDENTIFIER",
  "tFID",
  "tGVAR",
  "tIVAR",
  "tCONSTANT",
  "tLABEL",
  "tCVAR",
  "tNTH_REF",
  "tBACK_REF",
  "tSTRING_CONTENT",
  "tINTEGER",
  "tFLOAT",
  "tREGEXP_END",
  "tUPLUS",
  "tUMINUS",
  "tUMINUS_NUM",
  "tPOW",
  "tCMP",
  "tEQ",
  "tEQQ",
  "tNEQ",
  "tGEQ",
  "tLEQ",
  "tANDOP",
  "tOROP",
  "tMATCH",
  "tNMATCH",
  "tJSDOT",
  "tDOT",
  "tDOT2",
  "tDOT3",
  "tAREF",
  "tASET",
  "tLSHFT",
  "tRSHFT",
  "tCOLON2",
  "tCOLON3",
  "tOP_ASGN",
  "tASSOC",
  "tLPAREN",
  "tLPAREN2",
  "tRPAREN",
  "tLPAREN_ARG",
  "ARRAY_BEG",
  "tRBRACK",
  "tLBRACE",
  "tLBRACE_ARG",
  "tSTAR",
  "tSTAR2",
  "tAMPER",
  "tAMPER2",
  "tTILDE",
  "tPERCENT",
  "tDIVIDE",
  "tPLUS",
  "tMINUS",
  "tLT",
  "tGT",
  "tPIPE",
  "tBANG",
  "tCARET",
  "tLCURLY",
  "tRCURLY",
  "tBACK_REF2",
  "tSYMBEG",
  "tSTRING_BEG",
  "tXSTRING_BEG",
  "tREGEXP_BEG",
  "tWORDS_BEG",
  "tAWORDS_BEG",
  "tSTRING_DBEG",
  "tSTRING_DVAR",
  "tSTRING_END",
  "tSTRING",
  "tSYMBOL",
  "tNL",
  "tEH",
  "tCOLON",
  "tCOMMA",
  "tSPACE",
  "tSEMI",
  "tLAMBDA",
  "tLAMBEG",
  "tLBRACK2",
  "tLBRACK",
  "tJSLBRACK",
  "tDSTAR",
  "tEQL",
  "tLOWEST",
  "\"-@NUM\"",
  "\"+@NUM\"",
  "$start",
  "program",
  "top_compstmt",
  "top_stmts",
  "opt_terms",
  "top_stmt",
  "terms",
  "stmt",
  "bodystmt",
  "compstmt",
  "opt_rescue",
  "opt_else",
  "opt_ensure",
  "stmts",
  "fitem",
  "undef_list",
  "expr_value",
  "lhs",
  "command_call",
  "mlhs",
  "var_lhs",
  "primary_value",
  "aref_args",
  "backref",
  "mrhs",
  "arg_value",
  "expr",
  "@1",
  "arg",
  "command",
  "block_command",
  "call_args",
  "block_call",
  "operation2",
  "command_args",
  "cmd_brace_block",
  "opt_block_var",
  "operation",
  "mlhs_basic",
  "mlhs_entry",
  "mlhs_head",
  "mlhs_item",
  "mlhs_node",
  "mlhs_post",
  "variable",
  "cname",
  "cpath",
  "fname",
  "op",
  "reswords",
  "symbol",
  "opt_nl",
  "primary",
  "none",
  "args",
  "trailer",
  "assocs",
  "paren_args",
  "opt_call_args",
  "rparen",
  "opt_paren_args",
  "opt_block_arg",
  "block_arg",
  "call_args2",
  "open_args",
  "@2",
  "literal",
  "strings",
  "xstring",
  "regexp",
  "words",
  "awords",
  "var_ref",
  "assoc_list",
  "brace_block",
  "method_call",
  "lambda",
  "then",
  "if_tail",
  "do",
  "case_body",
  "for_var",
  "superclass",
  "term",
  "f_arglist",
  "singleton",
  "dot_or_colon",
  "@3",
  "@4",
  "@5",
  "@6",
  "@7",
  "@8",
  "@9",
  "@10",
  "@11",
  "@12",
  "@13",
  "@14",
  "@15",
  "@16",
  "@17",
  "f_larglist",
  "lambda_body",
  "block_param",
  "f_block_optarg",
  "f_block_opt",
  "block_args_tail",
  "f_block_arg",
  "opt_block_args_tail",
  "f_arg",
  "f_rest_arg",
  "do_block",
  "@18",
  "operation3",
  "@19",
  "@20",
  "cases",
  "@21",
  "exc_list",
  "exc_var",
  "numeric",
  "dsym",
  "string",
  "string1",
  "string_contents",
  "xstring_contents",
  "word_list",
  "word",
  "string_content",
  "qword_list",
  "string_dvar",
  "@22",
  "@23",
  "sym",
  "f_args",
  "kwrest_mark",
  "f_kwrest",
  "f_label",
  "f_kw",
  "f_kwarg",
  "args_tail",
  "opt_f_block_arg",
  "opt_args_tail",
  "f_optarg",
  "f_norm_arg",
  "f_bad_arg",
  "f_arg_item",
  "f_margs",
  "f_marg",
  "f_marg_list",
  "f_opt",
  "restarg_mark",
  "blkarg_mark",
  "assoc" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

def _reduce_2(val, _values, result)
                      result = new_compstmt val[0]
                    
    result
end

def _reduce_3(val, _values, result)
                      result = new_block
                    
    result
end

def _reduce_4(val, _values, result)
                      result = new_block val[0]
                    
    result
end

def _reduce_5(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

# reduce 6 omitted

def _reduce_7(val, _values, result)
                      result = val[2]
                    
    result
end

def _reduce_8(val, _values, result)
                      result = new_body(val[0], val[1], val[2], val[3])
                    
    result
end

def _reduce_9(val, _values, result)
                      result = new_compstmt val[0]
                    
    result
end

def _reduce_10(val, _values, result)
                      result = new_block
                    
    result
end

def _reduce_11(val, _values, result)
                      result = new_block val[0]
                    
    result
end

def _reduce_12(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_13(val, _values, result)
                      lexer.lex_state = :expr_fname
                    
    result
end

def _reduce_14(val, _values, result)
                      result = new_alias(val[0], val[1], val[3])
                    
    result
end

def _reduce_15(val, _values, result)
                      result = s(:valias, value(val[1]).to_sym, value(val[2]).to_sym)
                    
    result
end

# reduce 16 omitted

def _reduce_17(val, _values, result)
                      result = s(:valias, value(val[1]).to_sym, value(val[2]).to_sym)
                    
    result
end

def _reduce_18(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_19(val, _values, result)
                      result = new_if(val[1], val[2], val[0], nil)
                    
    result
end

def _reduce_20(val, _values, result)
                      result = new_if(val[1], val[2], nil, val[0])
                    
    result
end

def _reduce_21(val, _values, result)
                      result = new_while(val[1], val[2], val[0])
                    
    result
end

def _reduce_22(val, _values, result)
                      result = new_until(val[1], val[2], val[0])
                    
    result
end

def _reduce_23(val, _values, result)
                      result = new_rescue_mod(val[1], val[0], val[2])
                    
    result
end

# reduce 24 omitted

def _reduce_25(val, _values, result)
                      result = new_assign(val[0], val[1], val[2])
                    
    result
end

def _reduce_26(val, _values, result)
                      result = s(:masgn, val[0], s(:to_ary, val[2]))
                    
    result
end

def _reduce_27(val, _values, result)
                      result = new_op_asgn val[1], val[0], val[2]
                    
    result
end

# reduce 28 omitted

# reduce 29 omitted

def _reduce_30(val, _values, result)
                      result = s(:op_asgn2, val[0], op_to_setter(val[2]), value(val[3]).to_sym, val[4])
                    
    result
end

# reduce 31 omitted

# reduce 32 omitted

# reduce 33 omitted

def _reduce_34(val, _values, result)
                      result = new_assign val[0], val[1], s(:svalue, val[2])
                    
    result
end

def _reduce_35(val, _values, result)
                      result = s(:masgn, val[0], s(:to_ary, val[2]))
                    
    result
end

def _reduce_36(val, _values, result)
                      result = s(:masgn, val[0], val[2])
                    
    result
end

# reduce 37 omitted

# reduce 38 omitted

def _reduce_39(val, _values, result)
                      result = s(:and, val[0], val[2])
                    
    result
end

def _reduce_40(val, _values, result)
                      result = s(:or, val[0], val[2])
                    
    result
end

def _reduce_41(val, _values, result)
                      result = new_unary_call(['!', []], val[1])
                    
    result
end

def _reduce_42(val, _values, result)
                      result = new_unary_call(val[0], val[1])
                    
    result
end

# reduce 43 omitted

# reduce 44 omitted

# reduce 45 omitted

# reduce 46 omitted

def _reduce_47(val, _values, result)
                      result = new_return(val[0], val[1])
                    
    result
end

def _reduce_48(val, _values, result)
                      result = new_break(val[0], val[1])
                    
    result
end

def _reduce_49(val, _values, result)
                      result = new_next(val[0], val[1])
                    
    result
end

# reduce 50 omitted

# reduce 51 omitted

# reduce 52 omitted

# reduce 53 omitted

# reduce 54 omitted

def _reduce_55(val, _values, result)
                      result = new_call(nil, val[0], val[1])
                    
    result
end

# reduce 56 omitted

def _reduce_57(val, _values, result)
                      result = new_js_call(val[0], val[2], val[3])
                    
    result
end

# reduce 58 omitted

def _reduce_59(val, _values, result)
                      result = new_call(val[0], val[2], val[3])
                    
    result
end

# reduce 60 omitted

def _reduce_61(val, _values, result)
                    result = new_call(val[0], val[2], val[3])
                  
    result
end

# reduce 62 omitted

def _reduce_63(val, _values, result)
                      result = new_super(val[0], val[1])
                    
    result
end

def _reduce_64(val, _values, result)
                      result = new_yield val[1]
                    
    result
end

def _reduce_65(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_66(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_67(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_68(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_69(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_70(val, _values, result)
                      result = val[0] << val[1]
                    
    result
end

def _reduce_71(val, _values, result)
                      result = val[0] << s(:splat, val[2])
                    
    result
end

# reduce 72 omitted

def _reduce_73(val, _values, result)
                      result = val[0] << s(:splat)
                    
    result
end

# reduce 74 omitted

def _reduce_75(val, _values, result)
                      result = s(:array, s(:splat, val[1]))
                    
    result
end

def _reduce_76(val, _values, result)
                      result = s(:array, s(:splat))
                    
    result
end

# reduce 77 omitted

def _reduce_78(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_79(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_80(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

def _reduce_81(val, _values, result)
                      result = val[0] << val[1]
                    
    result
end

# reduce 82 omitted

# reduce 83 omitted

def _reduce_84(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_85(val, _values, result)
                      args = val[2] ? val[2] : []
                      result = s(:attrasgn, val[0], :[]=, s(:arglist, *args))
                    
    result
end

def _reduce_86(val, _values, result)
                      result = new_call val[0], val[2], []
                    
    result
end

# reduce 87 omitted

# reduce 88 omitted

# reduce 89 omitted

# reduce 90 omitted

# reduce 91 omitted

def _reduce_92(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_93(val, _values, result)
                      result = new_js_attrasgn(val[0], val[2])
                    
    result
end

def _reduce_94(val, _values, result)
                      result = new_attrasgn(val[0], :[]=, val[2])
                    
    result
end

def _reduce_95(val, _values, result)
                      result = new_attrasgn(val[0], op_to_setter(val[2]))
                    
    result
end

def _reduce_96(val, _values, result)
                      result = new_attrasgn(val[0], op_to_setter(val[2]))
                    
    result
end

def _reduce_97(val, _values, result)
                      result = new_attrasgn(val[0], op_to_setter(val[2]))
                    
    result
end

def _reduce_98(val, _values, result)
                      result = new_colon2(val[0], val[1], val[2])
                    
    result
end

def _reduce_99(val, _values, result)
                      result = new_colon3(val[0], val[1])
                    
    result
end

# reduce 100 omitted

# reduce 101 omitted

def _reduce_102(val, _values, result)
                      result = new_colon3(val[0], val[1])
                    
    result
end

def _reduce_103(val, _values, result)
                      result = new_const(val[0])
                    
    result
end

def _reduce_104(val, _values, result)
                      result = new_colon2(val[0], val[1], val[2])
                    
    result
end

# reduce 105 omitted

# reduce 106 omitted

# reduce 107 omitted

def _reduce_108(val, _values, result)
                      lexer.lex_state = :expr_end
                      result = val[0]
                    
    result
end

def _reduce_109(val, _values, result)
                      lexer.lex_state = :expr_end
                      result = val[0]
                    
    result
end

def _reduce_110(val, _values, result)
                      result = new_sym(val[0])
                    
    result
end

# reduce 111 omitted

def _reduce_112(val, _values, result)
                      result = s(:undef, val[0])
                    
    result
end

def _reduce_113(val, _values, result)
                      result = val[0] << val[2]
                    
    result
end

# reduce 114 omitted

# reduce 115 omitted

# reduce 116 omitted

# reduce 117 omitted

# reduce 118 omitted

# reduce 119 omitted

# reduce 120 omitted

# reduce 121 omitted

# reduce 122 omitted

# reduce 123 omitted

# reduce 124 omitted

# reduce 125 omitted

# reduce 126 omitted

# reduce 127 omitted

# reduce 128 omitted

# reduce 129 omitted

# reduce 130 omitted

# reduce 131 omitted

# reduce 132 omitted

# reduce 133 omitted

# reduce 134 omitted

# reduce 135 omitted

# reduce 136 omitted

# reduce 137 omitted

# reduce 138 omitted

# reduce 139 omitted

# reduce 140 omitted

# reduce 141 omitted

# reduce 142 omitted

# reduce 143 omitted

# reduce 144 omitted

# reduce 145 omitted

# reduce 146 omitted

# reduce 147 omitted

# reduce 148 omitted

# reduce 149 omitted

# reduce 150 omitted

# reduce 151 omitted

# reduce 152 omitted

# reduce 153 omitted

# reduce 154 omitted

# reduce 155 omitted

# reduce 156 omitted

# reduce 157 omitted

# reduce 158 omitted

# reduce 159 omitted

# reduce 160 omitted

# reduce 161 omitted

# reduce 162 omitted

# reduce 163 omitted

# reduce 164 omitted

# reduce 165 omitted

# reduce 166 omitted

# reduce 167 omitted

# reduce 168 omitted

# reduce 169 omitted

# reduce 170 omitted

# reduce 171 omitted

# reduce 172 omitted

# reduce 173 omitted

# reduce 174 omitted

# reduce 175 omitted

# reduce 176 omitted

# reduce 177 omitted

# reduce 178 omitted

# reduce 179 omitted

# reduce 180 omitted

# reduce 181 omitted

# reduce 182 omitted

# reduce 183 omitted

# reduce 184 omitted

# reduce 185 omitted

# reduce 186 omitted

# reduce 187 omitted

def _reduce_188(val, _values, result)
                      result = new_assign(val[0], val[1], val[2])
                    
    result
end

def _reduce_189(val, _values, result)
                      result = new_assign val[0], val[1], s(:rescue_mod, val[2], val[4])
                    
    result
end

def _reduce_190(val, _values, result)
                      result = new_op_asgn val[1], val[0], val[2]
                    
    result
end

def _reduce_191(val, _values, result)
                      result = new_op_asgn1(val[0], val[2], val[4], val[5])
                    
    result
end

def _reduce_192(val, _values, result)
                      raise ".JS[...] #{val[4]} is not supported"
                    
    result
end

def _reduce_193(val, _values, result)
                      result = s(:op_asgn2, val[0], op_to_setter(val[2]), value(val[3]).to_sym, val[4])
                    
    result
end

# reduce 194 omitted

# reduce 195 omitted

# reduce 196 omitted

# reduce 197 omitted

# reduce 198 omitted

def _reduce_199(val, _values, result)
                      result = new_irange(val[0], val[1], val[2])
                    
    result
end

def _reduce_200(val, _values, result)
                      result = new_erange(val[0], val[1], val[2])
                    
    result
end

def _reduce_201(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_202(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_203(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_204(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_205(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_206(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_207(val, _values, result)
                      result = new_call new_binary_call(new_int(val[1]), val[2], val[3]), [:"-@", []], []
                    
    result
end

def _reduce_208(val, _values, result)
                      result = new_call new_binary_call(new_float(val[1]), val[2], val[3]), [:"-@", []], []
                    
    result
end

def _reduce_209(val, _values, result)
                      result = new_call val[1], [:"+@", []], []
                      if [:int, :float].include? val[1].type
                        result = val[1]
                      end
                    
    result
end

def _reduce_210(val, _values, result)
                      result = new_call val[1], [:"-@", []], []
                      if val[1].type == :int
                        val[1][1] = -val[1][1]
                        result = val[1]
                      elsif val[1].type == :float
                        val[1][1] = -val[1][1].to_f
                        result = val[1]
                      end
                    
    result
end

def _reduce_211(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_212(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_213(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_214(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_215(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_216(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_217(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_218(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_219(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_220(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_221(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_222(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_223(val, _values, result)
                      result = new_not(val[1], new_binary_call(
                                 val[0], ['=~', []], val[2]))
                    
    result
end

def _reduce_224(val, _values, result)
                      result = new_unary_call(val[0], val[1])
                    
    result
end

def _reduce_225(val, _values, result)
                      result = new_unary_call(val[0], val[1])
                    
    result
end

def _reduce_226(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_227(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_228(val, _values, result)
                      result = new_and(val[0], val[1], val[2])
                    
    result
end

def _reduce_229(val, _values, result)
                      result = new_or(val[0], val[1], val[2])
                    
    result
end

def _reduce_230(val, _values, result)
                      result = s(:defined, val[2])
                    
    result
end

def _reduce_231(val, _values, result)
                      result = new_if(val[1], val[0], val[2], val[4])
                    
    result
end

# reduce 232 omitted

# reduce 233 omitted

def _reduce_234(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_235(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_236(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_237(val, _values, result)
                      val[0] << s(:hash, *val[2])
                      result = val[0]
                    
    result
end

def _reduce_238(val, _values, result)
                      result = [s(:hash, *val[0])]
                    
    result
end

def _reduce_239(val, _values, result)
                      result = val[1]
                    
    result
end

# reduce 240 omitted

def _reduce_241(val, _values, result)
                      result = []
                    
    result
end

# reduce 242 omitted

def _reduce_243(val, _values, result)
                      result = []
                    
    result
end

# reduce 244 omitted

def _reduce_245(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_246(val, _values, result)
                      result = val[0]
                      result << new_hash(nil, val[2], nil)
                    
    result
end

def _reduce_247(val, _values, result)
                      result = [new_hash(nil, val[0], nil)]
                    
    result
end

def _reduce_248(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_249(val, _values, result)
                      result = val[0]
                      add_block_pass val[0], val[1]
                    
    result
end

def _reduce_250(val, _values, result)
                      result = [new_hash(nil, val[0], nil)]
                      add_block_pass result, val[1]
                    
    result
end

def _reduce_251(val, _values, result)
                      result = val[0]
                      result << new_hash(nil, val[2], nil)
                    
    result
end

def _reduce_252(val, _values, result)
                      result = []
                      add_block_pass result, val[0]
                    
    result
end

# reduce 253 omitted

# reduce 254 omitted

def _reduce_255(val, _values, result)
                      lexer.cmdarg_push 1
                    
    result
end

def _reduce_256(val, _values, result)
                      lexer.cmdarg_pop
                      result = val[1]
                    
    result
end

# reduce 257 omitted

def _reduce_258(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_259(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_260(val, _values, result)
                      result = new_block_pass(val[0], val[1])
                    
    result
end

def _reduce_261(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_262(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_263(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_264(val, _values, result)
                      result = [new_splat(val[0], val[1])]
                    
    result
end

def _reduce_265(val, _values, result)
                      result = val[0] << val[2]
                    
    result
end

def _reduce_266(val, _values, result)
                      result  = val[0] << new_splat(val[2], val[3])
                    
    result
end

def _reduce_267(val, _values, result)
                      val[0] << val[2]
                      result = s(:array, *val[0])
                    
    result
end

def _reduce_268(val, _values, result)
                      val[0] << s(:splat, val[3])
                      result = s(:array, *val[0])
                    
    result
end

def _reduce_269(val, _values, result)
                      result = s(:splat, val[1])
                    
    result
end

# reduce 270 omitted

# reduce 271 omitted

# reduce 272 omitted

# reduce 273 omitted

# reduce 274 omitted

# reduce 275 omitted

# reduce 276 omitted

# reduce 277 omitted

# reduce 278 omitted

def _reduce_279(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_280(val, _values, result)
                      result = s(:begin, val[2])
                    
    result
end

def _reduce_281(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_282(val, _values, result)
                      result = new_paren(val[0], val[1], val[2])
                    
    result
end

def _reduce_283(val, _values, result)
                      result = new_colon2(val[0], val[1], val[2])
                    
    result
end

def _reduce_284(val, _values, result)
                      result = new_colon3(val[0], val[1])
                    
    result
end

def _reduce_285(val, _values, result)
                      result = new_call val[0], [:[], []], val[2]
                    
    result
end

def _reduce_286(val, _values, result)
                      result = new_js_call val[0], [:[], []], val[2]
                    
    result
end

def _reduce_287(val, _values, result)
                      result = new_array(val[0], val[1], val[2])
                    
    result
end

def _reduce_288(val, _values, result)
                      result = new_hash(val[0], val[1], val[2])
                    
    result
end

def _reduce_289(val, _values, result)
                      result = new_return(val[0])
                    
    result
end

def _reduce_290(val, _values, result)
                      result = new_yield val[2]
                    
    result
end

def _reduce_291(val, _values, result)
                      result = s(:yield)
                    
    result
end

def _reduce_292(val, _values, result)
                      result = s(:yield)
                    
    result
end

def _reduce_293(val, _values, result)
                      result = s(:defined, val[3])
                    
    result
end

def _reduce_294(val, _values, result)
                      result = new_unary_call(['!', []], val[2])
                    
    result
end

def _reduce_295(val, _values, result)
                      result = new_unary_call(['!', []], new_nil(val[0]))
                    
    result
end

def _reduce_296(val, _values, result)
                      result = new_call(nil, val[0], [])
                      result << val[1]
                    
    result
end

# reduce 297 omitted

def _reduce_298(val, _values, result)
                      val[0] << val[1]
                      result = val[0]
                    
    result
end

def _reduce_299(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_300(val, _values, result)
                      result = new_if(val[0], val[1], val[3], val[4])
                    
    result
end

def _reduce_301(val, _values, result)
                      result = new_if(val[0], val[1], val[4], val[3])
                    
    result
end

def _reduce_302(val, _values, result)
                      lexer.cond_push 1
                      result = lexer.line
                    
    result
end

def _reduce_303(val, _values, result)
                      lexer.cond_pop
                    
    result
end

def _reduce_304(val, _values, result)
                      result = s(:while, val[2], val[5])
                    
    result
end

def _reduce_305(val, _values, result)
                      lexer.cond_push 1
                      result = lexer.line
                    
    result
end

def _reduce_306(val, _values, result)
                      lexer.cond_pop
                    
    result
end

def _reduce_307(val, _values, result)
                      result = s(:until, val[2], val[5])
                    
    result
end

def _reduce_308(val, _values, result)
                      result = s(:case, val[1], *val[3])
                    
    result
end

def _reduce_309(val, _values, result)
                      result = s(:case, nil, *val[2])
                    
    result
end

def _reduce_310(val, _values, result)
                      result = s(:case, nil, val[3])
                    
    result
end

def _reduce_311(val, _values, result)
                      lexer.cond_push 1
                      result = lexer.line
                    
    result
end

def _reduce_312(val, _values, result)
                      lexer.cond_pop
                    
    result
end

def _reduce_313(val, _values, result)
                      result = s(:for, val[4], val[1], val[7])
                    
    result
end

def _reduce_314(val, _values, result)
                      # ...
                    
    result
end

def _reduce_315(val, _values, result)
                      result = new_class val[0], val[1], val[2], val[4], val[5]
                    
    result
end

def _reduce_316(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_317(val, _values, result)
                      # ...
                    
    result
end

def _reduce_318(val, _values, result)
                      result = new_sclass(val[0], val[3], val[6], val[7])
                    
    result
end

def _reduce_319(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_320(val, _values, result)
                      # ...
                    
    result
end

def _reduce_321(val, _values, result)
                      result = new_module(val[0], val[2], val[4], val[5])
                    
    result
end

def _reduce_322(val, _values, result)
                      push_scope
                      lexer.lex_state = :expr_endfn
                    
    result
end

def _reduce_323(val, _values, result)
                      result = new_def(val[0], nil, val[1], val[3], val[4], val[5])
                      pop_scope
                    
    result
end

def _reduce_324(val, _values, result)
                       lexer.lex_state = :expr_fname
                    
    result
end

def _reduce_325(val, _values, result)
                      push_scope
                      lexer.lex_state = :expr_endfn
                    
    result
end

def _reduce_326(val, _values, result)
                      result = new_def(val[0], val[1], val[4], val[6], val[7], val[8])
                      pop_scope
                    
    result
end

def _reduce_327(val, _values, result)
                      result = new_break(val[0])
                    
    result
end

def _reduce_328(val, _values, result)
                      result = s(:next)
                    
    result
end

def _reduce_329(val, _values, result)
                      result = s(:redo)
                    
    result
end

# reduce 330 omitted

# reduce 331 omitted

# reduce 332 omitted

# reduce 333 omitted

# reduce 334 omitted

# reduce 335 omitted

# reduce 336 omitted

# reduce 337 omitted

# reduce 338 omitted

def _reduce_339(val, _values, result)
                      result = new_call nil, [:lambda, []], []
                      result << new_iter(val[0], val[1])
                    
    result
end

def _reduce_340(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_341(val, _values, result)
                      result = nil
                    
    result
end

# reduce 342 omitted

# reduce 343 omitted

def _reduce_344(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_345(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_346(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_347(val, _values, result)
                      result = new_if(val[0], val[1], val[3], val[4])
                    
    result
end

# reduce 348 omitted

def _reduce_349(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_350(val, _values, result)
                      result = s(:block, val[0])
                    
    result
end

def _reduce_351(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_352(val, _values, result)
                      result = new_assign(new_assignable(new_ident(
                                  val[0])), val[1], val[2])
                    
    result
end

# reduce 353 omitted

def _reduce_354(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_355(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_356(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_357(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_358(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_359(val, _values, result)
                      nil
                    
    result
end

def _reduce_360(val, _values, result)
                      result = new_block_args(val[0], val[2], val[4], val[5])
                    
    result
end

def _reduce_361(val, _values, result)
                      result = new_block_args(val[0], val[2], nil, val[3])
                    
    result
end

def _reduce_362(val, _values, result)
                      result = new_block_args(val[0], nil, val[2], val[3])
                    
    result
end

def _reduce_363(val, _values, result)
                      result = new_block_args(val[0], nil, nil, nil)
                    
    result
end

def _reduce_364(val, _values, result)
                      result = new_block_args(val[0], nil, nil, val[1])
                    
    result
end

def _reduce_365(val, _values, result)
                      result = new_block_args(nil, val[0], val[2], val[3])
                    
    result
end

def _reduce_366(val, _values, result)
                      result = new_block_args(nil, val[0], nil, val[1])
                    
    result
end

def _reduce_367(val, _values, result)
                      result = new_block_args(nil, nil, val[0], val[1])
                    
    result
end

def _reduce_368(val, _values, result)
                      result = new_block_args(nil, nil, nil, val[0])
                    
    result
end

def _reduce_369(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_370(val, _values, result)
                      result = new_iter val[2], val[3]
                      pop_scope
                    
    result
end

def _reduce_371(val, _values, result)
                      val[0] << val[1]
                      result = val[0]
                    
    result
end

# reduce 372 omitted

# reduce 373 omitted

# reduce 374 omitted

def _reduce_375(val, _values, result)
                      result = new_call(nil, val[0], val[1])
                    
    result
end

def _reduce_376(val, _values, result)
                      result = new_call(val[0], val[2], val[3])
                    
    result
end

def _reduce_377(val, _values, result)
                      result = new_js_call(val[0], val[2], val[3])
                    
    result
end

def _reduce_378(val, _values, result)
                      result = new_call(val[0], [:call, []], val[2])
                    
    result
end

def _reduce_379(val, _values, result)
                      result = new_call(val[0], val[2], val[3])
                    
    result
end

def _reduce_380(val, _values, result)
                      result = new_call(val[0], val[2])
                    
    result
end

def _reduce_381(val, _values, result)
                      result = new_super(val[0], val[1])
                    
    result
end

def _reduce_382(val, _values, result)
                      result = new_super(val[0], nil)
                    
    result
end

def _reduce_383(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_384(val, _values, result)
                      result = new_iter val[2], val[3]
                      pop_scope
                    
    result
end

def _reduce_385(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_386(val, _values, result)
                      result = new_iter val[2], val[3]
                      pop_scope
                    
    result
end

def _reduce_387(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_388(val, _values, result)
                      part = s(:when, s(:array, *val[2]), val[4])
                      result = [part]
                      result.push(*val[5]) if val[5]
                    
    result
end

def _reduce_389(val, _values, result)
                      result = [val[0]]
                    
    result
end

# reduce 390 omitted

def _reduce_391(val, _values, result)
                      exc = val[1] || s(:array)
                      exc << new_assign(val[2], val[2], s(:gvar, '$!'.intern)) if val[2]
                      result = [s(:resbody, exc, val[4])]
                      result.push val[5].first if val[5]
                    
    result
end

def _reduce_392(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_393(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

# reduce 394 omitted

# reduce 395 omitted

def _reduce_396(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_397(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_398(val, _values, result)
                      result = val[1].nil? ? s(:nil) : val[1]
                    
    result
end

# reduce 399 omitted

# reduce 400 omitted

# reduce 401 omitted

# reduce 402 omitted

def _reduce_403(val, _values, result)
                      result = new_str val[0]
                    
    result
end

# reduce 404 omitted

def _reduce_405(val, _values, result)
                    result = str_append val[0], val[1]
                  
    result
end

def _reduce_406(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_407(val, _values, result)
                      result = s(:str, value(val[0]))
                    
    result
end

def _reduce_408(val, _values, result)
                      result = new_xstr(val[0], val[1], val[2])
                    
    result
end

def _reduce_409(val, _values, result)
                      result = new_regexp val[1], val[2]
                    
    result
end

def _reduce_410(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_411(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_412(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_413(val, _values, result)
                      part = val[1]
                      part = s(:dstr, "", val[1]) if part.type == :evstr
                      result = val[0] << part
                    
    result
end

def _reduce_414(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_415(val, _values, result)
                      result = val[0].concat([val[1]])
                    
    result
end

def _reduce_416(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_417(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_418(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_419(val, _values, result)
                      result = val[0] << s(:str, value(val[1]))
                    
    result
end

def _reduce_420(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_421(val, _values, result)
                      result = str_append val[0], val[1]
                    
    result
end

def _reduce_422(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_423(val, _values, result)
                      result = str_append val[0], val[1]
                    
    result
end

def _reduce_424(val, _values, result)
                      result = new_str_content(val[0])
                    
    result
end

def _reduce_425(val, _values, result)
                      result = lexer.strterm
                      lexer.strterm = nil
                    
    result
end

def _reduce_426(val, _values, result)
                      lexer.strterm = val[1]
                      result = new_evstr(val[2])
                    
    result
end

def _reduce_427(val, _values, result)
                      lexer.cond_push 0
                      lexer.cmdarg_push 0
                      result = lexer.strterm
                      lexer.strterm = nil
                      lexer.lex_state = :expr_beg
                    
    result
end

def _reduce_428(val, _values, result)
                      lexer.strterm = val[1]
                      lexer.cond_lexpop
                      lexer.cmdarg_lexpop
                      result = new_evstr(val[2])
                    
    result
end

def _reduce_429(val, _values, result)
                      result = new_gvar(val[0])
                    
    result
end

def _reduce_430(val, _values, result)
                      result = new_ivar(val[0])
                    
    result
end

def _reduce_431(val, _values, result)
                      result = new_cvar(val[0])
                    
    result
end

# reduce 432 omitted

def _reduce_433(val, _values, result)
                      result = new_sym(val[1])
                      lexer.lex_state = :expr_end
                    
    result
end

def _reduce_434(val, _values, result)
                      result = new_sym(val[0])
                    
    result
end

def _reduce_435(val, _values, result)
                      print val
                      result = val[0]
                    
    result
end

# reduce 436 omitted

# reduce 437 omitted

# reduce 438 omitted

# reduce 439 omitted

def _reduce_440(val, _values, result)
                      result = new_dsym val[1]
                    
    result
end

def _reduce_441(val, _values, result)
                      result = new_int(val[0])
                    
    result
end

def _reduce_442(val, _values, result)
                      result = new_float(val[0])
                    
    result
end

def _reduce_443(val, _values, result)
                    result = negate_num(new_int(val[1]))
                  
    result
end

def _reduce_444(val, _values, result)
                    result = negate_num(new_float(val[1]))
                  
    result
end

def _reduce_445(val, _values, result)
                    result = new_int(val[1])
                  
    result
end

def _reduce_446(val, _values, result)
                    result = new_float(val[1])
                  
    result
end

def _reduce_447(val, _values, result)
                      result = new_ident(val[0])
                    
    result
end

def _reduce_448(val, _values, result)
                      result = new_ivar(val[0])
                    
    result
end

def _reduce_449(val, _values, result)
                      result = new_gvar(val[0])
                    
    result
end

def _reduce_450(val, _values, result)
                      result = new_const(val[0])
                    
    result
end

def _reduce_451(val, _values, result)
                      result = new_cvar(val[0])
                    
    result
end

def _reduce_452(val, _values, result)
                      result = new_nil(val[0])
                    
    result
end

def _reduce_453(val, _values, result)
                      result = new_self(val[0])
                    
    result
end

def _reduce_454(val, _values, result)
                      result = new_true(val[0])
                    
    result
end

def _reduce_455(val, _values, result)
                      result = new_false(val[0])
                    
    result
end

def _reduce_456(val, _values, result)
                      result = new___FILE__(val[0])
                    
    result
end

def _reduce_457(val, _values, result)
                      result = new___LINE__(val[0])
                    
    result
end

def _reduce_458(val, _values, result)
                      result = new_var_ref(val[0])
                    
    result
end

def _reduce_459(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_460(val, _values, result)
                      result = s(:nth_ref, value(val[0]))
                    
    result
end

# reduce 461 omitted

def _reduce_462(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_463(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_464(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_465(val, _values, result)
                      result = val[1]
                      lexer.lex_state = :expr_beg
                    
    result
end

def _reduce_466(val, _values, result)
                      result = val[0]
                      lexer.lex_state = :expr_beg
                    
    result
end

# reduce 467 omitted

# reduce 468 omitted

def _reduce_469(val, _values, result)
                      result = new_kwrestarg(val[1])
                    
    result
end

def _reduce_470(val, _values, result)
                      result = new_kwrestarg()
                    
    result
end

def _reduce_471(val, _values, result)
                      result = new_sym(val[0])
                    
    result
end

def _reduce_472(val, _values, result)
                      result = new_kwoptarg(val[0], val[1])
                    
    result
end

def _reduce_473(val, _values, result)
                      result = new_kwarg(val[0])
                    
    result
end

def _reduce_474(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_475(val, _values, result)
                      result = val[0]
                      result << val[2]
                    
    result
end

def _reduce_476(val, _values, result)
                      result = new_args_tail(val[0], val[2], val[3])
                    
    result
end

def _reduce_477(val, _values, result)
                      result = new_args_tail(val[0], nil, val[1])
                    
    result
end

def _reduce_478(val, _values, result)
                      result = new_args_tail(nil, val[0], val[1])
                    
    result
end

def _reduce_479(val, _values, result)
                      result = new_args_tail(nil, nil, val[0])
                    
    result
end

def _reduce_480(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_481(val, _values, result)
                      result = new_args_tail(nil, nil, nil)
                    
    result
end

def _reduce_482(val, _values, result)
                      result = new_args(val[0], val[2], val[4], val[5])
                    
    result
end

def _reduce_483(val, _values, result)
                      result = new_args(val[0], val[2], nil, val[3])
                    
    result
end

def _reduce_484(val, _values, result)
                      result = new_args(val[0], nil, val[2], val[3])
                    
    result
end

def _reduce_485(val, _values, result)
                      result = new_args(val[0], nil, nil, val[1])
                    
    result
end

def _reduce_486(val, _values, result)
                      result = new_args(nil, val[0], val[2], val[3])
                    
    result
end

def _reduce_487(val, _values, result)
                      result = new_args(nil, val[0], nil, val[1])
                    
    result
end

def _reduce_488(val, _values, result)
                      result = new_args(nil, nil, val[0], val[1])
                    
    result
end

def _reduce_489(val, _values, result)
                      result = new_args(nil, nil, nil, val[0])
                    
    result
end

def _reduce_490(val, _values, result)
                      result = new_args(nil, nil, nil, nil)
                    
    result
end

# reduce 491 omitted

def _reduce_492(val, _values, result)
                      result = value(val[0]).to_sym
                      scope.add_local result
                    
    result
end

def _reduce_493(val, _values, result)
                      raise 'formal argument cannot be a constant'
                    
    result
end

def _reduce_494(val, _values, result)
                      raise 'formal argument cannot be an instance variable'
                    
    result
end

def _reduce_495(val, _values, result)
                      raise 'formal argument cannot be a class variable'
                    
    result
end

def _reduce_496(val, _values, result)
                      raise 'formal argument cannot be a global variable'
                    
    result
end

def _reduce_497(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_498(val, _values, result)
                      result = val[1]
                    
    result
end

# reduce 499 omitted

# reduce 500 omitted

def _reduce_501(val, _values, result)
                      result = s(:lasgn, val[0])
                    
    result
end

# reduce 502 omitted

def _reduce_503(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

def _reduce_504(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

# reduce 505 omitted

# reduce 506 omitted

# reduce 507 omitted

# reduce 508 omitted

# reduce 509 omitted

def _reduce_510(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_511(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_512(val, _values, result)
                      result = new_assign(new_assignable(new_ident(val[0])), val[1], val[2])
                    
    result
end

def _reduce_513(val, _values, result)
                      result = s(:block, val[0])
                    
    result
end

def _reduce_514(val, _values, result)
                      result = val[0]
                      val[0] << val[2]
                    
    result
end

# reduce 515 omitted

# reduce 516 omitted

def _reduce_517(val, _values, result)
                      result = "*#{value(val[1])}".to_sym
                    
    result
end

def _reduce_518(val, _values, result)
                      result = :"*"
                    
    result
end

# reduce 519 omitted

# reduce 520 omitted

def _reduce_521(val, _values, result)
                      result = "&#{value(val[1])}".to_sym
                    
    result
end

def _reduce_522(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_523(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_524(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_525(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_526(val, _values, result)
                      result = []
                    
    result
end

def _reduce_527(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_528(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_529(val, _values, result)
                      result = val[0].push(*val[2])
                    
    result
end

def _reduce_530(val, _values, result)
                      result = [val[0], val[2]]
                    
    result
end

def _reduce_531(val, _values, result)
                      result = [new_sym(val[0]), val[1]]
                    
    result
end

# reduce 532 omitted

# reduce 533 omitted

# reduce 534 omitted

# reduce 535 omitted

# reduce 536 omitted

# reduce 537 omitted

# reduce 538 omitted

# reduce 539 omitted

# reduce 540 omitted

# reduce 541 omitted

# reduce 542 omitted

# reduce 543 omitted

# reduce 544 omitted

# reduce 545 omitted

# reduce 546 omitted

# reduce 547 omitted

# reduce 548 omitted

# reduce 549 omitted

# reduce 550 omitted

# reduce 551 omitted

# reduce 552 omitted

# reduce 553 omitted

# reduce 554 omitted

def _reduce_555(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module Opal
