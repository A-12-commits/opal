#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.13
# from Racc grammer file "".
#

require 'racc/parser.rb'
module Opal
  class Parser < Racc::Parser


##### State transition tables begin ###

clist = [
'63,64,65,8,51,593,274,563,57,58,274,274,593,61,97,59,60,62,23,24,66',
'67,-93,-476,-101,108,637,22,28,27,90,89,91,92,555,463,17,554,671,671',
'-100,-85,7,41,6,9,94,93,84,50,86,85,87,-96,88,95,96,593,81,82,195,38',
'39,-92,-98,-68,671,205,206,615,269,670,670,-93,-95,269,555,101,196,557',
'205,206,100,36,593,-101,30,636,593,52,273,54,-93,32,273,273,-101,40',
'73,670,-100,-80,205,206,-97,18,74,-85,-96,562,79,73,75,76,77,78,101',
'197,592,74,80,100,-98,101,-85,592,-92,56,100,-92,53,63,64,65,667,51',
'37,83,198,57,58,-95,-91,-85,61,-99,59,60,62,23,24,66,67,-85,309,-87',
'834,246,22,28,27,90,89,91,92,-92,-89,17,101,-559,592,934,614,100,41',
'-92,-86,94,93,84,50,86,85,87,542,88,95,96,-97,81,82,101,38,39,-91,101',
'100,592,300,101,100,592,301,-93,100,-93,-88,-101,-93,-101,-560,-100',
'-101,-100,210,309,-100,214,215,-96,52,-96,54,-99,-96,-464,625,397,40',
'752,752,-87,-464,-98,-100,-98,18,555,-98,671,557,79,73,75,76,77,78,-90',
'205,206,74,80,-95,-89,-95,752,-86,-95,56,400,-91,53,63,64,65,-559,51',
'37,83,101,57,58,670,411,100,61,-88,59,60,62,23,24,66,67,-90,627,626',
'623,799,22,28,27,90,89,91,92,-91,-87,219,-97,-560,-97,679,625,-97,41',
'-91,424,94,93,84,50,86,85,87,462,88,95,96,-89,81,82,-86,38,39,227,101',
'101,751,751,464,100,100,-87,-99,101,-99,340,-94,-99,100,-559,-88,-87',
'625,210,465,337,214,-560,-90,52,101,54,751,-89,224,100,-86,40,226,225',
'627,626,599,-89,600,218,-86,810,215,792,79,73,75,76,77,78,-88,353,352',
'74,80,496,811,948,-90,904,-88,56,340,498,53,63,64,65,-90,51,37,83,337',
'57,58,627,626,623,61,905,59,60,62,258,259,66,67,555,338,340,557,-96',
'257,28,27,90,89,91,92,337,-467,219,350,349,353,352,-98,-467,41,-94,500',
'94,93,84,50,86,85,87,262,88,95,96,309,81,82,988,38,39,-474,-95,625,353',
'352,204,581,-474,345,343,342,340,344,338,265,266,507,-473,-472,625,210',
'337,267,214,-473,-472,52,837,54,600,256,-469,254,581,40,345,343,342',
'-469,344,338,101,218,-67,347,-92,100,79,260,75,76,77,78,353,352,-101',
'74,80,524,-470,948,627,626,628,56,340,-470,53,63,64,65,525,51,37,83',
'337,57,58,627,626,632,61,526,59,60,62,258,259,66,67,338,535,340,205',
'206,257,28,27,90,89,91,92,337,278,219,350,349,353,352,928,625,41,309',
'630,94,93,84,50,86,85,87,262,88,95,96,-471,81,82,101,38,39,625,-471',
'100,353,352,-476,581,620,345,343,342,340,344,338,621,302,303,101,269',
'101,210,337,100,214,100,542,52,539,54,543,256,421,254,544,40,227,423',
'422,627,626,338,309,218,558,347,-85,559,79,260,75,76,77,78,353,352,-93',
'74,80,500,627,626,638,648,566,56,-91,569,53,63,64,65,570,51,37,83,-100',
'57,58,409,410,573,61,574,59,60,62,258,259,66,67,338,537,538,576,649',
'257,28,27,90,89,91,92,-87,580,219,203,201,588,798,205,206,41,-96,202',
'94,93,84,50,86,85,87,262,88,95,96,589,81,82,413,38,39,205,206,605,-89',
'227,606,581,607,345,343,342,340,344,-98,353,352,631,-86,862,837,210',
'337,635,214,227,639,52,-95,54,199,256,200,254,642,40,224,645,-336,-336',
'226,225,-267,218,646,347,-336,647,79,260,75,76,77,78,353,352,224,74',
'80,269,226,225,222,223,227,56,862,837,53,-259,-259,-259,227,-259,37',
'83,227,-259,-259,227,309,689,-259,690,-259,-259,-259,-259,-259,-259',
'-259,338,698,-336,700,-336,-259,-259,-259,-259,-259,-259,-259,-80,701',
'-259,203,458,703,548,714,720,-259,721,459,-259,-259,-259,-259,-259,-259',
'-259,-259,-259,-259,-259,309,-259,-259,727,-259,-259,741,581,742,345',
'343,342,581,344,345,343,342,340,344,581,744,345,343,342,747,344,-259',
'337,600,-259,269,755,-259,794,-259,461,-259,460,-259,-268,-259,507,507',
'534,531,584,507,813,-259,814,347,532,587,-259,-259,-259,-259,-259,-259',
'353,352,498,-259,-259,103,104,105,106,107,500,-259,824,826,-259,63,64',
'65,8,51,-259,-259,827,57,58,714,831,269,61,269,59,60,62,23,24,66,67',
'338,832,530,269,533,22,28,27,90,89,91,92,894,895,17,714,896,95,96,227',
'7,41,227,9,94,93,84,50,86,85,87,837,88,95,96,842,81,82,844,38,39,845',
'581,846,345,343,342,581,344,345,343,342,340,344,103,104,105,106,107',
'848,573,36,337,851,282,227,853,52,848,54,857,32,837,866,867,40,869,870',
'534,545,584,-559,872,18,881,347,546,587,79,73,75,76,77,78,353,352,224',
'74,80,573,226,225,222,223,884,56,886,888,53,63,64,65,890,51,37,83,892',
'57,58,-557,-269,907,61,309,59,60,62,258,259,66,67,338,909,461,910,460',
'257,292,296,90,89,91,92,911,581,219,345,343,342,912,344,914,293,915',
'714,94,93,84,50,86,85,87,917,88,95,96,-267,81,82,921,-467,-467,-560',
'929,931,937,534,602,-467,939,534,611,584,-557,603,940,309,952,609,859',
'-270,954,290,956,958,287,848,967,52,848,54,848,286,-557,971,974,975',
'534,611,103,104,105,106,107,980,740,573,982,888,79,73,75,76,77,78,-467',
'888,-467,74,80,890,601,993,604,996,610,56,533,1002,53,63,64,65,1005',
'51,297,83,720,57,58,848,996,1014,61,888,59,60,62,258,259,66,67,610,1016',
'533,1017,,257,292,296,90,89,91,92,,,219,-289,-289,,,,,293,,-289,94,93',
'84,50,86,85,87,,88,95,96,,81,82,,328,,345,343,342,340,344,,,,534,611',
',,,337,,581,740,345,343,342,290,344,,214,,,52,,54,-289,,-289,,,,,347',
'323,,,,,,350,349,353,352,79,73,75,76,77,78,584,,,74,80,,,,299,,610,56',
'533,,53,63,64,65,,51,297,83,,57,58,,,,61,338,59,60,62,258,259,66,67',
',,,,,257,292,296,90,89,91,92,,,219,,,,,643,,41,,,94,93,84,50,86,85,87',
',88,95,96,,81,82,,38,39,227,231,236,237,238,233,235,243,244,239,240',
',,220,221,,,241,242,,210,,,214,,,52,,54,,,224,,230,40,226,225,222,223',
'234,232,228,218,229,,,,79,73,75,76,77,78,,,,74,80,,245,,-236,,,56,,',
'53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257',
'292,296,90,89,91,92,,,219,,,,,643,,41,,,94,93,84,50,86,85,87,,88,95',
'96,,81,82,,38,39,227,231,236,237,238,233,235,243,244,239,240,,,220,221',
',,241,242,,210,,,214,,,52,,54,,,224,,230,40,226,225,222,223,234,232',
'228,218,229,,,,79,73,75,76,77,78,-288,-288,,74,80,,245,,-288,,,56,,-560',
'53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257',
'292,296,90,89,91,92,,,219,,,,-288,,-288,41,,,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,227,231,236,237,238,233,235,243,244,239,240,,,220',
'221,,,241,242,,210,,,214,,,52,,54,,,224,,230,40,226,225,222,223,234',
'232,228,218,229,,,,79,73,75,76,77,78,,,,74,80,,245,,-236,,,56,,,53,63',
'64,65,,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90',
'89,91,92,,,17,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39',
'227,231,236,237,238,233,235,243,244,239,240,,,220,221,,,241,242,,210',
',,214,,,52,,54,,,224,,230,40,226,225,222,223,234,232,228,18,229,,,,79',
'73,75,76,77,78,-291,-291,,74,80,,245,815,-291,,,56,,,53,63,64,65,,51',
'37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,28,27,90,89,91,92',
',,219,,,,-291,,-291,41,,,94,93,84,50,86,85,87,262,88,95,96,,81,82,,38',
'39,227,231,236,237,238,233,235,243,244,239,240,,,220,221,,,241,242,',
'210,,,214,,,52,,54,,256,224,,230,40,226,225,222,223,234,232,228,218',
'229,,,,79,260,75,76,77,78,534,991,,74,80,,245,,992,,,56,,,53,63,64,65',
',51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89',
'91,92,,,219,,,,990,,604,41,,,94,93,84,50,86,85,87,262,88,95,96,,81,82',
',38,39,227,231,236,237,238,233,235,243,244,239,240,,,220,221,,,241,242',
',210,,,214,,,52,,54,,,224,,230,40,226,225,222,223,234,232,228,218,229',
',,,79,260,75,76,77,78,,,,74,80,,245,,,,,56,,,53,63,64,65,,51,37,83,',
'57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,',
',,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,227,231,236,237',
'238,233,235,243,244,239,240,,,220,221,,,241,242,,210,,,214,,,52,,54',
',,224,,230,40,226,225,222,223,234,232,228,18,229,,,,79,73,75,76,77,78',
',,,74,80,,245,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,84,50,86',
'85,87,,88,95,96,,81,82,,38,39,227,231,236,237,238,233,235,243,244,239',
'240,,,220,221,,,241,242,,210,,,214,,,52,,54,,,224,,230,40,226,225,222',
'223,234,232,228,18,229,,,,79,73,75,76,77,78,,,,74,80,,245,,,,,56,,,53',
'63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27',
'90,89,91,92,,,17,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,227,231,236,237,238,233,235,243,244,239,240,,,220,221,,,241,242,',
'210,,,214,,,52,,54,,,224,,230,40,226,225,222,223,234,232,228,18,229',
',,,79,73,75,76,77,78,,,,74,80,101,245,,,,100,56,,,53,63,64,65,,51,37',
'83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92',
',581,219,345,343,342,,344,,293,,,94,93,84,50,86,85,87,,88,95,96,,81',
'82,,328,,345,343,342,340,344,,,,,,584,,,337,,581,,345,343,342,365,344',
',30,227,,52,,54,,32,,,,,,347,,565,,,241,242,350,349,353,352,79,73,75',
'76,77,78,584,,224,74,80,,226,225,222,223,,56,,,53,63,64,65,,51,297,83',
',57,58,,,,61,338,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92',
',,219,,,,,,,293,,,94,93,84,50,86,85,370,,88,95,96,227,81,82,,328,,345',
'343,342,340,344,,,,,,,241,242,337,,,,376,,,371,,,214,,224,52,230,54',
'226,225,222,223,,,228,347,229,,,,,,350,349,353,352,79,73,75,76,77,78',
',,,74,80,,,,,,,56,,,53,-556,-556,-556,,-556,297,83,,-556,-556,,,,-556',
'338,-556,-556,-556,-556,-556,-556,-556,,-556,,,,-556,-556,-556,-556',
'-556,-556,-556,,,-556,,,,,,,-556,,,-556,-556,-556,-556,-556,-556,-556',
'-556,-556,-556,-556,,-556,-556,,-556,-556,227,231,236,237,238,233,235',
'243,244,239,240,,,220,221,,,241,242,,-556,,,-556,-556,,-556,,-556,,-556',
'224,-556,230,-556,226,225,222,223,234,232,228,-556,229,-556,,,-556,-556',
'-556,-556,-556,-556,,,,-556,-556,,245,,,,,-556,,,-556,-557,-557,-557',
',-557,-556,-556,,-557,-557,,,,-557,,-557,-557,-557,-557,-557,-557,-557',
',-557,,,,-557,-557,-557,-557,-557,-557,-557,,,-557,,,,,,,-557,,,-557',
'-557,-557,-557,-557,-557,-557,-557,-557,-557,-557,,-557,-557,,-557,-557',
'227,231,236,237,238,233,235,243,244,239,240,,,220,221,,,241,242,,-557',
',,-557,-557,,-557,,-557,,-557,224,-557,230,-557,226,225,222,223,234',
'232,228,-557,229,-557,,,-557,-557,-557,-557,-557,-557,,,,-557,-557,',
'245,,,,,-557,,,-557,63,64,65,8,51,-557,-557,,57,58,,,,61,,59,60,62,23',
'24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,6,9,94,93,84,50,86',
'85,87,,88,95,96,,81,82,,38,39,227,231,236,237,238,233,235,243,244,239',
'240,,,220,221,,,241,242,,36,,,30,,,52,,54,,32,224,,230,40,226,225,222',
'223,234,232,228,18,229,,,,79,73,75,76,77,78,,,,74,80,,245,,,,413,56',
',,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28',
'27,90,89,91,92,,,17,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82',
',38,39,227,231,236,237,238,233,235,243,244,239,240,,,220,221,,,241,242',
',210,,,214,,,52,,54,,,224,,230,40,226,225,222,223,234,232,228,18,229',
',,,79,73,75,76,77,78,,,,74,80,,245,,,,,56,,,53,63,64,65,,51,37,83,,57',
'58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,',
'41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,227,231,236,237,238',
'233,235,243,244,239,240,,,220,221,,,241,242,,210,,,214,,,52,,54,,,224',
',230,40,226,225,222,223,234,232,228,18,229,,,,79,73,75,76,77,78,,,,74',
'80,,245,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,23,24',
'66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,84,50,86,85,87',
',88,95,96,,81,82,,38,39,227,231,236,237,238,233,235,243,244,239,240',
',,220,221,,,241,242,,210,,,214,,,52,,54,,,224,,230,40,226,225,222,223',
'234,232,228,18,229,,,,79,73,75,76,77,78,,,,74,80,,245,,,,,56,,,53,63',
'64,65,,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90',
'89,91,92,,,17,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39',
'227,231,236,237,238,233,235,243,244,239,240,,,220,221,,,241,242,,210',
',,214,,,52,,54,,,224,,230,40,226,225,222,223,234,232,228,18,229,,,,79',
'73,75,76,77,78,,,,74,80,,245,,,,,56,,,53,63,64,65,8,51,37,83,,57,58',
',,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41',
',9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,227,231,236,237,238',
'233,235,243,244,239,240,,,220,221,,,241,242,,36,,,30,,,52,,54,,32,224',
',230,40,226,225,222,223,234,232,228,18,229,,,,79,73,75,76,77,78,,,,74',
'80,,245,,,,,56,,,53,63,64,65,8,51,37,83,,57,58,,,,61,,59,60,62,23,24',
'66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,6,9,94,93,84,50,86,85',
'87,,88,95,96,,81,82,,38,39,227,231,236,237,238,233,235,243,244,239,240',
',,220,221,,,241,242,,36,,,30,,,52,,54,,32,224,,230,40,226,225,222,223',
'234,232,228,18,229,,,,79,73,75,76,77,78,,,,74,80,,245,,,,,56,,,53,63',
'64,65,8,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90',
'89,91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,227,231,236,237,238,233,235,243,244,239,240,,,-580,-580,,,241,242',
',36,,,30,,,52,,54,,32,224,,230,40,226,225,222,223,234,232,228,18,229',
',,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58',
',,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,219,,,,,,,41',
',,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,227,231,236,237,238,233',
'235,243,244,239,240,,,-580,-580,,,241,242,,210,,,214,,,52,,54,,430,224',
',230,40,226,225,222,223,234,232,228,218,229,,,,79,73,75,76,77,78,,,',
'74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,23,24',
'66,67,,,,,,22,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87',
',88,95,96,,81,82,,38,39,227,-580,-580,-580,-580,233,235,,,-580,-580',
',,,,,,241,242,,210,,,214,,,52,,54,,430,224,,230,40,226,225,222,223,234',
'232,228,218,229,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65',
',51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91',
'92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,227,81,82,,38,39',
',,,,,,,,,,,241,242,,,,,,,,210,,,214,,224,52,230,54,226,225,222,223,',
'40,228,,229,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63',
'64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,28,27',
'90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,262,88,95,96,,81,82',
',38,39,227,,,,,,,,,,,,,,,,,241,242,,210,,,214,,,52,,54,,256,224,,230',
'40,226,225,222,223,,,228,218,229,,,,79,260,75,76,77,78,,,,74,80,,,,',
',,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,',
',,,257,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,262,88',
'95,96,,81,82,,38,39,227,,,,,,,,,,,,,,,,,241,242,,210,,,214,,,52,,54',
',256,224,,230,40,226,225,222,223,,,228,218,229,,,,79,260,75,76,77,78',
',,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,23',
'24,66,67,,,,,,22,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85',
'87,,88,95,96,,81,82,,38,39,227,-580,-580,-580,-580,233,235,,,-580,-580',
',,,,,,241,242,,210,,,214,,,52,,54,,,224,,230,40,226,225,222,223,234',
'232,228,218,229,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65',
',51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91',
'92,,,17,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,227',
'-580,-580,-580,-580,233,235,,,-580,-580,,,,,,,241,242,,210,,,214,,,52',
',54,,,224,,230,40,226,225,222,223,234,232,228,18,229,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60',
'62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,227,-580,-580,-580,-580,233,235,,,-580',
'-580,,,,,,,241,242,,210,,,214,,,52,,54,,,224,,230,40,226,225,222,223',
'234,232,228,18,229,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64',
'65,8,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89',
'91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39',
'227,-580,-580,-580,-580,233,235,,,-580,-580,,,,,,,241,242,,36,,,30,',
',52,,54,,32,224,,230,40,226,225,222,223,234,232,228,18,229,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,',
'59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93',
'84,50,86,85,87,,88,95,96,,81,82,,38,39,227,-580,-580,-580,-580,233,235',
',,-580,-580,,,,,,,241,242,,210,,,214,,467,52,,54,,,224,,230,40,226,225',
'222,223,234,232,228,18,229,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,',
'53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257',
'292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96',
',81,82,,38,39,227,231,236,237,238,233,235,,,239,240,,,,,,,241,242,,210',
',,214,,,52,,54,,,224,,230,40,226,225,222,223,234,232,228,218,229,,,',
'79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,',
',,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,',
',,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,227,231,236,237',
'238,233,235,243,,239,240,,,,,,,241,242,,210,,,214,,,52,,54,,,224,,230',
'40,226,225,222,223,234,232,228,218,229,,,,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67',
',,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,',
'88,95,96,227,81,82,,38,39,,,,,,,,,,,,241,242,,,,,,,,210,,,214,,224,52',
'230,54,226,225,222,223,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67',
',,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,',
'88,95,96,227,81,82,,38,39,,,,,,,,,,,,241,242,,,,,,,,210,,,214,,224,52',
'230,54,226,225,222,223,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67',
',,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,',
'88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40',
',,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51',
'37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91',
'92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,',
',,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59',
'60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94',
'93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,',
'214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,',
',56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,',
',,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,',
',,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51',
'37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91',
'92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,',
',,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59',
'60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94',
'93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,',
'214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,',
',56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,',
',,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,',
',,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51',
'37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91',
'92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,',
',,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59',
'60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94',
'93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,',
'214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,',
',56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,',
',,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,',
',,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51',
'37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91',
'92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,',
',,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59',
'60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94',
'93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,',
'214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,',
',56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,',
',,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,',
',,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51',
'37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91',
'92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,',
',,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59',
'60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94',
'93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,',
'214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,',
',56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,',
',,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,',
',,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51',
'37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91',
'92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,',
',,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59',
'60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94',
'93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,',
'214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,',
',56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,',
',,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,',
',,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51',
'37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91',
'92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,',
',,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59',
'60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94',
'93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,',
'214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,',
',56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,',
',,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,',
',,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51',
'37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91',
'92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,',
',,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59',
'60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94',
'93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,',
'214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,',
',56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,',
',,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,',
',,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51',
'37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,28,27,90,89,91,92',
',,219,,,,,,,41,,,94,93,84,50,86,85,87,262,88,95,96,,81,82,,38,39,,,',
',,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,256,,254,,40,,,,,,,,218,,,,,79',
'260,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,',
'61,,59,60,62,258,259,66,67,,,,,,257,28,27,90,89,91,92,,,219,,,,,,,41',
',,94,93,84,50,86,85,87,262,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,',
',,210,,,214,,,516,,54,,256,,254,,40,,,,,,,,218,,,,,79,260,75,76,77,78',
',,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258',
'259,66,67,,,,,,257,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86',
'85,87,262,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,520',
'52,,54,,256,,254,,40,,,,,,,,218,,,,,79,260,75,76,77,78,,,,74,80,,,,',
',,56,,,53,63,64,65,8,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,',
',,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95',
'96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,282,,,52,,54,,32,,,,40,,,',
',,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37',
'83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92',
',,219,,,,,,,293,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,328,,345,343',
'342,340,344,,,,,,,,,337,,,,,,,290,,,214,,,52,,54,,,,,,,,347,,,,,,,350',
'349,353,352,79,73,75,76,77,78,,,,74,80,,,,528,,,56,,,53,63,64,65,8,51',
'297,83,,57,58,,,,61,338,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91',
'92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,',
',,,,,,,,,,,,,,,,,,36,,,282,,,52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59',
'60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,293,,,94',
'93,84,50,86,85,87,,88,95,96,,81,82,,786,,345,343,342,340,344,,,,,,,',
',337,,,,,,,290,,,287,,,52,,54,,,,,,,,347,775,,,,,,350,349,353,352,79',
'73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,297,83,,57,58,,,',
'61,338,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,',
',,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,',
',,,,,210,,,214,548,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78',
',,,74,80,,,,,,,56,,,53,63,64,65,8,51,37,83,,57,58,,,,61,,59,60,62,23',
'24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,84,50,86',
'85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,54,',
'32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64',
'65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90',
'89,91,92,,,219,,,,,,,293,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,328',
',345,343,342,340,344,,,,,,,,,337,,,,,,,579,,,214,,,52,,54,,,,,,,,347',
',,,,,,350,349,353,352,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64',
'65,309,51,297,83,,57,58,,,,61,338,59,60,62,23,24,66,67,,,,,,22,28,27',
'90,89,91,92,,,17,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,18,,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,',
'59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93',
'84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214',
',,52,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,',
',53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257',
'292,296,90,89,91,92,,,219,,,,,,,293,,,94,93,84,50,86,85,370,,88,95,96',
',81,82,,786,,345,343,342,340,344,,,,,,,,,337,,,,,,,371,,,214,,,52,,54',
',,,,,,,347,,,,,,,350,349,353,352,79,73,75,76,77,78,,,,74,80,,,,,,,56',
',,53,63,64,65,,51,297,83,,57,58,,,,61,338,59,60,62,23,24,66,67,,,,,',
'22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,',
'18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,',
'57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219',
',,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,',
',,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78',
',,,74,80,,,,,,,56,,,53,-259,-259,-259,,-259,37,83,,-259,-259,,,,-259',
',-259,-259,-259,-259,-259,-259,-259,,,,,,-259,-259,-259,-259,-259,-259',
'-259,,,-259,,,,,,,-259,,,-259,-259,-259,-259,-259,-259,-259,-259,-259',
'-259,-259,,-259,-259,,-259,-259,,,,,,,,,,,,,,,,,,,,,-259,,,-259,269',
',-259,,-259,,-259,,-259,,-259,,,,,,,,-259,,,,,-259,-259,-259,-259,-259',
'-259,,,,-259,-259,,,,,,,-259,,,-259,-561,-561,-561,,-561,-259,-259,',
'-561,-561,,,,-561,,-561,-561,-561,-561,-561,-561,-561,,,,,,-561,-561',
'-561,-561,-561,-561,-561,,,-561,,,,,,,-561,,,-561,-561,-561,-561,-561',
'-561,-561,-561,-561,-561,-561,,-561,-561,,-561,-561,,,,,,,,,,,,,,,,',
',,,,-561,,,-561,-561,,-561,,-561,,-561,,-561,,-561,,,,,,,,-561,,,,,-561',
'-561,-561,-561,-561,-561,,,,-561,-561,,,,,,,-561,,,-561,-562,-562,-562',
',-562,-561,-561,,-562,-562,,,,-562,,-562,-562,-562,-562,-562,-562,-562',
',,,,,-562,-562,-562,-562,-562,-562,-562,,,-562,,,,,,,-562,,,-562,-562',
'-562,-562,-562,-562,-562,-562,-562,-562,-562,,-562,-562,,-562,-562,',
',,,,,,,,,,,,,,,,,,,-562,,,-562,-562,,-562,,-562,,-562,,-562,,-562,,',
',,,,,-562,,,,,-562,-562,-562,-562,-562,-562,,,,-562,-562,,,,,,,-562',
',,-562,-259,-259,-259,,-259,-562,-562,,-259,-259,,,,-259,,-259,-259',
'-259,-259,-259,-259,-259,,,,,,-259,-259,-259,-259,-259,-259,-259,,,-259',
',,,,,,-259,,,-259,-259,-259,-259,-259,-259,-259,-259,-259,-259,-259',
',-259,-259,,-259,-259,,,,,,,,,,,,,,,,,,,,,-259,,,-259,269,,-259,,-259',
',-259,,-259,,-259,,,,,,,,-259,,,,,-259,-259,-259,-259,-259,-259,,,,-259',
'-259,,,,,,,-259,,,-259,63,64,65,,51,-259,-259,,57,58,,,,61,,59,60,62',
'258,259,66,67,,,,,,257,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50',
'86,85,87,262,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,',
'52,,54,,256,,,,40,,,,,,,,218,,,,,79,260,75,76,77,78,,,,74,80,,,,,,,56',
',,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257',
'28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,262,88,95,96',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,256,,,,40,,,,',
',,,218,,,,,79,260,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37',
'83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92',
',,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,',
',,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60',
'62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93',
'84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214',
',,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56',
',,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257',
'292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,',
'218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83',
',57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,',
'219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,',
',,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62',
'258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84',
'50,86,85,87,262,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214',
',,52,,54,,676,,254,,40,,,,,,,,218,,,,,79,260,75,76,77,78,,,,74,80,,',
',,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67',
',,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,262',
'88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,254',
',40,,,,,,,,218,,,,,79,260,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65',
',51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89',
'91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,',
'59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93',
'84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214',
',694,52,,54,,,,254,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,',
',,56,,,53,63,64,65,8,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,',
',,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95',
'96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,,,,',
',,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,413,56,,,53,63,64,65,,51,37',
'83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92',
',,219,,,,,,,293,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,328,,345,343',
'342,340,344,,,,,,,,,337,,,,,,,290,,,287,,,52,,54,,,,,,,,347,,,,,,,350',
'349,353,352,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,297',
'83,,57,58,,,,61,338,59,60,62,258,259,66,67,,,,,,257,28,27,90,89,91,92',
',,219,,,,,,,41,,,94,93,84,50,86,85,87,262,88,95,96,,81,82,,38,39,,,',
',,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,256,,,,40,,,,,,,,218,,,,,79,260',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,',
'59,60,62,258,259,66,67,,,,,,257,28,27,90,89,91,92,,,219,,,,,,,41,,,94',
'93,84,50,86,85,87,262,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210',
',,214,,,52,,54,,256,,,,40,,,,,,,,218,,,,,79,260,75,76,77,78,,,,74,80',
',,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67',
',,,,,257,292,296,90,89,91,92,,,219,,,,,,,293,,,94,93,84,50,86,85,87',
',88,95,96,,81,82,,786,,345,343,342,340,344,,,,,,,,,337,,,,,,,290,,,287',
',,52,,54,,,,,,,,347,,,,,,,350,349,353,352,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,63,64,65,,51,297,83,,57,58,,,,61,338,59,60,62,258,259',
'66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85',
'87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,',
',,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64',
'65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90',
'89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79',
'73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61',
',59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41',
',,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210',
',,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,',
',,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,',
',,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,',
'18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,',
'57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219',
',,,,,,41,,,94,93,84,50,86,85,87,262,88,95,96,,81,82,,38,39,,,,,,,,,',
',,,,,,,,,,,210,,,214,,,52,,54,,676,,254,,40,,,,,,,,218,,,,,79,260,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59',
'60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94',
'93,84,50,86,85,87,262,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210',
',,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,260,75,76,77,78,,,,74,80,,',
',,,,56,,,53,63,64,65,8,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,',
',,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,',
',,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,8,51',
'37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,',
',17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,',
',,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62',
'258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,293,,,94,93,84',
'50,86,85,87,,88,95,96,,81,82,,786,,345,343,342,340,344,,,,,,,,,337,',
',,,,,579,,,214,,,52,,54,,,,,,,,347,775,,,,,,350,349,353,352,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,8,51,297,83,,57,58,,,,61,338',
'59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94',
'93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30',
',,52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56',
',,53,63,64,65,8,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22',
'28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95,96,',
'81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,,,,,,,,18',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,8,51,37,83,,57',
'58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7',
'41,,9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,',
',,,36,,,30,,,52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74',
'80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66',
'67,,,,,,257,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87',
'262,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,256',
',,,40,,,,,,,,218,,,,,79,260,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64',
'65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,28,27,90',
'89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,262,88,95,96,,81,82,',
'38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,256,,,,40,,,,,,,,218,',
',,,79,260,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57',
'58,,,,61,,59,60,62,258,259,66,67,,,,,,257,28,27,90,89,91,92,,,219,,',
',,,,41,,,94,93,84,50,86,85,87,262,88,95,96,,81,82,,38,39,,,,,,,,,,,',
',,,,,,,,,210,,,214,,,52,,54,,256,,,,40,,,,,,,,218,,,,,79,260,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,84,50,86',
'85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54',
',,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64',
'65,,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89',
'91,92,,,17,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,',
',,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,18,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59',
'60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94',
'93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,',
'214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,',
',56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,',
',,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,797,,,,40',
',,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51',
'37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,',
',219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,',
',,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86',
'85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54',
',,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64',
'65,,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89',
'91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,',
'59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,',
',94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210',
',,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,',
',,,56,,,53,63,64,65,8,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,',
',,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95',
'96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,,,,',
',,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83',
',57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,',
'219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,',
',,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62',
'258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84',
'50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,',
'52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,',
'53,63,64,65,8,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28',
'27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95,96,,81',
'82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,,,,,,,,18,',
',,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58',
',,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,',
',,,41,,,94,93,84,50,86,85,87,262,88,95,96,,81,82,,38,39,,,,,,,,,,,,',
',,,,,,,,210,,,214,,,52,,54,,676,,254,,40,,,,,,,,218,,,,,79,260,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60',
'62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93',
'84,50,86,85,87,262,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,',
'214,,,52,,54,,,,254,,40,,,,,,,,218,,,,,79,260,75,76,77,78,,,,74,80,',
',,,,,56,,,53,63,64,65,8,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67',
',,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,',
',,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,8,51',
'37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,',
',17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,',
',,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62',
'258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,293,,,94,93,84',
'50,86,85,87,,88,95,96,,81,82,,,,,,,,,,,,,,,,,,,,,,,,290,,,287,,,52,',
'54,,,,,,,,,,,,,,,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64',
'65,,51,297,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296',
'90,89,91,92,,,219,,,,,,,293,,,94,93,84,50,86,85,87,,88,95,96,,81,82',
',,,,,,,,,,,,,,,,,,,,,,,290,,,287,,,52,,54,,,,,,,,,,,,,,,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,297,83,,57,58,,,,61,,59',
'60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94',
'93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,',
'214,,,52,,54,,430,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,',
',,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67',
',,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,',
'88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,256,',
',,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65',
',51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91',
'92,,,17,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,',
',,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,63,64,65,8,51,37,83,,57,58,,,,61,,59,60',
'62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,84',
'50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52',
',54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
'63,64,65,8,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27',
'90,89,91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95,96,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,,,,,,,,18,,,,',
'79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,8,51,37,83,,57,58',
',,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41',
',9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,',
'36,,,30,,,52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67',
',,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,',
'88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40',
',,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,8,51',
'37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,',
',17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,',
',,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62',
'258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84',
'50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,',
'52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,',
'53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28',
'27,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,',
',79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58',
',,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,219,,,,,,,41',
',,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210',
',,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,',
',,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,',
',,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,',
',,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51',
'37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91',
'92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,',
',,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59',
'60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94',
'93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,',
'214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,',
',56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,',
',,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,256,,,,40',
',,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,8,51',
'37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,',
',17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,',
',,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,84,50,86',
'85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54',
',,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64',
'65,8,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89',
'91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,8,51,37,83,,57,58,,,,61,,59',
'60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93',
'84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,',
',52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56',
',,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257',
'292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,',
'218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83',
',57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,',
'219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,',
',,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62',
'258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84',
'50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,',
'52,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,',
'53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257',
'292,296,90,89,91,92,,,219,,,,,,,41,,,94,93,84,50,86,85,87,,88,95,96',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,,,40,,,,,,,',
'218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83',
',57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,',
'219,,,,,,,41,,,94,93,84,50,86,85,87,262,88,95,96,,81,82,,38,39,,,,,',
',,,,,,,,,,,,,,,210,,,214,,,52,,54,,,,254,,40,,,,,,,,218,,,,,79,260,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,8,51,37,83,,57,58,,,,61,,59',
'60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93',
'84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,',
',52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56',
',,53,63,64,65,,51,37,83,,57,58,,,,61,,59,60,62,258,259,66,67,,,,,,257',
'292,296,90,89,91,92,,,219,,,,,,,293,,,94,93,84,50,86,85,87,,88,95,96',
',81,82,,,,,,,,,,,,,,,,,,,,,,,,963,,,214,,,52,,54,,,,,,,,,,,,,,,,,,,79',
'73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,297,83,,57,58,,,',
'61,,59,60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,',
'41,,,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,',
',,210,,,214,,,52,,54,,676,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,',
'74,80,,,,,,,56,,,53,63,64,65,8,51,37,83,,57,58,,,,61,,59,60,62,23,24',
'66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85',
'87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,54,,32',
',,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65',
'8,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91',
'92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,',
',,,,,,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,,59',
'60,62,258,259,66,67,,,,,,257,292,296,90,89,91,92,,,219,,,,,,,41,,,94',
'93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210,,',
'214,,,52,,54,,676,,254,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,63,64,65,8,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67',
',,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,',
',,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,8,51',
'37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,',
',17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,',
',,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,63,64,65,8,51,37,83,,57,58,,,,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,54',
',32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,63',
'64,65,8,51,37,83,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90',
'89,91,92,,,17,,,,,,7,41,,9,94,93,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,54,,32,,,,40,,,,,,,,18,,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,63,64,65,,51,37,83,,57,58,,,,61,',
'59,60,62,258,259,66,67,,,,,,257,28,27,90,89,91,92,,,219,,,,,,,41,,,94',
'93,84,50,86,85,87,262,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,210',
',,214,,,52,,54,,256,,,,40,,,,,,,,218,,,,-563,79,260,75,76,77,78,-563',
'-563,-563,74,80,,-563,-563,,-563,,56,,,53,,,,-563,,37,83,,,,,,,,-563',
'-563,,-563,-563,-563,-563,-563,,,,,,,,,,,,,,,,,,,,,,-563,-563,-563,-563',
'-563,-563,-563,-563,-563,-563,-563,-563,-563,-563,-563,,,-563,-563,-563',
',654,,,,-563,,,,,,-563,,-563,,-563,-563,-563,-563,-563,-563,-563,,-563',
'-563,-563,,,,,,,,,,,,,-563,-563,,-88,,-563,,-288,-563,,-563,,,-97,-288',
'-288,-288,,,,-288,-288,,-288,,,,,,,,,,,,,,,,,,,,-288,-288,,-288,-288',
'-288,-288,-288,,,,,,,,,,,,,,,,,,,,,,-288,-288,-288,-288,-288,-288,-288',
'-288,-288,-288,-288,-288,-288,-288,-288,,,-288,-288,-288,,657,,,,-288',
',,,,,-288,,-288,,-288,-288,-288,-288,-288,-288,-288,,-288,,-288,,,,',
',,,,,,,,-288,-288,,-90,,-288,,-563,-288,,-288,,,-99,-563,-563,-563,',
',-563,-563,-563,,-563,,,,,,,,,-563,-563,-563,,,,,,,,,-563,-563,,-563',
'-563,-563,-563,-563,,,,,,,,,,,,,,,,,,,,,,-563,-563,-563,-563,-563,-563',
'-563,-563,-563,-563,-563,-563,-563,-563,-563,,,-563,-563,-563,,812,-563',
',,-563,,-563,,-563,,-563,,-563,,-563,-563,-563,-563,-563,-563,-563,',
'-563,-563,-563,,,,,,,,,,,,,-563,-563,-563,-563,,-563,,-288,-563,,-563',
',,-97,-288,-288,-288,,,-288,-288,-288,,-288,,,,,,,,,,-288,-288,,,,,',
',,,-288,-288,,-288,-288,-288,-288,-288,,,,,,,,,,,,,,,,,,,,,,-288,-288',
'-288,-288,-288,-288,-288,-288,-288,-288,-288,-288,-288,-288,-288,,,-288',
'-288,-288,,657,-288,,,-288,,-288,,-288,,-288,,-288,,-288,-288,-288,-288',
'-288,-288,-288,,-288,,-288,,,,,,,,,,,,,-288,-288,-288,-288,,-288,,-297',
'-288,,-288,,,-99,-297,-297,-297,,,-297,-297,-297,,-297,,,,,,,,,,-297',
'-297,,,,,,,,,-297,-297,,-297,-297,-297,-297,-297,,,,,,,,,,,,,,,,,,,',
',,-297,-297,-297,-297,-297,-297,-297,-297,-297,-297,-297,-297,-297,-297',
'-297,,,-297,-297,-297,,,-297,,278,-297,,-297,,-297,,-297,,-297,,-297',
'-297,-297,-297,-297,-297,-297,,-297,,-297,,,,,,,,,,,,,-297,-297,-297',
'-297,-282,-297,,,-297,,-297,-282,-282,-282,,,-282,-282,-282,,-282,,',
',,,,,,,-282,-282,-282,,,,,,,,-282,-282,,-282,-282,-282,-282,-282,,,',
',,,,,,,,,,,,,,,,,,-282,-282,-282,-282,-282,-282,-282,-282,-282,-282',
'-282,-282,-282,-282,-282,,,-282,-282,-282,,,-282,,,-282,,-282,,-282',
',-282,,-282,,-282,-282,-282,-282,-282,-282,-282,,-282,,-282,,,,,,,,',
',,,,-282,-282,-282,-282,-579,-282,,-282,-282,,-282,-579,-579,-579,,',
'-579,-579,-579,,-579,,,,,,,,,,-579,,,,,,,,,,-579,-579,,-579,-579,-579',
'-579,-579,,,,,,,,,,,,-579,,,,,,,-579,-579,-579,,,-579,-579,-579,,-579',
',,,,-579,-579,,,,-579,,,-579,,,,,269,-579,-579,-579,,-579,-579,-579',
'-579,-579,,,,,,,,,,,,-579,,,,,,,,,,,,,-579,,-579,,,-579,,,-579,-579',
',-579,,,,,-579,,-579,-579,-579,269,-579,-579,-579,-579,,-579,,,,,,,',
',,-579,,,,,-579,,,,,-579,-579,,-579,-579,-579,-579,-579,-579,,-579,',
',-579,445,449,,,447,,,,,,,,,142,143,139,121,122,123,130,127,129,,,124',
'125,-579,-579,,,144,145,131,132,-579,,,,,269,-579,,,,,136,135,,120,141',
'138,137,133,134,128,126,118,140,119,,-579,146,,,,,,,,,,,,-579,,-579',
',,-579,156,167,157,180,153,173,163,162,188,191,178,161,160,155,181,189',
'190,165,154,168,172,174,166,159,,,,175,182,177,176,169,179,164,152,171',
'170,183,184,185,186,187,151,158,149,150,147,148,111,113,110,,112,,,',
',,,,,142,143,139,121,122,123,130,127,129,,,124,125,,,,,144,145,131,132',
',,,,,,,,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119,,,146',
'192,,,,,,,,,,80,156,167,157,180,153,173,163,162,188,191,178,161,160',
'155,181,189,190,165,154,168,172,174,166,159,,,,175,182,177,176,169,179',
'164,152,171,170,183,184,185,186,187,151,158,149,150,147,148,111,113',
',,112,,,,,,,,,142,143,139,121,122,123,130,127,129,,,124,125,,,,,144',
'145,131,132,,,,,,,,,,,,136,135,,120,141,138,137,133,134,128,126,118',
'140,119,,,146,192,,,,,,,,,,80,156,167,157,180,153,173,163,162,188,191',
'178,161,160,155,181,189,190,165,154,168,172,174,166,159,,,,175,182,177',
'176,169,179,164,152,171,170,183,184,185,186,187,151,158,149,150,147',
'148,111,113,,,112,,,,,,,,,142,143,139,121,122,123,130,127,129,,,124',
'125,,,,,144,145,131,132,,,,,,,,,,,,136,135,,120,141,138,137,133,134',
'128,126,118,140,119,,,146,192,,,,,,,,,,80,156,167,157,180,153,173,163',
'162,188,191,178,161,160,155,181,189,190,165,154,168,172,174,166,159',
',,,175,182,177,176,169,179,164,152,171,170,183,184,185,186,187,151,158',
'149,150,147,148,111,113,,,112,,,,,,,,,142,143,139,121,122,123,130,127',
'129,,,124,125,,,,,144,145,131,132,,,,,,,,,,,,136,135,,120,141,138,137',
'133,134,128,126,118,140,119,,,146,192,,,,,,,,,,80,156,167,157,180,153',
'173,163,162,188,191,178,161,160,155,181,189,190,165,154,168,172,174',
'166,159,,,,175,182,177,385,384,386,383,152,171,170,183,184,185,186,187',
'151,158,149,150,381,382,379,113,86,85,380,,88,,,,,,,142,143,139,121',
'122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,390,,,,,,136',
'135,,120,141,138,137,133,134,128,126,118,140,119,,,146,156,167,157,180',
'153,173,163,162,188,191,178,161,160,155,181,189,190,165,154,168,172',
'174,166,159,,,,175,182,177,176,169,179,164,152,171,170,183,184,185,186',
'187,151,158,149,150,147,148,111,113,407,406,112,,408,,,,,,,142,143,139',
'121,122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,,,136',
'135,,120,141,138,137,133,134,128,126,118,140,119,,,146,156,167,157,180',
'153,173,163,162,188,191,178,161,160,155,181,189,190,165,154,168,172',
'174,166,159,,,,175,182,177,176,169,179,164,152,171,170,183,184,185,186',
'187,151,158,149,150,147,148,111,113,407,406,112,,408,,,,,,,142,143,139',
'121,122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,,,136',
'135,,120,141,138,137,133,134,128,126,118,140,119,,,146,156,167,157,180',
'153,173,163,162,188,191,178,161,160,155,181,189,190,165,154,168,172',
'174,166,159,,,,175,182,177,176,169,179,164,152,171,170,183,184,185,186',
'187,151,158,149,150,147,148,111,113,,,112,,,,,,,,,142,143,139,121,122',
'123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,,,136,135,,120',
'141,138,137,133,134,128,126,118,140,119,439,443,146,,440,,,,,,,,,142',
'143,139,121,122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,269',
',,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119,452,443,146',
',453,,,,,,,,,142,143,139,121,122,123,130,127,129,,,124,125,,,,,144,145',
'131,132,,,,,,,,,,,,136,135,,120,141,138,137,133,134,128,126,118,140',
'119,452,443,146,,453,,,,,,,,,142,143,139,121,122,123,130,127,129,,,124',
'125,,,,,144,145,131,132,,,,,,,,,,,,136,135,,120,141,138,137,133,134',
'128,126,118,140,119,452,443,146,,453,,,,,,,,,142,143,139,121,122,123',
'130,127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,,,136,135,,120,141',
'138,137,133,134,128,126,118,140,119,452,443,146,,453,,,,,,,,,142,143',
'139,121,122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,',
',136,135,,120,141,138,137,133,134,128,126,118,140,119,660,443,146,,661',
',,,,,,,,142,143,139,121,122,123,130,127,129,,,124,125,,,,,144,145,131',
'132,,,,,,269,,,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119',
'662,449,146,,663,,,,,,,,,142,143,139,121,122,123,130,127,129,,,124,125',
',,,,144,145,131,132,,,,,,,,,,,,136,135,,120,141,138,137,133,134,128',
'126,118,140,119,705,443,146,,706,,,,,,,,,142,143,139,121,122,123,130',
'127,129,,,124,125,,,,,144,145,131,132,,,,,,269,,,,,,136,135,,120,141',
'138,137,133,134,128,126,118,140,119,708,449,146,,709,,,,,,,,,142,143',
'139,121,122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,',
',136,135,,120,141,138,137,133,134,128,126,118,140,119,452,443,146,,453',
',,,,,,,,142,143,139,121,122,123,130,127,129,,,124,125,,,,,144,145,131',
'132,,,,,,,,,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119',
'660,443,146,,661,,,,,,,,,142,143,139,121,122,123,130,127,129,,,124,125',
',,,,144,145,131,132,,,,,,269,,,,,,136,135,,120,141,138,137,133,134,128',
'126,118,140,119,662,449,146,,663,,,,,,,,,142,143,139,121,122,123,130',
'127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,,,136,135,,120,141,138',
'137,133,134,128,126,118,140,119,759,443,146,,760,,,,,,,,,142,143,139',
'121,122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,269,,,,,',
'136,135,,120,141,138,137,133,134,128,126,118,140,119,761,449,146,,762',
',,,,,,,,142,143,139,121,122,123,130,127,129,,,124,125,,,,,144,145,131',
'132,,,,,,,,,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119',
'767,449,146,,765,,,,,,,,,142,143,139,121,122,123,130,127,129,,,124,125',
',,,,144,145,131,132,,,,,,,,,,,,136,135,,120,141,138,137,133,134,128',
'126,118,140,119,452,443,146,,453,,,,,,,,,142,143,139,121,122,123,130',
'127,129,,,124,125,,,,,144,145,131,132,,,,,,269,,,,,,136,135,,120,141',
'138,137,133,134,128,126,118,140,119,767,449,146,,856,,,,,,,,,142,143',
'139,121,122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,',
',136,135,,120,141,138,137,133,134,128,126,118,140,119,1008,443,146,',
'1009,,,,,,,,,142,143,139,121,122,123,130,127,129,,,124,125,,,,,144,145',
'131,132,,,,,,269,,,,,,136,135,,120,141,138,137,133,134,128,126,118,140',
'119,1010,449,146,,1011,,,,,,,,,142,143,139,121,122,123,130,127,129,',
',124,125,,,,,144,145,131,132,,,,,,,,,,,,136,135,,120,141,138,137,133',
'134,128,126,118,140,119,,,146' ]
        racc_action_table = arr = ::Array.new(25592, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'0,0,0,0,0,356,26,322,0,0,55,294,357,0,1,0,0,0,0,0,0,0,363,209,366,6',
'401,0,0,0,0,0,0,0,314,211,0,314,494,507,605,288,0,0,0,0,0,0,0,0,0,0',
'0,759,0,0,0,868,0,0,9,0,0,291,760,700,517,622,622,375,26,494,507,209',
'869,294,315,3,10,315,466,466,3,0,920,211,0,401,930,0,26,0,961,0,55,294',
'964,0,71,517,993,700,718,718,761,0,71,288,1008,322,0,0,0,0,0,0,356,11',
'356,0,0,356,1009,357,363,357,366,0,357,291,0,17,17,17,466,17,0,0,12',
'17,17,1017,605,288,17,762,17,17,17,17,17,17,17,288,622,759,718,20,17',
'17,17,17,17,17,17,291,760,17,868,761,868,868,375,868,17,291,869,17,17',
'17,17,17,17,17,462,17,17,17,1010,17,17,375,17,17,535,920,375,920,34',
'930,920,930,36,961,930,961,761,964,961,964,762,993,964,993,17,41,993',
'17,17,1008,17,1008,17,1011,1008,379,502,77,17,595,596,705,379,1009,462',
'1009,17,318,1009,518,318,17,17,17,17,17,17,762,772,772,17,17,1017,706',
'1017,871,831,1017,17,78,535,17,18,18,18,1010,18,17,17,279,18,18,518',
'97,279,18,708,18,18,18,18,18,18,18,709,502,502,502,647,18,18,18,18,18',
'18,18,535,705,18,1010,1011,1010,502,633,1010,18,535,193,18,18,18,18',
'18,18,18,210,18,18,18,706,18,18,831,18,18,470,595,596,595,596,212,595',
'596,705,1011,772,1011,570,647,1011,772,708,708,705,392,18,213,570,18',
'709,709,18,871,18,871,706,470,871,831,18,470,470,633,633,361,706,361',
'18,831,660,219,633,18,18,18,18,18,18,708,570,570,18,18,251,661,886,709',
'813,708,18,886,252,18,22,22,22,709,22,18,18,886,22,22,392,392,392,22',
'814,22,22,22,22,22,22,22,723,570,881,723,660,22,22,22,22,22,22,22,881',
'380,22,886,886,886,886,661,380,22,813,255,22,22,22,22,22,22,22,22,22',
'22,22,955,22,22,955,22,22,381,814,394,881,881,14,576,381,576,576,576',
'576,576,886,25,25,268,382,383,398,22,576,25,22,382,383,22,977,22,977',
'22,384,22,859,22,859,859,859,384,859,881,360,22,281,576,14,360,22,22',
'22,22,22,22,576,576,14,22,22,283,385,982,394,394,394,22,982,385,22,23',
'23,23,284,23,22,22,982,23,23,398,398,398,23,285,23,23,23,23,23,23,23',
'576,290,888,15,15,23,23,23,23,23,23,23,888,292,23,982,982,982,982,859',
'396,23,293,396,23,23,23,23,23,23,23,23,23,23,23,386,23,23,615,23,23',
'403,386,615,888,888,35,846,388,846,846,846,846,846,982,388,37,37,770',
'296,776,23,846,770,23,776,301,23,298,23,302,23,110,23,303,23,306,110',
'110,396,396,888,313,23,316,846,35,317,23,23,23,23,23,23,846,846,35,23',
'23,319,403,403,403,439,327,23,301,328,23,24,24,24,329,24,23,23,301,24',
'24,83,83,330,24,332,24,24,24,24,24,24,24,846,297,297,333,440,24,24,24',
'24,24,24,24,439,339,24,13,13,351,646,311,311,24,439,13,24,24,24,24,24',
'24,24,24,24,24,24,354,24,24,362,24,24,355,355,365,440,471,367,848,371',
'848,848,848,848,848,440,573,573,397,646,746,746,24,848,400,24,489,419',
'24,646,24,13,24,13,24,425,24,471,431,42,42,471,471,433,24,437,848,42',
'438,24,24,24,24,24,24,848,848,489,24,24,446,489,489,489,489,472,24,997',
'997,24,27,27,27,473,27,24,24,474,27,27,475,509,512,27,513,27,27,27,27',
'27,27,27,848,519,42,523,42,27,27,27,27,27,27,27,524,527,27,208,208,529',
'536,540,549,27,550,208,27,27,27,27,27,27,27,27,27,27,27,551,27,27,564',
'27,27,579,347,582,347,347,347,853,347,853,853,853,853,853,587,586,587',
'587,587,591,587,27,853,597,27,27,598,27,637,27,208,27,208,27,644,27',
'650,655,289,289,347,658,664,27,665,853,289,347,27,27,27,27,27,27,853',
'853,673,27,27,5,5,5,5,5,675,27,688,692,27,30,30,30,30,30,27,27,695,30',
'30,702,704,707,30,710,30,30,30,30,30,30,30,853,711,289,712,289,30,30',
'30,30,30,30,30,790,790,30,713,790,790,790,716,30,30,717,30,30,30,30',
'30,30,30,30,719,30,30,30,722,30,30,725,30,30,726,584,730,584,584,584',
'967,584,967,967,967,967,967,280,280,280,280,280,731,733,30,967,736,30',
'490,737,30,739,30,743,30,748,754,756,30,758,763,304,304,584,767,768',
'30,779,967,304,584,30,30,30,30,30,30,967,967,490,30,30,780,490,490,490',
'490,782,30,783,784,30,31,31,31,786,31,30,30,789,31,31,370,796,816,31',
'817,31,31,31,31,31,31,31,967,818,304,819,304,31,31,31,31,31,31,31,823',
'744,31,744,744,744,825,744,828,31,829,830,31,31,31,31,31,31,31,835,31',
'31,31,838,31,31,839,370,370,856,860,863,873,364,364,370,876,373,373',
'744,370,364,877,878,898,373,744,899,908,31,909,913,31,923,924,31,925',
'31,926,31,370,927,932,933,578,578,699,699,699,699,699,941,578,943,945',
'946,31,31,31,31,31,31,370,947,370,31,31,948,364,963,364,972,373,31,373',
'979,31,32,32,32,988,32,31,31,989,32,32,994,995,1001,32,1003,32,32,32',
'32,32,32,32,578,1004,578,1007,,32,32,32,32,32,32,32,,,32,607,607,,,',
',32,,607,32,32,32,32,32,32,32,,32,32,32,,32,32,,56,,56,56,56,56,56,',
',,732,732,,,,56,,928,732,928,928,928,32,928,,32,,,32,,32,607,,607,,',
',,56,56,,,,,,56,56,56,56,32,32,32,32,32,32,928,,,32,32,,,,32,,732,32',
'732,,32,38,38,38,,38,32,32,,38,38,,,,38,56,38,38,38,38,38,38,38,,,,',
',38,38,38,38,38,38,38,,,38,,,,,428,,38,,,38,38,38,38,38,38,38,,38,38',
'38,,38,38,,38,38,428,428,428,428,428,428,428,428,428,428,428,,,428,428',
',,428,428,,38,,,38,,,38,,38,,,428,,428,38,428,428,428,428,428,428,428',
'38,428,,,,38,38,38,38,38,38,,,,38,38,,428,,428,,,38,,,38,39,39,39,,39',
'38,38,,39,39,,,,39,,39,39,39,39,39,39,39,,,,,,39,39,39,39,39,39,39,',
',39,,,,,666,,39,,,39,39,39,39,39,39,39,,39,39,39,,39,39,,39,39,666,666',
'666,666,666,666,666,666,666,666,666,,,666,666,,,666,666,,39,,,39,,,39',
',39,,,666,,666,39,666,666,666,666,666,666,666,39,666,,,,39,39,39,39',
'39,39,765,765,,39,39,,666,,765,,,39,,765,39,40,40,40,,40,39,39,,40,40',
',,,40,,40,40,40,40,40,40,40,,,,,,40,40,40,40,40,40,40,,,40,,,,765,,765',
'40,,,40,40,40,40,40,40,40,,40,40,40,,40,40,,40,40,691,691,691,691,691',
'691,691,691,691,691,691,,,691,691,,,691,691,,40,,,40,,,40,,40,,,691',
',691,40,691,691,691,691,691,691,691,40,691,,,,40,40,40,40,40,40,,,,40',
'40,,691,,691,,,40,,,40,52,52,52,,52,40,40,,52,52,,,,52,,52,52,52,52',
'52,52,52,,,,,,52,52,52,52,52,52,52,,,52,,,,,,,52,,,52,52,52,52,52,52',
'52,,52,52,52,,52,52,,52,52,668,668,668,668,668,668,668,668,668,668,668',
',,668,668,,,668,668,,52,,,52,,,52,,52,,,668,,668,52,668,668,668,668',
'668,668,668,52,668,,,,52,52,52,52,52,52,870,870,,52,52,,668,668,870',
',,52,,,52,53,53,53,,53,52,52,,53,53,,,,53,,53,53,53,53,53,53,53,,,,',
',53,53,53,53,53,53,53,,,53,,,,870,,870,53,,,53,53,53,53,53,53,53,53',
'53,53,53,,53,53,,53,53,19,19,19,19,19,19,19,19,19,19,19,,,19,19,,,19',
'19,,53,,,53,,,53,,53,,53,19,,19,53,19,19,19,19,19,19,19,53,19,,,,53',
'53,53,53,53,53,962,962,,53,53,,19,,962,,,53,,,53,54,54,54,,54,53,53',
',54,54,,,,54,,54,54,54,54,54,54,54,,,,,,54,54,54,54,54,54,54,,,54,,',
',962,,962,54,,,54,54,54,54,54,54,54,54,54,54,54,,54,54,,54,54,249,249',
'249,249,249,249,249,249,249,249,249,,,249,249,,,249,249,,54,,,54,,,54',
',54,,,249,,249,54,249,249,249,249,249,249,249,54,249,,,,54,54,54,54',
'54,54,,,,54,54,,249,,,,,54,,,54,57,57,57,,57,54,54,,57,57,,,,57,,57',
'57,57,57,57,57,57,,,,,,57,57,57,57,57,57,57,,,57,,,,,,,57,,,57,57,57',
'57,57,57,57,,57,57,57,,57,57,,57,57,436,436,436,436,436,436,436,436',
'436,436,436,,,436,436,,,436,436,,57,,,57,,,57,,57,,,436,,436,57,436',
'436,436,436,436,436,436,57,436,,,,57,57,57,57,57,57,,,,57,57,,436,,',
',,57,,,57,58,58,58,,58,57,57,,58,58,,,,58,,58,58,58,58,58,58,58,,,,',
',58,58,58,58,58,58,58,,,58,,,,,,,58,,,58,58,58,58,58,58,58,,58,58,58',
',58,58,,58,58,455,455,455,455,455,455,455,455,455,455,455,,,455,455',
',,455,455,,58,,,58,,,58,,58,,,455,,455,58,455,455,455,455,455,455,455',
'58,455,,,,58,58,58,58,58,58,,,,58,58,,455,,,,,58,,,58,61,61,61,,61,58',
'58,,61,61,,,,61,,61,61,61,61,61,61,61,,,,,,61,61,61,61,61,61,61,,,61',
',,,,,,61,,,61,61,61,61,61,61,61,,61,61,61,,61,61,,61,61,547,547,547',
'547,547,547,547,547,547,547,547,,,547,547,,,547,547,,61,,,61,,,61,,61',
',,547,,547,61,547,547,547,547,547,547,547,61,547,,,,61,61,61,61,61,61',
',,,61,61,61,547,,,,61,61,,,61,62,62,62,,62,61,61,,62,62,,,,62,,62,62',
'62,62,62,62,62,,,,,,62,62,62,62,62,62,62,,971,62,971,971,971,,971,,62',
',,62,62,62,62,62,62,62,,62,62,62,,62,62,,323,,323,323,323,323,323,,',
',,,971,,,323,,996,,996,996,996,62,996,,62,478,,62,,62,,62,,,,,,323,',
'323,,,478,478,323,323,323,323,62,62,62,62,62,62,996,,478,62,62,,478',
'478,478,478,,62,,,62,63,63,63,,63,62,62,,63,63,,,,63,323,63,63,63,63',
'63,63,63,,,,,,63,63,63,63,63,63,63,,,63,,,,,,,63,,,63,63,63,63,63,63',
'63,,63,63,63,480,63,63,,566,,566,566,566,566,566,,,,,,,480,480,566,',
',,63,,,63,,,63,,480,63,480,63,480,480,480,480,,,480,566,480,,,,,,566',
'566,566,566,63,63,63,63,63,63,,,,63,63,,,,,,,63,,,63,84,84,84,,84,63',
'63,,84,84,,,,84,566,84,84,84,84,84,84,84,,84,,,,84,84,84,84,84,84,84',
',,84,,,,,,,84,,,84,84,84,84,84,84,84,84,84,84,84,,84,84,,84,84,715,715',
'715,715,715,715,715,715,715,715,715,,,715,715,,,715,715,,84,,,84,84',
',84,,84,,84,715,84,715,84,715,715,715,715,715,715,715,84,715,84,,,84',
'84,84,84,84,84,,,,84,84,,715,,,,,84,,,84,87,87,87,,87,84,84,,87,87,',
',,87,,87,87,87,87,87,87,87,,87,,,,87,87,87,87,87,87,87,,,87,,,,,,,87',
',,87,87,87,87,87,87,87,87,87,87,87,,87,87,,87,87,795,795,795,795,795',
'795,795,795,795,795,795,,,795,795,,,795,795,,87,,,87,87,,87,,87,,87',
'795,87,795,87,795,795,795,795,795,795,795,87,795,87,,,87,87,87,87,87',
'87,,,,87,87,,795,,,,,87,,,87,99,99,99,99,99,87,87,,99,99,,,,99,,99,99',
'99,99,99,99,99,,,,,,99,99,99,99,99,99,99,,,99,,,,,,99,99,99,99,99,99',
'99,99,99,99,99,,99,99,99,,99,99,,99,99,801,801,801,801,801,801,801,801',
'801,801,801,,,801,801,,,801,801,,99,,,99,,,99,,99,,99,801,,801,99,801',
'801,801,801,801,801,801,99,801,,,,99,99,99,99,99,99,,,,99,99,,801,,',
',99,99,,,99,103,103,103,,103,99,99,,103,103,,,,103,,103,103,103,103',
'103,103,103,,,,,,103,103,103,103,103,103,103,,,103,,,,,,,103,,,103,103',
'103,103,103,103,103,,103,103,103,,103,103,,103,103,803,803,803,803,803',
'803,803,803,803,803,803,,,803,803,,,803,803,,103,,,103,,,103,,103,,',
'803,,803,103,803,803,803,803,803,803,803,103,803,,,,103,103,103,103',
'103,103,,,,103,103,,803,,,,,103,,,103,104,104,104,,104,103,103,,104',
'104,,,,104,,104,104,104,104,104,104,104,,,,,,104,104,104,104,104,104',
'104,,,104,,,,,,,104,,,104,104,104,104,104,104,104,,104,104,104,,104',
'104,,104,104,806,806,806,806,806,806,806,806,806,806,806,,,806,806,',
',806,806,,104,,,104,,,104,,104,,,806,,806,104,806,806,806,806,806,806',
'806,104,806,,,,104,104,104,104,104,104,,,,104,104,,806,,,,,104,,,104',
'105,105,105,,105,104,104,,105,105,,,,105,,105,105,105,105,105,105,105',
',,,,,105,105,105,105,105,105,105,,,105,,,,,,,105,,,105,105,105,105,105',
'105,105,,105,105,105,,105,105,,105,105,808,808,808,808,808,808,808,808',
'808,808,808,,,808,808,,,808,808,,105,,,105,,,105,,105,,,808,,808,105',
'808,808,808,808,808,808,808,105,808,,,,105,105,105,105,105,105,,,,105',
'105,,808,,,,,105,,,105,106,106,106,,106,105,105,,106,106,,,,106,,106',
'106,106,106,106,106,106,,,,,,106,106,106,106,106,106,106,,,106,,,,,',
',106,,,106,106,106,106,106,106,106,,106,106,106,,106,106,,106,106,901',
'901,901,901,901,901,901,901,901,901,901,,,901,901,,,901,901,,106,,,106',
',,106,,106,,,901,,901,106,901,901,901,901,901,901,901,106,901,,,,106',
'106,106,106,106,106,,,,106,106,,901,,,,,106,,,106,107,107,107,107,107',
'106,106,,107,107,,,,107,,107,107,107,107,107,107,107,,,,,,107,107,107',
'107,107,107,107,,,107,,,,,,107,107,,107,107,107,107,107,107,107,107',
',107,107,107,,107,107,,107,107,903,903,903,903,903,903,903,903,903,903',
'903,,,903,903,,,903,903,,107,,,107,,,107,,107,,107,903,,903,107,903',
'903,903,903,903,903,903,107,903,,,,107,107,107,107,107,107,,,,107,107',
',903,,,,,107,,,107,108,108,108,108,108,107,107,,108,108,,,,108,,108',
'108,108,108,108,108,108,,,,,,108,108,108,108,108,108,108,,,108,,,,,',
'108,108,108,108,108,108,108,108,108,108,108,,108,108,108,,108,108,,108',
'108,953,953,953,953,953,953,953,953,953,953,953,,,953,953,,,953,953',
',108,,,108,,,108,,108,,108,953,,953,108,953,953,953,953,953,953,953',
'108,953,,,,108,108,108,108,108,108,,,,108,108,,953,,,,,108,,,108,195',
'195,195,195,195,108,108,,195,195,,,,195,,195,195,195,195,195,195,195',
',,,,,195,195,195,195,195,195,195,,,195,,,,,,195,195,,195,195,195,195',
'195,195,195,195,,195,195,195,,195,195,,195,195,468,468,468,468,468,468',
'468,468,468,468,468,,,468,468,,,468,468,,195,,,195,,,195,,195,,195,468',
',468,195,468,468,468,468,468,468,468,195,468,,,,195,195,195,195,195',
'195,,,,195,195,,,,,,,195,,,195,196,196,196,,196,195,195,,196,196,,,',
'196,,196,196,196,196,196,196,196,,,,,,196,196,196,196,196,196,196,,',
'196,,,,,,,196,,,196,196,196,196,196,196,196,,196,196,196,,196,196,,196',
'196,469,469,469,469,469,469,469,469,469,469,469,,,469,469,,,469,469',
',196,,,196,,,196,,196,,196,469,,469,196,469,469,469,469,469,469,469',
'196,469,,,,196,196,196,196,196,196,,,,196,196,,,,,,,196,,,196,197,197',
'197,,197,196,196,,197,197,,,,197,,197,197,197,197,197,197,197,,,,,,197',
'197,197,197,197,197,197,,,197,,,,,,,197,,,197,197,197,197,197,197,197',
',197,197,197,,197,197,,197,197,479,479,479,479,479,479,479,,,479,479',
',,,,,,479,479,,197,,,197,,,197,,197,,197,479,,479,197,479,479,479,479',
'479,479,479,197,479,,,,197,197,197,197,197,197,,,,197,197,,,,,,,197',
',,197,198,198,198,,198,197,197,,198,198,,,,198,,198,198,198,198,198',
'198,198,,,,,,198,198,198,198,198,198,198,,,198,,,,,,,198,,,198,198,198',
'198,198,198,198,,198,198,198,481,198,198,,198,198,,,,,,,,,,,,481,481',
',,,,,,,198,,,198,,481,198,481,198,481,481,481,481,,198,481,,481,,,,',
'198,,,,,198,198,198,198,198,198,,,,198,198,,,,,,,198,,,198,199,199,199',
',199,198,198,,199,199,,,,199,,199,199,199,199,199,199,199,,,,,,199,199',
'199,199,199,199,199,,,199,,,,,,,199,,,199,199,199,199,199,199,199,199',
'199,199,199,,199,199,,199,199,482,,,,,,,,,,,,,,,,,482,482,,199,,,199',
',,199,,199,,199,482,,482,199,482,482,482,482,,,482,199,482,,,,199,199',
'199,199,199,199,,,,199,199,,,,,,,199,,,199,200,200,200,,200,199,199',
',200,200,,,,200,,200,200,200,200,200,200,200,,,,,,200,200,200,200,200',
'200,200,,,200,,,,,,,200,,,200,200,200,200,200,200,200,200,200,200,200',
',200,200,,200,200,483,,,,,,,,,,,,,,,,,483,483,,200,,,200,,,200,,200',
',200,483,,483,200,483,483,483,483,,,483,200,483,,,,200,200,200,200,200',
'200,,,,200,200,,,,,,,200,,,200,204,204,204,,204,200,200,,204,204,,,',
'204,,204,204,204,204,204,204,204,,,,,,204,204,204,204,204,204,204,,',
'204,,,,,,,204,,,204,204,204,204,204,204,204,,204,204,204,,204,204,,204',
'204,484,484,484,484,484,484,484,,,484,484,,,,,,,484,484,,204,,,204,',
',204,,204,,,484,,484,204,484,484,484,484,484,484,484,204,484,,,,204',
'204,204,204,204,204,,,,204,204,,,,,,,204,,,204,205,205,205,,205,204',
'204,,205,205,,,,205,,205,205,205,205,205,205,205,,,,,,205,205,205,205',
'205,205,205,,,205,,,,,,,205,,,205,205,205,205,205,205,205,,205,205,205',
',205,205,,205,205,485,485,485,485,485,485,485,,,485,485,,,,,,,485,485',
',205,,,205,,,205,,205,,,485,,485,205,485,485,485,485,485,485,485,205',
'485,,,,205,205,205,205,205,205,,,,205,205,,,,,,,205,,,205,206,206,206',
',206,205,205,,206,206,,,,206,,206,206,206,206,206,206,206,,,,,,206,206',
'206,206,206,206,206,,,206,,,,,,,206,,,206,206,206,206,206,206,206,,206',
'206,206,,206,206,,206,206,486,486,486,486,486,486,486,,,486,486,,,,',
',,486,486,,206,,,206,,,206,,206,,,486,,486,206,486,486,486,486,486,486',
'486,206,486,,,,206,206,206,206,206,206,,,,206,206,,,,,,,206,,,206,214',
'214,214,214,214,206,206,,214,214,,,,214,,214,214,214,214,214,214,214',
',,,,,214,214,214,214,214,214,214,,,214,,,,,,214,214,,214,214,214,214',
'214,214,214,214,,214,214,214,,214,214,,214,214,487,487,487,487,487,487',
'487,,,487,487,,,,,,,487,487,,214,,,214,,,214,,214,,214,487,,487,214',
'487,487,487,487,487,487,487,214,487,,,,214,214,214,214,214,214,,,,214',
'214,,,,,,,214,,,214,215,215,215,,215,214,214,,215,215,,,,215,,215,215',
'215,215,215,215,215,,,,,,215,215,215,215,215,215,215,,,215,,,,,,,215',
',,215,215,215,215,215,215,215,,215,215,215,,215,215,,215,215,488,488',
'488,488,488,488,488,,,488,488,,,,,,,488,488,,215,,,215,,215,215,,215',
',,488,,488,215,488,488,488,488,488,488,488,215,488,,,,215,215,215,215',
'215,215,,,,215,215,,,,,,,215,,,215,218,218,218,,218,215,215,,218,218',
',,,218,,218,218,218,218,218,218,218,,,,,,218,218,218,218,218,218,218',
',,218,,,,,,,218,,,218,218,218,218,218,218,218,,218,218,218,,218,218',
',218,218,491,491,491,491,491,491,491,,,491,491,,,,,,,491,491,,218,,',
'218,,,218,,218,,,491,,491,218,491,491,491,491,491,491,491,218,491,,',
',218,218,218,218,218,218,,,,218,218,,,,,,,218,,,218,220,220,220,,220',
'218,218,,220,220,,,,220,,220,220,220,220,220,220,220,,,,,,220,220,220',
'220,220,220,220,,,220,,,,,,,220,,,220,220,220,220,220,220,220,,220,220',
'220,,220,220,,220,220,492,492,492,492,492,492,492,492,,492,492,,,,,',
',492,492,,220,,,220,,,220,,220,,,492,,492,220,492,492,492,492,492,492',
'492,220,492,,,,220,220,220,220,220,220,,,,220,220,,,,,,,220,,,220,221',
'221,221,,221,220,220,,221,221,,,,221,,221,221,221,221,221,221,221,,',
',,,221,221,221,221,221,221,221,,,221,,,,,,,221,,,221,221,221,221,221',
'221,221,,221,221,221,476,221,221,,221,221,,,,,,,,,,,,476,476,,,,,,,',
'221,,,221,,476,221,476,221,476,476,476,476,,221,,,,,,,,221,,,,,221,221',
'221,221,221,221,,,,221,221,,,,,,,221,,,221,222,222,222,,222,221,221',
',222,222,,,,222,,222,222,222,222,222,222,222,,,,,,222,222,222,222,222',
'222,222,,,222,,,,,,,222,,,222,222,222,222,222,222,222,,222,222,222,477',
'222,222,,222,222,,,,,,,,,,,,477,477,,,,,,,,222,,,222,,477,222,477,222',
'477,477,477,477,,222,,,,,,,,222,,,,,222,222,222,222,222,222,,,,222,222',
',,,,,,222,,,222,223,223,223,,223,222,222,,223,223,,,,223,,223,223,223',
'223,223,223,223,,,,,,223,223,223,223,223,223,223,,,223,,,,,,,223,,,223',
'223,223,223,223,223,223,,223,223,223,,223,223,,223,223,,,,,,,,,,,,,',
',,,,,,,223,,,223,,,223,,223,,,,,,223,,,,,,,,223,,,,,223,223,223,223',
'223,223,,,,223,223,,,,,,,223,,,223,224,224,224,,224,223,223,,224,224',
',,,224,,224,224,224,224,224,224,224,,,,,,224,224,224,224,224,224,224',
',,224,,,,,,,224,,,224,224,224,224,224,224,224,,224,224,224,,224,224',
',224,224,,,,,,,,,,,,,,,,,,,,,224,,,224,,,224,,224,,,,,,224,,,,,,,,224',
',,,,224,224,224,224,224,224,,,,224,224,,,,,,,224,,,224,225,225,225,',
'225,224,224,,225,225,,,,225,,225,225,225,225,225,225,225,,,,,,225,225',
'225,225,225,225,225,,,225,,,,,,,225,,,225,225,225,225,225,225,225,,225',
'225,225,,225,225,,225,225,,,,,,,,,,,,,,,,,,,,,225,,,225,,,225,,225,',
',,,,225,,,,,,,,225,,,,,225,225,225,225,225,225,,,,225,225,,,,,,,225',
',,225,226,226,226,,226,225,225,,226,226,,,,226,,226,226,226,226,226',
'226,226,,,,,,226,226,226,226,226,226,226,,,226,,,,,,,226,,,226,226,226',
'226,226,226,226,,226,226,226,,226,226,,226,226,,,,,,,,,,,,,,,,,,,,,226',
',,226,,,226,,226,,,,,,226,,,,,,,,226,,,,,226,226,226,226,226,226,,,',
'226,226,,,,,,,226,,,226,227,227,227,,227,226,226,,227,227,,,,227,,227',
'227,227,227,227,227,227,,,,,,227,227,227,227,227,227,227,,,227,,,,,',
',227,,,227,227,227,227,227,227,227,,227,227,227,,227,227,,227,227,,',
',,,,,,,,,,,,,,,,,,227,,,227,,,227,,227,,,,,,227,,,,,,,,227,,,,,227,227',
'227,227,227,227,,,,227,227,,,,,,,227,,,227,228,228,228,,228,227,227',
',228,228,,,,228,,228,228,228,228,228,228,228,,,,,,228,228,228,228,228',
'228,228,,,228,,,,,,,228,,,228,228,228,228,228,228,228,,228,228,228,',
'228,228,,228,228,,,,,,,,,,,,,,,,,,,,,228,,,228,,,228,,228,,,,,,228,',
',,,,,,228,,,,,228,228,228,228,228,228,,,,228,228,,,,,,,228,,,228,229',
'229,229,,229,228,228,,229,229,,,,229,,229,229,229,229,229,229,229,,',
',,,229,229,229,229,229,229,229,,,229,,,,,,,229,,,229,229,229,229,229',
'229,229,,229,229,229,,229,229,,229,229,,,,,,,,,,,,,,,,,,,,,229,,,229',
',,229,,229,,,,,,229,,,,,,,,229,,,,,229,229,229,229,229,229,,,,229,229',
',,,,,,229,,,229,230,230,230,,230,229,229,,230,230,,,,230,,230,230,230',
'230,230,230,230,,,,,,230,230,230,230,230,230,230,,,230,,,,,,,230,,,230',
'230,230,230,230,230,230,,230,230,230,,230,230,,230,230,,,,,,,,,,,,,',
',,,,,,,230,,,230,,,230,,230,,,,,,230,,,,,,,,230,,,,,230,230,230,230',
'230,230,,,,230,230,,,,,,,230,,,230,231,231,231,,231,230,230,,231,231',
',,,231,,231,231,231,231,231,231,231,,,,,,231,231,231,231,231,231,231',
',,231,,,,,,,231,,,231,231,231,231,231,231,231,,231,231,231,,231,231',
',231,231,,,,,,,,,,,,,,,,,,,,,231,,,231,,,231,,231,,,,,,231,,,,,,,,231',
',,,,231,231,231,231,231,231,,,,231,231,,,,,,,231,,,231,232,232,232,',
'232,231,231,,232,232,,,,232,,232,232,232,232,232,232,232,,,,,,232,232',
'232,232,232,232,232,,,232,,,,,,,232,,,232,232,232,232,232,232,232,,232',
'232,232,,232,232,,232,232,,,,,,,,,,,,,,,,,,,,,232,,,232,,,232,,232,',
',,,,232,,,,,,,,232,,,,,232,232,232,232,232,232,,,,232,232,,,,,,,232',
',,232,233,233,233,,233,232,232,,233,233,,,,233,,233,233,233,233,233',
'233,233,,,,,,233,233,233,233,233,233,233,,,233,,,,,,,233,,,233,233,233',
'233,233,233,233,,233,233,233,,233,233,,233,233,,,,,,,,,,,,,,,,,,,,,233',
',,233,,,233,,233,,,,,,233,,,,,,,,233,,,,,233,233,233,233,233,233,,,',
'233,233,,,,,,,233,,,233,234,234,234,,234,233,233,,234,234,,,,234,,234',
'234,234,234,234,234,234,,,,,,234,234,234,234,234,234,234,,,234,,,,,',
',234,,,234,234,234,234,234,234,234,,234,234,234,,234,234,,234,234,,',
',,,,,,,,,,,,,,,,,,234,,,234,,,234,,234,,,,,,234,,,,,,,,234,,,,,234,234',
'234,234,234,234,,,,234,234,,,,,,,234,,,234,235,235,235,,235,234,234',
',235,235,,,,235,,235,235,235,235,235,235,235,,,,,,235,235,235,235,235',
'235,235,,,235,,,,,,,235,,,235,235,235,235,235,235,235,,235,235,235,',
'235,235,,235,235,,,,,,,,,,,,,,,,,,,,,235,,,235,,,235,,235,,,,,,235,',
',,,,,,235,,,,,235,235,235,235,235,235,,,,235,235,,,,,,,235,,,235,236',
'236,236,,236,235,235,,236,236,,,,236,,236,236,236,236,236,236,236,,',
',,,236,236,236,236,236,236,236,,,236,,,,,,,236,,,236,236,236,236,236',
'236,236,,236,236,236,,236,236,,236,236,,,,,,,,,,,,,,,,,,,,,236,,,236',
',,236,,236,,,,,,236,,,,,,,,236,,,,,236,236,236,236,236,236,,,,236,236',
',,,,,,236,,,236,237,237,237,,237,236,236,,237,237,,,,237,,237,237,237',
'237,237,237,237,,,,,,237,237,237,237,237,237,237,,,237,,,,,,,237,,,237',
'237,237,237,237,237,237,,237,237,237,,237,237,,237,237,,,,,,,,,,,,,',
',,,,,,,237,,,237,,,237,,237,,,,,,237,,,,,,,,237,,,,,237,237,237,237',
'237,237,,,,237,237,,,,,,,237,,,237,238,238,238,,238,237,237,,238,238',
',,,238,,238,238,238,238,238,238,238,,,,,,238,238,238,238,238,238,238',
',,238,,,,,,,238,,,238,238,238,238,238,238,238,,238,238,238,,238,238',
',238,238,,,,,,,,,,,,,,,,,,,,,238,,,238,,,238,,238,,,,,,238,,,,,,,,238',
',,,,238,238,238,238,238,238,,,,238,238,,,,,,,238,,,238,239,239,239,',
'239,238,238,,239,239,,,,239,,239,239,239,239,239,239,239,,,,,,239,239',
'239,239,239,239,239,,,239,,,,,,,239,,,239,239,239,239,239,239,239,,239',
'239,239,,239,239,,239,239,,,,,,,,,,,,,,,,,,,,,239,,,239,,,239,,239,',
',,,,239,,,,,,,,239,,,,,239,239,239,239,239,239,,,,239,239,,,,,,,239',
',,239,240,240,240,,240,239,239,,240,240,,,,240,,240,240,240,240,240',
'240,240,,,,,,240,240,240,240,240,240,240,,,240,,,,,,,240,,,240,240,240',
'240,240,240,240,,240,240,240,,240,240,,240,240,,,,,,,,,,,,,,,,,,,,,240',
',,240,,,240,,240,,,,,,240,,,,,,,,240,,,,,240,240,240,240,240,240,,,',
'240,240,,,,,,,240,,,240,241,241,241,,241,240,240,,241,241,,,,241,,241',
'241,241,241,241,241,241,,,,,,241,241,241,241,241,241,241,,,241,,,,,',
',241,,,241,241,241,241,241,241,241,,241,241,241,,241,241,,241,241,,',
',,,,,,,,,,,,,,,,,,241,,,241,,,241,,241,,,,,,241,,,,,,,,241,,,,,241,241',
'241,241,241,241,,,,241,241,,,,,,,241,,,241,242,242,242,,242,241,241',
',242,242,,,,242,,242,242,242,242,242,242,242,,,,,,242,242,242,242,242',
'242,242,,,242,,,,,,,242,,,242,242,242,242,242,242,242,,242,242,242,',
'242,242,,242,242,,,,,,,,,,,,,,,,,,,,,242,,,242,,,242,,242,,,,,,242,',
',,,,,,242,,,,,242,242,242,242,242,242,,,,242,242,,,,,,,242,,,242,243',
'243,243,,243,242,242,,243,243,,,,243,,243,243,243,243,243,243,243,,',
',,,243,243,243,243,243,243,243,,,243,,,,,,,243,,,243,243,243,243,243',
'243,243,,243,243,243,,243,243,,243,243,,,,,,,,,,,,,,,,,,,,,243,,,243',
',,243,,243,,,,,,243,,,,,,,,243,,,,,243,243,243,243,243,243,,,,243,243',
',,,,,,243,,,243,244,244,244,,244,243,243,,244,244,,,,244,,244,244,244',
'244,244,244,244,,,,,,244,244,244,244,244,244,244,,,244,,,,,,,244,,,244',
'244,244,244,244,244,244,,244,244,244,,244,244,,244,244,,,,,,,,,,,,,',
',,,,,,,244,,,244,,,244,,244,,,,,,244,,,,,,,,244,,,,,244,244,244,244',
'244,244,,,,244,244,,,,,,,244,,,244,254,254,254,,254,244,244,,254,254',
',,,254,,254,254,254,254,254,254,254,,,,,,254,254,254,254,254,254,254',
',,254,,,,,,,254,,,254,254,254,254,254,254,254,,254,254,254,,254,254',
',254,254,,,,,,,,,,,,,,,,,,,,,254,,,254,,,254,,254,,,,,,254,,,,,,,,254',
',,,,254,254,254,254,254,254,,,,254,254,,,,,,,254,,,254,256,256,256,',
'256,254,254,,256,256,,,,256,,256,256,256,256,256,256,256,,,,,,256,256',
'256,256,256,256,256,,,256,,,,,,,256,,,256,256,256,256,256,256,256,,256',
'256,256,,256,256,,256,256,,,,,,,,,,,,,,,,,,,,,256,,,256,,,256,,256,',
',,,,256,,,,,,,,256,,,,,256,256,256,256,256,256,,,,256,256,,,,,,,256',
',,256,262,262,262,,262,256,256,,262,262,,,,262,,262,262,262,262,262',
'262,262,,,,,,262,262,262,262,262,262,262,,,262,,,,,,,262,,,262,262,262',
'262,262,262,262,,262,262,262,,262,262,,262,262,,,,,,,,,,,,,,,,,,,,,262',
',,262,,,262,,262,,,,,,262,,,,,,,,262,,,,,262,262,262,262,262,262,,,',
'262,262,,,,,,,262,,,262,269,269,269,,269,262,262,,269,269,,,,269,,269',
'269,269,269,269,269,269,,,,,,269,269,269,269,269,269,269,,,269,,,,,',
',269,,,269,269,269,269,269,269,269,269,269,269,269,,269,269,,269,269',
',,,,,,,,,,,,,,,,,,,,269,,,269,,,269,,269,,269,,269,,269,,,,,,,,269,',
',,,269,269,269,269,269,269,,,,269,269,,,,,,,269,,,269,270,270,270,,270',
'269,269,,270,270,,,,270,,270,270,270,270,270,270,270,,,,,,270,270,270',
'270,270,270,270,,,270,,,,,,,270,,,270,270,270,270,270,270,270,270,270',
'270,270,,270,270,,270,270,,,,,,,,,,,,,,,,,,,,,270,,,270,,,270,,270,',
'270,,270,,270,,,,,,,,270,,,,,270,270,270,270,270,270,,,,270,270,,,,',
',,270,,,270,278,278,278,,278,270,270,,278,278,,,,278,,278,278,278,278',
'278,278,278,,,,,,278,278,278,278,278,278,278,,,278,,,,,,,278,,,278,278',
'278,278,278,278,278,278,278,278,278,,278,278,,278,278,,,,,,,,,,,,,,',
',,,,,,278,,,278,,278,278,,278,,278,,278,,278,,,,,,,,278,,,,,278,278',
'278,278,278,278,,,,278,278,,,,,,,278,,,278,282,282,282,282,282,278,278',
',282,282,,,,282,,282,282,282,282,282,282,282,,,,,,282,282,282,282,282',
'282,282,,,282,,,,,,282,282,,282,282,282,282,282,282,282,282,,282,282',
'282,,282,282,,282,282,,,,,,,,,,,,,,,,,,,,,282,,,282,,,282,,282,,282',
',,,282,,,,,,,,282,,,,,282,282,282,282,282,282,,,,282,282,,,,,,,282,',
',282,286,286,286,,286,282,282,,286,286,,,,286,,286,286,286,286,286,286',
'286,,,,,,286,286,286,286,286,286,286,,,286,,,,,,,286,,,286,286,286,286',
'286,286,286,,286,286,286,,286,286,,574,,574,574,574,574,574,,,,,,,,',
'574,,,,,,,286,,,286,,,286,,286,,,,,,,,574,,,,,,,574,574,574,574,286',
'286,286,286,286,286,,,,286,286,,,,286,,,286,,,286,287,287,287,287,287',
'286,286,,287,287,,,,287,574,287,287,287,287,287,287,287,,,,,,287,287',
'287,287,287,287,287,,,287,,,,,,287,287,,287,287,287,287,287,287,287',
'287,,287,287,287,,287,287,,287,287,,,,,,,,,,,,,,,,,,,,,287,,,287,,,287',
',287,,287,,,,287,,,,,,,,287,,,,,287,287,287,287,287,287,,,,287,287,',
',,,,,287,,,287,299,299,299,,299,287,287,,299,299,,,,299,,299,299,299',
'299,299,299,299,,,,,,299,299,299,299,299,299,299,,,299,,,,,,,299,,,299',
'299,299,299,299,299,299,,299,299,299,,299,299,,618,,618,618,618,618',
'618,,,,,,,,,618,,,,,,,299,,,299,,,299,,299,,,,,,,,618,618,,,,,,618,618',
'618,618,299,299,299,299,299,299,,,,299,299,,,,,,,299,,,299,308,308,308',
',308,299,299,,308,308,,,,308,618,308,308,308,308,308,308,308,,,,,,308',
'308,308,308,308,308,308,,,308,,,,,,,308,,,308,308,308,308,308,308,308',
',308,308,308,,308,308,,308,308,,,,,,,,,,,,,,,,,,,,,308,,,308,308,,308',
',308,,,,,,308,,,,,,,,308,,,,,308,308,308,308,308,308,,,,308,308,,,,',
',,308,,,308,310,310,310,310,310,308,308,,310,310,,,,310,,310,310,310',
'310,310,310,310,,,,,,310,310,310,310,310,310,310,,,310,,,,,,310,310',
',310,310,310,310,310,310,310,310,,310,310,310,,310,310,,310,310,,,,',
',,,,,,,,,,,,,,,,310,,,310,,,310,,310,,310,,,,310,,,,,,,,310,,,,,310',
'310,310,310,310,310,,,,310,310,,,,,,,310,,,310,335,335,335,,335,310',
'310,,335,335,,,,335,,335,335,335,335,335,335,335,,,,,,335,335,335,335',
'335,335,335,,,335,,,,,,,335,,,335,335,335,335,335,335,335,,335,335,335',
',335,335,,670,,670,670,670,670,670,,,,,,,,,670,,,,,,,335,,,335,,,335',
',335,,,,,,,,670,,,,,,,670,670,670,670,335,335,335,335,335,335,,,,335',
'335,,,,,,,335,,,335,358,358,358,670,358,335,335,,358,358,,,,358,670',
'358,358,358,358,358,358,358,,,,,,358,358,358,358,358,358,358,,,358,',
',,,,,358,,,358,358,358,358,358,358,358,,358,358,358,,358,358,,358,358',
',,,,,,,,,,,,,,,,,,,,358,,,358,,,358,,358,,,,,,358,,,,,,,,358,,,,,358',
'358,358,358,358,358,,,,358,358,,,,,,,358,,,358,359,359,359,,359,358',
'358,,359,359,,,,359,,359,359,359,359,359,359,359,,,,,,359,359,359,359',
'359,359,359,,,359,,,,,,,359,,,359,359,359,359,359,359,359,,359,359,359',
',359,359,,359,359,,,,,,,,,,,,,,,,,,,,,359,,,359,,,359,,359,,,,,,359',
',,,,,,,359,,,,,359,359,359,359,359,359,,,,359,359,,,,,,,359,,,359,378',
'378,378,,378,359,359,,378,378,,,,378,,378,378,378,378,378,378,378,,',
',,,378,378,378,378,378,378,378,,,378,,,,,,,378,,,378,378,378,378,378',
'378,378,,378,378,378,,378,378,,775,,775,775,775,775,775,,,,,,,,,775',
',,,,,,378,,,378,,,378,,378,,,,,,,,775,,,,,,,775,775,775,775,378,378',
'378,378,378,378,,,,378,378,,,,,,,378,,,378,390,390,390,,390,378,378',
',390,390,,,,390,775,390,390,390,390,390,390,390,,,,,,390,390,390,390',
'390,390,390,,,390,,,,,,,390,,,390,390,390,390,390,390,390,,390,390,390',
',390,390,,390,390,,,,,,,,,,,,,,,,,,,,,390,,,390,,,390,,390,,,,,,390',
',,,,,,,390,,,,,390,390,390,390,390,390,,,,390,390,,,,,,,390,,,390,430',
'430,430,,430,390,390,,430,430,,,,430,,430,430,430,430,430,430,430,,',
',,,430,430,430,430,430,430,430,,,430,,,,,,,430,,,430,430,430,430,430',
'430,430,,430,430,430,,430,430,,430,430,,,,,,,,,,,,,,,,,,,,,430,,,430',
',,430,,430,,,,,,430,,,,,,,,430,,,,,430,430,430,430,430,430,,,,430,430',
',,,,,,430,,,430,441,441,441,,441,430,430,,441,441,,,,441,,441,441,441',
'441,441,441,441,,,,,,441,441,441,441,441,441,441,,,441,,,,,,,441,,,441',
'441,441,441,441,441,441,441,441,441,441,,441,441,,441,441,,,,,,,,,,',
',,,,,,,,,,441,,,441,441,,441,,441,,441,,441,,441,,,,,,,,441,,,,,441',
'441,441,441,441,441,,,,441,441,,,,,,,441,,,441,449,449,449,,449,441',
'441,,449,449,,,,449,,449,449,449,449,449,449,449,,,,,,449,449,449,449',
'449,449,449,,,449,,,,,,,449,,,449,449,449,449,449,449,449,449,449,449',
'449,,449,449,,449,449,,,,,,,,,,,,,,,,,,,,,449,,,449,449,,449,,449,,449',
',449,,449,,,,,,,,449,,,,,449,449,449,449,449,449,,,,449,449,,,,,,,449',
',,449,450,450,450,,450,449,449,,450,450,,,,450,,450,450,450,450,450',
'450,450,,,,,,450,450,450,450,450,450,450,,,450,,,,,,,450,,,450,450,450',
'450,450,450,450,450,450,450,450,,450,450,,450,450,,,,,,,,,,,,,,,,,,',
',,450,,,450,450,,450,,450,,450,,450,,450,,,,,,,,450,,,,,450,450,450',
'450,450,450,,,,450,450,,,,,,,450,,,450,451,451,451,,451,450,450,,451',
'451,,,,451,,451,451,451,451,451,451,451,,,,,,451,451,451,451,451,451',
'451,,,451,,,,,,,451,,,451,451,451,451,451,451,451,451,451,451,451,,451',
'451,,451,451,,,,,,,,,,,,,,,,,,,,,451,,,451,451,,451,,451,,451,,451,',
'451,,,,,,,,451,,,,,451,451,451,451,451,451,,,,451,451,,,,,,,451,,,451',
'460,460,460,,460,451,451,,460,460,,,,460,,460,460,460,460,460,460,460',
',,,,,460,460,460,460,460,460,460,,,460,,,,,,,460,,,460,460,460,460,460',
'460,460,460,460,460,460,,460,460,,460,460,,,,,,,,,,,,,,,,,,,,,460,,',
'460,,,460,,460,,460,,,,460,,,,,,,,460,,,,,460,460,460,460,460,460,,',
',460,460,,,,,,,460,,,460,461,461,461,,461,460,460,,461,461,,,,461,,461',
'461,461,461,461,461,461,,,,,,461,461,461,461,461,461,461,,,461,,,,,',
',461,,,461,461,461,461,461,461,461,461,461,461,461,,461,461,,461,461',
',,,,,,,,,,,,,,,,,,,,461,,,461,,,461,,461,,461,,,,461,,,,,,,,461,,,,',
'461,461,461,461,461,461,,,,461,461,,,,,,,461,,,461,463,463,463,,463',
'461,461,,463,463,,,,463,,463,463,463,463,463,463,463,,,,,,463,463,463',
'463,463,463,463,,,463,,,,,,,463,,,463,463,463,463,463,463,463,,463,463',
'463,,463,463,,463,463,,,,,,,,,,,,,,,,,,,,,463,,,463,,,463,,463,,,,,',
'463,,,,,,,,463,,,,,463,463,463,463,463,463,,,,463,463,,,,,,,463,,,463',
'464,464,464,,464,463,463,,464,464,,,,464,,464,464,464,464,464,464,464',
',,,,,464,464,464,464,464,464,464,,,464,,,,,,,464,,,464,464,464,464,464',
'464,464,,464,464,464,,464,464,,464,464,,,,,,,,,,,,,,,,,,,,,464,,,464',
',,464,,464,,,,,,464,,,,,,,,464,,,,,464,464,464,464,464,464,,,,464,464',
',,,,,,464,,,464,465,465,465,,465,464,464,,465,465,,,,465,,465,465,465',
'465,465,465,465,,,,,,465,465,465,465,465,465,465,,,465,,,,,,,465,,,465',
'465,465,465,465,465,465,,465,465,465,,465,465,,465,465,,,,,,,,,,,,,',
',,,,,,,465,,,465,,,465,,465,,,,,,465,,,,,,,,465,,,,,465,465,465,465',
'465,465,,,,465,465,,,,,,,465,,,465,493,493,493,,493,465,465,,493,493',
',,,493,,493,493,493,493,493,493,493,,,,,,493,493,493,493,493,493,493',
',,493,,,,,,,493,,,493,493,493,493,493,493,493,,493,493,493,,493,493',
',493,493,,,,,,,,,,,,,,,,,,,,,493,,,493,,,493,,493,,,,,,493,,,,,,,,493',
',,,,493,493,493,493,493,493,,,,493,493,,,,,,,493,,,493,496,496,496,',
'496,493,493,,496,496,,,,496,,496,496,496,496,496,496,496,,,,,,496,496',
'496,496,496,496,496,,,496,,,,,,,496,,,496,496,496,496,496,496,496,496',
'496,496,496,,496,496,,496,496,,,,,,,,,,,,,,,,,,,,,496,,,496,,,496,,496',
',496,,496,,496,,,,,,,,496,,,,,496,496,496,496,496,496,,,,496,496,,,',
',,,496,,,496,498,498,498,,498,496,496,,498,498,,,,498,,498,498,498,498',
'498,498,498,,,,,,498,498,498,498,498,498,498,,,498,,,,,,,498,,,498,498',
'498,498,498,498,498,498,498,498,498,,498,498,,498,498,,,,,,,,,,,,,,',
',,,,,,498,,,498,,,498,,498,,,,498,,498,,,,,,,,498,,,,,498,498,498,498',
'498,498,,,,498,498,,,,,,,498,,,498,500,500,500,,500,498,498,,500,500',
',,,500,,500,500,500,500,500,500,500,,,,,,500,500,500,500,500,500,500',
',,500,,,,,,,500,,,500,500,500,500,500,500,500,,500,500,500,,500,500',
',500,500,,,,,,,,,,,,,,,,,,,,,500,,,500,,,500,,500,,,,,,500,,,,,,,,500',
',,,,500,500,500,500,500,500,,,,500,500,,,,,,,500,,,500,516,516,516,',
'516,500,500,,516,516,,,,516,,516,516,516,516,516,516,516,,,,,,516,516',
'516,516,516,516,516,,,516,,,,,,,516,,,516,516,516,516,516,516,516,,516',
'516,516,,516,516,,516,516,,,,,,,,,,,,,,,,,,,,,516,,,516,,516,516,,516',
',,,516,,516,,,,,,,,516,,,,,516,516,516,516,516,516,,,,516,516,,,,,,',
'516,,,516,522,522,522,522,522,516,516,,522,522,,,,522,,522,522,522,522',
'522,522,522,,,,,,522,522,522,522,522,522,522,,,522,,,,,,522,522,,522',
'522,522,522,522,522,522,522,,522,522,522,,522,522,,522,522,,,,,,,,,',
',,,,,,,,,,,522,,,522,,,522,,522,,522,,,,522,,,,,,,,522,,,,,522,522,522',
'522,522,522,,,,522,522,,,,,,522,522,,,522,528,528,528,,528,522,522,',
'528,528,,,,528,,528,528,528,528,528,528,528,,,,,,528,528,528,528,528',
'528,528,,,528,,,,,,,528,,,528,528,528,528,528,528,528,,528,528,528,',
'528,528,,851,,851,851,851,851,851,,,,,,,,,851,,,,,,,528,,,528,,,528',
',528,,,,,,,,851,,,,,,,851,851,851,851,528,528,528,528,528,528,,,,528',
'528,,,,,,,528,,,528,530,530,530,,530,528,528,,530,530,,,,530,851,530',
'530,530,530,530,530,530,,,,,,530,530,530,530,530,530,530,,,530,,,,,',
',530,,,530,530,530,530,530,530,530,530,530,530,530,,530,530,,530,530',
',,,,,,,,,,,,,,,,,,,,530,,,530,,,530,,530,,530,,,,530,,,,,,,,530,,,,',
'530,530,530,530,530,530,,,,530,530,,,,,,,530,,,530,533,533,533,,533',
'530,530,,533,533,,,,533,,533,533,533,533,533,533,533,,,,,,533,533,533',
'533,533,533,533,,,533,,,,,,,533,,,533,533,533,533,533,533,533,533,533',
'533,533,,533,533,,533,533,,,,,,,,,,,,,,,,,,,,,533,,,533,,,533,,533,',
'533,,,,533,,,,,,,,533,,,,,533,533,533,533,533,533,,,,533,533,,,,,,,533',
',,533,539,539,539,,539,533,533,,539,539,,,,539,,539,539,539,539,539',
'539,539,,,,,,539,539,539,539,539,539,539,,,539,,,,,,,539,,,539,539,539',
'539,539,539,539,,539,539,539,,539,539,,884,,884,884,884,884,884,,,,',
',,,,884,,,,,,,539,,,539,,,539,,539,,,,,,,,884,,,,,,,884,884,884,884',
'539,539,539,539,539,539,,,,539,539,,,,,,,539,,,539,542,542,542,,542',
'539,539,,542,542,,,,542,884,542,542,542,542,542,542,542,,,,,,542,542',
'542,542,542,542,542,,,542,,,,,,,542,,,542,542,542,542,542,542,542,,542',
'542,542,,542,542,,542,542,,,,,,,,,,,,,,,,,,,,,542,,,542,,,542,,542,',
',,,,542,,,,,,,,542,,,,,542,542,542,542,542,542,,,,542,542,,,,,,,542',
',,542,543,543,543,,543,542,542,,543,543,,,,543,,543,543,543,543,543',
'543,543,,,,,,543,543,543,543,543,543,543,,,543,,,,,,,543,,,543,543,543',
'543,543,543,543,,543,543,543,,543,543,,543,543,,,,,,,,,,,,,,,,,,,,,543',
',,543,,,543,,543,,,,,,543,,,,,,,,543,,,,,543,543,543,543,543,543,,,',
'543,543,,,,,,,543,,,543,544,544,544,,544,543,543,,544,544,,,,544,,544',
'544,544,544,544,544,544,,,,,,544,544,544,544,544,544,544,,,544,,,,,',
',544,,,544,544,544,544,544,544,544,,544,544,544,,544,544,,544,544,,',
',,,,,,,,,,,,,,,,,,544,,,544,,,544,,544,,,,,,544,,,,,,,,544,,,,,544,544',
'544,544,544,544,,,,544,544,,,,,,,544,,,544,548,548,548,,548,544,544',
',548,548,,,,548,,548,548,548,548,548,548,548,,,,,,548,548,548,548,548',
'548,548,,,548,,,,,,,548,,,548,548,548,548,548,548,548,,548,548,548,',
'548,548,,548,548,,,,,,,,,,,,,,,,,,,,,548,,,548,,,548,,548,,,,,,548,',
',,,,,,548,,,,,548,548,548,548,548,548,,,,548,548,,,,,,,548,,,548,554',
'554,554,,554,548,548,,554,554,,,,554,,554,554,554,554,554,554,554,,',
',,,554,554,554,554,554,554,554,,,554,,,,,,,554,,,554,554,554,554,554',
'554,554,554,554,554,554,,554,554,,554,554,,,,,,,,,,,,,,,,,,,,,554,,',
'554,,,554,,554,,554,,554,,554,,,,,,,,554,,,,,554,554,554,554,554,554',
',,,554,554,,,,,,,554,,,554,557,557,557,,557,554,554,,557,557,,,,557',
',557,557,557,557,557,557,557,,,,,,557,557,557,557,557,557,557,,,557',
',,,,,,557,,,557,557,557,557,557,557,557,557,557,557,557,,557,557,,557',
'557,,,,,,,,,,,,,,,,,,,,,557,,,557,,,557,,557,,,,,,557,,,,,,,,557,,,',
',557,557,557,557,557,557,,,,557,557,,,,,,,557,,,557,562,562,562,562',
'562,557,557,,562,562,,,,562,,562,562,562,562,562,562,562,,,,,,562,562',
'562,562,562,562,562,,,562,,,,,,562,562,,562,562,562,562,562,562,562',
'562,,562,562,562,,562,562,,562,562,,,,,,,,,,,,,,,,,,,,,562,,,562,,,562',
',562,,562,,,,562,,,,,,,,562,,,,,562,562,562,562,562,562,,,,562,562,',
',,,,,562,,,562,563,563,563,563,563,562,562,,563,563,,,,563,,563,563',
'563,563,563,563,563,,,,,,563,563,563,563,563,563,563,,,563,,,,,,563',
'563,,563,563,563,563,563,563,563,563,,563,563,563,,563,563,,563,563',
',,,,,,,,,,,,,,,,,,,,563,,,563,,,563,,563,,563,,,,563,,,,,,,,563,,,,',
'563,563,563,563,563,563,,,,563,563,,,,,,,563,,,563,569,569,569,,569',
'563,563,,569,569,,,,569,,569,569,569,569,569,569,569,,,,,,569,569,569',
'569,569,569,569,,,569,,,,,,,569,,,569,569,569,569,569,569,569,,569,569',
'569,,569,569,,951,,951,951,951,951,951,,,,,,,,,951,,,,,,,569,,,569,',
',569,,569,,,,,,,,951,951,,,,,,951,951,951,951,569,569,569,569,569,569',
',,,569,569,,,,,,,569,,,569,590,590,590,590,590,569,569,,590,590,,,,590',
'951,590,590,590,590,590,590,590,,,,,,590,590,590,590,590,590,590,,,590',
',,,,,590,590,,590,590,590,590,590,590,590,590,,590,590,590,,590,590',
',590,590,,,,,,,,,,,,,,,,,,,,,590,,,590,,,590,,590,,590,,,,590,,,,,,',
',590,,,,,590,590,590,590,590,590,,,,590,590,,,,,,,590,,,590,594,594',
'594,594,594,590,590,,594,594,,,,594,,594,594,594,594,594,594,594,,,',
',,594,594,594,594,594,594,594,,,594,,,,,,594,594,,594,594,594,594,594',
'594,594,594,,594,594,594,,594,594,,594,594,,,,,,,,,,,,,,,,,,,,,594,',
',594,,,594,,594,,594,,,,594,,,,,,,,594,,,,,594,594,594,594,594,594,',
',,594,594,,,,,,,594,,,594,599,599,599,599,599,594,594,,599,599,,,,599',
',599,599,599,599,599,599,599,,,,,,599,599,599,599,599,599,599,,,599',
',,,,,599,599,,599,599,599,599,599,599,599,599,,599,599,599,,599,599',
',599,599,,,,,,,,,,,,,,,,,,,,,599,,,599,,,599,,599,,599,,,,599,,,,,,',
',599,,,,,599,599,599,599,599,599,,,,599,599,,,,,,,599,,,599,601,601',
'601,,601,599,599,,601,601,,,,601,,601,601,601,601,601,601,601,,,,,,601',
'601,601,601,601,601,601,,,601,,,,,,,601,,,601,601,601,601,601,601,601',
'601,601,601,601,,601,601,,601,601,,,,,,,,,,,,,,,,,,,,,601,,,601,,,601',
',601,,601,,,,601,,,,,,,,601,,,,,601,601,601,601,601,601,,,,601,601,',
',,,,,601,,,601,604,604,604,,604,601,601,,604,604,,,,604,,604,604,604',
'604,604,604,604,,,,,,604,604,604,604,604,604,604,,,604,,,,,,,604,,,604',
'604,604,604,604,604,604,604,604,604,604,,604,604,,604,604,,,,,,,,,,',
',,,,,,,,,,604,,,604,,,604,,604,,604,,,,604,,,,,,,,604,,,,,604,604,604',
'604,604,604,,,,604,604,,,,,,,604,,,604,610,610,610,,610,604,604,,610',
'610,,,,610,,610,610,610,610,610,610,610,,,,,,610,610,610,610,610,610',
'610,,,610,,,,,,,610,,,610,610,610,610,610,610,610,610,610,610,610,,610',
'610,,610,610,,,,,,,,,,,,,,,,,,,,,610,,,610,,,610,,610,,610,,,,610,,',
',,,,,610,,,,,610,610,610,610,610,610,,,,610,610,,,,,,,610,,,610,614',
'614,614,,614,610,610,,614,614,,,,614,,614,614,614,614,614,614,614,,',
',,,614,614,614,614,614,614,614,,,614,,,,,,,614,,,614,614,614,614,614',
'614,614,,614,614,614,,614,614,,614,614,,,,,,,,,,,,,,,,,,,,,614,,,614',
',,614,,614,,,,,,614,,,,,,,,614,,,,,614,614,614,614,614,614,,,,614,614',
',,,,,,614,,,614,616,616,616,,616,614,614,,616,616,,,,616,,616,616,616',
'616,616,616,616,,,,,,616,616,616,616,616,616,616,,,616,,,,,,,616,,,616',
'616,616,616,616,616,616,,616,616,616,,616,616,,616,616,,,,,,,,,,,,,',
',,,,,,,616,,,616,,,616,,616,,,,,,616,,,,,,,,616,,,,,616,616,616,616',
'616,616,,,,616,616,,,,,,,616,,,616,643,643,643,,643,616,616,,643,643',
',,,643,,643,643,643,643,643,643,643,,,,,,643,643,643,643,643,643,643',
',,643,,,,,,,643,,,643,643,643,643,643,643,643,,643,643,643,,643,643',
',643,643,,,,,,,,,,,,,,,,,,,,,643,,,643,,,643,,643,,,,,,643,,,,,,,,643',
',,,,643,643,643,643,643,643,,,,643,643,,,,,,,643,,,643,645,645,645,',
'645,643,643,,645,645,,,,645,,645,645,645,645,645,645,645,,,,,,645,645',
'645,645,645,645,645,,,645,,,,,,,645,,,645,645,645,645,645,645,645,,645',
'645,645,,645,645,,645,645,,,,,,,,,,,,,,,,,,,,,645,,,645,,,645,,645,',
'645,,,,645,,,,,,,,645,,,,,645,645,645,645,645,645,,,,645,645,,,,,,,645',
',,645,648,648,648,,648,645,645,,648,648,,,,648,,648,648,648,648,648',
'648,648,,,,,,648,648,648,648,648,648,648,,,648,,,,,,,648,,,648,648,648',
'648,648,648,648,,648,648,648,,648,648,,648,648,,,,,,,,,,,,,,,,,,,,,648',
',,648,,,648,,648,,,,,,648,,,,,,,,648,,,,,648,648,648,648,648,648,,,',
'648,648,,,,,,,648,,,648,649,649,649,,649,648,648,,649,649,,,,649,,649',
'649,649,649,649,649,649,,,,,,649,649,649,649,649,649,649,,,649,,,,,',
',649,,,649,649,649,649,649,649,649,,649,649,649,,649,649,,649,649,,',
',,,,,,,,,,,,,,,,,,649,,,649,,,649,,649,,,,,,649,,,,,,,,649,,,,,649,649',
'649,649,649,649,,,,649,649,,,,,,,649,,,649,654,654,654,,654,649,649',
',654,654,,,,654,,654,654,654,654,654,654,654,,,,,,654,654,654,654,654',
'654,654,,,654,,,,,,,654,,,654,654,654,654,654,654,654,,654,654,654,',
'654,654,,654,654,,,,,,,,,,,,,,,,,,,,,654,,,654,,,654,,654,,,,,,654,',
',,,,,,654,,,,,654,654,654,654,654,654,,,,654,654,,,,,,,654,,,654,657',
'657,657,,657,654,654,,657,657,,,,657,,657,657,657,657,657,657,657,,',
',,,657,657,657,657,657,657,657,,,657,,,,,,,657,,,657,657,657,657,657',
'657,657,,657,657,657,,657,657,,657,657,,,,,,,,,,,,,,,,,,,,,657,,,657',
',,657,,657,,,,,,657,,,,,,,,657,,,,,657,657,657,657,657,657,,,,657,657',
',,,,,,657,,,657,672,672,672,672,672,657,657,,672,672,,,,672,,672,672',
'672,672,672,672,672,,,,,,672,672,672,672,672,672,672,,,672,,,,,,672',
'672,,672,672,672,672,672,672,672,672,,672,672,672,,672,672,,672,672',
',,,,,,,,,,,,,,,,,,,,672,,,672,,,672,,672,,672,,,,672,,,,,,,,672,,,,',
'672,672,672,672,672,672,,,,672,672,,,,,,,672,,,672,676,676,676,,676',
'672,672,,676,676,,,,676,,676,676,676,676,676,676,676,,,,,,676,676,676',
'676,676,676,676,,,676,,,,,,,676,,,676,676,676,676,676,676,676,,676,676',
'676,,676,676,,676,676,,,,,,,,,,,,,,,,,,,,,676,,,676,,,676,,676,,,,,',
'676,,,,,,,,676,,,,,676,676,676,676,676,676,,,,676,676,,,,,,,676,,,676',
'679,679,679,,679,676,676,,679,679,,,,679,,679,679,679,679,679,679,679',
',,,,,679,679,679,679,679,679,679,,,679,,,,,,,679,,,679,679,679,679,679',
'679,679,,679,679,679,,679,679,,679,679,,,,,,,,,,,,,,,,,,,,,679,,,679',
',,679,,679,,,,,,679,,,,,,,,679,,,,,679,679,679,679,679,679,,,,679,679',
',,,,,,679,,,679,686,686,686,686,686,679,679,,686,686,,,,686,,686,686',
'686,686,686,686,686,,,,,,686,686,686,686,686,686,686,,,686,,,,,,686',
'686,,686,686,686,686,686,686,686,686,,686,686,686,,686,686,,686,686',
',,,,,,,,,,,,,,,,,,,,686,,,686,,,686,,686,,686,,,,686,,,,,,,,686,,,,',
'686,686,686,686,686,686,,,,686,686,,,,,,,686,,,686,689,689,689,,689',
'686,686,,689,689,,,,689,,689,689,689,689,689,689,689,,,,,,689,689,689',
'689,689,689,689,,,689,,,,,,,689,,,689,689,689,689,689,689,689,689,689',
'689,689,,689,689,,689,689,,,,,,,,,,,,,,,,,,,,,689,,,689,,,689,,689,',
'689,,689,,689,,,,,,,,689,,,,,689,689,689,689,689,689,,,,689,689,,,,',
',,689,,,689,690,690,690,,690,689,689,,690,690,,,,690,,690,690,690,690',
'690,690,690,,,,,,690,690,690,690,690,690,690,,,690,,,,,,,690,,,690,690',
'690,690,690,690,690,690,690,690,690,,690,690,,690,690,,,,,,,,,,,,,,',
',,,,,,690,,,690,,,690,,690,,,,690,,690,,,,,,,,690,,,,,690,690,690,690',
'690,690,,,,690,690,,,,,,,690,,,690,696,696,696,696,696,690,690,,696',
'696,,,,696,,696,696,696,696,696,696,696,,,,,,696,696,696,696,696,696',
'696,,,696,,,,,,696,696,,696,696,696,696,696,696,696,696,,696,696,696',
',696,696,,696,696,,,,,,,,,,,,,,,,,,,,,696,,,696,,,696,,696,,696,,,,696',
',,,,,,,696,,,,,696,696,696,696,696,696,,,,696,696,,,,,,,696,,,696,697',
'697,697,697,697,696,696,,697,697,,,,697,,697,697,697,697,697,697,697',
',,,,,697,697,697,697,697,697,697,,,697,,,,,,697,697,,697,697,697,697',
'697,697,697,697,,697,697,697,,697,697,,697,697,,,,,,,,,,,,,,,,,,,,,697',
',,697,,,697,,697,,697,,,,697,,,,,,,,697,,,,,697,697,697,697,697,697',
',,,697,697,,,,,,,697,,,697,701,701,701,,701,697,697,,701,701,,,,701',
',701,701,701,701,701,701,701,,,,,,701,701,701,701,701,701,701,,,701',
',,,,,,701,,,701,701,701,701,701,701,701,,701,701,701,,701,701,,,,,,',
',,,,,,,,,,,,,,,,,701,,,701,,,701,,701,,,,,,,,,,,,,,,,,,,701,701,701',
'701,701,701,,,,701,701,,,,,,,701,,,701,714,714,714,,714,701,701,,714',
'714,,,,714,,714,714,714,714,714,714,714,,,,,,714,714,714,714,714,714',
'714,,,714,,,,,,,714,,,714,714,714,714,714,714,714,,714,714,714,,714',
'714,,,,,,,,,,,,,,,,,,,,,,,,714,,,714,,,714,,714,,,,,,,,,,,,,,,,,,,714',
'714,714,714,714,714,,,,714,714,,,,,,,714,,,714,720,720,720,,720,714',
'714,,720,720,,,,720,,720,720,720,720,720,720,720,,,,,,720,720,720,720',
'720,720,720,,,720,,,,,,,720,,,720,720,720,720,720,720,720,,720,720,720',
',720,720,,720,720,,,,,,,,,,,,,,,,,,,,,720,,,720,,,720,,720,,720,,,,720',
',,,,,,,720,,,,,720,720,720,720,720,720,,,,720,720,,,,,,,720,,,720,757',
'757,757,,757,720,720,,757,757,,,,757,,757,757,757,757,757,757,757,,',
',,,757,757,757,757,757,757,757,,,757,,,,,,,757,,,757,757,757,757,757',
'757,757,,757,757,757,,757,757,,757,757,,,,,,,,,,,,,,,,,,,,,757,,,757',
',,757,,757,,757,,,,757,,,,,,,,757,,,,,757,757,757,757,757,757,,,,757',
'757,,,,,,,757,,,757,764,764,764,,764,757,757,,764,764,,,,764,,764,764',
'764,764,764,764,764,,,,,,764,764,764,764,764,764,764,,,764,,,,,,,764',
',,764,764,764,764,764,764,764,,764,764,764,,764,764,,764,764,,,,,,,',
',,,,,,,,,,,,,764,,,764,,,764,,764,,,,,,764,,,,,,,,764,,,,,764,764,764',
'764,764,764,,,,764,764,,,,,,,764,,,764,769,769,769,769,769,764,764,',
'769,769,,,,769,,769,769,769,769,769,769,769,,,,,,769,769,769,769,769',
'769,769,,,769,,,,,,769,769,,769,769,769,769,769,769,769,769,,769,769',
'769,,769,769,,769,769,,,,,,,,,,,,,,,,,,,,,769,,,769,,,769,,769,,769',
',,,769,,,,,,,,769,,,,,769,769,769,769,769,769,,,,769,769,,,,,,,769,',
',769,773,773,773,773,773,769,769,,773,773,,,,773,,773,773,773,773,773',
'773,773,,,,,,773,773,773,773,773,773,773,,,773,,,,,,773,773,,773,773',
'773,773,773,773,773,773,,773,773,773,,773,773,,773,773,,,,,,,,,,,,,',
',,,,,,,773,,,773,,,773,,773,,773,,,,773,,,,,,,,773,,,,,773,773,773,773',
'773,773,,,,773,773,,,,,,,773,,,773,774,774,774,774,774,773,773,,774',
'774,,,,774,,774,774,774,774,774,774,774,,,,,,774,774,774,774,774,774',
'774,,,774,,,,,,774,774,,774,774,774,774,774,774,774,774,,774,774,774',
',774,774,,774,774,,,,,,,,,,,,,,,,,,,,,774,,,774,,,774,,774,,774,,,,774',
',,,,,,,774,,,,,774,774,774,774,774,774,,,,774,774,,,,,,,774,,,774,777',
'777,777,,777,774,774,,777,777,,,,777,,777,777,777,777,777,777,777,,',
',,,777,777,777,777,777,777,777,,,777,,,,,,,777,,,777,777,777,777,777',
'777,777,,777,777,777,,777,777,,777,777,,,,,,,,,,,,,,,,,,,,,777,,,777',
',,777,,777,,,,,,777,,,,,,,,777,,,,,777,777,777,777,777,777,,,,777,777',
',,,,,,777,,,777,791,791,791,791,791,777,777,,791,791,,,,791,,791,791',
'791,791,791,791,791,,,,,,791,791,791,791,791,791,791,,,791,,,,,,791',
'791,,791,791,791,791,791,791,791,791,,791,791,791,,791,791,,791,791',
',,,,,,,,,,,,,,,,,,,,791,,,791,,,791,,791,,791,,,,791,,,,,,,,791,,,,',
'791,791,791,791,791,791,,,,791,791,,,,,,,791,,,791,797,797,797,,797',
'791,791,,797,797,,,,797,,797,797,797,797,797,797,797,,,,,,797,797,797',
'797,797,797,797,,,797,,,,,,,797,,,797,797,797,797,797,797,797,,797,797',
'797,,797,797,,797,797,,,,,,,,,,,,,,,,,,,,,797,,,797,,,797,,797,,,,,',
'797,,,,,,,,797,,,,,797,797,797,797,797,797,,,,797,797,,,,,,,797,,,797',
'798,798,798,,798,797,797,,798,798,,,,798,,798,798,798,798,798,798,798',
',,,,,798,798,798,798,798,798,798,,,798,,,,,,,798,,,798,798,798,798,798',
'798,798,,798,798,798,,798,798,,798,798,,,,,,,,,,,,,,,,,,,,,798,,,798',
',,798,,798,,,,,,798,,,,,,,,798,,,,,798,798,798,798,798,798,,,,798,798',
',,,,,,798,,,798,799,799,799,,799,798,798,,799,799,,,,799,,799,799,799',
'799,799,799,799,,,,,,799,799,799,799,799,799,799,,,799,,,,,,,799,,,799',
'799,799,799,799,799,799,,799,799,799,,799,799,,799,799,,,,,,,,,,,,,',
',,,,,,,799,,,799,,,799,,799,,,,,,799,,,,,,,,799,,,,,799,799,799,799',
'799,799,,,,799,799,,,,,,,799,,,799,810,810,810,,810,799,799,,810,810',
',,,810,,810,810,810,810,810,810,810,,,,,,810,810,810,810,810,810,810',
',,810,,,,,,,810,,,810,810,810,810,810,810,810,,810,810,810,,810,810',
',810,810,,,,,,,,,,,,,,,,,,,,,810,,,810,,,810,,810,,,,,,810,,,,,,,,810',
',,,,810,810,810,810,810,810,,,,810,810,,,,,,,810,,,810,811,811,811,',
'811,810,810,,811,811,,,,811,,811,811,811,811,811,811,811,,,,,,811,811',
'811,811,811,811,811,,,811,,,,,,,811,,,811,811,811,811,811,811,811,,811',
'811,811,,811,811,,811,811,,,,,,,,,,,,,,,,,,,,,811,,,811,,,811,,811,',
',,,,811,,,,,,,,811,,,,,811,811,811,811,811,811,,,,811,811,,,,,,,811',
',,811,812,812,812,,812,811,811,,812,812,,,,812,,812,812,812,812,812',
'812,812,,,,,,812,812,812,812,812,812,812,,,812,,,,,,,812,,,812,812,812',
'812,812,812,812,,812,812,812,,812,812,,812,812,,,,,,,,,,,,,,,,,,,,,812',
',,812,,,812,,812,,,,,,812,,,,,,,,812,,,,,812,812,812,812,812,812,,,',
'812,812,,,,,,,812,,,812,826,826,826,,826,812,812,,826,826,,,,826,,826',
'826,826,826,826,826,826,,,,,,826,826,826,826,826,826,826,,,826,,,,,',
',826,,,826,826,826,826,826,826,826,,826,826,826,,826,826,,826,826,,',
',,,,,,,,,,,,,,,,,,826,,,826,,,826,,826,,826,,,,826,,,,,,,,826,,,,,826',
'826,826,826,826,826,,,,826,826,,,,,,,826,,,826,837,837,837,837,837,826',
'826,,837,837,,,,837,,837,837,837,837,837,837,837,,,,,,837,837,837,837',
'837,837,837,,,837,,,,,,837,837,,837,837,837,837,837,837,837,837,,837',
'837,837,,837,837,,837,837,,,,,,,,,,,,,,,,,,,,,837,,,837,,,837,,837,',
'837,,,,837,,,,,,,,837,,,,,837,837,837,837,837,837,,,,837,837,,,,,,,837',
',,837,862,862,862,,862,837,837,,862,862,,,,862,,862,862,862,862,862',
'862,862,,,,,,862,862,862,862,862,862,862,,,862,,,,,,,862,,,862,862,862',
'862,862,862,862,,862,862,862,,862,862,,862,862,,,,,,,,,,,,,,,,,,,,,862',
',,862,,,862,,862,,,,,,862,,,,,,,,862,,,,,862,862,862,862,862,862,,,',
'862,862,,,,,,,862,,,862,864,864,864,864,864,862,862,,864,864,,,,864',
',864,864,864,864,864,864,864,,,,,,864,864,864,864,864,864,864,,,864',
',,,,,864,864,,864,864,864,864,864,864,864,864,,864,864,864,,864,864',
',864,864,,,,,,,,,,,,,,,,,,,,,864,,,864,,,864,,864,,864,,,,864,,,,,,',
',864,,,,,864,864,864,864,864,864,,,,864,864,,,,,,,864,,,864,865,865',
'865,865,865,864,864,,865,865,,,,865,,865,865,865,865,865,865,865,,,',
',,865,865,865,865,865,865,865,,,865,,,,,,865,865,,865,865,865,865,865',
'865,865,865,,865,865,865,,865,865,,865,865,,,,,,,,,,,,,,,,,,,,,865,',
',865,,,865,,865,,865,,,,865,,,,,,,,865,,,,,865,865,865,865,865,865,',
',,865,865,,,,,,,865,,,865,890,890,890,,890,865,865,,890,890,,,,890,',
'890,890,890,890,890,890,890,,,,,,890,890,890,890,890,890,890,,,890,',
',,,,,890,,,890,890,890,890,890,890,890,,890,890,890,,890,890,,890,890',
',,,,,,,,,,,,,,,,,,,,890,,,890,,,890,,890,,,,,,890,,,,,,,,890,,,,,890',
'890,890,890,890,890,,,,890,890,,,,,,,890,,,890,904,904,904,,904,890',
'890,,904,904,,,,904,,904,904,904,904,904,904,904,,,,,,904,904,904,904',
'904,904,904,,,904,,,,,,,904,,,904,904,904,904,904,904,904,,904,904,904',
',904,904,,904,904,,,,,,,,,,,,,,,,,,,,,904,,,904,,,904,,904,,,,,,904',
',,,,,,,904,,,,,904,904,904,904,904,904,,,,904,904,,,,,,,904,,,904,905',
'905,905,,905,904,904,,905,905,,,,905,,905,905,905,905,905,905,905,,',
',,,905,905,905,905,905,905,905,,,905,,,,,,,905,,,905,905,905,905,905',
'905,905,,905,905,905,,905,905,,905,905,,,,,,,,,,,,,,,,,,,,,905,,,905',
',,905,,905,,,,,,905,,,,,,,,905,,,,,905,905,905,905,905,905,,,,905,905',
',,,,,,905,,,905,906,906,906,,906,905,905,,906,906,,,,906,,906,906,906',
'906,906,906,906,,,,,,906,906,906,906,906,906,906,,,906,,,,,,,906,,,906',
'906,906,906,906,906,906,,906,906,906,,906,906,,906,906,,,,,,,,,,,,,',
',,,,,,,906,,,906,,,906,,906,,,,,,906,,,,,,,,906,,,,,906,906,906,906',
'906,906,,,,906,906,,,,,,,906,,,906,912,912,912,,912,906,906,,912,912',
',,,912,,912,912,912,912,912,912,912,,,,,,912,912,912,912,912,912,912',
',,912,,,,,,,912,,,912,912,912,912,912,912,912,912,912,912,912,,912,912',
',912,912,,,,,,,,,,,,,,,,,,,,,912,,,912,,,912,,912,,,,912,,912,,,,,,',
',912,,,,,912,912,912,912,912,912,,,,912,912,,,,,,,912,,,912,917,917',
'917,917,917,912,912,,917,917,,,,917,,917,917,917,917,917,917,917,,,',
',,917,917,917,917,917,917,917,,,917,,,,,,917,917,,917,917,917,917,917',
'917,917,917,,917,917,917,,917,917,,917,917,,,,,,,,,,,,,,,,,,,,,917,',
',917,,,917,,917,,917,,,,917,,,,,,,,917,,,,,917,917,917,917,917,917,',
',,917,917,,,,,,,917,,,917,921,921,921,,921,917,917,,921,921,,,,921,',
'921,921,921,921,921,921,921,,,,,,921,921,921,921,921,921,921,,,921,',
',,,,,921,,,921,921,921,921,921,921,921,,921,921,921,,921,921,,,,,,,',
',,,,,,,,,,,,,,,,921,,,921,,,921,,921,,,,,,,,,,,,,,,,,,,921,921,921,921',
'921,921,,,,921,921,,,,,,,921,,,921,934,934,934,,934,921,921,,934,934',
',,,934,,934,934,934,934,934,934,934,,,,,,934,934,934,934,934,934,934',
',,934,,,,,,,934,,,934,934,934,934,934,934,934,,934,934,934,,934,934',
',934,934,,,,,,,,,,,,,,,,,,,,,934,,,934,,,934,,934,,934,,,,934,,,,,,',
',934,,,,,934,934,934,934,934,934,,,,934,934,,,,,,,934,,,934,935,935',
'935,935,935,934,934,,935,935,,,,935,,935,935,935,935,935,935,935,,,',
',,935,935,935,935,935,935,935,,,935,,,,,,935,935,,935,935,935,935,935',
'935,935,935,,935,935,935,,935,935,,935,935,,,,,,,,,,,,,,,,,,,,,935,',
',935,,,935,,935,,935,,,,935,,,,,,,,935,,,,,935,935,935,935,935,935,',
',,935,935,,,,,,,935,,,935,938,938,938,938,938,935,935,,938,938,,,,938',
',938,938,938,938,938,938,938,,,,,,938,938,938,938,938,938,938,,,938',
',,,,,938,938,,938,938,938,938,938,938,938,938,,938,938,938,,938,938',
',938,938,,,,,,,,,,,,,,,,,,,,,938,,,938,,,938,,938,,938,,,,938,,,,,,',
',938,,,,,938,938,938,938,938,938,,,,938,938,,,,,,,938,,,938,958,958',
'958,,958,938,938,,958,958,,,,958,,958,958,958,958,958,958,958,,,,,,958',
'958,958,958,958,958,958,,,958,,,,,,,958,,,958,958,958,958,958,958,958',
',958,958,958,,958,958,,958,958,,,,,,,,,,,,,,,,,,,,,958,,,958,,,958,',
'958,,958,,958,,958,,,,,,,,958,,,,,958,958,958,958,958,958,,,,958,958',
',,,,,,958,,,958,960,960,960,960,960,958,958,,960,960,,,,960,,960,960',
'960,960,960,960,960,,,,,,960,960,960,960,960,960,960,,,960,,,,,,960',
'960,,960,960,960,960,960,960,960,960,,960,960,960,,960,960,,960,960',
',,,,,,,,,,,,,,,,,,,,960,,,960,,,960,,960,,960,,,,960,,,,,,,,960,,,,',
'960,960,960,960,960,960,,,,960,960,,,,,,,960,,,960,973,973,973,973,973',
'960,960,,973,973,,,,973,,973,973,973,973,973,973,973,,,,,,973,973,973',
'973,973,973,973,,,973,,,,,,973,973,,973,973,973,973,973,973,973,973',
',973,973,973,,973,973,,973,973,,,,,,,,,,,,,,,,,,,,,973,,,973,,,973,',
'973,,973,,,,973,,,,,,,,973,,,,,973,973,973,973,973,973,,,,973,973,,',
',,,,973,,,973,978,978,978,978,978,973,973,,978,978,,,,978,,978,978,978',
'978,978,978,978,,,,,,978,978,978,978,978,978,978,,,978,,,,,,978,978',
',978,978,978,978,978,978,978,978,,978,978,978,,978,978,,978,978,,,,',
',,,,,,,,,,,,,,,,978,,,978,,,978,,978,,978,,,,978,,,,,,,,978,,,,,978',
'978,978,978,978,978,,,,978,978,,,,,,,978,,,978,986,986,986,986,986,978',
'978,,986,986,,,,986,,986,986,986,986,986,986,986,,,,,,986,986,986,986',
'986,986,986,,,986,,,,,,986,986,,986,986,986,986,986,986,986,986,,986',
'986,986,,986,986,,986,986,,,,,,,,,,,,,,,,,,,,,986,,,986,,,986,,986,',
'986,,,,986,,,,,,,,986,,,,,986,986,986,986,986,986,,,,986,986,,,,,,,986',
',,986,990,990,990,,990,986,986,,990,990,,,,990,,990,990,990,990,990',
'990,990,,,,,,990,990,990,990,990,990,990,,,990,,,,,,,990,,,990,990,990',
'990,990,990,990,990,990,990,990,,990,990,,990,990,,,,,,,,,,,,,,,,,,',
',,990,,,990,,,990,,990,,990,,,,990,,,,,,,,990,,,,445,990,990,990,990',
'990,990,445,445,445,990,990,,445,445,,445,,990,,,990,,,,445,,990,990',
',,,,,,,445,445,,445,445,445,445,445,,,,,,,,,,,,,,,,,,,,,,445,445,445',
'445,445,445,445,445,445,445,445,445,445,445,445,,,445,445,445,,445,',
',,445,,,,,,445,,445,,445,445,445,445,445,445,445,,445,445,445,,,,,,',
',,,,,,445,445,,445,,445,,447,445,,445,,,445,447,447,447,,,,447,447,',
'447,,,,,,,,,,,,,,,,,,,,447,447,,447,447,447,447,447,,,,,,,,,,,,,,,,',
',,,,,447,447,447,447,447,447,447,447,447,447,447,447,447,447,447,,,447',
'447,447,,447,,,,447,,,,,,447,,447,,447,447,447,447,447,447,447,,447',
',447,,,,,,,,,,,,,447,447,,447,,447,,662,447,,447,,,447,662,662,662,',
',662,662,662,,662,,,,,,,,,662,662,662,,,,,,,,,662,662,,662,662,662,662',
'662,,,,,,,,,,,,,,,,,,,,,,662,662,662,662,662,662,662,662,662,662,662',
'662,662,662,662,,,662,662,662,,662,662,,,662,,662,,662,,662,,662,,662',
'662,662,662,662,662,662,,662,662,662,,,,,,,,,,,,,662,662,662,662,,662',
',663,662,,662,,,662,663,663,663,,,663,663,663,,663,,,,,,,,,,663,663',
',,,,,,,,663,663,,663,663,663,663,663,,,,,,,,,,,,,,,,,,,,,,663,663,663',
'663,663,663,663,663,663,663,663,663,663,663,663,,,663,663,663,,663,663',
',,663,,663,,663,,663,,663,,663,663,663,663,663,663,663,,663,,663,,,',
',,,,,,,,,663,663,663,663,,663,,28,663,,663,,,663,28,28,28,,,28,28,28',
',28,,,,,,,,,,28,28,,,,,,,,,28,28,,28,28,28,28,28,,,,,,,,,,,,,,,,,,,',
',,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,,,28,28,28,,,28,,28,28',
',28,,28,,28,,28,,28,28,28,28,28,28,28,,28,,28,,,,,,,,,,,,,28,28,28,28',
'50,28,,,28,,28,50,50,50,,,50,50,50,,50,,,,,,,,,,50,50,50,,,,,,,,50,50',
',50,50,50,50,50,,,,,,,,,,,,,,,,,,,,,,50,50,50,50,50,50,50,50,50,50,50',
'50,50,50,50,,,50,50,50,,,50,,,50,,50,,50,,50,,50,,50,50,50,50,50,50',
'50,,50,,50,,,,,,,,,,,,,50,50,50,50,504,50,,50,50,,50,504,504,504,,,504',
'504,504,,504,,,,,,,,,,504,,,,,,,,,,504,504,,504,504,504,504,504,,,,',
',,,,,,,505,,,,,,,505,505,505,,,505,505,505,,505,,,,,504,504,,,,505,',
',504,,,,,504,504,505,505,,505,505,505,505,505,,,,,,,,,,,,504,,,,,,,',
',,,,,504,,504,,,504,,,505,505,,506,,,,,505,,506,506,506,505,505,506',
'506,506,,506,,,,,,,,,,506,,,,,505,,,,,506,506,,506,506,506,506,506,505',
',505,,,505,202,202,,,202,,,,,,,,,202,202,202,202,202,202,202,202,202',
',,202,202,506,506,,,202,202,202,202,506,,,,,506,506,,,,,202,202,,202',
'202,202,202,202,202,202,202,202,202,202,,506,202,,,,,,,,,,,,506,,506',
',,506,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,,,,7,7,7,7,7,7',
'7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,,7,,,,,,,,,7,7,7,7,7,7,7,7,7,,,7',
'7,,,,,7,7,7,7,,,,,,,,,,,,7,7,,7,7,7,7,7,7,7,7,7,7,7,,,7,7,,,,,,,,,,7',
'8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,,,,8,8,8,8,8,8,8,8,8',
'8,8,8,8,8,8,8,8,8,8,8,8,8,8,,,8,,,,,,,,,8,8,8,8,8,8,8,8,8,,,8,8,,,,',
'8,8,8,8,,,,,,,,,,,,8,8,,8,8,8,8,8,8,8,8,8,8,8,,,8,8,,,,,,,,,,8,420,420',
'420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420',
'420,420,420,420,420,,,,420,420,420,420,420,420,420,420,420,420,420,420',
'420,420,420,420,420,420,420,420,420,420,420,,,420,,,,,,,,,420,420,420',
'420,420,420,420,420,420,,,420,420,,,,,420,420,420,420,,,,,,,,,,,,420',
'420,,420,420,420,420,420,420,420,420,420,420,420,,,420,420,,,,,,,,,',
'420,424,424,424,424,424,424,424,424,424,424,424,424,424,424,424,424',
'424,424,424,424,424,424,424,424,,,,424,424,424,424,424,424,424,424,424',
'424,424,424,424,424,424,424,424,424,424,424,424,424,424,,,424,,,,,,',
',,424,424,424,424,424,424,424,424,424,,,424,424,,,,,424,424,424,424',
',,,,,,,,,,,424,424,,424,424,424,424,424,424,424,424,424,424,424,,,424',
'424,,,,,,,,,,424,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65',
'65,65,65,65,65,65,65,,,,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65',
'65,65,65,65,65,65,65,65,65,65,65,,65,,,,,,,65,65,65,65,65,65,65,65,65',
',,65,65,,,,,65,65,65,65,,,,,,65,,,,,,65,65,,65,65,65,65,65,65,65,65',
'65,65,65,,,65,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79',
'79,79,79,79,79,79,,,,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79',
'79,79,79,79,79,79,79,79,79,79,,79,,,,,,,79,79,79,79,79,79,79,79,79,',
',79,79,,,,,79,79,79,79,,,,,,,,,,,,79,79,,79,79,79,79,79,79,79,79,79',
'79,79,,,79,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192',
'192,192,192,192,192,192,192,192,192,,,,192,192,192,192,192,192,192,192',
'192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192',
'192,,192,,,,,,,192,192,192,192,192,192,192,192,192,,,192,192,,,,,192',
'192,192,192,,,,,,,,,,,,192,192,,192,192,192,192,192,192,192,192,192',
'192,192,,,192,788,788,788,788,788,788,788,788,788,788,788,788,788,788',
'788,788,788,788,788,788,788,788,788,788,,,,788,788,788,788,788,788,788',
'788,788,788,788,788,788,788,788,788,788,788,788,788,788,788,788,,,788',
',,,,,,,,788,788,788,788,788,788,788,788,788,,,788,788,,,,,788,788,788',
'788,,,,,,,,,,,,788,788,,788,788,788,788,788,788,788,788,788,788,788',
'201,201,788,,201,,,,,,,,,201,201,201,201,201,201,201,201,201,,,201,201',
',,,,201,201,201,201,,,,,,201,,,,,,201,201,,201,201,201,201,201,201,201',
'201,201,201,201,203,203,201,,203,,,,,,,,,203,203,203,203,203,203,203',
'203,203,,,203,203,,,,,203,203,203,203,,,,,,,,,,,,203,203,,203,203,203',
'203,203,203,203,203,203,203,203,265,265,203,,265,,,,,,,,,265,265,265',
'265,265,265,265,265,265,,,265,265,,,,,265,265,265,265,,,,,,,,,,,,265',
'265,,265,265,265,265,265,265,265,265,265,265,265,266,266,265,,266,,',
',,,,,,266,266,266,266,266,266,266,266,266,,,266,266,,,,,266,266,266',
'266,,,,,,,,,,,,266,266,,266,266,266,266,266,266,266,266,266,266,266',
'267,267,266,,267,,,,,,,,,267,267,267,267,267,267,267,267,267,,,267,267',
',,,,267,267,267,267,,,,,,,,,,,,267,267,,267,267,267,267,267,267,267',
'267,267,267,267,458,458,267,,458,,,,,,,,,458,458,458,458,458,458,458',
'458,458,,,458,458,,,,,458,458,458,458,,,,,,458,,,,,,458,458,,458,458',
'458,458,458,458,458,458,458,458,458,459,459,458,,459,,,,,,,,,459,459',
'459,459,459,459,459,459,459,,,459,459,,,,,459,459,459,459,,,,,,,,,,',
',459,459,,459,459,459,459,459,459,459,459,459,459,459,531,531,459,,531',
',,,,,,,,531,531,531,531,531,531,531,531,531,,,531,531,,,,,531,531,531',
'531,,,,,,531,,,,,,531,531,,531,531,531,531,531,531,531,531,531,531,531',
'532,532,531,,532,,,,,,,,,532,532,532,532,532,532,532,532,532,,,532,532',
',,,,532,532,532,532,,,,,,,,,,,,532,532,,532,532,532,532,532,532,532',
'532,532,532,532,534,534,532,,534,,,,,,,,,534,534,534,534,534,534,534',
'534,534,,,534,534,,,,,534,534,534,534,,,,,,,,,,,,534,534,,534,534,534',
'534,534,534,534,534,534,534,534,545,545,534,,545,,,,,,,,,545,545,545',
'545,545,545,545,545,545,,,545,545,,,,,545,545,545,545,,,,,,545,,,,,',
'545,545,,545,545,545,545,545,545,545,545,545,545,545,546,546,545,,546',
',,,,,,,,546,546,546,546,546,546,546,546,546,,,546,546,,,,,546,546,546',
'546,,,,,,,,,,,,546,546,,546,546,546,546,546,546,546,546,546,546,546',
'602,602,546,,602,,,,,,,,,602,602,602,602,602,602,602,602,602,,,602,602',
',,,,602,602,602,602,,,,,,602,,,,,,602,602,,602,602,602,602,602,602,602',
'602,602,602,602,603,603,602,,603,,,,,,,,,603,603,603,603,603,603,603',
'603,603,,,603,603,,,,,603,603,603,603,,,,,,,,,,,,603,603,,603,603,603',
'603,603,603,603,603,603,603,603,609,609,603,,609,,,,,,,,,609,609,609',
'609,609,609,609,609,609,,,609,609,,,,,609,609,609,609,,,,,,,,,,,,609',
'609,,609,609,609,609,609,609,609,609,609,609,609,611,611,609,,611,,',
',,,,,,611,611,611,611,611,611,611,611,611,,,611,611,,,,,611,611,611',
'611,,,,,,611,,,,,,611,611,,611,611,611,611,611,611,611,611,611,611,611',
'740,740,611,,740,,,,,,,,,740,740,740,740,740,740,740,740,740,,,740,740',
',,,,740,740,740,740,,,,,,,,,,,,740,740,,740,740,740,740,740,740,740',
'740,740,740,740,991,991,740,,991,,,,,,,,,991,991,991,991,991,991,991',
'991,991,,,991,991,,,,,991,991,991,991,,,,,,991,,,,,,991,991,,991,991',
'991,991,991,991,991,991,991,991,991,992,992,991,,992,,,,,,,,,992,992',
'992,992,992,992,992,992,992,,,992,992,,,,,992,992,992,992,,,,,,,,,,',
',992,992,,992,992,992,992,992,992,992,992,992,992,992,,,992' ]
        racc_action_check = arr = ::Array.new(25592, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_action_pointer = [
    -2,    14,   nil,   -46,   nil,   868,   -84, 23545, 23666,   -49,
   -58,   -19,    52,   616,   375,   513,   nil,   129,   260,  1832,
   130,   nil,   391,   522,   653,   394,   -19,   784, 23030,   nil,
   915,  1046,  1177,   nil,    72,   506,   148,   542,  1308,  1439,
  1570,    92,   679,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
 23157,   nil,  1701,  1832,  1963,   -15,  1190,  2094,  2225,   nil,
   nil,  2356,  2487,  2618,   nil, 24029,   nil,   nil,   nil,   nil,
   nil,   -15,   nil,   nil,   nil,   nil,   nil,   100,   132, 24139,
   nil,   nil,   nil,   605,  2749,   nil,   nil,  2880,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   273,   nil,  3011,
   nil,   nil,   nil,  3142,  3273,  3404,  3535,  3666,  3797,   nil,
   566,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil, 24249,   181,   nil,  3928,  4059,  4190,  4321,  4452,
  4583, 24418, 23418, 24477,  4714,  4845,  4976,   nil,   747,   -63,
   261,   -51,   194,   260,  5107,  5238,   nil,   nil,  5369,   281,
  5500,  5631,  5762,  5893,  6024,  6155,  6286,  6417,  6548,  6679,
  6810,  6941,  7072,  7203,  7334,  7465,  7596,  7727,  7858,  7989,
  8120,  8251,  8382,  8513,  8644,   nil,   nil,   nil,   nil,  1963,
   nil,   257,   265,   nil,  8775,   351,  8906,   nil,   nil,   nil,
   nil,   nil,  9037,   nil,   nil, 24536, 24595, 24654,   378,  9168,
  9299,   nil,   nil,   nil,   nil,   nil,   nil,   nil,  9430,   146,
   954,   409,  9561,   424,   437,   412,  9692,  9823,    17,   810,
   493,    39,   470,   445,   -14,   nil,   516,   618,   488,  9954,
   nil,   526,   551,   555,   941,   nil,   557,   nil, 10085,   nil,
 10216,   660,   nil,   505,   -89,   -47,   538,   523,   114,   558,
   nil,   nil,   -21,  2500,   nil,   nil,   nil,   524,   517,   532,
   541,   nil,   543,   554,   nil, 10347,   nil,   nil,   nil,   640,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   800,   nil,   nil,
   nil,   644,   nil,   nil,   662,   682,    -7,     0, 10478, 10609,
   374,   350,   587,    -2,  1039,   666,     0,   699,   nil,   nil,
  1033,   671,   nil,  1043,   nil,    68,   nil,   nil, 10740,   148,
   351,   379,   396,   397,   410,   438,   504,   nil,   517,   nil,
 10871,   nil,   285,   nil,   399,   nil,   507,   614,   416,   nil,
   620,   -33,   nil,   528,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   633,
 23787,   nil,   nil,   nil, 23908,   641,   nil,   nil,  1308,   nil,
 11002,   628,   nil,   633,   nil,   nil,  2094,   669,   672,   563,
   595, 11133,   nil,   nil,   nil, 22510,   687, 22640,   nil, 11264,
 11395, 11526,   nil,   nil,   nil,  2225,   nil,   nil, 24713, 24772,
 11657, 11788,    98, 11919, 12050, 12181,    44,   nil,  3928,  4059,
   260,   657,   716,   724,   728,   731,  5625,  5756,  2511,  4190,
  2612,  4315,  4452,  4583,  4714,  4845,  4976,  5107,  5238,   677,
   939,  5369,  5500, 12312,   -35,   nil, 12443,   nil, 12574,   nil,
 12705,   nil,   167,   nil, 23284, 23339, 23418,   -34,   nil,   674,
   nil,   nil,   672,   674,   nil,   nil, 12836,    -7,   166,   719,
   nil,   nil, 12967,   721,   694,   nil,   nil,   695, 13098,   735,
 13229, 24831, 24890, 13360, 24949,   170,   737,   nil,   nil, 13491,
   701,   nil, 13622, 13753, 13884, 25008, 25067,  2356, 14015,   821,
   821,   720,   nil,   nil, 14146,   nil,   nil, 14277,   nil,   nil,
   nil,   nil, 14408, 14539,   756,   nil,  2631,   nil,   nil, 14670,
   282,   nil,   nil,   635,  9705,   nil,   412,   nil,  1070,   795,
   nil,   nil,   761,   nil,   931,   nil,   737,   812,   nil,   nil,
 14801,   855,   nil,   nil, 14932,   203,   204,   855,   865, 15063,
   nil, 15194, 25126, 25185, 15325,    16,   nil,  1140,   nil, 25244,
 15456, 25303,   nil,   nil, 15587,   461, 15718,   nil,  9967,   nil,
   nil,   nil,    31,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   244,   nil,   nil,   nil,   749,   nil,   nil,
   nil,   nil,   nil, 15849,   756, 15980,   609,   202, 16111, 16242,
   790,   nil,   nil,   nil, 16373,   791,   nil, 16504,   795,   nil,
   283,   298, 22770, 22900,   798,   800,  1439,   nil,  1701,   nil,
 10360,   nil, 16635,   778,   nil,   825, 16766,   nil,   nil, 16897,
   nil,   nil,   nil,   nil,   nil,   nil, 17028,   nil,   824, 17159,
 17290,  1570,   789,   nil,   nil,   834, 17421, 17552,   nil,  1109,
   -25, 17683,   801,   nil,   836,   207,   229,   840,   252,   260,
   842,   848,   853,   828, 17814,  2749,   893,   896,    66,   956,
 17945,   nil,   884,   292,   nil,   867,   971,   nil,   nil,   nil,
   856,   872,  1174,   873,   nil,   nil,   876,   879,   nil,   881,
 25362,   nil,   nil,   919,  1033,   nil,   723,   nil,   997,   nil,
   nil,   nil,   nil,   nil,  1003,   nil,  1004, 18076,   923,    29,
    40,    80,   121,   924, 18207,  1481,   nil,   931,   929, 18338,
   481,   nil,   212, 18469, 18600, 10753,   483, 18731,   nil,   897,
   912,   nil,   917,   919,   920,   nil,   915,   nil, 24359,   965,
   899, 18862,   nil,   nil,   nil,  2880,   933, 18993, 19124, 19255,
   nil,  3011,   nil,  3142,   nil,   nil,  3273,   nil,  3404,   nil,
 19386, 19517, 19648,   301,   321,   nil,   954,   939,   943,  1064,
   nil,   nil,   nil,   972,   nil,   962, 19779,   nil,   980,  1083,
   967,   232,   nil,   nil,   nil,  1093,   nil, 19910,   979,  1021,
   nil,   nil,   nil,   nil,   nil,   nil,   543,   nil,   674,   nil,
   nil, 13111,   nil,   805,   nil,   nil,  1022,   nil,   nil,   439,
  1103,   nil, 20041,  1104, 20172, 20303,   nil,   nil,    45,    50,
  1743,   229,   nil,  1105,   nil,   nil,  1109,  1115,  1002,   nil,
   nil,   362,   nil,   nil, 13504,   nil,   335,   nil,   493,   nil,
 20434,   nil,   nil,   nil,   nil,   nil,   nil,   nil,  1016,  1003,
   nil,  3535,   nil,  3666, 20565, 20696, 20827,   nil,  1024,  1082,
   nil,   nil, 20958,  1007,   nil,   nil,   nil, 21089,   nil,   nil,
    72, 21220,   nil,  1009,  1010,  1012,  1014,  1017,  1207,   nil,
    76,   nil,  1135,  1136, 21351, 21482,   nil,   nil, 21613,   nil,
   nil,  1063,   nil,  1029,   nil,  1030,  1031,  1039,  1033,   nil,
   nil, 14683,   nil,  3797,   nil,   327,   nil,   nil, 21744,   nil,
 21875,    80,  1874,  1117,    84,   nil,   nil,   936,   nil,   nil,
   nil,  2474,  1047, 22006,   nil,   nil,   nil,   469, 22137,  1168,
   nil,   nil,   466,   nil,   nil,   nil, 22268,   nil,  1132,  1179,
 22399, 25421, 25480,    88,  1063,  1064,  2517,   770,   nil,   nil,
   nil,  1182,   nil,  1067,  1193,   nil,   nil,  1112,    96,   110,
   176,   211,   nil,   nil,   nil,   nil,   nil,   129 ]

racc_action_default = [
    -3,  -580,    -1,  -568,    -4,    -6,  -580,  -580,  -580,  -580,
  -580,  -580,  -580,  -580,  -281,   -37,   -38,  -580,  -580,   -43,
   -45,   -46,  -294,  -332,  -333,   -50,  -259,  -400,  -259,   -65,
   -10,   -69,   -77,   -79,  -580,  -475,  -580,  -580,  -580,  -580,
  -580,  -570,  -235,  -274,  -275,  -276,  -277,  -278,  -279,  -280,
  -558,  -283,  -580,  -579,  -549,  -302,  -579,  -580,  -580,  -307,
  -310,  -568,  -580,  -580,  -324,  -580,  -334,  -335,  -418,  -419,
  -420,  -421,  -422,  -579,  -425,  -579,  -579,  -579,  -579,  -579,
  -452,  -458,  -459,  -580,  -464,  -465,  -466,  -467,  -468,  -469,
  -470,  -471,  -472,  -473,  -474,  -477,  -478,  -580,    -2,  -569,
  -575,  -576,  -577,  -580,  -580,  -580,  -580,  -580,    -3,   -13,
  -580,  -106,  -107,  -108,  -109,  -110,  -111,  -112,  -115,  -116,
  -117,  -118,  -119,  -120,  -121,  -122,  -123,  -124,  -125,  -126,
  -127,  -128,  -129,  -130,  -131,  -132,  -133,  -134,  -135,  -136,
  -137,  -138,  -139,  -140,  -141,  -142,  -143,  -144,  -145,  -146,
  -147,  -148,  -149,  -150,  -151,  -152,  -153,  -154,  -155,  -156,
  -157,  -158,  -159,  -160,  -161,  -162,  -163,  -164,  -165,  -166,
  -167,  -168,  -169,  -170,  -171,  -172,  -173,  -174,  -175,  -176,
  -177,  -178,  -179,  -180,  -181,  -182,  -183,  -184,  -185,  -186,
  -187,  -188,  -580,   -18,  -113,   -10,  -580,  -580,  -580,  -579,
  -579,  -580,  -580,  -580,  -580,  -580,  -580,   -41,  -580,  -475,
  -580,  -281,  -580,  -580,   -10,  -580,   -42,  -225,  -580,  -580,
  -580,  -580,  -580,  -580,  -580,  -580,  -580,  -580,  -580,  -580,
  -580,  -580,  -580,  -580,  -580,  -580,  -580,  -580,  -580,  -580,
  -580,  -580,  -580,  -580,  -580,  -232,  -387,  -389,   -47,  -236,
  -252,  -266,  -266,  -256,  -580,  -267,  -580,  -294,  -332,  -333,
  -579,  -551,  -580,   -48,   -49,  -580,  -580,  -580,   -55,  -579,
  -580,  -301,  -393,  -401,  -403,   -63,  -399,   -64,  -580,  -568,
   -11,   -65,   -10,  -580,  -580,   -70,   -73,   -10,  -475,  -580,
  -580,  -281,  -297,  -570,  -580,  -336,  -400,  -580,   -75,  -580,
   -81,  -289,  -460,  -461,  -580,  -210,  -211,  -226,  -580,  -571,
   -10,  -285,  -237,  -570,  -572,  -572,  -580,  -580,  -572,  -580,
  -303,  -304,  -580,  -580,  -347,  -348,  -355,  -579,  -513,  -546,
  -546,  -369,  -579,  -579,  -386,  -485,  -486,  -488,  -489,  -491,
  -492,  -512,  -514,  -515,  -516,  -517,  -518,  -580,  -533,  -538,
  -539,  -541,  -542,  -543,  -580,   -44,  -580,  -580,  -580,  -580,
  -568,  -580,  -569,  -475,  -580,  -580,  -281,  -580,  -520,  -521,
  -102,  -580,  -104,  -580,  -281,  -580,  -321,  -475,  -580,  -106,
  -107,  -144,  -145,  -161,  -166,  -173,  -176,  -327,  -580,  -547,
  -580,  -423,  -580,  -438,  -580,  -440,  -580,  -580,  -580,  -430,
  -580,  -580,  -436,  -580,  -451,  -453,  -454,  -455,  -456,  -462,
  -463,  1018,    -5,  -578,   -19,   -20,   -21,   -22,   -23,  -580,
  -580,   -15,   -16,   -17,  -580,  -580,   -25,   -34,  -189,  -267,
  -580,  -580,   -26,   -35,   -36,   -27,  -191,  -580,  -580,  -559,
  -560,  -579,  -396,  -561,  -562,  -559,  -259,  -560,  -398,  -564,
  -565,  -579,  -559,  -560,   -33,  -199,   -39,   -40,  -580,  -580,
  -579,  -579,  -289,  -580,  -580,  -580,  -580,  -300,  -200,  -201,
  -202,  -203,  -204,  -205,  -206,  -207,  -212,  -213,  -214,  -215,
  -216,  -217,  -218,  -219,  -220,  -221,  -222,  -223,  -224,  -227,
  -228,  -229,  -230,  -580,  -579,  -253,  -580,  -254,  -580,  -264,
  -580,  -268,  -580,  -554,  -259,  -259,  -259,  -579,   -56,  -570,
  -247,  -248,  -266,  -266,  -260,  -261,  -580,  -579,  -579,  -580,
  -296,    -9,  -569,  -580,   -66,  -287,   -82,   -71,  -580,  -580,
  -579,  -580,  -580,  -579,  -580,  -289,  -580,  -460,  -461,  -580,
   -78,   -83,  -580,  -580,  -580,  -580,  -580,  -231,  -580,  -410,
  -580,  -570,  -238,  -239,  -574,  -573,  -241,  -574,  -292,  -293,
  -550,  -344,   -10,   -10,  -580,  -346,  -580,  -371,  -382,  -580,
  -580,  -367,  -368,  -580,  -377,  -379,  -580,  -384,  -484,  -580,
  -490,  -513,  -580,  -522,  -580,  -524,  -526,  -532,  -540,  -544,
   -10,  -337,  -338,  -339,   -10,  -580,  -580,  -580,  -580,   -10,
  -405,  -579,  -580,  -580,  -579,  -289,  -316,  -102,  -103,  -580,
  -579,  -580,  -319,  -479,  -580,  -580,  -580,  -325,  -511,  -329,
  -566,  -567,  -570,  -424,  -439,  -442,  -443,  -445,  -426,  -441,
  -427,  -428,  -429,  -580,  -432,  -434,  -435,  -580,  -457,    -7,
   -14,  -114,   -24,  -580,  -273,  -580,  -290,  -291,  -580,  -580,
   -59,  -245,  -246,  -394,  -580,   -61,  -397,  -580,   -57,  -395,
  -559,  -560,  -559,  -560,  -580,  -580,  -189,  -299,  -580,  -358,
  -570,  -360,   -10,  -266,  -265,  -269,  -580,  -552,  -553,  -580,
   -51,  -390,   -52,  -391,   -53,  -392,   -10,  -243,  -580,  -249,
  -251,   -43,  -580,  -258,  -262,  -580,   -10,   -10,  -295,   -12,
   -66,  -580,   -74,   -80,  -580,  -559,  -560,  -579,  -563,  -288,
  -580,  -580,  -579,   -76,  -580,  -198,  -208,  -209,  -580,  -579,
  -579,  -284,  -580,  -572,  -242,  -580,  -580,  -345,  -356,  -370,
  -579,  -579,  -357,  -546,  -487,  -545,  -579,  -579,  -534,  -579,
  -580,  -289,  -519,  -580,  -580,  -531,  -579,  -340,  -579,  -308,
  -341,  -342,  -343,  -311,  -580,  -314,  -580,  -580,  -580,  -559,
  -560,  -563,  -288,  -580,  -580,  -102,  -105,  -563,  -580,   -10,
  -580,  -481,  -580,   -10,   -10,  -511,  -580,  -494,  -495,  -546,
  -546,  -500,  -502,  -502,  -502,  -510,  -513,  -536,  -580,  -580,
  -580,   -10,  -431,  -433,  -437,  -190,  -271,  -580,  -580,  -580,
   -30,  -194,   -31,  -195,   -60,   -32,  -196,   -62,  -197,   -58,
  -580,  -580,  -580,  -291,  -290,  -233,  -580,  -570,  -362,  -580,
  -255,  -270,  -555,  -580,  -244,  -266,  -580,  -263,  -580,  -580,
   -72,  -290,  -291,   -84,  -298,  -579,  -353,   -10,  -411,  -579,
  -412,  -413,  -286,  -240,  -349,  -350,  -580,  -380,  -580,  -383,
  -366,  -580,  -374,  -580,  -376,  -385,  -288,  -523,  -525,  -528,
  -580,  -351,  -580,  -580,   -10,   -10,  -313,  -315,  -580,  -290,
   -94,  -580,  -290,  -580,  -480,  -322,  -580,  -580,  -570,  -483,
  -493,  -580,  -498,  -499,  -580,  -506,  -580,  -508,  -580,  -509,
  -580,  -330,  -548,  -444,  -447,  -448,  -449,  -450,  -580,  -272,
   -28,  -192,   -29,  -193,  -580,  -580,  -580,  -359,  -580,  -580,
  -388,   -54,  -250,  -266,  -402,  -404,    -8,   -10,  -417,  -354,
  -580,  -580,  -415,  -579,  -579,  -579,  -579,  -527,  -580,  -305,
  -580,  -306,  -580,  -580,  -580,   -10,  -317,  -320,   -10,  -326,
  -328,  -580,  -496,  -546,  -501,  -502,  -502,  -502,  -580,  -537,
  -535,  -511,  -446,  -234,  -361,  -570,  -364,  -257,  -580,  -416,
   -10,  -475,  -580,  -580,  -281,  -414,  -381,  -580,  -372,  -375,
  -378,  -580,  -530,   -10,  -309,  -312,  -269,  -579,   -10,  -580,
  -482,  -497,  -580,  -504,  -505,  -507,   -10,  -363,  -580,  -410,
  -579,  -580,  -580,  -289,  -579,  -529,  -580,  -579,  -406,  -407,
  -408,  -580,  -323,  -502,  -580,  -365,  -409,  -580,  -559,  -560,
  -563,  -288,  -373,  -352,  -318,  -503,  -331,  -290 ]

clist = [
'13,387,316,598,719,295,295,114,114,250,250,250,324,98,334,405,5,208',
'208,308,427,434,208,208,208,508,109,194,102,285,13,289,289,117,117,728',
'295,295,571,572,313,356,357,540,497,360,550,774,590,594,677,375,208',
'208,216,785,858,208,208,738,99,208,364,373,298,114,582,835,860,553,556',
'361,281,560,392,949,272,276,1,114,816,749,753,2,412,916,102,414,415',
'416,417,193,608,441,446,451,863,283,369,13,252,252,252,208,208,208,208',
'13,13,677,659,972,394,396,420,5,403,26,493,906,251,251,251,418,5,248',
'263,264,405,509,687,695,318,514,26,26,624,672,389,26,26,26,634,317,320',
'321,367,26,437,438,686,268,275,277,995,612,388,504,505,506,696,697,619',
'681,683,685,310,551,358,26,26,949,864,359,26,26,865,764,26,978,769,616',
'938,568,378,773,313,313,575,577,618,419,114,788,951,13,208,208,208,208',
'208,322,450,561,208,208,208,736,674,955,674,247,785,494,13,208,26,517',
'518,998,26,26,26,26,26,26,757,908,693,839,583,920,426,432,435,391,398',
'633,401,754,454,893,677,790,791,878,624,734,942,945,,,,,12,,250,250',
',,295,502,,,,250,724,,,208,208,536,702,295,,,,,208,564,,334,13,713,12',
',289,13,,521,,552,,,431,431,,541,10,289,,,,743,102,497,,,858,295,13',
',26,26,26,26,26,26,527,1013,728,26,26,26,281,999,,,10,281,766,26,26',
'738,,578,522,,,,,,595,596,272,,276,513,252,523,441,446,295,12,529,,252',
'936,208,208,368,12,12,,,,617,512,251,738,597,659,511,515,,,251,793,373',
',986,519,,,,102,26,26,785,,208,,777,,,26,,10,,26,613,674,674,,26,10',
'10,804,,664,665,,807,,,809,,,,,114,,,707,114,730,712,26,,,,,,737,,,',
'707,,640,,,850,641,1006,830,117,313,313,12,117,,,,,,,,,450,208,208,',
',677,820,,583,12,,745,,885,887,889,26,26,784,843,704,,,711,,,,,688,882',
'883,,652,,10,707,,656,,,,,652,295,707,,873,,26,,876,877,,10,295,,,208',
'313,,,313,,13,,,,541,,289,722,208,,450,208,,,12,541,699,289,,12,,295',
'840,,450,,208,777,758,,,763,652,652,652,,,768,935,,13,13,12,,650,,,732',
',655,,,673,,658,26,26,,10,,,,,10,847,849,313,,13,313,852,854,13,855',
',313,770,13,789,208,,450,208,,,,10,450,208,,960,,208,,208,820,733,1000',
'750,750,973,,674,,817,583,334,680,682,684,723,26,784,983,984,985,,26',
'771,,,,,,,26,208,208,26,,981,,208,777,,,777,,777,,777,,,26,780,,731',
',674,,13,,979,295,,,739,26,26,,,,800,802,13,,295,,805,,,1015,,,13,13',
',541,,289,,,,957,,26,,,924,26,833,,289,,26,,26,,782,26,1004,14,891,777',
',26,,,,26,,26,,,,,,,450,,927,946,,947,,,871,,,,,14,291,291,777,652,',
',656,,652,,208,26,26,825,,13,,26,,13,13,,12,35,,966,968,969,970,,,366',
'374,284,114,26,,13,,,,874,,875,208,208,,879,,26,,,,35,288,288,784,583',
',26,26,,12,12,431,,10,,14,780,,,,,,,14,14,,,900,902,,13,,363,377,1003',
'377,,12,,930,,12,,1012,,,12,583,868,941,,207,,10,10,208,,13,13,,,,,',
',,,,,35,782,,583,,26,,707,35,35,26,,10,,26,26,10,311,,295,750,10,355',
'355,,,355,,,,,,26,,,,,,,26,26,13,14,,,962,,,913,,12,,,943,,,780,987',
'780,13,780,14,13,1007,12,,,,355,355,355,355,923,,12,12,425,925,26,926',
'735,,,735,13,,,,,,,,,,10,284,35,13,,,,313,13,26,,26,26,,10,,13,,,,208',
'35,450,,10,10,,,,780,,,,,781,14,,,,291,14,,,,,,,,,,,,291,12,,,,12,12',
',780,,,14,26,,,,,284,,,,,284,12,456,457,,,,,26,782,,26,466,,374,35,',
',,288,35,,,10,,994,,10,10,,,,288,26,,,,,,,,,,35,,10,26,12,,,,26,,,,',
',374,,26,,,,26,,,,,377,,,,,,12,12,,,,,,,,,,,,,,,,10,,,,,,,,,,,,,,,,',
',,,377,,,,,,781,10,10,,,,,,,,12,,,,,,,,,,,,312,,,325,,,12,,,12,,,,,',
',355,355,,,393,,395,395,399,402,395,,,,,12,10,,,,965,,,,,,,,12,,,,622',
'12,10,,,10,,,,12,,,,319,14,,,,,,291,,,,,,,10,,,,291,,,,,735,,,781,10',
'781,,781,,10,,,,,,,,10,14,14,,,,,,374,,,,,,,35,,,,,,288,,,,,,,,14,,',
'288,14,,725,726,,14,,,,,,,312,312,,,,,,,781,,35,35,,,,,,377,746,,,,748',
',,,,756,311,,,,,,,,,,35,781,,,35,,,,,35,,,,,,,,,,429,433,,718,393,,',
',,14,,,,510,,,,,,,,,,14,,,,,,,,,,14,14,,,,291,,,,,819,,,,,,,,291,,,',
',,823,499,,501,,,35,,,503,828,829,355,,772,,,,,,35,,,,,,,,,,35,35,,',
',288,,,,,,,,,,,,,288,14,,,,14,14,,,,,,,,,,,,,,,,897,14,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,35,,898,,35,35,,,,,,,,,14,,,,,,,,35,,,651,,,,,,,,',
'217,651,,,249,249,249,14,14,,312,312,,,919,,,,,,305,306,307,,,355,,',
',,,,,,35,249,249,,,,644,932,933,,669,,,,,,,,,,651,651,651,669,,,14,35',
'35,,964,,,669,669,,,,,,,,,,14,,312,14,,312,,,,,,,,,,,959,,,,,,,,,14',
',,675,,319,,678,,977,,35,,14,,961,,,14,,355,,,692,,,14,,,35,,,35,,989',
',,,,,,,,,,,,997,312,,,312,1001,,35,,,312,,,,675,,,319,,,35,,,,,35,,',
'428,249,436,249,249,35,,,455,,,,,,,,,,,,,,217,,468,469,470,471,472,473',
'474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490',
'491,492,,,,,,,,,,249,,249,,,,,,249,,,,,,,249,249,,,796,,651,,,249,,651',
',,,,,,836,841,,,,,,,,,,,,,,,,821,,,822,547,,,,,,836,,836,675,319,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,838,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,429',
',,,,,,,,,,,,,,,,,918,,880,,922,,,,,,,,,,,,,,,,,,899,,,,,249,,,,,,,,',
',,,,,,,,,,,,,,,429,,,,,,249,249,,455,666,436,,,,,,,,,,,,,,,,,,,,,,,',
',,,,668,,,249,,249,,249,,,,,,,,,,,,,,,,691,,950,,,,,,,,,,,,249,,,249',
',,,,,,319,,715,716,717,836,,,,,,,,,249,,,249,312,,,,976,,,836,,,,,,',
',,,,,,,,,,,,,,976,,,,,,,,,,,,,,,249,,,249,,,,,,249,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,795,,249,,,801,803,,,,,806,,,808,,,,,,,,,,,,,,,,,,,249',
',,249,,,,,,,,,,249,249,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,249,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,249,,,,,,,,,,,,,,,,,,,,249,,,,,,,,,,,,,,,,,',
',,249,901,903,,,,,,,,,,,801,803,806,,,,,,,,,,,,,,249,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,249,,,,,,,,,,,,,,903',
'901,953,,,,,,249,,,,,,,,,,,,,,,,,,,,,,249,,,,,,,,,,,,,,,,,,,,,,,,249',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,249' ]
        racc_goto_table = arr = ::Array.new(2553, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'21,47,22,82,10,52,52,48,48,29,29,29,107,4,112,47,7,21,21,51,24,24,21',
'21,21,35,14,14,85,41,21,21,21,50,50,109,52,52,115,115,29,16,16,43,64',
'16,8,86,79,79,161,46,21,21,18,149,156,21,21,154,6,21,21,21,42,48,155',
'11,80,57,57,4,38,57,133,158,60,60,1,48,110,81,81,2,5,12,85,16,16,16',
'16,15,45,33,33,33,11,39,19,21,58,58,58,21,21,21,21,21,21,161,63,157',
'134,134,27,7,134,37,53,54,56,56,56,7,7,31,31,31,47,61,62,65,58,66,37',
'37,137,36,74,37,37,37,137,75,76,78,83,37,22,22,36,34,34,34,157,84,87',
'33,33,33,36,36,88,63,63,63,89,90,91,37,37,158,92,93,37,37,94,95,37,96',
'97,98,99,117,100,101,29,29,117,117,102,2,48,103,104,21,21,21,21,21,21',
'105,48,106,21,21,21,108,59,111,59,120,149,121,21,21,37,123,124,125,37',
'37,37,37,37,37,126,110,59,127,152,128,18,18,18,132,135,136,138,82,18',
'139,161,140,141,143,137,144,147,151,,,,,20,,29,29,,,52,133,,,,29,59',
',,21,21,51,43,52,,,,,21,107,,112,21,43,20,,21,21,,4,,51,,,56,56,,41',
'17,21,,,,155,85,64,,,156,52,21,,37,37,37,37,37,37,42,80,109,37,37,37',
'38,11,,,17,38,45,37,37,154,,21,6,,,,,,16,16,60,,60,58,58,39,33,33,52',
'20,39,,58,81,21,21,17,20,20,,,,46,56,56,154,4,63,31,31,,,56,137,21,',
'86,31,,,,85,37,37,149,,21,,145,,,37,,17,,37,85,59,59,,37,17,17,35,,22',
'22,,35,,,35,,,,,48,,,33,48,119,33,37,,,,,,119,,,,33,,14,,,115,14,10',
'43,50,29,29,20,50,,,,,,,,,48,21,21,,,161,64,,152,20,,152,,150,150,150',
'37,37,119,57,22,,,22,,,,,51,115,115,,60,,17,33,,60,,,,,60,52,33,,8,',
'37,,8,8,,17,52,,,21,29,,,29,,21,,,,41,,21,51,21,,48,21,,,20,41,7,21',
',20,,52,24,,48,,21,145,22,,,22,60,60,60,,,22,79,,21,21,20,,34,,,21,',
'34,,,58,,34,37,37,,17,,,,,17,117,117,29,,21,29,117,117,21,117,,29,16',
'21,51,21,,48,21,,,,17,48,21,,79,,21,,21,64,114,82,85,85,79,,59,,107',
'152,112,34,34,34,58,37,119,150,150,150,,37,85,,,,,,,37,21,21,37,,115',
',21,145,,,145,,145,,145,,,37,114,,118,,59,,21,,8,52,,,118,37,37,,,,18',
'18,21,,52,,18,,,150,,,21,21,,41,,21,,,,64,,37,,,119,37,41,,21,,37,,37',
',118,37,8,23,47,145,,37,,,,37,,37,,,,,,,48,,152,119,,119,,,16,,,,,23',
'23,23,145,60,,,60,,60,,21,37,37,58,,21,,37,,21,21,,20,44,,117,117,117',
'117,,,23,23,9,48,37,,21,,,,85,,85,21,21,,85,,37,,,,44,44,44,119,152',
',37,37,,20,20,56,,17,,23,114,,,,,,,23,23,,,18,18,,21,,44,44,119,44,',
'20,,16,,20,,117,,,20,152,56,51,,26,,17,17,21,,21,21,,,,,,,,,,,44,118',
',152,,37,,33,44,44,37,,17,,37,37,17,26,,52,85,17,26,26,,,26,,,,,,37',
',,,,,,37,37,21,23,,,21,,,56,,20,,,114,,,114,51,114,21,114,23,21,22,20',
',,,26,26,26,26,118,,20,20,9,118,37,118,116,,,116,21,,,,,,,,,,17,9,44',
'21,,,,29,21,37,,37,37,,17,,21,,,,21,44,48,,17,17,,,,114,,,,,116,23,',
',,23,23,,,,,,,,,,,,23,20,,,,20,20,,114,,,23,37,,,,,9,,,,,9,20,26,26',
',,,,37,118,,37,26,,23,44,,,,44,44,,,17,,118,,17,17,,,,44,37,,,,,,,,',
',44,,17,37,20,,,,37,,,,,,23,,37,,,,37,,,,,44,,,,,,20,20,,,,,,,,,,,,',
',,,17,,,,,,,,,,,,,,,,,,,,44,,,,,,116,17,17,,,,,,,,20,,,,,,,,,,,,55,',
',55,,,20,,,20,,,,,,,26,26,,,55,,55,55,55,55,55,,,,,20,17,,,,17,,,,,',
',,20,,,,26,20,17,,,17,,,,20,,,,25,23,,,,,,23,,,,,,,17,,,,23,,,,,116',
',,116,17,116,,116,,17,,,,,,,,17,23,23,,,,,,23,,,,,,,44,,,,,,44,,,,,',
',,23,,,44,23,,9,9,,23,,,,,,,55,55,,,,,,,116,,44,44,,,,,,44,9,,,,9,,',
',,9,26,,,,,,,,,,44,116,,,44,,,,,44,,,,,,,,,,25,25,,26,55,,,,,23,,,,55',
',,,,,,,,,23,,,,,,,,,,23,23,,,,23,,,,,9,,,,,,,,23,,,,,,9,25,,25,,,44',
',,25,9,9,26,,26,,,,,,44,,,,,,,,,,44,44,,,,44,,,,,,,,,,,,,44,23,,,,23',
'23,,,,,,,,,,,,,,,,23,23,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,44,,9,,44,44',
',,,,,,,,23,,,,,,,,44,,,55,,,,,,,,,28,55,,,28,28,28,23,23,,55,55,,,9',
',,,,,28,28,28,,,26,,,,,,,,,44,28,28,,,,25,9,9,,55,,,,,,,,,,55,55,55',
'55,,,23,44,44,,23,,,55,55,,,,,,,,,,23,,55,23,,55,,,,,,,,,,,9,,,,,,,',
',23,,,25,,25,,25,,9,,44,,23,,44,,,23,,26,,,25,,,23,,,44,,,44,,9,,,,',
',,,,,,,,9,55,,,55,9,,44,,,55,,,,25,,,25,,,44,,,,,44,,,28,28,28,28,28',
'44,,,28,,,,,,,,,,,,,,28,,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28',
'28,28,28,28,28,28,28,28,28,28,,,,,,,,,,28,,28,,,,,,28,,,,,,,28,28,,',
'25,,55,,,28,,55,,,,,,,55,55,,,,,,,,,,,,,,,,25,,,25,28,,,,,,55,,55,25',
'25,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,25,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,25,,,,,,,,,,,,,,,,,,55,,25,,55,,,,,,,,,,,,,,,,,,25,,,,,28,,,,,,,',
',,,,,,,,,,,,,,,,25,,,,,,28,28,,28,28,28,,,,,,,,,,,,,,,,,,,,,,,,,,,,28',
',,28,,28,,28,,,,,,,,,,,,,,,,28,,25,,,,,,,,,,,,28,,,28,,,,,,,25,,28,28',
'28,55,,,,,,,,,28,,,28,55,,,,25,,,55,,,,,,,,,,,,,,,,,,,,,25,,,,,,,,,',
',,,,,28,,,28,,,,,,28,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,28,,28,,,28,28',
',,,,28,,,28,,,,,,,,,,,,,,,,,,,28,,,28,,,,,,,,,,28,28,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,28,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,28,,,,,,,,,,,,',
',,,,,,,28,,,,,,,,,,,,,,,,,,,,28,28,28,,,,,,,,,,,28,28,28,,,,,,,,,,,',
',,28,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
'28,,,,,,,,,,,,,,28,28,28,,,,,,28,,,,,,,,,,,,,,,,,,,,,,28,,,,,,,,,,,',
',,,,,,,,,,,,28,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,28' ]
        racc_goto_check = arr = ::Array.new(2553, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_goto_pointer = [
   nil,    78,    83,   nil,    10,   -15,    57,    16,  -264,   757,
  -545,  -652,  -750,   nil,    19,    83,   -16,   298,    36,    36,
   254,     0,   -51,   723,  -176,  1190,   841,     5,  1562,   -13,
   nil,   103,   nil,  -108,   125,  -243,  -357,   117,    42,    67,
   nil,    -2,    32,  -256,   777,  -279,   -12,   -64,     0,   nil,
    26,   -22,   -26,  -127,  -696,  1130,    98,  -245,    78,  -288,
    50,  -140,  -379,  -341,  -208,  -385,  -137,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    73,    89,    89,   nil,    89,  -308,
  -678,  -514,  -358,    84,  -220,    25,  -571,    91,  -226,   115,
  -144,   109,  -577,   113,  -577,  -429,  -757,  -432,  -195,  -693,
   120,  -432,  -197,  -426,  -697,   145,  -119,   -44,  -367,  -531,
  -590,  -700,   -42,   nil,    48,  -291,   386,  -144,   102,  -141,
   191,   -33,   nil,   -56,   -56,  -758,  -374,  -491,  -608,   nil,
   nil,   nil,   164,     1,    37,   159,  -161,  -256,   160,  -549,
  -383,  -383,   nil,  -530,  -323,  -226,   nil,  -633,   nil,  -563,
  -310,  -635,  -117,   nil,  -515,  -281,  -688,  -817,  -811,   nil,
   nil,  -448 ]

racc_goto_default = [
   nil,   nil,   nil,     3,   nil,     4,   362,   280,   nil,   549,
   nil,   861,   nil,   279,   nil,   nil,   nil,   212,    16,    11,
   213,   304,   nil,   211,   nil,   255,    15,   nil,    19,    20,
    21,   nil,    25,   710,   nil,   nil,   nil,   294,    29,   nil,
    31,    34,    33,   nil,   209,   372,   nil,   116,   444,   115,
    69,   818,    42,   nil,   nil,   567,   314,   nil,   315,   253,
   442,   nil,   nil,   653,   495,   nil,   nil,   270,    43,    44,
    45,    46,    47,    48,    49,   nil,   271,    55,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   591,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   327,   326,
   nil,   nil,   729,   329,   330,   nil,   331,   nil,   332,   333,
   nil,   nil,   448,   nil,   nil,   nil,   nil,   nil,   nil,    68,
    70,    71,    72,   nil,   nil,   nil,   nil,   629,   nil,   nil,
   nil,   nil,   404,   776,   336,   335,   339,   778,   779,   944,
   nil,   783,   346,   341,   348,   nil,   585,   586,   787,   351,
   354,   261 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 141, :_reduce_none,
  2, 142, :_reduce_2,
  0, 143, :_reduce_3,
  1, 143, :_reduce_4,
  3, 143, :_reduce_5,
  1, 145, :_reduce_none,
  4, 145, :_reduce_7,
  4, 148, :_reduce_8,
  2, 149, :_reduce_9,
  0, 153, :_reduce_10,
  1, 153, :_reduce_11,
  3, 153, :_reduce_12,
  0, 167, :_reduce_13,
  4, 147, :_reduce_14,
  3, 147, :_reduce_15,
  3, 147, :_reduce_none,
  3, 147, :_reduce_17,
  2, 147, :_reduce_18,
  3, 147, :_reduce_19,
  3, 147, :_reduce_20,
  3, 147, :_reduce_21,
  3, 147, :_reduce_22,
  3, 147, :_reduce_23,
  4, 147, :_reduce_none,
  3, 147, :_reduce_25,
  3, 147, :_reduce_26,
  3, 147, :_reduce_27,
  6, 147, :_reduce_none,
  6, 147, :_reduce_none,
  5, 147, :_reduce_30,
  5, 147, :_reduce_none,
  5, 147, :_reduce_none,
  3, 147, :_reduce_none,
  3, 147, :_reduce_34,
  3, 147, :_reduce_35,
  3, 147, :_reduce_36,
  1, 147, :_reduce_none,
  1, 166, :_reduce_none,
  3, 166, :_reduce_39,
  3, 166, :_reduce_40,
  2, 166, :_reduce_41,
  2, 166, :_reduce_42,
  1, 166, :_reduce_none,
  1, 156, :_reduce_none,
  1, 158, :_reduce_none,
  1, 158, :_reduce_none,
  2, 158, :_reduce_47,
  2, 158, :_reduce_48,
  2, 158, :_reduce_49,
  1, 170, :_reduce_none,
  4, 170, :_reduce_none,
  4, 170, :_reduce_none,
  4, 170, :_reduce_none,
  4, 175, :_reduce_54,
  2, 169, :_reduce_55,
  3, 169, :_reduce_56,
  4, 169, :_reduce_57,
  5, 169, :_reduce_none,
  4, 169, :_reduce_59,
  5, 169, :_reduce_none,
  4, 169, :_reduce_61,
  5, 169, :_reduce_none,
  2, 169, :_reduce_63,
  2, 169, :_reduce_64,
  1, 159, :_reduce_65,
  3, 159, :_reduce_66,
  1, 179, :_reduce_67,
  3, 179, :_reduce_68,
  1, 178, :_reduce_69,
  2, 178, :_reduce_70,
  3, 178, :_reduce_71,
  5, 178, :_reduce_72,
  2, 178, :_reduce_73,
  4, 178, :_reduce_74,
  2, 178, :_reduce_75,
  4, 178, :_reduce_76,
  1, 178, :_reduce_77,
  3, 178, :_reduce_78,
  1, 181, :_reduce_79,
  3, 181, :_reduce_80,
  2, 180, :_reduce_81,
  3, 180, :_reduce_82,
  1, 183, :_reduce_83,
  3, 183, :_reduce_84,
  1, 182, :_reduce_85,
  4, 182, :_reduce_86,
  3, 182, :_reduce_87,
  3, 182, :_reduce_none,
  3, 182, :_reduce_none,
  3, 182, :_reduce_none,
  2, 182, :_reduce_none,
  1, 182, :_reduce_none,
  1, 157, :_reduce_93,
  4, 157, :_reduce_94,
  4, 157, :_reduce_95,
  3, 157, :_reduce_96,
  3, 157, :_reduce_97,
  3, 157, :_reduce_98,
  3, 157, :_reduce_99,
  2, 157, :_reduce_100,
  1, 157, :_reduce_none,
  1, 185, :_reduce_none,
  2, 186, :_reduce_103,
  1, 186, :_reduce_104,
  3, 186, :_reduce_105,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_109,
  1, 187, :_reduce_110,
  1, 154, :_reduce_111,
  1, 154, :_reduce_none,
  1, 155, :_reduce_113,
  3, 155, :_reduce_114,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  3, 168, :_reduce_189,
  5, 168, :_reduce_190,
  3, 168, :_reduce_191,
  6, 168, :_reduce_192,
  6, 168, :_reduce_193,
  5, 168, :_reduce_194,
  5, 168, :_reduce_none,
  5, 168, :_reduce_none,
  5, 168, :_reduce_none,
  4, 168, :_reduce_none,
  3, 168, :_reduce_none,
  3, 168, :_reduce_200,
  3, 168, :_reduce_201,
  3, 168, :_reduce_202,
  3, 168, :_reduce_203,
  3, 168, :_reduce_204,
  3, 168, :_reduce_205,
  3, 168, :_reduce_206,
  3, 168, :_reduce_207,
  4, 168, :_reduce_208,
  4, 168, :_reduce_209,
  2, 168, :_reduce_210,
  2, 168, :_reduce_211,
  3, 168, :_reduce_212,
  3, 168, :_reduce_213,
  3, 168, :_reduce_214,
  3, 168, :_reduce_215,
  3, 168, :_reduce_216,
  3, 168, :_reduce_217,
  3, 168, :_reduce_218,
  3, 168, :_reduce_219,
  3, 168, :_reduce_220,
  3, 168, :_reduce_221,
  3, 168, :_reduce_222,
  3, 168, :_reduce_223,
  3, 168, :_reduce_224,
  2, 168, :_reduce_225,
  2, 168, :_reduce_226,
  3, 168, :_reduce_227,
  3, 168, :_reduce_228,
  3, 168, :_reduce_229,
  3, 168, :_reduce_230,
  3, 168, :_reduce_231,
  0, 193, :_reduce_232,
  0, 194, :_reduce_233,
  7, 168, :_reduce_234,
  1, 168, :_reduce_none,
  1, 165, :_reduce_none,
  1, 162, :_reduce_237,
  2, 162, :_reduce_238,
  2, 162, :_reduce_239,
  4, 162, :_reduce_240,
  2, 162, :_reduce_241,
  3, 162, :_reduce_242,
  3, 200, :_reduce_243,
  2, 202, :_reduce_none,
  1, 203, :_reduce_245,
  1, 203, :_reduce_none,
  1, 201, :_reduce_247,
  1, 201, :_reduce_none,
  2, 201, :_reduce_249,
  4, 201, :_reduce_250,
  2, 201, :_reduce_251,
  1, 171, :_reduce_252,
  2, 171, :_reduce_253,
  2, 171, :_reduce_254,
  4, 171, :_reduce_255,
  1, 171, :_reduce_256,
  4, 205, :_reduce_none,
  1, 205, :_reduce_none,
  0, 207, :_reduce_259,
  2, 174, :_reduce_260,
  1, 206, :_reduce_none,
  2, 206, :_reduce_262,
  3, 206, :_reduce_263,
  2, 199, :_reduce_264,
  2, 204, :_reduce_265,
  0, 204, :_reduce_266,
  1, 196, :_reduce_267,
  2, 196, :_reduce_268,
  3, 196, :_reduce_269,
  4, 196, :_reduce_270,
  3, 164, :_reduce_271,
  4, 164, :_reduce_272,
  2, 164, :_reduce_273,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  0, 229, :_reduce_283,
  4, 192, :_reduce_284,
  0, 230, :_reduce_285,
  5, 192, :_reduce_286,
  3, 192, :_reduce_287,
  3, 192, :_reduce_288,
  2, 192, :_reduce_289,
  4, 192, :_reduce_290,
  4, 192, :_reduce_291,
  3, 192, :_reduce_292,
  3, 192, :_reduce_293,
  1, 192, :_reduce_294,
  4, 192, :_reduce_295,
  3, 192, :_reduce_296,
  1, 192, :_reduce_297,
  5, 192, :_reduce_298,
  4, 192, :_reduce_299,
  3, 192, :_reduce_300,
  2, 192, :_reduce_301,
  1, 192, :_reduce_none,
  2, 192, :_reduce_303,
  2, 192, :_reduce_304,
  6, 192, :_reduce_305,
  6, 192, :_reduce_306,
  0, 231, :_reduce_307,
  0, 232, :_reduce_308,
  7, 192, :_reduce_309,
  0, 233, :_reduce_310,
  0, 234, :_reduce_311,
  7, 192, :_reduce_312,
  5, 192, :_reduce_313,
  4, 192, :_reduce_314,
  5, 192, :_reduce_315,
  0, 235, :_reduce_316,
  0, 236, :_reduce_317,
  9, 192, :_reduce_318,
  0, 237, :_reduce_319,
  6, 192, :_reduce_320,
  0, 238, :_reduce_321,
  0, 239, :_reduce_322,
  8, 192, :_reduce_323,
  0, 240, :_reduce_324,
  0, 241, :_reduce_325,
  6, 192, :_reduce_326,
  0, 242, :_reduce_327,
  6, 192, :_reduce_328,
  0, 243, :_reduce_329,
  0, 244, :_reduce_330,
  9, 192, :_reduce_331,
  1, 192, :_reduce_332,
  1, 192, :_reduce_333,
  1, 192, :_reduce_334,
  1, 192, :_reduce_none,
  1, 161, :_reduce_none,
  1, 219, :_reduce_none,
  1, 219, :_reduce_none,
  1, 219, :_reduce_none,
  2, 219, :_reduce_none,
  1, 221, :_reduce_none,
  1, 221, :_reduce_none,
  1, 221, :_reduce_none,
  2, 218, :_reduce_344,
  3, 245, :_reduce_345,
  2, 245, :_reduce_346,
  1, 245, :_reduce_none,
  1, 245, :_reduce_none,
  3, 246, :_reduce_349,
  3, 246, :_reduce_350,
  1, 220, :_reduce_351,
  5, 220, :_reduce_352,
  1, 151, :_reduce_none,
  2, 151, :_reduce_354,
  1, 248, :_reduce_355,
  3, 248, :_reduce_356,
  3, 249, :_reduce_357,
  1, 176, :_reduce_none,
  3, 176, :_reduce_359,
  1, 176, :_reduce_360,
  4, 176, :_reduce_361,
  1, 250, :_reduce_362,
  4, 250, :_reduce_363,
  1, 251, :_reduce_364,
  3, 251, :_reduce_365,
  4, 252, :_reduce_366,
  2, 252, :_reduce_367,
  2, 252, :_reduce_368,
  1, 252, :_reduce_369,
  2, 257, :_reduce_370,
  1, 257, :_reduce_371,
  6, 247, :_reduce_372,
  8, 247, :_reduce_373,
  4, 247, :_reduce_374,
  6, 247, :_reduce_375,
  4, 247, :_reduce_376,
  2, 247, :_reduce_377,
  6, 247, :_reduce_378,
  2, 247, :_reduce_379,
  4, 247, :_reduce_380,
  6, 247, :_reduce_381,
  2, 247, :_reduce_382,
  4, 247, :_reduce_383,
  2, 247, :_reduce_384,
  4, 247, :_reduce_385,
  1, 247, :_reduce_386,
  0, 261, :_reduce_387,
  5, 260, :_reduce_388,
  2, 172, :_reduce_389,
  4, 172, :_reduce_none,
  4, 172, :_reduce_none,
  4, 172, :_reduce_none,
  2, 217, :_reduce_393,
  4, 217, :_reduce_394,
  4, 217, :_reduce_395,
  3, 217, :_reduce_396,
  4, 217, :_reduce_397,
  3, 217, :_reduce_398,
  2, 217, :_reduce_399,
  1, 217, :_reduce_400,
  0, 263, :_reduce_401,
  5, 216, :_reduce_402,
  0, 264, :_reduce_403,
  5, 216, :_reduce_404,
  0, 266, :_reduce_405,
  6, 222, :_reduce_406,
  1, 265, :_reduce_407,
  1, 265, :_reduce_none,
  6, 150, :_reduce_409,
  0, 150, :_reduce_410,
  1, 267, :_reduce_411,
  1, 267, :_reduce_none,
  1, 267, :_reduce_none,
  2, 268, :_reduce_414,
  1, 268, :_reduce_415,
  2, 152, :_reduce_416,
  1, 152, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 209, :_reduce_421,
  1, 271, :_reduce_none,
  2, 271, :_reduce_423,
  3, 272, :_reduce_424,
  1, 272, :_reduce_425,
  3, 210, :_reduce_426,
  3, 211, :_reduce_427,
  3, 212, :_reduce_428,
  3, 212, :_reduce_429,
  1, 275, :_reduce_430,
  3, 275, :_reduce_431,
  1, 276, :_reduce_432,
  2, 276, :_reduce_433,
  3, 213, :_reduce_434,
  3, 213, :_reduce_435,
  1, 278, :_reduce_436,
  3, 278, :_reduce_437,
  1, 273, :_reduce_438,
  2, 273, :_reduce_439,
  1, 274, :_reduce_440,
  2, 274, :_reduce_441,
  1, 277, :_reduce_442,
  0, 280, :_reduce_443,
  3, 277, :_reduce_444,
  0, 281, :_reduce_445,
  4, 277, :_reduce_446,
  1, 279, :_reduce_447,
  1, 279, :_reduce_448,
  1, 279, :_reduce_449,
  1, 279, :_reduce_none,
  2, 190, :_reduce_451,
  1, 190, :_reduce_452,
  1, 282, :_reduce_none,
  1, 282, :_reduce_none,
  1, 282, :_reduce_none,
  1, 282, :_reduce_none,
  3, 270, :_reduce_457,
  1, 269, :_reduce_458,
  1, 269, :_reduce_459,
  2, 269, :_reduce_460,
  2, 269, :_reduce_461,
  2, 269, :_reduce_462,
  2, 269, :_reduce_463,
  1, 184, :_reduce_464,
  1, 184, :_reduce_465,
  1, 184, :_reduce_466,
  1, 184, :_reduce_467,
  1, 184, :_reduce_468,
  1, 184, :_reduce_469,
  1, 184, :_reduce_470,
  1, 184, :_reduce_471,
  1, 184, :_reduce_472,
  1, 184, :_reduce_473,
  1, 184, :_reduce_474,
  1, 214, :_reduce_475,
  1, 160, :_reduce_476,
  1, 163, :_reduce_477,
  1, 163, :_reduce_none,
  1, 224, :_reduce_479,
  3, 224, :_reduce_480,
  2, 224, :_reduce_481,
  4, 226, :_reduce_482,
  2, 226, :_reduce_483,
  2, 284, :_reduce_484,
  1, 284, :_reduce_485,
  1, 253, :_reduce_486,
  3, 253, :_reduce_487,
  1, 286, :_reduce_none,
  1, 286, :_reduce_none,
  2, 254, :_reduce_490,
  1, 254, :_reduce_491,
  1, 285, :_reduce_492,
  2, 287, :_reduce_493,
  1, 287, :_reduce_494,
  1, 288, :_reduce_495,
  3, 288, :_reduce_496,
  4, 289, :_reduce_497,
  2, 289, :_reduce_498,
  2, 289, :_reduce_499,
  1, 289, :_reduce_500,
  2, 290, :_reduce_501,
  0, 290, :_reduce_502,
  6, 283, :_reduce_503,
  4, 283, :_reduce_504,
  4, 283, :_reduce_505,
  2, 283, :_reduce_506,
  4, 283, :_reduce_507,
  2, 283, :_reduce_508,
  2, 283, :_reduce_509,
  1, 283, :_reduce_510,
  0, 283, :_reduce_511,
  1, 292, :_reduce_none,
  1, 292, :_reduce_513,
  1, 293, :_reduce_514,
  1, 293, :_reduce_515,
  1, 293, :_reduce_516,
  1, 293, :_reduce_517,
  1, 294, :_reduce_518,
  3, 294, :_reduce_519,
  1, 223, :_reduce_none,
  1, 223, :_reduce_none,
  1, 296, :_reduce_522,
  3, 296, :_reduce_none,
  1, 297, :_reduce_524,
  3, 297, :_reduce_525,
  1, 295, :_reduce_none,
  4, 295, :_reduce_none,
  3, 295, :_reduce_none,
  6, 295, :_reduce_none,
  5, 295, :_reduce_none,
  2, 295, :_reduce_none,
  1, 295, :_reduce_none,
  1, 258, :_reduce_533,
  3, 258, :_reduce_534,
  3, 298, :_reduce_535,
  1, 291, :_reduce_536,
  3, 291, :_reduce_537,
  1, 299, :_reduce_none,
  1, 299, :_reduce_none,
  2, 259, :_reduce_540,
  1, 259, :_reduce_541,
  1, 300, :_reduce_none,
  1, 300, :_reduce_none,
  2, 256, :_reduce_544,
  2, 255, :_reduce_545,
  0, 255, :_reduce_546,
  1, 227, :_reduce_547,
  4, 227, :_reduce_548,
  0, 215, :_reduce_549,
  2, 215, :_reduce_550,
  1, 198, :_reduce_551,
  3, 198, :_reduce_552,
  3, 301, :_reduce_553,
  2, 301, :_reduce_554,
  4, 301, :_reduce_555,
  1, 177, :_reduce_none,
  1, 177, :_reduce_none,
  1, 177, :_reduce_none,
  1, 173, :_reduce_none,
  1, 173, :_reduce_none,
  1, 173, :_reduce_none,
  1, 173, :_reduce_none,
  1, 262, :_reduce_none,
  1, 262, :_reduce_none,
  1, 262, :_reduce_none,
  1, 228, :_reduce_none,
  1, 228, :_reduce_none,
  0, 144, :_reduce_none,
  1, 144, :_reduce_none,
  0, 191, :_reduce_none,
  1, 191, :_reduce_none,
  0, 197, :_reduce_none,
  1, 197, :_reduce_none,
  1, 197, :_reduce_none,
  1, 225, :_reduce_none,
  1, 225, :_reduce_none,
  1, 146, :_reduce_none,
  2, 146, :_reduce_none,
  0, 195, :_reduce_579 ]

racc_reduce_n = 580

racc_shift_n = 1018

racc_token_table = {
  false => 0,
  :error => 1,
  :kCLASS => 2,
  :kMODULE => 3,
  :kDEF => 4,
  :kUNDEF => 5,
  :kBEGIN => 6,
  :kRESCUE => 7,
  :kENSURE => 8,
  :kEND => 9,
  :kIF => 10,
  :kUNLESS => 11,
  :kTHEN => 12,
  :kELSIF => 13,
  :kELSE => 14,
  :kCASE => 15,
  :kWHEN => 16,
  :kWHILE => 17,
  :kUNTIL => 18,
  :kFOR => 19,
  :kBREAK => 20,
  :kNEXT => 21,
  :kREDO => 22,
  :kRETRY => 23,
  :kIN => 24,
  :kDO => 25,
  :kDO_COND => 26,
  :kDO_BLOCK => 27,
  :kDO_LAMBDA => 28,
  :kRETURN => 29,
  :kYIELD => 30,
  :kSUPER => 31,
  :kSELF => 32,
  :kNIL => 33,
  :kTRUE => 34,
  :kFALSE => 35,
  :kAND => 36,
  :kOR => 37,
  :kNOT => 38,
  :kIF_MOD => 39,
  :kUNLESS_MOD => 40,
  :kWHILE_MOD => 41,
  :kUNTIL_MOD => 42,
  :kRESCUE_MOD => 43,
  :kALIAS => 44,
  :kDEFINED => 45,
  :klBEGIN => 46,
  :klEND => 47,
  :k__LINE__ => 48,
  :k__FILE__ => 49,
  :tIDENTIFIER => 50,
  :tFID => 51,
  :tGVAR => 52,
  :tIVAR => 53,
  :tCONSTANT => 54,
  :tLABEL => 55,
  :tCVAR => 56,
  :tNTH_REF => 57,
  :tBACK_REF => 58,
  :tSTRING_CONTENT => 59,
  :tINTEGER => 60,
  :tFLOAT => 61,
  :tREGEXP_END => 62,
  :tUPLUS => 63,
  :tUMINUS => 64,
  :tPOW => 65,
  :tCMP => 66,
  :tEQ => 67,
  :tEQQ => 68,
  :tNEQ => 69,
  :tGEQ => 70,
  :tLEQ => 71,
  :tANDOP => 72,
  :tOROP => 73,
  :tMATCH => 74,
  :tNMATCH => 75,
  :tJSDOT => 76,
  :tDOT => 77,
  :tDOT2 => 78,
  :tDOT3 => 79,
  :tAREF => 80,
  :tASET => 81,
  :tLSHFT => 82,
  :tRSHFT => 83,
  :tCOLON2 => 84,
  :tCOLON3 => 85,
  :tOP_ASGN => 86,
  :tASSOC => 87,
  :tLPAREN => 88,
  :tLPAREN2 => 89,
  :tRPAREN => 90,
  :tLPAREN_ARG => 91,
  :tRBRACK => 92,
  :tLBRACE => 93,
  :tLBRACE_ARG => 94,
  :tSTAR => 95,
  :tSTAR2 => 96,
  :tAMPER => 97,
  :tAMPER2 => 98,
  :tTILDE => 99,
  :tPERCENT => 100,
  :tDIVIDE => 101,
  :tPLUS => 102,
  :tMINUS => 103,
  :tLT => 104,
  :tGT => 105,
  :tPIPE => 106,
  :tBANG => 107,
  :tCARET => 108,
  :tLCURLY => 109,
  :tRCURLY => 110,
  :tBACK_REF2 => 111,
  :tSYMBEG => 112,
  :tSTRING_BEG => 113,
  :tXSTRING_BEG => 114,
  :tREGEXP_BEG => 115,
  :tWORDS_BEG => 116,
  :tAWORDS_BEG => 117,
  :tSTRING_DBEG => 118,
  :tSTRING_DVAR => 119,
  :tSTRING_END => 120,
  :tSTRING => 121,
  :tSYMBOL => 122,
  :tNL => 123,
  :tEH => 124,
  :tCOLON => 125,
  :tCOMMA => 126,
  :tSPACE => 127,
  :tSEMI => 128,
  :tLAMBDA => 129,
  :tLAMBEG => 130,
  :tLBRACK2 => 131,
  :tLBRACK => 132,
  :tJSLBRACK => 133,
  :tDSTAR => 134,
  :tLABEL_END => 135,
  :tEQL => 136,
  :tLOWEST => 137,
  "-@NUM" => 138,
  "+@NUM" => 139 }

racc_nt_base = 140

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "kCLASS",
  "kMODULE",
  "kDEF",
  "kUNDEF",
  "kBEGIN",
  "kRESCUE",
  "kENSURE",
  "kEND",
  "kIF",
  "kUNLESS",
  "kTHEN",
  "kELSIF",
  "kELSE",
  "kCASE",
  "kWHEN",
  "kWHILE",
  "kUNTIL",
  "kFOR",
  "kBREAK",
  "kNEXT",
  "kREDO",
  "kRETRY",
  "kIN",
  "kDO",
  "kDO_COND",
  "kDO_BLOCK",
  "kDO_LAMBDA",
  "kRETURN",
  "kYIELD",
  "kSUPER",
  "kSELF",
  "kNIL",
  "kTRUE",
  "kFALSE",
  "kAND",
  "kOR",
  "kNOT",
  "kIF_MOD",
  "kUNLESS_MOD",
  "kWHILE_MOD",
  "kUNTIL_MOD",
  "kRESCUE_MOD",
  "kALIAS",
  "kDEFINED",
  "klBEGIN",
  "klEND",
  "k__LINE__",
  "k__FILE__",
  "tIDENTIFIER",
  "tFID",
  "tGVAR",
  "tIVAR",
  "tCONSTANT",
  "tLABEL",
  "tCVAR",
  "tNTH_REF",
  "tBACK_REF",
  "tSTRING_CONTENT",
  "tINTEGER",
  "tFLOAT",
  "tREGEXP_END",
  "tUPLUS",
  "tUMINUS",
  "tPOW",
  "tCMP",
  "tEQ",
  "tEQQ",
  "tNEQ",
  "tGEQ",
  "tLEQ",
  "tANDOP",
  "tOROP",
  "tMATCH",
  "tNMATCH",
  "tJSDOT",
  "tDOT",
  "tDOT2",
  "tDOT3",
  "tAREF",
  "tASET",
  "tLSHFT",
  "tRSHFT",
  "tCOLON2",
  "tCOLON3",
  "tOP_ASGN",
  "tASSOC",
  "tLPAREN",
  "tLPAREN2",
  "tRPAREN",
  "tLPAREN_ARG",
  "tRBRACK",
  "tLBRACE",
  "tLBRACE_ARG",
  "tSTAR",
  "tSTAR2",
  "tAMPER",
  "tAMPER2",
  "tTILDE",
  "tPERCENT",
  "tDIVIDE",
  "tPLUS",
  "tMINUS",
  "tLT",
  "tGT",
  "tPIPE",
  "tBANG",
  "tCARET",
  "tLCURLY",
  "tRCURLY",
  "tBACK_REF2",
  "tSYMBEG",
  "tSTRING_BEG",
  "tXSTRING_BEG",
  "tREGEXP_BEG",
  "tWORDS_BEG",
  "tAWORDS_BEG",
  "tSTRING_DBEG",
  "tSTRING_DVAR",
  "tSTRING_END",
  "tSTRING",
  "tSYMBOL",
  "tNL",
  "tEH",
  "tCOLON",
  "tCOMMA",
  "tSPACE",
  "tSEMI",
  "tLAMBDA",
  "tLAMBEG",
  "tLBRACK2",
  "tLBRACK",
  "tJSLBRACK",
  "tDSTAR",
  "tLABEL_END",
  "tEQL",
  "tLOWEST",
  "\"-@NUM\"",
  "\"+@NUM\"",
  "$start",
  "program",
  "top_compstmt",
  "top_stmts",
  "opt_terms",
  "top_stmt",
  "terms",
  "stmt",
  "bodystmt",
  "compstmt",
  "opt_rescue",
  "opt_else",
  "opt_ensure",
  "stmts",
  "fitem",
  "undef_list",
  "expr_value",
  "lhs",
  "command_call",
  "mlhs",
  "var_lhs",
  "primary_value",
  "aref_args",
  "backref",
  "mrhs",
  "arg_value",
  "expr",
  "@1",
  "arg",
  "command",
  "block_command",
  "call_args",
  "block_call",
  "operation2",
  "command_args",
  "cmd_brace_block",
  "opt_block_var",
  "operation",
  "mlhs_basic",
  "mlhs_entry",
  "mlhs_head",
  "mlhs_item",
  "mlhs_node",
  "mlhs_post",
  "variable",
  "cname",
  "cpath",
  "fname",
  "op",
  "reswords",
  "symbol",
  "opt_nl",
  "primary",
  "@2",
  "@3",
  "none",
  "args",
  "trailer",
  "assocs",
  "block_arg",
  "paren_args",
  "opt_call_args",
  "rparen",
  "opt_paren_args",
  "opt_block_arg",
  "call_args2",
  "open_args",
  "@4",
  "literal",
  "strings",
  "xstring",
  "regexp",
  "words",
  "awords",
  "var_ref",
  "assoc_list",
  "brace_block",
  "method_call",
  "lambda",
  "then",
  "if_tail",
  "do",
  "case_body",
  "for_var",
  "superclass",
  "term",
  "f_arglist",
  "singleton",
  "dot_or_colon",
  "@5",
  "@6",
  "@7",
  "@8",
  "@9",
  "@10",
  "@11",
  "@12",
  "@13",
  "@14",
  "@15",
  "@16",
  "@17",
  "@18",
  "@19",
  "@20",
  "f_larglist",
  "lambda_body",
  "block_param",
  "f_block_optarg",
  "f_block_opt",
  "opt_bv_decl",
  "bv_decls",
  "block_args_tail",
  "f_block_kwarg",
  "f_kwrest",
  "opt_f_block_arg",
  "f_block_arg",
  "opt_block_args_tail",
  "f_arg",
  "f_rest_arg",
  "do_block",
  "@21",
  "operation3",
  "@22",
  "@23",
  "cases",
  "@24",
  "exc_list",
  "exc_var",
  "numeric",
  "dsym",
  "string",
  "string1",
  "string_contents",
  "xstring_contents",
  "word_list",
  "word",
  "string_content",
  "qword_list",
  "string_dvar",
  "@25",
  "@26",
  "sym",
  "f_args",
  "f_block_kw",
  "f_label",
  "kwrest_mark",
  "f_kw",
  "f_kwarg",
  "args_tail",
  "opt_args_tail",
  "f_optarg",
  "f_norm_arg",
  "f_bad_arg",
  "f_arg_item",
  "f_margs",
  "f_marg",
  "f_marg_list",
  "f_opt",
  "restarg_mark",
  "blkarg_mark",
  "assoc" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

def _reduce_2(val, _values, result)
                      result = new_compstmt val[0]
                    
    result
end

def _reduce_3(val, _values, result)
                      result = new_block
                    
    result
end

def _reduce_4(val, _values, result)
                      result = new_block val[0]
                    
    result
end

def _reduce_5(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

# reduce 6 omitted

def _reduce_7(val, _values, result)
                      result = val[2]
                    
    result
end

def _reduce_8(val, _values, result)
                      result = new_body(val[0], val[1], val[2], val[3])
                    
    result
end

def _reduce_9(val, _values, result)
                      result = new_compstmt val[0]
                    
    result
end

def _reduce_10(val, _values, result)
                      result = new_block
                    
    result
end

def _reduce_11(val, _values, result)
                      result = new_block val[0]
                    
    result
end

def _reduce_12(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_13(val, _values, result)
                      lexer.lex_state = :expr_fname
                    
    result
end

def _reduce_14(val, _values, result)
                      result = new_alias(val[0], val[1], val[3])
                    
    result
end

def _reduce_15(val, _values, result)
                      result = s(:valias, value(val[1]).to_sym, value(val[2]).to_sym)
                    
    result
end

# reduce 16 omitted

def _reduce_17(val, _values, result)
                      result = s(:valias, value(val[1]).to_sym, value(val[2]).to_sym)
                    
    result
end

def _reduce_18(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_19(val, _values, result)
                      result = new_if(val[1], val[2], val[0], nil)
                    
    result
end

def _reduce_20(val, _values, result)
                      result = new_if(val[1], val[2], nil, val[0])
                    
    result
end

def _reduce_21(val, _values, result)
                      result = new_while(val[1], val[2], val[0])
                    
    result
end

def _reduce_22(val, _values, result)
                      result = new_until(val[1], val[2], val[0])
                    
    result
end

def _reduce_23(val, _values, result)
                      result = new_rescue_mod(val[1], val[0], val[2])
                    
    result
end

# reduce 24 omitted

def _reduce_25(val, _values, result)
                      result = new_assign(val[0], val[1], val[2])
                    
    result
end

def _reduce_26(val, _values, result)
                      result = s(:masgn, val[0], s(:to_ary, val[2]))
                    
    result
end

def _reduce_27(val, _values, result)
                      result = new_op_asgn val[1], val[0], val[2]
                    
    result
end

# reduce 28 omitted

# reduce 29 omitted

def _reduce_30(val, _values, result)
                      result = s(:op_asgn2, val[0], op_to_setter(val[2]), value(val[3]).to_sym, val[4])
                    
    result
end

# reduce 31 omitted

# reduce 32 omitted

# reduce 33 omitted

def _reduce_34(val, _values, result)
                      result = new_assign val[0], val[1], s(:svalue, val[2])
                    
    result
end

def _reduce_35(val, _values, result)
                      result = s(:masgn, val[0], s(:to_ary, val[2]))
                    
    result
end

def _reduce_36(val, _values, result)
                      result = s(:masgn, val[0], val[2])
                    
    result
end

# reduce 37 omitted

# reduce 38 omitted

def _reduce_39(val, _values, result)
                      result = s(:and, val[0], val[2])
                    
    result
end

def _reduce_40(val, _values, result)
                      result = s(:or, val[0], val[2])
                    
    result
end

def _reduce_41(val, _values, result)
                      result = new_unary_call(['!', []], val[1])
                    
    result
end

def _reduce_42(val, _values, result)
                      result = new_unary_call(val[0], val[1])
                    
    result
end

# reduce 43 omitted

# reduce 44 omitted

# reduce 45 omitted

# reduce 46 omitted

def _reduce_47(val, _values, result)
                      result = new_return(val[0], val[1])
                    
    result
end

def _reduce_48(val, _values, result)
                      result = new_break(val[0], val[1])
                    
    result
end

def _reduce_49(val, _values, result)
                      result = new_next(val[0], val[1])
                    
    result
end

# reduce 50 omitted

# reduce 51 omitted

# reduce 52 omitted

# reduce 53 omitted

def _reduce_54(val, _values, result)
                      result = new_iter(val[1], val[2])

    result
end

def _reduce_55(val, _values, result)
                      result = new_call(nil, val[0], val[1])
                    
    result
end

def _reduce_56(val, _values, result)
                      result = new_call(nil, val[0], val[1]) << val[2]

    result
end

def _reduce_57(val, _values, result)
                      result = new_js_call(val[0], val[2], val[3])
                    
    result
end

# reduce 58 omitted

def _reduce_59(val, _values, result)
                      result = new_call(val[0], val[2], val[3])
                    
    result
end

# reduce 60 omitted

def _reduce_61(val, _values, result)
                    result = new_call(val[0], val[2], val[3])
                  
    result
end

# reduce 62 omitted

def _reduce_63(val, _values, result)
                      result = new_super(val[0], val[1])
                    
    result
end

def _reduce_64(val, _values, result)
                      result = new_yield val[1]
                    
    result
end

def _reduce_65(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_66(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_67(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_68(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_69(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_70(val, _values, result)
                      result = val[0] << val[1]
                    
    result
end

def _reduce_71(val, _values, result)
                      result = val[0] << s(:splat, val[2])
                    
    result
end

def _reduce_72(val, _values, result)
                     result = (val[0] << s(:splat, val[2])).concat(val[4].children)

    result
end

def _reduce_73(val, _values, result)
                      result = val[0] << s(:splat)
                    
    result
end

def _reduce_74(val, _values, result)
                      result = (val[0] << s(:splat)).concat(val[3].children)

    result
end

def _reduce_75(val, _values, result)
                      result = s(:array, s(:splat, val[1]))
                    
    result
end

def _reduce_76(val, _values, result)
                      result = s(:array, s(:splat, val[1])).concat(val[3].children)
                    
    result
end

def _reduce_77(val, _values, result)
                      result = s(:array, s(:splat))

    result
end

def _reduce_78(val, _values, result)
                      result = s(:array, s(:splat)).concat(val[2].children)
                    
    result
end

def _reduce_79(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_80(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_81(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

def _reduce_82(val, _values, result)
                      result = val[0] << val[1]

    result
end

def _reduce_83(val, _values, result)
                      result = s(:array, val[0])

    result
end

def _reduce_84(val, _values, result)
                      result = val[0] << val[2]
                    
    result
end

def _reduce_85(val, _values, result)
                      result = new_assignable val[0]

    result
end

def _reduce_86(val, _values, result)
                      args = val[2] ? val[2] : []
                      result = s(:attrasgn, val[0], :[]=, s(:arglist, *args))
                    
    result
end

def _reduce_87(val, _values, result)
                      result = new_call val[0], val[2], []
                    
    result
end

# reduce 88 omitted

# reduce 89 omitted

# reduce 90 omitted

# reduce 91 omitted

# reduce 92 omitted

def _reduce_93(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_94(val, _values, result)
                      result = new_js_attrasgn(val[0], val[2])
                    
    result
end

def _reduce_95(val, _values, result)
                      result = new_attrasgn(val[0], :[]=, val[2])
                    
    result
end

def _reduce_96(val, _values, result)
                      result = new_attrasgn(val[0], op_to_setter(val[2]))
                    
    result
end

def _reduce_97(val, _values, result)
                      result = new_attrasgn(val[0], op_to_setter(val[2]))
                    
    result
end

def _reduce_98(val, _values, result)
                      result = new_attrasgn(val[0], op_to_setter(val[2]))
                    
    result
end

def _reduce_99(val, _values, result)
                      result = new_colon2(val[0], val[1], val[2])
                    
    result
end

def _reduce_100(val, _values, result)
                      result = new_colon3(val[0], val[1])

    result
end

# reduce 101 omitted

# reduce 102 omitted

def _reduce_103(val, _values, result)
                      result = new_colon3(val[0], val[1])
                    
    result
end

def _reduce_104(val, _values, result)
                      result = new_const(val[0])
                    
    result
end

def _reduce_105(val, _values, result)
                      result = new_colon2(val[0], val[1], val[2])

    result
end

# reduce 106 omitted

# reduce 107 omitted

# reduce 108 omitted

def _reduce_109(val, _values, result)
                      lexer.lex_state = :expr_end
                      result = val[0]
                    
    result
end

def _reduce_110(val, _values, result)
                      lexer.lex_state = :expr_end
                      result = val[0]

    result
end

def _reduce_111(val, _values, result)
                      result = new_sym(val[0])
                    
    result
end

# reduce 112 omitted

def _reduce_113(val, _values, result)
                      result = s(:undef, val[0])
                    
    result
end

def _reduce_114(val, _values, result)
                      result = val[0] << val[2]

    result
end

# reduce 115 omitted

# reduce 116 omitted

# reduce 117 omitted

# reduce 118 omitted

# reduce 119 omitted

# reduce 120 omitted

# reduce 121 omitted

# reduce 122 omitted

# reduce 123 omitted

# reduce 124 omitted

# reduce 125 omitted

# reduce 126 omitted

# reduce 127 omitted

# reduce 128 omitted

# reduce 129 omitted

# reduce 130 omitted

# reduce 131 omitted

# reduce 132 omitted

# reduce 133 omitted

# reduce 134 omitted

# reduce 135 omitted

# reduce 136 omitted

# reduce 137 omitted

# reduce 138 omitted

# reduce 139 omitted

# reduce 140 omitted

# reduce 141 omitted

# reduce 142 omitted

# reduce 143 omitted

# reduce 144 omitted

# reduce 145 omitted

# reduce 146 omitted

# reduce 147 omitted

# reduce 148 omitted

# reduce 149 omitted

# reduce 150 omitted

# reduce 151 omitted

# reduce 152 omitted

# reduce 153 omitted

# reduce 154 omitted

# reduce 155 omitted

# reduce 156 omitted

# reduce 157 omitted

# reduce 158 omitted

# reduce 159 omitted

# reduce 160 omitted

# reduce 161 omitted

# reduce 162 omitted

# reduce 163 omitted

# reduce 164 omitted

# reduce 165 omitted

# reduce 166 omitted

# reduce 167 omitted

# reduce 168 omitted

# reduce 169 omitted

# reduce 170 omitted

# reduce 171 omitted

# reduce 172 omitted

# reduce 173 omitted

# reduce 174 omitted

# reduce 175 omitted

# reduce 176 omitted

# reduce 177 omitted

# reduce 178 omitted

# reduce 179 omitted

# reduce 180 omitted

# reduce 181 omitted

# reduce 182 omitted

# reduce 183 omitted

# reduce 184 omitted

# reduce 185 omitted

# reduce 186 omitted

# reduce 187 omitted

# reduce 188 omitted

def _reduce_189(val, _values, result)
                      result = new_assign(val[0], val[1], val[2])
                    
    result
end

def _reduce_190(val, _values, result)
                      result = new_assign val[0], val[1], s(:rescue_mod, val[2], val[4])
                    
    result
end

def _reduce_191(val, _values, result)
                      result = new_op_asgn val[1], val[0], val[2]
                    
    result
end

def _reduce_192(val, _values, result)
                      result = new_op_asgn1(val[0], val[2], val[4], val[5])
                    
    result
end

def _reduce_193(val, _values, result)
                      raise ".JS[...] #{val[4]} is not supported"
                    
    result
end

def _reduce_194(val, _values, result)
                      result = s(:op_asgn2, val[0], op_to_setter(val[2]), value(val[3]).to_sym, val[4])

    result
end

# reduce 195 omitted

# reduce 196 omitted

# reduce 197 omitted

# reduce 198 omitted

# reduce 199 omitted

def _reduce_200(val, _values, result)
                      result = new_irange(val[0], val[1], val[2])
                    
    result
end

def _reduce_201(val, _values, result)
                      result = new_erange(val[0], val[1], val[2])
                    
    result
end

def _reduce_202(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_203(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_204(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_205(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_206(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_207(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_208(val, _values, result)
                      result = new_call new_binary_call(new_int(val[1]), val[2], val[3]), [:"-@", []], []
                    
    result
end

def _reduce_209(val, _values, result)
                      result = new_call new_binary_call(new_float(val[1]), val[2], val[3]), [:"-@", []], []

    result
end

def _reduce_210(val, _values, result)
                      result = new_call val[1], [:"+@", []], []
                      if [:int, :float].include? val[1].type
                        result = val[1]
                      end
                    
    result
end

def _reduce_211(val, _values, result)
                      result = new_call val[1], [:"-@", []], []
                      if val[1].type == :int
                        val[1][1] = -val[1][1]
                        result = val[1]
                      elsif val[1].type == :float
                        val[1][1] = -val[1][1].to_f
                        result = val[1]
                      end
                    
    result
end

def _reduce_212(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_213(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_214(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_215(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_216(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_217(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_218(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_219(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_220(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_221(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_222(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_223(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_224(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_225(val, _values, result)
                      result = new_unary_call(val[0], val[1])
                    
    result
end

def _reduce_226(val, _values, result)
                      result = new_unary_call(val[0], val[1])
                    
    result
end

def _reduce_227(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_228(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_229(val, _values, result)
                      result = new_and(val[0], val[1], val[2])
                    
    result
end

def _reduce_230(val, _values, result)
                      result = new_or(val[0], val[1], val[2])
                    
    result
end

def _reduce_231(val, _values, result)
                      result = s(:defined, val[2])

    result
end

def _reduce_232(val, _values, result)
 lexer.cond_push 1
    result
end

def _reduce_233(val, _values, result)
 lexer.cond_pop
    result
end

def _reduce_234(val, _values, result)
                      result = new_if(val[1], val[0], val[3], val[6])
                    
    result
end

# reduce 235 omitted

# reduce 236 omitted

def _reduce_237(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_238(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_239(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_240(val, _values, result)
                      val[0] << s(:hash, *val[2])
                      result = val[0]
                    
    result
end

def _reduce_241(val, _values, result)
                      result = [s(:hash, *val[0])]
                    
    result
end

def _reduce_242(val, _values, result)
                      result = val[0] << val[2]

    result
end

def _reduce_243(val, _values, result)
                      result = val[1]
                    
    result
end

# reduce 244 omitted

def _reduce_245(val, _values, result)
                      result = []
                    
    result
end

# reduce 246 omitted

def _reduce_247(val, _values, result)
                      result = []
                    
    result
end

# reduce 248 omitted

def _reduce_249(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_250(val, _values, result)
                      result = val[0]
                      result << new_hash(nil, val[2], nil)
                    
    result
end

def _reduce_251(val, _values, result)
                      result = [new_hash(nil, val[0], nil)]
                    
    result
end

def _reduce_252(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_253(val, _values, result)
                      result = val[0]
                      add_block_pass val[0], val[1]
                    
    result
end

def _reduce_254(val, _values, result)
                      result = [new_hash(nil, val[0], nil)]
                      add_block_pass result, val[1]
                    
    result
end

def _reduce_255(val, _values, result)
                      result = val[0]
                      result << new_hash(nil, val[2], nil)
                      result << val[3] if val[3]

    result
end

def _reduce_256(val, _values, result)
                      result = []
                      add_block_pass result, val[0]
                    
    result
end

# reduce 257 omitted

# reduce 258 omitted

def _reduce_259(val, _values, result)
                      lexer.cmdarg_push 1

    result
end

def _reduce_260(val, _values, result)
                      lexer.cmdarg_pop
                      result = val[1]
                    
    result
end

# reduce 261 omitted

def _reduce_262(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_263(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_264(val, _values, result)
                      result = new_block_pass(val[0], val[1])
                    
    result
end

def _reduce_265(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_266(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_267(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_268(val, _values, result)
                      result = [new_splat(val[0], val[1])]
                    
    result
end

def _reduce_269(val, _values, result)
                      result = val[0] << val[2]
                    
    result
end

def _reduce_270(val, _values, result)
                      result  = val[0] << new_splat(val[2], val[3])
                    
    result
end

def _reduce_271(val, _values, result)
                      val[0] << val[2]
                      result = s(:array, *val[0])
                    
    result
end

def _reduce_272(val, _values, result)
                      val[0] << s(:splat, val[3])
                      result = s(:array, *val[0])

    result
end

def _reduce_273(val, _values, result)
                      result = s(:splat, val[1])
                    
    result
end

# reduce 274 omitted

# reduce 275 omitted

# reduce 276 omitted

# reduce 277 omitted

# reduce 278 omitted

# reduce 279 omitted

# reduce 280 omitted

# reduce 281 omitted

# reduce 282 omitted

def _reduce_283(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_284(val, _values, result)
                      result = s(:begin, val[2])
                    
    result
end

def _reduce_285(val, _values, result)
 lexer.lex_state = :expr_endarg
    result
end

def _reduce_286(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_287(val, _values, result)
                      result = new_paren(val[0], val[1], val[2])
                    
    result
end

def _reduce_288(val, _values, result)
                      result = new_colon2(val[0], val[1], val[2])
                    
    result
end

def _reduce_289(val, _values, result)
                      result = new_colon3(val[0], val[1])
                    
    result
end

def _reduce_290(val, _values, result)
                      result = new_call val[0], [:[], []], val[2]
                    
    result
end

def _reduce_291(val, _values, result)
                      result = new_js_call val[0], [:[], []], val[2]
                    
    result
end

def _reduce_292(val, _values, result)
                      result = new_array(val[0], val[1], val[2])
                    
    result
end

def _reduce_293(val, _values, result)
                      result = new_hash(val[0], val[1], val[2])
                    
    result
end

def _reduce_294(val, _values, result)
                      result = new_return(val[0])
                    
    result
end

def _reduce_295(val, _values, result)
                      result = new_yield val[2]
                    
    result
end

def _reduce_296(val, _values, result)
                      result = s(:yield)
                    
    result
end

def _reduce_297(val, _values, result)
                      result = s(:yield)
                    
    result
end

def _reduce_298(val, _values, result)
                      result = s(:defined, val[3])
                    
    result
end

def _reduce_299(val, _values, result)
                      result = new_unary_call(['!', []], val[2])

    result
end

def _reduce_300(val, _values, result)
                      result = new_unary_call(['!', []], new_nil(val[0]))

    result
end

def _reduce_301(val, _values, result)
                      result = new_call(nil, val[0], [])
                      result << val[1]
                    
    result
end

# reduce 302 omitted

def _reduce_303(val, _values, result)
                      val[0] << val[1]
                      result = val[0]
                    
    result
end

def _reduce_304(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_305(val, _values, result)
                      result = new_if(val[0], val[1], val[3], val[4])
                    
    result
end

def _reduce_306(val, _values, result)
                      result = new_if(val[0], val[1], val[4], val[3])
                    
    result
end

def _reduce_307(val, _values, result)
                      lexer.cond_push 1
                      result = lexer.line
                    
    result
end

def _reduce_308(val, _values, result)
                      lexer.cond_pop
                    
    result
end

def _reduce_309(val, _values, result)
                      result = s(:while, val[2], val[5])
                    
    result
end

def _reduce_310(val, _values, result)
                      lexer.cond_push 1
                      result = lexer.line
                    
    result
end

def _reduce_311(val, _values, result)
                      lexer.cond_pop
                    
    result
end

def _reduce_312(val, _values, result)
                      result = s(:until, val[2], val[5])
                    
    result
end

def _reduce_313(val, _values, result)
                      result = s(:case, val[1], *val[3])
                    
    result
end

def _reduce_314(val, _values, result)
                      result = s(:case, nil, *val[2])
                    
    result
end

def _reduce_315(val, _values, result)
                      result = s(:case, nil, val[3])
                    
    result
end

def _reduce_316(val, _values, result)
                      lexer.cond_push 1
                      result = lexer.line
                    
    result
end

def _reduce_317(val, _values, result)
                      lexer.cond_pop
                    
    result
end

def _reduce_318(val, _values, result)
                      result = s(:for, val[4], val[1], val[7])
                    
    result
end

def _reduce_319(val, _values, result)
                      # ...
                    
    result
end

def _reduce_320(val, _values, result)
                      result = new_class val[0], val[1], val[2], val[4], val[5]
                    
    result
end

def _reduce_321(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_322(val, _values, result)
                      # ...
                    
    result
end

def _reduce_323(val, _values, result)
                      result = new_sclass(val[0], val[3], val[6], val[7])
                    
    result
end

def _reduce_324(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_325(val, _values, result)
                      # ...
                    
    result
end

def _reduce_326(val, _values, result)
                      result = new_module(val[0], val[2], val[4], val[5])
                    
    result
end

def _reduce_327(val, _values, result)
                      push_scope
                      lexer.lex_state = :expr_endfn
                    
    result
end

def _reduce_328(val, _values, result)
                      result = new_def(val[0], nil, val[1], val[3], val[4], val[5])
                      pop_scope
                    
    result
end

def _reduce_329(val, _values, result)
                       lexer.lex_state = :expr_fname
                    
    result
end

def _reduce_330(val, _values, result)
                      push_scope
                      lexer.lex_state = :expr_endfn
                    
    result
end

def _reduce_331(val, _values, result)
                      result = new_def(val[0], val[1], val[4], val[6], val[7], val[8])
                      pop_scope
                    
    result
end

def _reduce_332(val, _values, result)
                      result = new_break(val[0])

    result
end

def _reduce_333(val, _values, result)
                      result = s(:next)

    result
end

def _reduce_334(val, _values, result)
                      result = s(:redo)
                    
    result
end

# reduce 335 omitted

# reduce 336 omitted

# reduce 337 omitted

# reduce 338 omitted

# reduce 339 omitted

# reduce 340 omitted

# reduce 341 omitted

# reduce 342 omitted

# reduce 343 omitted

def _reduce_344(val, _values, result)
                      result = new_call nil, [:lambda, []], []
                      result << new_iter(val[0], val[1])

    result
end

def _reduce_345(val, _values, result)
                      result = val[1]

    result
end

def _reduce_346(val, _values, result)
                      result = nil

    result
end

# reduce 347 omitted

# reduce 348 omitted

def _reduce_349(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_350(val, _values, result)
                      result = val[1]

    result
end

def _reduce_351(val, _values, result)
                      result = val[0]

    result
end

def _reduce_352(val, _values, result)
                      result = new_if(val[0], val[1], val[3], val[4])
                    
    result
end

# reduce 353 omitted

def _reduce_354(val, _values, result)
                      result = val[1]

    result
end

def _reduce_355(val, _values, result)
                      result = s(:block, val[0])

    result
end

def _reduce_356(val, _values, result)
                      val[0] << val[2]
                      result = val[0]

    result
end

def _reduce_357(val, _values, result)
                      result = new_assign(new_assignable(new_ident(
                                  val[0])), val[1], val[2])
                    
    result
end

# reduce 358 omitted

def _reduce_359(val, _values, result)
                      result = nil

    result
end

def _reduce_360(val, _values, result)
                      result = nil

    result
end

def _reduce_361(val, _values, result)
                      result = val[1]

    result
end

def _reduce_362(val, _values, result)
                      # TODO: do something!

    result
end

def _reduce_363(val, _values, result)

    result
end

def _reduce_364(val, _values, result)

    result
end

def _reduce_365(val, _values, result)

    result
end

def _reduce_366(val, _values, result)
                      result = s(:array, val[0], val[2])
                      result << s(:block_pass, s(:lasgn, val[3])) if val[3]
                      result

    result
end

def _reduce_367(val, _values, result)
                      result = s(:array, val[0])
                      result << s(:block_pass, s(:lasgn, val[1])) if val[1]
                      result

    result
end

def _reduce_368(val, _values, result)
                      result = s(:array, val[0])
                      result << s(:block_pass, s(:lasgn, val[1])) if val[1]
                      result

    result
end

def _reduce_369(val, _values, result)
                      result = s(:array, s(:block_pass, s(:lasgn, val[0])))

    result
end

def _reduce_370(val, _values, result)
                      result = val[1]

    result
end

def _reduce_371(val, _values, result)
                      nil

    result
end

def _reduce_372(val, _values, result)
                      result = new_block_args(normal_block_args(val[0]),
                                              opt_block_args(val[2]),
                                              rest_block_arg(val[4]),
                                              tail_block_args(val[5]))

    result
end

def _reduce_373(val, _values, result)
                      result = new_block_args(normal_block_args(val[0]),
                                              opt_block_args(val[2]),
                                              rest_block_arg(val[4]),
                                              normal_block_args(val[6]),
                                              tail_block_args(val[7]))

    result
end

def _reduce_374(val, _values, result)
                      result = new_block_args(normal_block_args(val[0]),
                                              opt_block_args(val[2]),
                                              tail_block_args(val[3]))

    result
end

def _reduce_375(val, _values, result)
                      result = new_block_args(normal_block_args(val[0]),
                                              opt_block_args(val[2]),
                                              normal_block_args(val[4]),
                                              tail_block_args(val[5]))

    result
end

def _reduce_376(val, _values, result)
                      result = new_block_args(normal_block_args(val[0]),
                                              rest_block_arg(val[2]),
                                              tail_block_args(val[3]))

    result
end

def _reduce_377(val, _values, result)
                      result = new_block_args(normal_block_args(val[0]))

    result
end

def _reduce_378(val, _values, result)
                      result = new_block_args(normal_block_args(val[0]),
                                              rest_block_arg(val[2]),
                                              normal_block_args(val[4]),
                                              tail_block_args(val[5]))

    result
end

def _reduce_379(val, _values, result)
                      result = new_block_args(normal_block_args(val[0]),
                                              tail_block_args(val[1]))

    result
end

def _reduce_380(val, _values, result)
                      result = new_block_args(opt_block_args(val[0]),
                                              rest_block_arg(val[2]),
                                              tail_block_args(val[3]))

    result
end

def _reduce_381(val, _values, result)
                      result = new_block_args(opt_block_args(val[0]),
                                              rest_block_arg(val[2]),
                                              normal_block_args(val[4]),
                                              tail_block_args(val[5]))

    result
end

def _reduce_382(val, _values, result)
                      result = new_block_args(opt_block_args(val[0]),
                                              tail_block_args(val[1]))

    result
end

def _reduce_383(val, _values, result)
                      result = new_block_args(opt_block_args(val[0]),
                                              normal_block_args(val[2]),
                                              tail_block_args(val[3]))

    result
end

def _reduce_384(val, _values, result)
                      result = new_block_args(rest_block_arg(val[0]),
                                              tail_block_args(val[1]))

    result
end

def _reduce_385(val, _values, result)

    result
end

def _reduce_386(val, _values, result)
                      result = new_block_args(tail_block_args(val[0]))

    result
end

def _reduce_387(val, _values, result)
                      push_scope :block
                      result = lexer.line

    result
end

def _reduce_388(val, _values, result)
                      result = new_iter val[2], val[3]
                      pop_scope

    result
end

def _reduce_389(val, _values, result)
                      val[0] << val[1]
                      result = val[0]

    result
end

# reduce 390 omitted

# reduce 391 omitted

# reduce 392 omitted

def _reduce_393(val, _values, result)
                      result = new_call(nil, val[0], val[1])

    result
end

def _reduce_394(val, _values, result)
                      result = new_call(val[0], val[2], val[3])

    result
end

def _reduce_395(val, _values, result)
                      result = new_js_call(val[0], val[2], val[3])

    result
end

def _reduce_396(val, _values, result)
                      result = new_call(val[0], [:call, []], val[2])

    result
end

def _reduce_397(val, _values, result)
                      result = new_call(val[0], val[2], val[3])

    result
end

def _reduce_398(val, _values, result)
                      result = new_call(val[0], val[2])

    result
end

def _reduce_399(val, _values, result)
                      result = new_super(val[0], val[1])

    result
end

def _reduce_400(val, _values, result)
                      result = new_super(val[0], nil)

    result
end

def _reduce_401(val, _values, result)
                      push_scope :block
                      result = lexer.line

    result
end

def _reduce_402(val, _values, result)
                      result = new_iter val[2], val[3]
                      pop_scope

    result
end

def _reduce_403(val, _values, result)
                      push_scope :block
                      result = lexer.line

    result
end

def _reduce_404(val, _values, result)
                      result = new_iter val[2], val[3]
                      pop_scope

    result
end

def _reduce_405(val, _values, result)
                      result = lexer.line

    result
end

def _reduce_406(val, _values, result)
                      part = s(:when, s(:array, *val[2]), val[4])
                      result = [part]
                      result.push(*val[5]) if val[5]

    result
end

def _reduce_407(val, _values, result)
                      result = [val[0]]

    result
end

# reduce 408 omitted

def _reduce_409(val, _values, result)
                      exc = val[1] || s(:array)
                      exc << new_assign(val[2], val[2], s(:gvar, '$!'.intern)) if val[2]
                      result = [s(:resbody, exc, val[4])]
                      result.push val[5].first if val[5]

    result
end

def _reduce_410(val, _values, result)
                      result = nil

    result
end

def _reduce_411(val, _values, result)
                      result = s(:array, val[0])

    result
end

# reduce 412 omitted

# reduce 413 omitted

def _reduce_414(val, _values, result)
                      result = val[1]

    result
end

def _reduce_415(val, _values, result)
                      result = nil

    result
end

def _reduce_416(val, _values, result)
                      result = val[1].nil? ? s(:nil) : val[1]

    result
end

# reduce 417 omitted

# reduce 418 omitted

# reduce 419 omitted

# reduce 420 omitted

def _reduce_421(val, _values, result)
                      result = new_str val[0]

    result
end

# reduce 422 omitted

def _reduce_423(val, _values, result)
                    result = str_append val[0], val[1]

    result
end

def _reduce_424(val, _values, result)
                      result = val[1]

    result
end

def _reduce_425(val, _values, result)
                      result = s(:str, value(val[0]))

    result
end

def _reduce_426(val, _values, result)
                      result = new_xstr(val[0], val[1], val[2])

    result
end

def _reduce_427(val, _values, result)
                      result = new_regexp val[1], val[2]

    result
end

def _reduce_428(val, _values, result)
                      result = s(:array)

    result
end

def _reduce_429(val, _values, result)
                      result = val[1]

    result
end

def _reduce_430(val, _values, result)
                      result = s(:array)

    result
end

def _reduce_431(val, _values, result)
                      part = val[1]
                      part = s(:dstr, "", val[1]) if part.type == :evstr
                      result = val[0] << part
                    
    result
end

def _reduce_432(val, _values, result)
                      result = val[0]

    result
end

def _reduce_433(val, _values, result)
                      result = val[0].concat([val[1]])

    result
end

def _reduce_434(val, _values, result)
                      result = s(:array)

    result
end

def _reduce_435(val, _values, result)
                      result = val[1]

    result
end

def _reduce_436(val, _values, result)
                      result = s(:array)

    result
end

def _reduce_437(val, _values, result)
                      result = val[0] << s(:str, value(val[1]))

    result
end

def _reduce_438(val, _values, result)
                      result = nil

    result
end

def _reduce_439(val, _values, result)
                      result = str_append val[0], val[1]

    result
end

def _reduce_440(val, _values, result)
                      result = nil

    result
end

def _reduce_441(val, _values, result)
                      result = str_append val[0], val[1]

    result
end

def _reduce_442(val, _values, result)
                      result = new_str_content(val[0])

    result
end

def _reduce_443(val, _values, result)
                      result = lexer.strterm
                      lexer.strterm = nil

    result
end

def _reduce_444(val, _values, result)
                      lexer.strterm = val[1]
                      result = new_evstr(val[2])

    result
end

def _reduce_445(val, _values, result)
                      result = lexer.strterm
                      lexer.strterm = nil
                      lexer.lex_state = :expr_beg

    result
end

def _reduce_446(val, _values, result)
                      lexer.strterm = val[1]
                      result = new_evstr(val[2])

    result
end

def _reduce_447(val, _values, result)
                      result = new_gvar(val[0])

    result
end

def _reduce_448(val, _values, result)
                      result = new_ivar(val[0])

    result
end

def _reduce_449(val, _values, result)
                      result = new_cvar(val[0])

    result
end

# reduce 450 omitted

def _reduce_451(val, _values, result)
                      result = new_sym(val[1])
                      lexer.lex_state = :expr_end

    result
end

def _reduce_452(val, _values, result)
                      result = new_sym(val[0])

    result
end

# reduce 453 omitted

# reduce 454 omitted

# reduce 455 omitted

# reduce 456 omitted

def _reduce_457(val, _values, result)
                      result = new_dsym val[1]

    result
end

def _reduce_458(val, _values, result)
                      result = new_int(val[0])

    result
end

def _reduce_459(val, _values, result)
                      result = new_float(val[0])

    result
end

def _reduce_460(val, _values, result)
                    result = negate_num(new_int(val[1]))

    result
end

def _reduce_461(val, _values, result)
                    result = negate_num(new_float(val[1]))

    result
end

def _reduce_462(val, _values, result)
                    result = new_int(val[1])

    result
end

def _reduce_463(val, _values, result)
                    result = new_float(val[1])

    result
end

def _reduce_464(val, _values, result)
                      result = new_ident(val[0])

    result
end

def _reduce_465(val, _values, result)
                      result = new_ivar(val[0])

    result
end

def _reduce_466(val, _values, result)
                      result = new_gvar(val[0])

    result
end

def _reduce_467(val, _values, result)
                      result = new_const(val[0])

    result
end

def _reduce_468(val, _values, result)
                      result = new_cvar(val[0])

    result
end

def _reduce_469(val, _values, result)
                      result = new_nil(val[0])

    result
end

def _reduce_470(val, _values, result)
                      result = new_self(val[0])

    result
end

def _reduce_471(val, _values, result)
                      result = new_true(val[0])

    result
end

def _reduce_472(val, _values, result)
                      result = new_false(val[0])

    result
end

def _reduce_473(val, _values, result)
                      result = new___FILE__(val[0])

    result
end

def _reduce_474(val, _values, result)
                      result = new___LINE__(val[0])

    result
end

def _reduce_475(val, _values, result)
                      result = new_var_ref(val[0])

    result
end

def _reduce_476(val, _values, result)
                      result = new_assignable val[0]

    result
end

def _reduce_477(val, _values, result)
                      result = s(:nth_ref, value(val[0]))

    result
end

# reduce 478 omitted

def _reduce_479(val, _values, result)
                      result = nil

    result
end

def _reduce_480(val, _values, result)
                      result = val[1]

    result
end

def _reduce_481(val, _values, result)
                      result = nil

    result
end

def _reduce_482(val, _values, result)
                      result = val[1]
                      lexer.lex_state = :expr_beg

    result
end

def _reduce_483(val, _values, result)
                      result = val[0]
                      lexer.lex_state = :expr_beg

    result
end

def _reduce_484(val, _values, result)

    result
end

def _reduce_485(val, _values, result)

    result
end

def _reduce_486(val, _values, result)

    result
end

def _reduce_487(val, _values, result)

    result
end

# reduce 488 omitted

# reduce 489 omitted

def _reduce_490(val, _values, result)
                      result = new_kwrestarg(val[1])

    result
end

def _reduce_491(val, _values, result)
                      result = new_kwrestarg()

    result
end

def _reduce_492(val, _values, result)
                      result = new_sym(val[0])

    result
end

def _reduce_493(val, _values, result)
                      result = new_kwoptarg(val[0], val[1])

    result
end

def _reduce_494(val, _values, result)
                      result = new_kwarg(val[0])

    result
end

def _reduce_495(val, _values, result)
                      result = [val[0]]

    result
end

def _reduce_496(val, _values, result)
                      result = val[0]
                      result << val[2]

    result
end

def _reduce_497(val, _values, result)
                      result = new_args_tail(val[0], val[2], val[3])

    result
end

def _reduce_498(val, _values, result)
                      result = new_args_tail(val[0], nil, val[1])

    result
end

def _reduce_499(val, _values, result)
                      result = new_args_tail(nil, val[0], val[1])

    result
end

def _reduce_500(val, _values, result)
                      result = new_args_tail(nil, nil, val[0])

    result
end

def _reduce_501(val, _values, result)
                      result = val[1]

    result
end

def _reduce_502(val, _values, result)
                      result = new_args_tail(nil, nil, nil)

    result
end

def _reduce_503(val, _values, result)
                      result = new_args(val[0], val[2], val[4], val[5])

    result
end

def _reduce_504(val, _values, result)
                      result = new_args(val[0], val[2], nil, val[3])

    result
end

def _reduce_505(val, _values, result)
                      result = new_args(val[0], nil, val[2], val[3])

    result
end

def _reduce_506(val, _values, result)
                      result = new_args(val[0], nil, nil, val[1])

    result
end

def _reduce_507(val, _values, result)
                      result = new_args(nil, val[0], val[2], val[3])

    result
end

def _reduce_508(val, _values, result)
                      result = new_args(nil, val[0], nil, val[1])

    result
end

def _reduce_509(val, _values, result)
                      result = new_args(nil, nil, val[0], val[1])

    result
end

def _reduce_510(val, _values, result)
                      result = new_args(nil, nil, nil, val[0])

    result
end

def _reduce_511(val, _values, result)
                      result = new_args(nil, nil, nil, nil)

    result
end

# reduce 512 omitted

def _reduce_513(val, _values, result)
                      result = value(val[0]).to_sym
                      scope.add_local result

    result
end

def _reduce_514(val, _values, result)
                      raise 'formal argument cannot be a constant'

    result
end

def _reduce_515(val, _values, result)
                      raise 'formal argument cannot be an instance variable'

    result
end

def _reduce_516(val, _values, result)
                      raise 'formal argument cannot be a class variable'

    result
end

def _reduce_517(val, _values, result)
                      raise 'formal argument cannot be a global variable'

    result
end

def _reduce_518(val, _values, result)
                      result = val[0]

    result
end

def _reduce_519(val, _values, result)
                      result = val[1]

    result
end

# reduce 520 omitted

# reduce 521 omitted

def _reduce_522(val, _values, result)
                      result = s(:lasgn, val[0])

    result
end

# reduce 523 omitted

def _reduce_524(val, _values, result)
                      result = s(:array, val[0])

    result
end

def _reduce_525(val, _values, result)
                      val[0] << val[2]
                      result = val[0]

    result
end

# reduce 526 omitted

# reduce 527 omitted

# reduce 528 omitted

# reduce 529 omitted

# reduce 530 omitted

# reduce 531 omitted

# reduce 532 omitted

def _reduce_533(val, _values, result)
                      result = s(:array, val[0])

    result
end

def _reduce_534(val, _values, result)
                      result = val[0] << val[2]

    result
end

def _reduce_535(val, _values, result)
                      result = new_assign(new_assignable(new_ident(val[0])), val[1], val[2])

    result
end

def _reduce_536(val, _values, result)
                      result = s(:block, val[0])

    result
end

def _reduce_537(val, _values, result)
                      result = val[0] << val[2]

    result
end

# reduce 538 omitted

# reduce 539 omitted

def _reduce_540(val, _values, result)
                      result = "*#{value(val[1])}".to_sym

    result
end

def _reduce_541(val, _values, result)
                      result = :"*"

    result
end

# reduce 542 omitted

# reduce 543 omitted

def _reduce_544(val, _values, result)
                      result = value(val[1]).to_sym

    result
end

def _reduce_545(val, _values, result)
                      result = val[1]

    result
end

def _reduce_546(val, _values, result)
                      result = nil

    result
end

def _reduce_547(val, _values, result)
                      result = val[0]

    result
end

def _reduce_548(val, _values, result)
                      result = val[1]

    result
end

def _reduce_549(val, _values, result)
                      result = []

    result
end

def _reduce_550(val, _values, result)
                      result = val[0]

    result
end

def _reduce_551(val, _values, result)
                      result = val[0]

    result
end

def _reduce_552(val, _values, result)
                      result = val[0].push(*val[2])

    result
end

def _reduce_553(val, _values, result)
                      result = [val[0], val[2]]

    result
end

def _reduce_554(val, _values, result)
                      result = [new_sym(val[0]), val[1]]

    result
end

def _reduce_555(val, _values, result)
                      result = [s(:sym, source(val[1]).to_sym), val[3]]

    result
end

# reduce 556 omitted

# reduce 557 omitted

# reduce 558 omitted

# reduce 559 omitted

# reduce 560 omitted

# reduce 561 omitted

# reduce 562 omitted

# reduce 563 omitted

# reduce 564 omitted

# reduce 565 omitted

# reduce 566 omitted

# reduce 567 omitted

# reduce 568 omitted

# reduce 569 omitted

# reduce 570 omitted

# reduce 571 omitted

# reduce 572 omitted

# reduce 573 omitted

# reduce 574 omitted

# reduce 575 omitted

# reduce 576 omitted

# reduce 577 omitted

# reduce 578 omitted

def _reduce_579(val, _values, result)
                      result = nil

    result
end

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module Opal
