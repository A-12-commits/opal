#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.10
# from Racc grammer file "".
#

require 'racc/parser.rb'
module Opal
  class Parser < Racc::Parser


##### State transition tables begin ###

clist = [
'63,64,65,8,51,557,584,697,57,58,269,-501,557,61,880,59,60,62,23,24,66',
'67,-83,526,534,584,525,22,28,27,89,88,90,91,-444,822,17,626,-84,596',
'759,-64,7,41,6,9,93,92,626,83,50,85,84,86,888,87,94,95,626,81,82,889',
'38,39,-435,626,586,585,591,392,625,-435,-435,697,202,203,-501,697,-75',
'-435,574,625,-88,-89,36,586,585,30,-503,-83,52,625,557,-91,726,32,268',
'-501,625,40,557,595,202,203,557,-84,100,18,696,887,-92,99,79,73,75,76',
'77,78,100,-435,556,74,80,99,-90,100,-83,556,533,56,99,565,53,-83,-82',
'37,54,63,64,65,8,51,-84,202,203,57,58,269,526,-84,61,528,59,60,62,23',
'24,66,67,202,203,202,203,304,22,28,27,89,88,90,91,-503,100,17,696,269',
'100,99,696,7,41,99,9,93,92,573,83,50,85,84,86,304,87,94,95,584,81,82',
'622,38,39,-82,584,566,100,100,-91,556,-91,99,99,-91,264,100,766,556',
'845,100,99,556,754,36,99,-92,30,-92,73,52,-92,665,100,742,32,268,74',
'99,40,-90,-82,-90,264,-443,-90,764,18,-82,202,203,-443,79,73,75,76,77',
'78,586,585,587,74,80,-321,268,586,585,597,392,56,-321,607,53,788,769',
'37,54,63,64,65,-275,51,-90,437,584,57,58,-275,584,553,61,589,59,60,62',
'255,256,66,67,-443,769,552,564,743,254,287,291,89,88,90,91,400,-84,216',
'199,433,402,401,-321,-92,41,200,434,93,92,264,83,50,85,84,86,-95,87',
'94,95,-275,81,82,100,38,39,202,203,99,586,585,582,-274,586,585,-275',
'-92,513,-268,-274,-276,-275,-275,753,-504,-268,207,-276,-275,211,-443',
'505,52,-437,198,435,570,-443,506,543,-437,40,100,568,261,-442,-268,99',
'563,215,564,262,-442,-268,79,73,75,76,77,78,264,516,570,74,80,-94,541',
'-274,517,778,-275,56,540,-268,53,-276,-275,37,54,63,64,65,-276,51,224',
'-443,504,57,58,-276,526,569,61,528,59,60,62,255,256,66,67,-268,526,297',
'298,528,254,287,291,89,88,90,91,100,-438,216,435,569,99,100,602,-438',
'41,606,99,93,92,224,83,50,85,84,86,258,87,94,95,-276,81,82,537,38,39',
'769,224,228,233,234,235,230,232,240,241,236,237,-274,217,218,-274,474',
'238,239,-274,207,-82,-274,211,-504,100,52,-504,-90,472,99,775,221,251',
'227,40,223,222,219,220,231,229,225,215,226,340,339,-441,79,73,75,76',
'77,78,-441,776,-439,74,80,579,242,540,-227,-439,679,56,580,-274,53,-432',
'-274,37,54,63,64,65,-432,51,-440,100,543,57,58,474,99,-440,61,779,59',
'60,62,255,256,66,67,102,103,104,105,106,254,287,291,89,88,90,91,780',
'-444,216,337,336,340,339,602,543,41,783,857,93,92,745,83,50,85,84,86',
'258,87,94,95,590,81,82,769,38,39,792,224,228,233,234,235,230,232,240',
'241,236,237,-80,217,218,679,793,238,239,-88,207,509,510,211,788,769',
'52,337,336,340,339,631,221,251,227,40,223,222,219,220,231,229,225,215',
'226,340,339,481,79,73,75,76,77,78,530,529,-503,74,80,796,242,337,336',
'340,339,56,857,594,53,513,732,37,54,63,64,65,481,51,598,304,642,57,58',
'224,601,604,61,643,59,60,62,23,24,66,67,102,103,104,105,106,22,28,27',
'89,88,90,91,804,201,17,-86,-81,337,336,340,339,41,-94,-89,93,92,806',
'83,50,85,84,86,304,87,94,95,809,81,82,810,38,39,515,224,228,233,234',
'235,230,232,240,241,236,237,-87,217,218,812,-255,238,239,-95,207,514',
'642,211,-254,648,52,-256,224,643,728,264,221,251,227,40,223,222,219',
'220,231,229,225,18,226,304,273,507,79,73,75,76,77,78,500,499,498,74',
'80,221,242,-63,-227,223,222,56,605,264,53,304,823,37,54,63,64,65,224',
'51,824,814,815,57,58,816,94,95,61,825,59,60,62,255,256,66,67,102,103',
'104,105,106,254,287,291,89,88,90,91,221,264,216,264,223,222,219,220',
'700,288,243,564,93,92,828,83,50,85,84,86,829,87,94,95,224,81,82,665',
'481,831,224,228,233,234,235,230,232,240,241,236,237,474,217,218,-254',
'835,238,239,472,224,285,224,840,282,470,221,52,842,212,223,222,221,439',
'227,438,223,222,219,220,231,229,225,224,226,848,850,851,304,79,73,75',
'76,77,78,692,224,689,74,80,242,623,436,861,-257,687,56,403,862,53,864',
'677,292,54,63,64,65,224,51,390,381,-504,57,58,543,378,874,61,875,59',
'60,62,255,256,66,67,673,672,304,760,881,254,28,27,89,88,90,91,221,809',
'216,809,223,222,219,220,810,41,671,665,93,92,296,83,50,85,84,86,258',
'87,94,95,519,81,82,295,38,39,890,224,228,233,234,235,230,232,240,241',
'236,237,657,217,218,243,655,238,239,-75,207,896,654,211,652,671,52,197',
'196,195,194,253,221,639,227,40,223,222,219,220,231,229,225,215,226,906',
'809,908,79,73,75,76,77,78,909,107,243,74,80,644,242,96,304,,,56,,,53',
',,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254',
'287,291,89,88,90,91,,545,216,332,330,329,,331,,41,,,93,92,,83,50,85',
'84,86,,87,94,95,,81,82,,38,39,,224,228,233,234,235,230,232,240,241,236',
'237,,217,218,,,238,239,,207,,,211,,545,52,332,330,329,,331,221,,227',
'40,223,222,219,220,231,229,225,215,226,,,,79,73,75,76,77,78,,,,74,80',
',242,,,,,56,,,53,,,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256',
'66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85',
'84,86,,87,94,95,,81,82,,38,39,,224,228,233,234,235,230,232,240,241,236',
'237,,217,218,,,238,239,,207,,,211,,,52,,,,,,221,,227,40,223,222,219',
'220,231,229,225,215,226,,,,79,73,75,76,77,78,,,,74,80,,242,,,,,56,,',
'53,,,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,',
'254,28,27,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,258,87',
'94,95,,81,82,,38,39,,224,228,233,234,235,230,232,240,241,236,237,,217',
'218,,,238,239,,207,,,211,,,52,,,,,253,221,,227,40,223,222,219,220,231',
'229,225,215,226,,,,79,73,75,76,77,78,,,,74,80,,242,,,,,56,,,53,,,37',
'54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287',
'291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81',
'82,,38,39,,224,228,233,234,235,230,232,240,241,236,237,,217,218,,,238',
'239,,207,,,211,,,52,,,,,,221,,227,40,223,222,219,220,231,229,225,215',
'226,,,,79,73,75,76,77,78,,,,74,80,,242,,,,,56,,,53,,,37,54,63,64,65',
'8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91',
',,17,,,,,,7,41,,9,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,224',
'228,233,234,235,230,232,240,241,236,237,,217,218,,,238,239,,36,,,30',
',,52,,,,,32,221,,227,40,223,222,219,220,231,229,225,18,226,,,,79,73',
'75,76,77,78,,,,74,80,,242,,,,,56,,,53,,,37,54,63,64,65,8,51,,,,57,58',
',,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41',
',9,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,224,228,233,234,235',
'230,232,240,241,236,237,,217,218,,,238,239,,36,,,30,,,52,,,,,32,221',
',227,40,223,222,219,220,231,229,225,18,226,,,,79,73,75,76,77,78,,,,74',
'80,,242,,,,,56,,,53,,,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23',
'24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,,83,50,85,84',
'86,,87,94,95,,81,82,,38,39,,224,228,233,234,235,230,232,240,241,236',
'237,,217,218,,,238,239,,207,,,211,212,,52,,,,,,221,,227,40,223,222,219',
'220,231,229,225,18,226,,,,79,73,75,76,77,78,,,,74,80,,242,,,,,56,,,53',
',,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28',
'27,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81',
'82,,38,39,,224,228,233,234,235,230,232,240,241,236,237,,217,218,,,238',
'239,,207,,,211,,,52,,,,,,221,,227,40,223,222,219,220,231,229,225,215',
'226,,,,79,73,75,76,77,78,,,,74,80,,242,,,,,56,,,53,,,37,54,63,64,65',
',51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,',
',17,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,224,228',
'233,234,235,230,232,240,241,236,237,,217,218,,,238,239,,207,,,211,,',
'52,,,,,,221,,227,40,223,222,219,220,231,229,225,18,226,,,,79,73,75,76',
'77,78,,,,74,80,,242,,,,,56,,,53,,,37,54,63,64,65,8,51,,,,57,58,,,,61',
',59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93',
'92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,224,228,233,234,235,230',
'232,240,241,236,237,,217,218,,,238,239,,36,,,30,,,52,,,,,32,221,,227',
'40,223,222,219,220,231,229,225,18,226,,,,79,73,75,76,77,78,,,,74,80',
',242,,,,,56,,,53,,,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256',
'66,67,,,,,,254,28,27,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84',
'86,258,87,94,95,,81,82,,38,39,,224,228,233,234,235,230,232,240,241,236',
'237,,217,218,,,238,239,,207,,,211,,,52,,,,,253,221,251,227,40,223,222',
'219,220,231,229,225,215,226,,,,79,73,75,76,77,78,,,,74,80,,242,,,,,56',
',,53,,,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,',
',,254,28,27,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,258,87',
'94,95,,81,82,,38,39,,224,228,233,234,235,230,232,240,241,236,237,,217',
'218,,,238,239,,207,,,211,,,52,,,,,253,221,251,227,40,223,222,219,220',
'231,229,225,215,226,,,,79,73,75,76,77,78,,,,74,80,,242,,,,,56,,,53,',
',37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254',
'28,27,89,88,90,91,,545,216,332,330,329,,331,,41,,,93,92,,83,50,85,84',
'86,258,87,94,95,,81,82,,38,39,545,,332,330,329,,331,,,548,,,,,,,,785',
',,207,,,211,224,,52,,,,,253,,251,,40,,,548,,238,239,,215,,,551,,79,73',
'75,76,77,78,,221,,74,80,223,222,219,220,,,56,,,53,,,37,54,63,64,65,',
'51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90',
'91,,545,216,332,330,329,,331,,41,,,93,92,,83,50,85,84,86,258,87,94,95',
',81,82,,38,39,,,,,,,,,,548,,,,,,,,551,,,207,,,211,,,52,,,,,631,,,,40',
',,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64',
'65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88',
'90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,258,87,94,95,,81,82,,38',
'39,,224,,,,,,,,,,,,,,,,238,239,,207,,,211,,,52,,,,,,221,,227,40,223',
'222,219,220,,,225,215,226,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
',,37,54,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28',
'27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,,83,50,85,84,86,,87,94,95,,81',
'82,,38,39,,224,,,,,,,,,,,,,,,,238,239,,36,,,30,,,52,,,,,32,221,,227',
'40,223,222,219,220,,,225,18,226,,,,79,73,75,76,77,78,,,,74,80,,,,,,',
'56,,,53,,,37,54,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,',
',,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,,83,50,85,84,86,,87',
'94,95,,81,82,,38,39,,224,,,,,,,,,,,,,,,,238,239,,36,,,30,,,52,,,,,32',
'221,,227,40,223,222,219,220,,,225,18,226,,,,79,73,75,76,77,78,,,,74',
'80,,,,,,,56,,,53,,,37,54,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24',
'66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,,83,50,85,84',
'86,,87,94,95,,81,82,,38,39,,224,-524,-524,-524,-524,230,232,,,-524,-524',
',,,,,238,239,,36,,,277,,,52,,,,,32,221,,227,40,223,222,219,220,231,229',
'225,18,226,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64',
'65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88',
'90,91,,,216,,,,,,,288,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,323,',
'332,330,329,,331,,,,,,,,,,,,,,,,,285,,,282,,,52,,,,,281,,,,334,,,,,',
',,337,336,340,339,,79,73,75,76,77,78,747,,,74,80,,,,,,,56,,,53,,,292',
'54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287',
'291,89,88,90,91,,,216,,,,,,,288,,,93,92,,83,50,85,84,86,,87,94,95,224',
'81,82,323,,332,330,329,,331,,,,,,,238,239,,,,,,,,,285,,,211,,221,52',
'227,,223,222,219,220,,,334,318,,,,,,,337,336,340,339,,79,73,75,76,77',
'78,,,,74,80,,,,294,,,56,,,53,,,292,54,63,64,65,,51,,,,57,58,,,,61,,59',
'60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,288,,,93',
'92,,83,50,85,84,86,,87,94,95,224,81,82,720,,332,330,329,,331,,,,,,,238',
'239,,,,,,,,,683,,,211,,221,52,227,,223,222,219,220,,,334,,,,,,,,337',
'336,340,339,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,292,54,63,64',
'65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90',
'91,,,17,,,,,,7,41,,9,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,',
'224,228,233,234,235,230,232,240,241,236,237,,-524,-524,,,238,239,,36',
',,30,,,52,,,,,32,221,,227,40,223,222,219,220,231,229,225,18,226,,,,79',
'73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,8,51,,,,57,58',
',,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41',
',9,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,224,-524,-524,-524',
'-524,230,232,,,-524,-524,,,,,,238,239,,36,,,30,,,52,,,,,32,221,,227',
'40,223,222,219,220,231,229,225,18,226,,,,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,,,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256',
'66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85',
'84,86,,87,94,95,,81,82,,38,39,,224,-524,-524,-524,-524,230,232,,,-524',
'-524,,,,,,238,239,,207,,,211,,,52,,,,,631,221,251,227,40,223,222,219',
'220,231,229,225,215,226,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
',,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28',
'27,89,88,90,91,,,17,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82',
',38,39,,224,-524,-524,-524,-524,230,232,,,-524,-524,,,,,,238,239,,207',
',,211,,,52,,,,,,221,,227,40,223,222,219,220,231,229,225,18,226,,,,79',
'73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,,51,,,,57,58',
',,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,',
',,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,224,-524,-524',
'-524,-524,230,232,,,-524,-524,,,,,,238,239,,207,,,211,,,52,,,,,,221',
',227,40,223,222,219,220,231,229,225,215,226,,,,79,73,75,76,77,78,,,',
'74,80,,,,,,,56,,,53,,,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255',
'256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50',
'85,84,86,,87,94,95,,81,82,,38,39,,224,228,233,234,235,230,232,,,236',
'237,,,,,,238,239,,207,,,211,,,52,,,,,,221,,227,40,223,222,219,220,231',
'229,225,215,226,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54',
'63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89',
'88,90,91,,,17,,,,,,7,41,,9,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38',
'39,,224,228,233,234,235,230,232,240,241,236,237,,-524,-524,,,238,239',
',36,,,30,,,52,,,,,32,221,,227,40,223,222,219,220,231,229,225,18,226',
',,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,8,51,,',
',57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,',
',,,7,41,,9,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,224,228,233',
'234,235,230,232,240,,236,237,,,,,,238,239,,36,,,30,,,52,,,,,32,221,',
'227,40,223,222,219,220,231,229,225,18,226,,,,79,73,75,76,77,78,,,,74',
'80,,,,,,,56,,,53,,,37,54,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24',
'66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,,83,50,85,84',
'86,,87,94,95,,81,82,,38,39,,224,-524,-524,-524,-524,230,232,,,-524,-524',
',,,,,238,239,,36,,,30,,,52,,,,,32,221,,227,40,223,222,219,220,231,229',
'225,18,226,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64',
'65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91',
',,17,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,224,',
',,,,,,,,,,,,,,238,239,,207,,,211,,,52,,,,,,221,,227,40,223,222,219,220',
',,225,18,226,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63',
'64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,28,27,89,88',
'90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,258,87,94,95,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,253,,,,40,,,,,,,,215,,,,,79',
'73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,,51,,,,57,58',
',,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,',
',,,41,,,93,92,,83,50,85,84,86,258,87,94,95,,81,82,,38,39,,,,,,,,,,,',
',,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78',
',,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62',
'255,256,66,67,,,,,,254,28,27,89,88,90,91,,,216,,,,,,,41,,,93,92,,83',
'50,85,84,86,258,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211',
',,52,,,,,253,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56',
',,53,,,37,54,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,',
',22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,,83,50,85,84,86,,87,94',
'95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,',
',,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,',
'51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,',
'17,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,',
',,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78',
',,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,,83,50,85',
'84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,',
',,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37',
'54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89',
'88,90,91,,,17,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73',
'75,76,77,78,,,,74,80,100,,,,,99,56,,,53,,,37,54,63,64,65,,51,,,,57,58',
',,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,',
',,,288,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,720,,332,330,329,,331',
',,,,,,,,,,,,,,,,285,,,30,,,52,,,,,32,,,,334,,,,,,,,337,336,340,339,',
'79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,292,54,63,64,65,,51,,,,57',
'58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216',
',,,,,,288,,,93,92,,83,50,85,84,351,,87,94,95,,81,82,720,,332,330,329',
',331,,,,,,,,,,,,,,357,,,352,,,211,,,52,,,,,,,,,334,714,,,,,,,337,336',
'340,339,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,292,54,63,64,65',
',51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90',
'91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,',
',,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,,51,,,,57,58,,,,61',
',59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41',
',,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,',
'207,,,211,,,52,,,,,631,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74',
'80,,,,,,,56,,,53,,,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256',
'66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85',
'84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,',
',,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37',
'54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287',
'291,89,88,90,91,,,216,,,,,,,288,,,93,92,,83,50,85,84,86,,87,94,95,,81',
'82,323,,332,330,329,,331,,,,,,,,,,,,,,,,,869,,,211,,,52,,,,,,,,,334',
',536,,,,,,337,336,340,339,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
',,292,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254',
'287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,-500,-500,-500',
',-500,,,,-500,-500,,,,-500,,-500,-500,-500,-500,-500,-500,-500,,-500',
',,,-500,-500,-500,-500,-500,-500,-500,,,-500,,,,,,,-500,,,-500,-500',
',-500,-500,-500,-500,-500,-500,-500,-500,-500,,-500,-500,,-500,-500',
',,,,,,,,,,,,,,,,,,,,-500,,,-500,-500,,-500,,,,,-500,,-500,,-500,,,,',
',,,-500,,-500,,,-500,-500,-500,-500,-500,-500,,,,-500,-500,,,,,,,-500',
',,-500,,,-500,-500,-501,-501,-501,,-501,,,,-501,-501,,,,-501,,-501,-501',
'-501,-501,-501,-501,-501,,-501,,,,-501,-501,-501,-501,-501,-501,-501',
',,-501,,,,,,,-501,,,-501,-501,,-501,-501,-501,-501,-501,-501,-501,-501',
'-501,,-501,-501,,-501,-501,,,,,,,,,,,,,,,,,,,,,-501,,,-501,-501,,-501',
',,,,-501,,-501,,-501,,,,,,,,-501,,-501,,,-501,-501,-501,-501,-501,-501',
',,,-501,-501,,,,,,,-501,,,-501,,,-501,-501,63,64,65,,51,,,,57,58,,,',
'61,,59,60,62,255,256,66,67,,,,,,254,28,27,89,88,90,91,,,216,,,,,,,41',
',,93,92,,83,50,85,84,86,258,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,',
',,,207,,,211,,,52,,,,,253,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,',
'74,80,,,,,,,56,,,53,,,37,54,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23',
'24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,6,9,93,92,,83,50,85',
'84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32',
',,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,392,56,,,53,,,37',
'54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89',
'88,90,91,,,17,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,,51,,,,57,58,,,',
'61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93',
'92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,',
',211,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,',
'56,,,53,,,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,',
',,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94',
'95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,',
',,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,',
'51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,',
'17,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,',
',,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78',
',,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,8,51,,,,57,58,,,,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,,83,50',
'85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,',
',,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,',
'37,54,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28',
'27,89,88,90,91,,,17,,,,,,7,41,6,9,93,92,,83,50,85,84,86,,87,94,95,,81',
'82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,',
',,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,8,51,,,',
'57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,',
',,7,41,,9,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,',
',,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,',
',74,80,,,,,,,56,,,53,,,37,54,-506,-506,-506,,-506,,,,-506,-506,,,,-506',
',-506,-506,-506,-506,-506,-506,-506,,,,,,-506,-506,-506,-506,-506,-506',
'-506,,,-506,,,,,,,-506,,,-506,-506,,-506,-506,-506,-506,-506,-506,-506',
'-506,-506,,-506,-506,,-506,-506,,,,,,,,,,,,,,,,,,,,,-506,,,-506,-506',
',-506,,,,,-506,,-506,,-506,,,,,,,,-506,,,,,-506,-506,-506,-506,-506',
'-506,,,,-506,-506,,,,,,,-506,,,-506,,,-506,-506,63,64,65,,51,,,,57,58',
',,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,',
',,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,',
',,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,',
'74,80,,,,,,,56,,,53,,,37,54,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23',
'24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,,83,50,85',
'84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32',
',,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54',
'63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88',
'90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,409,,,,40,,,,,,,,215,,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,,51,,,,57,58,,,',
'61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,216,,,,,,,41,,',
'93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207',
',,211,,,52,,,,,409,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,',
',,,,,56,,,53,,,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66',
'67,,,,,,22,28,27,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86',
',87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40',
',,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64',
'65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,28,27,89,88,90',
'91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,258,87,94,95,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,253,,,,40,,,,,,,,215,,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,-505,-505,-505,,-505,,,,-505',
'-505,,,,-505,,-505,-505,-505,-505,-505,-505,-505,,,,,,-505,-505,-505',
'-505,-505,-505,-505,,,-505,,,,,,,-505,,,-505,-505,,-505,-505,-505,-505',
'-505,-505,-505,-505,-505,,-505,-505,,-505,-505,,,,,,,,,,,,,,,,,,,,,-505',
',,-505,-505,,-505,,,,,-505,,-505,,-505,,,,,,,,-505,,,,,-505,-505,-505',
'-505,-505,-505,,,,-505,-505,,,,,,,-505,,,-505,,,-505,-505,63,64,65,',
'51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,',
'17,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,',
',,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78',
',,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50',
'85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52',
',,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,',
',37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28',
'27,89,88,90,91,,,17,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,18,,,,,79',
'73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,,51,,,,57,58',
',,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41',
',,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,',
'207,,,211,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,',
',,,,,56,,,53,,,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66',
'67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,,83,50,85,84,86,',
'87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40',
',,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64',
'65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88',
'90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,,51,,,,57,58,,,,61',
',59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41',
',,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,',
'207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,,,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256',
'66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85',
'84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,',
',731,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,',
',37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254',
'287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,8,51,',
',,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,',
',,,,7,41,,9,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,',
',,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78',
',,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,8,51,,,,57,58,,,,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,,83,50',
'85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,',
',,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,',
'37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27',
'89,88,90,91,,,17,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,',
'38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,441,52,,,,,,,,,40,,,,,,,,18,,,',
',79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,,51,,,,57',
'58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216',
',,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,',
',,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78',
',,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,8,51,,,,57,58,,,,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,,83,50',
'85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,',
',,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,',
'37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287',
'291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81',
'82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,',
',,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,,51,,,',
'57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216',
',,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,',
',,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78',
',,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62',
'255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83',
'50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,',
'52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
',,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254',
'287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,,51,,',
',57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,',
'216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,',
',,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60',
'62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92',
',83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211',
',,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,',
',53,,,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,',
',254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87',
'94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,',
',,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64',
'65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88',
'90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,,51,,,,57,58,,,,61',
',59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41',
',,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,',
'207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,,,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256',
'66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85',
'84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,',
',,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37',
'54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287',
'291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81',
'82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,',
',,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,,51,,,',
'57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216',
',,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,',
',,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78',
',,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62',
'255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83',
'50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,',
'52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
',,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254',
'287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,,51,,',
',57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,',
'216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,',
',,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60',
'62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92',
',83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211',
',,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,',
',53,,,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,',
',254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87',
'94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,',
',,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64',
'65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88',
'90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,,51,,,,57,58,,,,61',
',59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41',
',,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,',
'207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,,,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256',
'66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85',
'84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,',
',,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37',
'54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287',
'291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81',
'82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,',
',,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,,51,,,',
'57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216',
',,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,',
',,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78',
',,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62',
'255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83',
'50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,',
'52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
',,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254',
'287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,,51,,',
',57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,',
'216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,',
',,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60',
'62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92',
',83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211',
',,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,',
',53,,,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22',
'28,27,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,',
'81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,,51,,',
',57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,',
',,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,',
',,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,',
'74,80,,,,,,,56,,,53,,,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23',
'24,66,67,,,,,,22,28,27,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85',
'84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,',
',,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37',
'54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287',
'291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81',
'82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,',
',,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,8,51,,',
',57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,',
',,,7,41,,9,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,',
',,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,',
',,74,80,,,,,,,56,,,53,,,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62',
'255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83',
'50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,',
'52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
',,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254',
'287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,,51,,',
',57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,216,',
',,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,',
',,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,',
',,74,80,,,,,,,56,,,53,,,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62',
'255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83',
'50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,',
'52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
',,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28',
'27,89,88,90,91,,,17,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,18,,,,,79',
'73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,,51,,,,57,58',
',,,61,,59,60,62,255,256,66,67,,,,,,254,28,27,89,88,90,91,,,216,,,,,',
',41,,,93,92,,83,50,85,84,86,258,87,94,95,,81,82,,38,39,,,,,,,,,,,,,',
',,,,,,,207,,,211,,,52,,,,,253,,251,,40,,,,,,,,215,,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60',
'62,255,256,66,67,,,,,,254,28,27,89,88,90,91,,,216,,,,,,,41,,,93,92,',
'83,50,85,84,86,258,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,',
'211,,,490,,,,,253,,251,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,,,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256',
'66,67,,,,,,254,28,27,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84',
'86,258,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,494,52',
',,,,253,,251,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56',
',,53,,,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,',
',,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87',
'94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,253,,,,40',
',,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64',
'65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88',
'90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,,51,,,,57,58,,,,61',
',59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41',
',,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,',
'207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,,,37,54,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66',
'67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,,83,50,85,84,86',
',87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,277,,,52,,,,,32,,,',
'40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63',
'64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89',
'88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,,51,,,,57,58,,,',
'61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,',
'41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,',
',,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74',
'80,,,,,,,56,,,53,,,37,54,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24',
'66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,,83,50,85,84',
'86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,',
',,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54',
'63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291',
'89,88,90,91,,,216,,,,,,,288,,,93,92,,83,50,85,84,86,,87,94,95,,81,82',
'323,,332,330,329,,331,,,,,,,,,,,,,,,,,285,,,211,,,52,,,,,,,,,334,,,',
',,,,337,336,340,339,,79,73,75,76,77,78,,,,74,80,,,,502,,,56,,,53,,,292',
'54,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27',
'89,88,90,91,,,17,,,,,,7,41,,9,93,92,,83,50,85,84,86,,87,94,95,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,36,,,277,,,52,,,,,32,,,,40,,,,,,,,18,,,,',
'79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,,51,,,,57',
'58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216',
',,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,',
',,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78',
',,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,8,51,,,,57,58,,,,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,,83,50',
'85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,',
',,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,',
'37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287',
'291,89,88,90,91,,,216,,,,,,,288,,,93,92,,83,50,85,84,351,,87,94,95,',
'81,82,720,,332,330,329,,331,,,,,,,,,,,,,,,,,352,,,211,,,52,,,,,,,,,334',
'714,,,,,,,337,336,340,339,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
',,292,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254',
'28,27,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,258,87,94,95',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,631,,251,,40,,',
',,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64',
'65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90',
'91,,,17,,,,,,7,41,,9,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,',
',,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,8,51,,,,57,58,,,,61',
',59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93',
'92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,',
'30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,',
'56,,,53,,,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,',
',,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94',
'95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,',
',,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,',
'51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,',
'216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,',
',,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60',
'62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92',
',83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211',
',,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,',
',53,,,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,',
',254,287,291,89,88,90,91,,,216,,,,,,,288,,,93,92,,83,50,85,84,86,,87',
'94,95,,81,82,,,,,,,,,,,,,,,,,,,,,,,,285,,,282,,,52,,,,,,,,,,,,,,,,,',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,292,54,63,64,65,,51,',
',,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,',
',,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,',
',,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,',
',74,80,,,,,,,56,,,53,,,37,54,63,64,65,8,51,,,,57,58,,,,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,,83,50',
'85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,',
',,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,',
'37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287',
'291,89,88,90,91,,,216,,,,,,,288,,,93,92,,83,50,85,84,86,,87,94,95,,81',
'82,,,,,,,,,,,,,,,,,,,,,,,,285,,,282,,,52,,,,,,,,,,,,,,,,,,,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,,,292,54,63,64,65,,51,,,,57,58,,',
',61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,',
',288,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,,,,,,,,,,,,,,,,,,,,,',
',285,,,282,,,52,,,,,,,,,,,,,,,,,,,,,,79,73,75,76,77,78,,,,74,80,,,,',
',,56,,,53,,,292,54,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67',
',,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,,83,50,85,84,86,,87',
'94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,',
',,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64,65',
',51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90',
'91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,',
',,,,,,,,,,,,,,,,,,207,,,211,519,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,8,51,,,,57,58,,',
',61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,',
'9,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,',
'36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,',
',,,,,56,,,53,,,37,54,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66',
'67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84',
'86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,409',
',,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54',
'63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89',
'88,90,91,,,17,,,,,,7,41,,9,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54,63,64,65,,51,,,,57,58,,,',
'61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,',
'41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,',
',,,207,,,211,,,52,,,,,253,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,',
'74,80,,,,,,,56,,,53,,,37,54,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23',
'24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,,83,50,85',
'84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32',
',,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,54',
'63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291',
'89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,-274',
'79,73,75,76,77,78,-274,-274,-274,74,80,,-274,-274,,-274,,56,,,53,,,37',
'54,,,,,,,,,,,-274,-274,,-274,-274,-274,-274,-274,,,,,,,,,,,,,,,,,,,',
',,,,-274,-274,-274,-274,-274,-274,-274,-274,-274,-274,-274,-274,-274',
'-274,,,-274,-274,-274,,615,,,,-274,,,,,,,-274,,-274,,-274,-274,-274',
'-274,-274,-274,-274,,-274,,-274,,,,,,,,,,,,,-274,-274,,-85,-507,-274',
',,-274,,-93,-507,-507,-507,,,,-507,-507,,-507,,,,,,,,,-507,,,,,,,,,',
',-507,-507,,-507,-507,-507,-507,-507,,,,,,,,,,,,,,,,,,,,,,,,-507,-507',
'-507,-507,-507,-507,-507,-507,-507,-507,-507,-507,-507,-507,,,-507,-507',
'-507,,612,,,,-507,,,,,,,-507,,-507,,-507,-507,-507,-507,-507,-507,-507',
',-507,-507,-507,,,,,,,,,,,,,-507,-507,,-83,-507,-507,,,-507,,-91,-507',
'-507,-507,,,-507,-507,-507,,-507,,,,,,,,,-507,-507,-507,,,,,,,,,-507',
'-507,,-507,-507,-507,-507,-507,,,,,,,,,,,,,,,,,,,,,,,,-507,-507,-507',
'-507,-507,-507,-507,-507,-507,-507,-507,-507,-507,-507,,,-507,-507,-507',
',744,-507,,,-507,,,-507,,-507,,-507,,-507,,-507,-507,-507,-507,-507',
'-507,-507,,-507,-507,-507,,,,,,,,,,,,,-507,-507,-507,-507,-274,-507',
',,-507,,-91,-274,-274,-274,,,-274,-274,-274,,-274,,,,,,,,,,-274,-274',
',,,,,,,,-274,-274,,-274,-274,-274,-274,-274,,,,,,,,,,,,,,,,,,,,,,,,-274',
'-274,-274,-274,-274,-274,-274,-274,-274,-274,-274,-274,-274,-274,,,-274',
'-274,-274,,615,-274,,,-274,,,-274,,-274,,-274,,-274,,-274,-274,-274',
'-274,-274,-274,-274,,-274,,-274,,,,,,,,,,,,,-274,-274,-274,-274,-523',
'-274,,,-274,,-93,-523,-523,-523,,,-523,-523,-523,,-523,,,,,,,,,-523',
'-523,-523,,,,,,,,,-523,-523,,-523,-523,-523,-523,-523,,,,,,,,,,,,,,',
',,,,,,,,,-523,-523,-523,-523,-523,-523,-523,-523,-523,-523,-523,-523',
'-523,-523,,,-523,-523,-523,,,-523,,264,-523,,,-523,,-523,,-523,,-523',
',-523,-523,-523,-523,-523,-523,-523,,-523,-523,-523,,,,,,,,,,,,,-523',
'-523,-523,-523,-269,-523,,,-523,,,-269,-269,-269,,,-269,-269,-269,,-269',
',,,,,,,,,-269,-269,-269,,,,,,,,-269,-269,,-269,-269,-269,-269,-269,',
',,,,,,,,,,,,,,,,,,,,,,-269,-269,-269,-269,-269,-269,-269,-269,-269,-269',
'-269,-269,-269,-269,,,-269,-269,-269,,,-269,,,-269,,,-269,,-269,,-269',
',-269,,-269,-269,-269,-269,-269,-269,-269,,-269,,-269,,,,,,,,,,,,,-269',
'-269,-269,-269,-370,-269,,-269,-269,,,-370,-370,-370,,,-370,-370,-370',
',-370,,,,,,,,,-370,-370,-370,,,,,,,,,-370,-370,,-370,-370,-370,-370',
'-370,,,,,,,,,,,,,,,,,,,,,,,,-370,-370,-370,-370,-370,-370,-370,-370',
'-370,-370,-370,-370,-370,-370,,,-370,-370,-370,,,-370,,264,-370,,,-370',
',-370,,-370,,-370,,-370,-370,-370,-370,-370,-370,-370,,-370,-370,-370',
',,,,,,,,,,,,-370,-370,-370,-370,-282,-370,,,-370,,,-282,-282,-282,,',
'-282,-282,-282,,-282,,,,,,,,,,-282,-282,,,,,,,,,-282,-282,,-282,-282',
'-282,-282,-282,,,,,,,,,,,,,,,,,,,,,,,,-282,-282,-282,-282,-282,-282',
'-282,-282,-282,-282,-282,-282,-282,-282,,,-282,-282,-282,,,-282,,273',
'-282,,,-282,,-282,,-282,,-282,,-282,-282,-282,-282,-282,-282,-282,,-282',
',-282,,,,,,,,,,,,,-282,-282,-282,-282,-523,-282,,,-282,,,-523,-523,-523',
',,-523,-523,-523,,-523,,,,,,,,,,-523,,,,,,,,,,-523,-523,,-523,-523,-523',
'-523,-523,,,,,,,,,,,,,-523,,,,,,,-523,-523,-523,,,-523,-523,-523,,-523',
',,,,,-523,,,,-523,,,-523,,,,,264,-523,-523,-523,,-523,-523,-523,-523',
'-523,,,,,,,,,,,,,-523,,,,,,,,,,,,,-523,,-523,,,-523,,,,-523,,,,,,,-523',
',,,,264,-523,,,,,,,,,,,,,,,,,,,,,-523,,,,,,,,,,,,,-523,,-523,,,-523',
'155,166,156,179,152,172,162,161,187,190,177,160,159,154,180,188,189',
'164,153,167,171,173,165,158,,,,174,181,176,175,168,178,163,151,170,169',
'182,183,184,185,186,150,157,148,149,146,147,,110,112,,,111,,,,,,,,,141',
'142,,138,120,121,122,129,126,128,,,123,124,,,,143,144,130,131,,,,,,',
',,,,,,135,134,,119,140,137,136,132,133,127,125,117,139,118,,,145,191',
',,,,,,,,,80,155,166,156,179,152,172,162,161,187,190,177,160,159,154',
'180,188,189,164,153,167,171,173,165,158,,,,174,181,176,175,168,178,163',
'151,170,169,182,183,184,185,186,150,157,148,149,146,147,,110,112,,,111',
',,,,,,,,141,142,,138,120,121,122,129,126,128,,,123,124,,,,143,144,130',
'131,,,,,,,,,,,,,135,134,,119,140,137,136,132,133,127,125,117,139,118',
',,145,191,,,,,,,,,,80,155,166,156,179,152,172,162,161,187,190,177,160',
'159,154,180,188,189,164,153,167,171,173,165,158,,,,174,181,176,175,168',
'178,163,151,170,169,182,183,184,185,186,150,157,148,149,146,147,,110',
'112,109,,111,,,,,,,,,141,142,,138,120,121,122,129,126,128,,,123,124',
',,,143,144,130,131,,,,,,,,,,,,,135,134,,119,140,137,136,132,133,127',
'125,117,139,118,,,145,191,,,,,,,,,,80,155,166,156,179,152,172,162,161',
'187,190,177,160,159,154,180,188,189,164,153,167,171,173,165,158,,,,174',
'181,176,175,168,178,163,151,170,169,182,183,184,185,186,150,157,148',
'149,146,147,,110,112,,,111,,,,,,,,,141,142,,138,120,121,122,129,126',
'128,,,123,124,,,,143,144,130,131,,,,,,,,,,,,,135,134,,119,140,137,136',
'132,133,127,125,117,139,118,,,145,191,,,,,,,,,,80,155,166,156,179,152',
'172,162,161,187,190,177,160,159,154,180,188,189,164,153,167,171,173',
'165,158,,,,174,181,176,175,168,178,163,151,170,169,182,183,184,185,186',
'150,157,148,149,146,147,,110,112,388,387,111,,389,,,,,,,141,142,,138',
'120,121,122,129,126,128,,,123,124,,,,143,144,130,131,,,,,,,,,,,,,135',
'134,,119,140,137,136,132,133,127,125,117,139,118,,,145,155,166,156,179',
'152,172,162,161,187,190,177,160,159,154,180,188,189,164,153,167,171',
'173,165,158,,,,174,181,176,366,365,367,364,151,170,169,182,183,184,185',
'186,150,157,148,149,362,363,,360,112,85,84,361,,87,,,,,,,141,142,,138',
'120,121,122,129,126,128,,,123,124,,,,143,144,130,131,,,,,,371,,,,,,',
'135,134,,119,140,137,136,132,133,127,125,117,139,118,,,145,155,166,156',
'179,152,172,162,161,187,190,177,160,159,154,180,188,189,164,153,167',
'171,173,165,158,,,,174,181,176,175,168,178,163,151,170,169,182,183,184',
'185,186,150,157,148,149,146,147,,110,112,388,387,111,,389,,,,,,,141',
'142,,138,120,121,122,129,126,128,,,123,124,,,,143,144,130,131,,,,,,',
',,,,,,135,134,,119,140,137,136,132,133,127,125,117,139,118,,,145,155',
'166,156,179,152,172,162,161,187,190,177,160,159,154,180,188,189,164',
'153,167,171,173,165,158,,,,174,181,176,175,168,178,163,151,170,169,182',
'183,184,185,186,150,157,148,149,146,147,,110,112,,,111,,,,,,,,,141,142',
',138,120,121,122,129,126,128,,,123,124,,,,143,144,130,131,,,,,,,,,,',
',,135,134,,119,140,137,136,132,133,127,125,117,139,118,903,427,145,',
'904,,,,,,,,,141,142,,138,120,121,122,129,126,128,,,123,124,,,,143,144',
'130,131,,,,,,,,,,,,,135,134,,119,140,137,136,132,133,127,125,117,139',
'118,478,421,145,,479,,,,,,,,,141,142,,138,120,121,122,129,126,128,,',
'123,124,,,,143,144,130,131,,,,,,,,,,,,,135,134,,119,140,137,136,132',
'133,127,125,117,139,118,618,427,145,,619,,,,,,,,,141,142,,138,120,121',
'122,129,126,128,,,123,124,,,,143,144,130,131,,,,,,,,,,,,,135,134,,119',
'140,137,136,132,133,127,125,117,139,118,478,421,145,,479,,,,,,,,,141',
'142,,138,120,121,122,129,126,128,,,123,124,,,,143,144,130,131,,,,,,',
',,,,,,135,134,,119,140,137,136,132,133,127,125,117,139,118,478,421,145',
',479,,,,,,,,,141,142,,138,120,121,122,129,126,128,,,123,124,,,,143,144',
'130,131,,,,,,,,,,,,,135,134,,119,140,137,136,132,133,127,125,117,139',
'118,478,421,145,,479,,,,,,,,,141,142,,138,120,121,122,129,126,128,,',
'123,124,,,,143,144,130,131,,,,,,264,,,,,,,135,134,,119,140,137,136,132',
'133,127,125,117,139,118,662,427,145,,663,,,,,,,,,141,142,,138,120,121',
'122,129,126,128,,,123,124,,,,143,144,130,131,,,,,,,,,,,,,135,134,,119',
'140,137,136,132,133,127,125,117,139,118,706,427,145,,837,,,,,,,,,141',
'142,,138,120,121,122,129,126,128,,,123,124,,,,143,144,130,131,,,,,,',
',,,,,,135,134,,119,140,137,136,132,133,127,125,117,139,118,659,421,145',
',660,,,,,,,,,141,142,,138,120,121,122,129,126,128,,,123,124,,,,143,144',
'130,131,,,,,,264,,,,,,,135,134,,119,140,137,136,132,133,127,125,117',
'139,118,901,421,145,,902,,,,,,,,,141,142,,138,120,121,122,129,126,128',
',,123,124,,,,143,144,130,131,,,,,,264,,,,,,,135,134,,119,140,137,136',
'132,133,127,125,117,139,118,423,427,145,,425,,,,,,,,,141,142,,138,120',
'121,122,129,126,128,,,123,124,,,,143,144,130,131,,,,,,,,,,,,,135,134',
',119,140,137,136,132,133,127,125,117,139,118,616,421,145,,617,,,,,,',
',,141,142,,138,120,121,122,129,126,128,,,123,124,,,,143,144,130,131',
',,,,,264,,,,,,,135,134,,119,140,137,136,132,133,127,125,117,139,118',
'417,421,145,,418,,,,,,,,,141,142,,138,120,121,122,129,126,128,,,123',
'124,,,,143,144,130,131,,,,,,264,,,,,,,135,134,,119,140,137,136,132,133',
'127,125,117,139,118,706,427,145,,704,,,,,,,,,141,142,,138,120,121,122',
'129,126,128,,,123,124,,,,143,144,130,131,,,,,,,,,,,,,135,134,,119,140',
'137,136,132,133,127,125,117,139,118,478,421,145,,479,,,,,,,,,141,142',
',138,120,121,122,129,126,128,,,123,124,,,,143,144,130,131,,,,,,,,,,',
',,135,134,,119,140,137,136,132,133,127,125,117,139,118,616,421,145,',
'617,,,,,,,,,141,142,,138,120,121,122,129,126,128,,,123,124,,,,143,144',
'130,131,,,,,,264,,,,,,,135,134,,119,140,137,136,132,133,127,125,117',
'139,118,618,427,145,,619,,,,,,,,,141,142,,138,120,121,122,129,126,128',
',,123,124,,,,143,144,130,131,,,,,,,,,,,,,135,134,,119,140,137,136,132',
'133,127,125,117,139,118,,,145' ]
        racc_action_table = arr = ::Array.new(24525, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'0,0,0,0,0,834,379,560,0,0,55,351,344,0,852,0,0,0,0,0,0,0,662,309,317',
'592,309,0,0,0,0,0,0,0,206,745,0,468,660,382,646,654,0,0,0,0,0,0,491',
'0,0,0,0,0,868,0,0,0,481,0,0,868,0,0,351,492,379,379,379,349,468,351',
'361,559,581,581,351,795,654,361,356,491,206,745,0,592,592,0,662,662',
'0,481,841,903,592,0,55,351,492,0,794,382,306,306,343,660,560,0,560,868',
'902,560,0,0,0,0,0,0,834,351,834,0,0,834,901,344,662,344,317,0,344,350',
'0,662,659,0,0,496,496,496,496,496,660,440,440,496,496,289,313,660,496',
'313,496,496,496,496,496,496,496,669,669,15,15,581,496,496,496,496,496',
'496,496,903,559,496,559,26,795,559,795,496,496,795,496,496,496,356,496',
'496,496,496,496,306,496,496,496,375,496,496,440,496,496,659,384,352',
'356,841,903,841,903,356,841,903,289,794,669,794,794,343,794,343,641',
'496,343,902,496,902,71,496,902,656,574,616,496,289,71,574,496,901,659',
'901,26,867,901,658,496,659,711,711,867,496,496,496,496,496,496,375,375',
'375,496,496,42,26,384,384,384,496,496,42,418,496,891,891,496,496,474',
'474,474,566,474,616,208,373,474,474,566,377,341,474,377,474,474,474',
'474,474,474,474,867,877,338,877,617,474,474,474,474,474,474,474,109',
'418,474,13,205,109,109,42,418,474,13,205,474,474,661,474,474,474,474',
'474,208,474,474,474,566,474,474,711,474,474,342,342,711,373,373,373',
'704,377,377,507,617,436,870,704,764,890,507,640,704,870,474,764,890',
'474,283,284,474,365,13,205,354,283,284,326,365,474,3,354,25,362,286',
'3,348,474,348,25,362,286,474,474,474,474,474,474,664,299,682,474,474',
'436,325,704,299,682,507,474,323,870,474,764,890,474,474,472,472,472',
'909,472,667,283,284,472,472,909,674,354,472,674,472,472,472,472,472',
'472,472,286,310,37,37,310,472,472,472,472,472,472,472,347,366,472,299',
'682,347,709,407,366,472,417,709,472,472,668,472,472,472,472,472,472',
'472,472,472,909,472,472,322,472,472,670,407,407,407,407,407,407,407',
'407,407,407,407,663,407,407,904,630,407,407,663,472,417,904,472,663',
'715,472,904,417,628,715,675,407,472,407,472,407,407,407,407,407,407',
'407,472,407,809,809,363,472,472,472,472,472,472,363,676,367,472,472',
'369,407,679,407,367,780,472,369,663,472,360,904,472,472,470,470,470',
'360,470,364,274,681,470,470,314,274,364,470,683,470,470,470,470,470',
'470,470,653,653,653,653,653,470,470,470,470,470,470,470,684,35,470,780',
'780,780,780,621,685,470,688,806,470,470,620,470,470,470,470,470,470',
'470,470,470,378,470,470,693,470,470,699,621,621,621,621,621,621,621',
'621,621,621,621,35,621,621,537,701,621,621,35,470,292,292,470,691,691',
'470,806,806,806,806,470,621,470,621,470,621,621,621,621,621,621,621',
'470,621,543,543,613,470,470,470,470,470,470,312,311,706,470,470,707',
'621,537,537,537,537,470,881,381,470,296,605,470,470,490,490,490,608',
'490,398,308,757,490,490,301,404,410,490,757,490,490,490,490,490,490',
'490,275,275,275,275,275,490,490,490,490,490,490,490,716,14,490,296,605',
'881,881,881,881,490,296,605,490,490,717,490,490,490,490,490,757,490',
'490,490,718,490,490,720,490,490,298,645,645,645,645,645,645,645,645',
'645,645,645,14,645,645,723,603,645,645,14,490,297,485,490,412,490,490',
'730,445,485,596,291,645,490,645,490,645,645,645,645,645,645,645,490',
'645,288,287,285,490,490,490,490,490,490,280,279,278,490,490,445,645',
'276,645,445,445,490,416,424,490,485,748,490,490,502,502,502,464,502',
'749,724,724,502,502,724,724,724,502,752,502,502,502,502,502,502,502',
'5,5,5,5,5,502,502,502,502,502,502,502,464,755,502,756,464,464,464,464',
'562,502,758,561,502,502,761,502,502,502,502,502,762,502,502,502,444',
'502,502,763,263,767,467,467,467,467,467,467,467,467,467,467,467,252',
'467,467,770,771,467,467,249,446,502,447,786,502,248,444,502,789,216',
'444,444,467,210,467,209,467,467,467,467,467,467,467,448,467,797,800',
'801,802,502,502,502,502,502,502,555,449,550,502,502,467,467,207,818',
'819,546,502,192,826,502,827,535,502,502,504,504,504,463,504,96,78,837',
'504,504,838,77,843,504,844,504,504,504,504,504,504,504,522,521,41,649',
'853,504,504,504,504,504,504,504,463,854,504,856,463,463,463,463,857',
'504,520,511,504,504,36,504,504,504,504,504,504,504,504,504,508,504,504',
'34,504,504,869,430,430,430,430,430,430,430,430,430,430,430,503,430,430',
'20,501,430,430,498,504,879,497,504,493,886,504,12,11,10,9,504,430,483',
'430,504,430,430,430,430,430,430,430,504,430,895,897,898,504,504,504',
'504,504,504,900,6,487,504,504,486,430,1,484,,,504,,,504,,,504,504,513',
'513,513,,513,,,,513,513,,,,513,,513,513,513,513,513,513,513,,,,,,513',
'513,513,513,513,513,513,,551,513,551,551,551,,551,,513,,,513,513,,513',
'513,513,513,513,,513,513,513,,513,513,,513,513,,741,741,741,741,741',
'741,741,741,741,741,741,,741,741,,,741,741,,513,,,513,,785,513,785,785',
'785,,785,741,,741,513,741,741,741,741,741,741,741,513,741,,,,513,513',
'513,513,513,513,,,,513,513,,741,,,,,513,,,513,,,513,513,514,514,514',
',514,,,,514,514,,,,514,,514,514,514,514,514,514,514,,,,,,514,514,514',
'514,514,514,514,,,514,,,,,,,514,,,514,514,,514,514,514,514,514,,514',
'514,514,,514,514,,514,514,,739,739,739,739,739,739,739,739,739,739,739',
',739,739,,,739,739,,514,,,514,,,514,,,,,,739,,739,514,739,739,739,739',
'739,739,739,514,739,,,,514,514,514,514,514,514,,,,514,514,,739,,,,,514',
',,514,,,514,514,887,887,887,,887,,,,887,887,,,,887,,887,887,887,887',
'887,887,887,,,,,,887,887,887,887,887,887,887,,,887,,,,,,,887,,,887,887',
',887,887,887,887,887,887,887,887,887,,887,887,,887,887,,415,415,415',
'415,415,415,415,415,415,415,415,,415,415,,,415,415,,887,,,887,,,887',
',,,,887,415,,415,887,415,415,415,415,415,415,415,887,415,,,,887,887',
'887,887,887,887,,,,887,887,,415,,,,,887,,,887,,,887,887,515,515,515',
',515,,,,515,515,,,,515,,515,515,515,515,515,515,515,,,,,,515,515,515',
'515,515,515,515,,,515,,,,,,,515,,,515,515,,515,515,515,515,515,,515',
'515,515,,515,515,,515,515,,746,746,746,746,746,746,746,746,746,746,746',
',746,746,,,746,746,,515,,,515,,,515,,,,,,746,,746,515,746,746,746,746',
'746,746,746,515,746,,,,515,515,515,515,515,515,,,,515,515,,746,,,,,515',
',,515,,,515,515,885,885,885,885,885,,,,885,885,,,,885,,885,885,885,885',
'885,885,885,,,,,,885,885,885,885,885,885,885,,,885,,,,,,885,885,,885',
'885,885,,885,885,885,885,885,,885,885,885,,885,885,,885,885,,821,821',
'821,821,821,821,821,821,821,821,821,,821,821,,,821,821,,885,,,885,,',
'885,,,,,885,821,,821,885,821,821,821,821,821,821,821,885,821,,,,885',
'885,885,885,885,885,,,,885,885,,821,,,,,885,,,885,,,885,885,878,878',
'878,878,878,,,,878,878,,,,878,,878,878,878,878,878,878,878,,,,,,878',
'878,878,878,878,878,878,,,878,,,,,,878,878,,878,878,878,,878,878,878',
'878,878,,878,878,878,,878,878,,878,878,,736,736,736,736,736,736,736',
'736,736,736,736,,736,736,,,736,736,,878,,,878,,,878,,,,,878,736,,736',
'878,736,736,736,736,736,736,736,878,736,,,,878,878,878,878,878,878,',
',,878,878,,736,,,,,878,,,878,,,878,878,17,17,17,,17,,,,17,17,,,,17,',
'17,17,17,17,17,17,17,,,,,,17,17,17,17,17,17,17,,,17,,,,,,,17,,,17,17',
',17,17,17,17,17,,17,17,17,,17,17,,17,17,,666,666,666,666,666,666,666',
'666,666,666,666,,666,666,,,666,666,,17,,,17,17,,17,,,,,,666,,666,17',
'666,666,666,666,666,666,666,17,666,,,,17,17,17,17,17,17,,,,17,17,,666',
',,,,17,,,17,,,17,17,18,18,18,,18,,,,18,18,,,,18,,18,18,18,18,18,18,18',
',,,,,18,18,18,18,18,18,18,,,18,,,,,,,18,,,18,18,,18,18,18,18,18,,18',
'18,18,,18,18,,18,18,,246,246,246,246,246,246,246,246,246,246,246,,246',
'246,,,246,246,,18,,,18,,,18,,,,,,246,,246,18,246,246,246,246,246,246',
'246,18,246,,,,18,18,18,18,18,18,,,,18,18,,246,,,,,18,,,18,,,18,18,519',
'519,519,,519,,,,519,519,,,,519,,519,519,519,519,519,519,519,,,,,,519',
'519,519,519,519,519,519,,,519,,,,,,,519,,,519,519,,519,519,519,519,519',
',519,519,519,,519,519,,519,519,,518,518,518,518,518,518,518,518,518',
'518,518,,518,518,,,518,518,,519,,,519,,,519,,,,,,518,,518,519,518,518',
'518,518,518,518,518,519,518,,,,519,519,519,519,519,519,,,,519,519,,518',
',,,,519,,,519,,,519,519,873,873,873,873,873,,,,873,873,,,,873,,873,873',
'873,873,873,873,873,,,,,,873,873,873,873,873,873,873,,,873,,,,,,873',
'873,,873,873,873,,873,873,873,873,873,,873,873,873,,873,873,,873,873',
',19,19,19,19,19,19,19,19,19,19,19,,19,19,,,19,19,,873,,,873,,,873,,',
',,873,19,,19,873,19,19,19,19,19,19,19,873,19,,,,873,873,873,873,873',
'873,,,,873,873,,19,,,,,873,,,873,,,873,873,22,22,22,,22,,,,22,22,,,',
'22,,22,22,22,22,22,22,22,,,,,,22,22,22,22,22,22,22,,,22,,,,,,,22,,,22',
'22,,22,22,22,22,22,22,22,22,22,,22,22,,22,22,,729,729,729,729,729,729',
'729,729,729,729,729,,729,729,,,729,729,,22,,,22,,,22,,,,,22,729,22,729',
'22,729,729,729,729,729,729,729,22,729,,,,22,22,22,22,22,22,,,,22,22',
',729,,,,,22,,,22,,,22,22,23,23,23,,23,,,,23,23,,,,23,,23,23,23,23,23',
'23,23,,,,,,23,23,23,23,23,23,23,,,23,,,,,,,23,,,23,23,,23,23,23,23,23',
'23,23,23,23,,23,23,,23,23,,734,734,734,734,734,734,734,734,734,734,734',
',734,734,,,734,734,,23,,,23,,,23,,,,,23,734,23,734,23,734,734,734,734',
'734,734,734,23,734,,,,23,23,23,23,23,23,,,,23,23,,734,,,,,23,,,23,,',
'23,23,24,24,24,,24,,,,24,24,,,,24,,24,24,24,24,24,24,24,,,,,,24,24,24',
'24,24,24,24,,689,24,689,689,689,,689,,24,,,24,24,,24,24,24,24,24,24',
'24,24,24,,24,24,,24,24,334,,334,334,334,,334,,,689,,,,,,,,689,,,24,',
',24,452,,24,,,,,24,,24,,24,,,334,,452,452,,24,,,334,,24,24,24,24,24',
'24,,452,,24,24,452,452,452,452,,,24,,,24,,,24,24,525,525,525,,525,,',
',525,525,,,,525,,525,525,525,525,525,525,525,,,,,,525,525,525,525,525',
'525,525,,548,525,548,548,548,,548,,525,,,525,525,,525,525,525,525,525',
'525,525,525,525,,525,525,,525,525,,,,,,,,,,548,,,,,,,,548,,,525,,,525',
',,525,,,,,525,,,,525,,,,,,,,525,,,,,525,525,525,525,525,525,,,,525,525',
',,,,,,525,,,525,,,525,525,528,528,528,,528,,,,528,528,,,,528,,528,528',
'528,528,528,528,528,,,,,,528,528,528,528,528,528,528,,,528,,,,,,,528',
',,528,528,,528,528,528,528,528,528,528,528,528,,528,528,,528,528,,455',
',,,,,,,,,,,,,,,455,455,,528,,,528,,,528,,,,,,455,,455,528,455,455,455',
'455,,,455,528,455,,,,528,528,528,528,528,528,,,,528,528,,,,,,,528,,',
'528,,,528,528,533,533,533,533,533,,,,533,533,,,,533,,533,533,533,533',
'533,533,533,,,,,,533,533,533,533,533,533,533,,,533,,,,,,533,533,,533',
'533,533,,533,533,533,533,533,,533,533,533,,533,533,,533,533,,456,,,',
',,,,,,,,,,,,456,456,,533,,,533,,,533,,,,,533,456,,456,533,456,456,456',
'456,,,456,533,456,,,,533,533,533,533,533,533,,,,533,533,,,,,,,533,,',
'533,,,533,533,534,534,534,534,534,,,,534,534,,,,534,,534,534,534,534',
'534,534,534,,,,,,534,534,534,534,534,534,534,,,534,,,,,,534,534,,534',
'534,534,,534,534,534,534,534,,534,534,534,,534,534,,534,534,,454,,,',
',,,,,,,,,,,,454,454,,534,,,534,,,534,,,,,534,454,,454,534,454,454,454',
'454,,,454,534,454,,,,534,534,534,534,534,534,,,,534,534,,,,,,,534,,',
'534,,,534,534,30,30,30,30,30,,,,30,30,,,,30,,30,30,30,30,30,30,30,,',
',,,30,30,30,30,30,30,30,,,30,,,,,,30,30,,30,30,30,,30,30,30,30,30,,30',
'30,30,,30,30,,30,30,,453,453,453,453,453,453,453,,,453,453,,,,,,453',
'453,,30,,,30,,,30,,,,,30,453,,453,30,453,453,453,453,453,453,453,30',
'453,,,,30,30,30,30,30,30,,,,30,30,,,,,,,30,,,30,,,30,30,31,31,31,,31',
',,,31,31,,,,31,,31,31,31,31,31,31,31,,,,,,31,31,31,31,31,31,31,,,31',
',,,,,,31,,,31,31,,31,31,31,31,31,,31,31,31,,31,31,625,,625,625,625,',
'625,,,,,,,,,,,,,,,,,31,,,31,,,31,,,,,31,,,,625,,,,,,,,625,625,625,625',
',31,31,31,31,31,31,625,,,31,31,,,,,,,31,,,31,,,31,31,32,32,32,,32,,',
',32,32,,,,32,,32,32,32,32,32,32,32,,,,,,32,32,32,32,32,32,32,,,32,,',
',,,,32,,,32,32,,32,32,32,32,32,,32,32,32,450,32,32,56,,56,56,56,,56',
',,,,,,450,450,,,,,,,,,32,,,32,,450,32,450,,450,450,450,450,,,56,56,',
',,,,,56,56,56,56,,32,32,32,32,32,32,,,,32,32,,,,32,,,32,,,32,,,32,32',
'540,540,540,,540,,,,540,540,,,,540,,540,540,540,540,540,540,540,,,,',
',540,540,540,540,540,540,540,,,540,,,,,,,540,,,540,540,,540,540,540',
'540,540,,540,540,540,451,540,540,804,,804,804,804,,804,,,,,,,451,451',
',,,,,,,,540,,,540,,451,540,451,,451,451,451,451,,,804,,,,,,,,804,804',
'804,804,,540,540,540,540,540,540,,,,540,540,,,,,,,540,,,540,,,540,540',
'554,554,554,554,554,,,,554,554,,,,554,,554,554,554,554,554,554,554,',
',,,,554,554,554,554,554,554,554,,,554,,,,,,554,554,,554,554,554,,554',
'554,554,554,554,,554,554,554,,554,554,,554,554,,443,443,443,443,443',
'443,443,443,443,443,443,,443,443,,,443,443,,554,,,554,,,554,,,,,554',
'443,,443,554,443,443,443,443,443,443,443,554,443,,,,554,554,554,554',
'554,554,,,,554,554,,,,,,,554,,,554,,,554,554,866,866,866,866,866,,,',
'866,866,,,,866,,866,866,866,866,866,866,866,,,,,,866,866,866,866,866',
'866,866,,,866,,,,,,866,866,,866,866,866,,866,866,866,866,866,,866,866',
'866,,866,866,,866,866,,458,458,458,458,458,458,458,,,458,458,,,,,,458',
'458,,866,,,866,,,866,,,,,866,458,,458,866,458,458,458,458,458,458,458',
'866,458,,,,866,866,866,866,866,866,,,,866,866,,,,,,,866,,,866,,,866',
'866,864,864,864,,864,,,,864,864,,,,864,,864,864,864,864,864,864,864',
',,,,,864,864,864,864,864,864,864,,,864,,,,,,,864,,,864,864,,864,864',
'864,864,864,,864,864,864,,864,864,,864,864,,459,459,459,459,459,459',
'459,,,459,459,,,,,,459,459,,864,,,864,,,864,,,,,864,459,864,459,864',
'459,459,459,459,459,459,459,864,459,,,,864,864,864,864,864,864,,,,864',
'864,,,,,,,864,,,864,,,864,864,703,703,703,,703,,,,703,703,,,,703,,703',
'703,703,703,703,703,703,,,,,,703,703,703,703,703,703,703,,,703,,,,,',
',703,,,703,703,,703,703,703,703,703,,703,703,703,,703,703,,703,703,',
'460,460,460,460,460,460,460,,,460,460,,,,,,460,460,,703,,,703,,,703',
',,,,,460,,460,703,460,460,460,460,460,460,460,703,460,,,,703,703,703',
'703,703,703,,,,703,703,,,,,,,703,,,703,,,703,703,39,39,39,,39,,,,39',
'39,,,,39,,39,39,39,39,39,39,39,,,,,,39,39,39,39,39,39,39,,,39,,,,,,',
'39,,,39,39,,39,39,39,39,39,,39,39,39,,39,39,,39,39,,462,462,462,462',
'462,462,462,,,462,462,,,,,,462,462,,39,,,39,,,39,,,,,,462,,462,39,462',
'462,462,462,462,462,462,39,462,,,,39,39,39,39,39,39,,,,39,39,,,,,,,39',
',,39,,,39,39,40,40,40,,40,,,,40,40,,,,40,,40,40,40,40,40,40,40,,,,,',
'40,40,40,40,40,40,40,,,40,,,,,,,40,,,40,40,,40,40,40,40,40,,40,40,40',
',40,40,,40,40,,465,465,465,465,465,465,465,,,465,465,,,,,,465,465,,40',
',,40,,,40,,,,,,465,,465,40,465,465,465,465,465,465,465,40,465,,,,40',
'40,40,40,40,40,,,,40,40,,,,,,,40,,,40,,,40,40,849,849,849,849,849,,',
',849,849,,,,849,,849,849,849,849,849,849,849,,,,,,849,849,849,849,849',
'849,849,,,849,,,,,,849,849,,849,849,849,,849,849,849,849,849,,849,849',
'849,,849,849,,849,849,,442,442,442,442,442,442,442,442,442,442,442,',
'442,442,,,442,442,,849,,,849,,,849,,,,,849,442,,442,849,442,442,442',
'442,442,442,442,849,442,,,,849,849,849,849,849,849,,,,849,849,,,,,,',
'849,,,849,,,849,849,558,558,558,558,558,,,,558,558,,,,558,,558,558,558',
'558,558,558,558,,,,,,558,558,558,558,558,558,558,,,558,,,,,,558,558',
',558,558,558,,558,558,558,558,558,,558,558,558,,558,558,,558,558,,466',
'466,466,466,466,466,466,466,,466,466,,,,,,466,466,,558,,,558,,,558,',
',,,558,466,,466,558,466,466,466,466,466,466,466,558,466,,,,558,558,558',
'558,558,558,,,,558,558,,,,,,,558,,,558,,,558,558,563,563,563,563,563',
',,,563,563,,,,563,,563,563,563,563,563,563,563,,,,,,563,563,563,563',
'563,563,563,,,563,,,,,,563,563,,563,563,563,,563,563,563,563,563,,563',
'563,563,,563,563,,563,563,,461,461,461,461,461,461,461,,,461,461,,,',
',,461,461,,563,,,563,,,563,,,,,563,461,,461,563,461,461,461,461,461',
'461,461,563,461,,,,563,563,563,563,563,563,,,,563,563,,,,,,,563,,,563',
',,563,563,52,52,52,,52,,,,52,52,,,,52,,52,52,52,52,52,52,52,,,,,,52',
'52,52,52,52,52,52,,,52,,,,,,,52,,,52,52,,52,52,52,52,52,,52,52,52,,52',
'52,,52,52,,457,,,,,,,,,,,,,,,,457,457,,52,,,52,,,52,,,,,,457,,457,52',
'457,457,457,457,,,457,52,457,,,,52,52,52,52,52,52,,,,52,52,,,,,,,52',
',,52,,,52,52,53,53,53,,53,,,,53,53,,,,53,,53,53,53,53,53,53,53,,,,,',
'53,53,53,53,53,53,53,,,53,,,,,,,53,,,53,53,,53,53,53,53,53,53,53,53',
'53,,53,53,,53,53,,,,,,,,,,,,,,,,,,,,,53,,,53,,,53,,,,,53,,,,53,,,,,',
',,53,,,,,53,53,53,53,53,53,,,,53,53,,,,,,,53,,,53,,,53,53,54,54,54,',
'54,,,,54,54,,,,54,,54,54,54,54,54,54,54,,,,,,54,54,54,54,54,54,54,,',
'54,,,,,,,54,,,54,54,,54,54,54,54,54,54,54,54,54,,54,54,,54,54,,,,,,',
',,,,,,,,,,,,,,54,,,54,,,54,,,,,,,,,54,,,,,,,,54,,,,,54,54,54,54,54,54',
',,,54,54,,,,,,,54,,,54,,,54,54,569,569,569,,569,,,,569,569,,,,569,,569',
'569,569,569,569,569,569,,,,,,569,569,569,569,569,569,569,,,569,,,,,',
',569,,,569,569,,569,569,569,569,569,569,569,569,569,,569,569,,569,569',
',,,,,,,,,,,,,,,,,,,,569,,,569,,,569,,,,,569,,,,569,,,,,,,,569,,,,,569',
'569,569,569,569,569,,,,569,569,,,,,,,569,,,569,,,569,569,846,846,846',
'846,846,,,,846,846,,,,846,,846,846,846,846,846,846,846,,,,,,846,846',
'846,846,846,846,846,,,846,,,,,,846,846,,846,846,846,,846,846,846,846',
'846,,846,846,846,,846,846,,846,846,,,,,,,,,,,,,,,,,,,,,846,,,846,,,846',
',,,,846,,,,846,,,,,,,,846,,,,,846,846,846,846,846,846,,,,846,846,,,',
',,,846,,,846,,,846,846,57,57,57,,57,,,,57,57,,,,57,,57,57,57,57,57,57',
'57,,,,,,57,57,57,57,57,57,57,,,57,,,,,,,57,,,57,57,,57,57,57,57,57,',
'57,57,57,,57,57,,57,57,,,,,,,,,,,,,,,,,,,,,57,,,57,,,57,,,,,,,,,57,',
',,,,,,57,,,,,57,57,57,57,57,57,,,,57,57,,,,,,,57,,,57,,,57,57,58,58',
'58,,58,,,,58,58,,,,58,,58,58,58,58,58,58,58,,,,,,58,58,58,58,58,58,58',
',,58,,,,,,,58,,,58,58,,58,58,58,58,58,,58,58,58,,58,58,,58,58,,,,,,',
',,,,,,,,,,,,,,58,,,58,,,58,,,,,,,,,58,,,,,,,,58,,,,,58,58,58,58,58,58',
',,,58,58,,,,,,,58,,,58,,,58,58,61,61,61,,61,,,,61,61,,,,61,,61,61,61',
'61,61,61,61,,,,,,61,61,61,61,61,61,61,,,61,,,,,,,61,,,61,61,,61,61,61',
'61,61,,61,61,61,,61,61,,61,61,,,,,,,,,,,,,,,,,,,,,61,,,61,,,61,,,,,',
',,,61,,,,,,,,61,,,,,61,61,61,61,61,61,,,,61,61,61,,,,,61,61,,,61,,,61',
'61,62,62,62,,62,,,,62,62,,,,62,,62,62,62,62,62,62,62,,,,,,62,62,62,62',
'62,62,62,,,62,,,,,,,62,,,62,62,,62,62,62,62,62,,62,62,62,,62,62,714',
',714,714,714,,714,,,,,,,,,,,,,,,,,62,,,62,,,62,,,,,62,,,,714,,,,,,,',
'714,714,714,714,,62,62,62,62,62,62,,,,62,62,,,,,,,62,,,62,,,62,62,63',
'63,63,,63,,,,63,63,,,,63,,63,63,63,63,63,63,63,,,,,,63,63,63,63,63,63',
'63,,,63,,,,,,,63,,,63,63,,63,63,63,63,63,,63,63,63,,63,63,860,,860,860',
'860,,860,,,,,,,,,,,,,,63,,,63,,,63,,,63,,,,,,,,,860,860,,,,,,,860,860',
'860,860,,63,63,63,63,63,63,,,,63,63,,,,,,,63,,,63,,,63,63,439,439,439',
',439,,,,439,439,,,,439,,439,439,439,439,439,439,439,,,,,,439,439,439',
'439,439,439,439,,,439,,,,,,,439,,,439,439,,439,439,439,439,439,,439',
'439,439,,439,439,,439,439,,,,,,,,,,,,,,,,,,,,,439,,,439,,,439,,,,,,',
',,439,,,,,,,,439,,,,,439,439,439,439,439,439,,,,439,439,,,,,,,439,,',
'439,,,439,439,845,845,845,,845,,,,845,845,,,,845,,845,845,845,845,845',
'845,845,,,,,,845,845,845,845,845,845,845,,,845,,,,,,,845,,,845,845,',
'845,845,845,845,845,,845,845,845,,845,845,,845,845,,,,,,,,,,,,,,,,,',
',,,845,,,845,,,845,,,,,845,,,,845,,,,,,,,845,,,,,845,845,845,845,845',
'845,,,,845,845,,,,,,,845,,,845,,,845,845,438,438,438,,438,,,,438,438',
',,,438,,438,438,438,438,438,438,438,,,,,,438,438,438,438,438,438,438',
',,438,,,,,,,438,,,438,438,,438,438,438,438,438,,438,438,438,,438,438',
',438,438,,,,,,,,,,,,,,,,,,,,,438,,,438,,,438,,,,,,,,,438,,,,,,,,438',
',,,,438,438,438,438,438,438,,,,438,438,,,,,,,438,,,438,,,438,438,835',
'835,835,,835,,,,835,835,,,,835,,835,835,835,835,835,835,835,,,,,,835',
'835,835,835,835,835,835,,,835,,,,,,,835,,,835,835,,835,835,835,835,835',
',835,835,835,,835,835,318,,318,318,318,,318,,,,,,,,,,,,,,,,,835,,,835',
',,835,,,,,,,,,318,,318,,,,,,318,318,318,318,,835,835,835,835,835,835',
',,,835,835,,,,,,,835,,,835,,,835,835,437,437,437,,437,,,,437,437,,,',
'437,,437,437,437,437,437,437,437,,,,,,437,437,437,437,437,437,437,,',
'437,,,,,,,437,,,437,437,,437,437,437,437,437,,437,437,437,,437,437,',
'437,437,,,,,,,,,,,,,,,,,,,,,437,,,437,,,437,,,,,,,,,437,,,,,,,,437,',
',,,437,437,437,437,437,437,,,,437,437,,,,,,,437,,,437,,,437,437,83,83',
'83,,83,,,,83,83,,,,83,,83,83,83,83,83,83,83,,83,,,,83,83,83,83,83,83',
'83,,,83,,,,,,,83,,,83,83,,83,83,83,83,83,83,83,83,83,,83,83,,83,83,',
',,,,,,,,,,,,,,,,,,,83,,,83,83,,83,,,,,83,,83,,83,,,,,,,,83,,83,,,83',
'83,83,83,83,83,,,,83,83,,,,,,,83,,,83,,,83,83,86,86,86,,86,,,,86,86',
',,,86,,86,86,86,86,86,86,86,,86,,,,86,86,86,86,86,86,86,,,86,,,,,,,86',
',,86,86,,86,86,86,86,86,86,86,86,86,,86,86,,86,86,,,,,,,,,,,,,,,,,,',
',,86,,,86,86,,86,,,,,86,,86,,86,,,,,,,,86,,86,,,86,86,86,86,86,86,,',
',86,86,,,,,,,86,,,86,,,86,86,435,435,435,,435,,,,435,435,,,,435,,435',
'435,435,435,435,435,435,,,,,,435,435,435,435,435,435,435,,,435,,,,,',
',435,,,435,435,,435,435,435,435,435,435,435,435,435,,435,435,,435,435',
',,,,,,,,,,,,,,,,,,,,435,,,435,,,435,,,,,435,,,,435,,,,,,,,435,,,,,435',
'435,435,435,435,435,,,,435,435,,,,,,,435,,,435,,,435,435,98,98,98,98',
'98,,,,98,98,,,,98,,98,98,98,98,98,98,98,,,,,,98,98,98,98,98,98,98,,',
'98,,,,,,98,98,98,98,98,98,,98,98,98,98,98,,98,98,98,,98,98,,98,98,,',
',,,,,,,,,,,,,,,,,,98,,,98,,,98,,,,,98,,,,98,,,,,,,,98,,,,,98,98,98,98',
'98,98,,,,98,98,,,,,,98,98,,,98,,,98,98,102,102,102,,102,,,,102,102,',
',,102,,102,102,102,102,102,102,102,,,,,,102,102,102,102,102,102,102',
',,102,,,,,,,102,,,102,102,,102,102,102,102,102,,102,102,102,,102,102',
',102,102,,,,,,,,,,,,,,,,,,,,,102,,,102,,,102,,,,,,,,,102,,,,,,,,102',
',,,,102,102,102,102,102,102,,,,102,102,,,,,,,102,,,102,,,102,102,103',
'103,103,,103,,,,103,103,,,,103,,103,103,103,103,103,103,103,,,,,,103',
'103,103,103,103,103,103,,,103,,,,,,,103,,,103,103,,103,103,103,103,103',
',103,103,103,,103,103,,103,103,,,,,,,,,,,,,,,,,,,,,103,,,103,,,103,',
',,,,,,,103,,,,,,,,103,,,,,103,103,103,103,103,103,,,,103,103,,,,,,,103',
',,103,,,103,103,104,104,104,,104,,,,104,104,,,,104,,104,104,104,104',
'104,104,104,,,,,,104,104,104,104,104,104,104,,,104,,,,,,,104,,,104,104',
',104,104,104,104,104,,104,104,104,,104,104,,104,104,,,,,,,,,,,,,,,,',
',,,,104,,,104,,,104,,,,,,,,,104,,,,,,,,104,,,,,104,104,104,104,104,104',
',,,104,104,,,,,,,104,,,104,,,104,104,105,105,105,,105,,,,105,105,,,',
'105,,105,105,105,105,105,105,105,,,,,,105,105,105,105,105,105,105,,',
'105,,,,,,,105,,,105,105,,105,105,105,105,105,,105,105,105,,105,105,',
'105,105,,,,,,,,,,,,,,,,,,,,,105,,,105,,,105,,,,,,,,,105,,,,,,,,105,',
',,,105,105,105,105,105,105,,,,105,105,,,,,,,105,,,105,,,105,105,106',
'106,106,106,106,,,,106,106,,,,106,,106,106,106,106,106,106,106,,,,,',
'106,106,106,106,106,106,106,,,106,,,,,,106,106,,106,106,106,,106,106',
'106,106,106,,106,106,106,,106,106,,106,106,,,,,,,,,,,,,,,,,,,,,106,',
',106,,,106,,,,,106,,,,106,,,,,,,,106,,,,,106,106,106,106,106,106,,,',
'106,106,,,,,,,106,,,106,,,106,106,107,107,107,107,107,,,,107,107,,,',
'107,,107,107,107,107,107,107,107,,,,,,107,107,107,107,107,107,107,,',
'107,,,,,,107,107,107,107,107,107,,107,107,107,107,107,,107,107,107,',
'107,107,,107,107,,,,,,,,,,,,,,,,,,,,,107,,,107,,,107,,,,,107,,,,107',
',,,,,,,107,,,,,107,107,107,107,107,107,,,,107,107,,,,,,,107,,,107,,',
'107,107,831,831,831,831,831,,,,831,831,,,,831,,831,831,831,831,831,831',
'831,,,,,,831,831,831,831,831,831,831,,,831,,,,,,831,831,,831,831,831',
',831,831,831,831,831,,831,831,831,,831,831,,831,831,,,,,,,,,,,,,,,,',
',,,,831,,,831,,,831,,,,,831,,,,831,,,,,,,,831,,,,,831,831,831,831,831',
'831,,,,831,831,,,,,,,831,,,831,,,831,831,428,428,428,,428,,,,428,428',
',,,428,,428,428,428,428,428,428,428,,,,,,428,428,428,428,428,428,428',
',,428,,,,,,,428,,,428,428,,428,428,428,428,428,428,428,428,428,,428',
'428,,428,428,,,,,,,,,,,,,,,,,,,,,428,,,428,428,,428,,,,,428,,428,,428',
',,,,,,,428,,,,,428,428,428,428,428,428,,,,428,428,,,,,,,428,,,428,,',
'428,428,822,822,822,,822,,,,822,822,,,,822,,822,822,822,822,822,822',
'822,,,,,,822,822,822,822,822,822,822,,,822,,,,,,,822,,,822,822,,822',
'822,822,822,822,,822,822,822,,822,822,,822,822,,,,,,,,,,,,,,,,,,,,,822',
',,822,,,822,,,,,,,,,822,,,,,,,,822,,,,,822,822,822,822,822,822,,,,822',
'822,,,,,,,822,,,822,,,822,822,194,194,194,194,194,,,,194,194,,,,194',
',194,194,194,194,194,194,194,,,,,,194,194,194,194,194,194,194,,,194',
',,,,,194,194,,194,194,194,,194,194,194,194,194,,194,194,194,,194,194',
',194,194,,,,,,,,,,,,,,,,,,,,,194,,,194,,,194,,,,,194,,,,194,,,,,,,,194',
',,,,194,194,194,194,194,194,,,,194,194,,,,,,,194,,,194,,,194,194,195',
'195,195,,195,,,,195,195,,,,195,,195,195,195,195,195,195,195,,,,,,195',
'195,195,195,195,195,195,,,195,,,,,,,195,,,195,195,,195,195,195,195,195',
',195,195,195,,195,195,,195,195,,,,,,,,,,,,,,,,,,,,,195,,,195,,,195,',
',,,195,,,,195,,,,,,,,195,,,,,195,195,195,195,195,195,,,,195,195,,,,',
',,195,,,195,,,195,195,196,196,196,,196,,,,196,196,,,,196,,196,196,196',
'196,196,196,196,,,,,,196,196,196,196,196,196,196,,,196,,,,,,,196,,,196',
'196,,196,196,196,196,196,,196,196,196,,196,196,,196,196,,,,,,,,,,,,',
',,,,,,,,196,,,196,,,196,,,,,196,,,,196,,,,,,,,196,,,,,196,196,196,196',
'196,196,,,,196,196,,,,,,,196,,,196,,,196,196,197,197,197,,197,,,,197',
'197,,,,197,,197,197,197,197,197,197,197,,,,,,197,197,197,197,197,197',
'197,,,197,,,,,,,197,,,197,197,,197,197,197,197,197,,197,197,197,,197',
'197,,197,197,,,,,,,,,,,,,,,,,,,,,197,,,197,,,197,,,,,,,,,197,,,,,,,',
'197,,,,,197,197,197,197,197,197,,,,197,197,,,,,,,197,,,197,,,197,197',
'198,198,198,,198,,,,198,198,,,,198,,198,198,198,198,198,198,198,,,,',
',198,198,198,198,198,198,198,,,198,,,,,,,198,,,198,198,,198,198,198',
'198,198,198,198,198,198,,198,198,,198,198,,,,,,,,,,,,,,,,,,,,,198,,',
'198,,,198,,,,,198,,,,198,,,,,,,,198,,,,,198,198,198,198,198,198,,,,198',
'198,,,,,,,198,,,198,,,198,198,427,427,427,,427,,,,427,427,,,,427,,427',
'427,427,427,427,427,427,,,,,,427,427,427,427,427,427,427,,,427,,,,,',
',427,,,427,427,,427,427,427,427,427,427,427,427,427,,427,427,,427,427',
',,,,,,,,,,,,,,,,,,,,427,,,427,427,,427,,,,,427,,427,,427,,,,,,,,427',
',,,,427,427,427,427,427,427,,,,427,427,,,,,,,427,,,427,,,427,427,573',
'573,573,,573,,,,573,573,,,,573,,573,573,573,573,573,573,573,,,,,,573',
'573,573,573,573,573,573,,,573,,,,,,,573,,,573,573,,573,573,573,573,573',
',573,573,573,,573,573,,573,573,,,,,,,,,,,,,,,,,,,,,573,,,573,,,573,',
',,,,,,,573,,,,,,,,573,,,,,573,573,573,573,573,573,,,,573,573,,,,,,,573',
',,573,,,573,573,201,201,201,,201,,,,201,201,,,,201,,201,201,201,201',
'201,201,201,,,,,,201,201,201,201,201,201,201,,,201,,,,,,,201,,,201,201',
',201,201,201,201,201,,201,201,201,,201,201,,201,201,,,,,,,,,,,,,,,,',
',,,,201,,,201,,,201,,,,,,,,,201,,,,,,,,201,,,,,201,201,201,201,201,201',
',,,201,201,,,,,,,201,,,201,,,201,201,202,202,202,,202,,,,202,202,,,',
'202,,202,202,202,202,202,202,202,,,,,,202,202,202,202,202,202,202,,',
'202,,,,,,,202,,,202,202,,202,202,202,202,202,,202,202,202,,202,202,',
'202,202,,,,,,,,,,,,,,,,,,,,,202,,,202,,,202,,,,,,,,,202,,,,,,,,202,',
',,,202,202,202,202,202,202,,,,202,202,,,,,,,202,,,202,,,202,202,203',
'203,203,,203,,,,203,203,,,,203,,203,203,203,203,203,203,203,,,,,,203',
'203,203,203,203,203,203,,,203,,,,,,,203,,,203,203,,203,203,203,203,203',
',203,203,203,,203,203,,203,203,,,,,,,,,,,,,,,,,,,,,203,,,203,,,203,',
',,,,,,,203,,,,,,,,203,,,,,203,203,203,203,203,203,,,,203,203,,,,,,,203',
',,203,,,203,203,575,575,575,,575,,,,575,575,,,,575,,575,575,575,575',
'575,575,575,,,,,,575,575,575,575,575,575,575,,,575,,,,,,,575,,,575,575',
',575,575,575,575,575,,575,575,575,,575,575,,575,575,,,,,,,,,,,,,,,,',
',,,,575,,,575,,,575,,,,,,,,,575,,,,,,,,575,,,,,575,575,575,575,575,575',
',,,575,575,,,,,,,575,,,575,,,575,575,602,602,602,,602,,,,602,602,,,',
'602,,602,602,602,602,602,602,602,,,,,,602,602,602,602,602,602,602,,',
'602,,,,,,,602,,,602,602,,602,602,602,602,602,,602,602,602,,602,602,',
'602,602,,,,,,,,,,,,,,,,,,,,,602,,,602,,,602,,,,,,,,,602,,,,,,,,602,',
',,,602,602,602,602,602,602,,,,602,602,,,,,,,602,,,602,,,602,602,810',
'810,810,,810,,,,810,810,,,,810,,810,810,810,810,810,810,810,,,,,,810',
'810,810,810,810,810,810,,,810,,,,,,,810,,,810,810,,810,810,810,810,810',
',810,810,810,,810,810,,810,810,,,,,,,,,,,,,,,,,,,,,810,,,810,,,810,',
',,,,,,,810,,,,,,,,810,,,,,810,810,810,810,810,810,,,,810,810,,,,,,,810',
',,810,,,810,810,604,604,604,,604,,,,604,604,,,,604,,604,604,604,604',
'604,604,604,,,,,,604,604,604,604,604,604,604,,,604,,,,,,,604,,,604,604',
',604,604,604,604,604,,604,604,604,,604,604,,604,604,,,,,,,,,,,,,,,,',
',,,,604,,,604,,,604,,,,,604,,,,604,,,,,,,,604,,,,,604,604,604,604,604',
'604,,,,604,604,,,,,,,604,,,604,,,604,604,409,409,409,,409,,,,409,409',
',,,409,,409,409,409,409,409,409,409,,,,,,409,409,409,409,409,409,409',
',,409,,,,,,,409,,,409,409,,409,409,409,409,409,,409,409,409,,409,409',
',409,409,,,,,,,,,,,,,,,,,,,,,409,,,409,,,409,,,,,,,,,409,,,,,,,,409',
',,,,409,409,409,409,409,409,,,,409,409,,,,,,,409,,,409,,,409,409,791',
'791,791,791,791,,,,791,791,,,,791,,791,791,791,791,791,791,791,,,,,',
'791,791,791,791,791,791,791,,,791,,,,,,791,791,,791,791,791,,791,791',
'791,791,791,,791,791,791,,791,791,,791,791,,,,,,,,,,,,,,,,,,,,,791,',
',791,,,791,,,,,791,,,,791,,,,,,,,791,,,,,791,791,791,791,791,791,,,',
'791,791,,,,,,,791,,,791,,,791,791,211,211,211,211,211,,,,211,211,,,',
'211,,211,211,211,211,211,211,211,,,,,,211,211,211,211,211,211,211,,',
'211,,,,,,211,211,,211,211,211,,211,211,211,211,211,,211,211,211,,211',
'211,,211,211,,,,,,,,,,,,,,,,,,,,,211,,,211,,,211,,,,,211,,,,211,,,,',
',,,211,,,,,211,211,211,211,211,211,,,,211,211,,,,,,,211,,,211,,,211',
'211,212,212,212,,212,,,,212,212,,,,212,,212,212,212,212,212,212,212',
',,,,,212,212,212,212,212,212,212,,,212,,,,,,,212,,,212,212,,212,212',
'212,212,212,,212,212,212,,212,212,,212,212,,,,,,,,,,,,,,,,,,,,,212,',
',212,,212,212,,,,,,,,,212,,,,,,,,212,,,,,212,212,212,212,212,212,,,',
'212,212,,,,,,,212,,,212,,,212,212,215,215,215,,215,,,,215,215,,,,215',
',215,215,215,215,215,215,215,,,,,,215,215,215,215,215,215,215,,,215',
',,,,,,215,,,215,215,,215,215,215,215,215,,215,215,215,,215,215,,215',
'215,,,,,,,,,,,,,,,,,,,,,215,,,215,,,215,,,,,,,,,215,,,,,,,,215,,,,,215',
'215,215,215,215,215,,,,215,215,,,,,,,215,,,215,,,215,215,790,790,790',
'790,790,,,,790,790,,,,790,,790,790,790,790,790,790,790,,,,,,790,790',
'790,790,790,790,790,,,790,,,,,,790,790,,790,790,790,,790,790,790,790',
'790,,790,790,790,,790,790,,790,790,,,,,,,,,,,,,,,,,,,,,790,,,790,,,790',
',,,,790,,,,790,,,,,,,,790,,,,,790,790,790,790,790,790,,,,790,790,,,',
',,,790,,,790,,,790,790,217,217,217,,217,,,,217,217,,,,217,,217,217,217',
'217,217,217,217,,,,,,217,217,217,217,217,217,217,,,217,,,,,,,217,,,217',
'217,,217,217,217,217,217,,217,217,217,,217,217,,217,217,,,,,,,,,,,,',
',,,,,,,,217,,,217,,,217,,,,,,,,,217,,,,,,,,217,,,,,217,217,217,217,217',
'217,,,,217,217,,,,,,,217,,,217,,,217,217,218,218,218,,218,,,,218,218',
',,,218,,218,218,218,218,218,218,218,,,,,,218,218,218,218,218,218,218',
',,218,,,,,,,218,,,218,218,,218,218,218,218,218,,218,218,218,,218,218',
',218,218,,,,,,,,,,,,,,,,,,,,,218,,,218,,,218,,,,,,,,,218,,,,,,,,218',
',,,,218,218,218,218,218,218,,,,218,218,,,,,,,218,,,218,,,218,218,219',
'219,219,,219,,,,219,219,,,,219,,219,219,219,219,219,219,219,,,,,,219',
'219,219,219,219,219,219,,,219,,,,,,,219,,,219,219,,219,219,219,219,219',
',219,219,219,,219,219,,219,219,,,,,,,,,,,,,,,,,,,,,219,,,219,,,219,',
',,,,,,,219,,,,,,,,219,,,,,219,219,219,219,219,219,,,,219,219,,,,,,,219',
',,219,,,219,219,220,220,220,,220,,,,220,220,,,,220,,220,220,220,220',
'220,220,220,,,,,,220,220,220,220,220,220,220,,,220,,,,,,,220,,,220,220',
',220,220,220,220,220,,220,220,220,,220,220,,220,220,,,,,,,,,,,,,,,,',
',,,,220,,,220,,,220,,,,,,,,,220,,,,,,,,220,,,,,220,220,220,220,220,220',
',,,220,220,,,,,,,220,,,220,,,220,220,221,221,221,,221,,,,221,221,,,',
'221,,221,221,221,221,221,221,221,,,,,,221,221,221,221,221,221,221,,',
'221,,,,,,,221,,,221,221,,221,221,221,221,221,,221,221,221,,221,221,',
'221,221,,,,,,,,,,,,,,,,,,,,,221,,,221,,,221,,,,,,,,,221,,,,,,,,221,',
',,,221,221,221,221,221,221,,,,221,221,,,,,,,221,,,221,,,221,221,222',
'222,222,,222,,,,222,222,,,,222,,222,222,222,222,222,222,222,,,,,,222',
'222,222,222,222,222,222,,,222,,,,,,,222,,,222,222,,222,222,222,222,222',
',222,222,222,,222,222,,222,222,,,,,,,,,,,,,,,,,,,,,222,,,222,,,222,',
',,,,,,,222,,,,,,,,222,,,,,222,222,222,222,222,222,,,,222,222,,,,,,,222',
',,222,,,222,222,223,223,223,,223,,,,223,223,,,,223,,223,223,223,223',
'223,223,223,,,,,,223,223,223,223,223,223,223,,,223,,,,,,,223,,,223,223',
',223,223,223,223,223,,223,223,223,,223,223,,223,223,,,,,,,,,,,,,,,,',
',,,,223,,,223,,,223,,,,,,,,,223,,,,,,,,223,,,,,223,223,223,223,223,223',
',,,223,223,,,,,,,223,,,223,,,223,223,224,224,224,,224,,,,224,224,,,',
'224,,224,224,224,224,224,224,224,,,,,,224,224,224,224,224,224,224,,',
'224,,,,,,,224,,,224,224,,224,224,224,224,224,,224,224,224,,224,224,',
'224,224,,,,,,,,,,,,,,,,,,,,,224,,,224,,,224,,,,,,,,,224,,,,,,,,224,',
',,,224,224,224,224,224,224,,,,224,224,,,,,,,224,,,224,,,224,224,225',
'225,225,,225,,,,225,225,,,,225,,225,225,225,225,225,225,225,,,,,,225',
'225,225,225,225,225,225,,,225,,,,,,,225,,,225,225,,225,225,225,225,225',
',225,225,225,,225,225,,225,225,,,,,,,,,,,,,,,,,,,,,225,,,225,,,225,',
',,,,,,,225,,,,,,,,225,,,,,225,225,225,225,225,225,,,,225,225,,,,,,,225',
',,225,,,225,225,226,226,226,,226,,,,226,226,,,,226,,226,226,226,226',
'226,226,226,,,,,,226,226,226,226,226,226,226,,,226,,,,,,,226,,,226,226',
',226,226,226,226,226,,226,226,226,,226,226,,226,226,,,,,,,,,,,,,,,,',
',,,,226,,,226,,,226,,,,,,,,,226,,,,,,,,226,,,,,226,226,226,226,226,226',
',,,226,226,,,,,,,226,,,226,,,226,226,227,227,227,,227,,,,227,227,,,',
'227,,227,227,227,227,227,227,227,,,,,,227,227,227,227,227,227,227,,',
'227,,,,,,,227,,,227,227,,227,227,227,227,227,,227,227,227,,227,227,',
'227,227,,,,,,,,,,,,,,,,,,,,,227,,,227,,,227,,,,,,,,,227,,,,,,,,227,',
',,,227,227,227,227,227,227,,,,227,227,,,,,,,227,,,227,,,227,227,228',
'228,228,,228,,,,228,228,,,,228,,228,228,228,228,228,228,228,,,,,,228',
'228,228,228,228,228,228,,,228,,,,,,,228,,,228,228,,228,228,228,228,228',
',228,228,228,,228,228,,228,228,,,,,,,,,,,,,,,,,,,,,228,,,228,,,228,',
',,,,,,,228,,,,,,,,228,,,,,228,228,228,228,228,228,,,,228,228,,,,,,,228',
',,228,,,228,228,229,229,229,,229,,,,229,229,,,,229,,229,229,229,229',
'229,229,229,,,,,,229,229,229,229,229,229,229,,,229,,,,,,,229,,,229,229',
',229,229,229,229,229,,229,229,229,,229,229,,229,229,,,,,,,,,,,,,,,,',
',,,,229,,,229,,,229,,,,,,,,,229,,,,,,,,229,,,,,229,229,229,229,229,229',
',,,229,229,,,,,,,229,,,229,,,229,229,230,230,230,,230,,,,230,230,,,',
'230,,230,230,230,230,230,230,230,,,,,,230,230,230,230,230,230,230,,',
'230,,,,,,,230,,,230,230,,230,230,230,230,230,,230,230,230,,230,230,',
'230,230,,,,,,,,,,,,,,,,,,,,,230,,,230,,,230,,,,,,,,,230,,,,,,,,230,',
',,,230,230,230,230,230,230,,,,230,230,,,,,,,230,,,230,,,230,230,231',
'231,231,,231,,,,231,231,,,,231,,231,231,231,231,231,231,231,,,,,,231',
'231,231,231,231,231,231,,,231,,,,,,,231,,,231,231,,231,231,231,231,231',
',231,231,231,,231,231,,231,231,,,,,,,,,,,,,,,,,,,,,231,,,231,,,231,',
',,,,,,,231,,,,,,,,231,,,,,231,231,231,231,231,231,,,,231,231,,,,,,,231',
',,231,,,231,231,232,232,232,,232,,,,232,232,,,,232,,232,232,232,232',
'232,232,232,,,,,,232,232,232,232,232,232,232,,,232,,,,,,,232,,,232,232',
',232,232,232,232,232,,232,232,232,,232,232,,232,232,,,,,,,,,,,,,,,,',
',,,,232,,,232,,,232,,,,,,,,,232,,,,,,,,232,,,,,232,232,232,232,232,232',
',,,232,232,,,,,,,232,,,232,,,232,232,233,233,233,,233,,,,233,233,,,',
'233,,233,233,233,233,233,233,233,,,,,,233,233,233,233,233,233,233,,',
'233,,,,,,,233,,,233,233,,233,233,233,233,233,,233,233,233,,233,233,',
'233,233,,,,,,,,,,,,,,,,,,,,,233,,,233,,,233,,,,,,,,,233,,,,,,,,233,',
',,,233,233,233,233,233,233,,,,233,233,,,,,,,233,,,233,,,233,233,234',
'234,234,,234,,,,234,234,,,,234,,234,234,234,234,234,234,234,,,,,,234',
'234,234,234,234,234,234,,,234,,,,,,,234,,,234,234,,234,234,234,234,234',
',234,234,234,,234,234,,234,234,,,,,,,,,,,,,,,,,,,,,234,,,234,,,234,',
',,,,,,,234,,,,,,,,234,,,,,234,234,234,234,234,234,,,,234,234,,,,,,,234',
',,234,,,234,234,235,235,235,,235,,,,235,235,,,,235,,235,235,235,235',
'235,235,235,,,,,,235,235,235,235,235,235,235,,,235,,,,,,,235,,,235,235',
',235,235,235,235,235,,235,235,235,,235,235,,235,235,,,,,,,,,,,,,,,,',
',,,,235,,,235,,,235,,,,,,,,,235,,,,,,,,235,,,,,235,235,235,235,235,235',
',,,235,235,,,,,,,235,,,235,,,235,235,236,236,236,,236,,,,236,236,,,',
'236,,236,236,236,236,236,236,236,,,,,,236,236,236,236,236,236,236,,',
'236,,,,,,,236,,,236,236,,236,236,236,236,236,,236,236,236,,236,236,',
'236,236,,,,,,,,,,,,,,,,,,,,,236,,,236,,,236,,,,,,,,,236,,,,,,,,236,',
',,,236,236,236,236,236,236,,,,236,236,,,,,,,236,,,236,,,236,236,237',
'237,237,,237,,,,237,237,,,,237,,237,237,237,237,237,237,237,,,,,,237',
'237,237,237,237,237,237,,,237,,,,,,,237,,,237,237,,237,237,237,237,237',
',237,237,237,,237,237,,237,237,,,,,,,,,,,,,,,,,,,,,237,,,237,,,237,',
',,,,,,,237,,,,,,,,237,,,,,237,237,237,237,237,237,,,,237,237,,,,,,,237',
',,237,,,237,237,238,238,238,,238,,,,238,238,,,,238,,238,238,238,238',
'238,238,238,,,,,,238,238,238,238,238,238,238,,,238,,,,,,,238,,,238,238',
',238,238,238,238,238,,238,238,238,,238,238,,238,238,,,,,,,,,,,,,,,,',
',,,,238,,,238,,,238,,,,,,,,,238,,,,,,,,238,,,,,238,238,238,238,238,238',
',,,238,238,,,,,,,238,,,238,,,238,238,239,239,239,,239,,,,239,239,,,',
'239,,239,239,239,239,239,239,239,,,,,,239,239,239,239,239,239,239,,',
'239,,,,,,,239,,,239,239,,239,239,239,239,239,,239,239,239,,239,239,',
'239,239,,,,,,,,,,,,,,,,,,,,,239,,,239,,,239,,,,,,,,,239,,,,,,,,239,',
',,,239,239,239,239,239,239,,,,239,239,,,,,,,239,,,239,,,239,239,240',
'240,240,,240,,,,240,240,,,,240,,240,240,240,240,240,240,240,,,,,,240',
'240,240,240,240,240,240,,,240,,,,,,,240,,,240,240,,240,240,240,240,240',
',240,240,240,,240,240,,240,240,,,,,,,,,,,,,,,,,,,,,240,,,240,,,240,',
',,,,,,,240,,,,,,,,240,,,,,240,240,240,240,240,240,,,,240,240,,,,,,,240',
',,240,,,240,240,241,241,241,,241,,,,241,241,,,,241,,241,241,241,241',
'241,241,241,,,,,,241,241,241,241,241,241,241,,,241,,,,,,,241,,,241,241',
',241,241,241,241,241,,241,241,241,,241,241,,241,241,,,,,,,,,,,,,,,,',
',,,,241,,,241,,,241,,,,,,,,,241,,,,,,,,241,,,,,241,241,241,241,241,241',
',,,241,241,,,,,,,241,,,241,,,241,241,242,242,242,,242,,,,242,242,,,',
'242,,242,242,242,242,242,242,242,,,,,,242,242,242,242,242,242,242,,',
'242,,,,,,,242,,,242,242,,242,242,242,242,242,,242,242,242,,242,242,',
'242,242,,,,,,,,,,,,,,,,,,,,,242,,,242,,,242,,,,,,,,,242,,,,,,,,242,',
',,,242,242,242,242,242,242,,,,242,242,,,,,,,242,,,242,,,242,242,606',
'606,606,,606,,,,606,606,,,,606,,606,606,606,606,606,606,606,,,,,,606',
'606,606,606,606,606,606,,,606,,,,,,,606,,,606,606,,606,606,606,606,606',
',606,606,606,,606,606,,606,606,,,,,,,,,,,,,,,,,,,,,606,,,606,,,606,',
',,,,,,,606,,,,,,,,606,,,,,606,606,606,606,606,606,,,,606,606,,,,,,,606',
',,606,,,606,606,788,788,788,,788,,,,788,788,,,,788,,788,788,788,788',
'788,788,788,,,,,,788,788,788,788,788,788,788,,,788,,,,,,,788,,,788,788',
',788,788,788,788,788,,788,788,788,,788,788,,788,788,,,,,,,,,,,,,,,,',
',,,,788,,,788,,,788,,,,,,,,,788,,,,,,,,788,,,,,788,788,788,788,788,788',
',,,788,788,,,,,,,788,,,788,,,788,788,607,607,607,,607,,,,607,607,,,',
'607,,607,607,607,607,607,607,607,,,,,,607,607,607,607,607,607,607,,',
'607,,,,,,,607,,,607,607,,607,607,607,607,607,,607,607,607,,607,607,',
'607,607,,,,,,,,,,,,,,,,,,,,,607,,,607,,,607,,,,,,,,,607,,,,,,,,607,',
',,,607,607,607,607,607,607,,,,607,607,,,,,,,607,,,607,,,607,607,251',
'251,251,,251,,,,251,251,,,,251,,251,251,251,251,251,251,251,,,,,,251',
'251,251,251,251,251,251,,,251,,,,,,,251,,,251,251,,251,251,251,251,251',
',251,251,251,,251,251,,251,251,,,,,,,,,,,,,,,,,,,,,251,,,251,,,251,',
',,,,,,,251,,,,,,,,251,,,,,251,251,251,251,251,251,,,,251,251,,,,,,,251',
',,251,,,251,251,769,769,769,769,769,,,,769,769,,,,769,,769,769,769,769',
'769,769,769,,,,,,769,769,769,769,769,769,769,,,769,,,,,,769,769,,769',
'769,769,,769,769,769,769,769,,769,769,769,,769,769,,769,769,,,,,,,,',
',,,,,,,,,,,,769,,,769,,,769,,,,,769,,,,769,,,,,,,,769,,,,,769,769,769',
'769,769,769,,,,769,769,,,,,,,769,,,769,,,769,769,253,253,253,,253,,',
',253,253,,,,253,,253,253,253,253,253,253,253,,,,,,253,253,253,253,253',
'253,253,,,253,,,,,,,253,,,253,253,,253,253,253,253,253,,253,253,253',
',253,253,,253,253,,,,,,,,,,,,,,,,,,,,,253,,,253,,,253,,,,,,,,,253,,',
',,,,,253,,,,,253,253,253,253,253,253,,,,253,253,,,,,,,253,,,253,,,253',
'253,258,258,258,,258,,,,258,258,,,,258,,258,258,258,258,258,258,258',
',,,,,258,258,258,258,258,258,258,,,258,,,,,,,258,,,258,258,,258,258',
'258,258,258,,258,258,258,,258,258,,258,258,,,,,,,,,,,,,,,,,,,,,258,',
',258,,,258,,,,,,,,,258,,,,,,,,258,,,,,258,258,258,258,258,258,,,,258',
'258,,,,,,,258,,,258,,,258,258,612,612,612,,612,,,,612,612,,,,612,,612',
'612,612,612,612,612,612,,,,,,612,612,612,612,612,612,612,,,612,,,,,',
',612,,,612,612,,612,612,612,612,612,,612,612,612,,612,612,,612,612,',
',,,,,,,,,,,,,,,,,,,612,,,612,,,612,,,,,,,,,612,,,,,,,,612,,,,,612,612',
'612,612,612,612,,,,612,612,,,,,,,612,,,612,,,612,612,615,615,615,,615',
',,,615,615,,,,615,,615,615,615,615,615,615,615,,,,,,615,615,615,615',
'615,615,615,,,615,,,,,,,615,,,615,615,,615,615,615,615,615,,615,615',
'615,,615,615,,615,615,,,,,,,,,,,,,,,,,,,,,615,,,615,,,615,,,,,,,,,615',
',,,,,,,615,,,,,615,615,615,615,615,615,,,,615,615,,,,,,,615,,,615,,',
'615,615,371,371,371,,371,,,,371,371,,,,371,,371,371,371,371,371,371',
'371,,,,,,371,371,371,371,371,371,371,,,371,,,,,,,371,,,371,371,,371',
'371,371,371,371,,371,371,371,,371,371,,371,371,,,,,,,,,,,,,,,,,,,,,371',
',,371,,,371,,,,,,,,,371,,,,,,,,371,,,,,371,371,371,371,371,371,,,,371',
'371,,,,,,,371,,,371,,,371,371,264,264,264,,264,,,,264,264,,,,264,,264',
'264,264,264,264,264,264,,,,,,264,264,264,264,264,264,264,,,264,,,,,',
',264,,,264,264,,264,264,264,264,264,264,264,264,264,,264,264,,264,264',
',,,,,,,,,,,,,,,,,,,,264,,,264,,,264,,,,,264,,264,,264,,,,,,,,264,,,',
',264,264,264,264,264,264,,,,264,264,,,,,,,264,,,264,,,264,264,265,265',
'265,,265,,,,265,265,,,,265,,265,265,265,265,265,265,265,,,,,,265,265',
'265,265,265,265,265,,,265,,,,,,,265,,,265,265,,265,265,265,265,265,265',
'265,265,265,,265,265,,265,265,,,,,,,,,,,,,,,,,,,,,265,,,265,,,265,,',
',,265,,265,,265,,,,,,,,265,,,,,265,265,265,265,265,265,,,,265,265,,',
',,,,265,,,265,,,265,265,273,273,273,,273,,,,273,273,,,,273,,273,273',
'273,273,273,273,273,,,,,,273,273,273,273,273,273,273,,,273,,,,,,,273',
',,273,273,,273,273,273,273,273,273,273,273,273,,273,273,,273,273,,,',
',,,,,,,,,,,,,,,,,273,,,273,,273,273,,,,,273,,273,,273,,,,,,,,273,,,',
',273,273,273,273,273,273,,,,273,273,,,,,,,273,,,273,,,273,273,759,759',
'759,,759,,,,759,759,,,,759,,759,759,759,759,759,759,759,,,,,,759,759',
'759,759,759,759,759,,,759,,,,,,,759,,,759,759,,759,759,759,759,759,',
'759,759,759,,759,759,,759,759,,,,,,,,,,,,,,,,,,,,,759,,,759,,,759,,',
',,759,,,,759,,,,,,,,759,,,,,759,759,759,759,759,759,,,,759,759,,,,,',
',759,,,759,,,759,759,623,623,623,,623,,,,623,623,,,,623,,623,623,623',
'623,623,623,623,,,,,,623,623,623,623,623,623,623,,,623,,,,,,,623,,,623',
'623,,623,623,623,623,623,,623,623,623,,623,623,,623,623,,,,,,,,,,,,',
',,,,,,,,623,,,623,,,623,,,,,,,,,623,,,,,,,,623,,,,,623,623,623,623,623',
'623,,,,623,623,,,,,,,623,,,623,,,623,623,744,744,744,,744,,,,744,744',
',,,744,,744,744,744,744,744,744,744,,,,,,744,744,744,744,744,744,744',
',,744,,,,,,,744,,,744,744,,744,744,744,744,744,,744,744,744,,744,744',
',744,744,,,,,,,,,,,,,,,,,,,,,744,,,744,,,744,,,,,,,,,744,,,,,,,,744',
',,,,744,744,744,744,744,744,,,,744,744,,,,,,,744,,,744,,,744,744,277',
'277,277,277,277,,,,277,277,,,,277,,277,277,277,277,277,277,277,,,,,',
'277,277,277,277,277,277,277,,,277,,,,,,277,277,,277,277,277,,277,277',
'277,277,277,,277,277,277,,277,277,,277,277,,,,,,,,,,,,,,,,,,,,,277,',
',277,,,277,,,,,277,,,,277,,,,,,,,277,,,,,277,277,277,277,277,277,,,',
'277,277,,,,,,,277,,,277,,,277,277,743,743,743,,743,,,,743,743,,,,743',
',743,743,743,743,743,743,743,,,,,,743,743,743,743,743,743,743,,,743',
',,,,,,743,,,743,743,,743,743,743,743,743,,743,743,743,,743,743,,743',
'743,,,,,,,,,,,,,,,,,,,,,743,,,743,,,743,,,,,,,,,743,,,,,,,,743,,,,,743',
'743,743,743,743,743,,,,743,743,,,,,,,743,,,743,,,743,743,742,742,742',
',742,,,,742,742,,,,742,,742,742,742,742,742,742,742,,,,,,742,742,742',
'742,742,742,742,,,742,,,,,,,742,,,742,742,,742,742,742,742,742,,742',
'742,742,,742,742,,742,742,,,,,,,,,,,,,,,,,,,,,742,,,742,,,742,,,,,,',
',,742,,,,,,,,742,,,,,742,742,742,742,742,742,,,,742,742,,,,,,,742,,',
'742,,,742,742,627,627,627,627,627,,,,627,627,,,,627,,627,627,627,627',
'627,627,627,,,,,,627,627,627,627,627,627,627,,,627,,,,,,627,627,,627',
'627,627,,627,627,627,627,627,,627,627,627,,627,627,,627,627,,,,,,,,',
',,,,,,,,,,,,627,,,627,,,627,,,,,627,,,,627,,,,,,,,627,,,,,627,627,627',
'627,627,627,,,,627,627,,,,,,,627,,,627,,,627,627,281,281,281,,281,,',
',281,281,,,,281,,281,281,281,281,281,281,281,,,,,,281,281,281,281,281',
'281,281,,,281,,,,,,,281,,,281,281,,281,281,281,281,281,,281,281,281',
',281,281,541,,541,541,541,,541,,,,,,,,,,,,,,,,,281,,,281,,,281,,,,,',
',,,541,,,,,,,,541,541,541,541,,281,281,281,281,281,281,,,,281,281,,',
',281,,,281,,,281,,,281,281,282,282,282,282,282,,,,282,282,,,,282,,282',
'282,282,282,282,282,282,,,,,,282,282,282,282,282,282,282,,,282,,,,,',
'282,282,,282,282,282,,282,282,282,282,282,,282,282,282,,282,282,,282',
'282,,,,,,,,,,,,,,,,,,,,,282,,,282,,,282,,,,,282,,,,282,,,,,,,,282,,',
',,282,282,282,282,282,282,,,,282,282,,,,,,,282,,,282,,,282,282,631,631',
'631,,631,,,,631,631,,,,631,,631,631,631,631,631,631,631,,,,,,631,631',
'631,631,631,631,631,,,631,,,,,,,631,,,631,631,,631,631,631,631,631,',
'631,631,631,,631,631,,631,631,,,,,,,,,,,,,,,,,,,,,631,,,631,,,631,,',
',,,,,,631,,,,,,,,631,,,,,631,631,631,631,631,631,,,,631,631,,,,,,,631',
',,631,,,631,631,638,638,638,638,638,,,,638,638,,,,638,,638,638,638,638',
'638,638,638,,,,,,638,638,638,638,638,638,638,,,638,,,,,,638,638,,638',
'638,638,,638,638,638,638,638,,638,638,638,,638,638,,638,638,,,,,,,,',
',,,,,,,,,,,,638,,,638,,,638,,,,,638,,,,638,,,,,,,,638,,,,,638,638,638',
'638,638,638,,,,638,638,,,,,,,638,,,638,,,638,638,359,359,359,,359,,',
',359,359,,,,359,,359,359,359,359,359,359,359,,,,,,359,359,359,359,359',
'359,359,,,359,,,,,,,359,,,359,359,,359,359,359,359,359,,359,359,359',
',359,359,577,,577,577,577,,577,,,,,,,,,,,,,,,,,359,,,359,,,359,,,,,',
',,,577,577,,,,,,,577,577,577,577,,359,359,359,359,359,359,,,,359,359',
',,,,,,359,,,359,,,359,359,644,644,644,,644,,,,644,644,,,,644,,644,644',
'644,644,644,644,644,,,,,,644,644,644,644,644,644,644,,,644,,,,,,,644',
',,644,644,,644,644,644,644,644,644,644,644,644,,644,644,,644,644,,,',
',,,,,,,,,,,,,,,,,644,,,644,,,644,,,,,644,,644,,644,,,,,,,,644,,,,,644',
'644,644,644,644,644,,,,644,644,,,,,,,644,,,644,,,644,644,650,650,650',
'650,650,,,,650,650,,,,650,,650,650,650,650,650,650,650,,,,,,650,650',
'650,650,650,650,650,,,650,,,,,,650,650,,650,650,650,,650,650,650,650',
'650,,650,650,650,,650,650,,650,650,,,,,,,,,,,,,,,,,,,,,650,,,650,,,650',
',,,,650,,,,650,,,,,,,,650,,,,,650,650,650,650,650,650,,,,650,650,,,',
',,,650,,,650,,,650,650,651,651,651,651,651,,,,651,651,,,,651,,651,651',
'651,651,651,651,651,,,,,,651,651,651,651,651,651,651,,,651,,,,,,651',
'651,,651,651,651,,651,651,651,651,651,,651,651,651,,651,651,,651,651',
',,,,,,,,,,,,,,,,,,,,651,,,651,,,651,,,,,651,,,,651,,,,,,,,651,,,,,651',
'651,651,651,651,651,,,,651,651,,,,,,,651,,,651,,,651,651,346,346,346',
',346,,,,346,346,,,,346,,346,346,346,346,346,346,346,,,,,,346,346,346',
'346,346,346,346,,,346,,,,,,,346,,,346,346,,346,346,346,346,346,,346',
'346,346,,346,346,,346,346,,,,,,,,,,,,,,,,,,,,,346,,,346,,,346,,,,,,',
',,346,,,,,,,,346,,,,,346,346,346,346,346,346,,,,346,346,,,,,,,346,,',
'346,,,346,346,732,732,732,,732,,,,732,732,,,,732,,732,732,732,732,732',
'732,732,,,,,,732,732,732,732,732,732,732,,,732,,,,,,,732,,,732,732,',
'732,732,732,732,732,,732,732,732,,732,732,,732,732,,,,,,,,,,,,,,,,,',
',,,732,,,732,,,732,,,,,,,,,732,,,,,,,,732,,,,,732,732,732,732,732,732',
',,,732,732,,,,,,,732,,,732,,,732,732,731,731,731,,731,,,,731,731,,,',
'731,,731,731,731,731,731,731,731,,,,,,731,731,731,731,731,731,731,,',
'731,,,,,,,731,,,731,731,,731,731,731,731,731,,731,731,731,,731,731,',
'731,731,,,,,,,,,,,,,,,,,,,,,731,,,731,,,731,,,,,,,,,731,,,,,,,,731,',
',,,731,731,731,731,731,731,,,,731,731,,,,,,,731,,,731,,,731,731,294',
'294,294,,294,,,,294,294,,,,294,,294,294,294,294,294,294,294,,,,,,294',
'294,294,294,294,294,294,,,294,,,,,,,294,,,294,294,,294,294,294,294,294',
',294,294,294,,294,294,,,,,,,,,,,,,,,,,,,,,,,,294,,,294,,,294,,,,,,,',
',,,,,,,,,,,,,,294,294,294,294,294,294,,,,294,294,,,,,,,294,,,294,,,294',
'294,345,345,345,,345,,,,345,345,,,,345,,345,345,345,345,345,345,345',
',,,,,345,345,345,345,345,345,345,,,345,,,,,,,345,,,345,345,,345,345',
'345,345,345,,345,345,345,,345,345,,345,345,,,,,,,,,,,,,,,,,,,,,345,',
',345,,,345,,,,,,,,,345,,,,,,,,345,,,,,345,345,345,345,345,345,,,,345',
'345,,,,,,,345,,,345,,,345,345,725,725,725,725,725,,,,725,725,,,,725',
',725,725,725,725,725,725,725,,,,,,725,725,725,725,725,725,725,,,725',
',,,,,725,725,,725,725,725,,725,725,725,725,725,,725,725,725,,725,725',
',725,725,,,,,,,,,,,,,,,,,,,,,725,,,725,,,725,,,,,725,,,,725,,,,,,,,725',
',,,,725,725,725,725,725,725,,,,725,725,,,,,,,725,,,725,,,725,725,655',
'655,655,,655,,,,655,655,,,,655,,655,655,655,655,655,655,655,,,,,,655',
'655,655,655,655,655,655,,,655,,,,,,,655,,,655,655,,655,655,655,655,655',
',655,655,655,,655,655,,,,,,,,,,,,,,,,,,,,,,,,655,,,655,,,655,,,,,,,',
',,,,,,,,,,,,,,655,655,655,655,655,655,,,,655,655,,,,,,,655,,,655,,,655',
'655,665,665,665,,665,,,,665,665,,,,665,,665,665,665,665,665,665,665',
',,,,,665,665,665,665,665,665,665,,,665,,,,,,,665,,,665,665,,665,665',
'665,665,665,,665,665,665,,665,665,,,,,,,,,,,,,,,,,,,,,,,,665,,,665,',
',665,,,,,,,,,,,,,,,,,,,,,,665,665,665,665,665,665,,,,665,665,,,,,,,665',
',,665,,,665,665,713,713,713,713,713,,,,713,713,,,,713,,713,713,713,713',
'713,713,713,,,,,,713,713,713,713,713,713,713,,,713,,,,,,713,713,,713',
'713,713,,713,713,713,713,713,,713,713,713,,713,713,,713,713,,,,,,,,',
',,,,,,,,,,,,713,,,713,,,713,,,,,713,,,,713,,,,,,,,713,,,,,713,713,713',
'713,713,713,,,,713,713,,,,,,,713,,,713,,,713,713,303,303,303,,303,,',
',303,303,,,,303,,303,303,303,303,303,303,303,,,,,,303,303,303,303,303',
'303,303,,,303,,,,,,,303,,,303,303,,303,303,303,303,303,,303,303,303',
',303,303,,303,303,,,,,,,,,,,,,,,,,,,,,303,,,303,303,,303,,,,,,,,,303',
',,,,,,,303,,,,,303,303,303,303,303,303,,,,303,303,,,,,,,303,,,303,,',
'303,303,305,305,305,305,305,,,,305,305,,,,305,,305,305,305,305,305,305',
'305,,,,,,305,305,305,305,305,305,305,,,305,,,,,,305,305,,305,305,305',
',305,305,305,305,305,,305,305,305,,305,305,,305,305,,,,,,,,,,,,,,,,',
',,,,305,,,305,,,305,,,,,305,,,,305,,,,,,,,305,,,,,305,305,305,305,305',
'305,,,,305,305,,,,,,,305,,,305,,,305,305,671,671,671,,671,,,,671,671',
',,,671,,671,671,671,671,671,671,671,,,,,,671,671,671,671,671,671,671',
',,671,,,,,,,671,,,671,671,,671,671,671,671,671,,671,671,671,,671,671',
',671,671,,,,,,,,,,,,,,,,,,,,,671,,,671,,,671,,,,,671,,,,671,,,,,,,,671',
',,,,671,671,671,671,671,671,,,,671,671,,,,,,,671,,,671,,,671,671,712',
'712,712,712,712,,,,712,712,,,,712,,712,712,712,712,712,712,712,,,,,',
'712,712,712,712,712,712,712,,,712,,,,,,712,712,,712,712,712,,712,712',
'712,712,712,,712,712,712,,712,712,,712,712,,,,,,,,,,,,,,,,,,,,,712,',
',712,,,712,,,,,712,,,,712,,,,,,,,712,,,,,712,712,712,712,712,712,,,',
'712,712,,,,,,,712,,,712,,,712,712,702,702,702,,702,,,,702,702,,,,702',
',702,702,702,702,702,702,702,,,,,,702,702,702,702,702,702,702,,,702',
',,,,,,702,,,702,702,,702,702,702,702,702,,702,702,702,,702,702,,702',
'702,,,,,,,,,,,,,,,,,,,,,702,,,702,,,702,,,,,702,,,,702,,,,,,,,702,,',
',,702,702,702,702,702,702,,,,702,702,,,,,,,702,,,702,,,702,702,708,708',
'708,708,708,,,,708,708,,,,708,,708,708,708,708,708,708,708,,,,,,708',
'708,708,708,708,708,708,,,708,,,,,,708,708,,708,708,708,,708,708,708',
'708,708,,708,708,708,,708,708,,708,708,,,,,,,,,,,,,,,,,,,,,708,,,708',
',,708,,,,,708,,,,708,,,,,,,,708,,,,,708,708,708,708,708,708,,,,708,708',
',,,,,,708,,,708,,,708,708,38,38,38,,38,,,,38,38,,,,38,,38,38,38,38,38',
'38,38,,,,,,38,38,38,38,38,38,38,,,38,,,,,,,38,,,38,38,,38,38,38,38,38',
',38,38,38,,38,38,,38,38,,,,,,,,,,,,,,,,,,,,,38,,,38,,,38,,,,,,,,,38',
',,,,,,,38,,,,425,38,38,38,38,38,38,425,425,425,38,38,,425,425,,425,',
'38,,,38,,,38,38,,,,,,,,,,,425,425,,425,425,425,425,425,,,,,,,,,,,,,',
',,,,,,,,,,425,425,425,425,425,425,425,425,425,425,425,425,425,425,,',
'425,425,425,,425,,,,425,,,,,,,425,,425,,425,425,425,425,425,425,425',
',425,,425,,,,,,,,,,,,,425,425,,425,423,425,,,425,,425,423,423,423,,',
',423,423,,423,,,,,,,,,423,,,,,,,,,,,423,423,,423,423,423,423,423,,,',
',,,,,,,,,,,,,,,,,,,,423,423,423,423,423,423,423,423,423,423,423,423',
'423,423,,,423,423,423,,423,,,,423,,,,,,,423,,423,,423,423,423,423,423',
'423,423,,423,423,423,,,,,,,,,,,,,423,423,,423,618,423,,,423,,423,618',
'618,618,,,618,618,618,,618,,,,,,,,,618,618,618,,,,,,,,,618,618,,618',
'618,618,618,618,,,,,,,,,,,,,,,,,,,,,,,,618,618,618,618,618,618,618,618',
'618,618,618,618,618,618,,,618,618,618,,618,618,,,618,,,618,,618,,618',
',618,,618,618,618,618,618,618,618,,618,618,618,,,,,,,,,,,,,618,618,618',
'618,619,618,,,618,,618,619,619,619,,,619,619,619,,619,,,,,,,,,,619,619',
',,,,,,,,619,619,,619,619,619,619,619,,,,,,,,,,,,,,,,,,,,,,,,619,619',
'619,619,619,619,619,619,619,619,619,619,619,619,,,619,619,619,,619,619',
',,619,,,619,,619,,619,,619,,619,619,619,619,619,619,619,,619,,619,,',
',,,,,,,,,,619,619,619,619,419,619,,,619,,619,419,419,419,,,419,419,419',
',419,,,,,,,,,419,419,419,,,,,,,,,419,419,,419,419,419,419,419,,,,,,',
',,,,,,,,,,,,,,,,,419,419,419,419,419,419,419,419,419,419,419,419,419',
'419,,,419,419,419,,,419,,419,419,,,419,,419,,419,,419,,419,419,419,419',
'419,419,419,,419,419,419,,,,,,,,,,,,,419,419,419,419,50,419,,,419,,',
'50,50,50,,,50,50,50,,50,,,,,,,,,,50,50,50,,,,,,,,50,50,,50,50,50,50',
'50,,,,,,,,,,,,,,,,,,,,,,,,50,50,50,50,50,50,50,50,50,50,50,50,50,50',
',,50,50,50,,,50,,,50,,,50,,50,,50,,50,,50,50,50,50,50,50,50,,50,,50',
',,,,,,,,,,,,50,50,50,50,27,50,,50,50,,,27,27,27,,,27,27,27,,27,,,,,',
',,,27,27,27,,,,,,,,,27,27,,27,27,27,27,27,,,,,,,,,,,,,,,,,,,,,,,,27',
'27,27,27,27,27,27,27,27,27,27,27,27,27,,,27,27,27,,,27,,27,27,,,27,',
'27,,27,,27,,27,27,27,27,27,27,27,,27,27,27,,,,,,,,,,,,,27,27,27,27,28',
'27,,,27,,,28,28,28,,,28,28,28,,28,,,,,,,,,,28,28,,,,,,,,,28,28,,28,28',
'28,28,28,,,,,,,,,,,,,,,,,,,,,,,,28,28,28,28,28,28,28,28,28,28,28,28',
'28,28,,,28,28,28,,,28,,28,28,,,28,,28,,28,,28,,28,28,28,28,28,28,28',
',28,,28,,,,,,,,,,,,,28,28,28,28,480,28,,,28,,,480,480,480,,,480,480',
'480,,480,,,,,,,,,,480,,,,,,,,,,480,480,,480,480,480,480,480,,,,,,,,',
',,,,477,,,,,,,477,477,477,,,477,477,477,,477,,,,,,480,,,,477,,,480,',
',,,480,480,477,477,,477,477,477,477,477,,,,,,,,,,,,,480,,,,,,,,,,,,',
'480,,480,,,480,,,,477,,,,,,,477,,,,,477,477,,,,,,,,,,,,,,,,,,,,,477',
',,,,,,,,,,,,477,,477,,,477,403,403,403,403,403,403,403,403,403,403,403',
'403,403,403,403,403,403,403,403,403,403,403,403,403,,,,403,403,403,403',
'403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403',
',403,403,,,403,,,,,,,,,403,403,,403,403,403,403,403,403,403,,,403,403',
',,,403,403,403,403,,,,,,,,,,,,,403,403,,403,403,403,403,403,403,403',
'403,403,403,403,,,403,403,,,,,,,,,,403,399,399,399,399,399,399,399,399',
'399,399,399,399,399,399,399,399,399,399,399,399,399,399,399,399,,,,399',
'399,399,399,399,399,399,399,399,399,399,399,399,399,399,399,399,399',
'399,399,399,,399,399,,,399,,,,,,,,,399,399,,399,399,399,399,399,399',
'399,,,399,399,,,,399,399,399,399,,,,,,,,,,,,,399,399,,399,399,399,399',
'399,399,399,399,399,399,399,,,399,399,,,,,,,,,,399,7,7,7,7,7,7,7,7,7',
'7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,,,,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7',
'7,7,7,,7,7,7,,7,,,,,,,,,7,7,,7,7,7,7,7,7,7,,,7,7,,,,7,7,7,7,,,,,,,,',
',,,,7,7,,7,7,7,7,7,7,7,7,7,7,7,,,7,7,,,,,,,,,,7,8,8,8,8,8,8,8,8,8,8',
'8,8,8,8,8,8,8,8,8,8,8,8,8,8,,,,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8',
'8,8,,8,8,,,8,,,,,,,,,8,8,,8,8,8,8,8,8,8,,,8,8,,,,8,8,8,8,,,,,,,,,,,',
',8,8,,8,8,8,8,8,8,8,8,8,8,8,,,8,8,,,,,,,,,,8,191,191,191,191,191,191',
'191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191',
'191,,,,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191',
'191,191,191,191,191,,191,191,191,191,191,,191,,,,,,,191,191,,191,191',
'191,191,191,191,191,,,191,191,,,,191,191,191,191,,,,,,,,,,,,,191,191',
',191,191,191,191,191,191,191,191,191,191,191,,,191,65,65,65,65,65,65',
'65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,,,,65,65,65,65',
'65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,,65,65,65,65,65,',
'65,,,,,,,65,65,,65,65,65,65,65,65,65,,,65,65,,,,65,65,65,65,,,,,,65',
',,,,,,65,65,,65,65,65,65,65,65,65,65,65,65,65,,,65,79,79,79,79,79,79',
'79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,,,,79,79,79,79',
'79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,,79,79,79,79,79,',
'79,,,,,,,79,79,,79,79,79,79,79,79,79,,,79,79,,,,79,79,79,79,,,,,,,,',
',,,,79,79,,79,79,79,79,79,79,79,79,79,79,79,,,79,722,722,722,722,722',
'722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722',
'722,722,,,,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722',
'722,722,722,722,722,722,,722,722,,,722,,,,,,,,,722,722,,722,722,722',
'722,722,722,722,,,722,722,,,,722,722,722,722,,,,,,,,,,,,,722,722,,722',
'722,722,722,722,722,722,722,722,722,722,889,889,722,,889,,,,,,,,,889',
'889,,889,889,889,889,889,889,889,,,889,889,,,,889,889,889,889,,,,,,',
',,,,,,889,889,,889,889,889,889,889,889,889,889,889,889,889,262,262,889',
',262,,,,,,,,,262,262,,262,262,262,262,262,262,262,,,262,262,,,,262,262',
'262,262,,,,,,,,,,,,,262,262,,262,262,262,262,262,262,262,262,262,262',
'262,517,517,262,,517,,,,,,,,,517,517,,517,517,517,517,517,517,517,,',
'517,517,,,,517,517,517,517,,,,,,,,,,,,,517,517,,517,517,517,517,517',
'517,517,517,517,517,517,261,261,517,,261,,,,,,,,,261,261,,261,261,261',
'261,261,261,261,,,261,261,,,,261,261,261,261,,,,,,,,,,,,,261,261,,261',
'261,261,261,261,261,261,261,261,261,261,642,642,261,,642,,,,,,,,,642',
'642,,642,642,642,642,642,642,642,,,642,642,,,,642,642,642,642,,,,,,',
',,,,,,642,642,,642,642,642,642,642,642,642,642,642,642,642,570,570,642',
',570,,,,,,,,,570,570,,570,570,570,570,570,570,570,,,570,570,,,,570,570',
'570,570,,,,,,570,,,,,,,570,570,,570,570,570,570,570,570,570,570,570',
'570,570,506,506,570,,506,,,,,,,,,506,506,,506,506,506,506,506,506,506',
',,506,506,,,,506,506,506,506,,,,,,,,,,,,,506,506,,506,506,506,506,506',
'506,506,506,506,506,506,778,778,506,,778,,,,,,,,,778,778,,778,778,778',
'778,778,778,778,,,778,778,,,,778,778,778,778,,,,,,,,,,,,,778,778,,778',
'778,778,778,778,778,778,778,778,778,778,505,505,778,,505,,,,,,,,,505',
'505,,505,505,505,505,505,505,505,,,505,505,,,,505,505,505,505,,,,,,505',
',,,,,,505,505,,505,505,505,505,505,505,505,505,505,505,505,888,888,505',
',888,,,,,,,,,888,888,,888,888,888,888,888,888,888,,,888,888,,,,888,888',
'888,888,,,,,,888,,,,,,,888,888,,888,888,888,888,888,888,888,888,888',
'888,888,200,200,888,,200,,,,,,,,,200,200,,200,200,200,200,200,200,200',
',,200,200,,,,200,200,200,200,,,,,,,,,,,,,200,200,,200,200,200,200,200',
'200,200,200,200,200,200,516,516,200,,516,,,,,,,,,516,516,,516,516,516',
'516,516,516,516,,,516,516,,,,516,516,516,516,,,,,,516,,,,,,,516,516',
',516,516,516,516,516,516,516,516,516,516,516,199,199,516,,199,,,,,,',
',,199,199,,199,199,199,199,199,199,199,,,199,199,,,,199,199,199,199',
',,,,,199,,,,,,,199,199,,199,199,199,199,199,199,199,199,199,199,199',
'568,568,199,,568,,,,,,,,,568,568,,568,568,568,568,568,568,568,,,568',
'568,,,,568,568,568,568,,,,,,,,,,,,,568,568,,568,568,568,568,568,568',
'568,568,568,568,568,643,643,568,,643,,,,,,,,,643,643,,643,643,643,643',
'643,643,643,,,643,643,,,,643,643,643,643,,,,,,,,,,,,,643,643,,643,643',
'643,643,643,643,643,643,643,643,643,433,433,643,,433,,,,,,,,,433,433',
',433,433,433,433,433,433,433,,,433,433,,,,433,433,433,433,,,,,,433,',
',,,,,433,433,,433,433,433,433,433,433,433,433,433,433,433,434,434,433',
',434,,,,,,,,,434,434,,434,434,434,434,434,434,434,,,434,434,,,,434,434',
'434,434,,,,,,,,,,,,,434,434,,434,434,434,434,434,434,434,434,434,434',
'434,,,434' ]
        racc_action_check = arr = ::Array.new(24525, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_action_pointer = [
    -2,  1084,   nil,   249,   nil,   805,   967, 22809, 22932,   942,
   917,   916,   963,   233,   633,   125,   nil,  1916,  2053,  2327,
  1011,   nil,  2464,  2601,  2738,   298,   150, 22120, 22249,   nil,
  3423,  3560,  3697,   nil,   892,   496,   952,   374, 21233,  4519,
  4656,   858,   182,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
 21991,   nil,  5204,  5341,  5478,   -15,  3709,  5889,  6026,   nil,
   nil,  6163,  6300,  6437,   nil, 23167,   nil,   nil,   nil,   nil,
   nil,   111,   nil,   nil,   nil,   nil,   nil,   841,   836, 23279,
   nil,   nil,   nil,  7259,   nil,   nil,  7396,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   964,   nil,  7670,   nil,
   nil,   nil,  7807,  7944,  8081,  8218,  8355,  8492,   nil,   255,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil, 23055,   824,   nil,  9040,  9177,  9314,  9451,  9588, 24171,
 24051,  9999, 10136, 10273,   nil,   234,   -53,   892,   193,   785,
   831, 11232, 11369,   nil,   nil, 11506,   824, 11780, 11917, 12054,
 12191, 12328, 12465, 12602, 12739, 12876, 13013, 13150, 13287, 13424,
 13561, 13698, 13835, 13972, 14109, 14246, 14383, 14520, 14657, 14794,
 14931, 15068, 15205,   nil,   nil,   nil,  2053,   nil,   782,   776,
   nil, 15753,   809, 16027,   nil,   nil,   nil,   nil, 16164,   nil,
   nil, 23631, 23511,   788, 16712, 16849,   nil,   nil,   nil,   nil,
   nil,   nil,   nil, 16986,   429,   668,   719, 17534,   714,   713,
   675, 18082, 18219,   284,   285,   741,   300,   705,   669,   122,
   nil,   690,   572,   nil, 19589,   nil,   594,   703,   682,   315,
   nil,   628,   nil, 20411,   nil, 20548,    66,   nil,   566,  -102,
   309,   573,   554,    23,   470,   nil,   nil,    -4,  6997,   nil,
   nil,   nil,   344,   269,   nil,   270,   243,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,  2753,   nil,   nil,   nil,   247,   nil,
   nil,   235,   302,    92,     0, 19726, 19178,   320,   366,   -61,
   107,   -14,   148,   nil,   290,   nil,    79,   nil,   nil, 18630,
   466,    -6,   299,   444,   475,   287,   368,   453,   nil,   456,
   nil, 16575,   nil,   221,   nil,   135,   nil,   225,   484,   -54,
   nil,   557,   -21,   nil,   142,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   578, 22686,
   nil,   nil,   nil, 22563,   584,   nil,   nil,   409,   nil, 10958,
   569,   nil,   645,   nil,   nil,  1368,   721,   368,   181, 21862,
   nil,   nil,   nil, 21475,   726, 21346,   nil,  9725,  8766,   nil,
   957,   nil,   nil, 24351, 24411,  7533,   262,  7122,  6848,  6574,
   107,   nil,  4793,  3971,   813,   710,   838,   840,   861,   874,
  3690,  3827,  2761,  3423,  3286,  3012,  3149,  5204,  4108,  4245,
  4382,  5067,  4519,   895,   758,  4656,  4930,   819,   -38,   nil,
   546,   nil,   409,   nil,   272,   nil,   nil, 22434,   nil,   nil,
 22378,   -17,   nil,   965,   960,   693,   954,  1052,   nil,   nil,
   683,   -27,   -10,   956,   nil,   nil,   135,   954,   914,   nil,
   nil,   911,   820,   944,   957, 23931, 23811,   269,   927,   nil,
   nil,   876,   nil,  1094,  1231,  1505, 24111, 23571,  2190,  2190,
   996,   973,   890,   nil,   nil,  2875,   nil,   nil,  3012,   nil,
   nil,   nil,   nil,  3149,  3286,   865,   nil,   576,   nil,   nil,
  3834, 18094,   nil,   558,   nil,   nil,   859,   nil,  2861,   nil,
   814,  1080,   nil,   nil,  3971,   928,   nil,   nil,  4930,    47,
   -19,   851,   855,  5067,   nil,   nil,   199,   nil, 24231,  5615,
 23751,   nil,   nil,  9862,   105, 10410,   nil, 18642,   nil,   nil,
   nil,    38,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   -35,   nil,   nil,   nil,   650,   nil,   nil,   nil,
   nil,   nil, 10547,   637, 10821,   595, 15342, 15616,   592,   nil,
   nil,   nil, 16301,   563,   nil, 16438,   144,   213, 21604, 21733,
   502,   546,   nil, 17260,   nil,  3572,   nil, 17945,   376,   nil,
   403, 18356,   nil,   nil,   nil,   nil,   nil,   nil, 18493,   nil,
   264,   129, 23691, 24291, 18767,   683,   -88,   nil,   nil,   893,
 18904, 19041,   nil,   531,   -50, 20000,   101,   nil,   149,   110,
    14,   232,    -2,   409,   302, 20137,  1916,   349,   392,   123,
   461, 20685,   nil,   nil,   297,   394,   521,   nil,   nil,   401,
   nil,   427,   316,   507,   454,   462,   nil,   nil,   501,  2724,
   nil,   623,   nil,   595,   nil,   nil,   nil,   nil,   nil,   603,
   nil,   619, 20959,  4382,   266,   nil,   578,   577, 21096,   326,
   nil,   210, 20822, 20274,  6312,   375,   591,   605,   615,   nil,
   611,   nil, 23391,   673,   775, 19863,   nil,   nil,   nil,  2464,
   648, 19452, 19315,   nil,  2601,   nil,  1779,   nil,   nil,  1231,
   nil,  1094, 17808, 17671, 17397,   -52,  1505,   nil,   711,   818,
   nil,   nil,   724,   nil,   nil,   767,   769,   614,   839, 17123,
   nil,   758,   867,   755,   274,   nil,   nil,   877,   nil, 15890,
   772,   813,   nil,   nil,   nil,   nil,   nil,   nil, 23871,   nil,
   488,   nil,   nil,   nil,   nil,  1134,   899,   nil, 15479,   904,
 11643, 11095,   nil,   nil,    88,    51,   nil,   921,   nil,   nil,
   922,   923,   808,   nil,  3846,   nil,   542,   nil,   nil,   421,
 10684,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   836,   821,
   nil,  1642,  8903,   nil,   nil,   nil,   862,   827,   nil,   nil,
   nil,  8629,   nil,   nil,    -7,  6985,   nil,   876,   841,   nil,
   nil,    80,   nil,   962,   964,  6711,  5752,   nil,   nil,  4793,
   nil,   nil,   -77,   857,   866,   nil,   868,   866,   nil,   nil,
  6449,   nil,   nil,   nil,  4245,   nil,  4108,   163,   -24,   968,
   272,   nil,   nil,  2327,   nil,   nil,   nil,   283,  1779,  1035,
   nil,   627,   nil,   nil,   nil,  1642,  1041,  1368, 23991, 23451,
   275,   257,   nil,   nil,   nil,  1059,   nil,   941,  1061,   nil,
   983,   112,    98,    81,   412,   nil,   nil,   nil,   nil,   336 ]

racc_action_default = [
    -3,  -524,    -1,  -512,    -4,    -6,  -524,  -524,  -524,  -524,
  -524,  -524,  -524,  -524,  -268,   -36,   -37,  -524,  -524,   -42,
   -44,   -45,  -279,  -317,  -318,   -49,  -246,  -246,  -246,   -61,
   -10,   -65,   -72,   -74,  -524,  -443,  -524,  -524,  -524,  -524,
  -524,  -514,  -226,  -261,  -262,  -263,  -264,  -265,  -266,  -267,
  -502,  -270,  -524,  -523,  -494,  -287,  -523,  -524,  -524,  -292,
  -295,  -512,  -524,  -524,  -309,  -524,  -319,  -320,  -388,  -389,
  -390,  -391,  -392,  -523,  -395,  -523,  -523,  -523,  -523,  -523,
  -422,  -428,  -429,  -432,  -433,  -434,  -435,  -436,  -437,  -438,
  -439,  -440,  -441,  -442,  -445,  -446,  -524,    -2,  -513,  -519,
  -520,  -521,  -524,  -524,  -524,  -524,  -524,    -3,   -13,  -524,
  -100,  -101,  -102,  -103,  -104,  -105,  -106,  -109,  -110,  -111,
  -112,  -113,  -114,  -115,  -116,  -117,  -118,  -119,  -120,  -121,
  -122,  -123,  -124,  -125,  -126,  -127,  -128,  -129,  -130,  -131,
  -132,  -133,  -134,  -135,  -136,  -137,  -138,  -139,  -140,  -141,
  -142,  -143,  -144,  -145,  -146,  -147,  -148,  -149,  -150,  -151,
  -152,  -153,  -154,  -155,  -156,  -157,  -158,  -159,  -160,  -161,
  -162,  -163,  -164,  -165,  -166,  -167,  -168,  -169,  -170,  -171,
  -172,  -173,  -174,  -175,  -176,  -177,  -178,  -179,  -180,  -181,
  -182,  -524,   -18,  -107,   -10,  -524,  -524,  -524,  -523,  -524,
  -524,  -524,  -524,  -524,   -40,  -524,  -443,  -524,  -268,  -524,
  -524,   -10,  -524,   -41,  -218,  -524,  -524,  -524,  -524,  -524,
  -524,  -524,  -524,  -524,  -524,  -524,  -524,  -524,  -524,  -524,
  -524,  -524,  -524,  -524,  -524,  -524,  -524,  -524,  -524,  -524,
  -524,  -524,  -524,  -359,  -361,   -46,  -227,  -239,  -253,  -253,
  -243,  -524,  -254,  -524,  -279,  -317,  -318,  -496,  -524,   -47,
   -48,  -524,  -524,   -53,  -523,  -524,  -286,  -364,  -371,  -373,
   -59,  -369,   -60,  -524,  -512,   -11,   -61,   -10,  -524,  -524,
   -66,   -69,   -10,   -80,  -524,  -524,   -87,  -282,  -514,  -524,
  -321,  -370,  -524,   -71,  -524,   -76,  -275,  -430,  -431,  -524,
  -203,  -204,  -219,  -524,  -515,   -10,  -514,  -228,  -514,  -516,
  -516,  -524,  -524,  -516,  -524,  -288,  -289,  -524,  -524,  -332,
  -333,  -340,  -523,  -462,  -347,  -523,  -523,  -358,  -461,  -463,
  -464,  -465,  -466,  -467,  -524,  -478,  -483,  -484,  -486,  -487,
  -488,  -524,   -43,  -524,  -524,  -524,  -524,  -512,  -524,  -513,
  -524,   -96,  -524,   -98,  -524,  -268,  -524,  -306,  -443,  -524,
  -100,  -101,  -138,  -139,  -155,  -160,  -167,  -170,  -312,  -524,
  -492,  -524,  -393,  -524,  -408,  -524,  -410,  -524,  -524,  -524,
  -400,  -524,  -524,  -406,  -524,  -421,  -423,  -424,  -425,  -426,
   910,    -5,  -522,   -19,   -20,   -21,   -22,   -23,  -524,  -524,
   -15,   -16,   -17,  -524,  -524,   -25,   -33,  -183,  -254,  -524,
  -524,   -26,   -34,   -35,   -27,  -185,  -524,  -503,  -504,  -246,
  -366,  -505,  -506,  -503,  -246,  -504,  -368,  -508,  -509,   -32,
  -192,   -38,   -39,  -524,  -524,  -523,  -275,  -524,  -524,  -524,
  -524,  -285,  -193,  -194,  -195,  -196,  -197,  -198,  -199,  -200,
  -205,  -206,  -207,  -208,  -209,  -210,  -211,  -212,  -213,  -214,
  -215,  -216,  -217,  -220,  -221,  -222,  -223,  -524,  -523,  -240,
  -524,  -241,  -524,  -251,  -524,  -255,  -499,  -246,  -503,  -504,
  -246,  -523,   -54,  -524,  -514,  -514,  -253,  -239,  -247,  -248,
  -524,  -523,  -523,  -524,  -281,    -9,  -513,  -524,   -62,  -273,
   -77,   -67,  -524,  -524,  -523,  -524,  -524,   -86,  -524,  -430,
  -431,   -73,   -78,  -524,  -524,  -524,  -524,  -524,  -224,  -524,
  -380,  -524,  -524,  -229,  -230,  -518,  -517,  -232,  -518,  -277,
  -278,  -495,  -329,   -10,   -10,  -524,  -331,  -524,  -349,  -356,
  -524,  -353,  -354,  -524,  -357,  -462,  -524,  -469,  -524,  -471,
  -473,  -477,  -485,  -489,   -10,  -322,  -323,  -324,   -10,  -524,
  -524,  -524,  -524,   -10,  -375,  -301,   -96,   -97,  -524,  -523,
  -524,  -304,  -447,  -524,  -524,  -524,  -310,  -460,  -314,  -510,
  -511,  -514,  -394,  -409,  -412,  -413,  -415,  -396,  -411,  -397,
  -398,  -399,  -524,  -402,  -404,  -405,  -524,  -427,    -7,   -14,
  -108,   -24,  -524,  -260,  -524,  -276,  -524,  -524,   -55,  -237,
  -238,  -365,  -524,   -57,  -367,  -524,  -503,  -504,  -503,  -504,
  -524,  -183,  -284,  -524,  -343,  -524,  -345,   -10,  -253,  -252,
  -256,  -524,  -497,  -498,   -50,  -362,   -51,  -363,   -10,  -233,
  -524,  -524,  -524,  -524,  -524,   -42,  -524,  -245,  -249,  -524,
   -10,   -10,  -280,   -12,   -62,  -524,   -70,   -75,  -524,  -503,
  -504,  -523,  -507,   -85,  -524,  -524,  -191,  -201,  -202,  -524,
  -523,  -523,  -271,  -272,  -516,  -524,  -524,  -330,  -341,  -524,
  -348,  -523,  -342,  -524,  -523,  -523,  -479,  -468,  -524,  -524,
  -476,  -523,  -325,  -523,  -293,  -326,  -327,  -328,  -296,  -524,
  -299,  -524,  -524,  -524,   -96,   -99,  -507,  -524,   -10,  -524,
  -449,  -524,   -10,   -10,  -460,  -524,  -491,  -491,  -491,  -459,
  -462,  -481,  -524,  -524,  -524,   -10,  -401,  -403,  -407,  -184,
  -258,  -524,  -524,   -29,  -187,   -30,  -188,   -56,   -31,  -189,
   -58,  -190,  -524,  -524,  -524,  -276,  -225,  -344,  -524,  -524,
  -242,  -257,  -524,  -234,  -235,  -523,  -523,  -514,  -524,  -524,
  -250,  -524,  -524,   -68,   -81,   -79,  -283,  -523,  -338,   -10,
  -381,  -523,  -382,  -383,  -231,  -334,  -335,  -355,  -524,  -275,
  -524,  -351,  -352,  -470,  -472,  -475,  -524,  -336,  -524,  -524,
   -10,   -10,  -298,  -300,  -524,  -524,  -276,  -524,  -448,  -307,
  -524,  -524,  -514,  -451,  -524,  -455,  -524,  -457,  -458,  -524,
  -524,  -315,  -493,  -414,  -417,  -418,  -419,  -420,  -524,  -259,
   -28,  -186,  -524,  -346,  -360,   -52,  -524,  -253,  -372,  -374,
    -8,   -10,  -387,  -339,  -524,  -524,  -385,  -274,  -523,  -474,
  -290,  -524,  -291,  -524,  -524,  -524,   -10,  -302,  -305,   -10,
  -311,  -313,  -524,  -491,  -491,  -490,  -491,  -524,  -482,  -480,
  -460,  -416,  -236,  -244,  -524,  -386,   -10,   -88,  -524,  -524,
   -95,  -384,  -350,   -10,  -294,  -297,  -256,  -523,   -10,  -524,
  -450,  -524,  -453,  -454,  -456,   -10,  -380,  -523,  -524,  -524,
   -94,  -523,  -376,  -377,  -378,  -524,  -308,  -491,  -524,  -379,
  -524,  -503,  -504,  -507,   -93,  -337,  -303,  -452,  -316,   -89 ]

clist = [
'13,303,562,670,247,247,247,290,290,471,311,310,313,521,319,485,10,205',
'205,554,558,327,205,205,205,511,12,406,413,97,13,284,284,108,193,308',
'368,539,290,290,542,544,116,116,482,356,10,280,98,629,386,629,205,205',
'713,686,12,205,205,276,278,205,284,354,649,632,5,113,113,647,716,293',
'343,344,524,527,347,635,531,567,637,263,270,272,678,547,786,348,694',
'698,583,858,2,375,377,345,593,384,13,790,346,213,205,205,205,205,13',
'13,681,546,791,703,685,101,10,719,878,393,394,395,396,632,10,10,12,113',
'767,708,35,575,849,359,12,12,805,807,808,712,577,113,248,248,248,204',
'627,722,860,317,718,789,532,571,684,316,315,416,310,638,35,283,283,312',
'386,370,5,488,858,650,651,305,468,101,397,5,491,492,892,702,306,771',
'308,834,372,342,342,373,369,342,379,592,283,358,578,358,13,205,205,205',
'205,398,382,205,205,205,245,259,260,716,813,724,10,13,205,725,802,699',
'853,399,350,192,12,830,784,629,391,1,35,10,342,342,342,342,,656,35,35',
',12,,,,,,,,,487,247,508,,,113,719,,,247,,290,,,428,,,,205,205,522,,523',
',290,882,883,205,884,,535,13,405,411,414,284,13,327,429,718,905,,,,',
',,10,284,705,,,10,547,495,,690,12,,13,276,497,12,727,512,276,503,410',
'410,907,,,686,496,501,10,35,688,847,,,678,431,432,,12,,893,,290,,885',
'440,35,,576,855,,855,205,205,855,,,,838,,716,,635,637,,,354,559,560',
',,,,,,,899,,205,,561,,854,,856,,419,424,,486,248,101,,763,,750,737,',
'248,620,310,740,757,777,,719,781,782,,,,,35,,,,283,35,,,,,,797,308,',
'855,800,801,283,,,599,,,628,600,,718,,35,116,205,,,116,774,547,477,480',
'629,640,641,484,489,,,,,897,,,493,,101,,113,,658,310,113,,,572,,,,846',
'342,342,,608,279,,,290,613,,,,674,,,308,358,,,205,,,14,428,,13,581,',
',,,284,772,205,,,,,,866,,10,,,,290,873,512,205,,,12,14,286,286,707,310',
',,,894,634,13,13,636,839,,,,682,723,,,,,,,,10,10,308,,872,13,286,355',
'879,13,12,12,,653,13,,,428,,,205,10,,,205,10,205,,428,,10,12,,,748,12',
',,863,709,12,327,14,,898,,,,,,14,14,,628,,,,205,205,,,,,205,419,424',
',306,,,,,,,,35,,758,13,428,,283,290,,,,,,,13,404,,290,,10,205,669,,267',
'271,,13,13,,12,10,284,279,,,,,35,35,,12,284,10,10,358,695,695,512,,',
',,12,12,,,,765,35,,710,661,35,14,,733,735,35,,811,,738,661,,,342,,711',
',205,14,,,,13,,,,13,13,,,,826,795,,,,279,307,10,13,320,279,10,10,,,205',
',12,,,,12,12,,10,,374,,376,376,380,383,376,661,12,,,,35,,,,,,,852,,',
',35,,,13,14,,,,286,14,,,35,35,,,113,283,,10,,286,205,410,13,13,,283',
',12,,,14,,,,,841,,,10,10,,,,290,,,,820,12,12,,798,794,799,755,756,,803',
',,,342,,13,,,,868,35,,428,,35,35,,,900,310,13,10,,13,,871,355,35,,,',
'12,,,,,10,,,10,13,,307,308,,,12,13,,12,,827,13,,,,10,,,13,,205,,10,',
',12,,10,,,35,,12,,10,,,12,695,,,,,267,12,271,,342,,,,35,35,,,,,,,,,',
',,,,,483,,,,,,,,,,,,,,,428,,,,,,,,,,35,,,,867,,,,,,,,,,,35,,214,35,675',
'676,246,246,246,,,,,,,14,,,,,35,286,300,301,302,691,,35,,693,,,35,,701',
',,246,246,35,,,,,,,,,,,,,14,14,,,,,,355,,,,,,,610,,,,,614,,14,,,,14',
',,,,14,,,,,,,,,,,,661,,,,749,,,,,,,,,,,752,,,,,,609,,,,,,761,762,,610',
',,610,,,,307,,,314,,,,,,,,,,,,14,,,,,,,,,,,14,,,,,,,624,,,,,14,14,,',
'609,286,,609,624,,407,246,415,246,,286,430,,624,624,,,,,,,,818,,,214',
'307,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457',
'458,459,460,461,462,463,464,465,466,467,14,,,,14,14,,,246,,246,,,833',
',246,817,14,,,,246,246,,,,,,,,246,,,,843,844,,,307,,,,,,,,,,408,412',
',,,,,,,,,,518,14,,,,,,,,,,,,,,865,,,,,,610,14,14,614,,,,,,877,,,,,,',
',,,,,,,473,,475,,,,886,476,,,,,,891,,,,,895,14,,,,870,,,609,,,,,,,,14',
'768,773,14,,,,,,,,,,,,,,,,,14,,768,,768,,,14,246,,,,14,,,,,610,610,14',
',,,,,,,,,,,,,,246,,430,621,415,,,,,,,,,,,,,,,,,,,,,,,,,,,,609,609,,246',
',246,,246,,,,,832,,,,836,,,,,289,289,645,,,,,289,289,289,,,,,,,246,603',
',,,,,289,,666,667,668,,,,289,289,,,,,246,,,246,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,630,,314,246,633,,,,,,,,,,,,,,,,646,,,768,,,,,,,,,,307',
',,729,768,246,,734,736,,,,,739,,,741,,,,,,630,,746,314,,,,,,,246,,,',
',,,,,,,,,246,,,,,,,,,,,,,,,,,,,,,,,,,,,246,289,,289,289,289,289,289',
'289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289',
'289,289,289,289,730,,246,,,,,,289,,289,,,,,289,,,,,,,,,,,,751,,,,246',
'821,,,,,,289,,630,,734,736,739,,,,,,,289,,,,,,,,246,289,,,,,,,770,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,408,,,,,,,,,,,,246,,,,,,289,,,,,,821,,,',
',819,,,,,,,,,,,,,,,,,,246,,,,,,,,,,408,,,,,,,,,246,,289,,,,,,,,,,,,',
',,,,,,,,246,,,,,,,289,289,289,,,,,,,,,,859,,,,,,,,,,,,,,,,,,,,,289,',
'289,,289,,,,,,,,,,876,,,,,,,,,,,,,,,,,,289,876,,,,,,,,,,289,289,289',
',,,,,,,,,289,,,289,,,,,,,,,,,,289,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,289,,289,,,,,,,,,,,289,,,,,,,,289,,,,,,,',
'289,,,,,,,,,,,,,,,,,,,,,,,,289,,,,,,,,,,289,,,,,,289,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,289,,,,,,,,,,,,,,,,,,,,,,,,,,,,,289,,,,,,,,,,,289,289',
'289,,,,,,,,,,,,,,,289,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,289,,,,,,,,,,,,289,,,,,,,,,,,,,289,,,,,,,,,,289,,,,,,,,,,,,,,,,',
',,289' ]
        racc_goto_table = arr = ::Array.new(2280, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'21,51,78,10,29,29,29,52,52,59,22,56,56,8,101,32,17,21,21,75,75,104,21',
'21,21,43,20,24,24,4,21,21,21,14,14,29,47,106,52,52,106,106,50,50,35',
'46,17,41,6,60,47,60,21,21,81,137,20,21,21,38,39,21,21,21,61,144,7,48',
'48,60,107,42,16,16,55,55,16,58,55,45,58,34,34,34,103,135,76,4,77,77',
'126,141,2,123,123,85,126,123,21,86,87,18,21,21,21,21,21,21,108,138,88',
'89,108,80,17,105,90,16,16,16,16,144,17,17,20,48,11,91,44,92,93,94,20',
'20,134,134,134,95,96,48,54,54,54,26,36,97,98,99,108,11,100,79,102,74',
'72,22,56,36,44,44,44,71,47,70,7,62,141,36,36,84,110,80,7,7,112,113,114',
'115,26,116,29,117,121,26,26,122,82,26,124,125,44,44,83,44,21,21,21,21',
'21,2,127,21,21,21,31,31,31,107,128,129,17,21,21,130,132,78,133,27,19',
'15,20,12,139,60,5,1,44,17,26,26,26,26,,43,44,44,,20,,,,,,,,,29,29,51',
',,48,105,,,29,,52,,,48,,,,21,21,51,,51,,52,134,134,21,134,,101,21,18',
'18,18,21,21,104,18,108,76,,,,,,,17,21,45,,,17,135,4,,135,20,,21,38,39',
'20,126,41,38,39,54,54,134,,,137,6,42,17,44,138,77,,,103,26,26,,20,,11',
',52,,81,26,44,,46,105,,105,21,21,105,,,,108,,107,,58,58,,,21,16,16,',
',,,,,,10,,21,,4,,108,,108,,33,33,,54,54,80,,43,,59,35,,54,22,56,35,32',
'106,,105,106,106,,,,,44,,,,44,44,,,,,,8,29,,105,8,8,44,,,14,,,56,14',
',108,,44,50,21,,,50,55,135,33,33,60,51,51,31,31,,,,,108,,,31,,80,,48',
',22,56,48,,,80,,,,75,26,26,,34,9,,,52,34,,,,56,,,29,44,,,21,,,23,48',
',21,26,,,,,21,24,21,,,,,,75,,17,,,,52,75,41,21,,,20,23,23,23,22,56,',
',,78,34,21,21,34,135,,,,21,51,,,,,,,,17,17,29,,106,21,23,23,8,21,20',
'20,,7,21,,,48,,,21,17,,,21,17,21,,48,,17,20,,,101,20,,,59,16,20,104',
'23,,8,,,,,,23,23,,56,,,,21,21,,,,,21,33,33,,26,,,,,,,,44,,29,21,48,',
'44,52,,,,,,,21,9,,52,,17,21,26,,57,57,,21,21,,20,17,21,9,,,,,44,44,',
'20,21,17,17,44,80,80,41,,,,,20,20,,,,41,44,,80,33,44,23,,18,18,44,,47',
',18,33,,,26,,26,,21,23,,,,21,,,,21,21,,,,51,16,,,,9,53,17,21,53,9,17',
'17,,,21,,20,,,,20,20,,17,,53,,53,53,53,53,53,33,20,,,,44,,,,,,,51,,',
',44,,,21,23,,,,23,23,,,44,44,,,48,44,,17,,23,21,54,21,21,,44,,20,,,23',
',,,,16,,,17,17,,,,52,,,,18,20,20,,80,54,80,33,33,,80,,,,26,,21,,,,21',
'44,,48,,44,44,,,22,56,21,17,,21,,17,23,44,,,,20,,,,,17,,,17,21,,53,29',
',,20,21,,20,,54,21,,,,17,,,21,,21,,17,,,20,,17,,,44,,20,,17,,,20,80',
',,,,57,20,57,,26,,,,44,44,,,,,,,,,,,,,,,53,,,,,,,,,,,,,,,48,,,,,,,,',
',44,,,,44,,,,,,,,,,,44,,28,44,9,9,28,28,28,,,,,,,23,,,,,44,23,28,28',
'28,9,,44,,9,,,44,,9,,,28,28,44,,,,,,,,,,,,,23,23,,,,,,23,,,,,,,57,,',
',,57,,23,,,,23,,,,,23,,,,,,,,,,,,33,,,,9,,,,,,,,,,,9,,,,,,53,,,,,,9',
'9,,57,,,57,,,,53,,,25,,,,,,,,,,,,23,,,,,,,,,,,23,,,,,,,53,,,,,23,23',
',,53,23,,53,53,,28,28,28,28,,23,28,,53,53,,,,,,,,9,,,28,53,28,28,28',
'28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28',
'23,,,,23,23,,,28,,28,,,9,,28,23,23,,,,28,28,,,,,,,,28,,,,9,9,,,53,,',
',,,,,,,25,25,,,,,,,,,,,28,23,,,,,,,,,,,,,,9,,,,,,57,23,23,57,,,,,,9',
',,,,,,,,,,,,,25,,25,,,,9,25,,,,,,9,,,,,9,23,,,,23,,,53,,,,,,,,23,53',
'53,23,,,,,,,,,,,,,,,,,23,,53,,53,,,23,28,,,,23,,,,,57,57,23,,,,,,,,',
',,,,,,28,,28,28,28,,,,,,,,,,,,,,,,,,,,,,,,,,,,53,53,,28,,28,,28,,,,',
'53,,,,53,,,,,37,37,28,,,,,37,37,37,,,,,,,28,25,,,,,,37,,28,28,28,,,',
'37,37,,,,,28,,,28,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,25,,25,28,25',
',,,,,,,,,,,,,,,25,,,53,,,,,,,,,,53,,,28,53,28,,28,28,,,,,28,,,28,,,',
',,25,,28,25,,,,,,,28,,,,,,,,,,,,,28,,,,,,,,,,,,,,,,,,,,,,,,,,,28,37',
',37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37',
'37,37,37,25,,28,,,,,,37,,37,,,,,37,,,,,,,,,,,,25,,,,28,28,,,,,,37,,25',
',28,28,28,,,,,,,37,,,,,,,,28,37,,,,,,,25,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,25,,,,,,,,,,,,28,,,,,,37,,,,,,28,,,,,25,,,,,,,,,,,,,,,,,,28,,,,,',
',,,,25,,,,,,,,,28,,37,,,,,,,,,,,,,,,,,,,,,28,,,,,,,37,37,37,,,,,,,,',
',25,,,,,,,,,,,,,,,,,,,,,37,,37,,37,,,,,,,,,,25,,,,,,,,,,,,,,,,,,37,25',
',,,,,,,,,37,37,37,,,,,,,,,,37,,,37,,,,,,,,,,,,37,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,37,,37,,,,,,,,,,,37,,,,,,',
',37,,,,,,,,37,,,,,,,,,,,,,,,,,,,,,,,,37,,,,,,,,,,37,,,,,,37,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,37,,,,,,,,,,,,,,,,,,,,,,,,,,,,,37,,,,,,,,,,,37',
'37,37,,,,,,,,,,,,,,,37,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,37,,,,,,,,,,,,37,,,,,,,,,,,,,37,,,,,,,,,,37,,,,,,,,,,,,,,,,,,,37' ]
        racc_goto_check = arr = ::Array.new(2280, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_goto_pointer = [
   nil,   225,    92,   nil,    26,   126,    45,    66,  -292,   445,
  -517,  -544,  -546,   nil,    26,   211,    15,    16,    83,   156,
    26,     0,   -43,   493,  -168,  1054,   126,   109,   958,   -18,
   nil,   182,  -249,   180,    55,  -219,  -324,  1415,    29,    30,
   nil,    16,    39,  -269,   128,  -273,   -18,   -29,    60,   nil,
    35,   -40,   -24,   670,   118,  -235,   -42,   621,  -400,  -240,
  -421,  -426,  -100,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    98,   107,    99,   nil,    97,  -324,  -605,  -471,  -346,  -205,
   110,  -523,   121,  -177,   118,    36,  -595,    40,  -588,  -454,
  -731,  -444,  -228,  -669,    67,  -439,  -230,  -433,  -665,    91,
  -167,   -42,  -389,  -453,   -35,  -462,  -285,  -507,  -429,   nil,
   -73,   nil,   -94,   -94,  -701,  -387,  -492,  -590,   nil,   nil,
   nil,   111,   112,    18,   111,  -190,  -283,   122,  -516,  -376,
  -373,   nil,  -500,  -588,  -582,  -249,   nil,  -486,  -225,  -467,
   nil,  -715,   nil,   nil,  -407 ]

racc_goto_default = [
   nil,   nil,   nil,     3,   nil,     4,   349,   275,   nil,   520,
   nil,   787,   nil,   274,   nil,   nil,   nil,   209,    16,    11,
   210,   299,   nil,   208,   nil,   252,    15,   nil,    19,    20,
    21,   nil,    25,   664,   nil,   nil,   nil,    26,    29,   nil,
    31,    34,    33,   nil,   206,   353,   nil,   115,   422,   114,
    69,   nil,    42,   538,   309,   nil,   249,   420,   611,   469,
   250,   nil,   nil,   265,    43,    44,    45,    46,    47,    48,
    49,   nil,   266,    55,   nil,   nil,   nil,   nil,   nil,   nil,
   555,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   322,   321,   680,   324,   nil,   325,   326,   244,
   nil,   426,   nil,   nil,   nil,   nil,   nil,   nil,    68,    70,
    71,    72,   nil,   nil,   nil,   nil,   588,   nil,   nil,   nil,
   nil,   385,   715,   717,   nil,   333,   328,   335,   nil,   549,
   550,   721,   338,   341,   257 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 140, :_reduce_none,
  2, 141, :_reduce_2,
  0, 142, :_reduce_3,
  1, 142, :_reduce_4,
  3, 142, :_reduce_5,
  1, 144, :_reduce_none,
  4, 144, :_reduce_7,
  4, 147, :_reduce_8,
  2, 148, :_reduce_9,
  0, 152, :_reduce_10,
  1, 152, :_reduce_11,
  3, 152, :_reduce_12,
  0, 166, :_reduce_13,
  4, 146, :_reduce_14,
  3, 146, :_reduce_15,
  3, 146, :_reduce_none,
  3, 146, :_reduce_17,
  2, 146, :_reduce_18,
  3, 146, :_reduce_19,
  3, 146, :_reduce_20,
  3, 146, :_reduce_21,
  3, 146, :_reduce_22,
  3, 146, :_reduce_23,
  4, 146, :_reduce_none,
  3, 146, :_reduce_25,
  3, 146, :_reduce_26,
  3, 146, :_reduce_27,
  6, 146, :_reduce_none,
  5, 146, :_reduce_29,
  5, 146, :_reduce_none,
  5, 146, :_reduce_none,
  3, 146, :_reduce_none,
  3, 146, :_reduce_33,
  3, 146, :_reduce_34,
  3, 146, :_reduce_35,
  1, 146, :_reduce_none,
  1, 165, :_reduce_none,
  3, 165, :_reduce_38,
  3, 165, :_reduce_39,
  2, 165, :_reduce_40,
  2, 165, :_reduce_41,
  1, 165, :_reduce_none,
  1, 155, :_reduce_none,
  1, 157, :_reduce_none,
  1, 157, :_reduce_none,
  2, 157, :_reduce_46,
  2, 157, :_reduce_47,
  2, 157, :_reduce_48,
  1, 169, :_reduce_none,
  4, 169, :_reduce_none,
  4, 169, :_reduce_none,
  4, 174, :_reduce_none,
  2, 168, :_reduce_53,
  3, 168, :_reduce_none,
  4, 168, :_reduce_55,
  5, 168, :_reduce_none,
  4, 168, :_reduce_57,
  5, 168, :_reduce_none,
  2, 168, :_reduce_59,
  2, 168, :_reduce_60,
  1, 158, :_reduce_61,
  3, 158, :_reduce_62,
  1, 178, :_reduce_63,
  3, 178, :_reduce_64,
  1, 177, :_reduce_65,
  2, 177, :_reduce_66,
  3, 177, :_reduce_67,
  5, 177, :_reduce_none,
  2, 177, :_reduce_69,
  4, 177, :_reduce_none,
  2, 177, :_reduce_71,
  1, 177, :_reduce_72,
  3, 177, :_reduce_none,
  1, 180, :_reduce_74,
  3, 180, :_reduce_75,
  2, 179, :_reduce_76,
  3, 179, :_reduce_77,
  1, 182, :_reduce_none,
  3, 182, :_reduce_none,
  1, 181, :_reduce_80,
  4, 181, :_reduce_81,
  3, 181, :_reduce_82,
  3, 181, :_reduce_none,
  3, 181, :_reduce_none,
  3, 181, :_reduce_none,
  2, 181, :_reduce_none,
  1, 181, :_reduce_none,
  1, 156, :_reduce_88,
  4, 156, :_reduce_89,
  3, 156, :_reduce_90,
  3, 156, :_reduce_91,
  3, 156, :_reduce_92,
  3, 156, :_reduce_93,
  2, 156, :_reduce_94,
  1, 156, :_reduce_none,
  1, 184, :_reduce_none,
  2, 185, :_reduce_97,
  1, 185, :_reduce_98,
  3, 185, :_reduce_99,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_103,
  1, 186, :_reduce_104,
  1, 153, :_reduce_105,
  1, 153, :_reduce_none,
  1, 154, :_reduce_107,
  3, 154, :_reduce_108,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  3, 167, :_reduce_183,
  5, 167, :_reduce_184,
  3, 167, :_reduce_185,
  6, 167, :_reduce_186,
  5, 167, :_reduce_187,
  5, 167, :_reduce_none,
  5, 167, :_reduce_none,
  5, 167, :_reduce_none,
  4, 167, :_reduce_none,
  3, 167, :_reduce_none,
  3, 167, :_reduce_193,
  3, 167, :_reduce_194,
  3, 167, :_reduce_195,
  3, 167, :_reduce_196,
  3, 167, :_reduce_197,
  3, 167, :_reduce_198,
  3, 167, :_reduce_199,
  3, 167, :_reduce_200,
  4, 167, :_reduce_none,
  4, 167, :_reduce_none,
  2, 167, :_reduce_203,
  2, 167, :_reduce_204,
  3, 167, :_reduce_205,
  3, 167, :_reduce_206,
  3, 167, :_reduce_207,
  3, 167, :_reduce_208,
  3, 167, :_reduce_209,
  3, 167, :_reduce_210,
  3, 167, :_reduce_211,
  3, 167, :_reduce_212,
  3, 167, :_reduce_213,
  3, 167, :_reduce_214,
  3, 167, :_reduce_215,
  3, 167, :_reduce_216,
  3, 167, :_reduce_217,
  2, 167, :_reduce_218,
  2, 167, :_reduce_219,
  3, 167, :_reduce_220,
  3, 167, :_reduce_221,
  3, 167, :_reduce_222,
  3, 167, :_reduce_223,
  3, 167, :_reduce_224,
  5, 167, :_reduce_225,
  1, 167, :_reduce_none,
  1, 164, :_reduce_none,
  1, 161, :_reduce_228,
  2, 161, :_reduce_229,
  2, 161, :_reduce_230,
  4, 161, :_reduce_231,
  2, 161, :_reduce_232,
  3, 196, :_reduce_233,
  4, 196, :_reduce_234,
  4, 196, :_reduce_none,
  6, 196, :_reduce_none,
  1, 197, :_reduce_237,
  1, 197, :_reduce_none,
  1, 170, :_reduce_239,
  2, 170, :_reduce_240,
  2, 170, :_reduce_241,
  4, 170, :_reduce_242,
  1, 170, :_reduce_243,
  4, 200, :_reduce_none,
  1, 200, :_reduce_none,
  0, 202, :_reduce_246,
  2, 173, :_reduce_247,
  1, 201, :_reduce_none,
  2, 201, :_reduce_249,
  3, 201, :_reduce_250,
  2, 199, :_reduce_251,
  2, 198, :_reduce_252,
  0, 198, :_reduce_253,
  1, 193, :_reduce_254,
  2, 193, :_reduce_255,
  3, 193, :_reduce_256,
  4, 193, :_reduce_257,
  3, 163, :_reduce_258,
  4, 163, :_reduce_none,
  2, 163, :_reduce_260,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  0, 223, :_reduce_270,
  4, 191, :_reduce_271,
  4, 191, :_reduce_272,
  3, 191, :_reduce_273,
  3, 191, :_reduce_274,
  2, 191, :_reduce_275,
  4, 191, :_reduce_276,
  3, 191, :_reduce_277,
  3, 191, :_reduce_278,
  1, 191, :_reduce_279,
  4, 191, :_reduce_280,
  3, 191, :_reduce_281,
  1, 191, :_reduce_282,
  5, 191, :_reduce_283,
  4, 191, :_reduce_284,
  3, 191, :_reduce_285,
  2, 191, :_reduce_286,
  1, 191, :_reduce_none,
  2, 191, :_reduce_288,
  2, 191, :_reduce_289,
  6, 191, :_reduce_290,
  6, 191, :_reduce_291,
  0, 224, :_reduce_292,
  0, 225, :_reduce_293,
  7, 191, :_reduce_294,
  0, 226, :_reduce_295,
  0, 227, :_reduce_296,
  7, 191, :_reduce_297,
  5, 191, :_reduce_298,
  4, 191, :_reduce_299,
  5, 191, :_reduce_300,
  0, 228, :_reduce_301,
  0, 229, :_reduce_302,
  9, 191, :_reduce_none,
  0, 230, :_reduce_304,
  6, 191, :_reduce_305,
  0, 231, :_reduce_306,
  0, 232, :_reduce_307,
  8, 191, :_reduce_308,
  0, 233, :_reduce_309,
  0, 234, :_reduce_310,
  6, 191, :_reduce_311,
  0, 235, :_reduce_312,
  6, 191, :_reduce_313,
  0, 236, :_reduce_314,
  0, 237, :_reduce_315,
  9, 191, :_reduce_316,
  1, 191, :_reduce_317,
  1, 191, :_reduce_318,
  1, 191, :_reduce_319,
  1, 191, :_reduce_none,
  1, 160, :_reduce_none,
  1, 214, :_reduce_none,
  1, 214, :_reduce_none,
  1, 214, :_reduce_none,
  2, 214, :_reduce_none,
  1, 216, :_reduce_none,
  1, 216, :_reduce_none,
  1, 216, :_reduce_none,
  2, 213, :_reduce_329,
  3, 238, :_reduce_330,
  2, 238, :_reduce_331,
  1, 238, :_reduce_none,
  1, 238, :_reduce_none,
  3, 239, :_reduce_334,
  3, 239, :_reduce_335,
  1, 215, :_reduce_336,
  5, 215, :_reduce_337,
  1, 150, :_reduce_none,
  2, 150, :_reduce_339,
  1, 241, :_reduce_340,
  3, 241, :_reduce_341,
  3, 242, :_reduce_342,
  1, 175, :_reduce_none,
  2, 175, :_reduce_344,
  1, 175, :_reduce_345,
  3, 175, :_reduce_346,
  1, 243, :_reduce_347,
  2, 245, :_reduce_348,
  1, 245, :_reduce_349,
  6, 240, :_reduce_350,
  4, 240, :_reduce_351,
  4, 240, :_reduce_352,
  2, 240, :_reduce_353,
  2, 240, :_reduce_354,
  4, 240, :_reduce_355,
  2, 240, :_reduce_356,
  2, 240, :_reduce_357,
  1, 240, :_reduce_358,
  0, 249, :_reduce_359,
  5, 248, :_reduce_360,
  2, 171, :_reduce_361,
  4, 171, :_reduce_none,
  4, 171, :_reduce_none,
  2, 212, :_reduce_364,
  4, 212, :_reduce_365,
  3, 212, :_reduce_366,
  4, 212, :_reduce_367,
  3, 212, :_reduce_368,
  2, 212, :_reduce_369,
  1, 212, :_reduce_370,
  0, 251, :_reduce_371,
  5, 211, :_reduce_372,
  0, 252, :_reduce_373,
  5, 211, :_reduce_374,
  0, 254, :_reduce_375,
  6, 217, :_reduce_376,
  1, 253, :_reduce_377,
  1, 253, :_reduce_none,
  6, 149, :_reduce_379,
  0, 149, :_reduce_380,
  1, 255, :_reduce_381,
  1, 255, :_reduce_none,
  1, 255, :_reduce_none,
  2, 256, :_reduce_384,
  1, 256, :_reduce_385,
  2, 151, :_reduce_386,
  1, 151, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 204, :_reduce_391,
  1, 259, :_reduce_none,
  2, 259, :_reduce_none,
  3, 260, :_reduce_394,
  1, 260, :_reduce_395,
  3, 205, :_reduce_396,
  3, 206, :_reduce_397,
  3, 207, :_reduce_398,
  3, 207, :_reduce_399,
  1, 263, :_reduce_400,
  3, 263, :_reduce_401,
  1, 264, :_reduce_402,
  2, 264, :_reduce_403,
  3, 208, :_reduce_404,
  3, 208, :_reduce_405,
  1, 266, :_reduce_406,
  3, 266, :_reduce_407,
  1, 261, :_reduce_408,
  2, 261, :_reduce_409,
  1, 262, :_reduce_410,
  2, 262, :_reduce_411,
  1, 265, :_reduce_412,
  0, 268, :_reduce_413,
  3, 265, :_reduce_414,
  0, 269, :_reduce_415,
  4, 265, :_reduce_416,
  1, 267, :_reduce_417,
  1, 267, :_reduce_418,
  1, 267, :_reduce_419,
  1, 267, :_reduce_none,
  2, 189, :_reduce_421,
  1, 189, :_reduce_422,
  1, 270, :_reduce_none,
  1, 270, :_reduce_none,
  1, 270, :_reduce_none,
  1, 270, :_reduce_none,
  3, 258, :_reduce_427,
  1, 257, :_reduce_428,
  1, 257, :_reduce_429,
  2, 257, :_reduce_none,
  2, 257, :_reduce_none,
  1, 183, :_reduce_432,
  1, 183, :_reduce_433,
  1, 183, :_reduce_434,
  1, 183, :_reduce_435,
  1, 183, :_reduce_436,
  1, 183, :_reduce_437,
  1, 183, :_reduce_438,
  1, 183, :_reduce_439,
  1, 183, :_reduce_440,
  1, 183, :_reduce_441,
  1, 183, :_reduce_442,
  1, 209, :_reduce_443,
  1, 159, :_reduce_444,
  1, 162, :_reduce_445,
  1, 162, :_reduce_none,
  1, 218, :_reduce_447,
  3, 218, :_reduce_448,
  2, 218, :_reduce_449,
  4, 220, :_reduce_450,
  2, 220, :_reduce_451,
  6, 271, :_reduce_452,
  4, 271, :_reduce_453,
  4, 271, :_reduce_454,
  2, 271, :_reduce_455,
  4, 271, :_reduce_456,
  2, 271, :_reduce_457,
  2, 271, :_reduce_458,
  1, 271, :_reduce_459,
  0, 271, :_reduce_460,
  1, 274, :_reduce_none,
  1, 274, :_reduce_462,
  1, 275, :_reduce_463,
  1, 275, :_reduce_464,
  1, 275, :_reduce_465,
  1, 275, :_reduce_466,
  1, 276, :_reduce_467,
  3, 276, :_reduce_468,
  1, 278, :_reduce_469,
  3, 278, :_reduce_none,
  1, 279, :_reduce_471,
  3, 279, :_reduce_472,
  1, 277, :_reduce_none,
  4, 277, :_reduce_none,
  3, 277, :_reduce_none,
  2, 277, :_reduce_none,
  1, 277, :_reduce_none,
  1, 246, :_reduce_478,
  3, 246, :_reduce_479,
  3, 280, :_reduce_480,
  1, 272, :_reduce_481,
  3, 272, :_reduce_482,
  1, 281, :_reduce_none,
  1, 281, :_reduce_none,
  2, 247, :_reduce_485,
  1, 247, :_reduce_486,
  1, 282, :_reduce_none,
  1, 282, :_reduce_none,
  2, 244, :_reduce_489,
  2, 273, :_reduce_490,
  0, 273, :_reduce_491,
  1, 221, :_reduce_492,
  4, 221, :_reduce_493,
  0, 210, :_reduce_494,
  2, 210, :_reduce_495,
  1, 195, :_reduce_496,
  3, 195, :_reduce_497,
  3, 283, :_reduce_498,
  2, 283, :_reduce_499,
  1, 176, :_reduce_none,
  1, 176, :_reduce_none,
  1, 176, :_reduce_none,
  1, 172, :_reduce_none,
  1, 172, :_reduce_none,
  1, 172, :_reduce_none,
  1, 172, :_reduce_none,
  1, 250, :_reduce_none,
  1, 250, :_reduce_none,
  1, 250, :_reduce_none,
  1, 222, :_reduce_none,
  1, 222, :_reduce_none,
  0, 143, :_reduce_none,
  1, 143, :_reduce_none,
  0, 190, :_reduce_none,
  1, 190, :_reduce_none,
  0, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 219, :_reduce_none,
  1, 219, :_reduce_none,
  1, 145, :_reduce_none,
  2, 145, :_reduce_none,
  0, 192, :_reduce_523 ]

racc_reduce_n = 524

racc_shift_n = 910

racc_token_table = {
  false => 0,
  :error => 1,
  :kCLASS => 2,
  :kMODULE => 3,
  :kDEF => 4,
  :kUNDEF => 5,
  :kBEGIN => 6,
  :kRESCUE => 7,
  :kENSURE => 8,
  :kEND => 9,
  :kIF => 10,
  :kUNLESS => 11,
  :kTHEN => 12,
  :kELSIF => 13,
  :kELSE => 14,
  :kCASE => 15,
  :kWHEN => 16,
  :kWHILE => 17,
  :kUNTIL => 18,
  :kFOR => 19,
  :kBREAK => 20,
  :kNEXT => 21,
  :kREDO => 22,
  :kRETRY => 23,
  :kIN => 24,
  :kDO => 25,
  :kDO_COND => 26,
  :kDO_BLOCK => 27,
  :kDO_LAMBDA => 28,
  :kRETURN => 29,
  :kYIELD => 30,
  :kSUPER => 31,
  :kSELF => 32,
  :kNIL => 33,
  :kTRUE => 34,
  :kFALSE => 35,
  :kAND => 36,
  :kOR => 37,
  :kNOT => 38,
  :kIF_MOD => 39,
  :kUNLESS_MOD => 40,
  :kWHILE_MOD => 41,
  :kUNTIL_MOD => 42,
  :kRESCUE_MOD => 43,
  :kALIAS => 44,
  :kDEFINED => 45,
  :klBEGIN => 46,
  :klEND => 47,
  :k__LINE__ => 48,
  :k__FILE__ => 49,
  :k__ENCODING__ => 50,
  :tIDENTIFIER => 51,
  :tFID => 52,
  :tGVAR => 53,
  :tIVAR => 54,
  :tCONSTANT => 55,
  :tLABEL => 56,
  :tCVAR => 57,
  :tNTH_REF => 58,
  :tBACK_REF => 59,
  :tSTRING_CONTENT => 60,
  :tINTEGER => 61,
  :tFLOAT => 62,
  :tREGEXP_END => 63,
  :tUPLUS => 64,
  :tUMINUS => 65,
  :tUMINUS_NUM => 66,
  :tPOW => 67,
  :tCMP => 68,
  :tEQ => 69,
  :tEQQ => 70,
  :tNEQ => 71,
  :tGEQ => 72,
  :tLEQ => 73,
  :tANDOP => 74,
  :tOROP => 75,
  :tMATCH => 76,
  :tNMATCH => 77,
  :tDOT => 78,
  :tDOT2 => 79,
  :tDOT3 => 80,
  :tAREF => 81,
  :tASET => 82,
  :tLSHFT => 83,
  :tRSHFT => 84,
  :tCOLON2 => 85,
  :tCOLON3 => 86,
  :tOP_ASGN => 87,
  :tASSOC => 88,
  :tLPAREN => 89,
  :tLPAREN2 => 90,
  :tRPAREN => 91,
  :tLPAREN_ARG => 92,
  :ARRAY_BEG => 93,
  :tRBRACK => 94,
  :tLBRACE => 95,
  :tLBRACE_ARG => 96,
  :tSTAR => 97,
  :tSTAR2 => 98,
  :tAMPER => 99,
  :tAMPER2 => 100,
  :tTILDE => 101,
  :tPERCENT => 102,
  :tDIVIDE => 103,
  :tPLUS => 104,
  :tMINUS => 105,
  :tLT => 106,
  :tGT => 107,
  :tPIPE => 108,
  :tBANG => 109,
  :tCARET => 110,
  :tLCURLY => 111,
  :tRCURLY => 112,
  :tBACK_REF2 => 113,
  :tSYMBEG => 114,
  :tSTRING_BEG => 115,
  :tXSTRING_BEG => 116,
  :tREGEXP_BEG => 117,
  :tWORDS_BEG => 118,
  :tAWORDS_BEG => 119,
  :tSTRING_DBEG => 120,
  :tSTRING_DVAR => 121,
  :tSTRING_END => 122,
  :tSTRING => 123,
  :tSYMBOL => 124,
  :tNL => 125,
  :tEH => 126,
  :tCOLON => 127,
  :tCOMMA => 128,
  :tSPACE => 129,
  :tSEMI => 130,
  :tLAMBDA => 131,
  :tLAMBEG => 132,
  :tLBRACK2 => 133,
  :tLBRACK => 134,
  :tEQL => 135,
  :tLOWEST => 136,
  "-@NUM" => 137,
  "{" => 138 }

racc_nt_base = 139

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "kCLASS",
  "kMODULE",
  "kDEF",
  "kUNDEF",
  "kBEGIN",
  "kRESCUE",
  "kENSURE",
  "kEND",
  "kIF",
  "kUNLESS",
  "kTHEN",
  "kELSIF",
  "kELSE",
  "kCASE",
  "kWHEN",
  "kWHILE",
  "kUNTIL",
  "kFOR",
  "kBREAK",
  "kNEXT",
  "kREDO",
  "kRETRY",
  "kIN",
  "kDO",
  "kDO_COND",
  "kDO_BLOCK",
  "kDO_LAMBDA",
  "kRETURN",
  "kYIELD",
  "kSUPER",
  "kSELF",
  "kNIL",
  "kTRUE",
  "kFALSE",
  "kAND",
  "kOR",
  "kNOT",
  "kIF_MOD",
  "kUNLESS_MOD",
  "kWHILE_MOD",
  "kUNTIL_MOD",
  "kRESCUE_MOD",
  "kALIAS",
  "kDEFINED",
  "klBEGIN",
  "klEND",
  "k__LINE__",
  "k__FILE__",
  "k__ENCODING__",
  "tIDENTIFIER",
  "tFID",
  "tGVAR",
  "tIVAR",
  "tCONSTANT",
  "tLABEL",
  "tCVAR",
  "tNTH_REF",
  "tBACK_REF",
  "tSTRING_CONTENT",
  "tINTEGER",
  "tFLOAT",
  "tREGEXP_END",
  "tUPLUS",
  "tUMINUS",
  "tUMINUS_NUM",
  "tPOW",
  "tCMP",
  "tEQ",
  "tEQQ",
  "tNEQ",
  "tGEQ",
  "tLEQ",
  "tANDOP",
  "tOROP",
  "tMATCH",
  "tNMATCH",
  "tDOT",
  "tDOT2",
  "tDOT3",
  "tAREF",
  "tASET",
  "tLSHFT",
  "tRSHFT",
  "tCOLON2",
  "tCOLON3",
  "tOP_ASGN",
  "tASSOC",
  "tLPAREN",
  "tLPAREN2",
  "tRPAREN",
  "tLPAREN_ARG",
  "ARRAY_BEG",
  "tRBRACK",
  "tLBRACE",
  "tLBRACE_ARG",
  "tSTAR",
  "tSTAR2",
  "tAMPER",
  "tAMPER2",
  "tTILDE",
  "tPERCENT",
  "tDIVIDE",
  "tPLUS",
  "tMINUS",
  "tLT",
  "tGT",
  "tPIPE",
  "tBANG",
  "tCARET",
  "tLCURLY",
  "tRCURLY",
  "tBACK_REF2",
  "tSYMBEG",
  "tSTRING_BEG",
  "tXSTRING_BEG",
  "tREGEXP_BEG",
  "tWORDS_BEG",
  "tAWORDS_BEG",
  "tSTRING_DBEG",
  "tSTRING_DVAR",
  "tSTRING_END",
  "tSTRING",
  "tSYMBOL",
  "tNL",
  "tEH",
  "tCOLON",
  "tCOMMA",
  "tSPACE",
  "tSEMI",
  "tLAMBDA",
  "tLAMBEG",
  "tLBRACK2",
  "tLBRACK",
  "tEQL",
  "tLOWEST",
  "\"-@NUM\"",
  "\"{\"",
  "$start",
  "program",
  "top_compstmt",
  "top_stmts",
  "opt_terms",
  "top_stmt",
  "terms",
  "stmt",
  "bodystmt",
  "compstmt",
  "opt_rescue",
  "opt_else",
  "opt_ensure",
  "stmts",
  "fitem",
  "undef_list",
  "expr_value",
  "lhs",
  "command_call",
  "mlhs",
  "var_lhs",
  "primary_value",
  "aref_args",
  "backref",
  "mrhs",
  "arg_value",
  "expr",
  "@1",
  "arg",
  "command",
  "block_command",
  "call_args",
  "block_call",
  "operation2",
  "command_args",
  "cmd_brace_block",
  "opt_block_var",
  "operation",
  "mlhs_basic",
  "mlhs_entry",
  "mlhs_head",
  "mlhs_item",
  "mlhs_node",
  "mlhs_post",
  "variable",
  "cname",
  "cpath",
  "fname",
  "op",
  "reswords",
  "symbol",
  "opt_nl",
  "primary",
  "none",
  "args",
  "trailer",
  "assocs",
  "paren_args",
  "opt_paren_args",
  "opt_block_arg",
  "block_arg",
  "call_args2",
  "open_args",
  "@2",
  "literal",
  "strings",
  "xstring",
  "regexp",
  "words",
  "awords",
  "var_ref",
  "assoc_list",
  "brace_block",
  "method_call",
  "lambda",
  "then",
  "if_tail",
  "do",
  "case_body",
  "superclass",
  "term",
  "f_arglist",
  "singleton",
  "dot_or_colon",
  "@3",
  "@4",
  "@5",
  "@6",
  "@7",
  "@8",
  "@9",
  "@10",
  "@11",
  "@12",
  "@13",
  "@14",
  "@15",
  "@16",
  "@17",
  "f_larglist",
  "lambda_body",
  "block_param",
  "f_block_optarg",
  "f_block_opt",
  "block_args_tail",
  "f_block_arg",
  "opt_block_args_tail",
  "f_arg",
  "f_rest_arg",
  "do_block",
  "@18",
  "operation3",
  "@19",
  "@20",
  "cases",
  "@21",
  "exc_list",
  "exc_var",
  "numeric",
  "dsym",
  "string",
  "string1",
  "string_contents",
  "xstring_contents",
  "word_list",
  "word",
  "string_content",
  "qword_list",
  "string_dvar",
  "@22",
  "@23",
  "sym",
  "f_args",
  "f_optarg",
  "opt_f_block_arg",
  "f_norm_arg",
  "f_bad_arg",
  "f_arg_item",
  "f_margs",
  "f_marg",
  "f_marg_list",
  "f_opt",
  "restarg_mark",
  "blkarg_mark",
  "assoc" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

def _reduce_2(val, _values, result)
                      result = new_compstmt val[0]
                    
    result
end

def _reduce_3(val, _values, result)
                      result = new_block
                    
    result
end

def _reduce_4(val, _values, result)
                      result = new_block val[0]
                    
    result
end

def _reduce_5(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

# reduce 6 omitted

def _reduce_7(val, _values, result)
                      result = val[2]
                    
    result
end

def _reduce_8(val, _values, result)
                      result = new_body(val[0], val[1], val[2], val[3])
                    
    result
end

def _reduce_9(val, _values, result)
                      result = new_compstmt val[0]
                    
    result
end

def _reduce_10(val, _values, result)
                      result = new_block
                    
    result
end

def _reduce_11(val, _values, result)
                      result = new_block val[0]
                    
    result
end

def _reduce_12(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_13(val, _values, result)
                      lexer.lex_state = :expr_fname
                    
    result
end

def _reduce_14(val, _values, result)
                      result = new_alias(val[0], val[1], val[3])
                    
    result
end

def _reduce_15(val, _values, result)
                      result = s(:valias, val[1].intern, val[2].intern)
                    
    result
end

# reduce 16 omitted

def _reduce_17(val, _values, result)
                      result = s(:valias, val[1].intern, val[2].intern)
                    
    result
end

def _reduce_18(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_19(val, _values, result)
                      result = new_if(val[1], val[2], val[0], nil)
                    
    result
end

def _reduce_20(val, _values, result)
                      result = new_if(val[1], val[2], nil, val[0])
                    
    result
end

def _reduce_21(val, _values, result)
                      result = new_while(val[1], val[2], val[0])
                    
    result
end

def _reduce_22(val, _values, result)
                      result = new_until(val[1], val[2], val[0])
                    
    result
end

def _reduce_23(val, _values, result)
                      result = new_rescue_mod(val[1], val[0], val[2])
                    
    result
end

# reduce 24 omitted

def _reduce_25(val, _values, result)
                      result = new_assign(val[0], val[1], val[2])
                    
    result
end

def _reduce_26(val, _values, result)
                      result = s(:masgn, val[0], s(:to_ary, val[2]))
                    
    result
end

def _reduce_27(val, _values, result)
                      result = new_op_asgn val[1], val[0], val[2]
                    
    result
end

# reduce 28 omitted

def _reduce_29(val, _values, result)
                      result = s(:op_asgn2, val[0], op_to_setter(val[2]), value(val[3]).to_sym, val[4])
                    
    result
end

# reduce 30 omitted

# reduce 31 omitted

# reduce 32 omitted

def _reduce_33(val, _values, result)
                      result = new_assign val[0], val[1], s(:svalue, val[2])
                    
    result
end

def _reduce_34(val, _values, result)
                      result = s(:masgn, val[0], s(:to_ary, val[2]))
                    
    result
end

def _reduce_35(val, _values, result)
                      result = s(:masgn, val[0], val[2])
                    
    result
end

# reduce 36 omitted

# reduce 37 omitted

def _reduce_38(val, _values, result)
                      result = s(:and, val[0], val[2])
                      result.line = val[0].line
                    
    result
end

def _reduce_39(val, _values, result)
                      result = s(:or, val[0], val[2])
                      result.line = val[0].line
                    
    result
end

def _reduce_40(val, _values, result)
                      result = new_not(val[0], val[1])
                    
    result
end

def _reduce_41(val, _values, result)
                      result = new_not(val[0], val[1])
                    
    result
end

# reduce 42 omitted

# reduce 43 omitted

# reduce 44 omitted

# reduce 45 omitted

def _reduce_46(val, _values, result)
                      result = new_return(val[0], val[1])
                    
    result
end

def _reduce_47(val, _values, result)
                      result = new_break(val[0], val[1])
                    
    result
end

def _reduce_48(val, _values, result)
                      result = new_next(val[0], val[1])
                    
    result
end

# reduce 49 omitted

# reduce 50 omitted

# reduce 51 omitted

# reduce 52 omitted

def _reduce_53(val, _values, result)
                      result = new_call(nil, val[0], val[1])
                    
    result
end

# reduce 54 omitted

def _reduce_55(val, _values, result)
                      result = new_call(val[0], val[2], val[3])
                    
    result
end

# reduce 56 omitted

def _reduce_57(val, _values, result)
                    result = new_call val[0], val[2].intern, val[3]
                  
    result
end

# reduce 58 omitted

def _reduce_59(val, _values, result)
                      result = new_super(val[0], val[1])
                    
    result
end

def _reduce_60(val, _values, result)
                      result = new_yield val[1]
                    
    result
end

def _reduce_61(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_62(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_63(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_64(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_65(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_66(val, _values, result)
                      result = val[0] << val[1]
                    
    result
end

def _reduce_67(val, _values, result)
                      result = val[0] << s(:splat, val[2])
                    
    result
end

# reduce 68 omitted

def _reduce_69(val, _values, result)
                      result = val[0] << s(:splat)
                    
    result
end

# reduce 70 omitted

def _reduce_71(val, _values, result)
                      result = s(:array, s(:splat, val[1]))
                    
    result
end

def _reduce_72(val, _values, result)
                      result = s(:array, s(:splat))
                    
    result
end

# reduce 73 omitted

def _reduce_74(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_75(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_76(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

def _reduce_77(val, _values, result)
                      result = val[0] << val[1]
                    
    result
end

# reduce 78 omitted

# reduce 79 omitted

def _reduce_80(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_81(val, _values, result)
                      args = s(:arglist, *val[2])
                      result = s(:attrasgn, val[0], :[]=, args)
                    
    result
end

def _reduce_82(val, _values, result)
                      result = new_call val[0], value(val[2]).intern, []
                    
    result
end

# reduce 83 omitted

# reduce 84 omitted

# reduce 85 omitted

# reduce 86 omitted

# reduce 87 omitted

def _reduce_88(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_89(val, _values, result)
                      result = new_attrasgn(val[0], :[]=, val[2])
                    
    result
end

def _reduce_90(val, _values, result)
                      result = new_attrasgn(val[0], op_to_setter(val[2]))
                    
    result
end

def _reduce_91(val, _values, result)
                      result = new_attrasgn(val[0], op_to_setter(val[2]))
                    
    result
end

def _reduce_92(val, _values, result)
                      result = new_attrasgn(val[0], op_to_setter(val[2]))
                    
    result
end

def _reduce_93(val, _values, result)
                      result = new_colon2(val[0], val[1], val[2])
                    
    result
end

def _reduce_94(val, _values, result)
                      result = new_colon3(val[0], val[1])
                    
    result
end

# reduce 95 omitted

# reduce 96 omitted

def _reduce_97(val, _values, result)
                      result = new_colon3(val[0], val[1])
                    
    result
end

def _reduce_98(val, _values, result)
                      result = new_const(val[0])
                    
    result
end

def _reduce_99(val, _values, result)
                      result = new_colon2(val[0], val[1], val[2])
                    
    result
end

# reduce 100 omitted

# reduce 101 omitted

# reduce 102 omitted

def _reduce_103(val, _values, result)
                      lexer.lex_state = :expr_end
                      result = val[0]
                    
    result
end

def _reduce_104(val, _values, result)
                      lexer.lex_state = :expr_end
                      result = val[0]
                    
    result
end

def _reduce_105(val, _values, result)
                      result = new_sym(val[0])
                    
    result
end

# reduce 106 omitted

def _reduce_107(val, _values, result)
                      result = s(:undef, val[0])
                    
    result
end

def _reduce_108(val, _values, result)
                      result = val[0] << val[2]
                    
    result
end

# reduce 109 omitted

# reduce 110 omitted

# reduce 111 omitted

# reduce 112 omitted

# reduce 113 omitted

# reduce 114 omitted

# reduce 115 omitted

# reduce 116 omitted

# reduce 117 omitted

# reduce 118 omitted

# reduce 119 omitted

# reduce 120 omitted

# reduce 121 omitted

# reduce 122 omitted

# reduce 123 omitted

# reduce 124 omitted

# reduce 125 omitted

# reduce 126 omitted

# reduce 127 omitted

# reduce 128 omitted

# reduce 129 omitted

# reduce 130 omitted

# reduce 131 omitted

# reduce 132 omitted

# reduce 133 omitted

# reduce 134 omitted

# reduce 135 omitted

# reduce 136 omitted

# reduce 137 omitted

# reduce 138 omitted

# reduce 139 omitted

# reduce 140 omitted

# reduce 141 omitted

# reduce 142 omitted

# reduce 143 omitted

# reduce 144 omitted

# reduce 145 omitted

# reduce 146 omitted

# reduce 147 omitted

# reduce 148 omitted

# reduce 149 omitted

# reduce 150 omitted

# reduce 151 omitted

# reduce 152 omitted

# reduce 153 omitted

# reduce 154 omitted

# reduce 155 omitted

# reduce 156 omitted

# reduce 157 omitted

# reduce 158 omitted

# reduce 159 omitted

# reduce 160 omitted

# reduce 161 omitted

# reduce 162 omitted

# reduce 163 omitted

# reduce 164 omitted

# reduce 165 omitted

# reduce 166 omitted

# reduce 167 omitted

# reduce 168 omitted

# reduce 169 omitted

# reduce 170 omitted

# reduce 171 omitted

# reduce 172 omitted

# reduce 173 omitted

# reduce 174 omitted

# reduce 175 omitted

# reduce 176 omitted

# reduce 177 omitted

# reduce 178 omitted

# reduce 179 omitted

# reduce 180 omitted

# reduce 181 omitted

# reduce 182 omitted

def _reduce_183(val, _values, result)
                      result = new_assign(val[0], val[1], val[2])
                    
    result
end

def _reduce_184(val, _values, result)
                      result = new_assign val[0], val[1], s(:rescue_mod, val[2], val[4])
                    
    result
end

def _reduce_185(val, _values, result)
                      result = new_op_asgn val[1], val[0], val[2]
                    
    result
end

def _reduce_186(val, _values, result)
                      result = new_op_asgn1(val[0], val[2], val[4], val[5])
                    
    result
end

def _reduce_187(val, _values, result)
                      result = s(:op_asgn2, val[0], op_to_setter(val[2]), value(val[3]).to_sym, val[4])
                    
    result
end

# reduce 188 omitted

# reduce 189 omitted

# reduce 190 omitted

# reduce 191 omitted

# reduce 192 omitted

def _reduce_193(val, _values, result)
                      result = new_irange(val[0], val[1], val[2])
                    
    result
end

def _reduce_194(val, _values, result)
                      result = new_erange(val[0], val[1], val[2])
                    
    result
end

def _reduce_195(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_196(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_197(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_198(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_199(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_200(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

# reduce 201 omitted

# reduce 202 omitted

def _reduce_203(val, _values, result)
                      result = new_call val[1], [:"+@", []], []
                      result = val[1] if [:int, :float].include? val[1].type
                    
    result
end

def _reduce_204(val, _values, result)
                      result = new_call val[1], [:"-@", []], []
                      if val[1].type == :int
                        val[1][1] = -val[1][1]
                        result = val[1]
                      elsif val[1].type == :float
                        val[1][1] = -val[1][1].to_f
                        result = val[1]
                      end
                    
    result
end

def _reduce_205(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_206(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_207(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_208(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_209(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_210(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_211(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_212(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_213(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_214(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_215(val, _values, result)
                      result = new_not(val[1], new_binary_call(
                                 val[0], ['==', []], val[2]))
                    
    result
end

def _reduce_216(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_217(val, _values, result)
                      result = new_not(val[1], new_binary_call(
                                 val[0], ['=~', []], val[2]))
                    
    result
end

def _reduce_218(val, _values, result)
                      result = new_not(val[0], val[1])
                    
    result
end

def _reduce_219(val, _values, result)
                      result = new_unary_call(val[0], val[1])
                    
    result
end

def _reduce_220(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_221(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_222(val, _values, result)
                      result = new_and(val[0], val[1], val[2])
                    
    result
end

def _reduce_223(val, _values, result)
                      result = new_or(val[0], val[1], val[2])
                    
    result
end

def _reduce_224(val, _values, result)
                      result = s(:defined, val[2])
                    
    result
end

def _reduce_225(val, _values, result)
                      result = new_if(val[1], val[0], val[2], val[4])
                    
    result
end

# reduce 226 omitted

# reduce 227 omitted

def _reduce_228(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_229(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_230(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_231(val, _values, result)
                      val[0] << s(:hash, *val[2])
                      result = val[0]
                    
    result
end

def _reduce_232(val, _values, result)
                      result = [s(:hash, *val[0])]
                    
    result
end

def _reduce_233(val, _values, result)
                      result = []
                    
    result
end

def _reduce_234(val, _values, result)
                      result = val[1]
                    
    result
end

# reduce 235 omitted

# reduce 236 omitted

def _reduce_237(val, _values, result)
                      result = []
                    
    result
end

# reduce 238 omitted

def _reduce_239(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_240(val, _values, result)
                      result = val[0]
                      add_block_pass val[0], val[1]
                    
    result
end

def _reduce_241(val, _values, result)
                      result = [new_hash(nil, val[0], nil)]
                      add_block_pass result, val[1]
                    
    result
end

def _reduce_242(val, _values, result)
                      result = val[0]
                      result << new_hash(nil, val[2], nil)
                    
    result
end

def _reduce_243(val, _values, result)
                      result = []
                      add_block_pass result, val[0]
                    
    result
end

# reduce 244 omitted

# reduce 245 omitted

def _reduce_246(val, _values, result)
                      lexer.cmdarg_push 1
                    
    result
end

def _reduce_247(val, _values, result)
                      lexer.cmdarg_pop
                      result = val[1]
                    
    result
end

# reduce 248 omitted

def _reduce_249(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_250(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_251(val, _values, result)
                      result = new_block_pass(val[0], val[1])
                    
    result
end

def _reduce_252(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_253(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_254(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_255(val, _values, result)
                      result = [new_splat(val[0], val[1])]
                    
    result
end

def _reduce_256(val, _values, result)
                      result = val[0] << val[2]
                    
    result
end

def _reduce_257(val, _values, result)
                      result  = val[0] << new_splat(val[2], val[3])
                    
    result
end

def _reduce_258(val, _values, result)
                      val[0] << val[2]
                      result = s(:array, *val[0])
                    
    result
end

# reduce 259 omitted

def _reduce_260(val, _values, result)
                      result = s(:splat, val[1])
                    
    result
end

# reduce 261 omitted

# reduce 262 omitted

# reduce 263 omitted

# reduce 264 omitted

# reduce 265 omitted

# reduce 266 omitted

# reduce 267 omitted

# reduce 268 omitted

# reduce 269 omitted

def _reduce_270(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_271(val, _values, result)
                      result = s(:begin, val[2])
                      result.line = val[1]
                    
    result
end

def _reduce_272(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_273(val, _values, result)
                      result = new_paren(val[0], val[1], val[2])
                    
    result
end

def _reduce_274(val, _values, result)
                      result = new_colon2(val[0], val[1], val[2])
                    
    result
end

def _reduce_275(val, _values, result)
                      result = new_colon3(val[0], val[1])
                    
    result
end

def _reduce_276(val, _values, result)
                      result = new_call val[0], [:[], []], val[2]
                    
    result
end

def _reduce_277(val, _values, result)
                      result = new_array(val[0], val[1], val[2])
                    
    result
end

def _reduce_278(val, _values, result)
                      result = new_hash(val[0], val[1], val[2])
                    
    result
end

def _reduce_279(val, _values, result)
                      result = new_return(val[0])
                    
    result
end

def _reduce_280(val, _values, result)
                      result = new_yield val[2]
                    
    result
end

def _reduce_281(val, _values, result)
                      result = s(:yield)
                    
    result
end

def _reduce_282(val, _values, result)
                      result = s(:yield)
                    
    result
end

def _reduce_283(val, _values, result)
                      result = s(:defined, val[3])
                    
    result
end

def _reduce_284(val, _values, result)
                      result = new_not(val[0], val[2])
                    
    result
end

def _reduce_285(val, _values, result)
                      result = new_not(val[0], nil)
                    
    result
end

def _reduce_286(val, _values, result)
                      result = new_call(nil, val[0], [])
                      result << val[1]
                    
    result
end

# reduce 287 omitted

def _reduce_288(val, _values, result)
                      val[0] << val[1]
                      result = val[0]
                    
    result
end

def _reduce_289(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_290(val, _values, result)
                      result = new_if(val[0], val[1], val[3], val[4])
                    
    result
end

def _reduce_291(val, _values, result)
                      result = new_if(val[0], val[1], val[4], val[3])
                    
    result
end

def _reduce_292(val, _values, result)
                      lexer.cond_push 1
                      result = lexer.line
                    
    result
end

def _reduce_293(val, _values, result)
                      lexer.cond_pop
                    
    result
end

def _reduce_294(val, _values, result)
                      result = s(:while, val[2], val[5])
                      result.line = val[1]
                    
    result
end

def _reduce_295(val, _values, result)
                      lexer.cond_push 1
                      result = lexer.line
                    
    result
end

def _reduce_296(val, _values, result)
                      lexer.cond_pop
                    
    result
end

def _reduce_297(val, _values, result)
                      result = s(:until, val[2], val[5])
                      result.line = val[1]
                    
    result
end

def _reduce_298(val, _values, result)
                      result = s(:case, val[1], *val[3])
                      result.line = val[1].line
                    
    result
end

def _reduce_299(val, _values, result)
                      result = s(:case, nil, *val[2])
                      # result.line = val[2].line
                    
    result
end

def _reduce_300(val, _values, result)
                      result = s(:case, nil, val[3])
                      # result.line = val[3].line
                    
    result
end

def _reduce_301(val, _values, result)
                      # ...
                    
    result
end

def _reduce_302(val, _values, result)
                      # ...
                    
    result
end

# reduce 303 omitted

def _reduce_304(val, _values, result)
                      # ...
                    
    result
end

def _reduce_305(val, _values, result)
                      result = new_class val[0], val[1], val[2], val[4], val[5]
                    
    result
end

def _reduce_306(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_307(val, _values, result)
                      # ...
                    
    result
end

def _reduce_308(val, _values, result)
                      result = new_sclass(val[0], val[3], val[6], val[7])
                    
    result
end

def _reduce_309(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_310(val, _values, result)
                      # ...
                    
    result
end

def _reduce_311(val, _values, result)
                      result = new_module(val[0], val[2], val[4], val[5])
                    
    result
end

def _reduce_312(val, _values, result)
                      push_scope
                    
    result
end

def _reduce_313(val, _values, result)
                      result = new_def(val[0], nil, val[1], val[3], val[4], val[5])
                      pop_scope
                    
    result
end

def _reduce_314(val, _values, result)
                       lexer.lex_state = :expr_fname
                    
    result
end

def _reduce_315(val, _values, result)
                      push_scope
                    
    result
end

def _reduce_316(val, _values, result)
                      result = new_def(val[0], val[1], val[4], val[6], val[7], val[8])
                      pop_scope
                    
    result
end

def _reduce_317(val, _values, result)
                      result = new_break(val[0])
                    
    result
end

def _reduce_318(val, _values, result)
                      result = s(:next)
                    
    result
end

def _reduce_319(val, _values, result)
                      result = s(:redo)
                    
    result
end

# reduce 320 omitted

# reduce 321 omitted

# reduce 322 omitted

# reduce 323 omitted

# reduce 324 omitted

# reduce 325 omitted

# reduce 326 omitted

# reduce 327 omitted

# reduce 328 omitted

def _reduce_329(val, _values, result)
                      result = new_call nil, :lambda, s(:arglist)
                      result << new_iter(val[0], val[1])
                    
    result
end

def _reduce_330(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_331(val, _values, result)
                      result = nil
                    
    result
end

# reduce 332 omitted

# reduce 333 omitted

def _reduce_334(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_335(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_336(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_337(val, _values, result)
                      result = new_if(val[0], val[1], val[3], val[4])
                    
    result
end

# reduce 338 omitted

def _reduce_339(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_340(val, _values, result)
                      result = s(:block, val[0])
                    
    result
end

def _reduce_341(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_342(val, _values, result)
                      result = new_assign(new_assignable(new_ident(
                                  val[0])), val[1], val[2])
                    
    result
end

# reduce 343 omitted

def _reduce_344(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_345(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_346(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_347(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_348(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_349(val, _values, result)
                      nil
                    
    result
end

def _reduce_350(val, _values, result)
                      result = new_block_args(val[0], val[2], val[4], val[5])
                    
    result
end

def _reduce_351(val, _values, result)
                      result = new_block_args(val[0], val[2], nil, val[3])
                    
    result
end

def _reduce_352(val, _values, result)
                      result = new_block_args(val[0], nil, val[2], val[3])
                    
    result
end

def _reduce_353(val, _values, result)
                      result = new_block_args(val[0], nil, nil, nil)
                    
    result
end

def _reduce_354(val, _values, result)
                      result = new_block_args(val[0], nil, nil, val[1])
                    
    result
end

def _reduce_355(val, _values, result)
                      result = new_block_args(nil, val[0], val[2], val[3])
                    
    result
end

def _reduce_356(val, _values, result)
                      result = new_block_args(nil, val[0], nil, val[1])
                    
    result
end

def _reduce_357(val, _values, result)
                      result = new_block_args(nil, nil, val[0], val[1])
                    
    result
end

def _reduce_358(val, _values, result)
                      result = new_block_args(nil, nil, nil, val[0])
                    
    result
end

def _reduce_359(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_360(val, _values, result)
                      result = new_iter val[2], val[3]
                      result.line = val[1]
                      pop_scope
                    
    result
end

def _reduce_361(val, _values, result)
                      val[0] << val[1]
                      result = val[0]
                    
    result
end

# reduce 362 omitted

# reduce 363 omitted

def _reduce_364(val, _values, result)
                      result = new_call(nil, val[0], val[1])
                    
    result
end

def _reduce_365(val, _values, result)
                      result = new_call(val[0], val[2], val[3])
                    
    result
end

def _reduce_366(val, _values, result)
                      result = new_call(val[0], [:call, []], val[2])
                    
    result
end

def _reduce_367(val, _values, result)
                      result = new_call(val[0], val[2], val[3])
                    
    result
end

def _reduce_368(val, _values, result)
                      result = new_call(val[0], val[2])
                    
    result
end

def _reduce_369(val, _values, result)
                      result = new_super(val[0], val[1])
                    
    result
end

def _reduce_370(val, _values, result)
                      result = new_super(val[0], nil)
                    
    result
end

def _reduce_371(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_372(val, _values, result)
                      result = new_iter val[2], val[3]
                      result.line = val[1]
                      pop_scope
                    
    result
end

def _reduce_373(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_374(val, _values, result)
                      result = new_iter val[2], val[3]
                      result.line = val[1]
                      pop_scope
                    
    result
end

def _reduce_375(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_376(val, _values, result)
                      part = s(:when, s(:array, *val[2]), val[4])
                      #part.line = val[2].line
                      result = [part]
                      result.push *val[5] if val[5]
                    
    result
end

def _reduce_377(val, _values, result)
                      result = [val[0]]
                    
    result
end

# reduce 378 omitted

def _reduce_379(val, _values, result)
                      exc = val[1] || s(:array)
                      exc << new_assign(val[2], val[2], s(:gvar, '$!'.intern)) if val[2]
                      result = [s(:resbody, exc, val[4])]
                      result.push val[5].first if val[5]
                    
    result
end

def _reduce_380(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_381(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

# reduce 382 omitted

# reduce 383 omitted

def _reduce_384(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_385(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_386(val, _values, result)
                      result = val[1].nil? ? s(:nil) : val[1]
                    
    result
end

# reduce 387 omitted

# reduce 388 omitted

# reduce 389 omitted

# reduce 390 omitted

def _reduce_391(val, _values, result)
                      result = new_str val[0]
                    
    result
end

# reduce 392 omitted

# reduce 393 omitted

def _reduce_394(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_395(val, _values, result)
                      result = s(:str, value(val[0]))
                    
    result
end

def _reduce_396(val, _values, result)
                      result = new_xstr val[1]
                    
    result
end

def _reduce_397(val, _values, result)
                      result = new_regexp val[1], val[2]
                    
    result
end

def _reduce_398(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_399(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_400(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_401(val, _values, result)
                      part = val[1]
                      part = s(:dstr, "", val[1]) if part.type == :evstr
                      result = val[0] << part
                    
    result
end

def _reduce_402(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_403(val, _values, result)
                      result = val[0].concat([val[1]])
                    
    result
end

def _reduce_404(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_405(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_406(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_407(val, _values, result)
                      result = val[0] << s(:str, value(val[1]))
                    
    result
end

def _reduce_408(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_409(val, _values, result)
                      result = str_append val[0], val[1]
                    
    result
end

def _reduce_410(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_411(val, _values, result)
                      result = str_append val[0], val[1]
                    
    result
end

def _reduce_412(val, _values, result)
                      result = new_str_content(val[0])
                    
    result
end

def _reduce_413(val, _values, result)
                      result = lexer.strterm
                      lexer.strterm = nil
                    
    result
end

def _reduce_414(val, _values, result)
                      lexer.strterm = val[1]
                      result = new_evstr(val[2])
                    
    result
end

def _reduce_415(val, _values, result)
                      lexer.cond_push 0
                      lexer.cmdarg_push 0
                      result = lexer.strterm
                      lexer.strterm = nil
                      lexer.lex_state = :expr_beg
                    
    result
end

def _reduce_416(val, _values, result)
                      lexer.strterm = val[1]
                      lexer.cond_lexpop
                      lexer.cmdarg_lexpop
                      result = new_evstr(val[2])
                    
    result
end

def _reduce_417(val, _values, result)
                      result = new_gvar(val[0])
                    
    result
end

def _reduce_418(val, _values, result)
                      result = new_ivar(val[0])
                    
    result
end

def _reduce_419(val, _values, result)
                      result = new_cvar(val[0])
                    
    result
end

# reduce 420 omitted

def _reduce_421(val, _values, result)
                      result = new_sym(val[1])
                      lexer.lex_state = :expr_end
                    
    result
end

def _reduce_422(val, _values, result)
                      result = new_sym(val[0])
                    
    result
end

# reduce 423 omitted

# reduce 424 omitted

# reduce 425 omitted

# reduce 426 omitted

def _reduce_427(val, _values, result)
                      result = new_dsym val[1]
                    
    result
end

def _reduce_428(val, _values, result)
                      result = new_int(val[0])
                    
    result
end

def _reduce_429(val, _values, result)
                      result = new_float(val[0])
                    
    result
end

# reduce 430 omitted

# reduce 431 omitted

def _reduce_432(val, _values, result)
                      result = new_ident(val[0])
                    
    result
end

def _reduce_433(val, _values, result)
                      result = new_ivar(val[0])
                    
    result
end

def _reduce_434(val, _values, result)
                      result = new_gvar(val[0])
                    
    result
end

def _reduce_435(val, _values, result)
                      result = new_const(val[0])
                    
    result
end

def _reduce_436(val, _values, result)
                      result = new_cvar(val[0])
                    
    result
end

def _reduce_437(val, _values, result)
                      result = new_nil(val[0])
                    
    result
end

def _reduce_438(val, _values, result)
                      result = new_self(val[0])
                    
    result
end

def _reduce_439(val, _values, result)
                      result = new_true(val[0])
                    
    result
end

def _reduce_440(val, _values, result)
                      result = new_false(val[0])
                    
    result
end

def _reduce_441(val, _values, result)
                      result = new___FILE__(val[0])
                    
    result
end

def _reduce_442(val, _values, result)
                      result = new___LINE__(val[0])
                    
    result
end

def _reduce_443(val, _values, result)
                      result = new_var_ref(val[0])
                    
    result
end

def _reduce_444(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_445(val, _values, result)
                      result = s(:nth_ref, value(val[0]))
                    
    result
end

# reduce 446 omitted

def _reduce_447(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_448(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_449(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_450(val, _values, result)
                      result = val[1]
                      lexer.lex_state = :expr_beg
                    
    result
end

def _reduce_451(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_452(val, _values, result)
                      result = new_args(val[0], val[2], val[4], val[5])
                    
    result
end

def _reduce_453(val, _values, result)
                      result = new_args(val[0], val[2], nil, val[3])
                    
    result
end

def _reduce_454(val, _values, result)
                      result = new_args(val[0], nil, val[2], val[3])
                    
    result
end

def _reduce_455(val, _values, result)
                      result = new_args(val[0], nil, nil, val[1])
                    
    result
end

def _reduce_456(val, _values, result)
                      result = new_args(nil, val[0], val[2], val[3])
                    
    result
end

def _reduce_457(val, _values, result)
                      result = new_args(nil, val[0], nil, val[1])
                    
    result
end

def _reduce_458(val, _values, result)
                      result = new_args(nil, nil, val[0], val[1])
                    
    result
end

def _reduce_459(val, _values, result)
                      result = new_args(nil, nil, nil, val[0])
                    
    result
end

def _reduce_460(val, _values, result)
                      result = new_args(nil, nil, nil, nil)
                    
    result
end

# reduce 461 omitted

def _reduce_462(val, _values, result)
                      result = value(val[0]).to_sym
                      scope.add_local result
                    
    result
end

def _reduce_463(val, _values, result)
                      raise 'formal argument cannot be a constant'
                    
    result
end

def _reduce_464(val, _values, result)
                      raise 'formal argument cannot be an instance variable'
                    
    result
end

def _reduce_465(val, _values, result)
                      raise 'formal argument cannot be a class variable'
                    
    result
end

def _reduce_466(val, _values, result)
                      raise 'formal argument cannot be a global variable'
                    
    result
end

def _reduce_467(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_468(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_469(val, _values, result)
                      result = s(:lasgn, val[0])
                    
    result
end

# reduce 470 omitted

def _reduce_471(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

def _reduce_472(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

# reduce 473 omitted

# reduce 474 omitted

# reduce 475 omitted

# reduce 476 omitted

# reduce 477 omitted

def _reduce_478(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_479(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_480(val, _values, result)
                      result = new_assign(new_assignable(new_ident(val[0])), val[1], val[2])
                    
    result
end

def _reduce_481(val, _values, result)
                      result = s(:block, val[0])
                    
    result
end

def _reduce_482(val, _values, result)
                      result = val[0]
                      val[0] << val[2]
                    
    result
end

# reduce 483 omitted

# reduce 484 omitted

def _reduce_485(val, _values, result)
                      result = "*#{value(val[1])}".to_sym
                    
    result
end

def _reduce_486(val, _values, result)
                      result = :"*"
                    
    result
end

# reduce 487 omitted

# reduce 488 omitted

def _reduce_489(val, _values, result)
                      result = "&#{value(val[1])}".to_sym
                    
    result
end

def _reduce_490(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_491(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_492(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_493(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_494(val, _values, result)
                      result = []
                    
    result
end

def _reduce_495(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_496(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_497(val, _values, result)
                      result = val[0].push(*val[2])
                    
    result
end

def _reduce_498(val, _values, result)
                      result = [val[0], val[2]]
                    
    result
end

def _reduce_499(val, _values, result)
                      result = [new_sym(val[0]), val[1]]
                    
    result
end

# reduce 500 omitted

# reduce 501 omitted

# reduce 502 omitted

# reduce 503 omitted

# reduce 504 omitted

# reduce 505 omitted

# reduce 506 omitted

# reduce 507 omitted

# reduce 508 omitted

# reduce 509 omitted

# reduce 510 omitted

# reduce 511 omitted

# reduce 512 omitted

# reduce 513 omitted

# reduce 514 omitted

# reduce 515 omitted

# reduce 516 omitted

# reduce 517 omitted

# reduce 518 omitted

# reduce 519 omitted

# reduce 520 omitted

# reduce 521 omitted

# reduce 522 omitted

def _reduce_523(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module Opal
