#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.10
# from Racc grammer file "".
#

require 'racc/parser.rb'
module Opal
  class Parser < Racc::Parser


##### State transition tables begin ###

clist = [
'63,64,65,8,51,-82,-84,689,57,58,202,203,269,61,588,59,60,62,23,24,66',
'67,-83,432,202,203,22,28,27,89,88,90,91,576,269,17,581,521,202,203,523',
'7,41,6,9,93,92,83,50,85,84,86,87,94,95,-506,81,82,689,38,39,37,704,-64',
'261,521,202,203,523,-82,-84,262,552,-95,264,73,587,760,657,552,-90,36',
'758,74,30,-505,-83,52,552,202,203,476,32,578,577,268,40,100,-92,552',
'-75,689,99,100,18,688,-82,-84,99,79,73,75,76,77,78,-82,-84,268,74,80',
'63,64,65,-83,51,304,476,56,57,58,618,53,-83,61,54,59,60,62,255,256,66',
'67,614,269,264,-91,254,287,291,89,88,90,91,304,100,216,688,521,576,99',
'520,552,41,617,703,93,92,83,50,85,84,86,87,94,95,509,81,82,-442,38,39',
'37,100,100,551,-442,700,99,99,100,-90,551,-90,698,99,-90,737,100,100',
'688,551,207,99,99,211,264,736,52,-92,100,-92,551,508,-92,99,199,40,576',
'578,577,-505,576,200,510,215,576,268,720,-509,79,73,75,76,77,78,-509',
'-509,-509,74,80,-446,-509,-509,699,-509,-434,-92,56,558,264,559,53,-434',
'-509,54,-91,-90,-91,618,763,-91,559,-94,-509,-509,-255,-509,-509,-509',
'-509,-509,100,198,551,843,100,99,578,577,574,99,578,577,579,820,578',
'577,589,618,722,-88,617,-509,-509,-509,-509,-509,-509,-509,-509,-509',
'-509,-509,-509,-509,-509,-274,618,-509,-509,-509,-446,604,-274,-274',
'-274,-509,599,224,-274,-274,617,-274,-509,224,-509,224,-509,-509,-509',
'-509,-509,-509,-509,-89,-509,-509,-509,576,763,617,-274,-274,508,-274',
'-274,-274,-274,-274,-443,-509,-509,-80,-83,469,-509,-443,-445,-84,889',
'-509,-88,-91,-63,-445,769,890,-92,-503,770,-274,-274,-274,-274,-274',
'-274,-274,-274,-274,-274,-274,-274,-274,-274,-86,598,-274,-274,-274',
'428,607,340,339,-94,-274,-275,429,-440,578,577,583,-274,-275,-274,-440',
'-274,-274,-274,-274,-274,-274,-274,-437,-274,-445,-274,888,700,-437',
'-437,511,528,529,535,772,-437,-82,512,-274,-274,-503,-85,634,-274,521',
'-90,538,523,-274,635,-93,63,64,65,8,51,430,304,-276,57,58,-503,-275',
'773,61,-276,59,60,62,23,24,66,67,726,202,203,774,22,28,27,89,88,90,91',
'699,-437,17,430,538,304,201,777,7,41,224,9,93,92,83,50,85,84,86,87,94',
'95,634,81,82,-274,38,39,37,635,-81,-276,-274,-268,493,-275,-445,-506',
'754,-89,-268,221,-275,-445,100,223,222,-87,36,99,-439,30,763,-275,52',
'500,-95,-439,571,32,-275,786,501,40,787,572,-322,-276,-268,304,467,18',
'465,-322,-276,-268,79,73,75,76,77,78,-274,340,339,74,80,-507,-507,-507',
'-268,-507,-275,-445,56,-507,-507,753,53,696,-507,54,-507,-507,-507,-507',
'-507,-507,-507,524,-275,525,499,-507,-507,-507,-507,-507,-507,-507,224',
'-444,-507,-322,-276,-268,100,212,-444,-507,857,99,-507,-507,-507,-507',
'-507,-507,-507,-507,-507,-507,671,-507,-507,-274,-507,-507,-507,782',
'763,221,-274,-274,-441,223,222,-506,395,100,-274,-441,397,396,99,-506',
'297,298,-507,202,203,-507,-507,692,-507,337,336,340,339,-507,100,-507',
'434,-507,857,99,433,337,336,340,339,-507,782,763,504,505,-507,-507,-507',
'-507,-507,-507,-274,559,476,-507,-507,-508,-508,-508,-274,-508,100,-507',
'-507,-508,-508,99,-507,469,-508,-507,-508,-508,-508,-508,-508,-508,-508',
'337,336,340,339,-508,-508,-508,-508,-508,-508,-508,802,540,-508,332',
'330,329,331,804,807,-508,671,808,-508,-508,-508,-508,-508,-508,-508',
'-508,-508,-508,431,-508,-508,810,-508,-508,-508,540,494,332,330,329',
'331,684,812,813,543,814,94,95,681,-256,679,264,779,532,-508,669,535',
'-508,-508,536,-508,337,336,340,339,-508,538,-508,398,-508,665,540,543',
'332,330,329,331,-508,664,663,546,821,-508,-508,-508,-508,-508,-508,822',
'823,264,-508,-508,63,64,65,264,51,547,-508,-508,57,58,243,-508,385,61',
'-508,59,60,62,255,256,66,67,826,827,657,548,254,28,27,89,88,90,91,829',
'540,216,332,330,329,331,376,-254,41,833,304,93,92,83,50,85,84,86,87',
'94,95,657,81,82,514,38,39,37,224,540,838,332,330,329,331,840,224,543',
'102,103,104,105,106,373,748,546,352,207,649,387,211,-505,846,52,647',
'-75,850,851,253,221,304,646,40,223,222,219,220,221,560,747,215,223,222',
'219,220,79,73,75,76,77,78,304,861,-257,74,80,63,64,65,8,51,644,258,56',
'57,58,495,53,862,61,54,59,60,62,23,24,66,67,864,296,243,295,22,28,27',
'89,88,90,91,502,538,17,102,103,104,105,106,7,41,636,9,93,92,83,50,85',
'84,86,87,94,95,874,81,82,875,38,39,37,224,102,103,104,105,106,243,304',
'879,273,881,882,807,807,808,631,238,239,224,36,224,224,30,224,891,52',
'582,197,469,196,32,221,897,227,40,223,222,219,220,264,195,225,18,226',
'663,194,586,79,73,75,76,77,78,597,-254,107,74,80,63,64,65,8,51,907,807',
'56,57,58,909,53,910,61,54,59,60,62,23,24,66,67,467,596,96,593,22,28',
'27,89,88,90,91,739,590,17,,,,,,7,41,,9,93,92,83,50,85,84,86,87,94,95',
',81,82,,38,39,37,224,-526,-526,-526,-526,230,232,,,-526,-526,,,,,,238',
'239,,36,,,30,,,52,,,,,32,221,,227,40,223,222,219,220,231,229,225,18',
'226,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54',
'59,60,62,255,256,66,67,,,,,254,28,27,89,88,90,91,,,216,,,,,,,41,,,93',
'92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,224,-526,-526,-526,-526',
'230,232,,,-526,-526,,,,,,238,239,,207,,,211,,,52,,,,,253,221,,227,40',
'223,222,219,220,231,229,225,215,226,,,,79,73,75,76,77,78,,,,74,80,63',
'64,65,8,51,,258,56,57,58,,53,,61,54,59,60,62,23,24,66,67,,,,,22,28,27',
'89,88,90,91,,,17,,,,,,7,41,,9,93,92,83,50,85,84,86,87,94,95,,81,82,',
'38,39,37,224,,,,,,,,,,,,,,,,238,239,,36,,,30,,,52,,,,,32,221,,227,40',
'223,222,219,220,,,225,18,226,,,,79,73,75,76,77,78,,,,74,80,63,64,65',
',51,,,56,57,58,,53,,61,54,59,60,62,255,256,66,67,,,,,254,287,291,89',
'88,90,91,,,216,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39',
'37,224,,,,,,,,,,,,,,,,238,239,,207,,,211,,,52,,,,,623,221,251,227,40',
'223,222,219,220,,,225,215,226,,,,79,73,75,76,77,78,,,,74,80,63,64,65',
'8,51,,,56,57,58,,53,,61,54,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90',
'91,,,17,,,,,,7,41,,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37',
'224,228,233,234,235,230,232,240,,236,237,,,,,,238,239,,36,,,30,,,52',
',,,,32,221,,227,40,223,222,219,220,231,229,225,18,226,,,,79,73,75,76',
'77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,23,24,66',
'67,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87',
'94,95,,81,82,,38,39,37,224,-526,-526,-526,-526,230,232,,,-526,-526,',
',,,,238,239,,207,,,211,212,,52,,,,,,221,,227,40,223,222,219,220,231',
'229,225,18,226,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58',
',53,,61,54,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,216,,,,,',
',41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,224,-526,-526,-526',
'-526,230,232,,,-526,-526,,,,,,238,239,,207,,,211,,,52,,,,,,221,,227',
'40,223,222,219,220,231,229,225,215,226,,,,79,73,75,76,77,78,,,,74,80',
'63,64,65,8,51,,,56,57,58,,53,,61,54,59,60,62,23,24,66,67,,,,,22,28,27',
'89,88,90,91,,,17,,,,,,7,41,,9,93,92,83,50,85,84,86,87,94,95,,81,82,',
'38,39,37,224,,,,,,,,,,,,,,,,238,239,,36,,,30,,,52,,,,,32,221,,227,40',
'223,222,219,220,,,225,18,226,,,,79,73,75,76,77,78,,,,74,80,63,64,65',
',51,,,56,57,58,,53,,61,54,59,60,62,255,256,66,67,,,,,254,287,291,89',
'88,90,91,,,216,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39',
'37,224,228,233,234,235,230,232,,,236,237,,,,,,238,239,,207,,,211,,,52',
',,,,623,221,,227,40,223,222,219,220,231,229,225,215,226,,,,79,73,75',
'76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,255,256',
'66,67,,,,,254,28,27,89,88,90,91,,,216,,,,,,,41,,,93,92,83,50,85,84,86',
'87,94,95,,81,82,,38,39,37,224,-526,-526,-526,-526,230,232,,,-526,-526',
',,,,,238,239,,207,,,211,,,52,,,,,253,221,251,227,40,223,222,219,220',
'231,229,225,215,226,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,258',
'56,57,58,,53,,61,54,59,60,62,255,256,66,67,,,,,254,28,27,89,88,90,91',
',,216,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,224',
'228,233,234,235,230,232,240,241,236,237,,-526,-526,,,238,239,,207,,',
'211,,,52,,,,,253,221,251,227,40,223,222,219,220,231,229,225,215,226',
',,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,258,56,57,58,,53,,61,54',
'59,60,62,255,256,66,67,,,,,254,28,27,89,88,90,91,,,216,,,,,,,41,,,93',
'92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,224,228,233,234,235,230',
'232,240,241,236,237,,-526,-526,,,238,239,,207,,,211,,,52,,,,,253,221',
'251,227,40,223,222,219,220,231,229,225,215,226,,,,79,73,75,76,77,78',
',,,74,80,63,64,65,,51,,258,56,57,58,,53,,61,54,59,60,62,23,24,66,67',
',,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87,94',
'95,,81,82,,38,39,37,224,-526,-526,-526,-526,230,232,,,-526,-526,,,,',
',238,239,,207,,,211,,,52,,,,,,221,,227,40,223,222,219,220,231,229,225',
'18,226,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61',
'54,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93',
'92,83,50,85,84,86,87,94,95,224,81,82,,38,39,37,,,,,,,,,,238,239,,,,',
',,,,207,,,211,,221,52,,,223,222,219,220,,,40,,,,,,,,18,,,,,79,73,75',
'76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,255,256',
'66,67,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,83,50,85,84',
'86,87,94,95,224,81,82,,38,39,37,,,,,,,,,,238,239,,,,,,,,,207,,,211,',
'221,52,227,,223,222,219,220,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,',
',74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,255,256,66,67,,,',
',254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,83,50,85,84,86,87,94',
'95,224,81,82,,38,39,37,,,,,,,,,,238,239,,,,,,,,,207,,,211,,221,52,227',
',223,222,219,220,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,63,64',
'65,8,51,,,56,57,58,,53,,61,54,59,60,62,23,24,66,67,,,,,22,28,27,89,88',
'90,91,,,17,,,,,,7,41,,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39',
'37,,,,,,,,,,,,,,,,,,,,36,,,277,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73',
'75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,255',
'256,66,67,,,,,254,287,291,89,88,90,91,,,216,,,,,,,288,,,93,92,83,50',
'85,84,86,87,94,95,,81,82,,,323,292,332,330,329,331,,,,,,,,,,,,,,,,285',
',,282,,,52,,,,,281,,,,,334,,,,,,,,337,336,340,339,79,73,75,76,77,78',
',741,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,255,256,66,67',
',,,,254,287,291,89,88,90,91,,,216,,,,,,,288,,,93,92,83,50,85,84,86,87',
'94,95,,81,82,,,714,292,332,330,329,331,,,,,,,,,,,,,,,,285,,,211,,,52',
',,,,,,,,,334,708,,,,,,,337,336,340,339,79,73,75,76,77,78,,,,74,80,63',
'64,65,294,51,,,56,57,58,,53,,61,54,59,60,62,255,256,66,67,,,,,254,287',
'291,89,88,90,91,,,216,,,,,,,288,,,93,92,83,50,85,84,86,87,94,95,,81',
'82,,,323,292,332,330,329,331,,,,,,,,,,,,,,,,869,,,211,,,52,,,,,,,,,',
'334,318,,,,,,,337,336,340,339,79,73,75,76,77,78,,,,74,80,63,64,65,,51',
',,56,57,58,,53,,61,54,59,60,62,255,256,66,67,,,,,254,287,291,89,88,90',
'91,,,216,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,',
',,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75',
'76,77,78,,,,74,80,63,64,65,8,51,,,56,57,58,,53,,61,54,59,60,62,23,24',
'66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,83,50,85,84,86',
'87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,',
'40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58',
',53,,61,54,59,60,62,255,256,66,67,,,,,254,287,291,89,88,90,91,,,216',
',,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,',
',,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78',
',,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,255,256,66,67,',
',,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,83,50,85,84,86,87',
'94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40',
',,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53',
',61,54,59,60,62,255,256,66,67,,,,,254,287,291,89,88,90,91,,,216,,,,',
',,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,',
',,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74',
'80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,255,256,66,67,,,,,254',
'287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,',
'215,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54',
'59,60,62,255,256,66,67,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,',
'93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,207',
',,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,63,64',
'65,8,51,,,56,57,58,,53,,61,54,59,60,62,23,24,66,67,,,,,22,28,27,89,88',
'90,91,,,17,,,,,,7,41,,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39',
'37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73',
'75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,255',
'256,66,67,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,83,50,85',
'84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,',
',,623,,251,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51',
',258,56,57,58,,53,,61,54,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90',
'91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,',
',,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76',
'77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,255,256,66',
'67,,,,,254,28,27,89,88,90,91,,,216,,,,,,,41,,,93,92,83,50,85,84,86,87',
'94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,253,,,',
'40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,258,56,57',
'58,,53,,61,54,59,60,62,255,256,66,67,,,,,254,287,291,89,88,90,91,,,216',
',,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,',
',,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78',
',,,74,80,63,64,65,,51,,258,56,57,58,,53,,61,54,59,60,62,255,256,66,67',
',,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,83,50,85,84,86,87',
'94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,251,',
'40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,258,56,57',
'58,,53,,61,54,59,60,62,255,256,66,67,,,,,254,287,291,89,88,90,91,,,216',
',,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,',
',,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78',
',,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,23,24,66,67,,,',
',22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95',
',81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,',
',18,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54',
'59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92',
'83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,207,,,211',
',,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51',
',,56,57,58,,53,,61,54,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91',
',,17,,,,,594,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,224',
'228,233,234,235,230,232,240,241,236,237,,217,218,,,238,239,,207,,,211',
',,52,,,,,,221,,227,40,223,222,219,220,231,229,225,18,226,,,,79,73,75',
'76,77,78,,,,74,80,100,242,,-227,,99,,56,63,64,65,53,51,,54,,57,58,,',
',61,,59,60,62,255,256,66,67,,,,,254,287,291,89,88,90,91,,,216,,,,,,',
'288,,,93,92,83,50,85,84,86,87,94,95,,81,82,,,714,292,332,330,329,331',
',,,,,,,,,,,,,,,285,,,30,,,52,,,,,32,,,,,334,,,,,,,,337,336,340,339,79',
'73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62',
'23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,83,50,85',
'84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,207,,,211,,640,52',
',,,,,,251,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51',
',,56,57,58,,53,,61,54,59,60,62,255,256,66,67,,,,,254,287,291,89,88,90',
'91,,,216,,,,,,,288,,,93,92,83,50,85,84,561,87,94,95,,81,82,,,714,292',
'332,330,329,331,,,,,,,,,,,,,,,,562,,,211,,,52,,,,,,,,,,334,,,,,,,,337',
'336,340,339,79,73,75,76,77,78,,,,74,80,63,64,65,8,51,,,56,57,58,,53',
',61,54,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41',
',9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,',
',36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80',
'63,64,65,8,51,,,56,57,58,,53,,61,54,59,60,62,23,24,66,67,,,,,22,28,27',
'89,88,90,91,,,17,,,,,,7,41,,9,93,92,83,50,85,84,86,87,94,95,,81,82,',
'38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,',
'79,73,75,76,77,78,,,,74,80,63,64,65,8,51,,,56,57,58,,53,,61,54,59,60',
'62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,83,50',
'85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,',
',,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,',
'56,57,58,,53,,61,54,59,60,62,255,256,66,67,,,,,254,287,291,89,88,90',
'91,,,216,,,,,,,288,,,93,92,83,50,85,84,561,87,94,95,,81,82,,,323,292',
'332,330,329,331,,,,,,,,,,,,,,,,562,,,211,,,52,,,,,,,,,,334,,531,,,,',
',337,336,340,339,79,73,75,76,77,78,,,,74,80,-502,-502,-502,,-502,,,56',
'-502,-502,,53,,-502,54,-502,-502,-502,-502,-502,-502,-502,,-502,,,-502',
'-502,-502,-502,-502,-502,-502,,,-502,,,,,,,-502,,,-502,-502,-502,-502',
'-502,-502,-502,-502,-502,-502,,-502,-502,,-502,-502,-502,,,,,,,,,,,',
',,,,,,,,-502,,,-502,-502,,-502,,,,,-502,,-502,,-502,,,,,,,,-502,,-502',
',,-502,-502,-502,-502,-502,-502,,,,-502,-502,-503,-503,-503,,-503,,-502',
'-502,-503,-503,,-502,,-503,-502,-503,-503,-503,-503,-503,-503,-503,',
'-503,,,-503,-503,-503,-503,-503,-503,-503,,,-503,,,,,,,-503,,,-503,-503',
'-503,-503,-503,-503,-503,-503,-503,-503,,-503,-503,,-503,-503,-503,',
',,,,,,,,,,,,,,,,,,-503,,,-503,-503,,-503,,,,,-503,,-503,,-503,,,,,,',
',-503,,-503,,,-503,-503,-503,-503,-503,-503,,,,-503,-503,63,64,65,,51',
',-503,-503,57,58,,-503,,61,-503,59,60,62,255,256,66,67,,,,,254,287,291',
'89,88,90,91,,,216,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38',
'39,37,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,253,,,,40,,,,,,,,215,,,',
',79,73,75,76,77,78,,,,74,80,63,64,65,8,51,,,56,57,58,,53,,61,54,59,60',
'62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,6,9,93,92,83',
'50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52',
',,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,387',
',56,57,58,,53,,61,54,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,',
',17,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,',
',,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77',
'78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,23,24,66,67',
',,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87,94',
'95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,',
',,,,18,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61',
'54,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93',
'92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,207,',
',211,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,63,64',
'65,,51,,,56,57,58,,53,,61,54,59,60,62,23,24,66,67,,,,,22,28,27,89,88',
'90,91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37',
',,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75',
'76,77,78,,,,74,80,63,64,65,8,51,,,56,57,58,,53,,61,54,59,60,62,23,24',
'66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,83,50,85,84,86',
'87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,',
'40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,8,51,,,56,57,58',
',53,,61,54,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,7',
'41,6,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,',
',,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74',
'80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,255,256,66,67,,,,,254',
'287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,',
'215,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,8,51,,,56,57,58,,53,,61',
'54,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93',
'92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,',
'30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,63,64',
'65,,51,387,,56,57,58,,53,,61,54,59,60,62,255,256,66,67,,,,,254,287,291',
'89,88,90,91,,,216,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38',
'39,37,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79',
'73,75,76,77,78,,,,74,80,63,64,65,8,51,,,56,57,58,,53,,61,54,59,60,62',
'23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,83,50,85',
'84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,',
'32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56',
'57,58,,53,,61,54,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,216',
',,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,',
',,,,,,,,,207,,,211,,,52,,,,,404,,,,40,,,,,,,,215,,,,,79,73,75,76,77',
'78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,23,24,66,67',
',,,,22,28,27,89,88,90,91,,,216,,,,,,,41,,,93,92,83,50,85,84,86,87,94',
'95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,404,,,,40',
',,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53',
',61,54,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,216,,,,,,,41',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,',
'207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80',
'63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,255,256,66,67,,,,,254,28',
'27,89,88,90,91,,,216,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82',
',38,39,37,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,253,,,,40,,,,,,,,215',
',,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,258,56,57,58,,53,,61,54',
'59,60,62,255,256,66,67,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,',
'93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,207',
',,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,63,64',
'65,,51,,,56,57,58,,53,,61,54,59,60,62,23,24,66,67,,,,,22,28,27,89,88',
'90,91,,,216,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37',
',,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75',
'76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,23,24',
'66,67,,,,,22,28,27,89,88,90,91,,,216,,,,,,,41,,,93,92,83,50,85,84,86',
'87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,',
'40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58',
',53,,61,54,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,',
'41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,',
',,,207,,,211,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80',
'63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,23,24,66,67,,,,,22,28,27',
'89,88,90,91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38',
'39,37,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,18,,,,,79',
'73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62',
'255,256,66,67,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,83',
'50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,207,,,211,',
',52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,8',
'51,,,56,57,58,,53,,61,54,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90',
'91,,,17,,,,,,7,41,,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37',
',,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75',
'76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,255,256',
'66,67,,,,,254,287,291,89,88,90,91,,,216,,,,,,,288,,,93,92,83,50,85,84',
'86,87,94,95,,81,82,,,323,292,332,330,329,331,,,,,,,,,,,,,,,,285,,,282',
',,52,,,,,,,,,,334,,,,,,,,337,336,340,339,79,73,75,76,77,78,,,,74,80',
'63,64,65,8,51,,,56,57,58,,53,,61,54,59,60,62,23,24,66,67,,,,,22,28,27',
'89,88,90,91,,,17,,,,,,7,41,,9,93,92,83,50,85,84,86,87,94,95,,81,82,',
'38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,',
'79,73,75,76,77,78,,,,74,80,63,64,65,8,51,,,56,57,58,,53,,61,54,59,60',
'62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,83,50',
'85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,',
',,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,',
'56,57,58,,53,,61,54,59,60,62,255,256,66,67,,,,,254,28,27,89,88,90,91',
',,216,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,',
',,,,,,,,,,,,,,,207,,,211,,,52,,,,,253,,,,40,,,,,,,,215,,,,,79,73,75',
'76,77,78,,,,74,80,63,64,65,8,51,,258,56,57,58,,53,,61,54,59,60,62,23',
'24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,83,50,85,84',
'86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32',
',,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57',
'58,,53,,61,54,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,',
',,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,',
',,,,,,207,,,211,,436,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,',
',,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,255,256,66,67,,',
',,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,83,50,85,84,86,87,94',
'95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,',
',,,,215,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,',
'61,54,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,',
'93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,207',
',,211,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,63,64',
'65,,51,,,56,57,58,,53,,61,54,59,60,62,255,256,66,67,,,,,254,287,291',
'89,88,90,91,,,216,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38',
'39,37,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79',
'73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62',
'255,256,66,67,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,83',
'50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,207,,,211,',
',52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51',
',,56,57,58,,53,,61,54,59,60,62,255,256,66,67,,,,,254,287,291,89,88,90',
'91,,,216,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,',
',,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75',
'76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,255,256',
'66,67,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,83,50,85,84',
'86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,',
',,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57',
'58,,53,,61,54,59,60,62,255,256,66,67,,,,,254,287,291,89,88,90,91,,,216',
',,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,',
',,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78',
',,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,255,256,66,67,',
',,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,83,50,85,84,86,87',
'94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40',
',,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53',
',61,54,59,60,62,255,256,66,67,,,,,254,287,291,89,88,90,91,,,216,,,,',
',,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,',
',,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74',
'80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,255,256,66,67,,,,,254',
'287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,',
'215,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54',
'59,60,62,255,256,66,67,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,',
'93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,207',
',,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,63,64',
'65,,51,,,56,57,58,,53,,61,54,59,60,62,255,256,66,67,,,,,254,287,291',
'89,88,90,91,,,216,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38',
'39,37,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79',
'73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62',
'255,256,66,67,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,83',
'50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,207,,,211,',
',52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51',
',,56,57,58,,53,,61,54,59,60,62,255,256,66,67,,,,,254,287,291,89,88,90',
'91,,,216,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,',
',,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75',
'76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,255,256',
'66,67,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,83,50,85,84',
'86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,',
',,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57',
'58,,53,,61,54,59,60,62,255,256,66,67,,,,,254,287,291,89,88,90,91,,,216',
',,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,',
',,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78',
',,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,255,256,66,67,',
',,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,83,50,85,84,86,87',
'94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40',
',,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53',
',61,54,59,60,62,255,256,66,67,,,,,254,287,291,89,88,90,91,,,216,,,,',
',,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,',
',,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74',
'80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,255,256,66,67,,,,,254',
'287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,',
'215,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54',
'59,60,62,255,256,66,67,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,',
'93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,207',
',,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,63,64',
'65,,51,,,56,57,58,,53,,61,54,59,60,62,255,256,66,67,,,,,254,287,291',
'89,88,90,91,,,216,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38',
'39,37,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79',
'73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62',
'255,256,66,67,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,83',
'50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,207,,,211,',
',52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51',
',,56,57,58,,53,,61,54,59,60,62,255,256,66,67,,,,,254,287,291,89,88,90',
'91,,,216,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,',
',,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75',
'76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,255,256',
'66,67,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,83,50,85,84',
'86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,',
',,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57',
'58,,53,,61,54,59,60,62,255,256,66,67,,,,,254,287,291,89,88,90,91,,,216',
',,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,',
',,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78',
',,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,255,256,66,67,',
',,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,83,50,85,84,86,87',
'94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40',
',,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53',
',61,54,59,60,62,255,256,66,67,,,,,254,287,291,89,88,90,91,,,216,,,,',
',,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,',
',,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74',
'80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,255,256,66,67,,,,,254',
'287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,',
'215,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54',
'59,60,62,255,256,66,67,,,,,254,28,27,89,88,90,91,,,216,,,,,,,41,,,93',
'92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,207,',
',211,,,52,,,,,253,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,63',
'64,65,,51,,258,56,57,58,,53,,61,54,59,60,62,23,24,66,67,,,,,22,28,27',
'89,88,90,91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38',
'39,37,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,18,,,,,79',
'73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62',
'255,256,66,67,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,83',
'50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,207,,,211,',
',52,,,,,253,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,63,64,65',
',51,,,56,57,58,,53,,61,54,59,60,62,255,256,66,67,,,,,254,287,291,89',
'88,90,91,,,216,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39',
'37,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73',
'75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,255',
'256,66,67,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,83,50,85',
'84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,',
',,404,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,',
',56,57,58,,53,,61,54,59,60,62,255,256,66,67,,,,,254,287,291,89,88,90',
'91,,,216,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,',
',,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75',
'76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,255,256',
'66,67,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,83,50,85,84',
'86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,',
',,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57',
'58,,53,,61,54,59,60,62,255,256,66,67,,,,,254,287,291,89,88,90,91,,,216',
',,,,,,288,,,93,92,83,50,85,84,86,87,94,95,,81,82,,,714,292,332,330,329',
'331,,,,,,,,,,,,,,,,285,,,282,,,52,,,,,,,,,,334,708,,,,,,,337,336,340',
'339,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59',
'60,62,255,256,66,67,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93',
'92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,207,',
',211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,63,64',
'65,,51,,,56,57,58,,53,,61,54,59,60,62,23,24,66,67,,,,,22,28,27,89,88',
'90,91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37',
',,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75',
'76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,255,256',
'66,67,,,,,254,28,27,89,88,90,91,,,216,,,,,,,41,,,93,92,83,50,85,84,86',
'87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,253',
',251,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,258',
'56,57,58,,53,,61,54,59,60,62,255,256,66,67,,,,,254,28,27,89,88,90,91',
',,216,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,',
',,,,,,,,,,,,,,,207,,,211,,,485,,,,,253,,251,,40,,,,,,,,215,,,,,79,73',
'75,76,77,78,,,,74,80,63,64,65,,51,,258,56,57,58,,53,,61,54,59,60,62',
'255,256,66,67,,,,,254,28,27,89,88,90,91,,,216,,,,,,,41,,,93,92,83,50',
'85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,207,,,211,,489',
'52,,,,,253,,251,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,63,64',
'65,,51,,258,56,57,58,,53,,61,54,59,60,62,23,24,66,67,,,,,22,28,27,89',
'88,90,91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39',
'37,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73',
'75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,255',
'256,66,67,,,,,254,287,291,89,88,90,91,,,216,,,,,,,288,,,93,92,83,50',
'85,84,86,87,94,95,,81,82,,,,292,,,,,,,,,,,,,,,,,,,,285,,,282,,,52,,',
',,,,,,,,,,,,,,,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,8,51,,,56,57',
'58,,53,,61,54,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,',
',,7,41,,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,',
',,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,',
',74,80,63,64,65,8,51,,,56,57,58,,53,,61,54,59,60,62,23,24,66,67,,,,',
'22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,83,50,85,84,86,87,94,95',
',81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,277,,,52,,,,,32,,,,40,,,,,',
',,18,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,8,51,,,56,57,58,,53,,61',
'54,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93',
'92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,',
'30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,63,64',
'65,,51,,,56,57,58,,53,,61,54,59,60,62,255,256,66,67,,,,,254,28,27,89',
'88,90,91,,,216,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39',
'37,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,623,,251,,40,,,,,,,,215,,,',
',79,73,75,76,77,78,,,,74,80,63,64,65,8,51,,258,56,57,58,,53,,61,54,59',
'60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,83',
'50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52',
',,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,',
',56,57,58,,53,,61,54,59,60,62,255,256,66,67,,,,,254,287,291,89,88,90',
'91,,,216,,,,,594,,288,,,93,92,83,50,85,84,86,87,94,95,,81,82,,,,292',
'224,228,233,234,235,230,232,240,241,236,237,,217,218,,,238,239,,285',
',,211,,,52,,,,,,221,,227,,223,222,219,220,231,229,225,,226,,,,79,73',
'75,76,77,78,,,,74,80,,242,,497,,,,56,,,,53,,,54,63,64,65,8,51,,,,57',
'58,,,,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,7',
'41,,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,',
',,,,36,,,277,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74',
'80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,255,256,66,67,,,,,254',
'287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,',
'215,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,8,51,,,56,57,58,,53,,61',
'54,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93',
'92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,',
'30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,63,64',
'65,,51,,,56,57,58,,53,,61,54,59,60,62,255,256,66,67,,,,,254,287,291',
'89,88,90,91,,,216,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38',
'39,37,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79',
'73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62',
'255,256,66,67,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,83',
'50,85,84,86,87,94,95,,81,82,,38,39,37,224,228,233,234,235,230,232,240',
'241,236,237,,217,218,,,238,239,,207,,,211,,,52,,,,,,221,,227,40,223',
'222,219,220,231,229,225,215,226,,,,79,73,75,76,77,78,,-274,,74,80,,242',
'615,-274,-274,-274,,56,-274,-274,-274,53,-274,,54,,,,,,,,-274,-274,',
',,,,,,-274,-274,,-274,-274,-274,-274,-274,,,,,,,,,,,,,,,,,,,,,,-274',
'-274,-274,-274,-274,-274,-274,-274,-274,-274,-274,-274,-274,-274,,,-274',
'-274,-274,,607,-274,,,-274,,,-274,,-274,,-274,,-274,,-274,-274,-274',
'-274,-274,-274,-274,,-274,,-274,,,,,,,,,,,,,-274,-274,-274,-274,,-274',
'-509,,,,-274,,-93,-509,-509,-509,,,-509,-509,-509,,-509,,,,,,,,,-509',
'-509,-509,,,,,,,,-509,-509,,-509,-509,-509,-509,-509,,,,,,,,,,,,,,,',
',,,,,,-509,-509,-509,-509,-509,-509,-509,-509,-509,-509,-509,-509,-509',
'-509,,,-509,-509,-509,,738,-509,,,-509,,,-509,,-509,,-509,,-509,,-509',
'-509,-509,-509,-509,-509,-509,,-509,-509,-509,,,,,,,,,,,,,-509,-509',
'-509,-509,,-509,,63,64,65,-509,51,-91,,,57,58,,,,61,,59,60,62,255,256',
'66,67,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,83,50,85,84',
'86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,',
',,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57',
'58,,53,,61,54,59,60,62,255,256,66,67,,,,,254,287,291,89,88,90,91,,,216',
',,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,',
',,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78',
',,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,23,24,66,67,,,',
',22,28,27,89,88,90,91,,,216,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95',
',81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,',
',215,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61',
'54,59,60,62,255,256,66,67,,,,,254,287,291,89,88,90,91,,,216,,,,,,,288',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,,,292,,,,,,,,,,,,,,,,,,,,285',
',,282,,,52,,,,,,,,,,,,,,,,,,,,,,79,73,75,76,77,78,,,,74,80,63,64,65',
',51,,,56,57,58,,53,,61,54,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90',
'91,,,216,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,',
',,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75',
'76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,23,24',
'66,67,,,,,22,28,27,89,88,90,91,,,216,,,,,,,41,,,93,92,83,50,85,84,86',
'87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,',
'40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58',
',53,,61,54,59,60,62,255,256,66,67,,,,,254,287,291,89,88,90,91,,,216',
',,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,',
',,,,,,,,,207,,,211,,,52,,,,,725,,,,40,,,,,,,,215,,,,,79,73,75,76,77',
'78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60,62,255,256,66,67',
',,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,83,50,85,84,86,87',
'94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40',
',,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53',
',61,54,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,',
',93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,207',
',,211,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,63,64',
'65,,51,,,56,57,58,,53,,61,54,59,60,62,255,256,66,67,,,,,254,287,291',
'89,88,90,91,,,216,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38',
'39,37,,,,,,,,,,,,,,,,,,,,207,,,211,514,,52,,,,,,,,,40,,,,,,,,215,,,',
',79,73,75,76,77,78,,,,74,80,63,64,65,8,51,,,56,57,58,,53,,61,54,59,60',
'62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,83,50',
'85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,',
',,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51,,',
'56,57,58,,53,,61,54,59,60,62,255,256,66,67,,,,,254,287,291,89,88,90',
'91,,,216,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,',
',,,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,623,,,,40,,,,,,,,215,,,,,79,73',
'75,76,77,78,,,,74,80,63,64,65,,51,,258,56,57,58,,53,,61,54,59,60,62',
'255,256,66,67,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,83',
'50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,207,,,211,',
',52,,,,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,,51',
',258,56,57,58,,53,,61,54,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90',
'91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,',
',,,,,,,,,,,,,,,,,207,,,211,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76',
'77,78,,,,74,80,63,64,65,8,51,,,56,57,58,,53,,61,54,59,60,62,23,24,66',
'67,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,83,50,85,84,86,87',
'94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40',
',,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,8,51,,,56,57,58,,53',
',61,54,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41',
',9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,',
',36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80',
'63,64,65,8,51,,,56,57,58,,53,,61,54,59,60,62,23,24,66,67,,,,,22,28,27',
'89,88,90,91,,,17,,,,,,7,41,,9,93,92,83,50,85,84,86,87,94,95,,81,82,',
'38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,',
'79,73,75,76,77,78,,,,74,80,63,64,65,,51,,,56,57,58,,53,,61,54,59,60',
'62,255,256,66,67,,,,,254,287,291,89,88,90,91,,,216,,,,,,,288,,,93,92',
'83,50,85,84,86,87,94,95,,81,82,,,,292,,,,,,,,,,,,,,,,,,,,675,,,211,',
',52,,,,,,,,,,,,,,,,,,,,,,79,73,75,76,77,78,,,,74,80,63,64,65,8,51,,',
'56,57,58,,53,,61,54,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,',
'17,,,,,,7,41,,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,',
',,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77',
'78,,,,74,80,63,64,65,8,51,,,56,57,58,,53,,61,54,59,60,62,23,24,66,67',
',,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,83,50,85,84,86,87,94',
'95,,81,82,,38,39,37,224,228,233,234,235,230,232,240,241,236,237,,217',
'218,,,238,239,,36,,,30,,,52,,,,,32,221,,227,40,223,222,219,220,231,229',
'225,18,226,,,,79,73,75,76,77,78,,-372,,74,80,,242,,-372,-372,-372,,56',
'-372,-372,-372,53,-372,,54,,,,,,,-372,-372,-372,,,,,,,,-372,-372,,-372',
'-372,-372,-372,-372,,,,,,,,,,,,,,,,,,,,,,-372,-372,-372,-372,-372,-372',
'-372,-372,-372,-372,-372,-372,-372,-372,,,-372,-372,-372,,,-372,,264',
'-372,,,-372,,-372,,-372,,-372,,-372,-372,-372,-372,-372,-372,-372,,-372',
'-372,-372,,,,,,,,,,,,-269,-372,-372,-372,-372,,-372,-269,-269,-269,',
'-372,-269,-269,-269,,-269,,,,,,,,,,-269,-269,,,,,,,,-269,-269,,-269',
'-269,-269,-269,-269,,,,,,,,,,,,,,,,,,,,,,-269,-269,-269,-269,-269,-269',
'-269,-269,-269,-269,-269,-269,-269,-269,,,-269,-269,-269,,,-269,,,-269',
',,-269,,-269,,-269,,-269,,-269,-269,-269,-269,-269,-269,-269,,-269,',
'-269,,,,,,,,,,,,,-269,-269,-269,-269,-525,-269,,,-269,-269,-269,-525',
'-525,-525,,,-525,-525,-525,,-525,,,,,,,,,-525,-525,-525,,,,,,,,-525',
'-525,,-525,-525,-525,-525,-525,,,,,,,,,,,,,,,,,,,,,,-525,-525,-525,-525',
'-525,-525,-525,-525,-525,-525,-525,-525,-525,-525,,,-525,-525,-525,',
',-525,,264,-525,,,-525,,-525,,-525,,-525,,-525,-525,-525,-525,-525,-525',
'-525,,-525,-525,-525,,,,,,,,,,,,-282,-525,-525,-525,-525,,-525,-282',
'-282,-282,,-525,-282,-282,-282,,-282,,,,,,,,,,-282,-282,,,,,,,,-282',
'-282,,-282,-282,-282,-282,-282,,,,,,,,,,,,,,,,,,,,,,-282,-282,-282,-282',
'-282,-282,-282,-282,-282,-282,-282,-282,-282,-282,,,-282,-282,-282,',
',-282,,273,-282,,,-282,,-282,,-282,,-282,,-282,-282,-282,-282,-282,-282',
'-282,,-282,,-282,,,,,,,,,,,,-525,-282,-282,-282,-282,,-282,-525,-525',
'-525,,-282,-525,-525,-525,,-525,,,,,,,,,,-525,,,,,,,,,-525,-525,,-525',
'-525,-525,-525,-525,,,,,,,,,,,,-525,,,,,,,-525,-525,-525,,,-525,-525',
'-525,,-525,,,,,-525,,,,,-525,,-525,,,,,264,-525,-525,-525,,-525,-525',
'-525,-525,-525,,,,,,,,,,,,,-525,,,,,,,,,,,,,-525,,-525,,,-525,,-525',
',,,,,,-525,,,,,264,-525,,,,,,,,,,,,,,,,,,,,,-525,,,,,,,,,,,,,-525,,-525',
',,-525,155,166,156,179,152,172,162,161,187,190,177,160,159,154,180,188',
'189,164,153,167,171,173,165,158,,,174,181,176,175,168,178,163,151,170',
'169,182,183,184,185,186,150,157,148,149,146,147,110,112,,,111,,,,,,',
',141,142,,138,120,121,122,129,126,128,,,123,124,,,,143,144,130,131,',
',,,,,,,,,,,135,134,,119,140,137,136,132,133,127,125,117,139,118,,,145',
'191,,,,,,,,,,80,155,166,156,179,152,172,162,161,187,190,177,160,159',
'154,180,188,189,164,153,167,171,173,165,158,,,174,181,176,175,168,178',
'163,151,170,169,182,183,184,185,186,150,157,148,149,146,147,110,112',
',,111,,,,,,,,141,142,,138,120,121,122,129,126,128,,,123,124,,,,143,144',
'130,131,,,,,,,,,,,,,135,134,,119,140,137,136,132,133,127,125,117,139',
'118,,,145,191,,,,,,,,,,80,155,166,156,179,152,172,162,161,187,190,177',
'160,159,154,180,188,189,164,153,167,171,173,165,158,,,174,181,176,175',
'168,178,163,151,170,169,182,183,184,185,186,150,157,148,149,146,147',
'110,112,109,,111,,,,,,,,141,142,,138,120,121,122,129,126,128,,,123,124',
',,,143,144,130,131,,,,,,,,,,,,,135,134,,119,140,137,136,132,133,127',
'125,117,139,118,,,145,191,,,,,,,,,,80,155,166,156,179,152,172,162,161',
'187,190,177,160,159,154,180,188,189,164,153,167,171,173,165,158,,,174',
'181,176,175,168,178,163,151,170,169,182,183,184,185,186,150,157,148',
'149,146,147,110,112,,,111,,,,,,,,141,142,,138,120,121,122,129,126,128',
',,123,124,,,,143,144,130,131,,,,,,,,,,,,,135,134,,119,140,137,136,132',
'133,127,125,117,139,118,,,145,191,,,,,,,,,,80,155,166,156,179,152,172',
'162,161,187,190,177,160,159,154,180,188,189,164,153,167,171,173,165',
'158,,,174,181,176,175,168,178,163,151,170,169,182,183,184,185,186,150',
'157,148,149,146,147,110,112,,,111,,,,,,,,141,142,,138,120,121,122,129',
'126,128,,,123,124,,,,143,144,130,131,,,,,,,,,,,,,135,134,,119,140,137',
'136,132,133,127,125,117,139,118,,,145,155,166,156,179,152,172,162,161',
'187,190,177,160,159,154,180,188,189,164,153,167,171,173,165,158,,,174',
'181,176,360,359,361,358,151,170,169,182,183,184,185,186,150,157,148',
'149,356,357,354,112,85,84,355,87,,,,,,,141,142,,138,120,121,122,129',
'126,128,,,123,124,,,,143,144,130,131,,,,,,366,,,,,,,135,134,,119,140',
'137,136,132,133,127,125,117,139,118,,,145,155,166,156,179,152,172,162',
'161,187,190,177,160,159,154,180,188,189,164,153,167,171,173,165,158',
',,174,181,176,175,168,178,163,151,170,169,182,183,184,185,186,150,157',
'148,149,146,147,110,112,383,382,111,384,,,,,,,141,142,,138,120,121,122',
'129,126,128,,,123,124,,,,143,144,130,131,,,,,,,,,,,,,135,134,,119,140',
'137,136,132,133,127,125,117,139,118,,,145,155,166,156,179,152,172,162',
'161,187,190,177,160,159,154,180,188,189,164,153,167,171,173,165,158',
',,174,181,176,175,168,178,163,151,170,169,182,183,184,185,186,150,157',
'148,149,146,147,110,112,383,382,111,384,,,,,,,141,142,,138,120,121,122',
'129,126,128,,,123,124,,,,143,144,130,131,,,,,,,,,,,,,135,134,,119,140',
'137,136,132,133,127,125,117,139,118,654,422,145,,655,,,,,,,,141,142',
',138,120,121,122,129,126,128,,,123,124,,,,143,144,130,131,,,,,,,,,,',
',,135,134,,119,140,137,136,132,133,127,125,117,139,118,792,422,145,',
'790,,,,,,,,141,142,,138,120,121,122,129,126,128,,,123,124,,,,143,144',
'130,131,,,,,,,,,,,,,135,134,,119,140,137,136,132,133,127,125,117,139',
'118,904,422,145,,905,,,,,,,,141,142,,138,120,121,122,129,126,128,,,123',
'124,,,,143,144,130,131,,,,,,,,,,,,,135,134,,119,140,137,136,132,133',
'127,125,117,139,118,412,416,145,,413,,,,,,,,141,142,,138,120,121,122',
'129,126,128,,,123,124,,,,143,144,130,131,,,,,,264,,,,,,,135,134,,119',
'140,137,136,132,133,127,125,117,139,118,473,416,145,,474,,,,,,,,141',
'142,,138,120,121,122,129,126,128,,,123,124,,,,143,144,130,131,,,,,,',
',,,,,,135,134,,119,140,137,136,132,133,127,125,117,139,118,902,416,145',
',903,,,,,,,,141,142,,138,120,121,122,129,126,128,,,123,124,,,,143,144',
'130,131,,,,,,264,,,,,,,135,134,,119,140,137,136,132,133,127,125,117',
'139,118,651,416,145,,652,,,,,,,,141,142,,138,120,121,122,129,126,128',
',,123,124,,,,143,144,130,131,,,,,,264,,,,,,,135,134,,119,140,137,136',
'132,133,127,125,117,139,118,473,416,145,,474,,,,,,,,141,142,,138,120',
'121,122,129,126,128,,,123,124,,,,143,144,130,131,,,,,,,,,,,,,135,134',
',119,140,137,136,132,133,127,125,117,139,118,792,422,145,,835,,,,,,',
',141,142,,138,120,121,122,129,126,128,,,123,124,,,,143,144,130,131,',
',,,,,,,,,,,135,134,,119,140,137,136,132,133,127,125,117,139,118,473',
'416,145,,474,,,,,,,,141,142,,138,120,121,122,129,126,128,,,123,124,',
',,143,144,130,131,,,,,,264,,,,,,,135,134,,119,140,137,136,132,133,127',
'125,117,139,118,610,422,145,,611,,,,,,,,141,142,,138,120,121,122,129',
'126,128,,,123,124,,,,143,144,130,131,,,,,,,,,,,,,135,134,,119,140,137',
'136,132,133,127,125,117,139,118,608,416,145,,609,,,,,,,,141,142,,138',
'120,121,122,129,126,128,,,123,124,,,,143,144,130,131,,,,,,264,,,,,,',
'135,134,,119,140,137,136,132,133,127,125,117,139,118,610,422,145,,611',
',,,,,,,141,142,,138,120,121,122,129,126,128,,,123,124,,,,143,144,130',
'131,,,,,,,,,,,,,135,134,,119,140,137,136,132,133,127,125,117,139,118',
'473,416,145,,474,,,,,,,,141,142,,138,120,121,122,129,126,128,,,123,124',
',,,143,144,130,131,,,,,,,,,,,,,135,134,,119,140,137,136,132,133,127',
'125,117,139,118,,,145,224,228,233,234,235,230,232,240,241,236,237,,217',
'218,,,238,239,,,,,,,,,,,,,,221,,227,,223,222,219,220,231,229,225,,226',
',,,,,,473,416,,,474,,,,,242,,-227,141,142,,138,120,121,122,129,126,128',
',,123,124,,,,143,144,130,131,,,,,,,,,,,,,135,134,,119,140,137,136,132',
'133,127,125,117,139,118,608,416,145,,609,,,,,,,,141,142,,138,120,121',
'122,129,126,128,,,123,124,,,,143,144,130,131,,,,,,264,,,,,,,135,134',
',119,140,137,136,132,133,127,125,117,139,118,418,422,145,,420,,,,,,',
',141,142,,138,120,121,122,129,126,128,,,123,124,,,,143,144,130,131,',
',,,,,,,,,,,135,134,,119,140,137,136,132,133,127,125,117,139,118,,,145',
'224,228,233,234,235,230,232,240,241,236,237,,217,218,,,238,239,,,,,',
',,,,,,,,221,,227,,223,222,219,220,231,229,225,,226,224,228,233,234,235',
'230,232,240,241,236,237,,217,218,,242,238,239,,,,,,,,,,,,,,221,,227',
',223,222,219,220,231,229,225,,226,224,228,233,234,235,230,232,240,241',
'236,237,,217,218,,242,238,239,,,,,,,,,,,,,,221,,227,,223,222,219,220',
'231,229,225,,226,224,228,233,234,235,230,232,240,241,236,237,,217,218',
',242,238,239,,,,,,,,,,,,,,221,,227,,223,222,219,220,231,229,225,,226',
'224,228,233,234,235,230,232,240,241,236,237,,217,218,,242,238,239,,',
',,,,,,,,,,,221,,227,,223,222,219,220,231,229,225,,226,224,228,233,234',
'235,230,232,240,241,236,237,,217,218,,242,238,239,,,,,,,,,,,,,,221,',
'227,,223,222,219,220,231,229,225,,226,224,228,233,234,235,230,232,240',
'241,236,237,,217,218,,242,238,239,,,,,,,,,,,,,,221,,227,,223,222,219',
'220,231,229,225,,226,224,228,233,234,235,230,232,240,241,236,237,,217',
'218,,242,238,239,,,,,,,,,,,,,,221,,227,,223,222,219,220,231,229,225',
',226,224,228,233,234,235,230,232,240,241,236,237,,217,218,,242,238,239',
',,,,,,,,,,,,,221,,227,,223,222,219,220,231,229,225,,226,224,228,233',
'234,235,230,232,240,241,236,237,,217,218,,242,238,239,,,,,,,,,,,,,,221',
',227,,223,222,219,220,231,229,225,,226,224,228,233,234,235,230,232,240',
'241,236,237,,217,218,,242,238,239,,,,,,,,,,,,,,221,,227,,223,222,219',
'220,231,229,225,,226,224,228,233,234,235,230,232,240,241,236,237,,217',
'218,,242,238,239,,,,,,,,,,,,,,221,,227,,223,222,219,220,231,229,225',
',226,,,,,,,,,,,,,,,,242' ]
        racc_action_table = arr = ::Array.new(22380, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'0,0,0,0,0,651,652,789,0,0,705,705,289,0,377,0,0,0,0,0,0,0,654,208,661',
'661,0,0,0,0,0,0,0,372,55,0,372,666,306,306,666,0,0,0,0,0,0,0,0,0,0,0',
'0,0,0,835,0,0,555,0,0,0,566,646,25,313,573,573,313,651,652,25,873,208',
'289,71,377,661,648,344,902,0,650,71,0,654,654,0,832,435,435,600,0,372',
'372,289,0,705,903,343,646,554,705,789,0,789,651,652,789,0,0,0,0,0,0',
'651,652,55,0,0,404,404,404,654,404,306,263,0,404,404,487,0,654,404,0',
'404,404,404,404,404,404,404,435,26,653,904,404,404,404,404,404,404,404',
'573,555,404,555,309,584,555,309,788,404,487,566,404,404,404,404,404',
'404,404,404,404,404,297,404,404,358,404,404,404,873,566,873,358,564',
'873,566,344,902,344,902,564,344,902,609,554,832,554,832,404,554,832',
'404,26,608,404,903,343,903,343,431,903,343,13,404,368,584,584,904,370',
'13,298,404,379,26,584,418,404,404,404,404,404,404,418,418,418,404,404',
'206,418,418,564,418,354,609,404,348,656,348,404,354,418,404,904,608',
'904,486,877,904,877,431,418,418,595,418,418,418,418,418,788,13,788,788',
'795,788,368,368,368,795,370,370,370,739,379,379,379,463,588,206,486',
'418,418,418,418,418,418,418,418,418,418,418,418,418,418,420,476,418',
'418,418,35,418,420,420,420,418,413,659,420,420,463,420,418,660,418,301',
'418,418,418,418,418,418,418,739,418,418,418,374,662,476,420,420,296',
'420,420,420,420,420,357,418,418,35,418,252,418,357,867,413,868,418,35',
'418,276,867,667,868,413,561,668,420,420,420,420,420,420,420,420,420',
'420,420,420,420,420,296,412,420,420,420,205,420,538,538,296,420,696',
'205,360,374,374,374,420,696,420,360,420,420,420,420,420,420,420,355',
'420,867,420,868,674,561,355,299,317,317,671,674,561,412,299,420,420',
'561,420,751,420,310,412,673,310,420,751,420,892,892,892,892,892,205',
'308,758,892,892,561,696,675,892,758,892,892,892,892,892,892,892,597',
'342,342,676,892,892,892,892,892,892,892,674,561,892,299,677,751,14,680',
'892,892,440,892,892,892,892,892,892,892,892,892,892,892,480,892,892',
'655,892,892,892,480,597,758,655,870,278,502,283,655,641,597,870,440',
'502,283,709,440,440,14,892,709,359,892,685,891,892,284,14,359,363,892',
'891,691,284,892,693,363,42,910,286,480,249,892,248,42,910,286,892,892',
'892,892,892,892,655,807,807,892,892,422,422,422,870,422,502,283,892',
'422,422,638,892,562,422,892,422,422,422,422,422,422,422,311,891,312',
'284,422,422,422,422,422,422,422,439,356,422,42,910,286,347,216,356,422',
'882,347,422,422,422,422,422,422,422,422,422,422,774,422,422,790,422',
'422,422,683,683,439,790,905,361,439,439,790,109,3,905,361,109,109,3',
'905,37,37,422,15,15,422,422,557,422,882,882,882,882,422,274,422,210',
'422,804,274,209,774,774,774,774,422,906,906,292,292,422,422,422,422',
'422,422,790,556,605,422,422,423,423,423,905,423,704,422,422,423,423',
'704,422,314,423,422,423,423,423,423,423,423,423,804,804,804,804,423',
'423,423,423,423,423,423,710,681,423,681,681,681,681,711,712,423,532',
'714,423,423,423,423,423,423,423,423,423,423,207,423,423,717,423,423',
'423,334,279,334,334,334,334,550,718,718,681,718,718,718,545,724,541',
'291,681,322,423,530,323,423,423,325,423,532,532,532,532,423,326,423',
'192,423,517,779,334,779,779,779,779,423,516,515,334,742,423,423,423',
'423,423,423,743,746,749,423,423,888,888,888,750,888,338,423,423,888',
'888,752,423,96,888,423,888,888,888,888,888,888,888,755,756,757,341,888',
'888,888,888,888,888,888,761,543,888,543,543,543,543,78,764,888,765,288',
'888,888,888,888,888,888,888,888,888,888,506,888,888,503,888,888,888',
'459,546,780,546,546,546,546,783,458,543,645,645,645,645,645,77,633,543',
'63,888,498,349,888,792,793,888,496,493,798,799,888,459,800,492,888,459',
'459,459,459,458,350,632,888,458,458,458,458,888,888,888,888,888,888',
'41,816,817,888,888,886,886,886,886,886,488,888,888,886,886,280,888,824',
'886,888,886,886,886,886,886,886,886,825,36,482,34,886,886,886,886,886',
'886,886,285,836,886,275,275,275,275,275,886,886,481,886,886,886,886',
'886,886,886,886,886,886,886,841,886,886,842,886,886,886,450,5,5,5,5',
'5,20,479,847,287,852,853,854,856,857,478,450,450,444,886,443,442,886',
'441,869,886,373,12,622,11,886,450,880,450,886,450,450,450,450,419,10',
'450,886,450,887,9,376,886,886,886,886,886,886,411,407,6,886,886,878',
'878,878,878,878,896,898,886,878,878,899,886,901,878,886,878,878,878',
'878,878,878,878,620,405,1,399,878,878,878,878,878,878,878,612,393,878',
',,,,,878,878,,878,878,878,878,878,878,878,878,878,878,878,,878,878,',
'878,878,878,454,454,454,454,454,454,454,,,454,454,,,,,,454,454,,878',
',,878,,,878,,,,,878,454,,454,878,454,454,454,454,454,454,454,878,454',
',,,878,878,878,878,878,878,,,,878,878,430,430,430,,430,,,878,430,430',
',878,,430,878,430,430,430,430,430,430,430,,,,,430,430,430,430,430,430',
'430,,,430,,,,,,,430,,,430,430,430,430,430,430,430,430,430,430,,430,430',
',430,430,430,453,453,453,453,453,453,453,,,453,453,,,,,,453,453,,430',
',,430,,,430,,,,,430,453,,453,430,453,453,453,453,453,453,453,430,453',
',,,430,430,430,430,430,430,,,,430,430,866,866,866,866,866,,430,430,866',
'866,,430,,866,430,866,866,866,866,866,866,866,,,,,866,866,866,866,866',
'866,866,,,866,,,,,,866,866,,866,866,866,866,866,866,866,866,866,866',
'866,,866,866,,866,866,866,452,,,,,,,,,,,,,,,,452,452,,866,,,866,,,866',
',,,,866,452,,452,866,452,452,452,452,,,452,866,452,,,,866,866,866,866',
'866,866,,,,866,866,864,864,864,,864,,,866,864,864,,866,,864,866,864',
'864,864,864,864,864,864,,,,,864,864,864,864,864,864,864,,,864,,,,,,',
'864,,,864,864,864,864,864,864,864,864,864,864,,864,864,,864,864,864',
'451,,,,,,,,,,,,,,,,451,451,,864,,,864,,,864,,,,,864,451,864,451,864',
'451,451,451,451,,,451,864,451,,,,864,864,864,864,864,864,,,,864,864',
'849,849,849,849,849,,,864,849,849,,864,,849,864,849,849,849,849,849',
'849,849,,,,,849,849,849,849,849,849,849,,,849,,,,,,849,849,,849,849',
'849,849,849,849,849,849,849,849,849,,849,849,,849,849,849,461,461,461',
'461,461,461,461,461,,461,461,,,,,,461,461,,849,,,849,,,849,,,,,849,461',
',461,849,461,461,461,461,461,461,461,849,461,,,,849,849,849,849,849',
'849,,,,849,849,17,17,17,,17,,,849,17,17,,849,,17,849,17,17,17,17,17',
'17,17,,,,,17,17,17,17,17,17,17,,,17,,,,,,,17,,,17,17,17,17,17,17,17',
'17,17,17,,17,17,,17,17,17,457,457,457,457,457,457,457,,,457,457,,,,',
',457,457,,17,,,17,17,,17,,,,,,457,,457,17,457,457,457,457,457,457,457',
'17,457,,,,17,17,17,17,17,17,,,,17,17,18,18,18,,18,,,17,18,18,,17,,18',
'17,18,18,18,18,18,18,18,,,,,18,18,18,18,18,18,18,,,18,,,,,,,18,,,18',
'18,18,18,18,18,18,18,18,18,,18,18,,18,18,18,456,456,456,456,456,456',
'456,,,456,456,,,,,,456,456,,18,,,18,,,18,,,,,,456,,456,18,456,456,456',
'456,456,456,456,18,456,,,,18,18,18,18,18,18,,,,18,18,844,844,844,844',
'844,,,18,844,844,,18,,844,18,844,844,844,844,844,844,844,,,,,844,844',
'844,844,844,844,844,,,844,,,,,,844,844,,844,844,844,844,844,844,844',
'844,844,844,844,,844,844,,844,844,844,449,,,,,,,,,,,,,,,,449,449,,844',
',,844,,,844,,,,,844,449,,449,844,449,449,449,449,,,449,844,449,,,,844',
'844,844,844,844,844,,,,844,844,843,843,843,,843,,,844,843,843,,844,',
'843,844,843,843,843,843,843,843,843,,,,,843,843,843,843,843,843,843',
',,843,,,,,,,843,,,843,843,843,843,843,843,843,843,843,843,,843,843,',
'843,843,843,460,460,460,460,460,460,460,,,460,460,,,,,,460,460,,843',
',,843,,,843,,,,,843,460,,460,843,460,460,460,460,460,460,460,843,460',
',,,843,843,843,843,843,843,,,,843,843,22,22,22,,22,,,843,22,22,,843',
',22,843,22,22,22,22,22,22,22,,,,,22,22,22,22,22,22,22,,,22,,,,,,,22',
',,22,22,22,22,22,22,22,22,22,22,,22,22,,22,22,22,455,455,455,455,455',
'455,455,,,455,455,,,,,,455,455,,22,,,22,,,22,,,,,22,455,22,455,22,455',
'455,455,455,455,455,455,22,455,,,,22,22,22,22,22,22,,,,22,22,23,23,23',
',23,,22,22,23,23,,22,,23,22,23,23,23,23,23,23,23,,,,,23,23,23,23,23',
'23,23,,,23,,,,,,,23,,,23,23,23,23,23,23,23,23,23,23,,23,23,,23,23,23',
'438,438,438,438,438,438,438,438,438,438,438,,438,438,,,438,438,,23,',
',23,,,23,,,,,23,438,23,438,23,438,438,438,438,438,438,438,23,438,,,',
'23,23,23,23,23,23,,,,23,23,24,24,24,,24,,23,23,24,24,,23,,24,23,24,24',
'24,24,24,24,24,,,,,24,24,24,24,24,24,24,,,24,,,,,,,24,,,24,24,24,24',
'24,24,24,24,24,24,,24,24,,24,24,24,437,437,437,437,437,437,437,437,437',
'437,437,,437,437,,,437,437,,24,,,24,,,24,,,,,24,437,24,437,24,437,437',
'437,437,437,437,437,24,437,,,,24,24,24,24,24,24,,,,24,24,839,839,839',
',839,,24,24,839,839,,24,,839,24,839,839,839,839,839,839,839,,,,,839',
'839,839,839,839,839,839,,,839,,,,,,,839,,,839,839,839,839,839,839,839',
'839,839,839,,839,839,,839,839,839,448,448,448,448,448,448,448,,,448',
'448,,,,,,448,448,,839,,,839,,,839,,,,,,448,,448,839,448,448,448,448',
'448,448,448,839,448,,,,839,839,839,839,839,839,,,,839,839,366,366,366',
',366,,,839,366,366,,839,,366,839,366,366,366,366,366,366,366,,,,,366',
'366,366,366,366,366,366,,,366,,,,,,,366,,,366,366,366,366,366,366,366',
'366,366,366,447,366,366,,366,366,366,,,,,,,,,,447,447,,,,,,,,,366,,',
'366,,447,366,,,447,447,447,447,,,366,,,,,,,,366,,,,,366,366,366,366',
'366,366,,,,366,366,432,432,432,,432,,,366,432,432,,366,,432,366,432',
'432,432,432,432,432,432,,,,,432,432,432,432,432,432,432,,,432,,,,,,',
'432,,,432,432,432,432,432,432,432,432,432,432,445,432,432,,432,432,432',
',,,,,,,,,445,445,,,,,,,,,432,,,432,,445,432,445,,445,445,445,445,,,432',
',,,,,,,432,,,,,432,432,432,432,432,432,,,,432,432,433,433,433,,433,',
',432,433,433,,432,,433,432,433,433,433,433,433,433,433,,,,,433,433,433',
'433,433,433,433,,,433,,,,,,,433,,,433,433,433,433,433,433,433,433,433',
'433,446,433,433,,433,433,433,,,,,,,,,,446,446,,,,,,,,,433,,,433,,446',
'433,446,,446,446,446,446,,,433,,,,,,,,433,,,,,433,433,433,433,433,433',
',,,433,433,30,30,30,30,30,,,433,30,30,,433,,30,433,30,30,30,30,30,30',
'30,,,,,30,30,30,30,30,30,30,,,30,,,,,,30,30,,30,30,30,30,30,30,30,30',
'30,30,30,,30,30,,30,30,30,,,,,,,,,,,,,,,,,,,,30,,,30,,,30,,,,,30,,,',
'30,,,,,,,,30,,,,,30,30,30,30,30,30,,,,30,30,31,31,31,,31,,,30,31,31',
',30,,31,30,31,31,31,31,31,31,31,,,,,31,31,31,31,31,31,31,,,31,,,,,,',
'31,,,31,31,31,31,31,31,31,31,31,31,,31,31,,,617,31,617,617,617,617,',
',,,,,,,,,,,,,,31,,,31,,,31,,,,,31,,,,,617,,,,,,,,617,617,617,617,31',
'31,31,31,31,31,,617,,31,31,32,32,32,,32,,,31,32,32,,31,,32,31,32,32',
'32,32,32,32,32,,,,,32,32,32,32,32,32,32,,,32,,,,,,,32,,,32,32,32,32',
'32,32,32,32,32,32,,32,32,,,860,32,860,860,860,860,,,,,,,,,,,,,,,,32',
',,32,,,32,,,,,,,,,,860,860,,,,,,,860,860,860,860,32,32,32,32,32,32,',
',,32,32,833,833,833,32,833,,,32,833,833,,32,,833,32,833,833,833,833',
'833,833,833,,,,,833,833,833,833,833,833,833,,,833,,,,,,,833,,,833,833',
'833,833,833,833,833,833,833,833,,833,833,,,56,833,56,56,56,56,,,,,,',
',,,,,,,,,833,,,833,,,833,,,,,,,,,,56,56,,,,,,,56,56,56,56,833,833,833',
'833,833,833,,,,833,833,434,434,434,,434,,,833,434,434,,833,,434,833',
'434,434,434,434,434,434,434,,,,,434,434,434,434,434,434,434,,,434,,',
',,,,434,,,434,434,434,434,434,434,434,434,434,434,,434,434,,434,434',
'434,,,,,,,,,,,,,,,,,,,,434,,,434,,,434,,,,,,,,,434,,,,,,,,434,,,,,434',
'434,434,434,434,434,,,,434,434,829,829,829,829,829,,,434,829,829,,434',
',829,434,829,829,829,829,829,829,829,,,,,829,829,829,829,829,829,829',
',,829,,,,,,829,829,,829,829,829,829,829,829,829,829,829,829,829,,829',
'829,,829,829,829,,,,,,,,,,,,,,,,,,,,829,,,829,,,829,,,,,829,,,,829,',
',,,,,,829,,,,,829,829,829,829,829,829,,,,829,829,820,820,820,,820,,',
'829,820,820,,829,,820,829,820,820,820,820,820,820,820,,,,,820,820,820',
'820,820,820,820,,,820,,,,,,,820,,,820,820,820,820,820,820,820,820,820',
'820,,820,820,,820,820,820,,,,,,,,,,,,,,,,,,,,820,,,820,,,820,,,,,,,',
',820,,,,,,,,820,,,,,820,820,820,820,820,820,,,,820,820,38,38,38,,38',
',,820,38,38,,820,,38,820,38,38,38,38,38,38,38,,,,,38,38,38,38,38,38',
'38,,,38,,,,,,,38,,,38,38,38,38,38,38,38,38,38,38,,38,38,,38,38,38,,',
',,,,,,,,,,,,,,,,,38,,,38,,,38,,,,,,,,,38,,,,,,,,38,,,,,38,38,38,38,38',
'38,,,,38,38,39,39,39,,39,,,38,39,39,,38,,39,38,39,39,39,39,39,39,39',
',,,,39,39,39,39,39,39,39,,,39,,,,,,,39,,,39,39,39,39,39,39,39,39,39',
'39,,39,39,,39,39,39,,,,,,,,,,,,,,,,,,,,39,,,39,,,39,,,,,,,,,39,,,,,',
',,39,,,,,39,39,39,39,39,39,,,,39,39,40,40,40,,40,,,39,40,40,,39,,40',
'39,40,40,40,40,40,40,40,,,,,40,40,40,40,40,40,40,,,40,,,,,,,40,,,40',
'40,40,40,40,40,40,40,40,40,,40,40,,40,40,40,,,,,,,,,,,,,,,,,,,,40,,',
'40,,,40,,,,,,,,,40,,,,,,,,40,,,,,40,40,40,40,40,40,,,,40,40,808,808',
'808,,808,,,40,808,808,,40,,808,40,808,808,808,808,808,808,808,,,,,808',
'808,808,808,808,808,808,,,808,,,,,,,808,,,808,808,808,808,808,808,808',
'808,808,808,,808,808,,808,808,808,,,,,,,,,,,,,,,,,,,,808,,,808,,,808',
',,,,,,,,808,,,,,,,,808,,,,,808,808,808,808,808,808,,,,808,808,794,794',
'794,794,794,,,808,794,794,,808,,794,808,794,794,794,794,794,794,794',
',,,,794,794,794,794,794,794,794,,,794,,,,,,794,794,,794,794,794,794',
'794,794,794,794,794,794,794,,794,794,,794,794,794,,,,,,,,,,,,,,,,,,',
',794,,,794,,,794,,,,,794,,,,794,,,,,,,,794,,,,,794,794,794,794,794,794',
',,,794,794,465,465,465,,465,,,794,465,465,,794,,465,794,465,465,465',
'465,465,465,465,,,,,465,465,465,465,465,465,465,,,465,,,,,,,465,,,465',
'465,465,465,465,465,465,465,465,465,,465,465,,465,465,465,,,,,,,,,,',
',,,,,,,,,465,,,465,,,465,,,,,465,,465,,465,,,,,,,,465,,,,,465,465,465',
'465,465,465,,,,465,465,52,52,52,,52,,465,465,52,52,,465,,52,465,52,52',
'52,52,52,52,52,,,,,52,52,52,52,52,52,52,,,52,,,,,,,52,,,52,52,52,52',
'52,52,52,52,52,52,,52,52,,52,52,52,,,,,,,,,,,,,,,,,,,,52,,,52,,,52,',
',,,,,,,52,,,,,,,,52,,,,,52,52,52,52,52,52,,,,52,52,53,53,53,,53,,,52',
'53,53,,52,,53,52,53,53,53,53,53,53,53,,,,,53,53,53,53,53,53,53,,,53',
',,,,,,53,,,53,53,53,53,53,53,53,53,53,53,,53,53,,53,53,53,,,,,,,,,,',
',,,,,,,,,53,,,53,,,53,,,,,53,,,,53,,,,,,,,53,,,,,53,53,53,53,53,53,',
',,53,53,54,54,54,,54,,53,53,54,54,,53,,54,53,54,54,54,54,54,54,54,,',
',,54,54,54,54,54,54,54,,,54,,,,,,,54,,,54,54,54,54,54,54,54,54,54,54',
',54,54,,54,54,54,,,,,,,,,,,,,,,,,,,,54,,,54,,,54,,,,,,,,,54,,,,,,,,54',
',,,,54,54,54,54,54,54,,,,54,54,467,467,467,,467,,54,54,467,467,,54,',
'467,54,467,467,467,467,467,467,467,,,,,467,467,467,467,467,467,467,',
',467,,,,,,,467,,,467,467,467,467,467,467,467,467,467,467,,467,467,,467',
'467,467,,,,,,,,,,,,,,,,,,,,467,,,467,,,467,,,,,,,467,,467,,,,,,,,467',
',,,,467,467,467,467,467,467,,,,467,467,469,469,469,,469,,467,467,469',
'469,,467,,469,467,469,469,469,469,469,469,469,,,,,469,469,469,469,469',
'469,469,,,469,,,,,,,469,,,469,469,469,469,469,469,469,469,469,469,,469',
'469,,469,469,469,,,,,,,,,,,,,,,,,,,,469,,,469,,,469,,,,,,,,,469,,,,',
',,,469,,,,,469,469,469,469,469,469,,,,469,469,57,57,57,,57,,,469,57',
'57,,469,,57,469,57,57,57,57,57,57,57,,,,,57,57,57,57,57,57,57,,,57,',
',,,,,57,,,57,57,57,57,57,57,57,57,57,57,,57,57,,57,57,57,,,,,,,,,,,',
',,,,,,,,57,,,57,,,57,,,,,,,,,57,,,,,,,,57,,,,,57,57,57,57,57,57,,,,57',
'57,58,58,58,,58,,,57,58,58,,57,,58,57,58,58,58,58,58,58,58,,,,,58,58',
'58,58,58,58,58,,,58,,,,,,,58,,,58,58,58,58,58,58,58,58,58,58,,58,58',
',58,58,58,,,,,,,,,,,,,,,,,,,,58,,,58,,,58,,,,,,,,,58,,,,,,,,58,,,,,58',
'58,58,58,58,58,,,,58,58,61,61,61,,61,,,58,61,61,,58,,61,58,61,61,61',
'61,61,61,61,,,,,61,61,61,61,61,61,61,,,61,,,,,402,,61,,,61,61,61,61',
'61,61,61,61,61,61,,61,61,,61,61,61,402,402,402,402,402,402,402,402,402',
'402,402,,402,402,,,402,402,,61,,,61,,,61,,,,,,402,,402,61,402,402,402',
'402,402,402,402,61,402,,,,61,61,61,61,61,61,,,,61,61,61,402,,402,,61',
',61,62,62,62,61,62,,61,,62,62,,,,62,,62,62,62,62,62,62,62,,,,,62,62',
'62,62,62,62,62,,,62,,,,,,,62,,,62,62,62,62,62,62,62,62,62,62,,62,62',
',,802,62,802,802,802,802,,,,,,,,,,,,,,,,62,,,62,,,62,,,,,62,,,,,802',
',,,,,,,802,802,802,802,62,62,62,62,62,62,,,,62,62,485,485,485,,485,',
',62,485,485,,62,,485,62,485,485,485,485,485,485,485,,,,,485,485,485',
'485,485,485,485,,,485,,,,,,,485,,,485,485,485,485,485,485,485,485,485',
'485,,485,485,,485,485,485,,,,,,,,,,,,,,,,,,,,485,,,485,,485,485,,,,',
',,485,,485,,,,,,,,485,,,,,485,485,485,485,485,485,,,,485,485,353,353',
'353,,353,,,485,353,353,,485,,353,485,353,353,353,353,353,353,353,,,',
',353,353,353,353,353,353,353,,,353,,,,,,,353,,,353,353,353,353,353,353',
'353,353,353,353,,353,353,,,708,353,708,708,708,708,,,,,,,,,,,,,,,,353',
',,353,,,353,,,,,,,,,,708,,,,,,,,708,708,708,708,353,353,353,353,353',
'353,,,,353,353,553,553,553,553,553,,,353,553,553,,353,,553,353,553,553',
'553,553,553,553,553,,,,,553,553,553,553,553,553,553,,,553,,,,,,553,553',
',553,553,553,553,553,553,553,553,553,553,553,,553,553,,553,553,553,',
',,,,,,,,,,,,,,,,,,553,,,553,,,553,,,,,553,,,,553,,,,,,,,553,,,,,553',
'553,553,553,553,553,,,,553,553,784,784,784,784,784,,,553,784,784,,553',
',784,553,784,784,784,784,784,784,784,,,,,784,784,784,784,784,784,784',
',,784,,,,,,784,784,,784,784,784,784,784,784,784,784,784,784,784,,784',
'784,,784,784,784,,,,,,,,,,,,,,,,,,,,784,,,784,,,784,,,,,784,,,,784,',
',,,,,,784,,,,,784,784,784,784,784,784,,,,784,784,763,763,763,763,763',
',,784,763,763,,784,,763,784,763,763,763,763,763,763,763,,,,,763,763',
'763,763,763,763,763,,,763,,,,,,763,763,,763,763,763,763,763,763,763',
'763,763,763,763,,763,763,,763,763,763,,,,,,,,,,,,,,,,,,,,763,,,763,',
',763,,,,,763,,,,763,,,,,,,,763,,,,,763,763,763,763,763,763,,,,763,763',
'351,351,351,,351,,,763,351,351,,763,,351,763,351,351,351,351,351,351',
'351,,,,,351,351,351,351,351,351,351,,,351,,,,,,,351,,,351,351,351,351',
'351,351,351,351,351,351,,351,351,,,318,351,318,318,318,318,,,,,,,,,',
',,,,,,351,,,351,,,351,,,,,,,,,,318,,318,,,,,,318,318,318,318,351,351',
'351,351,351,351,,,,351,351,83,83,83,,83,,,351,83,83,,351,,83,351,83',
'83,83,83,83,83,83,,83,,,83,83,83,83,83,83,83,,,83,,,,,,,83,,,83,83,83',
'83,83,83,83,83,83,83,,83,83,,83,83,83,,,,,,,,,,,,,,,,,,,,83,,,83,83',
',83,,,,,83,,83,,83,,,,,,,,83,,83,,,83,83,83,83,83,83,,,,83,83,86,86',
'86,,86,,83,83,86,86,,83,,86,83,86,86,86,86,86,86,86,,86,,,86,86,86,86',
'86,86,86,,,86,,,,,,,86,,,86,86,86,86,86,86,86,86,86,86,,86,86,,86,86',
'86,,,,,,,,,,,,,,,,,,,,86,,,86,86,,86,,,,,86,,86,,86,,,,,,,,86,,86,,',
'86,86,86,86,86,86,,,,86,86,753,753,753,,753,,86,86,753,753,,86,,753',
'86,753,753,753,753,753,753,753,,,,,753,753,753,753,753,753,753,,,753',
',,,,,,753,,,753,753,753,753,753,753,753,753,753,753,,753,753,,753,753',
'753,,,,,,,,,,,,,,,,,,,,753,,,753,,,753,,,,,753,,,,753,,,,,,,,753,,,',
',753,753,753,753,753,753,,,,753,753,98,98,98,98,98,,,753,98,98,,753',
',98,753,98,98,98,98,98,98,98,,,,,98,98,98,98,98,98,98,,,98,,,,,,98,98',
'98,98,98,98,98,98,98,98,98,98,98,98,,98,98,,98,98,98,,,,,,,,,,,,,,,',
',,,,98,,,98,,,98,,,,,98,,,,98,,,,,,,,98,,,,,98,98,98,98,98,98,,,,98',
'98,102,102,102,,102,98,,98,102,102,,98,,102,98,102,102,102,102,102,102',
'102,,,,,102,102,102,102,102,102,102,,,102,,,,,,,102,,,102,102,102,102',
'102,102,102,102,102,102,,102,102,,102,102,102,,,,,,,,,,,,,,,,,,,,102',
',,102,,,102,,,,,,,,,102,,,,,,,,102,,,,,102,102,102,102,102,102,,,,102',
'102,103,103,103,,103,,,102,103,103,,102,,103,102,103,103,103,103,103',
'103,103,,,,,103,103,103,103,103,103,103,,,103,,,,,,,103,,,103,103,103',
'103,103,103,103,103,103,103,,103,103,,103,103,103,,,,,,,,,,,,,,,,,,',
',103,,,103,,,103,,,,,,,,,103,,,,,,,,103,,,,,103,103,103,103,103,103',
',,,103,103,104,104,104,,104,,,103,104,104,,103,,104,103,104,104,104',
'104,104,104,104,,,,,104,104,104,104,104,104,104,,,104,,,,,,,104,,,104',
'104,104,104,104,104,104,104,104,104,,104,104,,104,104,104,,,,,,,,,,',
',,,,,,,,,104,,,104,,,104,,,,,,,,,104,,,,,,,,104,,,,,104,104,104,104',
'104,104,,,,104,104,105,105,105,,105,,,104,105,105,,104,,105,104,105',
'105,105,105,105,105,105,,,,,105,105,105,105,105,105,105,,,105,,,,,,',
'105,,,105,105,105,105,105,105,105,105,105,105,,105,105,,105,105,105',
',,,,,,,,,,,,,,,,,,,105,,,105,,,105,,,,,,,,,105,,,,,,,,105,,,,,105,105',
'105,105,105,105,,,,105,105,106,106,106,106,106,,,105,106,106,,105,,106',
'105,106,106,106,106,106,106,106,,,,,106,106,106,106,106,106,106,,,106',
',,,,,106,106,,106,106,106,106,106,106,106,106,106,106,106,,106,106,',
'106,106,106,,,,,,,,,,,,,,,,,,,,106,,,106,,,106,,,,,106,,,,106,,,,,,',
',106,,,,,106,106,106,106,106,106,,,,106,106,107,107,107,107,107,,,106',
'107,107,,106,,107,106,107,107,107,107,107,107,107,,,,,107,107,107,107',
'107,107,107,,,107,,,,,,107,107,107,107,107,107,107,107,107,107,107,107',
'107,107,,107,107,,107,107,107,,,,,,,,,,,,,,,,,,,,107,,,107,,,107,,,',
',107,,,,107,,,,,,,,107,,,,,107,107,107,107,107,107,,,,107,107,738,738',
'738,,738,,,107,738,738,,107,,738,107,738,738,738,738,738,738,738,,,',
',738,738,738,738,738,738,738,,,738,,,,,,,738,,,738,738,738,738,738,738',
'738,738,738,738,,738,738,,738,738,738,,,,,,,,,,,,,,,,,,,,738,,,738,',
',738,,,,,,,,,738,,,,,,,,738,,,,,738,738,738,738,738,738,,,,738,738,491',
'491,491,491,491,,,738,491,491,,738,,491,738,491,491,491,491,491,491',
'491,,,,,491,491,491,491,491,491,491,,,491,,,,,,491,491,,491,491,491',
'491,491,491,491,491,491,491,491,,491,491,,491,491,491,,,,,,,,,,,,,,',
',,,,,491,,,491,,,491,,,,,491,,,,491,,,,,,,,491,,,,,491,491,491,491,491',
'491,,,,491,491,737,737,737,,737,491,,491,737,737,,491,,737,491,737,737',
'737,737,737,737,737,,,,,737,737,737,737,737,737,737,,,737,,,,,,,737',
',,737,737,737,737,737,737,737,737,737,737,,737,737,,737,737,737,,,,',
',,,,,,,,,,,,,,,737,,,737,,,737,,,,,,,,,737,,,,,,,,737,,,,,737,737,737',
'737,737,737,,,,737,737,194,194,194,194,194,,,737,194,194,,737,,194,737',
'194,194,194,194,194,194,194,,,,,194,194,194,194,194,194,194,,,194,,',
',,,194,194,,194,194,194,194,194,194,194,194,194,194,194,,194,194,,194',
'194,194,,,,,,,,,,,,,,,,,,,,194,,,194,,,194,,,,,194,,,,194,,,,,,,,194',
',,,,194,194,194,194,194,194,,,,194,194,195,195,195,,195,,,194,195,195',
',194,,195,194,195,195,195,195,195,195,195,,,,,195,195,195,195,195,195',
'195,,,195,,,,,,,195,,,195,195,195,195,195,195,195,195,195,195,,195,195',
',195,195,195,,,,,,,,,,,,,,,,,,,,195,,,195,,,195,,,,,195,,,,195,,,,,',
',,195,,,,,195,195,195,195,195,195,,,,195,195,196,196,196,,196,,,195',
'196,196,,195,,196,195,196,196,196,196,196,196,196,,,,,196,196,196,196',
'196,196,196,,,196,,,,,,,196,,,196,196,196,196,196,196,196,196,196,196',
',196,196,,196,196,196,,,,,,,,,,,,,,,,,,,,196,,,196,,,196,,,,,196,,,',
'196,,,,,,,,196,,,,,196,196,196,196,196,196,,,,196,196,197,197,197,,197',
',,196,197,197,,196,,197,196,197,197,197,197,197,197,197,,,,,197,197',
'197,197,197,197,197,,,197,,,,,,,197,,,197,197,197,197,197,197,197,197',
'197,197,,197,197,,197,197,197,,,,,,,,,,,,,,,,,,,,197,,,197,,,197,,,',
',,,,,197,,,,,,,,197,,,,,197,197,197,197,197,197,,,,197,197,198,198,198',
',198,,,197,198,198,,197,,198,197,198,198,198,198,198,198,198,,,,,198',
'198,198,198,198,198,198,,,198,,,,,,,198,,,198,198,198,198,198,198,198',
'198,198,198,,198,198,,198,198,198,,,,,,,,,,,,,,,,,,,,198,,,198,,,198',
',,,,198,,,,198,,,,,,,,198,,,,,198,198,198,198,198,198,,,,198,198,736',
'736,736,,736,,198,198,736,736,,198,,736,198,736,736,736,736,736,736',
'736,,,,,736,736,736,736,736,736,736,,,736,,,,,,,736,,,736,736,736,736',
'736,736,736,736,736,736,,736,736,,736,736,736,,,,,,,,,,,,,,,,,,,,736',
',,736,,,736,,,,,,,,,736,,,,,,,,736,,,,,736,736,736,736,736,736,,,,736',
'736,726,726,726,,726,,,736,726,726,,736,,726,736,726,726,726,726,726',
'726,726,,,,,726,726,726,726,726,726,726,,,726,,,,,,,726,,,726,726,726',
'726,726,726,726,726,726,726,,726,726,,726,726,726,,,,,,,,,,,,,,,,,,',
',726,,,726,,,726,,,,,,,,,726,,,,,,,,726,,,,,726,726,726,726,726,726',
',,,726,726,201,201,201,,201,,,726,201,201,,726,,201,726,201,201,201',
'201,201,201,201,,,,,201,201,201,201,201,201,201,,,201,,,,,,,201,,,201',
'201,201,201,201,201,201,201,201,201,,201,201,,201,201,201,,,,,,,,,,',
',,,,,,,,,201,,,201,,,201,,,,,,,,,201,,,,,,,,201,,,,,201,201,201,201',
'201,201,,,,201,201,202,202,202,,202,,,201,202,202,,201,,202,201,202',
'202,202,202,202,202,202,,,,,202,202,202,202,202,202,202,,,202,,,,,,',
'202,,,202,202,202,202,202,202,202,202,202,202,,202,202,,202,202,202',
',,,,,,,,,,,,,,,,,,,202,,,202,,,202,,,,,,,,,202,,,,,,,,202,,,,,202,202',
'202,202,202,202,,,,202,202,203,203,203,,203,,,202,203,203,,202,,203',
'202,203,203,203,203,203,203,203,,,,,203,203,203,203,203,203,203,,,203',
',,,,,,203,,,203,203,203,203,203,203,203,203,203,203,,203,203,,203,203',
'203,,,,,,,,,,,,,,,,,,,,203,,,203,,,203,,,,,,,,,203,,,,,,,,203,,,,,203',
'203,203,203,203,203,,,,203,203,725,725,725,,725,,,203,725,725,,203,',
'725,203,725,725,725,725,725,725,725,,,,,725,725,725,725,725,725,725',
',,725,,,,,,,725,,,725,725,725,725,725,725,725,725,725,725,,725,725,',
'725,725,725,,,,,,,,,,,,,,,,,,,,725,,,725,,,725,,,,,,,,,725,,,,,,,,725',
',,,,725,725,725,725,725,725,,,,725,725,719,719,719,719,719,,,725,719',
'719,,725,,719,725,719,719,719,719,719,719,719,,,,,719,719,719,719,719',
'719,719,,,719,,,,,,719,719,,719,719,719,719,719,719,719,719,719,719',
'719,,719,719,,719,719,719,,,,,,,,,,,,,,,,,,,,719,,,719,,,719,,,,,719',
',,,719,,,,,,,,719,,,,,719,719,719,719,719,719,,,,719,719,497,497,497',
',497,,,719,497,497,,719,,497,719,497,497,497,497,497,497,497,,,,,497',
'497,497,497,497,497,497,,,497,,,,,,,497,,,497,497,497,497,497,497,497',
'497,497,497,,497,497,,,536,497,536,536,536,536,,,,,,,,,,,,,,,,497,,',
'497,,,497,,,,,,,,,,536,,,,,,,,536,536,536,536,497,497,497,497,497,497',
',,,497,497,707,707,707,707,707,,,497,707,707,,497,,707,497,707,707,707',
'707,707,707,707,,,,,707,707,707,707,707,707,707,,,707,,,,,,707,707,',
'707,707,707,707,707,707,707,707,707,707,707,,707,707,,707,707,707,,',
',,,,,,,,,,,,,,,,,707,,,707,,,707,,,,,707,,,,707,,,,,,,,707,,,,,707,707',
'707,707,707,707,,,,707,707,706,706,706,706,706,,,707,706,706,,707,,706',
'707,706,706,706,706,706,706,706,,,,,706,706,706,706,706,706,706,,,706',
',,,,,706,706,,706,706,706,706,706,706,706,706,706,706,706,,706,706,',
'706,706,706,,,,,,,,,,,,,,,,,,,,706,,,706,,,706,,,,,706,,,,706,,,,,,',
',706,,,,,706,706,706,706,706,706,,,,706,706,499,499,499,,499,,,706,499',
'499,,706,,499,706,499,499,499,499,499,499,499,,,,,499,499,499,499,499',
'499,499,,,499,,,,,,,499,,,499,499,499,499,499,499,499,499,499,499,,499',
'499,,499,499,499,,,,,,,,,,,,,,,,,,,,499,,,499,,,499,,,,,499,,,,499,',
',,,,,,499,,,,,499,499,499,499,499,499,,,,499,499,211,211,211,211,211',
',499,499,211,211,,499,,211,499,211,211,211,211,211,211,211,,,,,211,211',
'211,211,211,211,211,,,211,,,,,,211,211,,211,211,211,211,211,211,211',
'211,211,211,211,,211,211,,211,211,211,,,,,,,,,,,,,,,,,,,,211,,,211,',
',211,,,,,211,,,,211,,,,,,,,211,,,,,211,211,211,211,211,211,,,,211,211',
'212,212,212,,212,,,211,212,212,,211,,212,211,212,212,212,212,212,212',
'212,,,,,212,212,212,212,212,212,212,,,212,,,,,,,212,,,212,212,212,212',
'212,212,212,212,212,212,,212,212,,212,212,212,,,,,,,,,,,,,,,,,,,,212',
',,212,,212,212,,,,,,,,,212,,,,,,,,212,,,,,212,212,212,212,212,212,,',
',212,212,215,215,215,,215,,,212,215,215,,212,,215,212,215,215,215,215',
'215,215,215,,,,,215,215,215,215,215,215,215,,,215,,,,,,,215,,,215,215',
'215,215,215,215,215,215,215,215,,215,215,,215,215,215,,,,,,,,,,,,,,',
',,,,,215,,,215,,,215,,,,,,,,,215,,,,,,,,215,,,,,215,215,215,215,215',
'215,,,,215,215,703,703,703,,703,,,215,703,703,,215,,703,215,703,703',
'703,703,703,703,703,,,,,703,703,703,703,703,703,703,,,703,,,,,,,703',
',,703,703,703,703,703,703,703,703,703,703,,703,703,,703,703,703,,,,',
',,,,,,,,,,,,,,,703,,,703,,,703,,,,,,,,,703,,,,,,,,703,,,,,703,703,703',
'703,703,703,,,,703,703,217,217,217,,217,,,703,217,217,,703,,217,703',
'217,217,217,217,217,217,217,,,,,217,217,217,217,217,217,217,,,217,,',
',,,,217,,,217,217,217,217,217,217,217,217,217,217,,217,217,,217,217',
'217,,,,,,,,,,,,,,,,,,,,217,,,217,,,217,,,,,,,,,217,,,,,,,,217,,,,,217',
'217,217,217,217,217,,,,217,217,218,218,218,,218,,,217,218,218,,217,',
'218,217,218,218,218,218,218,218,218,,,,,218,218,218,218,218,218,218',
',,218,,,,,,,218,,,218,218,218,218,218,218,218,218,218,218,,218,218,',
'218,218,218,,,,,,,,,,,,,,,,,,,,218,,,218,,,218,,,,,,,,,218,,,,,,,,218',
',,,,218,218,218,218,218,218,,,,218,218,219,219,219,,219,,,218,219,219',
',218,,219,218,219,219,219,219,219,219,219,,,,,219,219,219,219,219,219',
'219,,,219,,,,,,,219,,,219,219,219,219,219,219,219,219,219,219,,219,219',
',219,219,219,,,,,,,,,,,,,,,,,,,,219,,,219,,,219,,,,,,,,,219,,,,,,,,219',
',,,,219,219,219,219,219,219,,,,219,219,220,220,220,,220,,,219,220,220',
',219,,220,219,220,220,220,220,220,220,220,,,,,220,220,220,220,220,220',
'220,,,220,,,,,,,220,,,220,220,220,220,220,220,220,220,220,220,,220,220',
',220,220,220,,,,,,,,,,,,,,,,,,,,220,,,220,,,220,,,,,,,,,220,,,,,,,,220',
',,,,220,220,220,220,220,220,,,,220,220,221,221,221,,221,,,220,221,221',
',220,,221,220,221,221,221,221,221,221,221,,,,,221,221,221,221,221,221',
'221,,,221,,,,,,,221,,,221,221,221,221,221,221,221,221,221,221,,221,221',
',221,221,221,,,,,,,,,,,,,,,,,,,,221,,,221,,,221,,,,,,,,,221,,,,,,,,221',
',,,,221,221,221,221,221,221,,,,221,221,222,222,222,,222,,,221,222,222',
',221,,222,221,222,222,222,222,222,222,222,,,,,222,222,222,222,222,222',
'222,,,222,,,,,,,222,,,222,222,222,222,222,222,222,222,222,222,,222,222',
',222,222,222,,,,,,,,,,,,,,,,,,,,222,,,222,,,222,,,,,,,,,222,,,,,,,,222',
',,,,222,222,222,222,222,222,,,,222,222,223,223,223,,223,,,222,223,223',
',222,,223,222,223,223,223,223,223,223,223,,,,,223,223,223,223,223,223',
'223,,,223,,,,,,,223,,,223,223,223,223,223,223,223,223,223,223,,223,223',
',223,223,223,,,,,,,,,,,,,,,,,,,,223,,,223,,,223,,,,,,,,,223,,,,,,,,223',
',,,,223,223,223,223,223,223,,,,223,223,224,224,224,,224,,,223,224,224',
',223,,224,223,224,224,224,224,224,224,224,,,,,224,224,224,224,224,224',
'224,,,224,,,,,,,224,,,224,224,224,224,224,224,224,224,224,224,,224,224',
',224,224,224,,,,,,,,,,,,,,,,,,,,224,,,224,,,224,,,,,,,,,224,,,,,,,,224',
',,,,224,224,224,224,224,224,,,,224,224,225,225,225,,225,,,224,225,225',
',224,,225,224,225,225,225,225,225,225,225,,,,,225,225,225,225,225,225',
'225,,,225,,,,,,,225,,,225,225,225,225,225,225,225,225,225,225,,225,225',
',225,225,225,,,,,,,,,,,,,,,,,,,,225,,,225,,,225,,,,,,,,,225,,,,,,,,225',
',,,,225,225,225,225,225,225,,,,225,225,226,226,226,,226,,,225,226,226',
',225,,226,225,226,226,226,226,226,226,226,,,,,226,226,226,226,226,226',
'226,,,226,,,,,,,226,,,226,226,226,226,226,226,226,226,226,226,,226,226',
',226,226,226,,,,,,,,,,,,,,,,,,,,226,,,226,,,226,,,,,,,,,226,,,,,,,,226',
',,,,226,226,226,226,226,226,,,,226,226,227,227,227,,227,,,226,227,227',
',226,,227,226,227,227,227,227,227,227,227,,,,,227,227,227,227,227,227',
'227,,,227,,,,,,,227,,,227,227,227,227,227,227,227,227,227,227,,227,227',
',227,227,227,,,,,,,,,,,,,,,,,,,,227,,,227,,,227,,,,,,,,,227,,,,,,,,227',
',,,,227,227,227,227,227,227,,,,227,227,228,228,228,,228,,,227,228,228',
',227,,228,227,228,228,228,228,228,228,228,,,,,228,228,228,228,228,228',
'228,,,228,,,,,,,228,,,228,228,228,228,228,228,228,228,228,228,,228,228',
',228,228,228,,,,,,,,,,,,,,,,,,,,228,,,228,,,228,,,,,,,,,228,,,,,,,,228',
',,,,228,228,228,228,228,228,,,,228,228,229,229,229,,229,,,228,229,229',
',228,,229,228,229,229,229,229,229,229,229,,,,,229,229,229,229,229,229',
'229,,,229,,,,,,,229,,,229,229,229,229,229,229,229,229,229,229,,229,229',
',229,229,229,,,,,,,,,,,,,,,,,,,,229,,,229,,,229,,,,,,,,,229,,,,,,,,229',
',,,,229,229,229,229,229,229,,,,229,229,230,230,230,,230,,,229,230,230',
',229,,230,229,230,230,230,230,230,230,230,,,,,230,230,230,230,230,230',
'230,,,230,,,,,,,230,,,230,230,230,230,230,230,230,230,230,230,,230,230',
',230,230,230,,,,,,,,,,,,,,,,,,,,230,,,230,,,230,,,,,,,,,230,,,,,,,,230',
',,,,230,230,230,230,230,230,,,,230,230,231,231,231,,231,,,230,231,231',
',230,,231,230,231,231,231,231,231,231,231,,,,,231,231,231,231,231,231',
'231,,,231,,,,,,,231,,,231,231,231,231,231,231,231,231,231,231,,231,231',
',231,231,231,,,,,,,,,,,,,,,,,,,,231,,,231,,,231,,,,,,,,,231,,,,,,,,231',
',,,,231,231,231,231,231,231,,,,231,231,232,232,232,,232,,,231,232,232',
',231,,232,231,232,232,232,232,232,232,232,,,,,232,232,232,232,232,232',
'232,,,232,,,,,,,232,,,232,232,232,232,232,232,232,232,232,232,,232,232',
',232,232,232,,,,,,,,,,,,,,,,,,,,232,,,232,,,232,,,,,,,,,232,,,,,,,,232',
',,,,232,232,232,232,232,232,,,,232,232,233,233,233,,233,,,232,233,233',
',232,,233,232,233,233,233,233,233,233,233,,,,,233,233,233,233,233,233',
'233,,,233,,,,,,,233,,,233,233,233,233,233,233,233,233,233,233,,233,233',
',233,233,233,,,,,,,,,,,,,,,,,,,,233,,,233,,,233,,,,,,,,,233,,,,,,,,233',
',,,,233,233,233,233,233,233,,,,233,233,234,234,234,,234,,,233,234,234',
',233,,234,233,234,234,234,234,234,234,234,,,,,234,234,234,234,234,234',
'234,,,234,,,,,,,234,,,234,234,234,234,234,234,234,234,234,234,,234,234',
',234,234,234,,,,,,,,,,,,,,,,,,,,234,,,234,,,234,,,,,,,,,234,,,,,,,,234',
',,,,234,234,234,234,234,234,,,,234,234,235,235,235,,235,,,234,235,235',
',234,,235,234,235,235,235,235,235,235,235,,,,,235,235,235,235,235,235',
'235,,,235,,,,,,,235,,,235,235,235,235,235,235,235,235,235,235,,235,235',
',235,235,235,,,,,,,,,,,,,,,,,,,,235,,,235,,,235,,,,,,,,,235,,,,,,,,235',
',,,,235,235,235,235,235,235,,,,235,235,236,236,236,,236,,,235,236,236',
',235,,236,235,236,236,236,236,236,236,236,,,,,236,236,236,236,236,236',
'236,,,236,,,,,,,236,,,236,236,236,236,236,236,236,236,236,236,,236,236',
',236,236,236,,,,,,,,,,,,,,,,,,,,236,,,236,,,236,,,,,,,,,236,,,,,,,,236',
',,,,236,236,236,236,236,236,,,,236,236,237,237,237,,237,,,236,237,237',
',236,,237,236,237,237,237,237,237,237,237,,,,,237,237,237,237,237,237',
'237,,,237,,,,,,,237,,,237,237,237,237,237,237,237,237,237,237,,237,237',
',237,237,237,,,,,,,,,,,,,,,,,,,,237,,,237,,,237,,,,,,,,,237,,,,,,,,237',
',,,,237,237,237,237,237,237,,,,237,237,238,238,238,,238,,,237,238,238',
',237,,238,237,238,238,238,238,238,238,238,,,,,238,238,238,238,238,238',
'238,,,238,,,,,,,238,,,238,238,238,238,238,238,238,238,238,238,,238,238',
',238,238,238,,,,,,,,,,,,,,,,,,,,238,,,238,,,238,,,,,,,,,238,,,,,,,,238',
',,,,238,238,238,238,238,238,,,,238,238,239,239,239,,239,,,238,239,239',
',238,,239,238,239,239,239,239,239,239,239,,,,,239,239,239,239,239,239',
'239,,,239,,,,,,,239,,,239,239,239,239,239,239,239,239,239,239,,239,239',
',239,239,239,,,,,,,,,,,,,,,,,,,,239,,,239,,,239,,,,,,,,,239,,,,,,,,239',
',,,,239,239,239,239,239,239,,,,239,239,240,240,240,,240,,,239,240,240',
',239,,240,239,240,240,240,240,240,240,240,,,,,240,240,240,240,240,240',
'240,,,240,,,,,,,240,,,240,240,240,240,240,240,240,240,240,240,,240,240',
',240,240,240,,,,,,,,,,,,,,,,,,,,240,,,240,,,240,,,,,,,,,240,,,,,,,,240',
',,,,240,240,240,240,240,240,,,,240,240,241,241,241,,241,,,240,241,241',
',240,,241,240,241,241,241,241,241,241,241,,,,,241,241,241,241,241,241',
'241,,,241,,,,,,,241,,,241,241,241,241,241,241,241,241,241,241,,241,241',
',241,241,241,,,,,,,,,,,,,,,,,,,,241,,,241,,,241,,,,,,,,,241,,,,,,,,241',
',,,,241,241,241,241,241,241,,,,241,241,242,242,242,,242,,,241,242,242',
',241,,242,241,242,242,242,242,242,242,242,,,,,242,242,242,242,242,242',
'242,,,242,,,,,,,242,,,242,242,242,242,242,242,242,242,242,242,,242,242',
',242,242,242,,,,,,,,,,,,,,,,,,,,242,,,242,,,242,,,,,,,,,242,,,,,,,,242',
',,,,242,242,242,242,242,242,,,,242,242,699,699,699,,699,,,242,699,699',
',242,,699,242,699,699,699,699,699,699,699,,,,,699,699,699,699,699,699',
'699,,,699,,,,,,,699,,,699,699,699,699,699,699,699,699,699,699,,699,699',
',699,699,699,,,,,,,,,,,,,,,,,,,,699,,,699,,,699,,,,,699,,,,699,,,,,',
',,699,,,,,699,699,699,699,699,699,,,,699,699,695,695,695,,695,,699,699',
'695,695,,699,,695,699,695,695,695,695,695,695,695,,,,,695,695,695,695',
'695,695,695,,,695,,,,,,,695,,,695,695,695,695,695,695,695,695,695,695',
',695,695,,695,695,695,,,,,,,,,,,,,,,,,,,,695,,,695,,,695,,,,,,,,,695',
',,,,,,,695,,,,,695,695,695,695,695,695,,,,695,695,694,694,694,,694,',
',695,694,694,,695,,694,695,694,694,694,694,694,694,694,,,,,694,694,694',
'694,694,694,694,,,694,,,,,,,694,,,694,694,694,694,694,694,694,694,694',
'694,,694,694,,694,694,694,,,,,,,,,,,,,,,,,,,,694,,,694,,,694,,,,,694',
',,,694,,,,,,,,694,,,,,694,694,694,694,694,694,,,,694,694,251,251,251',
',251,,,694,251,251,,694,,251,694,251,251,251,251,251,251,251,,,,,251',
'251,251,251,251,251,251,,,251,,,,,,,251,,,251,251,251,251,251,251,251',
'251,251,251,,251,251,,251,251,251,,,,,,,,,,,,,,,,,,,,251,,,251,,,251',
',,,,,,,,251,,,,,,,,251,,,,,251,251,251,251,251,251,,,,251,251,663,663',
'663,,663,,,251,663,663,,251,,663,251,663,663,663,663,663,663,663,,,',
',663,663,663,663,663,663,663,,,663,,,,,,,663,,,663,663,663,663,663,663',
'663,663,663,663,,663,663,,663,663,663,,,,,,,,,,,,,,,,,,,,663,,,663,',
',663,,,,,663,,,,663,,,,,,,,663,,,,,663,663,663,663,663,663,,,,663,663',
'253,253,253,,253,,,663,253,253,,663,,253,663,253,253,253,253,253,253',
'253,,,,,253,253,253,253,253,253,253,,,253,,,,,,,253,,,253,253,253,253',
'253,253,253,253,253,253,,253,253,,253,253,253,,,,,,,,,,,,,,,,,,,,253',
',,253,,,253,,,,,,,,,253,,,,,,,,253,,,,,253,253,253,253,253,253,,,,253',
'253,258,258,258,,258,,,253,258,258,,253,,258,253,258,258,258,258,258',
'258,258,,,,,258,258,258,258,258,258,258,,,258,,,,,,,258,,,258,258,258',
'258,258,258,258,258,258,258,,258,258,,258,258,258,,,,,,,,,,,,,,,,,,',
',258,,,258,,,258,,,,,,,,,258,,,,,,,,258,,,,,258,258,258,258,258,258',
',,,258,258,657,657,657,,657,,,258,657,657,,258,,657,258,657,657,657',
'657,657,657,657,,,,,657,657,657,657,657,657,657,,,657,,,,,,,657,,,657',
'657,657,657,657,657,657,657,657,657,,657,657,,,569,657,569,569,569,569',
',,,,,,,,,,,,,,,657,,,657,,,657,,,,,,,,,,569,569,,,,,,,569,569,569,569',
'657,657,657,657,657,657,,,,657,657,508,508,508,,508,,,657,508,508,,657',
',508,657,508,508,508,508,508,508,508,,,,,508,508,508,508,508,508,508',
',,508,,,,,,,508,,,508,508,508,508,508,508,508,508,508,508,,508,508,',
'508,508,508,,,,,,,,,,,,,,,,,,,,508,,,508,,,508,,,,,,,,,508,,,,,,,,508',
',,,,508,508,508,508,508,508,,,,508,508,346,346,346,,346,,,508,346,346',
',508,,346,508,346,346,346,346,346,346,346,,,,,346,346,346,346,346,346',
'346,,,346,,,,,,,346,,,346,346,346,346,346,346,346,346,346,346,,346,346',
',346,346,346,,,,,,,,,,,,,,,,,,,,346,,,346,,,346,,,,,,,,,346,,,,,,,,346',
',,,,346,346,346,346,346,346,,,,346,346,264,264,264,,264,,,346,264,264',
',346,,264,346,264,264,264,264,264,264,264,,,,,264,264,264,264,264,264',
'264,,,264,,,,,,,264,,,264,264,264,264,264,264,264,264,264,264,,264,264',
',264,264,264,,,,,,,,,,,,,,,,,,,,264,,,264,,,264,,,,,264,,264,,264,,',
',,,,,264,,,,,264,264,264,264,264,264,,,,264,264,265,265,265,,265,,264',
'264,265,265,,264,,265,264,265,265,265,265,265,265,265,,,,,265,265,265',
'265,265,265,265,,,265,,,,,,,265,,,265,265,265,265,265,265,265,265,265',
'265,,265,265,,265,265,265,,,,,,,,,,,,,,,,,,,,265,,,265,,,265,,,,,265',
',265,,265,,,,,,,,265,,,,,265,265,265,265,265,265,,,,265,265,273,273',
'273,,273,,265,265,273,273,,265,,273,265,273,273,273,273,273,273,273',
',,,,273,273,273,273,273,273,273,,,273,,,,,,,273,,,273,273,273,273,273',
'273,273,273,273,273,,273,273,,273,273,273,,,,,,,,,,,,,,,,,,,,273,,,273',
',273,273,,,,,273,,273,,273,,,,,,,,273,,,,,273,273,273,273,273,273,,',
',273,273,345,345,345,,345,,273,273,345,345,,273,,345,273,345,345,345',
'345,345,345,345,,,,,345,345,345,345,345,345,345,,,345,,,,,,,345,,,345',
'345,345,345,345,345,345,345,345,345,,345,345,,345,345,345,,,,,,,,,,',
',,,,,,,,,345,,,345,,,345,,,,,,,,,345,,,,,,,,345,,,,,345,345,345,345',
'345,345,,,,345,345,647,647,647,,647,,,345,647,647,,345,,647,345,647',
'647,647,647,647,647,647,,,,,647,647,647,647,647,647,647,,,647,,,,,,',
'647,,,647,647,647,647,647,647,647,647,647,647,,647,647,,,,647,,,,,,',
',,,,,,,,,,,,,647,,,647,,,647,,,,,,,,,,,,,,,,,,,,,,647,647,647,647,647',
'647,,,,647,647,643,643,643,643,643,,,647,643,643,,647,,643,647,643,643',
'643,643,643,643,643,,,,,643,643,643,643,643,643,643,,,643,,,,,,643,643',
',643,643,643,643,643,643,643,643,643,643,643,,643,643,,643,643,643,',
',,,,,,,,,,,,,,,,,,643,,,643,,,643,,,,,643,,,,643,,,,,,,,643,,,,,643',
'643,643,643,643,643,,,,643,643,277,277,277,277,277,,,643,277,277,,643',
',277,643,277,277,277,277,277,277,277,,,,,277,277,277,277,277,277,277',
',,277,,,,,,277,277,,277,277,277,277,277,277,277,277,277,277,277,,277',
'277,,277,277,277,,,,,,,,,,,,,,,,,,,,277,,,277,,,277,,,,,277,,,,277,',
',,,,,,277,,,,,277,277,277,277,277,277,,,,277,277,642,642,642,642,642',
',,277,642,642,,277,,642,277,642,642,642,642,642,642,642,,,,,642,642',
'642,642,642,642,642,,,642,,,,,,642,642,,642,642,642,642,642,642,642',
'642,642,642,642,,642,642,,642,642,642,,,,,,,,,,,,,,,,,,,,642,,,642,',
',642,,,,,642,,,,642,,,,,,,,642,,,,,642,642,642,642,642,642,,,,642,642',
'636,636,636,,636,,,642,636,636,,642,,636,642,636,636,636,636,636,636',
'636,,,,,636,636,636,636,636,636,636,,,636,,,,,,,636,,,636,636,636,636',
'636,636,636,636,636,636,,636,636,,636,636,636,,,,,,,,,,,,,,,,,,,,636',
',,636,,,636,,,,,636,,636,,636,,,,,,,,636,,,,,636,636,636,636,636,636',
',,,636,636,630,630,630,630,630,,636,636,630,630,,636,,630,636,630,630',
'630,630,630,630,630,,,,,630,630,630,630,630,630,630,,,630,,,,,,630,630',
',630,630,630,630,630,630,630,630,630,630,630,,630,630,,630,630,630,',
',,,,,,,,,,,,,,,,,,630,,,630,,,630,,,,,630,,,,630,,,,,,,,630,,,,,630',
'630,630,630,630,630,,,,630,630,281,281,281,,281,,,630,281,281,,630,',
'281,630,281,281,281,281,281,281,281,,,,,281,281,281,281,281,281,281',
',,281,,,,,613,,281,,,281,281,281,281,281,281,281,281,281,281,,281,281',
',,,281,613,613,613,613,613,613,613,613,613,613,613,,613,613,,,613,613',
',281,,,281,,,281,,,,,,613,,613,,613,613,613,613,613,613,613,,613,,,',
'281,281,281,281,281,281,,,,281,281,,613,,281,,,,281,,,,281,,,281,282',
'282,282,282,282,,,,282,282,,,,282,,282,282,282,282,282,282,282,,,,,282',
'282,282,282,282,282,282,,,282,,,,,,282,282,,282,282,282,282,282,282',
'282,282,282,282,282,,282,282,,282,282,282,,,,,,,,,,,,,,,,,,,,282,,,282',
',,282,,,,,282,,,,282,,,,,,,,282,,,,,282,282,282,282,282,282,,,,282,282',
'623,623,623,,623,,,282,623,623,,282,,623,282,623,623,623,623,623,623',
'623,,,,,623,623,623,623,623,623,623,,,623,,,,,,,623,,,623,623,623,623',
'623,623,623,623,623,623,,623,623,,623,623,623,,,,,,,,,,,,,,,,,,,,623',
',,623,,,623,,,,,,,,,623,,,,,,,,623,,,,,623,623,623,623,623,623,,,,623',
'623,619,619,619,619,619,,,623,619,619,,623,,619,623,619,619,619,619',
'619,619,619,,,,,619,619,619,619,619,619,619,,,619,,,,,,619,619,,619',
'619,619,619,619,619,619,619,619,619,619,,619,619,,619,619,619,,,,,,',
',,,,,,,,,,,,,619,,,619,,,619,,,,,619,,,,619,,,,,,,,619,,,,,619,619,619',
'619,619,619,,,,619,619,615,615,615,,615,,,619,615,615,,619,,615,619',
'615,615,615,615,615,615,615,,,,,615,615,615,615,615,615,615,,,615,,',
',,,,615,,,615,615,615,615,615,615,615,615,615,615,,615,615,,615,615',
'615,,,,,,,,,,,,,,,,,,,,615,,,615,,,615,,,,,,,,,615,,,,,,,,615,,,,,615',
'615,615,615,615,615,,,,615,615,509,509,509,,509,,,615,509,509,,615,',
'509,615,509,509,509,509,509,509,509,,,,,509,509,509,509,509,509,509',
',,509,,,,,,,509,,,509,509,509,509,509,509,509,509,509,509,,509,509,',
'509,509,509,462,462,462,462,462,462,462,462,462,462,462,,462,462,,,462',
'462,,509,,,509,,,509,,,,,,462,,462,509,462,462,462,462,462,462,462,509',
'462,,,,509,509,509,509,509,509,,611,,509,509,,462,462,611,611,611,,509',
'611,611,611,509,611,,509,,,,,,,,611,611,,,,,,,,611,611,,611,611,611',
'611,611,,,,,,,,,,,,,,,,,,,,,,611,611,611,611,611,611,611,611,611,611',
'611,611,611,611,,,611,611,611,,611,611,,,611,,,611,,611,,611,,611,,611',
'611,611,611,611,611,611,,611,,611,,,,,,,,,,,,,611,611,611,611,,611,610',
',,,611,,611,610,610,610,,,610,610,610,,610,,,,,,,,,610,610,610,,,,,',
',,610,610,,610,610,610,610,610,,,,,,,,,,,,,,,,,,,,,,610,610,610,610',
'610,610,610,610,610,610,610,610,610,610,,,610,610,610,,610,610,,,610',
',,610,,610,,610,,610,,610,610,610,610,610,610,610,,610,610,610,,,,,',
',,,,,,,610,610,610,610,,610,,510,510,510,610,510,610,,,510,510,,,,510',
',510,510,510,510,510,510,510,,,,,510,510,510,510,510,510,510,,,510,',
',,,,,510,,,510,510,510,510,510,510,510,510,510,510,,510,510,,510,510',
'510,,,,,,,,,,,,,,,,,,,,510,,,510,,,510,,,,,,,,,510,,,,,,,,510,,,,,510',
'510,510,510,510,510,,,,510,510,607,607,607,,607,,,510,607,607,,510,',
'607,510,607,607,607,607,607,607,607,,,,,607,607,607,607,607,607,607',
',,607,,,,,,,607,,,607,607,607,607,607,607,607,607,607,607,,607,607,',
'607,607,607,,,,,,,,,,,,,,,,,,,,607,,,607,,,607,,,,,,,,,607,,,,,,,,607',
',,,,607,607,607,607,607,607,,,,607,607,604,604,604,,604,,,607,604,604',
',607,,604,607,604,604,604,604,604,604,604,,,,,604,604,604,604,604,604',
'604,,,604,,,,,,,604,,,604,604,604,604,604,604,604,604,604,604,,604,604',
',604,604,604,,,,,,,,,,,,,,,,,,,,604,,,604,,,604,,,,,,,,,604,,,,,,,,604',
',,,,604,604,604,604,604,604,,,,604,604,294,294,294,,294,,,604,294,294',
',604,,294,604,294,294,294,294,294,294,294,,,,,294,294,294,294,294,294',
'294,,,294,,,,,,,294,,,294,294,294,294,294,294,294,294,294,294,,294,294',
',,,294,,,,,,,,,,,,,,,,,,,,294,,,294,,,294,,,,,,,,,,,,,,,,,,,,,,294,294',
'294,294,294,294,,,,294,294,599,599,599,,599,,,294,599,599,,294,,599',
'294,599,599,599,599,599,599,599,,,,,599,599,599,599,599,599,599,,,599',
',,,,,,599,,,599,599,599,599,599,599,599,599,599,599,,599,599,,599,599',
'599,,,,,,,,,,,,,,,,,,,,599,,,599,,,599,,,,,,,,,599,,,,,,,,599,,,,,599',
'599,599,599,599,599,,,,599,599,598,598,598,,598,,,599,598,598,,599,',
'598,599,598,598,598,598,598,598,598,,,,,598,598,598,598,598,598,598',
',,598,,,,,,,598,,,598,598,598,598,598,598,598,598,598,598,,598,598,',
'598,598,598,,,,,,,,,,,,,,,,,,,,598,,,598,,,598,,,,,,,,,598,,,,,,,,598',
',,,,598,598,598,598,598,598,,,,598,598,596,596,596,,596,,,598,596,596',
',598,,596,598,596,596,596,596,596,596,596,,,,,596,596,596,596,596,596',
'596,,,596,,,,,,,596,,,596,596,596,596,596,596,596,596,596,596,,596,596',
',596,596,596,,,,,,,,,,,,,,,,,,,,596,,,596,,,596,,,,,596,,,,596,,,,,',
',,596,,,,,596,596,596,596,596,596,,,,596,596,594,594,594,,594,,,596',
'594,594,,596,,594,596,594,594,594,594,594,594,594,,,,,594,594,594,594',
'594,594,594,,,594,,,,,,,594,,,594,594,594,594,594,594,594,594,594,594',
',594,594,,594,594,594,,,,,,,,,,,,,,,,,,,,594,,,594,,,594,,,,,,,,,594',
',,,,,,,594,,,,,594,594,594,594,594,594,,,,594,594,514,514,514,,514,',
',594,514,514,,594,,514,594,514,514,514,514,514,514,514,,,,,514,514,514',
'514,514,514,514,,,514,,,,,,,514,,,514,514,514,514,514,514,514,514,514',
'514,,514,514,,514,514,514,,,,,,,,,,,,,,,,,,,,514,,,514,,,514,,,,,,,',
',514,,,,,,,,514,,,,,514,514,514,514,514,514,,,,514,514,303,303,303,',
'303,,,514,303,303,,514,,303,514,303,303,303,303,303,303,303,,,,,303',
'303,303,303,303,303,303,,,303,,,,,,,303,,,303,303,303,303,303,303,303',
'303,303,303,,303,303,,303,303,303,,,,,,,,,,,,,,,,,,,,303,,,303,303,',
'303,,,,,,,,,303,,,,,,,,303,,,,,303,303,303,303,303,303,,,,303,303,305',
'305,305,305,305,,,303,305,305,,303,,305,303,305,305,305,305,305,305',
'305,,,,,305,305,305,305,305,305,305,,,305,,,,,,305,305,,305,305,305',
'305,305,305,305,305,305,305,305,,305,305,,305,305,305,,,,,,,,,,,,,,',
',,,,,305,,,305,,,305,,,,,305,,,,305,,,,,,,,305,,,,,305,305,305,305,305',
'305,,,,305,305,520,520,520,,520,,,305,520,520,,305,,520,305,520,520',
'520,520,520,520,520,,,,,520,520,520,520,520,520,520,,,520,,,,,,,520',
',,520,520,520,520,520,520,520,520,520,520,,520,520,,520,520,520,,,,',
',,,,,,,,,,,,,,,520,,,520,,,520,,,,,520,,,,520,,,,,,,,520,,,,,520,520',
'520,520,520,520,,,,520,520,523,523,523,,523,,520,520,523,523,,520,,523',
'520,523,523,523,523,523,523,523,,,,,523,523,523,523,523,523,523,,,523',
',,,,,,523,,,523,523,523,523,523,523,523,523,523,523,,523,523,,523,523',
'523,,,,,,,,,,,,,,,,,,,,523,,,523,,,523,,,,,,,,,523,,,,,,,,523,,,,,523',
'523,523,523,523,523,,,,523,523,567,567,567,,567,,523,523,567,567,,523',
',567,523,567,567,567,567,567,567,567,,,,,567,567,567,567,567,567,567',
',,567,,,,,,,567,,,567,567,567,567,567,567,567,567,567,567,,567,567,',
'567,567,567,,,,,,,,,,,,,,,,,,,,567,,,567,,,567,,,,,,,,,567,,,,,,,,567',
',,,,567,567,567,567,567,567,,,,567,567,528,528,528,528,528,,,567,528',
'528,,567,,528,567,528,528,528,528,528,528,528,,,,,528,528,528,528,528',
'528,528,,,528,,,,,,528,528,,528,528,528,528,528,528,528,528,528,528',
'528,,528,528,,528,528,528,,,,,,,,,,,,,,,,,,,,528,,,528,,,528,,,,,528',
',,,528,,,,,,,,528,,,,,528,528,528,528,528,528,,,,528,528,529,529,529',
'529,529,,,528,529,529,,528,,529,528,529,529,529,529,529,529,529,,,,',
'529,529,529,529,529,529,529,,,529,,,,,,529,529,,529,529,529,529,529',
'529,529,529,529,529,529,,529,529,,529,529,529,,,,,,,,,,,,,,,,,,,,529',
',,529,,,529,,,,,529,,,,529,,,,,,,,529,,,,,529,529,529,529,529,529,,',
',529,529,558,558,558,558,558,,,529,558,558,,529,,558,529,558,558,558',
'558,558,558,558,,,,,558,558,558,558,558,558,558,,,558,,,,,,558,558,',
'558,558,558,558,558,558,558,558,558,558,558,,558,558,,558,558,558,,',
',,,,,,,,,,,,,,,,,558,,,558,,,558,,,,,558,,,,558,,,,,,,,558,,,,,558,558',
'558,558,558,558,,,,558,558,535,535,535,,535,,,558,535,535,,558,,535',
'558,535,535,535,535,535,535,535,,,,,535,535,535,535,535,535,535,,,535',
',,,,,,535,,,535,535,535,535,535,535,535,535,535,535,,535,535,,,,535',
',,,,,,,,,,,,,,,,,,,535,,,535,,,535,,,,,,,,,,,,,,,,,,,,,,535,535,535',
'535,535,535,,,,535,535,549,549,549,549,549,,,535,549,549,,535,,549,535',
'549,549,549,549,549,549,549,,,,,549,549,549,549,549,549,549,,,549,,',
',,,549,549,,549,549,549,549,549,549,549,549,549,549,549,,549,549,,549',
'549,549,,,,,,,,,,,,,,,,,,,,549,,,549,,,549,,,,,549,,,,549,,,,,,,,549',
',,,,549,549,549,549,549,549,,,,549,549,785,785,785,785,785,,,549,785',
'785,,549,,785,549,785,785,785,785,785,785,785,,,,,785,785,785,785,785',
'785,785,,,785,,,,,,785,785,,785,785,785,785,785,785,785,785,785,785',
'785,,785,785,,785,785,785,730,730,730,730,730,730,730,730,730,730,730',
',730,730,,,730,730,,785,,,785,,,785,,,,,785,730,,730,785,730,730,730',
'730,730,730,730,785,730,,,,785,785,785,785,785,785,,27,,785,785,,730',
',27,27,27,,785,27,27,27,785,27,,785,,,,,,,27,27,27,,,,,,,,27,27,,27',
'27,27,27,27,,,,,,,,,,,,,,,,,,,,,,27,27,27,27,27,27,27,27,27,27,27,27',
'27,27,,,27,27,27,,,27,,27,27,,,27,,27,,27,,27,,27,27,27,27,27,27,27',
',27,27,27,,,,,,,,,,,,50,27,27,27,27,,27,50,50,50,,27,50,50,50,,50,,',
',,,,,,,50,50,,,,,,,,50,50,,50,50,50,50,50,,,,,,,,,,,,,,,,,,,,,,50,50',
'50,50,50,50,50,50,50,50,50,50,50,50,,,50,50,50,,,50,,,50,,,50,,50,,50',
',50,,50,50,50,50,50,50,50,,50,,50,,,,,,,,,,,,,50,50,50,50,414,50,,,50',
'50,50,414,414,414,,,414,414,414,,414,,,,,,,,,414,414,414,,,,,,,,414',
'414,,414,414,414,414,414,,,,,,,,,,,,,,,,,,,,,,414,414,414,414,414,414',
'414,414,414,414,414,414,414,414,,,414,414,414,,,414,,414,414,,,414,',
'414,,414,,414,,414,414,414,414,414,414,414,,414,414,414,,,,,,,,,,,,28',
'414,414,414,414,,414,28,28,28,,414,28,28,28,,28,,,,,,,,,,28,28,,,,,',
',,28,28,,28,28,28,28,28,,,,,,,,,,,,,,,,,,,,,,28,28,28,28,28,28,28,28',
'28,28,28,28,28,28,,,28,28,28,,,28,,28,28,,,28,,28,,28,,28,,28,28,28',
'28,28,28,28,,28,,28,,,,,,,,,,,,475,28,28,28,28,,28,475,475,475,,28,475',
'475,475,,475,,,,,,,,,,475,,,,,,,,,475,475,,475,475,475,475,475,,,,,',
',,,,,,472,,,,,,,472,472,472,,,472,472,472,,472,,,,,475,,,,,472,,475',
',,,,475,475,472,472,,472,472,472,472,472,,,,,,,,,,,,,475,,,,,,,,,,,',
',475,,475,,,475,,472,,,,,,,472,,,,,472,472,,,,,,,,,,,,,,,,,,,,,472,',
',,,,,,,,,,,472,,472,,,472,394,394,394,394,394,394,394,394,394,394,394',
'394,394,394,394,394,394,394,394,394,394,394,394,394,,,394,394,394,394',
'394,394,394,394,394,394,394,394,394,394,394,394,394,394,394,394,394',
'394,394,,,394,,,,,,,,394,394,,394,394,394,394,394,394,394,,,394,394',
',,,394,394,394,394,,,,,,,,,,,,,394,394,,394,394,394,394,394,394,394',
'394,394,394,394,,,394,394,,,,,,,,,,394,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8',
'8,8,8,8,8,8,8,8,8,,,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,,',
'8,,,,,,,,8,8,,8,8,8,8,8,8,8,,,8,8,,,,8,8,8,8,,,,,,,,,,,,,8,8,,8,8,8',
'8,8,8,8,8,8,8,8,,,8,8,,,,,,,,,,8,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7',
'7,7,7,7,7,7,,,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,,7,,,',
',,,,7,7,,7,7,7,7,7,7,7,,,7,7,,,,7,7,7,7,,,,,,,,,,,,,7,7,,7,7,7,7,7,7',
'7,7,7,7,7,,,7,7,,,,,,,,,,7,398,398,398,398,398,398,398,398,398,398,398',
'398,398,398,398,398,398,398,398,398,398,398,398,398,,,398,398,398,398',
'398,398,398,398,398,398,398,398,398,398,398,398,398,398,398,398,398',
'398,398,,,398,,,,,,,,398,398,,398,398,398,398,398,398,398,,,398,398',
',,,398,398,398,398,,,,,,,,,,,,,398,398,,398,398,398,398,398,398,398',
'398,398,398,398,,,398,398,,,,,,,,,,398,716,716,716,716,716,716,716,716',
'716,716,716,716,716,716,716,716,716,716,716,716,716,716,716,716,,,716',
'716,716,716,716,716,716,716,716,716,716,716,716,716,716,716,716,716',
'716,716,716,716,716,,,716,,,,,,,,716,716,,716,716,716,716,716,716,716',
',,716,716,,,,716,716,716,716,,,,,,,,,,,,,716,716,,716,716,716,716,716',
'716,716,716,716,716,716,,,716,65,65,65,65,65,65,65,65,65,65,65,65,65',
'65,65,65,65,65,65,65,65,65,65,65,,,65,65,65,65,65,65,65,65,65,65,65',
'65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,,,,,,,65,65,,65,65,65',
'65,65,65,65,,,65,65,,,,65,65,65,65,,,,,,65,,,,,,,65,65,,65,65,65,65',
'65,65,65,65,65,65,65,,,65,79,79,79,79,79,79,79,79,79,79,79,79,79,79',
'79,79,79,79,79,79,79,79,79,79,,,79,79,79,79,79,79,79,79,79,79,79,79',
'79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,,,,,,,79,79,,79,79,79,79',
'79,79,79,,,79,79,,,,79,79,79,79,,,,,,,,,,,,,79,79,,79,79,79,79,79,79',
'79,79,79,79,79,,,79,191,191,191,191,191,191,191,191,191,191,191,191',
'191,191,191,191,191,191,191,191,191,191,191,191,,,191,191,191,191,191',
'191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191',
'191,191,191,191,191,,,,,,,191,191,,191,191,191,191,191,191,191,,,191',
'191,,,,191,191,191,191,,,,,,,,,,,,,191,191,,191,191,191,191,191,191',
'191,191,191,191,191,501,501,191,,501,,,,,,,,501,501,,501,501,501,501',
'501,501,501,,,501,501,,,,501,501,501,501,,,,,,,,,,,,,501,501,,501,501',
'501,501,501,501,501,501,501,501,501,698,698,501,,698,,,,,,,,698,698',
',698,698,698,698,698,698,698,,,698,698,,,,698,698,698,698,,,,,,,,,,',
',,698,698,,698,698,698,698,698,698,698,698,698,698,698,890,890,698,',
'890,,,,,,,,890,890,,890,890,890,890,890,890,890,,,890,890,,,,890,890',
'890,890,,,,,,,,,,,,,890,890,,890,890,890,890,890,890,890,890,890,890',
'890,199,199,890,,199,,,,,,,,199,199,,199,199,199,199,199,199,199,,,199',
'199,,,,199,199,199,199,,,,,,199,,,,,,,199,199,,199,199,199,199,199,199',
'199,199,199,199,199,634,634,199,,634,,,,,,,,634,634,,634,634,634,634',
'634,634,634,,,634,634,,,,634,634,634,634,,,,,,,,,,,,,634,634,,634,634',
'634,634,634,634,634,634,634,634,634,889,889,634,,889,,,,,,,,889,889',
',889,889,889,889,889,889,889,,,889,889,,,,889,889,889,889,,,,,,889,',
',,,,,889,889,,889,889,889,889,889,889,889,889,889,889,889,500,500,889',
',500,,,,,,,,500,500,,500,500,500,500,500,500,500,,,500,500,,,,500,500',
'500,500,,,,,,500,,,,,,,500,500,,500,500,500,500,500,500,500,500,500',
'500,500,635,635,500,,635,,,,,,,,635,635,,635,635,635,635,635,635,635',
',,635,635,,,,635,635,635,635,,,,,,,,,,,,,635,635,,635,635,635,635,635',
'635,635,635,635,635,635,772,772,635,,772,,,,,,,,772,772,,772,772,772',
'772,772,772,772,,,772,772,,,,772,772,772,772,,,,,,,,,,,,,772,772,,772',
'772,772,772,772,772,772,772,772,772,772,700,700,772,,700,,,,,,,,700',
'700,,700,700,700,700,700,700,700,,,700,700,,,,700,700,700,700,,,,,,700',
',,,,,,700,700,,700,700,700,700,700,700,700,700,700,700,700,512,512,700',
',512,,,,,,,,512,512,,512,512,512,512,512,512,512,,,512,512,,,,512,512',
'512,512,,,,,,,,,,,,,512,512,,512,512,512,512,512,512,512,512,512,512',
'512,428,428,512,,428,,,,,,,,428,428,,428,428,428,428,428,428,428,,,428',
'428,,,,428,428,428,428,,,,,,428,,,,,,,428,428,,428,428,428,428,428,428',
'428,428,428,428,428,429,429,428,,429,,,,,,,,429,429,,429,429,429,429',
'429,429,429,,,429,429,,,,429,429,429,429,,,,,,,,,,,,,429,429,,429,429',
'429,429,429,429,429,429,429,429,429,261,261,429,,261,,,,,,,,261,261',
',261,261,261,261,261,261,261,,,261,261,,,,261,261,261,261,,,,,,,,,,',
',,261,261,,261,261,261,261,261,261,261,261,261,261,261,,,261,637,637',
'637,637,637,637,637,637,637,637,637,,637,637,,,637,637,,,,,,,,,,,,,',
'637,,637,,637,637,637,637,637,637,637,,637,,,,,,,262,262,,,262,,,,,637',
',637,262,262,,262,262,262,262,262,262,262,,,262,262,,,,262,262,262,262',
',,,,,,,,,,,,262,262,,262,262,262,262,262,262,262,262,262,262,262,511',
'511,262,,511,,,,,,,,511,511,,511,511,511,511,511,511,511,,,511,511,',
',,511,511,511,511,,,,,,511,,,,,,,511,511,,511,511,511,511,511,511,511',
'511,511,511,511,200,200,511,,200,,,,,,,,200,200,,200,200,200,200,200',
'200,200,,,200,200,,,,200,200,200,200,,,,,,,,,,,,,200,200,,200,200,200',
'200,200,200,200,200,200,200,200,,,200,513,513,513,513,513,513,513,513',
'513,513,513,,513,513,,,513,513,,,,,,,,,,,,,,513,,513,,513,513,513,513',
'513,513,513,,513,740,740,740,740,740,740,740,740,740,740,740,,740,740',
',513,740,740,,,,,,,,,,,,,,740,,740,,740,740,740,740,740,740,740,,740',
'425,425,425,425,425,425,425,425,425,425,425,,425,425,,740,425,425,,',
',,,,,,,,,,,425,,425,,425,425,425,425,425,425,425,,425,735,735,735,735',
'735,735,735,735,735,735,735,,735,735,,425,735,735,,,,,,,,,,,,,,735,',
'735,,735,735,735,735,735,735,735,,735,733,733,733,733,733,733,733,733',
'733,733,733,,733,733,,735,733,733,,,,,,,,,,,,,,733,,733,,733,733,733',
'733,733,733,733,,733,658,658,658,658,658,658,658,658,658,658,658,,658',
'658,,733,658,658,,,,,,,,,,,,,,658,,658,,658,658,658,658,658,658,658',
',658,410,410,410,410,410,410,410,410,410,410,410,,410,410,,658,410,410',
',,,,,,,,,,,,,410,,410,,410,410,410,410,410,410,410,,410,246,246,246',
'246,246,246,246,246,246,246,246,,246,246,,410,246,246,,,,,,,,,,,,,,246',
',246,,246,246,246,246,246,246,246,,246,19,19,19,19,19,19,19,19,19,19',
'19,,19,19,,246,19,19,,,,,,,,,,,,,,19,,19,,19,19,19,19,19,19,19,,19,723',
'723,723,723,723,723,723,723,723,723,723,,723,723,,19,723,723,,,,,,,',
',,,,,,723,,723,,723,723,723,723,723,723,723,,723,728,728,728,728,728',
'728,728,728,728,728,728,,728,728,,723,728,728,,,,,,,,,,,,,,728,,728',
',728,728,728,728,728,728,728,,728,819,819,819,819,819,819,819,819,819',
'819,819,,819,819,,728,819,819,,,,,,,,,,,,,,819,,819,,819,819,819,819',
'819,819,819,,819,,,,,,,,,,,,,,,,819' ]
        racc_action_check = arr = ::Array.new(22380, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_action_pointer = [
    -2,  1065,   nil,   511,   nil,   946,   930, 20102, 19982,   920,
   889,   878,   926,   140,   396,   608,   nil,  1639,  1759, 22124,
   962,   nil,  2119,  2239,  2359,   -11,   118, 19193, 19561,   nil,
  2959,  3079,  3199,   nil,   821,   227,   891,   582,  3799,  3919,
  4039,   794,   465,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
 19314,   nil,  4519,  4639,  4759,     9,  3332,  5119,  5239,   nil,
   nil,  5359,  5487,   801,   nil, 20451,   nil,   nil,   nil,   nil,
   nil,   -37,   nil,   nil,   nil,   nil,   nil,   752,   715, 20560,
   nil,   nil,   nil,  6327,   nil,   nil,  6447,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   813,   nil,  6687,   nil,
   nil,   nil,  6807,  6927,  7047,  7167,  7287,  7407,   nil,   581,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil, 20669,   651,   nil,  7887,  8007,  8127,  8247,  8367, 20905,
 21725,  8727,  8847,  8967,   nil,   314,   156,   683,   -61,   526,
   572,  9807,  9927,   nil,   nil, 10047,   514, 10287, 10407, 10527,
 10647, 10767, 10887, 11007, 11127, 11247, 11367, 11487, 11607, 11727,
 11847, 11967, 12087, 12207, 12327, 12447, 12567, 12687, 12807, 12927,
 13047, 13167, 13287,   nil,   nil,   nil, 22080,   nil,   421,   419,
   nil, 13767,   269, 14007,   nil,   nil,   nil,   nil, 14127,   nil,
   nil, 21495, 21607,    33, 14607, 14727,   nil,   nil,   nil,   nil,
   nil,   nil,   nil, 14847,   532,   919,   275, 15327,   420,   656,
   806, 15807, 15942,   435,   454,   901,   467,   905,   723,   -13,
   nil,   672,   610,   nil, 17155,   nil,   259,   111,   159,   345,
   nil,   262,   nil, 17875,   nil, 17995,     3,   nil,   325,    35,
   312,   492,   476,   -57,   608,   nil,   nil,   291,  6220,   nil,
   nil,   nil,   636,   630,   nil,   642,   649,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   694,   nil,   nil,   nil,   757,   nil,
   nil,   777,   429,    87,    67, 14967, 14487,   478,   234,   757,
   879,  6207,   nil,  5727,   170,   337,   520,   274,   103,   449,
   322,   553,   nil,   457,   nil,   nil,  2599,   nil,   160,   nil,
   164,   nil,   -24,   890,   281,   nil,   910,   -43,   nil,   168,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   966, 19862,   nil,   nil,   nil, 20222,   957,
   nil,   nil,  5359,   nil,   118,   939,   nil,   912,   nil,   nil,
 22036,   945,   301,   233, 19440,   nil,   nil,   nil,   228,   935,
   306,   nil,   559,   679,   nil, 21860,   nil,   nil, 21377, 21436,
  1159,   128,  2719,  2839,  3439,    54,   nil,  2359,  2239,   530,
   420,   942,   940,   939,   937,  2712,  2832,  2592,  2479,  1879,
   919,  1399,  1279,  1159,  1039,  2119,  1759,  1639,   807,   799,
  1999,  1519, 16422,   216,   nil,  4399,   nil,  4879,   nil,  4999,
   nil,   nil, 19736,   nil,   nil, 19682,   235,   nil,   910,   868,
   421,   839,   918,   nil,   nil,  5607,   186,    58,   838,   nil,
   nil,  7647,   808,   765,   nil,   nil,   764,  9327,   795,  9687,
 21082, 20728,   434,   772,   nil,   nil,   731,   nil, 14367, 16422,
 16795, 21666, 21318, 21772, 17755,   780,   777,   690,   nil,   nil,
 18115,   nil,   nil, 18235,   nil,   nil,   nil,   nil, 18475, 18595,
   675,   nil,   675,   nil,   nil, 18835,  9340,   nil,   295,   nil,
   nil,   670,   nil,   786,   nil,   631,   815,   nil,   nil, 18955,
   737,   nil,   nil,  5847,    75,    32,   661,   638, 18715,   nil,
   nil,   343,   520,   nil,   111,   nil,    61, 18355,   nil, 14260,
   nil,   nil,   nil,    31,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   101,   nil,   nil,   nil,   163,   nil,
   nil,   nil,   nil,   nil, 17635,   140, 17515,   379, 17395, 17275,
    -2,   nil,   nil,   nil, 17035,   585,   nil, 16915,   122,   112,
 16668, 16540,   983, 15807,   nil, 16302,   nil,  3092,   nil, 16182,
   938,   nil,   926, 16062,   nil,   nil,   nil,   nil,   nil,   nil,
 15687,   nil,   816,   791, 20964, 21141, 15567, 21542,   446,   nil,
   nil,   424, 15447, 15207,   nil,   835,   -25, 15087,   -47,   nil,
    -9,   -19,   -18,    57,    -2,   424,   162, 14247, 21992,   254,
   260,   -11,   325, 13887,   nil,   nil,   -85,   256,   360,   nil,
   nil,   289,   nil,   311,   342,   400,   341,   353,   nil,   nil,
   393,   666,   nil,   610,   nil,   512,   nil,   nil,   nil,   nil,
   nil,   526,   nil,   529, 13647, 13527,   320,   nil, 20787, 13407,
 21259,   nil,   nil, 10167,   564,   -25,  9567,  9447,  5740,   396,
   589,   596,   597,   nil,   591,   nil, 20342,   651,   699,  9207,
   nil,   nil,   nil, 22168,   632,  9087,  8607,   nil, 22212,   nil,
 19075,   nil,   nil, 21948,   nil, 21904,  8487,  7767,  7527,   200,
 21816,   nil,   684,   787,   nil,   nil,   688,   nil,   nil,   711,
   717,   357,   784,  6567,   nil,   714,   815,   700,   373,   nil,
   nil,   826,   nil,  6087,   717,   759,   nil,   nil,   nil,   nil,
   nil,   nil, 21200,   nil,   567,   nil,   nil,   nil,   nil,   730,
   856,   nil,   nil,   861,  5967, 19075,   nil,   nil,   149,   -19,
   544,   nil,   799,   796,  4279,   153,   nil,   nil,   882,   883,
   773,   nil,  5500,   nil,   609,   nil,   nil,   461,  4159,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   808,   793,   nil, 22256,
  3679,   nil,   nil,   nil,   845,   818,   nil,   nil,   nil,  3559,
   nil,   nil,    76,  3319,   nil,   -32,   830,   nil,   nil,  2479,
   nil,   967,   970,  1999,  1879,   nil,   nil,   982,   nil,  1519,
   nil,   nil,   905,   869,   870,   nil,   871,   863,   nil,   nil,
  3212,   nil,   nil,   nil,  1399,   nil,  1279,   282,   284,   954,
   432,   nil,   nil,    60,   nil,   nil,   nil,   245,  1039,   nil,
  1006,   nil,   555,   nil,   nil,   nil,   919,  1020,   799, 21023,
 20846,   452,   439,   nil,   nil,   nil,  1037,   nil,   922,  1042,
   nil,   962,    68,    86,   133,   552,   653,   nil,   nil,   nil,
   466,   nil ]

racc_action_default = [
    -3,  -526,    -1,  -514,    -4,    -6,  -526,  -526,  -526,  -526,
  -526,  -526,  -526,  -526,  -268,   -36,   -37,  -526,  -526,   -42,
   -44,   -45,  -279,  -318,  -319,   -49,  -246,  -246,  -246,   -61,
   -10,   -65,   -72,   -74,  -526,  -445,  -526,  -526,  -526,  -526,
  -526,  -516,  -226,  -261,  -262,  -263,  -264,  -265,  -266,  -267,
  -504,  -270,  -526,  -525,  -496,  -287,  -525,  -526,  -526,  -292,
  -295,  -514,  -526,  -304,  -310,  -526,  -320,  -321,  -390,  -391,
  -392,  -393,  -394,  -525,  -397,  -525,  -525,  -525,  -525,  -525,
  -424,  -430,  -431,  -434,  -435,  -436,  -437,  -438,  -439,  -440,
  -441,  -442,  -443,  -444,  -447,  -448,  -526,    -2,  -515,  -521,
  -522,  -523,  -526,  -526,  -526,  -526,  -526,    -3,   -13,  -526,
  -100,  -101,  -102,  -103,  -104,  -105,  -106,  -109,  -110,  -111,
  -112,  -113,  -114,  -115,  -116,  -117,  -118,  -119,  -120,  -121,
  -122,  -123,  -124,  -125,  -126,  -127,  -128,  -129,  -130,  -131,
  -132,  -133,  -134,  -135,  -136,  -137,  -138,  -139,  -140,  -141,
  -142,  -143,  -144,  -145,  -146,  -147,  -148,  -149,  -150,  -151,
  -152,  -153,  -154,  -155,  -156,  -157,  -158,  -159,  -160,  -161,
  -162,  -163,  -164,  -165,  -166,  -167,  -168,  -169,  -170,  -171,
  -172,  -173,  -174,  -175,  -176,  -177,  -178,  -179,  -180,  -181,
  -182,  -526,   -18,  -107,   -10,  -526,  -526,  -526,  -525,  -526,
  -526,  -526,  -526,  -526,   -40,  -526,  -445,  -526,  -268,  -526,
  -526,   -10,  -526,   -41,  -218,  -526,  -526,  -526,  -526,  -526,
  -526,  -526,  -526,  -526,  -526,  -526,  -526,  -526,  -526,  -526,
  -526,  -526,  -526,  -526,  -526,  -526,  -526,  -526,  -526,  -526,
  -526,  -526,  -526,  -361,  -363,   -46,  -227,  -239,  -253,  -253,
  -243,  -526,  -254,  -526,  -279,  -318,  -319,  -498,  -526,   -47,
   -48,  -526,  -526,   -53,  -525,  -526,  -286,  -366,  -373,  -375,
   -59,  -371,   -60,  -526,  -514,   -11,   -61,   -10,  -526,  -526,
   -66,   -69,   -10,   -80,  -526,  -526,   -87,  -282,  -516,  -526,
  -322,  -372,  -526,   -71,  -526,   -76,  -275,  -432,  -433,  -526,
  -203,  -204,  -219,  -526,  -517,   -10,  -516,  -228,  -516,  -518,
  -518,  -526,  -526,  -518,  -526,  -288,  -289,  -526,  -526,  -333,
  -334,  -342,  -525,  -464,  -349,  -525,  -525,  -360,  -463,  -465,
  -466,  -467,  -468,  -469,  -526,  -480,  -485,  -486,  -488,  -489,
  -490,  -526,   -43,  -526,  -526,  -526,  -526,  -514,  -526,  -515,
  -526,  -526,  -307,  -526,  -100,  -101,  -138,  -139,  -155,  -160,
  -167,  -170,  -313,  -526,  -445,  -494,  -526,  -395,  -526,  -410,
  -526,  -412,  -526,  -526,  -526,  -402,  -526,  -526,  -408,  -526,
  -423,  -425,  -426,  -427,  -428,   912,    -5,  -524,   -19,   -20,
   -21,   -22,   -23,  -526,  -526,   -15,   -16,   -17,  -526,  -526,
   -25,   -33,  -183,  -254,  -526,  -526,   -26,   -34,   -35,   -27,
  -185,  -526,  -505,  -506,  -246,  -368,  -507,  -508,  -505,  -246,
  -506,  -370,  -510,  -511,   -32,  -192,   -38,   -39,  -526,  -526,
  -525,  -275,  -526,  -526,  -526,  -526,  -285,  -193,  -194,  -195,
  -196,  -197,  -198,  -199,  -200,  -205,  -206,  -207,  -208,  -209,
  -210,  -211,  -212,  -213,  -214,  -215,  -216,  -217,  -220,  -221,
  -222,  -223,  -526,  -525,  -240,  -526,  -241,  -526,  -251,  -526,
  -255,  -501,  -246,  -505,  -506,  -246,  -525,   -54,  -526,  -516,
  -516,  -253,  -239,  -247,  -248,  -526,  -525,  -525,  -526,  -281,
    -9,  -515,  -526,   -62,  -273,   -77,   -67,  -526,  -526,  -525,
  -526,  -526,   -86,  -526,  -432,  -433,   -73,   -78,  -526,  -526,
  -526,  -526,  -526,  -224,  -526,  -382,  -526,  -526,  -229,  -230,
  -520,  -519,  -232,  -520,  -277,  -278,  -497,  -330,   -10,   -10,
  -526,  -332,  -526,  -351,  -358,  -526,  -355,  -356,  -526,  -359,
  -464,  -526,  -471,  -526,  -473,  -475,  -479,  -487,  -491,   -10,
  -323,  -324,  -325,   -10,  -526,  -526,  -526,  -526,   -10,  -377,
  -301,   -96,  -526,   -98,  -526,  -268,  -526,  -526,  -311,  -462,
  -315,  -512,  -513,  -516,  -396,  -411,  -414,  -415,  -417,  -398,
  -413,  -399,  -400,  -401,  -526,  -404,  -406,  -407,  -526,  -429,
    -7,   -14,  -108,   -24,  -526,  -260,  -526,  -276,  -526,  -526,
   -55,  -237,  -238,  -367,  -526,   -57,  -369,  -526,  -505,  -506,
  -505,  -506,  -526,  -183,  -284,  -526,  -345,  -526,  -347,   -10,
  -253,  -252,  -256,  -526,  -499,  -500,   -50,  -364,   -51,  -365,
   -10,  -233,  -526,  -526,  -526,  -526,  -526,   -42,  -526,  -245,
  -249,  -526,   -10,   -10,  -280,   -12,   -62,  -526,   -70,   -75,
  -526,  -505,  -506,  -525,  -509,   -85,  -526,  -526,  -191,  -201,
  -202,  -526,  -525,  -525,  -271,  -272,  -518,  -526,  -526,  -331,
  -343,  -526,  -350,  -525,  -344,  -526,  -525,  -525,  -481,  -470,
  -526,  -526,  -478,  -525,  -326,  -525,  -293,  -327,  -328,  -329,
  -296,  -526,  -299,  -526,  -526,  -526,   -96,   -97,  -526,  -525,
  -526,  -305,  -449,  -526,  -526,  -526,   -10,   -10,  -462,  -526,
  -493,  -493,  -493,  -461,  -464,  -483,  -526,  -526,  -526,   -10,
  -403,  -405,  -409,  -184,  -258,  -526,  -526,   -29,  -187,   -30,
  -188,   -56,   -31,  -189,   -58,  -190,  -526,  -526,  -526,  -276,
  -225,  -346,  -526,  -526,  -242,  -257,  -526,  -234,  -235,  -525,
  -525,  -516,  -526,  -526,  -250,  -526,  -526,   -68,   -81,   -79,
  -283,  -525,  -340,   -10,  -383,  -525,  -384,  -385,  -231,  -335,
  -336,  -357,  -526,  -275,  -526,  -353,  -354,  -472,  -474,  -477,
  -526,  -337,  -338,  -526,   -10,   -10,  -298,  -300,  -526,  -526,
   -96,   -99,  -509,  -526,   -10,  -526,  -451,  -308,  -526,  -526,
  -516,  -453,  -526,  -457,  -526,  -459,  -460,  -526,  -526,  -316,
  -495,  -416,  -419,  -420,  -421,  -422,  -526,  -259,   -28,  -186,
  -526,  -348,  -362,   -52,  -526,  -253,  -374,  -376,    -8,   -10,
  -389,  -341,  -526,  -526,  -387,  -274,  -525,  -476,  -290,  -526,
  -291,  -526,  -526,  -526,   -10,  -302,  -276,  -526,  -450,   -10,
  -312,  -314,  -526,  -493,  -493,  -492,  -493,  -526,  -484,  -482,
  -462,  -418,  -236,  -244,  -526,  -388,   -10,   -88,  -526,  -526,
   -95,  -386,  -352,  -526,  -294,  -297,  -256,  -525,   -10,  -306,
  -526,  -452,  -526,  -455,  -456,  -458,   -10,  -382,  -525,  -526,
  -526,   -94,   -10,  -378,  -379,  -380,  -526,  -309,  -493,  -526,
  -381,  -526,  -505,  -506,  -509,   -93,  -525,  -303,  -454,  -317,
   -89,  -339 ]

clist = [
'35,362,310,313,311,248,248,248,247,247,247,466,327,319,480,381,557,662',
'303,14,542,113,113,516,506,401,408,707,280,477,35,283,283,98,549,553',
'204,534,710,308,537,539,678,108,193,627,97,5,629,14,286,286,621,670',
'621,276,267,271,541,213,293,780,283,278,761,364,697,116,116,519,522',
'306,639,526,2,624,342,342,858,113,342,286,641,245,259,260,566,783,568',
'290,290,345,619,113,784,343,344,346,35,347,785,414,419,695,348,630,35',
'35,878,351,263,270,272,686,690,642,643,14,794,567,290,342,342,342,342',
'14,14,381,575,370,372,624,849,379,585,353,706,569,716,860,388,389,390',
'391,317,5,527,310,316,411,839,676,315,392,5,312,858,365,483,305,701',
'463,486,472,475,487,893,694,765,832,367,368,570,374,584,363,377,710',
'405,405,811,393,10,718,308,719,800,853,394,350,192,828,778,386,35,1',
',,,,,,791,,,113,,,,,,35,10,14,423,803,805,806,,,,426,427,621,691,,,648',
',542,14,435,682,,,,400,406,409,,,,424,,,,,481,248,,482,247,,,101,,248',
',,247,,,,,,503,,680,,,,,,,327,530,,35,,894,10,283,35,517,911,518,,,10',
'10,,507,,,283,670,14,,12,,286,14,276,,491,35,,276,678,496,492,,101,286',
',498,,490,886,267,,271,627,629,14,479,484,,12,710,414,419,,,488,,,,',
'290,,,,713,721,,,,845,,,364,290,364,,,,,883,884,,885,,,342,342,731,542',
',,565,734,565,,,,10,757,,310,,612,744,554,555,573,751,,771,900,556,775',
'776,10,,,12,307,,,320,,653,908,12,12,,,113,290,,290,113,653,620,13,308',
'369,,371,371,375,378,371,798,799,768,,,,591,,205,205,592,,,205,205,205',
',,,423,602,13,284,284,310,606,650,621,,,116,,632,633,116,10,,,,,10,837',
',205,205,666,,,205,205,,,205,284,,844,,,713,,,308,,10,,,,35,12,766,507',
',,283,600,,,,602,605,306,602,,,,12,14,,847,13,,423,286,205,205,205,205',
'13,13,866,,101,423,,35,35,,,,661,,364,749,750,645,,,,307,,,895,,14,14',
'35,717,872,,35,565,290,626,,35,628,,,,,892,,,880,14,,,,14,327,742,12',
'855,14,855,,12,855,,,,620,705,863,,,,,,290,,,,,101,,,,653,12,899,,,',
'478,13,205,205,205,205,,,205,205,205,35,,,752,,,,13,205,,,35,,,,713',
',,,14,727,729,,35,35,507,732,405,283,310,14,793,,809,,759,,855,283,',
',,14,14,,,,286,,,,,,,10,279,,286,788,,205,205,,,602,,308,606,,205,,',
',13,,,,284,13,,,,,,,,290,35,35,,284,10,10,423,,342,290,,,,35,13,,342',
',,14,14,,824,,113,10,,789,,10,825,815,14,,10,795,,,,,,,,,,673,,,,677',
',,601,,205,205,,35,,,564,818,564,,,,,,307,,,852,,602,602,205,14,,35',
'35,423,,712,12,,653,,,35,,,,,,,10,,14,14,687,687,616,,,,,10,14,,,601',
'702,,601,616,,,,10,10,12,12,,35,616,616,,867,,,,310,399,901,,,,307,35',
'205,,12,14,35,,12,870,,,279,12,,342,,,,,14,,,35,,14,,,,,,308,,,873,35',
',,,,,,14,35,,10,10,,290,35,,,,,14,,,205,10,,,423,14,13,,,,,14,284,,205',
',,12,,,,279,,,,,279,712,12,205,,,,,,,,,,,12,12,,13,13,10,,,,,674,,,',
',796,797,,,,801,,,,13,,10,10,13,,,,,13,,,10,,,,,,205,,,,,,,,,,,836,',
',,601,,,,,,,12,12,762,767,,,,10,,205,205,871,,12,,205,,854,,856,,,10',
'762,,762,,10,,,13,,,,,,687,,,307,,13,848,,10,,,205,,,,,,13,13,,10,12',
'284,,,,,,10,,,,284,,10,,,,,712,,,12,12,,,,,,,,,12,601,601,,,,,,,898',
',,,830,,,,834,205,,,,205,,,,205,,,13,13,,,,,12,,,,214,,,13,246,246,246',
',,,205,12,,,,,12,,,,300,301,302,,,,,,,,,,,12,,246,246,,,,,667,668,,',
'12,,13,,,,,,12,,,,,,12,,,683,,,,685,,13,13,,693,,,,,,,13,,,,,,,,,,,',
'762,,,,,,,,,,,307,,,,,,,,,,,,13,,,,868,,762,,,,205,,,,,13,,,,743,13',
',,,,,,,,,746,,,,,314,,13,,,,,755,756,,,,,,13,,,,,,,,13,,205,,,,13,402',
'246,410,246,,,425,,,,,,,,,,,,,,214,,437,438,439,440,441,442,443,444',
'445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461',
'462,,,,,,,,816,246,,246,,,,,246,,,,,,246,246,,,,,,,,246,,,,,,,,,,,,',
',,,,,,,,831,,,,,,,,,513,,,,403,407,,,,,,,841,842,,,,,,,,,,,,,,,,,,,',
',,289,289,,,,,,289,289,289,,,,,,,,,,,,,865,289,,468,,470,,,,289,471',
',,,,877,,,,,,,,,,,,,,,,,,,,,,887,,,,,,,246,,,,,896,,,,,,,,,,,,,,906',
',,,,,,246,,425,613,410,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,246,,246,,246,',
',,,,,,,,,,,,,,637,,,,,,,,,,,,,,246,,,,,,,,,658,659,660,,,,,,595,,,,246',
',289,246,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289',
'289,289,289,289,289,289,289,289,289,289,289,,,,,,,,,289,,289,,,,,289',
',,,,,,,,,,,622,,314,,625,,,,,,,289,,,,,,723,,246,638,728,730,,289,,',
'733,,,735,,,289,,,,,740,,,,,,,,246,,,,,,,,,622,,,314,246,,,,,,,,,,,',
',,,,,,,,,,289,,289,,,246,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,246,,,,,246,',
',,,,,,,724,,,289,,,,,,,,,,,,,,246,819,,,,,,,,,745,728,730,733,289,289',
'289,,,,,,,622,,,,,246,,,,,,,,,,,,,,,,,,,289,,289,764,289,,,,,,,,,,,',
',,,,,,,,,,,,,,,,289,,403,,246,,,,,,,289,289,289,,,819,,,,,,,289,,,289',
',,,,,,817,,,,,289,246,,,,,,,,,,,,,,,,,,,,,246,403,,,,,,,,,,,,,,,,,,',
',,,,246,,,,,,,,,,,,,289,,289,,,,,,,,,,,289,,,,,,859,,289,,,,,,,,289',
',,,,,,,,,,,,,,,,,,,,,,,289,876,,,,,,,,,289,,,,,,289,,,,,,876,,,,,,,',
',,,,,,,,,,,,,,,,,289,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,289,,,,,,,,,,,289',
'289,289,,,,,,,,,,,,,,,289,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,289,,,,,,,,,,,,289,,,,,,,,,,,,,289,,,,,,,,,,289,,,,,,,,',
',,,,,,,,,,,,289' ]
        racc_goto_table = arr = ::Array.new(2285, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'44,47,56,56,22,54,54,54,29,29,29,59,106,102,32,47,78,10,51,23,137,48',
'48,8,43,24,24,81,41,35,44,44,44,6,75,75,26,108,109,29,108,108,139,14',
'14,58,4,7,58,23,23,23,60,105,60,38,57,57,140,18,42,76,44,39,11,44,45',
'50,50,55,55,26,60,55,2,146,26,26,143,48,26,23,61,31,31,31,46,11,46,52',
'52,85,36,48,86,16,16,87,44,16,88,33,33,89,4,36,44,44,90,91,34,34,34',
'77,77,36,36,23,92,93,52,26,26,26,26,23,23,47,128,125,125,146,94,125',
'128,95,96,97,98,99,16,16,16,16,100,7,101,56,74,22,103,104,72,7,7,71',
'143,70,62,84,79,112,114,33,33,115,116,117,118,119,123,124,83,126,127',
'82,129,109,54,54,130,2,17,131,29,132,134,135,27,19,15,12,141,5,44,1',
',,,,,,45,,,48,,,,,,44,17,23,48,136,136,136,,,,26,26,60,78,,,43,,137',
'23,26,137,,,,18,18,18,,,,18,,,,,54,54,,29,29,,,80,,54,,,29,,,,,,51,',
'140,,,,,,,106,102,,44,,11,17,44,44,51,76,51,,,17,17,,41,,,44,105,23',
',20,,23,23,38,,6,44,,38,139,42,39,,80,23,,39,,4,81,57,,57,58,58,23,31',
'31,,20,109,33,33,,,31,,,,,52,,,,107,128,,,,77,,,44,52,44,,,,,136,136',
',136,,,26,26,35,137,,,23,35,23,,,,17,43,,56,,22,59,16,16,26,32,,108',
'10,4,108,108,17,,,20,53,,,53,,33,136,20,20,,,48,52,,52,48,33,56,21,29',
'53,,53,53,53,53,53,8,8,55,,,,14,,21,21,14,,,21,21,21,,,,48,57,21,21',
'21,56,57,22,60,,,50,,51,51,50,17,,,,,17,137,,21,21,56,,,21,21,,,21,21',
',75,,,107,,,29,,17,,,,44,20,24,41,,,44,34,,,,57,34,26,57,,,,20,23,,8',
'21,,48,23,21,21,21,21,21,21,75,,80,48,,44,44,,,,26,,44,33,33,7,,,,53',
',,78,,23,23,44,51,108,,44,23,52,34,,44,34,,,,,75,,,8,23,,,,23,106,102',
'20,107,23,107,,20,107,,,,56,26,59,,,,,,52,,,,,80,,,,33,20,8,,,,53,21',
'21,21,21,21,,,21,21,21,44,,,29,,,,21,21,,,44,,,,107,,,,23,18,18,,44',
'44,41,18,54,44,56,23,22,,47,,41,,107,44,,,,23,23,,,,23,,,,,,,17,9,,23',
'54,,21,21,,,57,,29,57,,21,,,,21,,,,21,21,,,,,,,,52,44,44,,21,17,17,48',
',26,52,,,,44,21,,26,,,23,23,,51,,48,17,,16,,17,54,23,23,,17,16,,,,,',
',,,,110,,,,110,,,53,,21,21,,44,,,21,18,21,,,,,,53,,,51,,57,57,21,23',
',44,44,48,,110,20,,33,,,44,,,,,,,17,,23,23,80,80,53,,,,,17,23,,,53,80',
',53,53,,,,17,17,20,20,,44,53,53,,44,,,,56,9,22,,,,53,44,21,,20,23,44',
',20,23,,,9,20,,26,,,,,23,,,44,,23,,,,,,29,,,16,44,,,,,,,23,44,,17,17',
',52,44,,,,,23,,,21,17,,,48,23,21,,,,,23,21,,21,,,20,,,,9,,,,,9,110,20',
'21,,,,,,,,,,,20,20,,21,21,17,,,,,21,,,,,80,80,,,,80,,,,21,,17,17,21',
',,,,21,,,17,,,,,,21,,,,,,,,,,,110,,,,53,,,,,,,20,20,53,53,,,,17,,21',
'21,17,,20,,21,,110,,110,,,17,53,,53,,17,,,21,,,,,,80,,,53,,21,80,,17',
',,21,,,,,,21,21,,17,20,21,,,,,,17,,,,21,,17,,,,,110,,,20,20,,,,,,,,',
'20,53,53,,,,,,,110,,,,53,,,,53,21,,,,21,,,,21,,,21,21,,,,,20,,,,28,',
',21,28,28,28,,,,21,20,,,,,20,,,,28,28,28,,,,,,,,,,,20,,28,28,,,,,9,9',
',,20,,21,,,,,,20,,,,,,20,,,9,,,,9,,21,21,,9,,,,,,,21,,,,,,,,,,,,53,',
',,,,,,,,,53,,,,,,,,,,,,21,,,,21,,53,,,,21,,,,,21,,,,9,21,,,,,,,,,,9',
',,,,25,,21,,,,,9,9,,,,,,21,,,,,,,,21,,21,,,,21,28,28,28,28,,,28,,,,',
',,,,,,,,,28,,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28',
'28,28,28,28,28,28,28,,,,,,,,9,28,,28,,,,,28,,,,,,28,28,,,,,,,,28,,,',
',,,,,,,,,,,,,,,,,9,,,,,,,,,28,,,,25,25,,,,,,,9,9,,,,,,,,,,,,,,,,,,,',
',,37,37,,,,,,37,37,37,,,,,,,,,,,,,9,37,,25,,25,,,,37,25,,,,,9,,,,,,',
',,,,,,,,,,,,,,,9,,,,,,,28,,,,,9,,,,,,,,,,,,,,9,,,,,,,28,,28,28,28,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,28,,28,,28,,,,,,,,,,,,,,,,28,,,,,,,,,,,',
',,28,,,,,,,,,28,28,28,,,,,,25,,,,28,,37,28,37,37,37,37,37,37,37,37,37',
'37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,,,,,,,,,37,,37,,',
',,37,,,,,,,,,,,,25,,25,,25,,,,,,,37,,,,,,28,,28,25,28,28,,37,,,28,,',
'28,,,37,,,,,28,,,,,,,,28,,,,,,,,,25,,,25,28,,,,,,,,,,,,,,,,,,,,,,37',
',37,,,28,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,28,,,,,28,,,,,,,,,25,,,37,,,',
',,,,,,,,,,28,28,,,,,,,,,25,28,28,28,37,37,37,,,,,,,25,,,,,28,,,,,,,',
',,,,,,,,,,,37,,37,25,37,,,,,,,,,,,,,,,,,,,,,,,,,,,,37,,25,,28,,,,,,',
'37,37,37,,,28,,,,,,,37,,,37,,,,,,,25,,,,,37,28,,,,,,,,,,,,,,,,,,,,,28',
'25,,,,,,,,,,,,,,,,,,,,,,,28,,,,,,,,,,,,,37,,37,,,,,,,,,,,37,,,,,,25',
',37,,,,,,,,37,,,,,,,,,,,,,,,,,,,,,,,,37,25,,,,,,,,,37,,,,,,37,,,,,,25',
',,,,,,,,,,,,,,,,,,,,,,,,37,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,37,,,,,,,,',
',,37,37,37,,,,,,,,,,,,,,,37,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,37,,,,,,,,,,,,37,,,,,,,,,,,,,37,,,,,,,,,,37,,,,,,,,,,',
',,,,,,,,,,37' ]
        racc_goto_check = arr = ::Array.new(2285, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_goto_pointer = [
   nil,   195,    74,   nil,    43,    95,    30,    47,  -282,   644,
  -498,  -598,  -570,   nil,    36,   182,    38,   182,    41,   127,
   298,   415,   -49,    19,  -170,  1225,    19,    80,  1113,   -14,
   nil,    61,  -250,   -98,    84,  -234,  -371,  1420,    25,    33,
   nil,    -3,    28,  -270,     0,  -496,  -265,   -64,    14,   nil,
    60,   -23,    58,   344,   -17,  -240,   -51,    30,  -427,  -238,
  -413,  -403,  -107,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    92,   101,    97,   nil,    92,  -309,  -622,  -441,  -332,  -406,
   251,  -542,   110,  -191,   108,    32,  -592,    37,  -590,  -457,
  -737,    46,  -583,  -233,  -665,    71,  -432,  -225,  -432,  -670,
    88,  -171,   -43,  -632,  -385,  -479,   -44,  -226,  -285,  -531,
   219,   nil,   -82,   nil,  -106,  -104,  -711,  -392,  -495,  -596,
   nil,   nil,   nil,    99,    98,    54,    96,  -200,  -240,    98,
  -538,  -394,  -393,   nil,  -522,  -615,  -495,  -314,   nil,  -494,
  -276,  -489,   nil,  -726,   nil,   nil,  -392 ]

racc_goto_default = [
   nil,   nil,   nil,     3,   nil,     4,   349,   275,   nil,   515,
   nil,   781,   nil,   274,   nil,   nil,   nil,   209,    16,    11,
   210,   299,   nil,   208,   nil,   252,    15,   nil,    19,    20,
    21,   nil,    25,   656,   nil,   nil,   nil,    26,    29,   nil,
    31,    34,    33,   nil,   206,   563,   nil,   115,   417,   114,
    69,   nil,    42,   533,   309,   nil,   249,   415,   603,   464,
   250,   nil,   nil,   265,    43,    44,    45,    46,    47,    48,
    49,   nil,   266,    55,   nil,   nil,   nil,   nil,   nil,   nil,
   550,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   322,   321,   672,   324,   nil,   325,
   326,   244,   nil,   421,   nil,   nil,   nil,   nil,   nil,   nil,
    68,    70,    71,    72,   nil,   nil,   nil,   nil,   580,   nil,
   nil,   nil,   nil,   380,   709,   711,   nil,   333,   328,   335,
   nil,   544,   545,   715,   338,   341,   257 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 138, :_reduce_1,
  2, 139, :_reduce_2,
  0, 140, :_reduce_3,
  1, 140, :_reduce_4,
  3, 140, :_reduce_5,
  1, 142, :_reduce_none,
  4, 142, :_reduce_7,
  4, 145, :_reduce_8,
  2, 146, :_reduce_9,
  0, 150, :_reduce_10,
  1, 150, :_reduce_11,
  3, 150, :_reduce_12,
  0, 164, :_reduce_13,
  4, 144, :_reduce_14,
  3, 144, :_reduce_15,
  3, 144, :_reduce_none,
  3, 144, :_reduce_17,
  2, 144, :_reduce_18,
  3, 144, :_reduce_19,
  3, 144, :_reduce_20,
  3, 144, :_reduce_21,
  3, 144, :_reduce_22,
  3, 144, :_reduce_23,
  4, 144, :_reduce_none,
  3, 144, :_reduce_25,
  3, 144, :_reduce_26,
  3, 144, :_reduce_27,
  6, 144, :_reduce_none,
  5, 144, :_reduce_29,
  5, 144, :_reduce_none,
  5, 144, :_reduce_none,
  3, 144, :_reduce_none,
  3, 144, :_reduce_33,
  3, 144, :_reduce_34,
  3, 144, :_reduce_35,
  1, 144, :_reduce_none,
  1, 163, :_reduce_none,
  3, 163, :_reduce_38,
  3, 163, :_reduce_39,
  2, 163, :_reduce_40,
  2, 163, :_reduce_41,
  1, 163, :_reduce_none,
  1, 153, :_reduce_none,
  1, 155, :_reduce_none,
  1, 155, :_reduce_none,
  2, 155, :_reduce_46,
  2, 155, :_reduce_47,
  2, 155, :_reduce_48,
  1, 167, :_reduce_none,
  4, 167, :_reduce_none,
  4, 167, :_reduce_none,
  4, 172, :_reduce_none,
  2, 166, :_reduce_53,
  3, 166, :_reduce_none,
  4, 166, :_reduce_55,
  5, 166, :_reduce_none,
  4, 166, :_reduce_57,
  5, 166, :_reduce_none,
  2, 166, :_reduce_59,
  2, 166, :_reduce_60,
  1, 156, :_reduce_61,
  3, 156, :_reduce_62,
  1, 176, :_reduce_63,
  3, 176, :_reduce_64,
  1, 175, :_reduce_65,
  2, 175, :_reduce_66,
  3, 175, :_reduce_67,
  5, 175, :_reduce_none,
  2, 175, :_reduce_69,
  4, 175, :_reduce_none,
  2, 175, :_reduce_71,
  1, 175, :_reduce_72,
  3, 175, :_reduce_none,
  1, 178, :_reduce_74,
  3, 178, :_reduce_75,
  2, 177, :_reduce_76,
  3, 177, :_reduce_77,
  1, 180, :_reduce_none,
  3, 180, :_reduce_none,
  1, 179, :_reduce_80,
  4, 179, :_reduce_81,
  3, 179, :_reduce_82,
  3, 179, :_reduce_none,
  3, 179, :_reduce_none,
  3, 179, :_reduce_none,
  2, 179, :_reduce_none,
  1, 179, :_reduce_none,
  1, 154, :_reduce_88,
  4, 154, :_reduce_89,
  3, 154, :_reduce_90,
  3, 154, :_reduce_91,
  3, 154, :_reduce_92,
  3, 154, :_reduce_93,
  2, 154, :_reduce_94,
  1, 154, :_reduce_none,
  1, 182, :_reduce_none,
  2, 183, :_reduce_97,
  1, 183, :_reduce_98,
  3, 183, :_reduce_99,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_103,
  1, 184, :_reduce_104,
  1, 151, :_reduce_105,
  1, 151, :_reduce_none,
  1, 152, :_reduce_107,
  3, 152, :_reduce_108,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  3, 165, :_reduce_183,
  5, 165, :_reduce_184,
  3, 165, :_reduce_185,
  6, 165, :_reduce_186,
  5, 165, :_reduce_187,
  5, 165, :_reduce_none,
  5, 165, :_reduce_none,
  5, 165, :_reduce_none,
  4, 165, :_reduce_none,
  3, 165, :_reduce_none,
  3, 165, :_reduce_193,
  3, 165, :_reduce_194,
  3, 165, :_reduce_195,
  3, 165, :_reduce_196,
  3, 165, :_reduce_197,
  3, 165, :_reduce_198,
  3, 165, :_reduce_199,
  3, 165, :_reduce_200,
  4, 165, :_reduce_none,
  4, 165, :_reduce_none,
  2, 165, :_reduce_203,
  2, 165, :_reduce_204,
  3, 165, :_reduce_205,
  3, 165, :_reduce_206,
  3, 165, :_reduce_207,
  3, 165, :_reduce_208,
  3, 165, :_reduce_209,
  3, 165, :_reduce_210,
  3, 165, :_reduce_211,
  3, 165, :_reduce_212,
  3, 165, :_reduce_213,
  3, 165, :_reduce_214,
  3, 165, :_reduce_215,
  3, 165, :_reduce_216,
  3, 165, :_reduce_217,
  2, 165, :_reduce_218,
  2, 165, :_reduce_219,
  3, 165, :_reduce_220,
  3, 165, :_reduce_221,
  3, 165, :_reduce_222,
  3, 165, :_reduce_223,
  3, 165, :_reduce_224,
  5, 165, :_reduce_225,
  1, 165, :_reduce_none,
  1, 162, :_reduce_none,
  1, 159, :_reduce_228,
  2, 159, :_reduce_229,
  2, 159, :_reduce_230,
  4, 159, :_reduce_231,
  2, 159, :_reduce_232,
  3, 194, :_reduce_233,
  4, 194, :_reduce_234,
  4, 194, :_reduce_none,
  6, 194, :_reduce_none,
  1, 195, :_reduce_none,
  1, 195, :_reduce_none,
  1, 168, :_reduce_239,
  2, 168, :_reduce_240,
  2, 168, :_reduce_241,
  4, 168, :_reduce_242,
  1, 168, :_reduce_243,
  4, 198, :_reduce_none,
  1, 198, :_reduce_none,
  0, 200, :_reduce_246,
  2, 171, :_reduce_247,
  1, 199, :_reduce_none,
  2, 199, :_reduce_249,
  3, 199, :_reduce_250,
  2, 197, :_reduce_251,
  2, 196, :_reduce_252,
  0, 196, :_reduce_253,
  1, 191, :_reduce_254,
  2, 191, :_reduce_255,
  3, 191, :_reduce_256,
  4, 191, :_reduce_257,
  3, 161, :_reduce_258,
  4, 161, :_reduce_none,
  2, 161, :_reduce_260,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  0, 221, :_reduce_270,
  4, 189, :_reduce_271,
  4, 189, :_reduce_272,
  3, 189, :_reduce_273,
  3, 189, :_reduce_274,
  2, 189, :_reduce_275,
  4, 189, :_reduce_276,
  3, 189, :_reduce_277,
  3, 189, :_reduce_278,
  1, 189, :_reduce_279,
  4, 189, :_reduce_280,
  3, 189, :_reduce_281,
  1, 189, :_reduce_282,
  5, 189, :_reduce_283,
  4, 189, :_reduce_284,
  3, 189, :_reduce_285,
  2, 189, :_reduce_286,
  1, 189, :_reduce_none,
  2, 189, :_reduce_288,
  2, 189, :_reduce_289,
  6, 189, :_reduce_290,
  6, 189, :_reduce_291,
  0, 222, :_reduce_292,
  0, 223, :_reduce_293,
  7, 189, :_reduce_294,
  0, 224, :_reduce_295,
  0, 225, :_reduce_296,
  7, 189, :_reduce_297,
  5, 189, :_reduce_298,
  4, 189, :_reduce_299,
  5, 189, :_reduce_300,
  0, 226, :_reduce_301,
  0, 227, :_reduce_302,
  9, 189, :_reduce_none,
  0, 228, :_reduce_304,
  0, 229, :_reduce_305,
  7, 189, :_reduce_306,
  0, 230, :_reduce_307,
  0, 231, :_reduce_308,
  8, 189, :_reduce_309,
  0, 232, :_reduce_310,
  0, 233, :_reduce_311,
  6, 189, :_reduce_312,
  0, 234, :_reduce_313,
  6, 189, :_reduce_314,
  0, 235, :_reduce_315,
  0, 236, :_reduce_316,
  9, 189, :_reduce_317,
  1, 189, :_reduce_318,
  1, 189, :_reduce_319,
  1, 189, :_reduce_320,
  1, 189, :_reduce_none,
  1, 158, :_reduce_none,
  1, 212, :_reduce_none,
  1, 212, :_reduce_none,
  1, 212, :_reduce_none,
  2, 212, :_reduce_none,
  1, 214, :_reduce_none,
  1, 214, :_reduce_none,
  1, 214, :_reduce_none,
  2, 211, :_reduce_330,
  3, 237, :_reduce_331,
  2, 237, :_reduce_332,
  1, 237, :_reduce_none,
  1, 237, :_reduce_none,
  3, 238, :_reduce_335,
  3, 238, :_reduce_336,
  1, 213, :_reduce_337,
  0, 240, :_reduce_338,
  6, 213, :_reduce_339,
  1, 148, :_reduce_none,
  2, 148, :_reduce_341,
  1, 241, :_reduce_342,
  3, 241, :_reduce_343,
  3, 242, :_reduce_344,
  1, 173, :_reduce_none,
  2, 173, :_reduce_346,
  1, 173, :_reduce_347,
  3, 173, :_reduce_348,
  1, 243, :_reduce_349,
  2, 245, :_reduce_350,
  1, 245, :_reduce_351,
  6, 239, :_reduce_352,
  4, 239, :_reduce_353,
  4, 239, :_reduce_354,
  2, 239, :_reduce_355,
  2, 239, :_reduce_356,
  4, 239, :_reduce_357,
  2, 239, :_reduce_358,
  2, 239, :_reduce_359,
  1, 239, :_reduce_360,
  0, 249, :_reduce_361,
  5, 248, :_reduce_362,
  2, 169, :_reduce_363,
  4, 169, :_reduce_none,
  4, 169, :_reduce_none,
  2, 210, :_reduce_366,
  4, 210, :_reduce_367,
  3, 210, :_reduce_368,
  4, 210, :_reduce_369,
  3, 210, :_reduce_370,
  2, 210, :_reduce_371,
  1, 210, :_reduce_372,
  0, 251, :_reduce_373,
  5, 209, :_reduce_374,
  0, 252, :_reduce_375,
  5, 209, :_reduce_376,
  0, 254, :_reduce_377,
  6, 215, :_reduce_378,
  1, 253, :_reduce_379,
  1, 253, :_reduce_none,
  6, 147, :_reduce_381,
  0, 147, :_reduce_382,
  1, 255, :_reduce_383,
  1, 255, :_reduce_none,
  1, 255, :_reduce_none,
  2, 256, :_reduce_386,
  1, 256, :_reduce_387,
  2, 149, :_reduce_388,
  1, 149, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 202, :_reduce_393,
  1, 259, :_reduce_none,
  2, 259, :_reduce_none,
  3, 260, :_reduce_396,
  1, 260, :_reduce_397,
  3, 203, :_reduce_398,
  3, 204, :_reduce_399,
  3, 205, :_reduce_400,
  3, 205, :_reduce_401,
  1, 263, :_reduce_402,
  3, 263, :_reduce_403,
  1, 264, :_reduce_404,
  2, 264, :_reduce_405,
  3, 206, :_reduce_406,
  3, 206, :_reduce_407,
  1, 266, :_reduce_408,
  3, 266, :_reduce_409,
  1, 261, :_reduce_410,
  2, 261, :_reduce_411,
  1, 262, :_reduce_412,
  2, 262, :_reduce_413,
  1, 265, :_reduce_414,
  0, 268, :_reduce_415,
  3, 265, :_reduce_416,
  0, 269, :_reduce_417,
  4, 265, :_reduce_418,
  1, 267, :_reduce_419,
  1, 267, :_reduce_420,
  1, 267, :_reduce_421,
  1, 267, :_reduce_none,
  2, 187, :_reduce_423,
  1, 187, :_reduce_424,
  1, 270, :_reduce_none,
  1, 270, :_reduce_none,
  1, 270, :_reduce_none,
  1, 270, :_reduce_none,
  3, 258, :_reduce_429,
  1, 257, :_reduce_430,
  1, 257, :_reduce_431,
  2, 257, :_reduce_none,
  2, 257, :_reduce_none,
  1, 181, :_reduce_434,
  1, 181, :_reduce_435,
  1, 181, :_reduce_436,
  1, 181, :_reduce_437,
  1, 181, :_reduce_438,
  1, 181, :_reduce_439,
  1, 181, :_reduce_440,
  1, 181, :_reduce_441,
  1, 181, :_reduce_442,
  1, 181, :_reduce_443,
  1, 181, :_reduce_444,
  1, 207, :_reduce_445,
  1, 157, :_reduce_446,
  1, 160, :_reduce_447,
  1, 160, :_reduce_none,
  1, 216, :_reduce_449,
  3, 216, :_reduce_450,
  2, 216, :_reduce_451,
  4, 218, :_reduce_452,
  2, 218, :_reduce_453,
  6, 271, :_reduce_454,
  4, 271, :_reduce_455,
  4, 271, :_reduce_456,
  2, 271, :_reduce_457,
  4, 271, :_reduce_458,
  2, 271, :_reduce_459,
  2, 271, :_reduce_460,
  1, 271, :_reduce_461,
  0, 271, :_reduce_462,
  1, 274, :_reduce_none,
  1, 274, :_reduce_464,
  1, 275, :_reduce_465,
  1, 275, :_reduce_466,
  1, 275, :_reduce_467,
  1, 275, :_reduce_468,
  1, 276, :_reduce_469,
  3, 276, :_reduce_470,
  1, 278, :_reduce_471,
  3, 278, :_reduce_none,
  1, 279, :_reduce_473,
  3, 279, :_reduce_474,
  1, 277, :_reduce_none,
  4, 277, :_reduce_none,
  3, 277, :_reduce_none,
  2, 277, :_reduce_none,
  1, 277, :_reduce_none,
  1, 246, :_reduce_480,
  3, 246, :_reduce_481,
  3, 280, :_reduce_482,
  1, 272, :_reduce_483,
  3, 272, :_reduce_484,
  1, 281, :_reduce_none,
  1, 281, :_reduce_none,
  2, 247, :_reduce_487,
  1, 247, :_reduce_488,
  1, 282, :_reduce_none,
  1, 282, :_reduce_none,
  2, 244, :_reduce_491,
  2, 273, :_reduce_492,
  0, 273, :_reduce_493,
  1, 219, :_reduce_494,
  4, 219, :_reduce_495,
  0, 208, :_reduce_496,
  2, 208, :_reduce_497,
  1, 193, :_reduce_498,
  3, 193, :_reduce_499,
  3, 283, :_reduce_500,
  2, 283, :_reduce_501,
  1, 174, :_reduce_none,
  1, 174, :_reduce_none,
  1, 174, :_reduce_none,
  1, 170, :_reduce_none,
  1, 170, :_reduce_none,
  1, 170, :_reduce_none,
  1, 170, :_reduce_none,
  1, 250, :_reduce_none,
  1, 250, :_reduce_none,
  1, 250, :_reduce_none,
  1, 220, :_reduce_none,
  1, 220, :_reduce_none,
  0, 141, :_reduce_none,
  1, 141, :_reduce_none,
  0, 188, :_reduce_none,
  1, 188, :_reduce_none,
  0, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 217, :_reduce_none,
  1, 217, :_reduce_none,
  1, 143, :_reduce_none,
  2, 143, :_reduce_none,
  0, 190, :_reduce_525 ]

racc_reduce_n = 526

racc_shift_n = 912

racc_token_table = {
  false => 0,
  :error => 1,
  :kCLASS => 2,
  :kMODULE => 3,
  :kDEF => 4,
  :kUNDEF => 5,
  :kBEGIN => 6,
  :kRESCUE => 7,
  :kENSURE => 8,
  :kEND => 9,
  :kIF => 10,
  :kUNLESS => 11,
  :kTHEN => 12,
  :kELSIF => 13,
  :kELSE => 14,
  :kCASE => 15,
  :kWHEN => 16,
  :kWHILE => 17,
  :kUNTIL => 18,
  :kFOR => 19,
  :kBREAK => 20,
  :kNEXT => 21,
  :kREDO => 22,
  :kRETRY => 23,
  :kIN => 24,
  :kDO => 25,
  :kDO_COND => 26,
  :kDO_BLOCK => 27,
  :kRETURN => 28,
  :kYIELD => 29,
  :kSUPER => 30,
  :kSELF => 31,
  :kNIL => 32,
  :kTRUE => 33,
  :kFALSE => 34,
  :kAND => 35,
  :kOR => 36,
  :kNOT => 37,
  :kIF_MOD => 38,
  :kUNLESS_MOD => 39,
  :kWHILE_MOD => 40,
  :kUNTIL_MOD => 41,
  :kRESCUE_MOD => 42,
  :kALIAS => 43,
  :kDEFINED => 44,
  :klBEGIN => 45,
  :klEND => 46,
  :k__LINE__ => 47,
  :k__FILE__ => 48,
  :tIDENTIFIER => 49,
  :tFID => 50,
  :tGVAR => 51,
  :tIVAR => 52,
  :tCONSTANT => 53,
  :tCVAR => 54,
  :tNTH_REF => 55,
  :tBACK_REF => 56,
  :tSTRING_CONTENT => 57,
  :tINTEGER => 58,
  :tFLOAT => 59,
  :tREGEXP_END => 60,
  "+@" => 61,
  "-@" => 62,
  "-@NUM" => 63,
  :tPOW => 64,
  :tCMP => 65,
  :tEQ => 66,
  :tEQQ => 67,
  :tNEQ => 68,
  :tGEQ => 69,
  :tLEQ => 70,
  :tANDOP => 71,
  :tOROP => 72,
  :tMATCH => 73,
  :tNMATCH => 74,
  :tDOT => 75,
  :tDOT2 => 76,
  :tDOT3 => 77,
  :tAREF => 78,
  :tASET => 79,
  :tLSHFT => 80,
  :tRSHFT => 81,
  :tCOLON2 => 82,
  :tCOLON3 => 83,
  :tOP_ASGN => 84,
  :tASSOC => 85,
  :tLPAREN => 86,
  :tLPAREN2 => 87,
  :tRPAREN => 88,
  :tLPAREN_ARG => 89,
  :ARRAY_BEG => 90,
  :tRBRACK => 91,
  :tLBRACE => 92,
  :tLBRACE_ARG => 93,
  :tSTAR => 94,
  :tSTAR2 => 95,
  :tAMPER => 96,
  :tAMPER2 => 97,
  :tTILDE => 98,
  :tPERCENT => 99,
  :tDIVIDE => 100,
  "+" => 101,
  "-" => 102,
  :tLT => 103,
  :tGT => 104,
  :tPIPE => 105,
  :tBANG => 106,
  :tCARET => 107,
  :tLCURLY => 108,
  :tRCURLY => 109,
  :tBACK_REF2 => 110,
  :tSYMBEG => 111,
  :tSTRING_BEG => 112,
  :tXSTRING_BEG => 113,
  :tREGEXP_BEG => 114,
  :tWORDS_BEG => 115,
  :tAWORDS_BEG => 116,
  :tSTRING_DBEG => 117,
  :tSTRING_DVAR => 118,
  :tSTRING_END => 119,
  :tSTRING => 120,
  :tSYMBOL => 121,
  :tNL => 122,
  :tEH => 123,
  :tCOLON => 124,
  :tCOMMA => 125,
  :tSPACE => 126,
  :tSEMI => 127,
  :tLABEL => 128,
  :tLAMBDA => 129,
  :tLAMBEG => 130,
  :kDO_LAMBDA => 131,
  :tLBRACK2 => 132,
  :tLBRACK => 133,
  :tEQL => 134,
  :tLOWEST => 135,
  "{" => 136 }

racc_nt_base = 137

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "kCLASS",
  "kMODULE",
  "kDEF",
  "kUNDEF",
  "kBEGIN",
  "kRESCUE",
  "kENSURE",
  "kEND",
  "kIF",
  "kUNLESS",
  "kTHEN",
  "kELSIF",
  "kELSE",
  "kCASE",
  "kWHEN",
  "kWHILE",
  "kUNTIL",
  "kFOR",
  "kBREAK",
  "kNEXT",
  "kREDO",
  "kRETRY",
  "kIN",
  "kDO",
  "kDO_COND",
  "kDO_BLOCK",
  "kRETURN",
  "kYIELD",
  "kSUPER",
  "kSELF",
  "kNIL",
  "kTRUE",
  "kFALSE",
  "kAND",
  "kOR",
  "kNOT",
  "kIF_MOD",
  "kUNLESS_MOD",
  "kWHILE_MOD",
  "kUNTIL_MOD",
  "kRESCUE_MOD",
  "kALIAS",
  "kDEFINED",
  "klBEGIN",
  "klEND",
  "k__LINE__",
  "k__FILE__",
  "tIDENTIFIER",
  "tFID",
  "tGVAR",
  "tIVAR",
  "tCONSTANT",
  "tCVAR",
  "tNTH_REF",
  "tBACK_REF",
  "tSTRING_CONTENT",
  "tINTEGER",
  "tFLOAT",
  "tREGEXP_END",
  "\"+@\"",
  "\"-@\"",
  "\"-@NUM\"",
  "tPOW",
  "tCMP",
  "tEQ",
  "tEQQ",
  "tNEQ",
  "tGEQ",
  "tLEQ",
  "tANDOP",
  "tOROP",
  "tMATCH",
  "tNMATCH",
  "tDOT",
  "tDOT2",
  "tDOT3",
  "tAREF",
  "tASET",
  "tLSHFT",
  "tRSHFT",
  "tCOLON2",
  "tCOLON3",
  "tOP_ASGN",
  "tASSOC",
  "tLPAREN",
  "tLPAREN2",
  "tRPAREN",
  "tLPAREN_ARG",
  "ARRAY_BEG",
  "tRBRACK",
  "tLBRACE",
  "tLBRACE_ARG",
  "tSTAR",
  "tSTAR2",
  "tAMPER",
  "tAMPER2",
  "tTILDE",
  "tPERCENT",
  "tDIVIDE",
  "\"+\"",
  "\"-\"",
  "tLT",
  "tGT",
  "tPIPE",
  "tBANG",
  "tCARET",
  "tLCURLY",
  "tRCURLY",
  "tBACK_REF2",
  "tSYMBEG",
  "tSTRING_BEG",
  "tXSTRING_BEG",
  "tREGEXP_BEG",
  "tWORDS_BEG",
  "tAWORDS_BEG",
  "tSTRING_DBEG",
  "tSTRING_DVAR",
  "tSTRING_END",
  "tSTRING",
  "tSYMBOL",
  "tNL",
  "tEH",
  "tCOLON",
  "tCOMMA",
  "tSPACE",
  "tSEMI",
  "tLABEL",
  "tLAMBDA",
  "tLAMBEG",
  "kDO_LAMBDA",
  "tLBRACK2",
  "tLBRACK",
  "tEQL",
  "tLOWEST",
  "\"{\"",
  "$start",
  "program",
  "top_compstmt",
  "top_stmts",
  "opt_terms",
  "top_stmt",
  "terms",
  "stmt",
  "bodystmt",
  "compstmt",
  "opt_rescue",
  "opt_else",
  "opt_ensure",
  "stmts",
  "fitem",
  "undef_list",
  "expr_value",
  "lhs",
  "command_call",
  "mlhs",
  "var_lhs",
  "primary_value",
  "aref_args",
  "backref",
  "mrhs",
  "arg_value",
  "expr",
  "@1",
  "arg",
  "command",
  "block_command",
  "call_args",
  "block_call",
  "operation2",
  "command_args",
  "cmd_brace_block",
  "opt_block_var",
  "operation",
  "mlhs_basic",
  "mlhs_entry",
  "mlhs_head",
  "mlhs_item",
  "mlhs_node",
  "mlhs_post",
  "variable",
  "cname",
  "cpath",
  "fname",
  "op",
  "reswords",
  "symbol",
  "opt_nl",
  "primary",
  "none",
  "args",
  "trailer",
  "assocs",
  "paren_args",
  "opt_paren_args",
  "opt_block_arg",
  "block_arg",
  "call_args2",
  "open_args",
  "@2",
  "literal",
  "strings",
  "xstring",
  "regexp",
  "words",
  "awords",
  "var_ref",
  "assoc_list",
  "brace_block",
  "method_call",
  "lambda",
  "then",
  "if_tail",
  "do",
  "case_body",
  "superclass",
  "term",
  "f_arglist",
  "singleton",
  "dot_or_colon",
  "@3",
  "@4",
  "@5",
  "@6",
  "@7",
  "@8",
  "@9",
  "@10",
  "@11",
  "@12",
  "@13",
  "@14",
  "@15",
  "@16",
  "@17",
  "@18",
  "f_larglist",
  "lambda_body",
  "block_param",
  "@19",
  "f_block_optarg",
  "f_block_opt",
  "block_args_tail",
  "f_block_arg",
  "opt_block_args_tail",
  "f_arg",
  "f_rest_arg",
  "do_block",
  "@20",
  "operation3",
  "@21",
  "@22",
  "cases",
  "@23",
  "exc_list",
  "exc_var",
  "numeric",
  "dsym",
  "string",
  "string1",
  "string_contents",
  "xstring_contents",
  "word_list",
  "word",
  "string_content",
  "qword_list",
  "string_dvar",
  "@24",
  "@25",
  "sym",
  "f_args",
  "f_optarg",
  "opt_f_block_arg",
  "f_norm_arg",
  "f_bad_arg",
  "f_arg_item",
  "f_margs",
  "f_marg",
  "f_marg_list",
  "f_opt",
  "restarg_mark",
  "blkarg_mark",
  "assoc" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

def _reduce_1(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_2(val, _values, result)
                      comp = new_compstmt val[0]
                      if comp and comp.type == :begin and comp.size == 2
                        result = comp[1]
                        result.line = comp.line
                      else
                        result = comp
                      end
                    
    result
end

def _reduce_3(val, _values, result)
                      result = new_block
                    
    result
end

def _reduce_4(val, _values, result)
                      result = new_block val[0]
                    
    result
end

def _reduce_5(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

# reduce 6 omitted

def _reduce_7(val, _values, result)
                      result = val[2]
                    
    result
end

def _reduce_8(val, _values, result)
                      result = new_body val[0], val[1], val[2], val[3]
                    
    result
end

def _reduce_9(val, _values, result)
                      comp = new_compstmt val[0]
                      if comp and comp.type == :begin and comp.size == 2
                        result = comp[1]
                        result.line = comp.line
                      else
                        result = comp
                      end
                    
    result
end

def _reduce_10(val, _values, result)
                      result = new_block
                    
    result
end

def _reduce_11(val, _values, result)
                      result = new_block val[0]
                    
    result
end

def _reduce_12(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_13(val, _values, result)
                      lexer.lex_state = :expr_fname
                    
    result
end

def _reduce_14(val, _values, result)
                      result = s(:alias, val[1], val[3])
                    
    result
end

def _reduce_15(val, _values, result)
                      result = s(:valias, val[1].intern, val[2].intern)
                    
    result
end

# reduce 16 omitted

def _reduce_17(val, _values, result)
                      result = s(:valias, val[1].intern, val[2].intern)
                    
    result
end

def _reduce_18(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_19(val, _values, result)
                      result = new_if val[2], val[0], nil
                    
    result
end

def _reduce_20(val, _values, result)
                      result = new_if val[2], nil, val[0]
                    
    result
end

def _reduce_21(val, _values, result)
                      result = s(:while, val[2], val[0], true)
                    
    result
end

def _reduce_22(val, _values, result)
                      result = s(:until, val[2], val[0], true)
                    
    result
end

def _reduce_23(val, _values, result)
                      result = s(:rescue_mod, val[0], val[2])
                    
    result
end

# reduce 24 omitted

def _reduce_25(val, _values, result)
                      result = new_assign val[0], val[2]
                    
    result
end

def _reduce_26(val, _values, result)
                      result = s(:masgn, val[0], s(:to_ary, val[2]))
                    
    result
end

def _reduce_27(val, _values, result)
                      result = new_op_asgn val[1].intern, val[0], val[2]
                    
    result
end

# reduce 28 omitted

def _reduce_29(val, _values, result)
                      result = s(:op_asgn2, val[0], "#{val[2]}=".intern, val[3].intern, val[4])
                    
    result
end

# reduce 30 omitted

# reduce 31 omitted

# reduce 32 omitted

def _reduce_33(val, _values, result)
                      result = new_assign val[0], s(:svalue, val[2])
                    
    result
end

def _reduce_34(val, _values, result)
                      result = s(:masgn, val[0], s(:to_ary, val[2]))
                    
    result
end

def _reduce_35(val, _values, result)
                      result = s(:masgn, val[0], val[2])
                    
    result
end

# reduce 36 omitted

# reduce 37 omitted

def _reduce_38(val, _values, result)
                      result = s(:and, val[0], val[2])
                      result.line = val[0].line
                    
    result
end

def _reduce_39(val, _values, result)
                      result = s(:or, val[0], val[2])
                      result.line = val[0].line
                    
    result
end

def _reduce_40(val, _values, result)
                      result = s(:not, val[1])
                      result.line = val[1].line
                    
    result
end

def _reduce_41(val, _values, result)
                      result = s(:not, val[1])
                    
    result
end

# reduce 42 omitted

# reduce 43 omitted

# reduce 44 omitted

# reduce 45 omitted

def _reduce_46(val, _values, result)
                      args = val[1]
                      args = args[1] if args.size == 2
                      result = s(:return, args)
                    
    result
end

def _reduce_47(val, _values, result)
                      args = val[1]
                      args = args[1] if args.size == 2
                      result = s(:break, args)
                    
    result
end

def _reduce_48(val, _values, result)
                      args = val[1]
                      args = args[1] if args.size == 2
                      result = s(:next, args)
                    
    result
end

# reduce 49 omitted

# reduce 50 omitted

# reduce 51 omitted

# reduce 52 omitted

def _reduce_53(val, _values, result)
                      result = new_call nil, val[0].intern, val[1]
                    
    result
end

# reduce 54 omitted

def _reduce_55(val, _values, result)
                      result = new_call val[0], val[2].intern, val[3]
                    
    result
end

# reduce 56 omitted

def _reduce_57(val, _values, result)
                    result = new_call val[0], val[2].intern, val[3]
                  
    result
end

# reduce 58 omitted

def _reduce_59(val, _values, result)
                      result = new_super val[1]
                    
    result
end

def _reduce_60(val, _values, result)
                      result = new_yield val[1]
                    
    result
end

def _reduce_61(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_62(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_63(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_64(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_65(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_66(val, _values, result)
                      result = val[0] << val[1]
                    
    result
end

def _reduce_67(val, _values, result)
                      result = val[0] << s(:splat, val[2])
                    
    result
end

# reduce 68 omitted

def _reduce_69(val, _values, result)
                      result = val[0] << s(:splat)
                    
    result
end

# reduce 70 omitted

def _reduce_71(val, _values, result)
                      result = s(:array, s(:splat, val[1]))
                    
    result
end

def _reduce_72(val, _values, result)
                      result = s(:array, s(:splat))
                    
    result
end

# reduce 73 omitted

def _reduce_74(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_75(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_76(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

def _reduce_77(val, _values, result)
                      result = val[0] << val[1]
                    
    result
end

# reduce 78 omitted

# reduce 79 omitted

def _reduce_80(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_81(val, _values, result)
                      args = val[2]
                      args.type = :arglist if args.type == :array
                      result = s(:attrasgn, val[0], :[]=, args)
                    
    result
end

def _reduce_82(val, _values, result)
                      result = new_call val[0], val[2].intern, s(:arglist)
                    
    result
end

# reduce 83 omitted

# reduce 84 omitted

# reduce 85 omitted

# reduce 86 omitted

# reduce 87 omitted

def _reduce_88(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_89(val, _values, result)
                      args = val[2]
                      args.type = :arglist if args.type == :array
                      result = s(:attrasgn, val[0], :[]=, args)
                    
    result
end

def _reduce_90(val, _values, result)
                      result = s(:attrasgn, val[0], "#{val[2]}=".intern, s(:arglist))
                    
    result
end

def _reduce_91(val, _values, result)
                      result = s(:attrasgn, val[0], "#{val[2]}=".intern, s(:arglist))
                    
    result
end

def _reduce_92(val, _values, result)
                      result = s(:attrasgn, val[0], "#{val[2]}=".intern, s(:arglist))
                    
    result
end

def _reduce_93(val, _values, result)
                      result = s(:colon2, val[0], val[2].intern)
                    
    result
end

def _reduce_94(val, _values, result)
                      result = s(:colon3, val[1].intern)
                    
    result
end

# reduce 95 omitted

# reduce 96 omitted

def _reduce_97(val, _values, result)
                      result = s(:colon3, val[1].intern)
                    
    result
end

def _reduce_98(val, _values, result)
                      result = val[0].intern
                    
    result
end

def _reduce_99(val, _values, result)
                      result = s(:colon2, val[0], val[2].intern)
                    
    result
end

# reduce 100 omitted

# reduce 101 omitted

# reduce 102 omitted

def _reduce_103(val, _values, result)
                      lexer.lex_state = :expr_end
                      result = val[0]
                    
    result
end

def _reduce_104(val, _values, result)
                      lexer.lex_state = :expr_end
                      result = val[0]
                    
    result
end

def _reduce_105(val, _values, result)
                      result = s(:sym, val[0].intern)
                    
    result
end

# reduce 106 omitted

def _reduce_107(val, _values, result)
                      result = s(:undef, val[0])
                    
    result
end

def _reduce_108(val, _values, result)
                      result = val[0] << val[2]
                    
    result
end

# reduce 109 omitted

# reduce 110 omitted

# reduce 111 omitted

# reduce 112 omitted

# reduce 113 omitted

# reduce 114 omitted

# reduce 115 omitted

# reduce 116 omitted

# reduce 117 omitted

# reduce 118 omitted

# reduce 119 omitted

# reduce 120 omitted

# reduce 121 omitted

# reduce 122 omitted

# reduce 123 omitted

# reduce 124 omitted

# reduce 125 omitted

# reduce 126 omitted

# reduce 127 omitted

# reduce 128 omitted

# reduce 129 omitted

# reduce 130 omitted

# reduce 131 omitted

# reduce 132 omitted

# reduce 133 omitted

# reduce 134 omitted

# reduce 135 omitted

# reduce 136 omitted

# reduce 137 omitted

# reduce 138 omitted

# reduce 139 omitted

# reduce 140 omitted

# reduce 141 omitted

# reduce 142 omitted

# reduce 143 omitted

# reduce 144 omitted

# reduce 145 omitted

# reduce 146 omitted

# reduce 147 omitted

# reduce 148 omitted

# reduce 149 omitted

# reduce 150 omitted

# reduce 151 omitted

# reduce 152 omitted

# reduce 153 omitted

# reduce 154 omitted

# reduce 155 omitted

# reduce 156 omitted

# reduce 157 omitted

# reduce 158 omitted

# reduce 159 omitted

# reduce 160 omitted

# reduce 161 omitted

# reduce 162 omitted

# reduce 163 omitted

# reduce 164 omitted

# reduce 165 omitted

# reduce 166 omitted

# reduce 167 omitted

# reduce 168 omitted

# reduce 169 omitted

# reduce 170 omitted

# reduce 171 omitted

# reduce 172 omitted

# reduce 173 omitted

# reduce 174 omitted

# reduce 175 omitted

# reduce 176 omitted

# reduce 177 omitted

# reduce 178 omitted

# reduce 179 omitted

# reduce 180 omitted

# reduce 181 omitted

# reduce 182 omitted

def _reduce_183(val, _values, result)
                      result = new_assign val[0], val[2]
                    
    result
end

def _reduce_184(val, _values, result)
                      result = new_assign val[0], s(:rescue_mod, val[2], val[4])
                    
    result
end

def _reduce_185(val, _values, result)
                      result = new_op_asgn val[1].intern, val[0], val[2]
                    
    result
end

def _reduce_186(val, _values, result)
                      args = val[2]
                      args.type = :arglist if args.type == :array
                      result = s(:op_asgn1, val[0], val[2], val[4].intern, val[5])
                      result.line = val[0].line
                    
    result
end

def _reduce_187(val, _values, result)
                      result = s(:op_asgn2, val[0], "#{val[2]}=".intern, val[3].intern, val[4])
                    
    result
end

# reduce 188 omitted

# reduce 189 omitted

# reduce 190 omitted

# reduce 191 omitted

# reduce 192 omitted

def _reduce_193(val, _values, result)
                      result = s(:irange, val[0], val[2])
                      result.line = val[0].line
                    
    result
end

def _reduce_194(val, _values, result)
                      result = s(:erange, val[0], val[2])
                      result.line = val[0].line
                    
    result
end

def _reduce_195(val, _values, result)
                      result = new_call val[0], :"+", s(:arglist, val[2])
                    
    result
end

def _reduce_196(val, _values, result)
                      result = new_call val[0], :"-", s(:arglist, val[2])
                    
    result
end

def _reduce_197(val, _values, result)
                      result = new_call val[0], :"*", s(:arglist, val[2])
                    
    result
end

def _reduce_198(val, _values, result)
                      result = new_call val[0], :"/", s(:arglist, val[2])
                    
    result
end

def _reduce_199(val, _values, result)
                      result = new_call val[0], :"%", s(:arglist, val[2])
                    
    result
end

def _reduce_200(val, _values, result)
                      result = new_call val[0], :"**", s(:arglist, val[2])
                    
    result
end

# reduce 201 omitted

# reduce 202 omitted

def _reduce_203(val, _values, result)
                      result = new_call val[1], :"+@", s(:arglist)
                      result = val[1] if [:int, :float].include? val[1].type
                    
    result
end

def _reduce_204(val, _values, result)
                      result = new_call val[1], :"-@", s(:arglist)
                      if val[1].type == :int
                        val[1][1] = -val[1][1]
                        result = val[1]
                      elsif val[1].type == :float
                        val[1][1] = -val[1][1].to_f
                        result = val[1]
                      end
                    
    result
end

def _reduce_205(val, _values, result)
                      result = new_call val[0], :"|", s(:arglist, val[2])
                    
    result
end

def _reduce_206(val, _values, result)
                      result = new_call val[0], :"^", s(:arglist, val[2])
                    
    result
end

def _reduce_207(val, _values, result)
                      result = new_call val[0], :"&", s(:arglist, val[2])
                    
    result
end

def _reduce_208(val, _values, result)
                      result = new_call val[0], :"<=>", s(:arglist, val[2])
                    
    result
end

def _reduce_209(val, _values, result)
                      result = new_call val[0], :">", s(:arglist, val[2])
                    
    result
end

def _reduce_210(val, _values, result)
                      result = new_call val[0], :">=", s(:arglist, val[2])
                    
    result
end

def _reduce_211(val, _values, result)
                      result = new_call val[0], :"<", s(:arglist, val[2])
                    
    result
end

def _reduce_212(val, _values, result)
                      result = new_call val[0], :"<=", s(:arglist, val[2])
                    
    result
end

def _reduce_213(val, _values, result)
                      result = new_call val[0], :"==", s(:arglist, val[2])
                    
    result
end

def _reduce_214(val, _values, result)
                      result = new_call val[0], :"===", s(:arglist, val[2])
                    
    result
end

def _reduce_215(val, _values, result)
                      result = s(:not, new_call(val[0], :"==", s(:arglist, val[2])))
                    
    result
end

def _reduce_216(val, _values, result)
                      result = new_call val[0], :"=~", s(:arglist, val[2])
                    
    result
end

def _reduce_217(val, _values, result)
                      result = s(:not, new_call(val[0], :"=~", s(:arglist, val[2])))
                    
    result
end

def _reduce_218(val, _values, result)
                      result = s(:not, val[1])
                    
    result
end

def _reduce_219(val, _values, result)
                      result = new_call val[1], :"~", s(:arglist)
                    
    result
end

def _reduce_220(val, _values, result)
                      result = new_call val[0], :"<<", s(:arglist, val[2])
                    
    result
end

def _reduce_221(val, _values, result)
                      result = new_call val[0], :">>", s(:arglist, val[2])
                    
    result
end

def _reduce_222(val, _values, result)
                      result = s(:and, val[0], val[2])
                      result.line = val[0].line
                    
    result
end

def _reduce_223(val, _values, result)
                      result = s(:or, val[0], val[2])
                      result.line = val[0].line
                    
    result
end

def _reduce_224(val, _values, result)
                      result = s(:defined, val[2])
                    
    result
end

def _reduce_225(val, _values, result)
                      result = s(:if, val[0], val[2], val[4])
                      result.line = val[0].line
                    
    result
end

# reduce 226 omitted

# reduce 227 omitted

def _reduce_228(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_229(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

def _reduce_230(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_231(val, _values, result)
                      val[0] << s(:hash, *val[2])
                      result = val[0]
                    
    result
end

def _reduce_232(val, _values, result)
                      result = s(:array, s(:hash, *val[0]))
                    
    result
end

def _reduce_233(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_234(val, _values, result)
                      result = val[1]
                    
    result
end

# reduce 235 omitted

# reduce 236 omitted

# reduce 237 omitted

# reduce 238 omitted

def _reduce_239(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

def _reduce_240(val, _values, result)
                      result = val[0]
                      add_block_pass val[0], val[1]
                    
    result
end

def _reduce_241(val, _values, result)
                      result = s(:arglist, s(:hash, *val[0]))
                      add_block_pass result, val[1]
                    
    result
end

def _reduce_242(val, _values, result)
                      result = val[0]
                      result << s(:hash, *val[2])
                    
    result
end

def _reduce_243(val, _values, result)
                      result = s(:arglist)
                      add_block_pass result, val[0]
                    
    result
end

# reduce 244 omitted

# reduce 245 omitted

def _reduce_246(val, _values, result)
                      lexer.cmdarg_push 1
                    
    result
end

def _reduce_247(val, _values, result)
                      lexer.cmdarg_pop
                      result = val[1]
                    
    result
end

# reduce 248 omitted

def _reduce_249(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_250(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_251(val, _values, result)
                      result = s(:block_pass, val[1])
                    
    result
end

def _reduce_252(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_253(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_254(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

def _reduce_255(val, _values, result)
                      result = s(:array, s(:splat, val[1]))
                    
    result
end

def _reduce_256(val, _values, result)
                      result = val[0] << val[2]
                    
    result
end

def _reduce_257(val, _values, result)
                      result  = val[0] << s(:splat, val[3])
                    
    result
end

def _reduce_258(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

# reduce 259 omitted

def _reduce_260(val, _values, result)
                      result = s(:splat, val[1])
                    
    result
end

# reduce 261 omitted

# reduce 262 omitted

# reduce 263 omitted

# reduce 264 omitted

# reduce 265 omitted

# reduce 266 omitted

# reduce 267 omitted

# reduce 268 omitted

# reduce 269 omitted

def _reduce_270(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_271(val, _values, result)
                      result = s(:begin, val[2])
                      result.line = val[1]
                    
    result
end

def _reduce_272(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_273(val, _values, result)
                      result = s(:paren, val[1] || s(:nil))
                    
    result
end

def _reduce_274(val, _values, result)
                      result = s(:colon2, val[0], val[2].intern)
                    
    result
end

def _reduce_275(val, _values, result)
                      result = s(:colon3, val[1])
                    
    result
end

def _reduce_276(val, _values, result)
                      result = new_call val[0], :[], val[2]
                    
    result
end

def _reduce_277(val, _values, result)
                      result = val[1] || s(:array)
                    
    result
end

def _reduce_278(val, _values, result)
                      result = s(:hash, *val[1])
                    
    result
end

def _reduce_279(val, _values, result)
                      result = s(:return)
                    
    result
end

def _reduce_280(val, _values, result)
                      result = new_yield val[2]
                    
    result
end

def _reduce_281(val, _values, result)
                      result = s(:yield)
                    
    result
end

def _reduce_282(val, _values, result)
                      result = s(:yield)
                    
    result
end

def _reduce_283(val, _values, result)
                      result = s(:defined, val[3])
                    
    result
end

def _reduce_284(val, _values, result)
                      result = s(:not, val[2])
                      result.line = val[2].line
                    
    result
end

def _reduce_285(val, _values, result)
                      result = s(:not, s(:nil))
                    
    result
end

def _reduce_286(val, _values, result)
                      result = new_call nil, val[0].intern, s(:arglist)
                      result << val[1]
                    
    result
end

# reduce 287 omitted

def _reduce_288(val, _values, result)
                      val[0] << val[1]
                      result = val[0]
                    
    result
end

def _reduce_289(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_290(val, _values, result)
                      result = new_if val[1], val[3], val[4]
                    
    result
end

def _reduce_291(val, _values, result)
                      result = new_if val[1], val[4], val[3]
                    
    result
end

def _reduce_292(val, _values, result)
                      lexer.cond_push 1
                      result = lexer.line
                    
    result
end

def _reduce_293(val, _values, result)
                      lexer.cond_pop
                    
    result
end

def _reduce_294(val, _values, result)
                      result = s(:while, val[2], val[5], true)
                      result.line = val[1]
                    
    result
end

def _reduce_295(val, _values, result)
                      lexer.cond_push 1
                      result = lexer.line
                    
    result
end

def _reduce_296(val, _values, result)
                      lexer.cond_pop
                    
    result
end

def _reduce_297(val, _values, result)
                      result = s(:until, val[2], val[5], true)
                      result.line = val[1]
                    
    result
end

def _reduce_298(val, _values, result)
                      result = s(:case, val[1], *val[3])
                      result.line = val[1].line
                    
    result
end

def _reduce_299(val, _values, result)
                      result = s(:case, nil, *val[2])
                      # result.line = val[2].line
                    
    result
end

def _reduce_300(val, _values, result)
                      result = s(:case, nil, val[3])
                      # result.line = val[3].line
                    
    result
end

def _reduce_301(val, _values, result)
                      # ...
                    
    result
end

def _reduce_302(val, _values, result)
                      # ...
                    
    result
end

# reduce 303 omitted

def _reduce_304(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_305(val, _values, result)
                      # ...
                    
    result
end

def _reduce_306(val, _values, result)
                      result = new_class val[2], val[3], val[5]
                      result.line = val[1]
                      result.end_line = lexer.line
                    
    result
end

def _reduce_307(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_308(val, _values, result)
                      # ...
                    
    result
end

def _reduce_309(val, _values, result)
                      result = new_sclass val[3], val[6]
                      result.line = val[2]
                    
    result
end

def _reduce_310(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_311(val, _values, result)
                      # ...
                    
    result
end

def _reduce_312(val, _values, result)
                      result = new_module val[2], val[4]
                      result.line = val[1]
                      result.end_line = lexer.line
                    
    result
end

def _reduce_313(val, _values, result)
                      result = lexer.scope_line
                      push_scope
                    
    result
end

def _reduce_314(val, _values, result)
                      result = new_def val[2], nil, val[1], val[3], val[4]
                      pop_scope
                    
    result
end

def _reduce_315(val, _values, result)
                       lexer.lex_state = :expr_fname
                    
    result
end

def _reduce_316(val, _values, result)
                      result = lexer.scope_line
                      push_scope
                    
    result
end

def _reduce_317(val, _values, result)
                      result = new_def val[5], val[1], val[4], val[6], val[7]
                      pop_scope
                    
    result
end

def _reduce_318(val, _values, result)
                      result = s(:break)
                    
    result
end

def _reduce_319(val, _values, result)
                      result = s(:next)
                    
    result
end

def _reduce_320(val, _values, result)
                      result = s(:redo)
                    
    result
end

# reduce 321 omitted

# reduce 322 omitted

# reduce 323 omitted

# reduce 324 omitted

# reduce 325 omitted

# reduce 326 omitted

# reduce 327 omitted

# reduce 328 omitted

# reduce 329 omitted

def _reduce_330(val, _values, result)
                      result = new_call nil, :lambda, s(:arglist)
                      result << new_iter(val[0], val[1])
                    
    result
end

def _reduce_331(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_332(val, _values, result)
                      result = nil
                    
    result
end

# reduce 333 omitted

# reduce 334 omitted

def _reduce_335(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_336(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_337(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_338(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_339(val, _values, result)
                      result = s(:if, val[2], val[4], val[5])
                      result.line = val[1]
                    
    result
end

# reduce 340 omitted

def _reduce_341(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_342(val, _values, result)
                      result = s(:block, val[0])
                    
    result
end

def _reduce_343(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_344(val, _values, result)
                      result = new_assign new_assignable(s(:identifier, val[0].intern)), val[2]
                    
    result
end

# reduce 345 omitted

def _reduce_346(val, _values, result)
                      result = 0
                    
    result
end

def _reduce_347(val, _values, result)
                      result = 0
                    
    result
end

def _reduce_348(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_349(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_350(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_351(val, _values, result)
                      nil
                    
    result
end

def _reduce_352(val, _values, result)
                      result = new_block_args val[0], val[2], val[4], val[5]
                    
    result
end

def _reduce_353(val, _values, result)
                      result = new_block_args val[0], val[2], nil, val[3]
                    
    result
end

def _reduce_354(val, _values, result)
                      result = new_block_args val[0], nil, val[2], val[3]
                    
    result
end

def _reduce_355(val, _values, result)
                      result = new_block_args val[0], nil, nil, nil
                    
    result
end

def _reduce_356(val, _values, result)
                      result = new_block_args val[0], nil, nil, val[1]
                    
    result
end

def _reduce_357(val, _values, result)
                      result = new_block_args nil, val[0], val[2], val[3]
                    
    result
end

def _reduce_358(val, _values, result)
                      result = new_block_args nil, val[0], nil, val[1]
                    
    result
end

def _reduce_359(val, _values, result)
                      result = new_block_args nil, nil, val[0], val[1]
                    
    result
end

def _reduce_360(val, _values, result)
                      result = new_block_args nil, nil, nil, val[0]
                    
    result
end

def _reduce_361(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_362(val, _values, result)
                      result = new_iter val[2], val[3]
                      result.line = val[1]
                      pop_scope
                    
    result
end

def _reduce_363(val, _values, result)
                      val[0] << val[1]
                      result = val[0]
                    
    result
end

# reduce 364 omitted

# reduce 365 omitted

def _reduce_366(val, _values, result)
                      result = new_call nil, val[0].intern, val[1]
                    
    result
end

def _reduce_367(val, _values, result)
                      result = new_call val[0], val[2].intern, val[3]
                    
    result
end

def _reduce_368(val, _values, result)
                      result = new_call val[0], :call, val[2]
                    
    result
end

def _reduce_369(val, _values, result)
                      result = new_call val[0], val[2].intern, val[3]
                    
    result
end

def _reduce_370(val, _values, result)
                      result = new_call val[0], val[2].intern, s(:arglist)
                    
    result
end

def _reduce_371(val, _values, result)
                      result = new_super val[1]
                    
    result
end

def _reduce_372(val, _values, result)
                      result = s(:super, nil)
                    
    result
end

def _reduce_373(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_374(val, _values, result)
                      result = new_iter val[2], val[3]
                      result.line = val[1]
                      pop_scope
                    
    result
end

def _reduce_375(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_376(val, _values, result)
                      result = new_iter val[2], val[3]
                      result.line = val[1]
                      pop_scope
                    
    result
end

def _reduce_377(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_378(val, _values, result)
                      part = s(:when, val[2], val[4])
                      part.line = val[2].line
                      result = [part]
                      result.push *val[5] if val[5]
                    
    result
end

def _reduce_379(val, _values, result)
                      result = [val[0]]
                    
    result
end

# reduce 380 omitted

def _reduce_381(val, _values, result)
                      exc = val[1] || s(:array)
                      exc << new_assign(val[2], s(:gvar, '$!'.intern)) if val[2]
                      result = [s(:resbody, exc, val[4])]
                      result.push val[5].first if val[5]
                    
    result
end

def _reduce_382(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_383(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

# reduce 384 omitted

# reduce 385 omitted

def _reduce_386(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_387(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_388(val, _values, result)
                      result = val[1].nil? ? s(:nil) : val[1]
                    
    result
end

# reduce 389 omitted

# reduce 390 omitted

# reduce 391 omitted

# reduce 392 omitted

def _reduce_393(val, _values, result)
                      result = new_str val[0]
                    
    result
end

# reduce 394 omitted

# reduce 395 omitted

def _reduce_396(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_397(val, _values, result)
                      result = s(:str, val[0])
                    
    result
end

def _reduce_398(val, _values, result)
                      result = new_xstr val[1]
                    
    result
end

def _reduce_399(val, _values, result)
                      result = new_regexp val[1], val[2]
                    
    result
end

def _reduce_400(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_401(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_402(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_403(val, _values, result)
                      part = val[1]
                      part = s(:dstr, "", val[1]) if part.type == :evstr
                      result = val[0] << part
                    
    result
end

def _reduce_404(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_405(val, _values, result)
                      result = val[0].concat([val[1]])
                    
    result
end

def _reduce_406(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_407(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_408(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_409(val, _values, result)
                      result = val[0] << s(:str, val[1])
                    
    result
end

def _reduce_410(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_411(val, _values, result)
                      result = str_append val[0], val[1]
                    
    result
end

def _reduce_412(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_413(val, _values, result)
                      result = str_append val[0], val[1]
                    
    result
end

def _reduce_414(val, _values, result)
                      result = s(:str, val[0])
                    
    result
end

def _reduce_415(val, _values, result)
                      result = lexer.strterm
                      lexer.strterm = nil
                    
    result
end

def _reduce_416(val, _values, result)
                      lexer.strterm = val[1]
                      result = s(:evstr, val[2])
                    
    result
end

def _reduce_417(val, _values, result)
                      lexer.cond_push 0
                      lexer.cmdarg_push 0
                      result = lexer.strterm
                      lexer.strterm = nil
                      lexer.lex_state = :expr_beg
                    
    result
end

def _reduce_418(val, _values, result)
                      lexer.strterm = val[1]
                      lexer.cond_lexpop
                      lexer.cmdarg_lexpop
                      result = s(:evstr, val[2])
                    
    result
end

def _reduce_419(val, _values, result)
                      result = s(:gvar, val[0].intern)
                    
    result
end

def _reduce_420(val, _values, result)
                      result = s(:ivar, val[0].intern)
                    
    result
end

def _reduce_421(val, _values, result)
                      result = s(:cvar, val[0].intern)
                    
    result
end

# reduce 422 omitted

def _reduce_423(val, _values, result)
                      result = s(:sym, val[1].intern)
                      lexer.lex_state = :expr_end
                    
    result
end

def _reduce_424(val, _values, result)
                      result = s(:sym, val[0].intern)
                    
    result
end

# reduce 425 omitted

# reduce 426 omitted

# reduce 427 omitted

# reduce 428 omitted

def _reduce_429(val, _values, result)
                      result = new_dsym val[1]
                    
    result
end

def _reduce_430(val, _values, result)
                      result = s(:int, val[0])
                    
    result
end

def _reduce_431(val, _values, result)
                      result = s(:float, val[0])
                    
    result
end

# reduce 432 omitted

# reduce 433 omitted

def _reduce_434(val, _values, result)
                      result = s(:identifier, val[0].intern)
                    
    result
end

def _reduce_435(val, _values, result)
                      result = s(:ivar, val[0].intern)
                    
    result
end

def _reduce_436(val, _values, result)
                      result = s(:gvar, val[0].intern)
                    
    result
end

def _reduce_437(val, _values, result)
                      result = s(:const, val[0].intern)
                    
    result
end

def _reduce_438(val, _values, result)
                      result = s(:cvar, val[0].intern)
                    
    result
end

def _reduce_439(val, _values, result)
                      result = s(:nil)
                    
    result
end

def _reduce_440(val, _values, result)
                      result = s(:self)
                    
    result
end

def _reduce_441(val, _values, result)
                      result = s(:true)
                    
    result
end

def _reduce_442(val, _values, result)
                      result = s(:false)
                    
    result
end

def _reduce_443(val, _values, result)
                      result = s(:str, self.file)
                    
    result
end

def _reduce_444(val, _values, result)
                      result = s(:int, lexer.line)
                    
    result
end

def _reduce_445(val, _values, result)
                      result = new_var_ref val[0]
                    
    result
end

def _reduce_446(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_447(val, _values, result)
                      result = s(:nth_ref, val[0])
                    
    result
end

# reduce 448 omitted

def _reduce_449(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_450(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_451(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_452(val, _values, result)
                      result = val[1]
                      lexer.lex_state = :expr_beg
                    
    result
end

def _reduce_453(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_454(val, _values, result)
                      result = new_args val[0], val[2], val[4], val[5]
                    
    result
end

def _reduce_455(val, _values, result)
                      result = new_args val[0], val[2], nil, val[3]
                    
    result
end

def _reduce_456(val, _values, result)
                      result = new_args val[0], nil, val[2], val[3]
                    
    result
end

def _reduce_457(val, _values, result)
                      result = new_args val[0], nil, nil, val[1]
                    
    result
end

def _reduce_458(val, _values, result)
                      result = new_args nil, val[0], val[2], val[3]
                    
    result
end

def _reduce_459(val, _values, result)
                      result = new_args nil, val[0], nil, val[1]
                    
    result
end

def _reduce_460(val, _values, result)
                      result = new_args nil, nil, val[0], val[1]
                    
    result
end

def _reduce_461(val, _values, result)
                      result = new_args nil, nil, nil, val[0]
                    
    result
end

def _reduce_462(val, _values, result)
                      result = s(:args)
                    
    result
end

# reduce 463 omitted

def _reduce_464(val, _values, result)
                      result = val[0].intern
                      scope.add_local result
                    
    result
end

def _reduce_465(val, _values, result)
                      raise 'formal argument cannot be a constant'
                    
    result
end

def _reduce_466(val, _values, result)
                      raise 'formal argument cannot be an instance variable'
                    
    result
end

def _reduce_467(val, _values, result)
                      raise 'formal argument cannot be a class variable'
                    
    result
end

def _reduce_468(val, _values, result)
                      raise 'formal argument cannot be a global variable'
                    
    result
end

def _reduce_469(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_470(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_471(val, _values, result)
                      result = s(:lasgn, val[0])
                    
    result
end

# reduce 472 omitted

def _reduce_473(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

def _reduce_474(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

# reduce 475 omitted

# reduce 476 omitted

# reduce 477 omitted

# reduce 478 omitted

# reduce 479 omitted

def _reduce_480(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_481(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_482(val, _values, result)
                      result = new_assign new_assignable(s(:identifier, val[0].intern)), val[2]
                    
    result
end

def _reduce_483(val, _values, result)
                      result = s(:block, val[0])
                    
    result
end

def _reduce_484(val, _values, result)
                      result = val[0]
                      val[0] << val[2]
                    
    result
end

# reduce 485 omitted

# reduce 486 omitted

def _reduce_487(val, _values, result)
                      result = "*#{val[1]}".intern
                    
    result
end

def _reduce_488(val, _values, result)
                      result = :"*"
                    
    result
end

# reduce 489 omitted

# reduce 490 omitted

def _reduce_491(val, _values, result)
                      result = "&#{val[1]}".intern
                    
    result
end

def _reduce_492(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_493(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_494(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_495(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_496(val, _values, result)
                      result = []
                    
    result
end

def _reduce_497(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_498(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_499(val, _values, result)
                      result = val[0].push *val[2]
                    
    result
end

def _reduce_500(val, _values, result)
                      result = [val[0], val[2]]
                    
    result
end

def _reduce_501(val, _values, result)
                      result = [s(:sym, val[0].intern), val[1]]
                    
    result
end

# reduce 502 omitted

# reduce 503 omitted

# reduce 504 omitted

# reduce 505 omitted

# reduce 506 omitted

# reduce 507 omitted

# reduce 508 omitted

# reduce 509 omitted

# reduce 510 omitted

# reduce 511 omitted

# reduce 512 omitted

# reduce 513 omitted

# reduce 514 omitted

# reduce 515 omitted

# reduce 516 omitted

# reduce 517 omitted

# reduce 518 omitted

# reduce 519 omitted

# reduce 520 omitted

# reduce 521 omitted

# reduce 522 omitted

# reduce 523 omitted

# reduce 524 omitted

def _reduce_525(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module Opal
