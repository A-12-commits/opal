#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.10
# from Racc grammer file "".
#

require 'racc/parser.rb'
module Opal
  class Parser < Racc::Parser


##### State transition tables begin ###

clist = [
'63,64,65,7,51,-85,572,686,57,58,201,202,804,61,584,59,60,62,23,24,66',
'67,200,-496,268,614,22,28,27,89,88,90,91,268,701,17,779,760,201,202',
'428,6,41,8,9,93,92,83,50,85,84,86,87,94,95,755,81,82,613,38,39,37,-268',
'-82,73,686,574,573,570,-268,-90,-432,74,-430,-87,548,583,760,-432,555',
'-430,36,548,548,30,-496,263,52,-90,548,466,-59,32,201,202,548,40,301',
'572,-439,464,577,-86,100,18,685,-496,267,99,79,73,75,76,77,78,-85,267',
'-85,74,80,-85,-268,63,64,65,301,51,56,-70,686,57,58,-430,53,54,61,700',
'59,60,62,23,24,66,67,201,202,610,-83,22,28,27,89,88,90,91,100,263,17',
'574,573,99,100,515,685,41,517,99,93,92,83,50,85,84,86,87,94,95,-498',
'81,82,817,38,39,37,-87,100,-87,547,461,-87,99,503,100,100,547,547,473',
'99,99,100,554,547,555,206,99,100,210,547,840,52,99,263,-86,-79,-86,751',
'-77,-86,40,-78,201,202,631,268,750,100,18,685,-84,632,99,79,73,75,76',
'77,78,100,100,-89,74,80,99,99,63,64,65,223,51,56,572,733,57,58,614,53',
'54,61,223,59,60,62,254,255,66,67,-58,503,760,301,253,284,288,89,88,90',
'91,-79,734,215,-77,572,-498,-78,572,263,41,613,211,93,92,83,50,85,84',
'86,87,94,95,-85,81,82,697,38,39,37,267,100,-81,769,574,573,99,100,-79',
'-89,-269,-77,99,717,-78,-79,572,-269,-77,206,-87,-78,210,-315,424,52',
'495,614,745,515,-315,425,517,496,40,574,573,585,574,573,579,614,214',
'766,201,202,-267,79,73,75,76,77,78,-267,-518,696,74,80,-499,100,613',
'-518,-518,-518,99,56,-518,-518,-518,-269,-518,53,54,767,613,531,574',
'573,575,-518,-518,-518,-315,426,515,494,534,519,223,-518,-518,-267,-518',
'-518,-518,-518,-518,757,-267,515,770,-261,514,-499,-437,-267,198,697',
'-261,506,-438,-437,515,199,695,517,507,-438,-518,-518,-518,-518,-518',
'-518,-518,-518,-518,-518,-518,-518,-518,-518,771,885,-518,-518,-518',
'631,-261,-518,886,263,-518,100,632,-261,534,-518,99,-518,-267,-518,774',
'-518,-518,-518,-518,-518,-518,-518,-261,-518,-518,-518,723,197,696,-268',
'426,-438,294,295,744,-267,-268,488,-518,-518,-518,-518,-267,-518,-502',
'668,301,-499,-268,760,-518,-502,-502,-502,884,-268,668,-502,-502,-261',
'-502,201,202,-427,-438,-436,-435,-76,-269,-502,-427,-438,-436,-435,-84',
'-269,524,525,783,-502,-502,784,-502,-502,-502,-502,-502,430,-268,567',
'333,332,336,335,-267,429,568,223,-433,-434,223,333,332,336,335,-433',
'-434,-268,-502,-502,-502,-502,-502,-502,-502,-502,-502,-502,-502,-502',
'-502,-502,-267,-438,-502,-502,-502,-269,600,-267,-267,-267,-502,260',
'854,-267,-267,466,-267,-502,261,-502,223,-502,-502,-502,-502,-502,-502',
'-502,390,-502,-502,-502,392,391,427,-267,-267,594,-267,-267,-267,-267',
'-267,-430,-502,-502,-439,-78,595,-502,-430,499,500,489,-86,223,-502',
'333,332,336,335,779,760,466,-267,-267,-267,-267,-267,-267,-267,-267',
'-267,-267,-267,-267,-267,-267,-77,464,-267,-267,-267,854,603,-85,220',
'-75,-267,-79,222,221,218,219,-83,-267,-87,-267,490,-267,-267,-267,-267',
'-267,-267,-267,736,-267,497,-267,223,799,320,801,328,326,325,327,336',
'335,336,335,-267,-267,804,-80,805,-267,333,332,336,335,-88,473,-267',
'63,64,65,7,51,807,220,272,57,58,222,221,473,61,330,59,60,62,23,24,66',
'67,333,332,336,335,22,28,27,89,88,90,91,738,536,17,328,326,325,327,590',
'6,41,8,9,93,92,83,50,85,84,86,87,94,95,223,81,82,301,38,39,37,223,227',
'232,233,234,229,231,239,240,235,236,-249,216,217,393,263,237,238,383',
'36,556,-248,30,719,220,52,381,372,222,221,32,220,369,226,40,222,221',
'218,219,230,228,224,18,225,504,693,818,79,73,75,76,77,78,819,820,263',
'74,80,263,241,63,64,65,505,51,56,242,689,57,58,823,53,54,61,824,59,60',
'62,254,255,66,67,653,555,826,348,253,284,288,89,88,90,91,-247,536,215',
'328,326,325,327,590,830,41,223,681,93,92,83,50,85,84,86,87,94,95,678',
'81,82,835,38,39,37,223,227,232,233,234,229,231,239,240,235,236,837,216',
'217,676,666,237,238,263,206,518,521,210,809,810,52,811,94,95,-498,252',
'220,843,226,40,222,221,218,219,230,228,224,214,225,301,661,847,79,73',
'75,76,77,78,848,301,660,74,80,659,241,544,-221,543,858,257,56,63,64',
'65,7,51,53,54,-250,57,58,528,293,859,61,861,59,60,62,23,24,66,67,531',
'292,653,-499,22,28,27,89,88,90,91,593,509,17,102,103,104,105,106,6,41',
'8,9,93,92,83,50,85,84,86,87,94,95,871,81,82,872,38,39,37,223,227,232',
'233,234,229,231,239,240,235,236,242,216,217,-247,875,237,238,628,36',
'877,878,30,804,653,52,805,301,532,592,32,220,645,226,40,222,221,218',
'219,230,228,224,18,225,589,887,588,79,73,75,76,77,78,196,534,195,74',
'80,893,241,63,64,65,7,51,56,643,194,57,58,659,53,54,61,193,59,60,62',
'23,24,66,67,-70,642,582,192,22,28,27,89,88,90,91,903,804,17,102,103',
'104,105,106,6,41,8,9,93,92,83,50,85,84,86,87,94,95,905,81,82,906,38',
'39,37,223,227,232,233,234,229,231,239,240,235,236,641,216,217,242,96',
'237,238,578,36,633,534,30,,,52,,,,,32,220,,226,40,222,221,218,219,230',
'228,224,18,225,,,,79,73,75,76,77,78,,,,74,80,,241,-500,-500,-500,223',
'-500,56,,,-500,-500,,53,54,-500,,-500,-500,-500,-500,-500,-500,-500',
',,,,-500,-500,-500,-500,-500,-500,-500,,220,-500,,,222,221,218,219,-500',
',,-500,-500,-500,-500,-500,-500,-500,-500,-500,-500,,-500,-500,,-500',
'-500,-500,223,227,232,233,234,229,231,239,240,235,236,,216,217,,,237',
'238,,-500,,,-500,-500,,-500,,,,,-500,220,-500,226,-500,222,221,218,219',
'230,228,224,-500,225,,,,-500,-500,-500,-500,-500,-500,,,,-500,-500,',
'241,,-221,,,-500,-500,63,64,65,7,51,-500,-500,,57,58,,,,61,,59,60,62',
'23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,6,41,8,9,93,92,83,50',
'85,84,86,87,94,95,,81,82,,38,39,37,223,227,232,233,234,229,231,239,240',
'235,236,,216,217,,,237,238,,36,,,30,,,52,,,,,32,220,,226,40,222,221',
'218,219,230,228,224,18,225,,,,79,73,75,76,77,78,,,,74,80,,241,63,64',
'65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253,284,288',
'89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38',
'39,37,223,227,232,233,234,229,231,239,240,235,236,,216,217,,,237,238',
',206,,,210,,,52,,,,,619,220,250,226,40,222,221,218,219,230,228,224,214',
'225,,,,79,73,75,76,77,78,,,,74,80,,241,63,64,65,7,51,56,,,57,58,,53',
'54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,6,41',
'8,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,223,227,232,233,234',
'229,231,239,240,235,236,,216,217,,,237,238,,36,,,30,,,52,,,,,32,220',
',226,40,222,221,218,219,230,228,224,18,225,,,,79,73,75,76,77,78,,,,74',
'80,,241,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,',
'22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,223,227,232,233,234,229,231,239,240,235,236,,216,217',
',,237,238,,206,,,210,211,,52,,,,,,220,,226,40,222,221,218,219,230,228',
'224,18,225,,,,79,73,75,76,77,78,,,,74,80,,241,63,64,65,,51,56,,,57,58',
',53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,215,,,,,',
',41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,223,227,232,233',
'234,229,231,239,240,235,236,,216,217,,,237,238,,206,,,210,,,52,,,,,',
'220,,226,40,222,221,218,219,230,228,224,214,225,,,,79,73,75,76,77,78',
',,,74,80,,241,63,64,65,7,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66',
'67,,,,,22,28,27,89,88,90,91,,,17,,,,,,6,41,8,9,93,92,83,50,85,84,86',
'87,94,95,,81,82,,38,39,37,223,227,232,233,234,229,231,239,240,235,236',
',216,217,,,237,238,,36,,,30,,,52,,,,,32,220,,226,40,222,221,218,219',
'230,228,224,18,225,,,,79,73,75,76,77,78,,,,74,80,,241,63,64,65,,51,56',
',,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253,284,288,89,88,90,91',
',,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,223',
'227,232,233,234,229,231,239,240,235,236,,216,217,,,237,238,,206,,,210',
',,52,,,,,619,220,,226,40,222,221,218,219,230,228,224,214,225,,,,79,73',
'75,76,77,78,,,,74,80,,241,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62',
'254,255,66,67,,,,,253,28,27,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50',
'85,84,86,87,94,95,,81,82,,38,39,37,223,227,232,233,234,229,231,239,240',
'235,236,,216,217,,,237,238,,206,,,210,,536,52,328,326,325,327,252,220',
'250,226,40,222,221,218,219,230,228,224,214,225,,,,79,73,75,76,77,78',
',,,74,80,,241,611,539,,,257,56,63,64,65,542,51,53,54,,57,58,,,,61,,59',
'60,62,254,255,66,67,,,,,253,28,27,89,88,90,91,,,215,,,,,,,41,,,93,92',
'83,50,85,84,86,87,94,95,,81,82,,38,39,37,223,227,232,233,234,229,231',
'239,240,235,236,,216,217,,,237,238,,206,,,210,,536,52,328,326,325,327',
'252,220,250,226,40,222,221,218,219,230,228,224,214,225,,,,79,73,75,76',
'77,78,,,,74,80,,241,,539,,,257,56,63,64,65,542,51,53,54,,57,58,,,,61',
',59,60,62,254,255,66,67,,,,,253,28,27,89,88,90,91,,,215,,,,,,,41,,,93',
'92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,223,227,232,233,234,229',
'231,239,240,235,236,,216,217,,,237,238,,206,,,210,,536,52,328,326,325',
'327,252,220,250,226,40,222,221,218,219,230,228,224,214,225,,,,79,73',
'75,76,77,78,,,,74,80,,241,,539,,,257,56,63,64,65,776,51,53,54,,57,58',
',,,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,',
',93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,223,227,232,233,234',
'229,231,239,240,235,236,,216,217,,,237,238,,206,,,210,,,52,,,,,,220',
',226,40,222,221,218,219,230,228,224,18,225,,,,79,73,75,76,77,78,,,,74',
'80,,241,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,',
',,253,284,288,89,88,90,91,,,215,,,,,,,285,,,93,92,83,50,85,84,86,87',
'94,95,,81,82,223,,,289,,,,,,,,,,,,,237,238,,,,,,866,,,210,,,52,,220',
'-365,,,222,221,218,219,-365,-365,-365,,,-365,-365,-365,223,-365,,,79',
'73,75,76,77,78,-365,-365,-365,74,80,,237,238,,,-365,-365,56,-365,-365',
'-365,-365,-365,53,54,,220,,226,,222,221,218,219,,,224,,225,,,,,,-365',
'-365,-365,-365,-365,-365,-365,-365,-365,-365,-365,-365,-365,-365,,,-365',
'-365,-365,,,-365,,263,-365,,,,,-365,,-365,,-365,,-365,-365,-365,-365',
'-365,-365,-365,,-365,-365,-365,,711,,328,326,325,327,,,,,,-365,-365',
'-365,-365,,-365,-275,,,,,,-365,-275,-275,-275,,,-275,-275,-275,,-275',
'223,,,330,705,,,,,-275,-275,333,332,336,335,,237,238,-275,-275,,-275',
'-275,-275,-275,-275,,,,,,220,,226,,222,221,218,219,,,224,,225,,,,-275',
'-275,-275,-275,-275,-275,-275,-275,-275,-275,-275,-275,-275,-275,,,-275',
'-275,-275,,,-275,,272,-275,,,,,-275,,-275,,-275,,-275,-275,-275,-275',
'-275,-275,-275,,-275,,-275,,,,,,,,,,,,,-275,-275,-275,-275,,-275,63',
'64,65,7,51,,-275,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,22,28,27,89',
'88,90,91,,,17,,,,,,6,41,8,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38',
'39,37,223,227,232,233,234,229,231,239,240,235,236,,216,217,,,237,238',
',36,,,274,,,52,,,,,32,220,,226,40,222,221,218,219,230,228,224,18,225',
',,,79,73,75,76,77,78,,,,74,80,,241,63,64,65,,51,56,,,57,58,,53,54,61',
',59,60,62,254,255,66,67,,,,,253,284,288,89,88,90,91,,,215,,,,,,,285',
',,93,92,83,50,85,84,86,87,94,95,,81,82,223,,320,289,328,326,325,327',
',,,,,,,,237,238,,,,,,282,,,279,,,52,,220,,226,278,222,221,218,219,330',
',711,,328,326,325,327,333,332,336,335,79,73,75,76,77,78,,,,74,80,,,63',
'64,65,,51,56,,,57,58,,53,54,61,330,59,60,62,254,255,66,67,333,332,336',
'335,253,284,288,89,88,90,91,,,215,,,,,,,285,,,93,92,83,50,85,84,86,87',
'94,95,,81,82,223,,711,289,328,326,325,327,,,,,,,,,237,238,,,,,,282,',
',210,,,52,,220,,226,,222,221,218,219,330,705,224,,225,,,,333,332,336',
'335,79,73,75,76,77,78,,,,74,80,,,,291,,,,56,-501,-501,-501,,-501,53',
'54,,-501,-501,,,,-501,,-501,-501,-501,-501,-501,-501,-501,,,,,-501,-501',
'-501,-501,-501,-501,-501,,,-501,,,,,,,-501,,,-501,-501,-501,-501,-501',
'-501,-501,-501,-501,-501,,-501,-501,,-501,-501,-501,223,-520,-520,-520',
'-520,229,231,,,-520,-520,,,,,,237,238,,-501,,,-501,-501,,-501,,,,,-501',
'220,-501,226,-501,222,221,218,219,230,228,224,-501,225,,,,-501,-501',
'-501,-501,-501,-501,,,,-501,-501,,,,,,,-501,-501,63,64,65,7,51,-501',
'-501,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17',
',,,,,6,41,8,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,223,-520',
'-520,-520,-520,229,231,,,-520,-520,,,,,,237,238,,36,,,30,,,52,,,,,32',
'220,,226,40,222,221,218,219,230,228,224,18,225,,,,79,73,75,76,77,78',
',,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67',
',,,,253,284,288,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87',
'94,95,,81,82,,38,39,37,223,-520,-520,-520,-520,229,231,,,-520,-520,',
',,,,237,238,,206,,,210,,,52,,,,,,220,,226,40,222,221,218,219,230,228',
'224,214,225,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58',
',53,54,61,,59,60,62,254,255,66,67,,,,,253,284,288,89,88,90,91,,,215',
',,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,223,-520,-520',
'-520,-520,229,231,,,-520,-520,,,,,,237,238,,206,,,210,,,52,,,,,,220',
',226,40,222,221,218,219,230,228,224,214,225,,,,79,73,75,76,77,78,,,',
'74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,',
',,253,284,288,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94',
'95,,81,82,,38,39,37,223,,,,,,,,,,,,,,,,237,238,,206,,,210,,,52,,,,,',
'220,,226,40,222,221,218,219,,,224,214,225,,,,79,73,75,76,77,78,,,,74',
'80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253',
'284,288,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,223,227,232,233,234,229,231,239,240,235,236,,-520,-520',
',,237,238,,206,,,210,,,52,,,,,,220,,226,40,222,221,218,219,230,228,224',
'214,225,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53',
'54,61,,59,60,62,254,255,66,67,,,,,253,284,288,89,88,90,91,,,215,,,,',
',,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,223,227,232,233',
'234,229,231,,,235,236,,,,,,237,238,,206,,,210,,,52,,,,,,220,,226,40',
'222,221,218,219,230,228,224,214,225,,,,79,73,75,76,77,78,,,,74,80,,',
'63,64,65,7,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27',
'89,88,90,91,,,17,,,,,,6,41,8,9,93,92,83,50,85,84,86,87,94,95,,81,82',
',38,39,37,223,227,232,233,234,229,231,239,240,235,236,,-520,-520,,,237',
'238,,36,,,30,,,52,,,,,32,220,,226,40,222,221,218,219,230,228,224,18',
'225,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61',
',59,60,62,254,255,66,67,,,,,253,284,288,89,88,90,91,,,215,,,,,,,41,',
',93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,223,227,232,233,234',
'229,231,239,,235,236,,,,,,237,238,,206,,,210,,,52,,,,,252,220,,226,40',
'222,221,218,219,230,228,224,214,225,,,,79,73,75,76,77,78,,-262,,74,80',
',,,-262,-262,-262,257,56,-262,-262,-262,223,-262,53,54,,,,,,,,-262,-262',
',,,237,238,,,-262,-262,,-262,-262,-262,-262,-262,,,,220,,226,,222,221',
'218,219,,,,,,,,,,,-262,-262,-262,-262,-262,-262,-262,-262,-262,-262',
'-262,-262,-262,-262,,,-262,-262,-262,,,-262,,,-262,,,-262,,-262,,-262',
',-262,,-262,-262,-262,-262,-262,-262,-262,,-262,,-262,,,711,,328,326',
'325,327,,,,,-262,-262,-262,-262,,-262,,,-262,-262,,,-262,63,64,65,,51',
',,,57,58,,,,61,330,59,60,62,23,24,66,67,333,332,336,335,22,28,27,89',
'88,90,91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39',
'37,223,-520,-520,-520,-520,229,231,,,-520,-520,,,,,,237,238,,206,,,210',
',,52,,,,,,220,,226,40,222,221,218,219,230,228,224,18,225,,,,79,73,75',
'76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254',
'255,66,67,,,,,253,284,288,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85',
'84,86,87,94,95,,81,82,,38,39,37,223,-520,-520,-520,-520,229,231,,,-520',
'-520,,,,,,237,238,,206,,,210,,,52,,,,,252,220,,226,40,222,221,218,219',
'230,228,224,214,225,,,,79,73,75,76,77,78,,,,74,80,,,,,,,257,56,63,64',
'65,,51,53,54,,57,58,,,,61,,59,60,62,254,255,66,67,,,,,253,284,288,89',
'88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39',
'37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,252,,,,40,,,,,,,,214,,,,,79',
'73,75,76,77,78,,,,74,80,,,,,,,257,56,63,64,65,7,51,53,54,,57,58,,,,61',
',59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,6,41,8,9,93',
'92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,',
'30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64',
'65,7,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88',
'90,91,,,17,,,,,,6,41,8,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39',
'37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73',
'75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,23',
'24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,83,50,85,84',
'86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,',
',,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57',
'58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,',
',,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,',
',,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74',
'80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22',
'28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81',
'82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,18',
',,,,79,73,75,76,77,78,,,,74,80,100,,63,64,65,99,51,56,,,57,58,,53,54',
'61,,59,60,62,254,255,66,67,,,,,253,284,288,89,88,90,91,,,215,,,,,,,285',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,,320,289,328,326,325,327,,,',
',,,,,,,,,,,,282,,,30,,,52,,,,,32,,,,,330,,527,,,,,,333,332,336,335,79',
'73,75,76,77,78,,,,74,80,,,63,64,65,7,51,56,,,57,58,,53,54,61,,59,60',
'62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,6,41,8,9,93,92,83',
'50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52',
',,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51',
'56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253,284,288,89,88,90',
'91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,',
',,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75',
'76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254',
'255,66,67,,,,,253,284,288,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85',
'84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,',
',,252,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51',
'56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253,284,288,89,88,90',
'91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,',
',,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75',
'76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254',
'255,66,67,,,,,253,284,288,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85',
'84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,',
',,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56',
',,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253,284,288,89,88,90,91',
',,215,,,,,,,285,,,93,92,83,50,85,84,557,87,94,95,,81,82,,,320,289,328',
'326,325,327,,,,,,,,,,,,,,,,558,,,210,,,52,,,,,,,,,,330,315,,,,,,,333',
'332,336,335,79,73,75,76,77,78,,,,74,80,,,-495,-495,-495,,-495,56,,,-495',
'-495,,53,54,-495,,-495,-495,-495,-495,-495,-495,-495,,-495,,,-495,-495',
'-495,-495,-495,-495,-495,,,-495,,,,,,,-495,,,-495,-495,-495,-495,-495',
'-495,-495,-495,-495,-495,,-495,-495,,-495,-495,-495,,,,,,,,,,,,,,,,',
',,,-495,,,-495,-495,,-495,,,,,-495,,-495,,-495,,,,,,,,-495,,-495,,,-495',
'-495,-495,-495,-495,-495,,,,-495,-495,,,,,,,-495,-495,-496,-496,-496',
',-496,-495,-495,,-496,-496,,,,-496,,-496,-496,-496,-496,-496,-496,-496',
',-496,,,-496,-496,-496,-496,-496,-496,-496,,,-496,,,,,,,-496,,,-496',
'-496,-496,-496,-496,-496,-496,-496,-496,-496,,-496,-496,,-496,-496,-496',
',,,,,,,,,,,,,,,,,,,-496,,,-496,-496,,-496,,,,,-496,,-496,,-496,,,,,',
',,-496,,-496,,,-496,-496,-496,-496,-496,-496,,,,-496,-496,,,,,,,-496',
'-496,63,64,65,,51,-496,-496,,57,58,,,,61,,59,60,62,254,255,66,67,,,',
',253,284,288,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94',
'95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,',
',,,,214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,7,51,56,,,57,58,,53',
'54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,6,41',
'8,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,',
',,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,383,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22',
'28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81',
'82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,18',
',,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,',
'59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92',
'83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210',
',,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65',
',51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90',
'91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,',
',,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76',
'77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66',
'67,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87',
'94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40',
',,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,7,51,56,,,57,58',
',53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,6',
'41,8,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,',
',,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74',
'80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22',
'28,27,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81',
'82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214',
',,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,',
'59,60,62,254,255,66,67,,,,,253,284,288,89,88,90,91,,,215,,,,,,,285,',
',93,92,83,50,85,84,557,87,94,95,,81,82,,,,289,,,,,,,,,,,,,,,,,,,,558',
',,210,,,52,,,,,,,,,,,,,,,,,,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65',
',51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253,284,288,89',
'88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39',
'37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73',
'75,76,77,78,,,,74,80,,,63,64,65,7,51,56,,,57,58,,53,54,61,,59,60,62',
'23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,6,41,8,9,93,92,83,50',
'85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,',
',,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,7,51',
'56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91',
',,17,,,,,,6,41,8,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,',
',,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76',
'77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66',
'67,,,,,22,28,27,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87',
'94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,400,,,',
'40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57',
'58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,215,,',
',,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,',
',,,,,,,206,,,210,,,52,,,,,400,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78',
',,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,',
',,,22,28,27,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94',
'95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,',
',,,,214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53',
'54,61,,59,60,62,254,255,66,67,,,,,253,284,288,89,88,90,91,,,215,,,,',
',,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,',
',,,,,206,,,210,,,52,,,,,252,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,',
',,74,80,,,,,,,257,56,63,64,65,7,51,53,54,,57,58,,,,61,,59,60,62,23,24',
'66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,6,41,8,9,93,92,83,50,85,84',
'86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32',
',,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57',
'58,,53,54,61,,59,60,62,254,255,66,67,,,,,253,284,288,89,88,90,91,,,215',
',,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,',
',,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78',
',,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,',
',,,22,28,27,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94',
'95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,',
',,,,214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53',
'54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,',
',93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206',
',,210,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63',
'64,65,,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89',
'88,90,91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39',
'37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73',
'75,76,77,78,,,,74,80,,,63,64,65,7,51,56,,,57,58,,53,54,61,,59,60,62',
'23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,6,41,8,9,93,92,83,50',
'85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,',
',,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,7,51',
'56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91',
',,17,,,,,,6,41,8,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,',
',,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76',
'77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66',
'67,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87',
'94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40',
',,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,',
'53,54,61,,59,60,62,254,255,66,67,,,,,253,284,288,89,88,90,91,,,215,',
',,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,',
',,,,,,,,206,,,210,,,52,,,,,252,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78',
',,,74,80,,,,,,,257,56,63,64,65,,51,53,54,,57,58,,,,61,,59,60,62,23,24',
'66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,83,50,85,84,86',
'87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,',
'40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58',
',53,54,61,,59,60,62,254,255,66,67,,,,,253,284,288,89,88,90,91,,,215',
',,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,',
',,,,,,,,,206,,,210,,,52,,,,,252,,,,40,,,,,,,,214,,,,,79,73,75,76,77',
'78,,,,74,80,,,63,64,65,7,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66',
'67,,,,,22,28,27,89,88,90,91,,,17,,,,,,6,41,8,9,93,92,83,50,85,84,86',
'87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,',
'40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58',
',53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,',
'41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,',
',,,206,,,210,,432,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74',
'80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253',
'284,288,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,',
'214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,254,255,66,67,,,,,253,284,288,89,88,90,91,,,215,,,,,,,41',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,',
'206,,,210,,,52,,,,,400,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74',
'80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253',
'284,288,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,',
'214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,254,255,66,67,,,,,253,284,288,89,88,90,91,,,215,,,,,,,41',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,',
'206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253',
'284,288,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,',
'214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,254,255,66,67,,,,,253,284,288,89,88,90,91,,,215,,,,,,,41',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,',
'206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253',
'284,288,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,',
'214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,254,255,66,67,,,,,253,284,288,89,88,90,91,,,215,,,,,,,41',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,',
'206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253',
'284,288,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,',
'214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,254,255,66,67,,,,,253,284,288,89,88,90,91,,,215,,,,,,,41',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,',
'206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253',
'284,288,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,',
'214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,254,255,66,67,,,,,253,284,288,89,88,90,91,,,215,,,,,,,41',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,',
'206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253',
'284,288,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,',
'214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,254,255,66,67,,,,,253,284,288,89,88,90,91,,,215,,,,,,,41',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,',
'206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253',
'284,288,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,',
'214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,254,255,66,67,,,,,253,284,288,89,88,90,91,,,215,,,,,,,41',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,',
'206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253',
'284,288,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,',
'214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,254,255,66,67,,,,,253,284,288,89,88,90,91,,,215,,,,,,,41',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,',
'206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253',
'284,288,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,',
'214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,254,255,66,67,,,,,253,284,288,89,88,90,91,,,215,,,,,,,41',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,',
'206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253',
'284,288,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,',
'214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,254,255,66,67,,,,,253,284,288,89,88,90,91,,,215,,,,,,,41',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,',
'206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253',
'284,288,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,',
'214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,254,255,66,67,,,,,253,284,288,89,88,90,91,,,215,,,,,,,41',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,',
'206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253',
'284,288,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,',
'214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,254,255,66,67,,,,,253,284,288,89,88,90,91,,,215,,,,,,,41',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,',
'206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253',
'284,288,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,',
'214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,254,255,66,67,,,,,253,284,288,89,88,90,91,,,215,,,,,,,41',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,',
'206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253',
'284,288,89,88,90,91,,,215,,,,,,,285,,,93,92,83,50,85,84,86,87,94,95',
',81,82,,,,289,,,,,,,,,,,,,,,,,,,,282,,,279,,,52,,,,,,,,,,,,,,,,,,,,',
',79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59',
'60,62,254,255,66,67,,,,,253,284,288,89,88,90,91,,,215,,,,,,,41,,,93',
'92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,',
',210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,,,63',
'64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253,284,288',
'89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38',
'39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,619,,250,,40,,,,,,,,214',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,,257,56,63,64,65,,51,53,54,,57,58',
',,,61,,59,60,62,254,255,66,67,,,,,253,284,288,89,88,90,91,,,215,,,,',
',,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,',
',,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74',
'80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253',
'284,288,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,250,,40,,,,',
',,,214,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,257,56,63,64,65,,51,53,54',
',57,58,,,,61,,59,60,62,254,255,66,67,,,,,253,284,288,89,88,90,91,,,215',
',,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,',
',,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78',
',,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67',
',,,,253,284,288,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87',
'94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40',
',,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58',
',53,54,61,,59,60,62,254,255,66,67,,,,,253,284,288,89,88,90,91,,,215',
',,,,,,285,,,93,92,83,50,85,84,86,87,94,95,,81,82,,,,289,,,,,,,,,,,,',
',,,,,,,282,,,279,,,52,,,,,,,,,,,,,,,,,,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,7,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28',
'27,89,88,90,91,,,17,,,,,,6,41,8,9,93,92,83,50,85,84,86,87,94,95,,81',
'82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18',
',,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,7,51,56,,,57,58,,53,54,61',
',59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,6,41,8,9,93',
'92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,',
'30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64',
'65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253,28,27,89',
'88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39',
'37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,252,,250,,40,,,,,,,,214,,,',
',79,73,75,76,77,78,,,,74,80,,,,,,,257,56,63,64,65,,51,53,54,,57,58,',
',,61,,59,60,62,254,255,66,67,,,,,253,28,27,89,88,90,91,,,215,,,,,,,41',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,',
'206,,,210,,,482,,,,,252,,250,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,',
',74,80,,,,,,,257,56,63,64,65,,51,53,54,,57,58,,,,61,,59,60,62,254,255',
'66,67,,,,,253,28,27,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86',
'87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,486,52,,,,,252',
',250,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,257,56,63,64',
'65,,51,53,54,,57,58,,,,61,,59,60,62,254,255,66,67,,,,,253,28,27,89,88',
'90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37',
',,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,619,,250,,40,,,,,,,,214,,,,,79',
'73,75,76,77,78,,,,74,80,,,,,,,257,56,63,64,65,7,51,53,54,,57,58,,,,61',
',59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,6,41,8,9,93',
'92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,',
'274,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63',
'64,65,7,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89',
'88,90,91,,,17,,,,,,6,41,8,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38',
'39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79',
'73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62',
'254,255,66,67,,,,,253,284,288,89,88,90,91,,,215,,,,,,,41,,,93,92,83',
'50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,',
',52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65',
'7,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90',
'91,,,17,,,,,,6,41,8,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37',
',,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75',
'76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254',
'255,66,67,,,,,253,284,288,89,88,90,91,,,215,,,,,,,285,,,93,92,83,50',
'85,84,86,87,94,95,,81,82,,,,289,,,,,,,,,,,,,,,,,,,,282,,,210,,,52,,',
',,,,,,,,,,,,,,,,,,,79,73,75,76,77,78,,,,74,80,,,,492,,,,56,63,64,65',
'7,51,53,54,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90',
'91,,,17,,,,,,6,41,8,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37',
',,,,,,,,,,,,,,,,,,,36,,,274,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75',
'76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254',
'255,66,67,,,,,253,284,288,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85',
'84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,',
',,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,-267,,74,80,,,,-267,-267',
'-267,,56,-267,-267,-267,,-267,53,54,,,,,,,,-267,-267,,,,,,,,-267,-267',
',-267,-267,-267,-267,-267,,,,,,,,,,,,,,,,,,,,,,-267,-267,-267,-267,-267',
'-267,-267,-267,-267,-267,-267,-267,-267,-267,,,-267,-267,-267,,603,-267',
',,-267,,,-267,,-267,,-267,,-267,,-267,-267,-267,-267,-267,-267,-267',
',-267,,-267,,,,,,,,,,,,,-267,-267,-267,-267,,-267,-502,,,,-88,,-267',
'-502,-502,-502,,,-502,-502,-502,,-502,,,,,,,,,-502,-502,-502,,,,,,,',
'-502,-502,,-502,-502,-502,-502,-502,,,,,,,,,,,,,,,,,,,,,,-502,-502,-502',
'-502,-502,-502,-502,-502,-502,-502,-502,-502,-502,-502,,,-502,-502,-502',
',735,-502,,,-502,,,-502,,-502,,-502,,-502,,-502,-502,-502,-502,-502',
'-502,-502,,-502,-502,-502,,,,,,,,,,,,,-502,-502,-502,-502,,-502,,63',
'64,65,-86,51,-502,,,57,58,,,,61,,59,60,62,254,255,66,67,,,,,253,284',
'288,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82',
',38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,',
',,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59',
'60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,215,,,,,,,41,,,93,92,83',
'50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,',
',52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65',
',51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90',
'91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,',
',,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75',
'76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,23,24',
'66,67,,,,,22,28,27,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86',
'87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,',
'40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57',
'58,,53,54,61,,59,60,62,254,255,66,67,,,,,253,284,288,89,88,90,91,,,215',
',,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,',
',,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78',
',,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67',
',,,,253,284,288,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87',
'94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40',
',,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58',
',53,54,61,,59,60,62,254,255,66,67,,,,,253,284,288,89,88,90,91,,,215',
',,,,,,285,,,93,92,83,50,85,84,86,87,94,95,,81,82,,,,289,,,,,,,,,,,,',
',,,,,,,282,,,279,,,52,,,,,,,,,,,,,,,,,,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28',
'27,89,88,90,91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82',
',38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,18,,,',
',79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59',
'60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,83',
'50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,',
',52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,',
'51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90',
'91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,',
',,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76',
'77,78,,,,74,80,,,63,64,65,7,51,56,,,57,58,,53,54,61,,59,60,62,23,24',
'66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,6,41,8,9,93,92,83,50,85,84',
'86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32',
',,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,7,51,56,,',
'57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17',
',,,,,6,41,8,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,',
',,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78',
',,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67',
',,,,253,284,288,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87',
'94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,509,,52,,,,,,,,',
'40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,7,51,56,,,57',
'58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,',
',,6,41,8,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,',
',,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,',
',,74,80,,,63,64,65,7,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,',
',,,22,28,27,89,88,90,91,,,17,,,,,,6,41,8,9,93,92,83,50,85,84,86,87,94',
'95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,',
',,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53',
'54,61,,59,60,62,254,255,66,67,,,,,253,284,288,89,88,90,91,,,215,,,,',
',,285,,,93,92,83,50,85,84,86,87,94,95,,81,82,,,,289,,,,,,,,,,,,,,,,',
',,,672,,,210,,,52,,,,,,,,,,,,,,,,,,,,,,79,73,75,76,77,78,,,,74,80,,',
'63,64,65,7,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27',
'89,88,90,91,,,17,,,,,,6,41,8,9,93,92,83,50,85,84,86,87,94,95,,81,82',
',38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,',
',79,73,75,76,77,78,,,,74,80,,,63,64,65,7,51,56,,,57,58,,53,54,61,,59',
'60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,6,41,8,9,93,92',
'83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30',
',,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65',
',51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253,284,288,89',
'88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39',
'37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,619,,,,40,,,,,,,,214,,,,,79',
'73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62',
'254,255,66,67,,,,,253,284,288,89,88,90,91,,,215,,,,,,,41,,,93,92,83',
'50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,',
',52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,257,56',
'63,64,65,,51,53,54,,57,58,,,,61,,59,60,62,254,255,66,67,,,,,253,284',
'288,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82',
',38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,619,,,,40,,,,,,,,214',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,,257,56,63,64,65,,51,53,54,,57,58',
',,,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,',
',93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206',
',,210,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63',
'64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253,284,288',
'89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38',
'39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79',
'73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62',
'254,255,66,67,,,,,253,284,288,89,88,90,91,,,215,,,,,,,41,,,93,92,83',
'50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,',
',52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65',
',51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253,284,288,89',
'88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39',
'37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73',
'75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254',
'255,66,67,,,,,253,284,288,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85',
'84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,',
',,252,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,257,56,63',
'64,65,,51,53,54,,57,58,,,,61,,59,60,62,254,255,66,67,,,,,253,284,288',
'89,88,90,91,,,215,,,,,,,285,,,93,92,83,50,85,84,86,87,94,95,,81,82,',
',,289,,,,,,,,,,,,,,,,,,,,282,,,279,,,52,,,,,,,,,,,,,,,,,,,,,,79,73,75',
'76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,23,24',
'66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,83,50,85,84,86',
'87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,637,52,,,,,',
',250,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56',
',,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253,284,288,89,88,90,91',
',,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,',
',,,,,,,,,,,,,,,206,,,210,,,52,,,,,722,,,,40,,,,,,,,214,,,,,79,73,75',
'76,77,78,,-518,,74,80,,,,-518,-518,-518,,56,-518,-518,-518,,-518,53',
'54,,,,,,,,-518,,,,,,,,,-518,-518,,-518,-518,-518,-518,-518,,,,,,,,,',
',,-518,,,,,,,-518,-518,-518,,,-518,-518,-518,,-518,,,,,-518,,,,,-518',
',-518,,,,,263,-518,-518,-518,,-518,-518,-518,-518,-518,,,,,,,,,,,,,-518',
',,,,,,,,,,,,-518,,-518,,,-518,,-518,,,,,,,-518,,,,,263,-518,,,,,,,,',
',,,,,,,,,,,,-518,,,,,,,,,,,,,-518,,-518,,,-518,153,164,154,177,150,170',
'160,159,185,188,175,158,157,152,178,186,187,162,151,165,169,171,163',
'156,,,172,179,174,173,166,176,161,149,168,167,180,181,182,183,184,148',
'155,146,147,144,145,109,111,,,110,,,,,,,,137,138,,135,119,120,121,143',
'124,126,,,122,,,,,139,140,127,128,,,,,,,,,,,,,132,131,,118,136,134,133',
'129,130,125,123,116,142,117,,,141,189,,,,,,,,,,80,153,164,154,177,150',
'170,160,159,185,188,175,158,157,152,178,186,187,162,151,165,169,171',
'163,156,,,172,179,174,173,166,176,161,149,168,167,180,181,182,183,184',
'148,155,146,147,144,145,109,111,,,110,,,,,,,,137,138,,135,119,120,121',
'143,124,126,,,122,,,,,139,140,127,128,,,,,,,,,,,,,132,131,,118,136,134',
'133,129,130,125,123,116,142,117,,,141,189,,,,,,,,,,80,153,164,154,177',
'150,170,160,159,185,188,175,158,157,152,178,186,187,162,151,165,169',
'171,163,156,,,172,179,174,173,166,176,161,149,168,167,180,181,182,183',
'184,148,155,146,147,144,145,109,111,,,110,,,,,,,,137,138,,135,119,120',
'121,143,124,126,,,122,,,,,139,140,127,128,,,,,,,,,,,,,132,131,,118,136',
'134,133,129,130,125,123,116,142,117,,,141,189,,,,,,,,,,80,153,164,154',
'177,150,170,160,159,185,188,175,158,157,152,178,186,187,162,151,165',
'169,171,163,156,,,172,179,174,173,166,176,161,149,168,167,180,181,182',
'183,184,148,155,146,147,144,145,109,111,108,,110,,,,,,,,137,138,,135',
'119,120,121,143,124,126,,,122,,,,,139,140,127,128,,,,,,,,,,,,,132,131',
',118,136,134,133,129,130,125,123,116,142,117,,,141,189,,,,,,,,,,80,153',
'164,154,177,150,170,160,159,185,188,175,158,157,152,178,186,187,162',
'151,165,169,171,163,156,,,172,179,174,173,166,176,161,149,168,167,180',
'181,182,183,184,148,155,146,147,144,145,109,111,,,110,,,,,,,,137,138',
',135,119,120,121,143,124,126,,,122,,,,,139,140,127,128,,,,,,,,,,,,,132',
'131,,118,136,134,133,129,130,125,123,116,142,117,,,141,153,164,154,177',
'150,170,160,159,185,188,175,158,157,152,178,186,187,162,151,165,169',
'171,163,156,,,172,179,174,356,355,357,354,149,168,167,180,181,182,183',
'184,148,155,146,147,352,353,350,111,85,84,351,87,,,,,,,137,138,,135',
'119,120,121,143,124,126,,,122,,,,,139,140,127,128,,,,,,362,,,,,,,132',
'131,,118,136,134,133,129,130,125,123,116,142,117,,,141,153,164,154,177',
'150,170,160,159,185,188,175,158,157,152,178,186,187,162,151,165,169',
'171,163,156,,,172,179,174,173,166,176,161,149,168,167,180,181,182,183',
'184,148,155,146,147,144,145,109,111,379,378,110,380,,,,,,,137,138,,135',
'119,120,121,143,124,126,,,122,,,,,139,140,127,128,,,,,,,,,,,,,132,131',
',118,136,134,133,129,130,125,123,116,142,117,,,141,153,164,154,177,150',
'170,160,159,185,188,175,158,157,152,178,186,187,162,151,165,169,171',
'163,156,,,172,179,174,173,166,176,161,149,168,167,180,181,182,183,184',
'148,155,146,147,144,145,109,111,379,378,110,380,,,,,,,137,138,,135,119',
'120,121,143,124,126,,,122,,,,,139,140,127,128,,,,,,,,,,,,,132,131,,118',
'136,134,133,129,130,125,123,116,142,117,647,412,141,,648,,,,,,,,137',
'138,,135,119,120,121,143,124,126,,,122,,,,,139,140,127,128,,,,,,263',
',,,,,,132,131,,118,136,134,133,129,130,125,123,116,142,117,898,412,141',
',899,,,,,,,,137,138,,135,119,120,121,143,124,126,,,122,,,,,139,140,127',
'128,,,,,,263,,,,,,,132,131,,118,136,134,133,129,130,125,123,116,142',
'117,900,418,141,,901,,,,,,,,137,138,,135,119,120,121,143,124,126,,,122',
',,,,139,140,127,128,,,,,,,,,,,,,132,131,,118,136,134,133,129,130,125',
'123,116,142,117,408,412,141,,409,,,,,,,,137,138,,135,119,120,121,143',
'124,126,,,122,,,,,139,140,127,128,,,,,,263,,,,,,,132,131,,118,136,134',
'133,129,130,125,123,116,142,117,606,418,141,,607,,,,,,,,137,138,,135',
'119,120,121,143,124,126,,,122,,,,,139,140,127,128,,,,,,,,,,,,,132,131',
',118,136,134,133,129,130,125,123,116,142,117,470,412,141,,471,,,,,,',
',137,138,,135,119,120,121,143,124,126,,,122,,,,,139,140,127,128,,,,',
',,,,,,,,132,131,,118,136,134,133,129,130,125,123,116,142,117,604,412',
'141,,605,,,,,,,,137,138,,135,119,120,121,143,124,126,,,122,,,,,139,140',
'127,128,,,,,,263,,,,,,,132,131,,118,136,134,133,129,130,125,123,116',
'142,117,789,418,141,,832,,,,,,,,137,138,,135,119,120,121,143,124,126',
',,122,,,,,139,140,127,128,,,,,,,,,,,,,132,131,,118,136,134,133,129,130',
'125,123,116,142,117,470,412,141,,471,,,,,,,,137,138,,135,119,120,121',
'143,124,126,,,122,,,,,139,140,127,128,,,,,,,,,,,,,132,131,,118,136,134',
'133,129,130,125,123,116,142,117,604,412,141,,605,,,,,,,,137,138,,135',
'119,120,121,143,124,126,,,122,,,,,139,140,127,128,,,,,,263,,,,,,,132',
'131,,118,136,134,133,129,130,125,123,116,142,117,606,418,141,,607,,',
',,,,,137,138,,135,119,120,121,143,124,126,,,122,,,,,139,140,127,128',
',,,,,,,,,,,,132,131,,118,136,134,133,129,130,125,123,116,142,117,470',
'412,141,,471,,,,,,,,137,138,,135,119,120,121,143,124,126,,,122,,,,,139',
'140,127,128,,,,,,,,,,,,,132,131,,118,136,134,133,129,130,125,123,116',
'142,117,470,412,141,,471,,,,,,,,137,138,,135,119,120,121,143,124,126',
',,122,,,,,139,140,127,128,,,,,,,,,,,,,132,131,,118,136,134,133,129,130',
'125,123,116,142,117,789,418,141,,787,,,,,,,,137,138,,135,119,120,121',
'143,124,126,,,122,,,,,139,140,127,128,,,,,,,,,,,,,132,131,,118,136,134',
'133,129,130,125,123,116,142,117,470,412,141,,471,,,,,,,,137,138,,135',
'119,120,121,143,124,126,,,122,,,,,139,140,127,128,,,,,,263,,,,,,,132',
'131,,118,136,134,133,129,130,125,123,116,142,117,414,418,141,,416,,',
',,,,,137,138,,135,119,120,121,143,124,126,,,122,,,,,139,140,127,128',
',,,,,,,,,,,,132,131,,118,136,134,133,129,130,125,123,116,142,117,650',
'418,141,,651,,,,,,,,137,138,,135,119,120,121,143,124,126,,,122,,,,,139',
'140,127,128,,,,,,,,,,,,,132,131,,118,136,134,133,129,130,125,123,116',
'142,117,,,141' ]
        racc_action_table = arr = ::Array.new(22204, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'0,0,0,0,0,898,364,550,0,0,303,303,853,0,373,0,0,0,0,0,0,0,14,557,286',
'473,0,0,0,0,0,0,0,55,562,0,680,680,569,569,207,0,0,0,0,0,0,0,0,0,0,0',
'0,0,0,646,0,0,473,0,0,0,693,14,71,786,364,364,364,693,14,355,71,557',
'899,340,373,873,355,873,557,0,339,829,0,557,286,0,207,870,251,642,0',
'431,431,785,0,303,368,205,248,368,900,550,0,550,557,286,550,0,0,0,0',
'0,0,898,55,898,0,0,898,693,362,362,362,569,362,0,642,551,362,362,557',
'0,0,362,562,362,362,362,362,362,362,362,15,15,431,205,362,362,362,362',
'362,362,362,562,649,362,368,368,562,786,311,786,362,311,786,362,362',
'362,362,362,362,362,362,362,362,900,362,362,736,362,362,362,899,340',
'899,340,247,899,340,427,339,829,339,829,262,339,829,870,344,870,344',
'362,870,785,362,785,785,362,785,652,900,648,900,638,647,900,362,650',
'702,702,477,26,635,551,362,551,736,477,551,362,362,362,362,362,362,792',
'706,427,362,362,792,706,400,400,400,655,400,362,580,604,400,400,483',
'362,362,400,656,400,400,400,400,400,400,400,273,293,658,477,400,400',
'400,400,400,400,400,648,605,400,647,375,650,650,370,26,400,483,215,400',
'400,400,400,400,400,400,400,400,400,604,400,400,671,400,400,400,26,702',
'293,671,580,580,702,3,648,293,755,647,3,580,650,648,366,755,647,400',
'605,650,400,42,204,400,281,459,630,662,42,204,662,281,400,375,375,375',
'370,370,370,484,400,664,657,657,651,400,400,400,400,400,400,651,410',
'671,400,400,651,701,459,410,410,410,701,400,410,410,410,755,410,400',
'400,665,484,668,366,366,366,410,410,410,42,204,308,281,670,308,440,410',
'410,787,410,410,410,410,410,657,787,305,672,283,305,787,352,651,13,560',
'283,296,864,352,306,13,560,306,296,864,410,410,410,410,410,410,410,410',
'410,410,410,410,410,410,673,865,410,410,410,748,867,410,865,410,410',
'343,748,867,674,410,343,410,787,410,677,410,410,410,410,410,410,410',
'283,410,410,410,593,13,560,887,296,864,37,37,629,901,887,275,410,410',
'410,410,901,410,414,771,748,901,497,682,410,414,414,414,865,497,528',
'414,414,867,414,338,338,350,280,353,354,593,906,414,350,280,353,354',
'593,906,314,314,688,414,414,690,414,414,414,414,414,209,887,359,771',
'771,771,771,901,208,359,439,356,357,438,528,528,528,528,356,357,497',
'414,414,414,414,414,414,414,414,414,414,414,414,414,414,416,280,414',
'414,414,906,414,416,416,416,414,25,878,416,416,621,416,414,25,414,437',
'414,414,414,414,414,414,414,108,414,414,414,108,108,206,416,416,408',
'416,416,416,416,416,351,414,414,35,414,409,414,351,289,289,276,414,454',
'414,878,878,878,878,902,902,618,416,416,416,416,416,416,416,416,416',
'416,416,416,416,416,408,616,416,416,416,801,416,408,454,35,416,409,454',
'454,454,454,35,416,409,416,277,416,416,416,416,416,416,416,608,416,282',
'416,436,707,613,708,613,613,613,613,534,534,804,804,416,416,709,416',
'711,416,801,801,801,801,416,601,416,888,888,888,888,888,714,436,284',
'888,888,436,436,596,888,613,888,888,888,888,888,888,888,613,613,613',
'613,888,888,888,888,888,888,888,613,776,888,776,776,776,776,609,888',
'888,888,888,888,888,888,888,888,888,888,888,888,888,435,888,888,285',
'888,888,888,609,609,609,609,609,609,609,609,609,609,609,721,609,609',
'190,288,609,609,345,888,346,591,888,584,435,888,96,78,435,435,888,609',
'77,609,888,609,609,609,609,609,609,609,888,609,294,558,739,888,888,888',
'888,888,888,740,743,746,888,888,747,609,884,884,884,295,884,888,749',
'553,884,884,752,888,888,884,753,884,884,884,884,884,884,884,754,552',
'758,63,884,884,884,884,884,884,884,761,542,884,542,542,542,542,398,762',
'884,298,546,884,884,884,884,884,884,884,884,884,884,541,884,884,777',
'884,884,884,398,398,398,398,398,398,398,398,398,398,398,780,398,398',
'537,526,398,398,415,884,307,309,884,715,715,884,715,715,715,789,884',
'398,790,398,884,398,398,398,398,398,398,398,884,398,41,512,795,884,884',
'884,884,884,884,796,797,511,884,884,510,398,337,398,334,813,884,884',
'882,882,882,882,882,884,884,814,882,882,319,36,821,882,822,882,882,882',
'882,882,882,882,320,34,501,832,882,882,882,882,882,882,882,407,498,882',
'5,5,5,5,5,882,882,882,882,882,882,882,882,882,882,882,882,882,882,838',
'882,882,839,882,882,882,816,816,816,816,816,816,816,816,816,816,816',
'20,816,816,403,844,816,816,475,882,849,850,882,851,644,882,854,476,322',
'401,882,816,493,816,882,816,816,816,816,816,816,816,882,816,395,866',
'394,882,882,882,882,882,882,12,323,11,882,882,876,816,874,874,874,874',
'874,882,491,10,874,874,883,882,882,874,9,874,874,874,874,874,874,874',
'488,487,372,8,874,874,874,874,874,874,874,892,894,874,382,382,382,382',
'382,874,874,874,874,874,874,874,874,874,874,874,874,874,874,895,874',
'874,897,874,874,874,725,725,725,725,725,725,725,725,725,725,725,485',
'725,725,479,1,725,725,369,874,478,833,874,,,874,,,,,874,725,,725,874',
'725,725,725,725,725,725,725,874,725,,,,874,874,874,874,874,874,,,,874',
'874,,725,418,418,418,455,418,874,,,418,418,,874,874,418,,418,418,418',
'418,418,418,418,,,,,418,418,418,418,418,418,418,,455,418,,,455,455,455',
'455,418,,,418,418,418,418,418,418,418,418,418,418,,418,418,,418,418',
'418,634,634,634,634,634,634,634,634,634,634,634,,634,634,,,634,634,',
'418,,,418,418,,418,,,,,418,634,418,634,418,634,634,634,634,634,634,634',
'418,634,,,,418,418,418,418,418,418,,,,418,418,,634,,634,,,418,418,863',
'863,863,863,863,418,418,,863,863,,,,863,,863,863,863,863,863,863,863',
',,,,863,863,863,863,863,863,863,,,863,,,,,,863,863,863,863,863,863,863',
'863,863,863,863,863,863,863,,863,863,,863,863,863,727,727,727,727,727',
'727,727,727,727,727,727,,727,727,,,727,727,,863,,,863,,,863,,,,,863',
'727,,727,863,727,727,727,727,727,727,727,863,727,,,,863,863,863,863',
'863,863,,,,863,863,,727,861,861,861,,861,863,,,861,861,,863,863,861',
',861,861,861,861,861,861,861,,,,,861,861,861,861,861,861,861,,,861,',
',,,,,861,,,861,861,861,861,861,861,861,861,861,861,,861,861,,861,861',
'861,730,730,730,730,730,730,730,730,730,730,730,,730,730,,,730,730,',
'861,,,861,,,861,,,,,861,730,861,730,861,730,730,730,730,730,730,730',
'861,730,,,,861,861,861,861,861,861,,,,861,861,,730,846,846,846,846,846',
'861,,,846,846,,861,861,846,,846,846,846,846,846,846,846,,,,,846,846',
'846,846,846,846,846,,,846,,,,,,846,846,846,846,846,846,846,846,846,846',
'846,846,846,846,,846,846,,846,846,846,654,654,654,654,654,654,654,654',
'654,654,654,,654,654,,,654,654,,846,,,846,,,846,,,,,846,654,,654,846',
'654,654,654,654,654,654,654,846,654,,,,846,846,846,846,846,846,,,,846',
'846,,654,17,17,17,,17,846,,,17,17,,846,846,17,,17,17,17,17,17,17,17',
',,,,17,17,17,17,17,17,17,,,17,,,,,,,17,,,17,17,17,17,17,17,17,17,17',
'17,,17,17,,17,17,17,245,245,245,245,245,245,245,245,245,245,245,,245',
'245,,,245,245,,17,,,17,17,,17,,,,,,245,,245,17,245,245,245,245,245,245',
'245,17,245,,,,17,17,17,17,17,17,,,,17,17,,245,18,18,18,,18,17,,,18,18',
',17,17,18,,18,18,18,18,18,18,18,,,,,18,18,18,18,18,18,18,,,18,,,,,,',
'18,,,18,18,18,18,18,18,18,18,18,18,,18,18,,18,18,18,732,732,732,732',
'732,732,732,732,732,732,732,,732,732,,,732,732,,18,,,18,,,18,,,,,,732',
',732,18,732,732,732,732,732,732,732,18,732,,,,18,18,18,18,18,18,,,,18',
'18,,732,841,841,841,841,841,18,,,841,841,,18,18,841,,841,841,841,841',
'841,841,841,,,,,841,841,841,841,841,841,841,,,841,,,,,,841,841,841,841',
'841,841,841,841,841,841,841,841,841,841,,841,841,,841,841,841,737,737',
'737,737,737,737,737,737,737,737,737,,737,737,,,737,737,,841,,,841,,',
'841,,,,,841,737,,737,841,737,737,737,737,737,737,737,841,737,,,,841',
'841,841,841,841,841,,,,841,841,,737,840,840,840,,840,841,,,840,840,',
'841,841,840,,840,840,840,840,840,840,840,,,,,840,840,840,840,840,840',
'840,,,840,,,,,,,840,,,840,840,840,840,840,840,840,840,840,840,,840,840',
',840,840,840,421,421,421,421,421,421,421,421,421,421,421,,421,421,,',
'421,421,,840,,,840,,,840,,,,,840,421,,421,840,421,421,421,421,421,421',
'421,840,421,,,,840,840,840,840,840,840,,,,840,840,,421,22,22,22,,22',
'840,,,22,22,,840,840,22,,22,22,22,22,22,22,22,,,,,22,22,22,22,22,22',
'22,,,22,,,,,,,22,,,22,22,22,22,22,22,22,22,22,22,,22,22,,22,22,22,458',
'458,458,458,458,458,458,458,458,458,458,,458,458,,,458,458,,22,,,22',
',539,22,539,539,539,539,22,458,22,458,22,458,458,458,458,458,458,458',
'22,458,,,,22,22,22,22,22,22,,,,22,22,,458,458,539,,,22,22,23,23,23,539',
'23,22,22,,23,23,,,,23,,23,23,23,23,23,23,23,,,,,23,23,23,23,23,23,23',
',,23,,,,,,,23,,,23,23,23,23,23,23,23,23,23,23,,23,23,,23,23,23,406,406',
'406,406,406,406,406,406,406,406,406,,406,406,,,406,406,,23,,,23,,330',
'23,330,330,330,330,23,406,23,406,23,406,406,406,406,406,406,406,23,406',
',,,23,23,23,23,23,23,,,,23,23,,406,,330,,,23,23,24,24,24,330,24,23,23',
',24,24,,,,24,,24,24,24,24,24,24,24,,,,,24,24,24,24,24,24,24,,,24,,,',
',,,24,,,24,24,24,24,24,24,24,24,24,24,,24,24,,24,24,24,19,19,19,19,19',
'19,19,19,19,19,19,,19,19,,,19,19,,24,,,24,,678,24,678,678,678,678,24',
'19,24,19,24,19,19,19,19,19,19,19,24,19,,,,24,24,24,24,24,24,,,,24,24',
',19,,678,,,24,24,836,836,836,678,836,24,24,,836,836,,,,836,,836,836',
'836,836,836,836,836,,,,,836,836,836,836,836,836,836,,,836,,,,,,,836',
',,836,836,836,836,836,836,836,836,836,836,,836,836,,836,836,836,720',
'720,720,720,720,720,720,720,720,720,720,,720,720,,,720,720,,836,,,836',
',,836,,,,,,720,,720,836,720,720,720,720,720,720,720,836,720,,,,836,836',
'836,836,836,836,,,,836,836,,720,830,830,830,,830,836,,,830,830,,836',
'836,830,,830,830,830,830,830,830,830,,,,,830,830,830,830,830,830,830',
',,830,,,,,,,830,,,830,830,830,830,830,830,830,830,830,830,,830,830,443',
',,830,,,,,,,,,,,,,443,443,,,,,,830,,,830,,,830,,443,27,,,443,443,443',
'443,27,27,27,,,27,27,27,447,27,,,830,830,830,830,830,830,27,27,27,830',
'830,,447,447,,,27,27,830,27,27,27,27,27,830,830,,447,,447,,447,447,447',
'447,,,447,,447,,,,,,27,27,27,27,27,27,27,27,27,27,27,27,27,27,,,27,27',
'27,,,27,,27,27,,,,,27,,27,,27,,27,27,27,27,27,27,27,,27,27,27,,565,',
'565,565,565,565,,,,,,27,27,27,27,,27,28,,,,,,27,28,28,28,,,28,28,28',
',28,448,,,565,565,,,,,28,28,565,565,565,565,,448,448,28,28,,28,28,28',
'28,28,,,,,,448,,448,,448,448,448,448,,,448,,448,,,,28,28,28,28,28,28',
'28,28,28,28,28,28,28,28,,,28,28,28,,,28,,28,28,,,,,28,,28,,28,,28,28',
'28,28,28,28,28,,28,,28,,,,,,,,,,,,,28,28,28,28,,28,30,30,30,30,30,,28',
',30,30,,,,30,,30,30,30,30,30,30,30,,,,,30,30,30,30,30,30,30,,,30,,,',
',,30,30,30,30,30,30,30,30,30,30,30,30,30,30,,30,30,,30,30,30,508,508',
'508,508,508,508,508,508,508,508,508,,508,508,,,508,508,,30,,,30,,,30',
',,,,30,508,,508,30,508,508,508,508,508,508,508,30,508,,,,30,30,30,30',
'30,30,,,,30,30,,508,31,31,31,,31,30,,,31,31,,30,30,31,,31,31,31,31,31',
'31,31,,,,,31,31,31,31,31,31,31,,,31,,,,,,,31,,,31,31,31,31,31,31,31',
'31,31,31,,31,31,442,,532,31,532,532,532,532,,,,,,,,,442,442,,,,,,31',
',,31,,,31,,442,,442,31,442,442,442,442,532,,705,,705,705,705,705,532',
'532,532,532,31,31,31,31,31,31,,,,31,31,,,32,32,32,,32,31,,,32,32,,31',
'31,32,705,32,32,32,32,32,32,32,705,705,705,705,32,32,32,32,32,32,32',
',,32,,,,,,,32,,,32,32,32,32,32,32,32,32,32,32,,32,32,446,,857,32,857',
'857,857,857,,,,,,,,,446,446,,,,,,32,,,32,,,32,,446,,446,,446,446,446',
'446,857,857,446,,446,,,,857,857,857,857,32,32,32,32,32,32,,,,32,32,',
',,32,,,,32,419,419,419,,419,32,32,,419,419,,,,419,,419,419,419,419,419',
'419,419,,,,,419,419,419,419,419,419,419,,,419,,,,,,,419,,,419,419,419',
'419,419,419,419,419,419,419,,419,419,,419,419,419,449,449,449,449,449',
'449,449,,,449,449,,,,,,449,449,,419,,,419,419,,419,,,,,419,449,419,449',
'419,449,449,449,449,449,449,449,419,449,,,,419,419,419,419,419,419,',
',,419,419,,,,,,,419,419,826,826,826,826,826,419,419,,826,826,,,,826',
',826,826,826,826,826,826,826,,,,,826,826,826,826,826,826,826,,,826,',
',,,,826,826,826,826,826,826,826,826,826,826,826,826,826,826,,826,826',
',826,826,826,453,453,453,453,453,453,453,,,453,453,,,,,,453,453,,826',
',,826,,,826,,,,,826,453,,453,826,453,453,453,453,453,453,453,826,453',
',,,826,826,826,826,826,826,,,,826,826,,,817,817,817,,817,826,,,817,817',
',826,826,817,,817,817,817,817,817,817,817,,,,,817,817,817,817,817,817',
'817,,,817,,,,,,,817,,,817,817,817,817,817,817,817,817,817,817,,817,817',
',817,817,817,450,450,450,450,450,450,450,,,450,450,,,,,,450,450,,817',
',,817,,,817,,,,,,450,,450,817,450,450,450,450,450,450,450,817,450,,',
',817,817,817,817,817,817,,,,817,817,,,805,805,805,,805,817,,,805,805',
',817,817,805,,805,805,805,805,805,805,805,,,,,805,805,805,805,805,805',
'805,,,805,,,,,,,805,,,805,805,805,805,805,805,805,805,805,805,,805,805',
',805,805,805,451,451,451,451,451,451,451,,,451,451,,,,,,451,451,,805',
',,805,,,805,,,,,,451,,451,805,451,451,451,451,451,451,451,805,451,,',
',805,805,805,805,805,805,,,,805,805,,,38,38,38,,38,805,,,38,38,,805',
'805,38,,38,38,38,38,38,38,38,,,,,38,38,38,38,38,38,38,,,38,,,,,,,38',
',,38,38,38,38,38,38,38,38,38,38,,38,38,,38,38,38,445,,,,,,,,,,,,,,,',
'445,445,,38,,,38,,,38,,,,,,445,,445,38,445,445,445,445,,,445,38,445',
',,,38,38,38,38,38,38,,,,38,38,,,39,39,39,,39,38,,,39,39,,38,38,39,,39',
'39,39,39,39,39,39,,,,,39,39,39,39,39,39,39,,,39,,,,,,,39,,,39,39,39',
'39,39,39,39,39,39,39,,39,39,,39,39,39,433,433,433,433,433,433,433,433',
'433,433,433,,433,433,,,433,433,,39,,,39,,,39,,,,,,433,,433,39,433,433',
'433,433,433,433,433,39,433,,,,39,39,39,39,39,39,,,,39,39,,,40,40,40',
',40,39,,,40,40,,39,39,40,,40,40,40,40,40,40,40,,,,,40,40,40,40,40,40',
'40,,,40,,,,,,,40,,,40,40,40,40,40,40,40,40,40,40,,40,40,,40,40,40,456',
'456,456,456,456,456,456,,,456,456,,,,,,456,456,,40,,,40,,,40,,,,,,456',
',456,40,456,456,456,456,456,456,456,40,456,,,,40,40,40,40,40,40,,,,40',
'40,,,791,791,791,791,791,40,,,791,791,,40,40,791,,791,791,791,791,791',
'791,791,,,,,791,791,791,791,791,791,791,,,791,,,,,,791,791,791,791,791',
'791,791,791,791,791,791,791,791,791,,791,791,,791,791,791,434,434,434',
'434,434,434,434,434,434,434,434,,434,434,,,434,434,,791,,,791,,,791',
',,,,791,434,,434,791,434,434,434,434,434,434,434,791,434,,,,791,791',
'791,791,791,791,,,,791,791,,,426,426,426,,426,791,,,426,426,,791,791',
'426,,426,426,426,426,426,426,426,,,,,426,426,426,426,426,426,426,,,426',
',,,,,,426,,,426,426,426,426,426,426,426,426,426,426,,426,426,,426,426',
'426,457,457,457,457,457,457,457,457,,457,457,,,,,,457,457,,426,,,426',
',,426,,,,,426,457,,457,426,457,457,457,457,457,457,457,426,457,,,,426',
'426,426,426,426,426,,50,,426,426,,,,50,50,50,426,426,50,50,50,441,50',
'426,426,,,,,,,,50,50,,,,441,441,,,50,50,,50,50,50,50,50,,,,441,,441',
',441,441,441,441,,,,,,,,,,,50,50,50,50,50,50,50,50,50,50,50,50,50,50',
',,50,50,50,,,50,,,50,,,50,,50,,50,,50,,50,50,50,50,50,50,50,,50,,50',
',,799,,799,799,799,799,,,,,50,50,50,50,,50,,,50,50,,,50,52,52,52,,52',
',,,52,52,,,,52,799,52,52,52,52,52,52,52,799,799,799,799,52,52,52,52',
'52,52,52,,,52,,,,,,,52,,,52,52,52,52,52,52,52,52,52,52,,52,52,,52,52',
'52,452,452,452,452,452,452,452,,,452,452,,,,,,452,452,,52,,,52,,,52',
',,,,,452,,452,52,452,452,452,452,452,452,452,52,452,,,,52,52,52,52,52',
'52,,,,52,52,,,53,53,53,,53,52,,,53,53,,52,52,53,,53,53,53,53,53,53,53',
',,,,53,53,53,53,53,53,53,,,53,,,,,,,53,,,53,53,53,53,53,53,53,53,53',
'53,,53,53,,53,53,53,444,444,444,444,444,444,444,,,444,444,,,,,,444,444',
',53,,,53,,,53,,,,,53,444,,444,53,444,444,444,444,444,444,444,53,444',
',,,53,53,53,53,53,53,,,,53,53,,,,,,,53,53,54,54,54,,54,53,53,,54,54',
',,,54,,54,54,54,54,54,54,54,,,,,54,54,54,54,54,54,54,,,54,,,,,,,54,',
',54,54,54,54,54,54,54,54,54,54,,54,54,,54,54,54,,,,,,,,,,,,,,,,,,,,54',
',,54,,,54,,,,,54,,,,54,,,,,,,,54,,,,,54,54,54,54,54,54,,,,54,54,,,,',
',,54,54,782,782,782,782,782,54,54,,782,782,,,,782,,782,782,782,782,782',
'782,782,,,,,782,782,782,782,782,782,782,,,782,,,,,,782,782,782,782,782',
'782,782,782,782,782,782,782,782,782,,782,782,,782,782,782,,,,,,,,,,',
',,,,,,,,,782,,,782,,,782,,,,,782,,,,782,,,,,,,,782,,,,,782,782,782,782',
'782,782,,,,782,782,,,781,781,781,781,781,782,,,781,781,,782,782,781',
',781,781,781,781,781,781,781,,,,,781,781,781,781,781,781,781,,,781,',
',,,,781,781,781,781,781,781,781,781,781,781,781,781,781,781,,781,781',
',781,781,781,,,,,,,,,,,,,,,,,,,,781,,,781,,,781,,,,,781,,,,781,,,,,',
',,781,,,,,781,781,781,781,781,781,,,,781,781,,,57,57,57,,57,781,,,57',
'57,,781,781,57,,57,57,57,57,57,57,57,,,,,57,57,57,57,57,57,57,,,57,',
',,,,,57,,,57,57,57,57,57,57,57,57,57,57,,57,57,,57,57,57,,,,,,,,,,,',
',,,,,,,,57,,,57,,,57,,,,,,,,,57,,,,,,,,57,,,,,57,57,57,57,57,57,,,,57',
'57,,,58,58,58,,58,57,,,58,58,,57,57,58,,58,58,58,58,58,58,58,,,,,58',
'58,58,58,58,58,58,,,58,,,,,,,58,,,58,58,58,58,58,58,58,58,58,58,,58',
'58,,58,58,58,,,,,,,,,,,,,,,,,,,,58,,,58,,,58,,,,,,,,,58,,,,,,,,58,,',
',,58,58,58,58,58,58,,,,58,58,,,61,61,61,,61,58,,,61,61,,58,58,61,,61',
'61,61,61,61,61,61,,,,,61,61,61,61,61,61,61,,,61,,,,,,,61,,,61,61,61',
'61,61,61,61,61,61,61,,61,61,,61,61,61,,,,,,,,,,,,,,,,,,,,61,,,61,,,61',
',,,,,,,,61,,,,,,,,61,,,,,61,61,61,61,61,61,,,,61,61,61,,62,62,62,61',
'62,61,,,62,62,,61,61,62,,62,62,62,62,62,62,62,,,,,62,62,62,62,62,62',
'62,,,62,,,,,,,62,,,62,62,62,62,62,62,62,62,62,62,,62,62,,,315,62,315',
'315,315,315,,,,,,,,,,,,,,,,62,,,62,,,62,,,,,62,,,,,315,,315,,,,,,315',
'315,315,315,62,62,62,62,62,62,,,,62,62,,,760,760,760,760,760,62,,,760',
'760,,62,62,760,,760,760,760,760,760,760,760,,,,,760,760,760,760,760',
'760,760,,,760,,,,,,760,760,760,760,760,760,760,760,760,760,760,760,760',
'760,,760,760,,760,760,760,,,,,,,,,,,,,,,,,,,,760,,,760,,,760,,,,,760',
',,,760,,,,,,,,760,,,,,760,760,760,760,760,760,,,,760,760,,,428,428,428',
',428,760,,,428,428,,760,760,428,,428,428,428,428,428,428,428,,,,,428',
'428,428,428,428,428,428,,,428,,,,,,,428,,,428,428,428,428,428,428,428',
'428,428,428,,428,428,,428,428,428,,,,,,,,,,,,,,,,,,,,428,,,428,,,428',
',,,,,,,,428,,,,,,,,428,,,,,428,428,428,428,428,428,,,,428,428,,,750',
'750,750,,750,428,,,750,750,,428,428,750,,750,750,750,750,750,750,750',
',,,,750,750,750,750,750,750,750,,,750,,,,,,,750,,,750,750,750,750,750',
'750,750,750,750,750,,750,750,,750,750,750,,,,,,,,,,,,,,,,,,,,750,,,750',
',,750,,,,,750,,,,750,,,,,,,,750,,,,,750,750,750,750,750,750,,,,750,750',
',,735,735,735,,735,750,,,735,735,,750,750,735,,735,735,735,735,735,735',
'735,,,,,735,735,735,735,735,735,735,,,735,,,,,,,735,,,735,735,735,735',
'735,735,735,735,735,735,,735,735,,735,735,735,,,,,,,,,,,,,,,,,,,,735',
',,735,,,735,,,,,,,,,735,,,,,,,,735,,,,,735,735,735,735,735,735,,,,735',
'735,,,734,734,734,,734,735,,,734,734,,735,735,734,,734,734,734,734,734',
'734,734,,,,,734,734,734,734,734,734,734,,,734,,,,,,,734,,,734,734,734',
'734,734,734,734,734,734,734,,734,734,,734,734,734,,,,,,,,,,,,,,,,,,',
',734,,,734,,,734,,,,,,,,,734,,,,,,,,734,,,,,734,734,734,734,734,734',
',,,734,734,,,349,349,349,,349,734,,,349,349,,734,734,349,,349,349,349',
'349,349,349,349,,,,,349,349,349,349,349,349,349,,,349,,,,,,,349,,,349',
'349,349,349,349,349,349,349,349,349,,349,349,,,56,349,56,56,56,56,,',
',,,,,,,,,,,,,349,,,349,,,349,,,,,,,,,,56,56,,,,,,,56,56,56,56,349,349',
'349,349,349,349,,,,349,349,,,83,83,83,,83,349,,,83,83,,349,349,83,,83',
'83,83,83,83,83,83,,83,,,83,83,83,83,83,83,83,,,83,,,,,,,83,,,83,83,83',
'83,83,83,83,83,83,83,,83,83,,83,83,83,,,,,,,,,,,,,,,,,,,,83,,,83,83',
',83,,,,,83,,83,,83,,,,,,,,83,,83,,,83,83,83,83,83,83,,,,83,83,,,,,,',
'83,83,86,86,86,,86,83,83,,86,86,,,,86,,86,86,86,86,86,86,86,,86,,,86',
'86,86,86,86,86,86,,,86,,,,,,,86,,,86,86,86,86,86,86,86,86,86,86,,86',
'86,,86,86,86,,,,,,,,,,,,,,,,,,,,86,,,86,86,,86,,,,,86,,86,,86,,,,,,',
',86,,86,,,86,86,86,86,86,86,,,,86,86,,,,,,,86,86,733,733,733,,733,86',
'86,,733,733,,,,733,,733,733,733,733,733,733,733,,,,,733,733,733,733',
'733,733,733,,,733,,,,,,,733,,,733,733,733,733,733,733,733,733,733,733',
',733,733,,733,733,733,,,,,,,,,,,,,,,,,,,,733,,,733,,,733,,,,,,,,,733',
',,,,,,,733,,,,,733,733,733,733,733,733,,,,733,733,,,98,98,98,98,98,733',
',,98,98,,733,733,98,,98,98,98,98,98,98,98,,,,,98,98,98,98,98,98,98,',
',98,,,,,,98,98,98,98,98,98,98,98,98,98,98,98,98,98,,98,98,,98,98,98',
',,,,,,,,,,,,,,,,,,,98,,,98,,,98,,,,,98,,,,98,,,,,,,,98,,,,,98,98,98',
'98,98,98,,,,98,98,,,102,102,102,98,102,98,,,102,102,,98,98,102,,102',
'102,102,102,102,102,102,,,,,102,102,102,102,102,102,102,,,102,,,,,,',
'102,,,102,102,102,102,102,102,102,102,102,102,,102,102,,102,102,102',
',,,,,,,,,,,,,,,,,,,102,,,102,,,102,,,,,,,,,102,,,,,,,,102,,,,,102,102',
'102,102,102,102,,,,102,102,,,103,103,103,,103,102,,,103,103,,102,102',
'103,,103,103,103,103,103,103,103,,,,,103,103,103,103,103,103,103,,,103',
',,,,,,103,,,103,103,103,103,103,103,103,103,103,103,,103,103,,103,103',
'103,,,,,,,,,,,,,,,,,,,,103,,,103,,,103,,,,,,,,,103,,,,,,,,103,,,,,103',
'103,103,103,103,103,,,,103,103,,,104,104,104,,104,103,,,104,104,,103',
'103,104,,104,104,104,104,104,104,104,,,,,104,104,104,104,104,104,104',
',,104,,,,,,,104,,,104,104,104,104,104,104,104,104,104,104,,104,104,',
'104,104,104,,,,,,,,,,,,,,,,,,,,104,,,104,,,104,,,,,,,,,104,,,,,,,,104',
',,,,104,104,104,104,104,104,,,,104,104,,,105,105,105,,105,104,,,105',
'105,,104,104,105,,105,105,105,105,105,105,105,,,,,105,105,105,105,105',
'105,105,,,105,,,,,,,105,,,105,105,105,105,105,105,105,105,105,105,,105',
'105,,105,105,105,,,,,,,,,,,,,,,,,,,,105,,,105,,,105,,,,,,,,,105,,,,',
',,,105,,,,,105,105,105,105,105,105,,,,105,105,,,106,106,106,106,106',
'105,,,106,106,,105,105,106,,106,106,106,106,106,106,106,,,,,106,106',
'106,106,106,106,106,,,106,,,,,,106,106,106,106,106,106,106,106,106,106',
'106,106,106,106,,106,106,,106,106,106,,,,,,,,,,,,,,,,,,,,106,,,106,',
',106,,,,,106,,,,106,,,,,,,,106,,,,,106,106,106,106,106,106,,,,106,106',
',,723,723,723,,723,106,,,723,723,,106,106,723,,723,723,723,723,723,723',
'723,,,,,723,723,723,723,723,723,723,,,723,,,,,,,723,,,723,723,723,723',
'723,723,723,723,723,723,,723,723,,723,723,723,,,,,,,,,,,,,,,,,,,,723',
',,723,,,723,,,,,,,,,723,,,,,,,,723,,,,,723,723,723,723,723,723,,,,723',
'723,,,347,347,347,,347,723,,,347,347,,723,723,347,,347,347,347,347,347',
'347,347,,,,,347,347,347,347,347,347,347,,,347,,,,,,,347,,,347,347,347',
'347,347,347,347,347,347,347,,347,347,,,,347,,,,,,,,,,,,,,,,,,,,347,',
',347,,,347,,,,,,,,,,,,,,,,,,,,,,347,347,347,347,347,347,,,,347,347,',
',722,722,722,,722,347,,,722,722,,347,347,722,,722,722,722,722,722,722',
'722,,,,,722,722,722,722,722,722,722,,,722,,,,,,,722,,,722,722,722,722',
'722,722,722,722,722,722,,722,722,,722,722,722,,,,,,,,,,,,,,,,,,,,722',
',,722,,,722,,,,,,,,,722,,,,,,,,722,,,,,722,722,722,722,722,722,,,,722',
'722,,,192,192,192,192,192,722,,,192,192,,722,722,192,,192,192,192,192',
'192,192,192,,,,,192,192,192,192,192,192,192,,,192,,,,,,192,192,192,192',
'192,192,192,192,192,192,192,192,192,192,,192,192,,192,192,192,,,,,,',
',,,,,,,,,,,,,192,,,192,,,192,,,,,192,,,,192,,,,,,,,192,,,,,192,192,192',
'192,192,192,,,,192,192,,,193,193,193,193,193,192,,,193,193,,192,192',
'193,,193,193,193,193,193,193,193,,,,,193,193,193,193,193,193,193,,,193',
',,,,,193,193,193,193,193,193,193,193,193,193,193,193,193,193,,193,193',
',193,193,193,,,,,,,,,,,,,,,,,,,,193,,,193,,,193,,,,,193,,,,193,,,,,',
',,193,,,,,193,193,193,193,193,193,,,,193,193,,,194,194,194,,194,193',
',,194,194,,193,193,194,,194,194,194,194,194,194,194,,,,,194,194,194',
'194,194,194,194,,,194,,,,,,,194,,,194,194,194,194,194,194,194,194,194',
'194,,194,194,,194,194,194,,,,,,,,,,,,,,,,,,,,194,,,194,,,194,,,,,194',
',,,194,,,,,,,,194,,,,,194,194,194,194,194,194,,,,194,194,,,195,195,195',
',195,194,,,195,195,,194,194,195,,195,195,195,195,195,195,195,,,,,195',
'195,195,195,195,195,195,,,195,,,,,,,195,,,195,195,195,195,195,195,195',
'195,195,195,,195,195,,195,195,195,,,,,,,,,,,,,,,,,,,,195,,,195,,,195',
',,,,195,,,,195,,,,,,,,195,,,,,195,195,195,195,195,195,,,,195,195,,,196',
'196,196,,196,195,,,196,196,,195,195,196,,196,196,196,196,196,196,196',
',,,,196,196,196,196,196,196,196,,,196,,,,,,,196,,,196,196,196,196,196',
'196,196,196,196,196,,196,196,,196,196,196,,,,,,,,,,,,,,,,,,,,196,,,196',
',,196,,,,,,,,,196,,,,,,,,196,,,,,196,196,196,196,196,196,,,,196,196',
',,197,197,197,,197,196,,,197,197,,196,196,197,,197,197,197,197,197,197',
'197,,,,,197,197,197,197,197,197,197,,,197,,,,,,,197,,,197,197,197,197',
'197,197,197,197,197,197,,197,197,,197,197,197,,,,,,,,,,,,,,,,,,,,197',
',,197,,,197,,,,,197,,,,197,,,,,,,,197,,,,,197,197,197,197,197,197,,',
',197,197,,,,,,,197,197,716,716,716,716,716,197,197,,716,716,,,,716,',
'716,716,716,716,716,716,716,,,,,716,716,716,716,716,716,716,,,716,,',
',,,716,716,716,716,716,716,716,716,716,716,716,716,716,716,,716,716',
',716,716,716,,,,,,,,,,,,,,,,,,,,716,,,716,,,716,,,,,716,,,,716,,,,,',
',,716,,,,,716,716,716,716,716,716,,,,716,716,,,429,429,429,,429,716',
',,429,429,,716,716,429,,429,429,429,429,429,429,429,,,,,429,429,429',
'429,429,429,429,,,429,,,,,,,429,,,429,429,429,429,429,429,429,429,429',
'429,,429,429,,429,429,429,,,,,,,,,,,,,,,,,,,,429,,,429,,,429,,,,,,,',
',429,,,,,,,,429,,,,,429,429,429,429,429,429,,,,429,429,,,200,200,200',
',200,429,,,200,200,,429,429,200,,200,200,200,200,200,200,200,,,,,200',
'200,200,200,200,200,200,,,200,,,,,,,200,,,200,200,200,200,200,200,200',
'200,200,200,,200,200,,200,200,200,,,,,,,,,,,,,,,,,,,,200,,,200,,,200',
',,,,,,,,200,,,,,,,,200,,,,,200,200,200,200,200,200,,,,200,200,,,201',
'201,201,,201,200,,,201,201,,200,200,201,,201,201,201,201,201,201,201',
',,,,201,201,201,201,201,201,201,,,201,,,,,,,201,,,201,201,201,201,201',
'201,201,201,201,201,,201,201,,201,201,201,,,,,,,,,,,,,,,,,,,,201,,,201',
',,201,,,,,,,,,201,,,,,,,,201,,,,,201,201,201,201,201,201,,,,201,201',
',,202,202,202,,202,201,,,202,202,,201,201,202,,202,202,202,202,202,202',
'202,,,,,202,202,202,202,202,202,202,,,202,,,,,,,202,,,202,202,202,202',
'202,202,202,202,202,202,,202,202,,202,202,202,,,,,,,,,,,,,,,,,,,,202',
',,202,,,202,,,,,,,,,202,,,,,,,,202,,,,,202,202,202,202,202,202,,,,202',
'202,,,704,704,704,704,704,202,,,704,704,,202,202,704,,704,704,704,704',
'704,704,704,,,,,704,704,704,704,704,704,704,,,704,,,,,,704,704,704,704',
'704,704,704,704,704,704,704,704,704,704,,704,704,,704,704,704,,,,,,',
',,,,,,,,,,,,,704,,,704,,,704,,,,,704,,,,704,,,,,,,,704,,,,,704,704,704',
'704,704,704,,,,704,704,,,703,703,703,703,703,704,,,703,703,,704,704',
'703,,703,703,703,703,703,703,703,,,,,703,703,703,703,703,703,703,,,703',
',,,,,703,703,703,703,703,703,703,703,703,703,703,703,703,703,,703,703',
',703,703,703,,,,,,,,,,,,,,,,,,,,703,,,703,,,703,,,,,703,,,,703,,,,,',
',,703,,,,,703,703,703,703,703,703,,,,703,703,,,700,700,700,,700,703',
',,700,700,,703,703,700,,700,700,700,700,700,700,700,,,,,700,700,700',
'700,700,700,700,,,700,,,,,,,700,,,700,700,700,700,700,700,700,700,700',
'700,,700,700,,700,700,700,,,,,,,,,,,,,,,,,,,,700,,,700,,,700,,,,,,,',
',700,,,,,,,,700,,,,,700,700,700,700,700,700,,,,700,700,,,696,696,696',
',696,700,,,696,696,,700,700,696,,696,696,696,696,696,696,696,,,,,696',
'696,696,696,696,696,696,,,696,,,,,,,696,,,696,696,696,696,696,696,696',
'696,696,696,,696,696,,696,696,696,,,,,,,,,,,,,,,,,,,,696,,,696,,,696',
',,,,696,,,,696,,,,,,,,696,,,,,696,696,696,696,696,696,,,,696,696,,,',
',,,696,696,692,692,692,,692,696,696,,692,692,,,,692,,692,692,692,692',
'692,692,692,,,,,692,692,692,692,692,692,692,,,692,,,,,,,692,,,692,692',
'692,692,692,692,692,692,692,692,,692,692,,692,692,692,,,,,,,,,,,,,,',
',,,,,692,,,692,,,692,,,,,,,,,692,,,,,,,,692,,,,,692,692,692,692,692',
'692,,,,692,692,,,691,691,691,,691,692,,,691,691,,692,692,691,,691,691',
'691,691,691,691,691,,,,,691,691,691,691,691,691,691,,,691,,,,,,,691',
',,691,691,691,691,691,691,691,691,691,691,,691,691,,691,691,691,,,,',
',,,,,,,,,,,,,,,691,,,691,,,691,,,,,691,,,,691,,,,,,,,691,,,,,691,691',
'691,691,691,691,,,,691,691,,,210,210,210,210,210,691,,,210,210,,691',
'691,210,,210,210,210,210,210,210,210,,,,,210,210,210,210,210,210,210',
',,210,,,,,,210,210,210,210,210,210,210,210,210,210,210,210,210,210,',
'210,210,,210,210,210,,,,,,,,,,,,,,,,,,,,210,,,210,,,210,,,,,210,,,,210',
',,,,,,,210,,,,,210,210,210,210,210,210,,,,210,210,,,211,211,211,,211',
'210,,,211,211,,210,210,211,,211,211,211,211,211,211,211,,,,,211,211',
'211,211,211,211,211,,,211,,,,,,,211,,,211,211,211,211,211,211,211,211',
'211,211,,211,211,,211,211,211,,,,,,,,,,,,,,,,,,,,211,,,211,,211,211',
',,,,,,,,211,,,,,,,,211,,,,,211,211,211,211,211,211,,,,211,211,,,214',
'214,214,,214,211,,,214,214,,211,211,214,,214,214,214,214,214,214,214',
',,,,214,214,214,214,214,214,214,,,214,,,,,,,214,,,214,214,214,214,214',
'214,214,214,214,214,,214,214,,214,214,214,,,,,,,,,,,,,,,,,,,,214,,,214',
',,214,,,,,,,,,214,,,,,,,,214,,,,,214,214,214,214,214,214,,,,214,214',
',,659,659,659,,659,214,,,659,659,,214,214,659,,659,659,659,659,659,659',
'659,,,,,659,659,659,659,659,659,659,,,659,,,,,,,659,,,659,659,659,659',
'659,659,659,659,659,659,,659,659,,659,659,659,,,,,,,,,,,,,,,,,,,,659',
',,659,,,659,,,,,659,,,,659,,,,,,,,659,,,,,659,659,659,659,659,659,,',
',659,659,,,216,216,216,,216,659,,,216,216,,659,659,216,,216,216,216',
'216,216,216,216,,,,,216,216,216,216,216,216,216,,,216,,,,,,,216,,,216',
'216,216,216,216,216,216,216,216,216,,216,216,,216,216,216,,,,,,,,,,',
',,,,,,,,,216,,,216,,,216,,,,,,,,,216,,,,,,,,216,,,,,216,216,216,216',
'216,216,,,,216,216,,,217,217,217,,217,216,,,217,217,,216,216,217,,217',
'217,217,217,217,217,217,,,,,217,217,217,217,217,217,217,,,217,,,,,,',
'217,,,217,217,217,217,217,217,217,217,217,217,,217,217,,217,217,217',
',,,,,,,,,,,,,,,,,,,217,,,217,,,217,,,,,,,,,217,,,,,,,,217,,,,,217,217',
'217,217,217,217,,,,217,217,,,218,218,218,,218,217,,,218,218,,217,217',
'218,,218,218,218,218,218,218,218,,,,,218,218,218,218,218,218,218,,,218',
',,,,,,218,,,218,218,218,218,218,218,218,218,218,218,,218,218,,218,218',
'218,,,,,,,,,,,,,,,,,,,,218,,,218,,,218,,,,,,,,,218,,,,,,,,218,,,,,218',
'218,218,218,218,218,,,,218,218,,,219,219,219,,219,218,,,219,219,,218',
'218,219,,219,219,219,219,219,219,219,,,,,219,219,219,219,219,219,219',
',,219,,,,,,,219,,,219,219,219,219,219,219,219,219,219,219,,219,219,',
'219,219,219,,,,,,,,,,,,,,,,,,,,219,,,219,,,219,,,,,,,,,219,,,,,,,,219',
',,,,219,219,219,219,219,219,,,,219,219,,,220,220,220,,220,219,,,220',
'220,,219,219,220,,220,220,220,220,220,220,220,,,,,220,220,220,220,220',
'220,220,,,220,,,,,,,220,,,220,220,220,220,220,220,220,220,220,220,,220',
'220,,220,220,220,,,,,,,,,,,,,,,,,,,,220,,,220,,,220,,,,,,,,,220,,,,',
',,,220,,,,,220,220,220,220,220,220,,,,220,220,,,221,221,221,,221,220',
',,221,221,,220,220,221,,221,221,221,221,221,221,221,,,,,221,221,221',
'221,221,221,221,,,221,,,,,,,221,,,221,221,221,221,221,221,221,221,221',
'221,,221,221,,221,221,221,,,,,,,,,,,,,,,,,,,,221,,,221,,,221,,,,,,,',
',221,,,,,,,,221,,,,,221,221,221,221,221,221,,,,221,221,,,222,222,222',
',222,221,,,222,222,,221,221,222,,222,222,222,222,222,222,222,,,,,222',
'222,222,222,222,222,222,,,222,,,,,,,222,,,222,222,222,222,222,222,222',
'222,222,222,,222,222,,222,222,222,,,,,,,,,,,,,,,,,,,,222,,,222,,,222',
',,,,,,,,222,,,,,,,,222,,,,,222,222,222,222,222,222,,,,222,222,,,223',
'223,223,,223,222,,,223,223,,222,222,223,,223,223,223,223,223,223,223',
',,,,223,223,223,223,223,223,223,,,223,,,,,,,223,,,223,223,223,223,223',
'223,223,223,223,223,,223,223,,223,223,223,,,,,,,,,,,,,,,,,,,,223,,,223',
',,223,,,,,,,,,223,,,,,,,,223,,,,,223,223,223,223,223,223,,,,223,223',
',,224,224,224,,224,223,,,224,224,,223,223,224,,224,224,224,224,224,224',
'224,,,,,224,224,224,224,224,224,224,,,224,,,,,,,224,,,224,224,224,224',
'224,224,224,224,224,224,,224,224,,224,224,224,,,,,,,,,,,,,,,,,,,,224',
',,224,,,224,,,,,,,,,224,,,,,,,,224,,,,,224,224,224,224,224,224,,,,224',
'224,,,225,225,225,,225,224,,,225,225,,224,224,225,,225,225,225,225,225',
'225,225,,,,,225,225,225,225,225,225,225,,,225,,,,,,,225,,,225,225,225',
'225,225,225,225,225,225,225,,225,225,,225,225,225,,,,,,,,,,,,,,,,,,',
',225,,,225,,,225,,,,,,,,,225,,,,,,,,225,,,,,225,225,225,225,225,225',
',,,225,225,,,226,226,226,,226,225,,,226,226,,225,225,226,,226,226,226',
'226,226,226,226,,,,,226,226,226,226,226,226,226,,,226,,,,,,,226,,,226',
'226,226,226,226,226,226,226,226,226,,226,226,,226,226,226,,,,,,,,,,',
',,,,,,,,,226,,,226,,,226,,,,,,,,,226,,,,,,,,226,,,,,226,226,226,226',
'226,226,,,,226,226,,,227,227,227,,227,226,,,227,227,,226,226,227,,227',
'227,227,227,227,227,227,,,,,227,227,227,227,227,227,227,,,227,,,,,,',
'227,,,227,227,227,227,227,227,227,227,227,227,,227,227,,227,227,227',
',,,,,,,,,,,,,,,,,,,227,,,227,,,227,,,,,,,,,227,,,,,,,,227,,,,,227,227',
'227,227,227,227,,,,227,227,,,228,228,228,,228,227,,,228,228,,227,227',
'228,,228,228,228,228,228,228,228,,,,,228,228,228,228,228,228,228,,,228',
',,,,,,228,,,228,228,228,228,228,228,228,228,228,228,,228,228,,228,228',
'228,,,,,,,,,,,,,,,,,,,,228,,,228,,,228,,,,,,,,,228,,,,,,,,228,,,,,228',
'228,228,228,228,228,,,,228,228,,,229,229,229,,229,228,,,229,229,,228',
'228,229,,229,229,229,229,229,229,229,,,,,229,229,229,229,229,229,229',
',,229,,,,,,,229,,,229,229,229,229,229,229,229,229,229,229,,229,229,',
'229,229,229,,,,,,,,,,,,,,,,,,,,229,,,229,,,229,,,,,,,,,229,,,,,,,,229',
',,,,229,229,229,229,229,229,,,,229,229,,,230,230,230,,230,229,,,230',
'230,,229,229,230,,230,230,230,230,230,230,230,,,,,230,230,230,230,230',
'230,230,,,230,,,,,,,230,,,230,230,230,230,230,230,230,230,230,230,,230',
'230,,230,230,230,,,,,,,,,,,,,,,,,,,,230,,,230,,,230,,,,,,,,,230,,,,',
',,,230,,,,,230,230,230,230,230,230,,,,230,230,,,231,231,231,,231,230',
',,231,231,,230,230,231,,231,231,231,231,231,231,231,,,,,231,231,231',
'231,231,231,231,,,231,,,,,,,231,,,231,231,231,231,231,231,231,231,231',
'231,,231,231,,231,231,231,,,,,,,,,,,,,,,,,,,,231,,,231,,,231,,,,,,,',
',231,,,,,,,,231,,,,,231,231,231,231,231,231,,,,231,231,,,232,232,232',
',232,231,,,232,232,,231,231,232,,232,232,232,232,232,232,232,,,,,232',
'232,232,232,232,232,232,,,232,,,,,,,232,,,232,232,232,232,232,232,232',
'232,232,232,,232,232,,232,232,232,,,,,,,,,,,,,,,,,,,,232,,,232,,,232',
',,,,,,,,232,,,,,,,,232,,,,,232,232,232,232,232,232,,,,232,232,,,233',
'233,233,,233,232,,,233,233,,232,232,233,,233,233,233,233,233,233,233',
',,,,233,233,233,233,233,233,233,,,233,,,,,,,233,,,233,233,233,233,233',
'233,233,233,233,233,,233,233,,233,233,233,,,,,,,,,,,,,,,,,,,,233,,,233',
',,233,,,,,,,,,233,,,,,,,,233,,,,,233,233,233,233,233,233,,,,233,233',
',,234,234,234,,234,233,,,234,234,,233,233,234,,234,234,234,234,234,234',
'234,,,,,234,234,234,234,234,234,234,,,234,,,,,,,234,,,234,234,234,234',
'234,234,234,234,234,234,,234,234,,234,234,234,,,,,,,,,,,,,,,,,,,,234',
',,234,,,234,,,,,,,,,234,,,,,,,,234,,,,,234,234,234,234,234,234,,,,234',
'234,,,235,235,235,,235,234,,,235,235,,234,234,235,,235,235,235,235,235',
'235,235,,,,,235,235,235,235,235,235,235,,,235,,,,,,,235,,,235,235,235',
'235,235,235,235,235,235,235,,235,235,,235,235,235,,,,,,,,,,,,,,,,,,',
',235,,,235,,,235,,,,,,,,,235,,,,,,,,235,,,,,235,235,235,235,235,235',
',,,235,235,,,236,236,236,,236,235,,,236,236,,235,235,236,,236,236,236',
'236,236,236,236,,,,,236,236,236,236,236,236,236,,,236,,,,,,,236,,,236',
'236,236,236,236,236,236,236,236,236,,236,236,,236,236,236,,,,,,,,,,',
',,,,,,,,,236,,,236,,,236,,,,,,,,,236,,,,,,,,236,,,,,236,236,236,236',
'236,236,,,,236,236,,,237,237,237,,237,236,,,237,237,,236,236,237,,237',
'237,237,237,237,237,237,,,,,237,237,237,237,237,237,237,,,237,,,,,,',
'237,,,237,237,237,237,237,237,237,237,237,237,,237,237,,237,237,237',
',,,,,,,,,,,,,,,,,,,237,,,237,,,237,,,,,,,,,237,,,,,,,,237,,,,,237,237',
'237,237,237,237,,,,237,237,,,238,238,238,,238,237,,,238,238,,237,237',
'238,,238,238,238,238,238,238,238,,,,,238,238,238,238,238,238,238,,,238',
',,,,,,238,,,238,238,238,238,238,238,238,238,238,238,,238,238,,238,238',
'238,,,,,,,,,,,,,,,,,,,,238,,,238,,,238,,,,,,,,,238,,,,,,,,238,,,,,238',
'238,238,238,238,238,,,,238,238,,,239,239,239,,239,238,,,239,239,,238',
'238,239,,239,239,239,239,239,239,239,,,,,239,239,239,239,239,239,239',
',,239,,,,,,,239,,,239,239,239,239,239,239,239,239,239,239,,239,239,',
'239,239,239,,,,,,,,,,,,,,,,,,,,239,,,239,,,239,,,,,,,,,239,,,,,,,,239',
',,,,239,239,239,239,239,239,,,,239,239,,,240,240,240,,240,239,,,240',
'240,,239,239,240,,240,240,240,240,240,240,240,,,,,240,240,240,240,240',
'240,240,,,240,,,,,,,240,,,240,240,240,240,240,240,240,240,240,240,,240',
'240,,240,240,240,,,,,,,,,,,,,,,,,,,,240,,,240,,,240,,,,,,,,,240,,,,',
',,,240,,,,,240,240,240,240,240,240,,,,240,240,,,241,241,241,,241,240',
',,241,241,,240,240,241,,241,241,241,241,241,241,241,,,,,241,241,241',
'241,241,241,241,,,241,,,,,,,241,,,241,241,241,241,241,241,241,241,241',
'241,,241,241,,241,241,241,,,,,,,,,,,,,,,,,,,,241,,,241,,,241,,,,,,,',
',241,,,,,,,,241,,,,,241,241,241,241,241,241,,,,241,241,,,653,653,653',
',653,241,,,653,653,,241,241,653,,653,653,653,653,653,653,653,,,,,653',
'653,653,653,653,653,653,,,653,,,,,,,653,,,653,653,653,653,653,653,653',
'653,653,653,,653,653,,,,653,,,,,,,,,,,,,,,,,,,,653,,,653,,,653,,,,,',
',,,,,,,,,,,,,,,,653,653,653,653,653,653,,,,653,653,,,430,430,430,,430',
'653,,,430,430,,653,653,430,,430,430,430,430,430,430,430,,,,,430,430',
'430,430,430,430,430,,,430,,,,,,,430,,,430,430,430,430,430,430,430,430',
'430,430,,430,430,,430,430,430,,,,,,,,,,,,,,,,,,,,430,,,430,,,430,,,',
',,,,,430,,,,,,,,430,,,,,430,430,430,430,430,430,,,,430,430,,,461,461',
'461,,461,430,,,461,461,,430,430,461,,461,461,461,461,461,461,461,,,',
',461,461,461,461,461,461,461,,,461,,,,,,,461,,,461,461,461,461,461,461',
'461,461,461,461,,461,461,,461,461,461,,,,,,,,,,,,,,,,,,,,461,,,461,',
',461,,,,,461,,461,,461,,,,,,,,461,,,,,461,461,461,461,461,461,,,,461',
'461,,,,,,,461,461,250,250,250,,250,461,461,,250,250,,,,250,,250,250',
'250,250,250,250,250,,,,,250,250,250,250,250,250,250,,,250,,,,,,,250',
',,250,250,250,250,250,250,250,250,250,250,,250,250,,250,250,250,,,,',
',,,,,,,,,,,,,,,250,,,250,,,250,,,,,,,,,250,,,,,,,,250,,,,,250,250,250',
'250,250,250,,,,250,250,,,464,464,464,,464,250,,,464,464,,250,250,464',
',464,464,464,464,464,464,464,,,,,464,464,464,464,464,464,464,,,464,',
',,,,,464,,,464,464,464,464,464,464,464,464,464,464,,464,464,,464,464',
'464,,,,,,,,,,,,,,,,,,,,464,,,464,,,464,,,,,,,464,,464,,,,,,,,464,,,',
',464,464,464,464,464,464,,,,464,464,,,,,,,464,464,252,252,252,,252,464',
'464,,252,252,,,,252,,252,252,252,252,252,252,252,,,,,252,252,252,252',
'252,252,252,,,252,,,,,,,252,,,252,252,252,252,252,252,252,252,252,252',
',252,252,,252,252,252,,,,,,,,,,,,,,,,,,,,252,,,252,,,252,,,,,,,,,252',
',,,,,,,252,,,,,252,252,252,252,252,252,,,,252,252,,,257,257,257,,257',
'252,,,257,257,,252,252,257,,257,257,257,257,257,257,257,,,,,257,257',
'257,257,257,257,257,,,257,,,,,,,257,,,257,257,257,257,257,257,257,257',
'257,257,,257,257,,257,257,257,,,,,,,,,,,,,,,,,,,,257,,,257,,,257,,,',
',,,,,257,,,,,,,,257,,,,,257,257,257,257,257,257,,,,257,257,,,643,643',
'643,,643,257,,,643,643,,257,257,643,,643,643,643,643,643,643,643,,,',
',643,643,643,643,643,643,643,,,643,,,,,,,643,,,643,643,643,643,643,643',
'643,643,643,643,,643,643,,,,643,,,,,,,,,,,,,,,,,,,,643,,,643,,,643,',
',,,,,,,,,,,,,,,,,,,,643,643,643,643,643,643,,,,643,643,,,640,640,640',
'640,640,643,,,640,640,,643,643,640,,640,640,640,640,640,640,640,,,,',
'640,640,640,640,640,640,640,,,640,,,,,,640,640,640,640,640,640,640,640',
'640,640,640,640,640,640,,640,640,,640,640,640,,,,,,,,,,,,,,,,,,,,640',
',,640,,,640,,,,,640,,,,640,,,,,,,,640,,,,,640,640,640,640,640,640,,',
',640,640,,,639,639,639,639,639,640,,,639,639,,640,640,639,,639,639,639',
'639,639,639,639,,,,,639,639,639,639,639,639,639,,,639,,,,,,639,639,639',
'639,639,639,639,639,639,639,639,639,639,639,,639,639,,639,639,639,,',
',,,,,,,,,,,,,,,,,639,,,639,,,639,,,,,639,,,,639,,,,,,,,639,,,,,639,639',
'639,639,639,639,,,,639,639,,,263,263,263,,263,639,,,263,263,,639,639',
'263,,263,263,263,263,263,263,263,,,,,263,263,263,263,263,263,263,,,263',
',,,,,,263,,,263,263,263,263,263,263,263,263,263,263,,263,263,,263,263',
'263,,,,,,,,,,,,,,,,,,,,263,,,263,,,263,,,,,263,,263,,263,,,,,,,,263',
',,,,263,263,263,263,263,263,,,,263,263,,,,,,,263,263,264,264,264,,264',
'263,263,,264,264,,,,264,,264,264,264,264,264,264,264,,,,,264,264,264',
'264,264,264,264,,,264,,,,,,,264,,,264,264,264,264,264,264,264,264,264',
'264,,264,264,,264,264,264,,,,,,,,,,,,,,,,,,,,264,,,264,,,264,,,,,264',
',264,,264,,,,,,,,264,,,,,264,264,264,264,264,264,,,,264,264,,,,,,,264',
'264,272,272,272,,272,264,264,,272,272,,,,272,,272,272,272,272,272,272',
'272,,,,,272,272,272,272,272,272,272,,,272,,,,,,,272,,,272,272,272,272',
'272,272,272,272,272,272,,272,272,,272,272,272,,,,,,,,,,,,,,,,,,,,272',
',,272,,272,272,,,,,272,,272,,272,,,,,,,,272,,,,,272,272,272,272,272',
'272,,,,272,272,,,,,,,272,272,633,633,633,,633,272,272,,633,633,,,,633',
',633,633,633,633,633,633,633,,,,,633,633,633,633,633,633,633,,,633,',
',,,,,633,,,633,633,633,633,633,633,633,633,633,633,,633,633,,633,633',
'633,,,,,,,,,,,,,,,,,,,,633,,,633,,,633,,,,,633,,633,,633,,,,,,,,633',
',,,,633,633,633,633,633,633,,,,633,633,,,,,,,633,633,274,274,274,274',
'274,633,633,,274,274,,,,274,,274,274,274,274,274,274,274,,,,,274,274',
'274,274,274,274,274,,,274,,,,,,274,274,274,274,274,274,274,274,274,274',
'274,274,274,274,,274,274,,274,274,274,,,,,,,,,,,,,,,,,,,,274,,,274,',
',274,,,,,274,,,,274,,,,,,,,274,,,,,274,274,274,274,274,274,,,,274,274',
',,627,627,627,627,627,274,,,627,627,,274,274,627,,627,627,627,627,627',
'627,627,,,,,627,627,627,627,627,627,627,,,627,,,,,,627,627,627,627,627',
'627,627,627,627,627,627,627,627,627,,627,627,,627,627,627,,,,,,,,,,',
',,,,,,,,,627,,,627,,,627,,,,,627,,,,627,,,,,,,,627,,,,,627,627,627,627',
'627,627,,,,627,627,,,619,619,619,,619,627,,,619,619,,627,627,619,,619',
'619,619,619,619,619,619,,,,,619,619,619,619,619,619,619,,,619,,,,,,',
'619,,,619,619,619,619,619,619,619,619,619,619,,619,619,,619,619,619',
',,,,,,,,,,,,,,,,,,,619,,,619,,,619,,,,,,,,,619,,,,,,,,619,,,,,619,619',
'619,619,619,619,,,,619,619,,,615,615,615,615,615,619,,,615,615,,619',
'619,615,,615,615,615,615,615,615,615,,,,,615,615,615,615,615,615,615',
',,615,,,,,,615,615,615,615,615,615,615,615,615,615,615,615,615,615,',
'615,615,,615,615,615,,,,,,,,,,,,,,,,,,,,615,,,615,,,615,,,,,615,,,,615',
',,,,,,,615,,,,,615,615,615,615,615,615,,,,615,615,,,278,278,278,,278',
'615,,,278,278,,615,615,278,,278,278,278,278,278,278,278,,,,,278,278',
'278,278,278,278,278,,,278,,,,,,,278,,,278,278,278,278,278,278,278,278',
'278,278,,278,278,,,,278,,,,,,,,,,,,,,,,,,,,278,,,278,,,278,,,,,,,,,',
',,,,,,,,,,,,278,278,278,278,278,278,,,,278,278,,,,278,,,,278,279,279',
'279,279,279,278,278,,279,279,,,,279,,279,279,279,279,279,279,279,,,',
',279,279,279,279,279,279,279,,,279,,,,,,279,279,279,279,279,279,279',
'279,279,279,279,279,279,279,,279,279,,279,279,279,,,,,,,,,,,,,,,,,,',
',279,,,279,,,279,,,,,279,,,,279,,,,,,,,279,,,,,279,279,279,279,279,279',
',,,279,279,,,611,611,611,,611,279,,,611,611,,279,279,611,,611,611,611',
'611,611,611,611,,,,,611,611,611,611,611,611,611,,,611,,,,,,,611,,,611',
'611,611,611,611,611,611,611,611,611,,611,611,,611,611,611,,,,,,,,,,',
',,,,,,,,,611,,,611,,,611,,,,,,,,,611,,,,,,,,611,,,,,611,611,611,611',
'611,611,,607,,611,611,,,,607,607,607,,611,607,607,607,,607,611,611,',
',,,,,,607,607,,,,,,,,607,607,,607,607,607,607,607,,,,,,,,,,,,,,,,,,',
',,,607,607,607,607,607,607,607,607,607,607,607,607,607,607,,,607,607',
'607,,607,607,,,607,,,607,,607,,607,,607,,607,607,607,607,607,607,607',
',607,,607,,,,,,,,,,,,,607,607,607,607,,607,606,,,,607,,607,606,606,606',
',,606,606,606,,606,,,,,,,,,606,606,606,,,,,,,,606,606,,606,606,606,606',
'606,,,,,,,,,,,,,,,,,,,,,,606,606,606,606,606,606,606,606,606,606,606',
'606,606,606,,,606,606,606,,606,606,,,606,,,606,,606,,606,,606,,606,606',
'606,606,606,606,606,,606,606,606,,,,,,,,,,,,,606,606,606,606,,606,,603',
'603,603,606,603,606,,,603,603,,,,603,,603,603,603,603,603,603,603,,',
',,603,603,603,603,603,603,603,,,603,,,,,,,603,,,603,603,603,603,603',
'603,603,603,603,603,,603,603,,603,603,603,,,,,,,,,,,,,,,,,,,,603,,,603',
',,603,,,,,,,,,603,,,,,,,,603,,,,,603,603,603,603,603,603,,,,603,603',
',,600,600,600,,600,603,,,600,600,,603,603,600,,600,600,600,600,600,600',
'600,,,,,600,600,600,600,600,600,600,,,600,,,,,,,600,,,600,600,600,600',
'600,600,600,600,600,600,,600,600,,600,600,600,,,,,,,,,,,,,,,,,,,,600',
',,600,,,600,,,,,,,,,600,,,,,,,,600,,,,,600,600,600,600,600,600,,,,600',
'600,,,595,595,595,,595,600,,,595,595,,600,600,595,,595,595,595,595,595',
'595,595,,,,,595,595,595,595,595,595,595,,,595,,,,,,,595,,,595,595,595',
'595,595,595,595,595,595,595,,595,595,,595,595,595,,,,,,,,,,,,,,,,,,',
',595,,,595,,,595,,,,,,,,,595,,,,,,,,595,,,,,595,595,595,595,595,595',
',,,595,595,,,594,594,594,,594,595,,,594,594,,595,595,594,,594,594,594',
'594,594,594,594,,,,,594,594,594,594,594,594,594,,,594,,,,,,,594,,,594',
'594,594,594,594,594,594,594,594,594,,594,594,,594,594,594,,,,,,,,,,',
',,,,,,,,,594,,,594,,,594,,,,,,,,,594,,,,,,,,594,,,,,594,594,594,594',
'594,594,,,,594,594,,,466,466,466,,466,594,,,466,466,,594,594,466,,466',
'466,466,466,466,466,466,,,,,466,466,466,466,466,466,466,,,466,,,,,,',
'466,,,466,466,466,466,466,466,466,466,466,466,,466,466,,466,466,466',
',,,,,,,,,,,,,,,,,,,466,,,466,,,466,,,,,,,,,466,,,,,,,,466,,,,,466,466',
'466,466,466,466,,,,466,466,,,590,590,590,,590,466,,,590,590,,466,466',
'590,,590,590,590,590,590,590,590,,,,,590,590,590,590,590,590,590,,,590',
',,,,,,590,,,590,590,590,590,590,590,590,590,590,590,,590,590,,590,590',
'590,,,,,,,,,,,,,,,,,,,,590,,,590,,,590,,,,,,,,,590,,,,,,,,590,,,,,590',
'590,590,590,590,590,,,,590,590,,,291,291,291,,291,590,,,291,291,,590',
'590,291,,291,291,291,291,291,291,291,,,,,291,291,291,291,291,291,291',
',,291,,,,,,,291,,,291,291,291,291,291,291,291,291,291,291,,291,291,',
',,291,,,,,,,,,,,,,,,,,,,,291,,,291,,,291,,,,,,,,,,,,,,,,,,,,,,291,291',
'291,291,291,291,,,,291,291,,,563,563,563,,563,291,,,563,563,,291,291',
'563,,563,563,563,563,563,563,563,,,,,563,563,563,563,563,563,563,,,563',
',,,,,,563,,,563,563,563,563,563,563,563,563,563,563,,563,563,,563,563',
'563,,,,,,,,,,,,,,,,,,,,563,,,563,,,563,,,,,,,,,563,,,,,,,,563,,,,,563',
'563,563,563,563,563,,,,563,563,,,342,342,342,,342,563,,,342,342,,563',
'563,342,,342,342,342,342,342,342,342,,,,,342,342,342,342,342,342,342',
',,342,,,,,,,342,,,342,342,342,342,342,342,342,342,342,342,,342,342,',
'342,342,342,,,,,,,,,,,,,,,,,,,,342,,,342,,,342,,,,,,,,,342,,,,,,,,342',
',,,,342,342,342,342,342,342,,,,342,342,,,341,341,341,,341,342,,,341',
'341,,342,342,341,,341,341,341,341,341,341,341,,,,,341,341,341,341,341',
'341,341,,,341,,,,,,,341,,,341,341,341,341,341,341,341,341,341,341,,341',
'341,,341,341,341,,,,,,,,,,,,,,,,,,,,341,,,341,,,341,,,,,,,,,341,,,,',
',,,341,,,,,341,341,341,341,341,341,,,,341,341,,,554,554,554,554,554',
'341,,,554,554,,341,341,554,,554,554,554,554,554,554,554,,,,,554,554',
'554,554,554,554,554,,,554,,,,,,554,554,554,554,554,554,554,554,554,554',
'554,554,554,554,,554,554,,554,554,554,,,,,,,,,,,,,,,,,,,,554,,,554,',
',554,,,,,554,,,,554,,,,,,,,554,,,,,554,554,554,554,554,554,,,,554,554',
',,549,549,549,549,549,554,,,549,549,,554,554,549,,549,549,549,549,549',
'549,549,,,,,549,549,549,549,549,549,549,,,549,,,,,,549,549,549,549,549',
'549,549,549,549,549,549,549,549,549,,549,549,,549,549,549,,,,,,,,,,',
',,,,,,,,,549,,,549,,,549,,,,,549,,,,549,,,,,,,,549,,,,,549,549,549,549',
'549,549,,,,549,549,,,300,300,300,,300,549,,,300,300,,549,549,300,,300',
'300,300,300,300,300,300,,,,,300,300,300,300,300,300,300,,,300,,,,,,',
'300,,,300,300,300,300,300,300,300,300,300,300,,300,300,,300,300,300',
',,,,,,,,,,,,,,,,,,,300,,,300,300,,300,,,,,,,,,300,,,,,,,,300,,,,,300',
'300,300,300,300,300,,,,300,300,,,302,302,302,302,302,300,,,302,302,',
'300,300,302,,302,302,302,302,302,302,302,,,,,302,302,302,302,302,302',
'302,,,302,,,,,,302,302,302,302,302,302,302,302,302,302,302,302,302,302',
',302,302,,302,302,302,,,,,,,,,,,,,,,,,,,,302,,,302,,,302,,,,,302,,,',
'302,,,,,,,,302,,,,,302,302,302,302,302,302,,,,302,302,,,545,545,545',
'545,545,302,,,545,545,,302,302,545,,545,545,545,545,545,545,545,,,,',
'545,545,545,545,545,545,545,,,545,,,,,,545,545,545,545,545,545,545,545',
'545,545,545,545,545,545,,545,545,,545,545,545,,,,,,,,,,,,,,,,,,,,545',
',,545,,,545,,,,,545,,,,545,,,,,,,,545,,,,,545,545,545,545,545,545,,',
',545,545,,,531,531,531,,531,545,,,531,531,,545,545,531,,531,531,531',
'531,531,531,531,,,,,531,531,531,531,531,531,531,,,531,,,,,,,531,,,531',
'531,531,531,531,531,531,531,531,531,,531,531,,,,531,,,,,,,,,,,,,,,,',
',,,531,,,531,,,531,,,,,,,,,,,,,,,,,,,,,,531,531,531,531,531,531,,,,531',
'531,,,525,525,525,525,525,531,,,525,525,,531,531,525,,525,525,525,525',
'525,525,525,,,,,525,525,525,525,525,525,525,,,525,,,,,,525,525,525,525',
'525,525,525,525,525,525,525,525,525,525,,525,525,,525,525,525,,,,,,',
',,,,,,,,,,,,,525,,,525,,,525,,,,,525,,,,525,,,,,,,,525,,,,,525,525,525',
'525,525,525,,,,525,525,,,524,524,524,524,524,525,,,524,524,,525,525',
'524,,524,524,524,524,524,524,524,,,,,524,524,524,524,524,524,524,,,524',
',,,,,524,524,524,524,524,524,524,524,524,524,524,524,524,524,,524,524',
',524,524,524,,,,,,,,,,,,,,,,,,,,524,,,524,,,524,,,,,524,,,,524,,,,,',
',,524,,,,,524,524,524,524,524,524,,,,524,524,,,519,519,519,,519,524',
',,519,519,,524,524,519,,519,519,519,519,519,519,519,,,,,519,519,519',
'519,519,519,519,,,519,,,,,,,519,,,519,519,519,519,519,519,519,519,519',
'519,,519,519,,519,519,519,,,,,,,,,,,,,,,,,,,,519,,,519,,,519,,,,,519',
',,,519,,,,,,,,519,,,,,519,519,519,519,519,519,,,,519,519,,,517,517,517',
',517,519,,,517,517,,519,519,517,,517,517,517,517,517,517,517,,,,,517',
'517,517,517,517,517,517,,,517,,,,,,,517,,,517,517,517,517,517,517,517',
'517,517,517,,517,517,,517,517,517,,,,,,,,,,,,,,,,,,,,517,,,517,,,517',
',,,,,,,,517,,,,,,,,517,,,,,517,517,517,517,517,517,,,,517,517,,,,,,',
'517,517,514,514,514,,514,517,517,,514,514,,,,514,,514,514,514,514,514',
'514,514,,,,,514,514,514,514,514,514,514,,,514,,,,,,,514,,,514,514,514',
'514,514,514,514,514,514,514,,514,514,,514,514,514,,,,,,,,,,,,,,,,,,',
',514,,,514,,,514,,,,,514,,,,514,,,,,,,,514,,,,,514,514,514,514,514,514',
',,,514,514,,,,,,,514,514,509,509,509,,509,514,514,,509,509,,,,509,,509',
'509,509,509,509,509,509,,,,,509,509,509,509,509,509,509,,,509,,,,,,',
'509,,,509,509,509,509,509,509,509,509,509,509,,509,509,,509,509,509',
',,,,,,,,,,,,,,,,,,,509,,,509,,,509,,,,,,,,,509,,,,,,,,509,,,,,509,509',
'509,509,509,509,,,,509,509,,,505,505,505,,505,509,,,505,505,,509,509',
'505,,505,505,505,505,505,505,505,,,,,505,505,505,505,505,505,505,,,505',
',,,,,,505,,,505,505,505,505,505,505,505,505,505,505,,505,505,,505,505',
'505,,,,,,,,,,,,,,,,,,,,505,,,505,,,505,,,,,,,,,505,,,,,,,,505,,,,,505',
'505,505,505,505,505,,,,505,505,,,504,504,504,,504,505,,,504,504,,505',
'505,504,,504,504,504,504,504,504,504,,,,,504,504,504,504,504,504,504',
',,504,,,,,,,504,,,504,504,504,504,504,504,504,504,504,504,,504,504,',
'504,504,504,,,,,,,,,,,,,,,,,,,,504,,,504,,,504,,,,,,,,,504,,,,,,,,504',
',,,,504,504,504,504,504,504,,,,504,504,,,503,503,503,,503,504,,,503',
'503,,504,504,503,,503,503,503,503,503,503,503,,,,,503,503,503,503,503',
'503,503,,,503,,,,,,,503,,,503,503,503,503,503,503,503,503,503,503,,503',
'503,,503,503,503,,,,,,,,,,,,,,,,,,,,503,,,503,,,503,,,,,,,,,503,,,,',
',,,503,,,,,503,503,503,503,503,503,,,,503,503,,,494,494,494,,494,503',
',,494,494,,503,503,494,,494,494,494,494,494,494,494,,,,,494,494,494',
'494,494,494,494,,,494,,,,,,,494,,,494,494,494,494,494,494,494,494,494',
'494,,494,494,,494,494,494,,,,,,,,,,,,,,,,,,,,494,,,494,,,494,,,,,494',
',,,494,,,,,,,,494,,,,,494,494,494,494,494,494,,,,494,494,,,,,,,494,494',
'492,492,492,,492,494,494,,492,492,,,,492,,492,492,492,492,492,492,492',
',,,,492,492,492,492,492,492,492,,,492,,,,,,,492,,,492,492,492,492,492',
'492,492,492,492,492,,492,492,,,,492,,,,,,,,,,,,,,,,,,,,492,,,492,,,492',
',,,,,,,,,,,,,,,,,,,,,492,492,492,492,492,492,,,,492,492,,,482,482,482',
',482,492,,,482,482,,492,492,482,,482,482,482,482,482,482,482,,,,,482',
'482,482,482,482,482,482,,,482,,,,,,,482,,,482,482,482,482,482,482,482',
'482,482,482,,482,482,,482,482,482,,,,,,,,,,,,,,,,,,,,482,,,482,,482',
'482,,,,,,,482,,482,,,,,,,,482,,,,,482,482,482,482,482,482,,,,482,482',
',,592,592,592,,592,482,,,592,592,,482,482,592,,592,592,592,592,592,592',
'592,,,,,592,592,592,592,592,592,592,,,592,,,,,,,592,,,592,592,592,592',
'592,592,592,592,592,592,,592,592,,592,592,592,,,,,,,,,,,,,,,,,,,,592',
',,592,,,592,,,,,592,,,,592,,,,,,,,592,,,,,592,592,592,592,592,592,,469',
',592,592,,,,469,469,469,,592,469,469,469,,469,592,592,,,,,,,,469,,,',
',,,,,469,469,,469,469,469,469,469,,,,,,,,,,,,472,,,,,,,472,472,472,',
',472,472,472,,472,,,,,469,,,,,472,,469,,,,,469,469,472,472,,472,472',
'472,472,472,,,,,,,,,,,,,469,,,,,,,,,,,,,469,,469,,,469,,472,,,,,,,472',
',,,,472,472,,,,,,,,,,,,,,,,,,,,,472,,,,,,,,,,,,,472,,472,,,472,7,7,7',
'7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,,,7,7,7,7,7,7,7,7,7,7,7,7',
'7,7,7,7,7,7,7,7,7,7,7,,,7,,,,,,,,7,7,,7,7,7,7,7,7,7,,,7,,,,,7,7,7,7',
',,,,,,,,,,,,7,7,,7,7,7,7,7,7,7,7,7,7,7,,,7,7,,,,,,,,,,7,393,393,393',
'393,393,393,393,393,393,393,393,393,393,393,393,393,393,393,393,393',
'393,393,393,393,,,393,393,393,393,393,393,393,393,393,393,393,393,393',
'393,393,393,393,393,393,393,393,393,393,,,393,,,,,,,,393,393,,393,393',
'393,393,393,393,393,,,393,,,,,393,393,393,393,,,,,,,,,,,,,393,393,,393',
'393,393,393,393,393,393,393,393,393,393,,,393,393,,,,,,,,,,393,389,389',
'389,389,389,389,389,389,389,389,389,389,389,389,389,389,389,389,389',
'389,389,389,389,389,,,389,389,389,389,389,389,389,389,389,389,389,389',
'389,389,389,389,389,389,389,389,389,389,389,,,389,,,,,,,,389,389,,389',
'389,389,389,389,389,389,,,389,,,,,389,389,389,389,,,,,,,,,,,,,389,389',
',389,389,389,389,389,389,389,389,389,389,389,,,389,389,,,,,,,,,,389',
'6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,,,6,6,6,6,6,6,6,6,6',
'6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,,6,,,,,,,,6,6,,6,6,6,6,6,6,6,,,6,,,,,6',
'6,6,6,,,,,,,,,,,,,6,6,,6,6,6,6,6,6,6,6,6,6,6,,,6,6,,,,,,,,,,6,713,713',
'713,713,713,713,713,713,713,713,713,713,713,713,713,713,713,713,713',
'713,713,713,713,713,,,713,713,713,713,713,713,713,713,713,713,713,713',
'713,713,713,713,713,713,713,713,713,713,713,,,713,,,,,,,,713,713,,713',
'713,713,713,713,713,713,,,713,,,,,713,713,713,713,,,,,,,,,,,,,713,713',
',713,713,713,713,713,713,713,713,713,713,713,,,713,65,65,65,65,65,65',
'65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,,,65,65,65,65',
'65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65',
',,,,,,65,65,,65,65,65,65,65,65,65,,,65,,,,,65,65,65,65,,,,,,65,,,,,',
',65,65,,65,65,65,65,65,65,65,65,65,65,65,,,65,79,79,79,79,79,79,79,79',
'79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,,,79,79,79,79,79,79',
'79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,,,,,',
',79,79,,79,79,79,79,79,79,79,,,79,,,,,79,79,79,79,,,,,,,,,,,,,79,79',
',79,79,79,79,79,79,79,79,79,79,79,,,79,189,189,189,189,189,189,189,189',
'189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,,,189',
'189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189',
'189,189,189,189,189,189,189,189,189,,,,,,,189,189,,189,189,189,189,189',
'189,189,,,189,,,,,189,189,189,189,,,,,,,,,,,,,189,189,,189,189,189,189',
'189,189,189,189,189,189,189,495,495,189,,495,,,,,,,,495,495,,495,495',
'495,495,495,495,495,,,495,,,,,495,495,495,495,,,,,,495,,,,,,,495,495',
',495,495,495,495,495,495,495,495,495,495,495,885,885,495,,885,,,,,,',
',885,885,,885,885,885,885,885,885,885,,,885,,,,,885,885,885,885,,,,',
',885,,,,,,,885,885,,885,885,885,885,885,885,885,885,885,885,885,886',
'886,885,,886,,,,,,,,886,886,,886,886,886,886,886,886,886,,,886,,,,,886',
'886,886,886,,,,,,,,,,,,,886,886,,886,886,886,886,886,886,886,886,886',
'886,886,198,198,886,,198,,,,,,,,198,198,,198,198,198,198,198,198,198',
',,198,,,,,198,198,198,198,,,,,,198,,,,,,,198,198,,198,198,198,198,198',
'198,198,198,198,198,198,507,507,198,,507,,,,,,,,507,507,,507,507,507',
'507,507,507,507,,,507,,,,,507,507,507,507,,,,,,,,,,,,,507,507,,507,507',
'507,507,507,507,507,507,507,507,507,631,631,507,,631,,,,,,,,631,631',
',631,631,631,631,631,631,631,,,631,,,,,631,631,631,631,,,,,,,,,,,,,631',
'631,,631,631,631,631,631,631,631,631,631,631,631,506,506,631,,506,,',
',,,,,506,506,,506,506,506,506,506,506,506,,,506,,,,,506,506,506,506',
',,,,,506,,,,,,,506,506,,506,506,506,506,506,506,506,506,506,506,506',
'769,769,506,,769,,,,,,,,769,769,,769,769,769,769,769,769,769,,,769,',
',,,769,769,769,769,,,,,,,,,,,,,769,769,,769,769,769,769,769,769,769',
'769,769,769,769,632,632,769,,632,,,,,,,,632,632,,632,632,632,632,632',
'632,632,,,632,,,,,632,632,632,632,,,,,,,,,,,,,632,632,,632,632,632,632',
'632,632,632,632,632,632,632,424,424,632,,424,,,,,,,,424,424,,424,424',
'424,424,424,424,424,,,424,,,,,424,424,424,424,,,,,,424,,,,,,,424,424',
',424,424,424,424,424,424,424,424,424,424,424,425,425,424,,425,,,,,,',
',425,425,,425,425,425,425,425,425,425,,,425,,,,,425,425,425,425,,,,',
',,,,,,,,425,425,,425,425,425,425,425,425,425,425,425,425,425,261,261',
'425,,261,,,,,,,,261,261,,261,261,261,261,261,261,261,,,261,,,,,261,261',
'261,261,,,,,,,,,,,,,261,261,,261,261,261,261,261,261,261,261,261,261',
'261,260,260,261,,260,,,,,,,,260,260,,260,260,260,260,260,260,260,,,260',
',,,,260,260,260,260,,,,,,,,,,,,,260,260,,260,260,260,260,260,260,260',
'260,260,260,260,695,695,260,,695,,,,,,,,695,695,,695,695,695,695,695',
'695,695,,,695,,,,,695,695,695,695,,,,,,,,,,,,,695,695,,695,695,695,695',
'695,695,695,695,695,695,695,697,697,695,,697,,,,,,,,697,697,,697,697',
'697,697,697,697,697,,,697,,,,,697,697,697,697,,,,,,697,,,,,,,697,697',
',697,697,697,697,697,697,697,697,697,697,697,199,199,697,,199,,,,,,',
',199,199,,199,199,199,199,199,199,199,,,199,,,,,199,199,199,199,,,,',
',,,,,,,,199,199,,199,199,199,199,199,199,199,199,199,199,199,496,496',
'199,,496,,,,,,,,496,496,,496,496,496,496,496,496,496,,,496,,,,,496,496',
'496,496,,,,,,,,,,,,,496,496,,496,496,496,496,496,496,496,496,496,496',
'496,,,496' ]
        racc_action_check = arr = ::Array.new(22204, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_action_pointer = [
    -2,  1150,   nil,   191,   nil,   949, 20643, 20283,   990,   979,
   948,   936,   982,   337,   -62,   109,   nil,  1687,  1809,  2431,
   997,   nil,  2175,  2303,  2431,   502,   198,  2773,  2901,   nil,
  3027,  3149,  3271,   nil,   849,   528,   909,   418,  3893,  4015,
  4137,   807,   254,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
  4499,   nil,  4632,  4754,  4882,     8,  6365,  5254,  5376,   nil,
   nil,  5498,  5620,   768,   nil, 20872,   nil,   nil,   nil,   nil,
   nil,   -48,   nil,   nil,   nil,   nil,   nil,   669,   664, 20981,
   nil,   nil,   nil,  6474,   nil,   nil,  6602,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   789,   nil,  6852,   nil,
   nil,   nil,  6974,  7096,  7218,  7340,  7462,   nil,   543,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil, 21090,
   652,   nil,  7950,  8072,  8194,  8316,  8438,  8560, 21326, 22034,
  8932,  9054,  9176,   nil,   255,    15,   547,   -44,   407,   447,
 10036, 10158,   nil,   nil, 10280,   201, 10524, 10646, 10768, 10890,
 11012, 11134, 11256, 11378, 11500, 11622, 11744, 11866, 11988, 12110,
 12232, 12354, 12476, 12598, 12720, 12842, 12964, 13086, 13208, 13330,
 13452, 13574,   nil,   nil,   nil,  1687,   nil,    63,   -25,   nil,
 14068,     5, 14318,   nil,   nil,   nil,   nil, 14440,   nil,   nil,
 21857, 21798,   103, 14928, 15056,   nil,   nil,   nil,   nil,   nil,
   nil,   nil, 15184,   178, 15440,   393,   531,   539, 15928, 16056,
   433,   257,   621,   332,   621,   637,    -1,   nil,   691,   559,
   nil, 17283,   nil,   183,   743,   762,   340,   nil,   802,   nil,
 18015,   nil, 18137,   -25,   nil,   283,   296,   814,   268,   797,
   nil,    40,   nil,   nil,   390,  5633,   nil,   nil,   nil,   836,
   841,   nil,   916,   942,   nil,   nil,   nil,   nil,   nil,   nil,
  2342,   nil,   nil,   nil,   898,   nil,   nil,   896,   470,    70,
    63, 17649, 17527,   327,   186,   654,   759,  7706,   nil,  6352,
   432,   534,   335,   434,   435,    -4,   467,   468,   nil,   458,
   nil,   nil,   120,   nil,   -51,   nil,   265,   nil,    41,  1034,
   227,   nil,   978,   -43,   nil,   224,   nil,   nil,   nil,   nil,
   nil,   nil,  1071,   nil,   nil,   nil,   nil,   nil,   nil, 20523,
   nil,   nil,   nil, 20403,   950,   948,   nil,   nil,   821,   nil,
   242,   917,   nil,   902,   nil,   nil,  2303,   893,   519,   530,
   360,   nil,   nil,   nil,   488,   816,   566,   nil,  1193,  3399,
   nil,  2053,   nil,   nil, 21680, 21739,  4381,   107,  5864,  8810,
 13818,    58,   nil,  4015,  4259,   692,   612,   522,   480,   477,
   330,  4450,  3145,  2677,  4754,  3893,  3267,  2724,  2854,  3399,
  3649,  3771,  4632,  3527,   557,  1134,  4137,  4381,  2175,   261,
   nil, 13940,   nil,   nil, 14190,   nil, 17039,   nil,   nil, 20103,
   nil,   nil, 20157,   -47,   nil,   943,   918,   147,  1030,  1122,
   nil,   nil, 19863,   182,   275,  1058,   nil,  1008,   970,   nil,
   nil,   954, 19741,   957, 19613, 21149, 22093,   417,   898,   nil,
   nil,   850,   nil, 19491, 19369, 19247, 21503, 21385,  3027, 19125,
   936,   931,   842,   nil, 18997,   nil,   nil, 18869,   nil, 18747,
   nil,   nil,   nil,   nil, 18625, 18503,   812,   nil,   451,   nil,
   nil, 18381,  3162,   nil,   588,   nil,   nil,   811,   nil,  2214,
   nil,   753,   808,   nil,   nil, 18259,   855,   nil,   nil, 17893,
   -19,   103,   830,   821, 17771,   nil,   nil,    -2,   755,   nil,
   338,   nil,    33, 17405,   nil,  2835,   nil,   nil,   nil,     3,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   193,   nil,   nil,   nil,   660,   nil,   nil,   nil,   nil,   nil,
 17161,   659, 19985,   386, 16917, 16795,   620,   nil,   nil,   nil,
 16673,   606,   nil, 16551,   167,   194, 16424, 16296,   581,   699,
   nil, 16178,   nil,   629,   nil, 15806,   520,   nil,   544, 15684,
   nil,   496,   nil,   nil,   nil,   nil,   nil, 15562,   nil,   390,
   246, 21444, 21621, 15312,  1193,    99,   nil,   nil,   127, 14806,
 14684,   nil,     3, 14562,   912,   nil,   -36,   192,   189,    69,
   195,   277,   124, 13696,  1565,   183,   194,   315,   254, 10402,
   nil,   nil,   213,   nil,   240,   370,   nil,   nil,   249,   nil,
   267,   227,   353,   313,   327,   nil,   nil,   370,  2470,   nil,
    23,   nil,   479,   nil,   nil,   nil,   nil,   nil,   513,   nil,
   516,  9914,  9792,   -13,   nil, 21916,  9664, 21975,   nil,   nil,
  9542,   243,   185,  9420,  9298,  3201,   116,   552,   554,   565,
   nil,   560,   nil, 20763,   618,   857,  8688,   nil,   nil,   nil,
  2559,   649,  7828,  7584,   nil,  1071,   nil,  1321,   nil,   nil,
  1443,   nil,  1809,  6730,  6230,  6108,    96,  1931,   nil,   704,
   807,   nil,   nil,   708,   nil,   nil,   731,   734,   368,   802,
  5986,   nil,   724,   828,   720,   241,   nil,   nil,   839,   nil,
  5742,   731,   779,   nil,   nil,   nil,   nil,   nil,   nil, 21562,
   nil,   440,   nil,   nil,   nil,   nil,   686,   872,   nil,   nil,
   887,  5132,  5010,   nil,   nil,    83,    39,   322,   nil,   827,
   826,  4259,   115,   nil,   nil,   922,   929,   817,   nil,  4562,
   nil,   600,   nil,   nil,   590,  3771,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   839,   833,   nil,   949,  3649,   nil,   nil,
   nil,   875,   840,   nil,   nil,   nil,  3527,   nil,   nil,    71,
  2681,   nil,   889,  1031,   nil,   nil,  2559,   nil,   997,  1000,
  2053,  1931,   nil,   nil,  1019,   nil,  1565,   nil,   nil,   945,
   909,   911,   nil,  -113,   907,   nil,   nil,  3284,   nil,   nil,
   nil,  1443,   nil,  1321,   341,   364,  1005,   369,   nil,   nil,
    77,   nil,   nil,    63,  1071,   nil,  1062,   nil,   529,   nil,
   nil,   nil,   949,  1076,   821, 21208, 21267,   398,   699,   nil,
   nil,   nil,  1097,   nil,   982,  1119,   nil,  1040,    -7,    62,
    90,   404,   614,   nil,   nil,   nil,   437,   nil ]

racc_action_default = [
  -518,  -520,    -1,  -507,    -4,    -5,  -520,  -520,  -520,  -520,
  -520,  -520,  -520,  -520,  -261,   -31,   -32,  -520,  -520,   -37,
   -39,   -40,  -272,  -311,  -312,   -44,  -239,  -239,  -239,   -56,
  -518,   -60,   -67,   -69,  -520,  -438,  -520,  -520,  -520,  -520,
  -520,  -509,  -220,  -254,  -255,  -256,  -257,  -258,  -259,  -260,
  -497,  -263,  -520,  -518,  -518,  -280,  -518,  -520,  -520,  -285,
  -288,  -507,  -520,  -297,  -303,  -520,  -313,  -314,  -383,  -384,
  -385,  -386,  -387,  -518,  -390,  -518,  -518,  -518,  -518,  -518,
  -417,  -423,  -424,  -427,  -428,  -429,  -430,  -431,  -432,  -433,
  -434,  -435,  -436,  -437,  -440,  -441,  -520,    -3,  -508,  -514,
  -515,  -516,  -520,  -520,  -520,  -520,  -520,    -7,  -520,   -95,
   -96,   -97,   -98,   -99,  -100,  -101,  -104,  -105,  -106,  -107,
  -108,  -109,  -110,  -111,  -112,  -113,  -114,  -115,  -116,  -117,
  -118,  -119,  -120,  -121,  -122,  -123,  -124,  -125,  -126,  -127,
  -128,  -129,  -130,  -131,  -132,  -133,  -134,  -135,  -136,  -137,
  -138,  -139,  -140,  -141,  -142,  -143,  -144,  -145,  -146,  -147,
  -148,  -149,  -150,  -151,  -152,  -153,  -154,  -155,  -156,  -157,
  -158,  -159,  -160,  -161,  -162,  -163,  -164,  -165,  -166,  -167,
  -168,  -169,  -170,  -171,  -172,  -173,  -174,  -175,  -176,  -520,
   -12,  -102,  -518,  -518,  -520,  -520,  -520,  -518,  -520,  -520,
  -520,  -520,  -520,   -35,  -520,  -438,  -520,  -261,  -520,  -520,
  -518,  -520,   -36,  -212,  -520,  -520,  -520,  -520,  -520,  -520,
  -520,  -520,  -520,  -520,  -520,  -520,  -520,  -520,  -520,  -520,
  -520,  -520,  -520,  -520,  -520,  -520,  -520,  -520,  -520,  -520,
  -520,  -520,  -354,  -356,   -41,  -221,  -232,  -519,  -519,  -236,
  -520,  -247,  -520,  -272,  -311,  -312,  -491,  -520,   -42,   -43,
  -520,  -520,   -48,  -518,  -520,  -279,  -359,  -366,  -368,   -54,
  -364,   -55,  -520,   -56,  -518,  -520,  -520,   -61,   -64,  -518,
   -75,  -520,  -520,   -82,  -275,  -509,  -520,  -315,  -365,  -520,
   -66,  -520,   -71,  -268,  -425,  -426,  -520,  -197,  -198,  -213,
  -520,  -510,  -518,  -509,  -222,  -511,  -511,  -520,  -511,  -520,
  -488,  -511,  -281,  -282,  -520,  -520,  -326,  -327,  -335,  -518,
  -460,  -342,  -518,  -518,  -353,  -456,  -457,  -458,  -459,  -461,
  -520,  -472,  -477,  -478,  -480,  -481,  -482,  -520,   -38,  -520,
  -520,  -520,  -520,  -507,  -520,  -508,  -520,  -520,  -300,  -520,
   -95,   -96,  -132,  -133,  -149,  -154,  -161,  -164,  -306,  -520,
  -438,  -486,  -520,  -388,  -520,  -403,  -520,  -405,  -520,  -520,
  -520,  -395,  -520,  -520,  -401,  -520,  -416,  -418,  -419,  -420,
  -421,   908,    -6,  -517,   -13,   -14,   -15,   -16,   -17,  -520,
    -9,   -10,   -11,  -520,  -520,  -520,   -20,   -28,  -177,  -247,
  -520,  -520,   -21,   -29,   -30,   -22,  -179,  -520,  -498,  -499,
  -239,  -361,  -500,  -501,  -498,  -239,  -499,  -363,  -503,  -504,
   -27,  -186,   -33,   -34,  -520,  -520,  -518,  -268,  -520,  -520,
  -520,  -520,  -278,  -187,  -188,  -189,  -190,  -191,  -192,  -193,
  -194,  -199,  -200,  -201,  -202,  -203,  -204,  -205,  -206,  -207,
  -208,  -209,  -210,  -211,  -214,  -215,  -216,  -217,  -520,  -518,
  -233,  -520,  -246,  -234,  -520,  -244,  -520,  -248,  -494,  -239,
  -498,  -499,  -239,  -518,   -49,  -520,  -509,  -509,  -519,  -232,
  -240,  -241,  -520,  -518,  -518,  -520,  -274,  -520,   -57,  -266,
   -72,   -62,  -520,  -520,  -518,  -520,  -520,   -81,  -520,  -425,
  -426,   -68,   -73,  -520,  -520,  -520,  -520,  -520,  -218,  -520,
  -375,  -520,  -520,  -223,  -513,  -512,  -225,  -513,  -270,  -513,
  -490,  -271,  -489,  -323,  -518,  -518,  -520,  -325,  -520,  -344,
  -351,  -520,  -348,  -349,  -520,  -352,  -460,  -520,  -463,  -520,
  -465,  -467,  -471,  -479,  -483,  -518,  -316,  -317,  -318,  -518,
  -520,  -520,  -520,  -520,  -518,  -370,  -294,   -91,  -520,   -93,
  -520,  -261,  -520,  -520,  -304,  -455,  -308,  -505,  -506,  -509,
  -389,  -404,  -407,  -408,  -410,  -391,  -406,  -392,  -393,  -394,
  -520,  -397,  -399,  -400,  -520,  -422,    -8,  -103,   -18,   -19,
  -520,  -253,  -520,  -269,  -520,  -520,   -50,  -230,  -231,  -360,
  -520,   -52,  -362,  -520,  -498,  -499,  -498,  -499,  -520,  -177,
  -277,  -520,  -338,  -520,  -340,  -518,  -519,  -245,  -249,  -520,
  -492,  -520,  -493,   -45,  -357,   -46,  -358,  -518,  -226,  -520,
  -520,  -520,  -520,  -520,   -37,  -520,  -238,  -242,  -520,  -518,
  -518,  -273,   -57,  -520,   -65,   -70,  -520,  -498,  -499,  -518,
  -502,   -80,  -520,  -520,  -185,  -195,  -196,  -520,  -518,  -518,
  -264,  -265,  -511,  -249,  -520,  -520,  -324,  -336,  -520,  -343,
  -518,  -337,  -520,  -518,  -518,  -473,  -462,  -520,  -520,  -470,
  -518,  -319,  -518,  -286,  -320,  -321,  -322,  -289,  -520,  -292,
  -520,  -520,  -520,   -91,   -92,  -520,  -518,  -520,  -298,  -442,
  -520,  -520,  -520,  -518,  -518,  -455,  -520,  -485,  -485,  -485,
  -454,  -460,  -475,  -520,  -520,  -520,  -518,  -396,  -398,  -402,
  -178,  -251,  -520,  -520,   -24,  -181,   -25,  -182,   -51,   -26,
  -183,   -53,  -184,  -520,  -520,  -520,  -269,  -219,  -339,  -520,
  -520,  -235,  -250,  -520,  -227,  -228,  -518,  -518,  -509,  -520,
  -520,  -243,  -520,  -520,   -63,   -76,   -74,  -276,  -518,  -333,
  -518,  -376,  -518,  -377,  -378,  -224,  -328,  -329,  -350,  -520,
  -268,  -520,  -346,  -347,  -464,  -466,  -469,  -520,  -330,  -331,
  -520,  -518,  -518,  -291,  -293,  -520,  -520,   -91,   -94,  -502,
  -520,  -518,  -520,  -444,  -301,  -520,  -520,  -509,  -446,  -520,
  -450,  -520,  -452,  -453,  -520,  -520,  -309,  -487,  -409,  -412,
  -413,  -414,  -415,  -520,  -252,   -23,  -180,  -520,  -341,  -355,
   -47,  -520,  -519,  -367,  -369,    -2,  -518,  -382,  -334,  -520,
  -520,  -380,  -267,  -518,  -468,  -283,  -520,  -284,  -520,  -520,
  -520,  -518,  -295,  -269,  -520,  -443,  -518,  -305,  -307,  -520,
  -485,  -485,  -484,  -485,  -520,  -476,  -474,  -455,  -411,  -229,
  -237,  -520,  -381,  -518,   -83,  -520,  -520,   -90,  -379,  -345,
  -520,  -287,  -290,  -518,  -518,  -299,  -520,  -445,  -520,  -448,
  -449,  -451,  -518,  -375,  -518,  -520,  -520,   -89,  -518,  -371,
  -372,  -373,  -520,  -302,  -485,  -520,  -374,  -520,  -498,  -499,
  -502,   -88,  -518,  -296,  -447,  -310,   -84,  -332 ]

clist = [
'10,463,2,553,277,112,112,358,307,306,311,397,404,246,246,246,300,304',
'310,474,317,377,658,324,511,316,477,247,247,247,10,203,276,704,501,538',
'710,365,14,367,367,371,374,367,97,545,549,707,675,275,273,513,516,101',
'520,290,537,522,777,308,617,667,855,617,112,638,303,694,14,283,283,338',
'338,287,287,338,107,191,112,571,212,636,339,340,530,581,343,533,535',
'620,262,269,271,341,624,115,115,626,10,758,283,615,344,562,287,564,10',
'781,410,415,342,101,683,687,382,627,338,338,338,338,366,368,388,780',
'375,639,640,384,385,386,387,377,782,692,874,347,14,791,563,855,846,349',
'620,703,14,565,713,857,314,523,312,836,407,306,673,309,361,480,302,698',
'566,304,459,800,802,803,483,484,889,691,469,472,762,829,363,364,710',
'244,258,259,359,370,266,270,580,389,373,707,112,808,715,716,10,10,394',
'395,797,850,419,401,401,346,670,190,788,98,674,313,775,825,10,688,276',
'1,,422,423,,,,12,,,,,431,,475,,,14,14,617,,,644,,,,709,,,,,538,,,679',
'14,,12,,,,479,246,396,402,405,,498,,420,246,502,677,,,478,247,852,,852',
',10,852,276,247,512,10,907,276,324,529,526,,529,529,,,,,,487,273,718',
',,493,273,35,491,10,,667,,879,880,,881,,,14,,890,675,283,14,12,,287',
',,,,882,12,,710,283,35,280,280,287,410,415,,,,707,14,,,,,,,,842,852',
'904,,,728,,338,338,,731,,,,280,,,360,550,551,,741,,624,626,,597,,569',
',,709,,608,306,538,552,561,754,561,112,287,304,287,112,101,,896,748',
',35,,,,,,,649,35,,765,,,,12,12,,,649,616,476,481,,,,612,419,795,796',
'485,,,12,,,597,,768,597,612,772,773,,,266,,270,833,,612,612,646,306',
'629,630,,,,,,304,586,617,,,587,,502,,,,,662,,,851,596,853,763,,115,601',
',834,115,,,,,,,,,841,35,35,12,419,303,,,12,,,,,,,419,,,,35,,,844,,,',
',,,,,12,657,10,10,664,665,,,283,709,891,623,287,863,625,,,,,746,747',
',714,10,,680,,10,,682,894,,10,,690,,,,,,14,14,,,598,,876,561,,602,,287',
'35,860,888,702,280,35,324,,739,14,,,,14,,616,,280,14,,,,,,869,,684,684',
'35,,895,,,649,,,,,699,597,,10,502,740,,,,,759,764,749,598,756,10,598',
'743,,,,,529,,,529,529,10,10,752,753,,759,,759,360,,360,,790,306,14,',
'806,724,726,,,304,,729,,401,14,,,,,,,,,,,,14,14,,,283,,,,287,,,,,,283',
',,419,287,785,,,,,,,10,10,,338,,,,597,597,112,,338,,10,786,813,,,,827',
'821,,792,831,,,,,,,,,,,,,,,14,14,,12,12,,,,,,793,794,812,14,822,798',
',,,10,,828,,,12,,,419,12,,,849,,12,,,,,,,10,10,838,839,815,,,,,,10,280',
',,649,,529,14,,,,,,,598,,,602,,,,,,,,,,,14,14,,,,35,35,10,,862,14,868',
'360,,,,12,684,759,,897,306,10,845,873,,35,10,12,304,35,338,,,,35,,,',
',12,12,870,,10,14,883,759,,867,,,,287,,10,,892,,,14,,,10,,14,419,,,10',
',902,,,,,,,,,,,14,598,598,,,,,,,,,14,,,35,,,,,14,,,12,12,,14,35,,,,',
',,,,12,,,35,35,,,280,,,,,,,,,,280,,,,,,,,,,,,13,,,,,,,,,,,,,,,12,,204',
'204,,,,204,204,204,,,,,,13,281,281,,,,12,12,35,35,,,,,,,12,,,,,35,204',
',,,,204,204,,,204,281,,,,,,,,,,,,,,,,399,403,,12,,,,,,,,,,,,,,35,12',
',13,,,12,204,204,204,204,13,,,,,,,,,,35,35,12,,,,,,,,35,,,12,,,,,465',
',467,12,,,,468,,12,,,,,,,,,,,,,,,,,,35,,,,864,,,,,,,,,,,35,,,,,35,,',
',,,,,,,,13,13,204,204,204,,35,,204,204,204,,,,,,,35,13,204,,,,,,35,',
',,,,35,,26,,,,,,,,,,,,,,,,,26,26,,,,26,26,26,,,,,,26,,,,,,,,204,204',
',,,,,,,204,,13,,,26,281,13,,,26,26,591,,26,,,,,281,,,,,,,,,,,13,,,,',
',,,,,,,,,,,,,,,,26,,,,26,26,26,26,26,,,,,,,,,,204,204,,,618,,560,621',
'560,622,,,,,,,,,,,,204,,,,635,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,618,,,621',
',663,,,,,,,,,,,,,,26,26,26,26,26,,,,26,26,26,,,,,,,,26,26,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,721,,,,,,204,,,,,,26,26,,,281,,,,,26,,26',
',,,742,26,,,,,204,,,,,,,,618,,,,,,,13,13,,26,,,,671,,,,,,,,,,,,761,',
'13,,,,13,,,,,13,,,,,,,,,204,,,26,26,,,,,,,,399,,,,,,,,,,,,26,,,,,,,204',
'204,,,,,204,,,,,,814,,,,,,,,,13,,,,,,,,,,,,13,,,,,,204,399,,,,,13,13',
',,281,,,,,,,,,,281,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,856,,,204,,,,',
',,,204,,,13,13,,,26,,,,,,,,,13,,,,,,,204,663,,,,,,,,,,26,,,,,,,,,,,663',
',,,26,26,,,,,,,,,,13,,,,,,,,,,26,,,,26,,,,,26,,13,13,,,,,,26,,,13,,',
',,,,,,,,,,,,,,,,,,,,,,,,,26,26,,,,,26,13,,,,865,,,,,,204,,,,26,13,,',
',,13,,,,,,26,,,,,,26,,,,,13,26,26,,,,,,,,,13,,,,,,,,13,,,,,,13,,,,,',
',,,,,,,,,,,,,,,,,,,,,,213,26,,,245,245,245,,,26,,,26,26,,,,,,,297,298',
'299,,,26,,,,,,,26,,,245,245,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,26,,,,,',
',,,,,,,,,,,,,,,26,26,,,,,,,,,26,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,26',
',,,,,,,,,26,,,,,26,,,,,26,,,,,,,,,,,,,,,,,26,,,,398,245,406,245,,,421',
'26,,,,,,,,26,,,,,213,26,433,434,435,436,437,438,439,440,441,442,443',
'444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,,,,,,,,',
'245,,245,,,,,245,,,,,,245,245,,,,,,,,245,,,,,,,,,,,,,,,,,,,,,,,,,,,',
'508,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,245,,,,,,,,,,,,,,,,,,,,,,,,,,245',
',421,609,406,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,245,,,245,,245,,,,,,,,,,',
',,,,,634,,,,,,,,,,,,245,,,,,,,,,654,655,656,,,,,,,,,245,,,245,,245,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',720,,245,,725,727,,,,,730,,,732,,,,,,,,737,,,,,,,,245,,,,,,,,,,,,,',
'245,,,,,,,,,,,,,,,,,,,,,,,,,,245,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,245',
',,,,245,,,,,,,,,,,,,,,,,,,,,,,,,,245,816,,,,,,,,,,725,727,730,,,,,,',
',,,,,,,,245,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,245',
',,,,,,,,,,,816,,,,,,,,,,,,,,,,,,,,,,,245,,,,,,,,,,,,,,,,,,,,,245,,,',
',,,,,,,,,,,,,,,,,,,245' ]
        racc_goto_table = arr = ::Array.new(2748, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'15,56,2,76,39,46,46,45,20,53,53,22,22,27,27,27,49,9,9,33,9,45,4,104',
'3,100,30,51,51,51,15,24,2,79,41,135,105,9,21,9,9,9,9,9,8,73,73,107,136',
'37,36,52,52,78,52,40,137,52,74,51,57,103,140,57,46,58,24,43,21,21,21',
'24,24,50,50,24,12,12,46,126,16,57,14,14,106,126,14,106,106,143,32,32',
'32,83,55,48,48,55,15,5,21,34,8,44,50,44,15,84,31,31,85,78,75,75,10,34',
'24,24,24,24,123,123,10,5,123,34,34,14,14,14,14,45,86,87,88,89,21,90',
'91,140,92,93,143,94,21,95,96,97,98,99,70,101,20,53,102,69,68,59,82,77',
'81,9,110,134,134,134,112,113,114,115,31,31,116,117,121,122,105,29,29',
'29,80,124,54,54,125,25,127,107,46,128,129,130,15,15,2,2,132,133,46,51',
'51,17,108,13,43,11,108,72,138,6,15,76,2,1,,24,24,,,,18,,,,,24,,9,,,21',
'21,57,,,41,,,,108,,,,,135,,,135,21,,18,,,,27,27,16,16,16,,49,,16,27',
'39,137,,,51,51,105,,105,,15,105,2,51,49,15,74,2,104,9,100,,9,9,,,,,',
'37,36,126,,,37,36,42,40,15,,103,,134,134,,134,,,21,,5,136,21,21,18,',
'50,,,,,79,18,,105,21,42,42,42,50,31,31,,,,107,21,,,,,,,,75,105,134,',
',33,,24,24,,33,,,,42,,,42,14,14,,56,,55,55,,9,,24,,,108,,20,53,135,8',
'21,41,21,46,50,9,50,46,78,,4,30,,42,,,,,,,31,42,,52,,,,18,18,,,31,53',
'29,29,,,,9,46,3,3,29,,,18,,,9,,106,9,9,106,106,,,54,,54,108,,9,9,20',
'53,49,49,,,,,,9,12,57,,,12,,39,,,,,53,,,108,32,108,22,,48,32,,135,48',
',,,,,,,,73,42,42,18,46,24,,,18,,,,,,,46,,,,42,,,3,,,,,,,,,18,24,15,15',
'2,2,,,21,108,76,32,50,73,32,,,,,31,31,,49,15,,2,,15,,2,108,,15,,2,,',
',,,21,21,,,54,,3,21,,54,,50,42,56,73,24,42,42,104,,100,21,,,,21,,53',
',42,21,,,,,,106,,78,78,42,,3,,,31,,,,,78,9,,15,39,2,,,,,9,9,27,54,39',
'15,54,2,,,,,9,,,9,9,15,15,2,2,,9,,9,42,,42,,20,53,21,,45,16,16,,,9,',
'16,,51,21,,,,,,,,,,,,21,21,,,21,,,,50,,,,,,21,,,46,50,51,,,,,,,15,15',
',24,,,,9,9,46,,24,,15,14,2,,,,9,49,,14,9,,,,,,,,,,,,,,,21,21,,18,18',
',,,,,78,78,21,21,51,78,,,,15,,2,,,18,,,46,18,,,49,,18,,,,,,,15,15,2',
'2,16,,,,,,15,42,,,31,,9,21,,,,,,,54,,,54,,,,,,,,,,,21,21,,,,42,42,15',
',2,21,15,42,,,,18,78,9,,20,53,15,78,2,,42,15,18,9,42,24,,,,42,,,,,18',
'18,14,,15,21,2,9,,21,,,,50,,15,,2,,,21,,,15,,21,46,,,15,,2,,,,,,,,,',
',21,54,54,,,,,,,,,21,,,42,,,,,21,,,18,18,,21,42,,,,,,,,,18,,,42,42,',
',42,,,,,,,,,,42,,,,,,,,,,,,19,,,,,,,,,,,,,,,18,,19,19,,,,19,19,19,,',
',,,19,19,19,,,,18,18,42,42,,,,,,,18,,,,,42,19,,,,,19,19,,,19,19,,,,',
',,,,,,,,,,,23,23,,18,,,,,,,,,,,,,,42,18,,19,,,18,19,19,19,19,19,,,,',
',,,,,42,42,18,,,,,,,,42,,,18,,,,,23,,23,18,,,,23,,18,,,,,,,,,,,,,,,',
',,42,,,,42,,,,,,,,,,,42,,,,,42,,,,,,,,,,,19,19,19,19,19,,42,,19,19,19',
',,,,,,42,19,19,,,,,,42,,,,,,42,,35,,,,,,,,,,,,,,,,,35,35,,,,35,35,35',
',,,,,35,,,,,,,,19,19,,,,,,,,19,,19,,,35,19,19,,,35,35,23,,35,,,,,19',
',,,,,,,,,,19,,,,,,,,,,,,,,,,,,,,,35,,,,35,35,35,35,35,,,,,,,,,,19,19',
',,23,,19,23,19,23,,,,,,,,,,,,19,,,,23,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',23,,,23,,23,,,,,,,,,,,,,,35,35,35,35,35,,,,35,35,35,,,,,,,,35,35,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,23,,,,,,19,,,,,,35,35,,,19,,,,',
'35,,35,,,,23,35,,,,,19,,,,,,,,23,,,,,,,19,19,,35,,,,19,,,,,,,,,,,,23',
',19,,,,19,,,,,19,,,,,,,,,19,,,35,35,,,,,,,,23,,,,,,,,,,,,35,,,,,,,19',
'19,,,,,19,,,,,,23,,,,,,,,,19,,,,,,,,,,,,19,,,,,,19,23,,,,,19,19,,,19',
',,,,,,,,,19,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,23,,,19,,,,,,,,19,,,19',
'19,,,35,,,,,,,,,19,,,,,,,19,23,,,,,,,,,,35,,,,,,,,,,,23,,,,35,35,,,',
',,,,,,19,,,,,,,,,,35,,,,35,,,,,35,,19,19,,,,,,35,,,19,,,,,,,,,,,,,,',
',,,,,,,,,,,,,35,35,,,,,35,19,,,,19,,,,,,19,,,,35,19,,,,,19,,,,,,35,',
',,,,35,,,,,19,35,35,,,,,,,,,19,,,,,,,,19,,,,,,19,,,,,,,,,,,,,,,,,,,',
',,,,,,,,26,35,,,26,26,26,,,35,,,35,35,,,,,,,26,26,26,,,35,,,,,,,35,',
',26,26,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,35,,,,,,,,,,,,,,,,,,,,,35,35',
',,,,,,,,35,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,35,,,,,,,,,,35,,,,,35,',
',,,35,,,,,,,,,,,,,,,,,35,,,,26,26,26,26,,,26,35,,,,,,,,35,,,,,26,35',
'26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26',
'26,26,26,,,,,,,,,26,,26,,,,,26,,,,,,26,26,,,,,,,,26,,,,,,,,,,,,,,,,',
',,,,,,,,,,,26,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,26,,,,,,,,,,,,,,,,,,,,',
',,,,,26,,26,26,26,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,26,,,26,,26,,,,,,,,',
',,,,,,,26,,,,,,,,,,,,26,,,,,,,,,26,26,26,,,,,,,,,26,,,26,,26,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,26,,26',
',26,26,,,,,26,,,26,,,,,,,,26,,,,,,,,26,,,,,,,,,,,,,,26,,,,,,,,,,,,,',
',,,,,,,,,,,,26,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,26,,,,,26,,,,,,,,,,,,',
',,,,,,,,,,,,,26,26,,,,,,,,,,26,26,26,,,,,,,,,,,,,,,26,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,26,,,,,,,,,,,,26,,,,,,,,,,,',
',,,,,,,,,,,26,,,,,,,,,,,,,,,,,,,,,26,,,,,,,,,,,,,,,,,,,,,,,26' ]
        racc_goto_check = arr = ::Array.new(2748, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_goto_pointer = [
   nil,   213,     2,  -278,  -488,  -559,  -549,   nil,    41,   -36,
    16,   202,    70,   196,    25,     0,    62,   139,   220,   965,
   -45,    38,  -183,   849,    14,    78,  1863,    -9,   nil,   155,
  -237,   -90,    64,  -243,  -358,  1190,    20,    19,   nil,   -27,
    23,  -257,   300,  -491,  -244,   -58,    -1,   nil,    89,   -25,
    42,     5,  -254,   -44,   156,  -375,  -247,  -401,  -417,  -107,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    91,   101,
    95,   nil,   151,  -294,  -622,  -438,  -341,  -403,    50,  -532,
   115,  -199,   107,    34,  -576,    50,  -555,  -423,  -708,    72,
  -561,  -210,  -654,    77,  -421,  -213,  -420,  -659,    92,  -165,
   -31,  -628,  -378,  -467,   -33,  -529,  -235,  -518,  -326,   nil,
   -80,   nil,  -101,  -101,  -705,  -386,  -487,  -589,   nil,   nil,
   nil,   103,   102,    45,   104,  -186,  -285,   108,  -526,  -383,
  -383,   nil,  -509,  -602,  -544,  -295,  -484,  -274,  -470,   nil,
  -739,   nil,   nil,  -375 ]

racc_goto_default = [
   nil,   nil,   510,   nil,   nil,   778,   nil,     3,   nil,     4,
     5,   345,   nil,   nil,   nil,   208,    16,    11,   209,   296,
   nil,   207,   nil,   251,    15,   nil,    19,    20,    21,   nil,
    25,   652,   nil,   nil,   nil,   286,    29,   nil,    31,    34,
    33,   nil,   205,   559,   nil,   114,   413,   113,    69,   nil,
    42,   305,   nil,   248,   411,   599,   460,   249,   nil,   nil,
   264,   462,    43,    44,    45,    46,    47,    48,    49,   nil,
   265,    55,   nil,   nil,   nil,   nil,   nil,   nil,   546,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   319,   318,   669,   321,   nil,   322,   323,   243,
   nil,   417,   nil,   nil,   nil,   nil,   nil,   nil,    68,    70,
    71,    72,   nil,   nil,   nil,   nil,   576,   nil,   nil,   nil,
   nil,   376,   706,   708,   nil,   329,   331,   nil,   540,   541,
   712,   334,   337,   256 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 138, :_reduce_1,
  4, 140, :_reduce_2,
  2, 139, :_reduce_3,
  1, 144, :_reduce_4,
  1, 144, :_reduce_5,
  3, 144, :_reduce_6,
  0, 162, :_reduce_7,
  4, 147, :_reduce_8,
  3, 147, :_reduce_9,
  3, 147, :_reduce_none,
  3, 147, :_reduce_11,
  2, 147, :_reduce_12,
  3, 147, :_reduce_13,
  3, 147, :_reduce_14,
  3, 147, :_reduce_15,
  3, 147, :_reduce_16,
  3, 147, :_reduce_17,
  4, 147, :_reduce_none,
  4, 147, :_reduce_none,
  3, 147, :_reduce_20,
  3, 147, :_reduce_21,
  3, 147, :_reduce_22,
  6, 147, :_reduce_none,
  5, 147, :_reduce_24,
  5, 147, :_reduce_none,
  5, 147, :_reduce_none,
  3, 147, :_reduce_none,
  3, 147, :_reduce_28,
  3, 147, :_reduce_29,
  3, 147, :_reduce_30,
  1, 147, :_reduce_none,
  1, 161, :_reduce_none,
  3, 161, :_reduce_33,
  3, 161, :_reduce_34,
  2, 161, :_reduce_35,
  2, 161, :_reduce_36,
  1, 161, :_reduce_none,
  1, 151, :_reduce_none,
  1, 153, :_reduce_none,
  1, 153, :_reduce_none,
  2, 153, :_reduce_41,
  2, 153, :_reduce_42,
  2, 153, :_reduce_43,
  1, 165, :_reduce_none,
  4, 165, :_reduce_none,
  4, 165, :_reduce_none,
  4, 170, :_reduce_none,
  2, 164, :_reduce_48,
  3, 164, :_reduce_none,
  4, 164, :_reduce_50,
  5, 164, :_reduce_none,
  4, 164, :_reduce_52,
  5, 164, :_reduce_none,
  2, 164, :_reduce_54,
  2, 164, :_reduce_55,
  1, 154, :_reduce_56,
  3, 154, :_reduce_57,
  1, 174, :_reduce_58,
  3, 174, :_reduce_59,
  1, 173, :_reduce_60,
  2, 173, :_reduce_61,
  3, 173, :_reduce_62,
  5, 173, :_reduce_none,
  2, 173, :_reduce_64,
  4, 173, :_reduce_none,
  2, 173, :_reduce_66,
  1, 173, :_reduce_67,
  3, 173, :_reduce_none,
  1, 176, :_reduce_69,
  3, 176, :_reduce_70,
  2, 175, :_reduce_71,
  3, 175, :_reduce_72,
  1, 178, :_reduce_none,
  3, 178, :_reduce_none,
  1, 177, :_reduce_75,
  4, 177, :_reduce_76,
  3, 177, :_reduce_77,
  3, 177, :_reduce_none,
  3, 177, :_reduce_none,
  3, 177, :_reduce_none,
  2, 177, :_reduce_none,
  1, 177, :_reduce_none,
  1, 152, :_reduce_83,
  4, 152, :_reduce_84,
  3, 152, :_reduce_85,
  3, 152, :_reduce_86,
  3, 152, :_reduce_87,
  3, 152, :_reduce_88,
  2, 152, :_reduce_89,
  1, 152, :_reduce_none,
  1, 180, :_reduce_none,
  2, 181, :_reduce_92,
  1, 181, :_reduce_93,
  3, 181, :_reduce_94,
  1, 182, :_reduce_none,
  1, 182, :_reduce_none,
  1, 182, :_reduce_none,
  1, 182, :_reduce_98,
  1, 182, :_reduce_99,
  1, 149, :_reduce_100,
  1, 149, :_reduce_none,
  1, 150, :_reduce_102,
  3, 150, :_reduce_103,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  3, 163, :_reduce_177,
  5, 163, :_reduce_178,
  3, 163, :_reduce_179,
  6, 163, :_reduce_180,
  5, 163, :_reduce_181,
  5, 163, :_reduce_none,
  5, 163, :_reduce_none,
  5, 163, :_reduce_none,
  4, 163, :_reduce_none,
  3, 163, :_reduce_none,
  3, 163, :_reduce_187,
  3, 163, :_reduce_188,
  3, 163, :_reduce_189,
  3, 163, :_reduce_190,
  3, 163, :_reduce_191,
  3, 163, :_reduce_192,
  3, 163, :_reduce_193,
  3, 163, :_reduce_194,
  4, 163, :_reduce_none,
  4, 163, :_reduce_none,
  2, 163, :_reduce_197,
  2, 163, :_reduce_198,
  3, 163, :_reduce_199,
  3, 163, :_reduce_200,
  3, 163, :_reduce_201,
  3, 163, :_reduce_202,
  3, 163, :_reduce_203,
  3, 163, :_reduce_204,
  3, 163, :_reduce_205,
  3, 163, :_reduce_206,
  3, 163, :_reduce_207,
  3, 163, :_reduce_208,
  3, 163, :_reduce_209,
  3, 163, :_reduce_210,
  3, 163, :_reduce_211,
  2, 163, :_reduce_212,
  2, 163, :_reduce_213,
  3, 163, :_reduce_214,
  3, 163, :_reduce_215,
  3, 163, :_reduce_216,
  3, 163, :_reduce_217,
  3, 163, :_reduce_218,
  5, 163, :_reduce_219,
  1, 163, :_reduce_none,
  1, 160, :_reduce_none,
  1, 157, :_reduce_222,
  2, 157, :_reduce_223,
  4, 157, :_reduce_224,
  2, 157, :_reduce_225,
  3, 191, :_reduce_226,
  4, 191, :_reduce_227,
  4, 191, :_reduce_none,
  6, 191, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 166, :_reduce_232,
  2, 166, :_reduce_233,
  2, 166, :_reduce_234,
  4, 166, :_reduce_235,
  1, 166, :_reduce_236,
  4, 195, :_reduce_none,
  1, 195, :_reduce_none,
  0, 197, :_reduce_239,
  2, 169, :_reduce_240,
  1, 196, :_reduce_none,
  2, 196, :_reduce_242,
  3, 196, :_reduce_243,
  2, 194, :_reduce_244,
  2, 193, :_reduce_245,
  1, 193, :_reduce_246,
  1, 188, :_reduce_247,
  2, 188, :_reduce_248,
  3, 188, :_reduce_249,
  4, 188, :_reduce_250,
  3, 159, :_reduce_251,
  4, 159, :_reduce_none,
  2, 159, :_reduce_253,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  0, 219, :_reduce_263,
  4, 187, :_reduce_264,
  4, 187, :_reduce_265,
  3, 187, :_reduce_266,
  3, 187, :_reduce_267,
  2, 187, :_reduce_268,
  4, 187, :_reduce_269,
  3, 187, :_reduce_270,
  3, 187, :_reduce_271,
  1, 187, :_reduce_272,
  4, 187, :_reduce_273,
  3, 187, :_reduce_274,
  1, 187, :_reduce_275,
  5, 187, :_reduce_276,
  4, 187, :_reduce_277,
  3, 187, :_reduce_278,
  2, 187, :_reduce_279,
  1, 187, :_reduce_none,
  2, 187, :_reduce_281,
  2, 187, :_reduce_282,
  6, 187, :_reduce_283,
  6, 187, :_reduce_284,
  0, 220, :_reduce_285,
  0, 221, :_reduce_286,
  7, 187, :_reduce_287,
  0, 222, :_reduce_288,
  0, 223, :_reduce_289,
  7, 187, :_reduce_290,
  5, 187, :_reduce_291,
  4, 187, :_reduce_292,
  5, 187, :_reduce_293,
  0, 224, :_reduce_294,
  0, 225, :_reduce_295,
  9, 187, :_reduce_none,
  0, 226, :_reduce_297,
  0, 227, :_reduce_298,
  7, 187, :_reduce_299,
  0, 228, :_reduce_300,
  0, 229, :_reduce_301,
  8, 187, :_reduce_302,
  0, 230, :_reduce_303,
  0, 231, :_reduce_304,
  6, 187, :_reduce_305,
  0, 232, :_reduce_306,
  6, 187, :_reduce_307,
  0, 233, :_reduce_308,
  0, 234, :_reduce_309,
  9, 187, :_reduce_310,
  1, 187, :_reduce_311,
  1, 187, :_reduce_312,
  1, 187, :_reduce_313,
  1, 187, :_reduce_none,
  1, 156, :_reduce_none,
  1, 210, :_reduce_none,
  1, 210, :_reduce_none,
  1, 210, :_reduce_none,
  2, 210, :_reduce_none,
  1, 212, :_reduce_none,
  1, 212, :_reduce_none,
  1, 212, :_reduce_none,
  2, 209, :_reduce_323,
  3, 235, :_reduce_324,
  2, 235, :_reduce_325,
  1, 235, :_reduce_none,
  1, 235, :_reduce_none,
  3, 236, :_reduce_328,
  3, 236, :_reduce_329,
  1, 211, :_reduce_330,
  0, 238, :_reduce_331,
  6, 211, :_reduce_332,
  1, 142, :_reduce_none,
  2, 142, :_reduce_334,
  1, 239, :_reduce_335,
  3, 239, :_reduce_336,
  3, 240, :_reduce_337,
  1, 171, :_reduce_none,
  2, 171, :_reduce_339,
  1, 171, :_reduce_340,
  3, 171, :_reduce_341,
  1, 241, :_reduce_342,
  2, 243, :_reduce_343,
  1, 243, :_reduce_344,
  6, 237, :_reduce_345,
  4, 237, :_reduce_346,
  4, 237, :_reduce_347,
  2, 237, :_reduce_348,
  2, 237, :_reduce_349,
  4, 237, :_reduce_350,
  2, 237, :_reduce_351,
  2, 237, :_reduce_352,
  1, 237, :_reduce_353,
  0, 247, :_reduce_354,
  5, 246, :_reduce_355,
  2, 167, :_reduce_356,
  4, 167, :_reduce_none,
  4, 167, :_reduce_none,
  2, 208, :_reduce_359,
  4, 208, :_reduce_360,
  3, 208, :_reduce_361,
  4, 208, :_reduce_362,
  3, 208, :_reduce_363,
  2, 208, :_reduce_364,
  1, 208, :_reduce_365,
  0, 249, :_reduce_366,
  5, 207, :_reduce_367,
  0, 250, :_reduce_368,
  5, 207, :_reduce_369,
  0, 252, :_reduce_370,
  6, 213, :_reduce_371,
  1, 251, :_reduce_372,
  1, 251, :_reduce_none,
  6, 141, :_reduce_374,
  0, 141, :_reduce_375,
  1, 253, :_reduce_376,
  1, 253, :_reduce_none,
  1, 253, :_reduce_none,
  2, 254, :_reduce_379,
  1, 254, :_reduce_380,
  2, 143, :_reduce_381,
  1, 143, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 200, :_reduce_386,
  1, 257, :_reduce_none,
  2, 257, :_reduce_none,
  3, 258, :_reduce_389,
  1, 258, :_reduce_390,
  3, 201, :_reduce_391,
  3, 202, :_reduce_392,
  3, 203, :_reduce_393,
  3, 203, :_reduce_394,
  1, 261, :_reduce_395,
  3, 261, :_reduce_396,
  1, 262, :_reduce_397,
  2, 262, :_reduce_398,
  3, 204, :_reduce_399,
  3, 204, :_reduce_400,
  1, 264, :_reduce_401,
  3, 264, :_reduce_402,
  1, 259, :_reduce_403,
  2, 259, :_reduce_404,
  1, 260, :_reduce_405,
  2, 260, :_reduce_406,
  1, 263, :_reduce_407,
  0, 266, :_reduce_408,
  3, 263, :_reduce_409,
  0, 267, :_reduce_410,
  4, 263, :_reduce_411,
  1, 265, :_reduce_412,
  1, 265, :_reduce_413,
  1, 265, :_reduce_414,
  1, 265, :_reduce_none,
  2, 185, :_reduce_416,
  1, 185, :_reduce_417,
  1, 268, :_reduce_none,
  1, 268, :_reduce_none,
  1, 268, :_reduce_none,
  1, 268, :_reduce_none,
  3, 256, :_reduce_422,
  1, 255, :_reduce_423,
  1, 255, :_reduce_424,
  2, 255, :_reduce_none,
  2, 255, :_reduce_none,
  1, 179, :_reduce_427,
  1, 179, :_reduce_428,
  1, 179, :_reduce_429,
  1, 179, :_reduce_430,
  1, 179, :_reduce_431,
  1, 179, :_reduce_432,
  1, 179, :_reduce_433,
  1, 179, :_reduce_434,
  1, 179, :_reduce_435,
  1, 179, :_reduce_436,
  1, 179, :_reduce_437,
  1, 205, :_reduce_438,
  1, 155, :_reduce_439,
  1, 158, :_reduce_440,
  1, 158, :_reduce_none,
  1, 214, :_reduce_442,
  3, 214, :_reduce_443,
  2, 214, :_reduce_444,
  4, 216, :_reduce_445,
  2, 216, :_reduce_446,
  6, 269, :_reduce_447,
  4, 269, :_reduce_448,
  4, 269, :_reduce_449,
  2, 269, :_reduce_450,
  4, 269, :_reduce_451,
  2, 269, :_reduce_452,
  2, 269, :_reduce_453,
  1, 269, :_reduce_454,
  0, 269, :_reduce_455,
  1, 272, :_reduce_456,
  1, 272, :_reduce_457,
  1, 272, :_reduce_458,
  1, 272, :_reduce_459,
  1, 272, :_reduce_460,
  1, 273, :_reduce_461,
  3, 273, :_reduce_462,
  1, 275, :_reduce_463,
  3, 275, :_reduce_none,
  1, 276, :_reduce_465,
  3, 276, :_reduce_466,
  1, 274, :_reduce_none,
  4, 274, :_reduce_none,
  3, 274, :_reduce_none,
  2, 274, :_reduce_none,
  1, 274, :_reduce_none,
  1, 244, :_reduce_472,
  3, 244, :_reduce_473,
  3, 277, :_reduce_474,
  1, 270, :_reduce_475,
  3, 270, :_reduce_476,
  1, 278, :_reduce_none,
  1, 278, :_reduce_none,
  2, 245, :_reduce_479,
  1, 245, :_reduce_480,
  1, 279, :_reduce_none,
  1, 279, :_reduce_none,
  2, 242, :_reduce_483,
  2, 271, :_reduce_484,
  0, 271, :_reduce_485,
  1, 217, :_reduce_486,
  4, 217, :_reduce_487,
  1, 206, :_reduce_488,
  2, 206, :_reduce_489,
  2, 206, :_reduce_490,
  1, 190, :_reduce_491,
  3, 190, :_reduce_492,
  3, 280, :_reduce_493,
  2, 280, :_reduce_494,
  1, 172, :_reduce_none,
  1, 172, :_reduce_none,
  1, 172, :_reduce_none,
  1, 168, :_reduce_none,
  1, 168, :_reduce_none,
  1, 168, :_reduce_none,
  1, 168, :_reduce_none,
  1, 248, :_reduce_none,
  1, 248, :_reduce_none,
  1, 248, :_reduce_none,
  1, 218, :_reduce_none,
  1, 218, :_reduce_none,
  0, 145, :_reduce_none,
  1, 145, :_reduce_none,
  0, 186, :_reduce_none,
  1, 186, :_reduce_none,
  0, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 215, :_reduce_none,
  1, 215, :_reduce_none,
  1, 148, :_reduce_none,
  2, 148, :_reduce_none,
  0, 146, :_reduce_none,
  0, 198, :_reduce_none ]

racc_reduce_n = 520

racc_shift_n = 908

racc_token_table = {
  false => 0,
  :error => 1,
  :CLASS => 2,
  :MODULE => 3,
  :DEF => 4,
  :UNDEF => 5,
  :BEGIN => 6,
  :RESCUE => 7,
  :ENSURE => 8,
  :END => 9,
  :IF => 10,
  :UNLESS => 11,
  :THEN => 12,
  :ELSIF => 13,
  :ELSE => 14,
  :CASE => 15,
  :WHEN => 16,
  :WHILE => 17,
  :UNTIL => 18,
  :FOR => 19,
  :BREAK => 20,
  :NEXT => 21,
  :REDO => 22,
  :RETRY => 23,
  :IN => 24,
  :DO => 25,
  :DO_COND => 26,
  :DO_BLOCK => 27,
  :RETURN => 28,
  :YIELD => 29,
  :SUPER => 30,
  :SELF => 31,
  :NIL => 32,
  :TRUE => 33,
  :FALSE => 34,
  :AND => 35,
  :OR => 36,
  :NOT => 37,
  :IF_MOD => 38,
  :UNLESS_MOD => 39,
  :WHILE_MOD => 40,
  :UNTIL_MOD => 41,
  :RESCUE_MOD => 42,
  :ALIAS => 43,
  :DEFINED => 44,
  :klBEGIN => 45,
  :klEND => 46,
  :LINE => 47,
  :FILE => 48,
  :IDENTIFIER => 49,
  :FID => 50,
  :GVAR => 51,
  :IVAR => 52,
  :CONSTANT => 53,
  :CVAR => 54,
  :NTH_REF => 55,
  :BACK_REF => 56,
  :STRING_CONTENT => 57,
  :INTEGER => 58,
  :FLOAT => 59,
  :REGEXP_END => 60,
  "+@" => 61,
  "-@" => 62,
  "-@NUM" => 63,
  "**" => 64,
  "<=>" => 65,
  "==" => 66,
  "===" => 67,
  "!=" => 68,
  ">=" => 69,
  "<=" => 70,
  "&&" => 71,
  "||" => 72,
  "=~" => 73,
  "!~" => 74,
  "." => 75,
  ".." => 76,
  "..." => 77,
  "[]" => 78,
  "[]=" => 79,
  "<<" => 80,
  ">>" => 81,
  "::" => 82,
  "::@" => 83,
  :OP_ASGN => 84,
  "=>" => 85,
  :PAREN_BEG => 86,
  "(" => 87,
  ")" => 88,
  :tLPAREN_ARG => 89,
  :ARRAY_BEG => 90,
  "]" => 91,
  :tLBRACE => 92,
  :tLBRACE_ARG => 93,
  :SPLAT => 94,
  "*" => 95,
  "&@" => 96,
  "&" => 97,
  "~" => 98,
  "%" => 99,
  "/" => 100,
  "+" => 101,
  "-" => 102,
  "<" => 103,
  ">" => 104,
  "|" => 105,
  "!" => 106,
  "^" => 107,
  :LCURLY => 108,
  "}" => 109,
  :BACK_REF2 => 110,
  :SYMBOL_BEG => 111,
  :STRING_BEG => 112,
  :XSTRING_BEG => 113,
  :REGEXP_BEG => 114,
  :WORDS_BEG => 115,
  :AWORDS_BEG => 116,
  :STRING_DBEG => 117,
  :STRING_DVAR => 118,
  :STRING_END => 119,
  :STRING => 120,
  :SYMBOL => 121,
  "\\n" => 122,
  "?" => 123,
  ":" => 124,
  "," => 125,
  :SPACE => 126,
  ";" => 127,
  :LABEL => 128,
  :LAMBDA => 129,
  :LAMBEG => 130,
  :DO_LAMBDA => 131,
  "=" => 132,
  :LOWEST => 133,
  "[@" => 134,
  "[" => 135,
  "{" => 136 }

racc_nt_base = 137

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "CLASS",
  "MODULE",
  "DEF",
  "UNDEF",
  "BEGIN",
  "RESCUE",
  "ENSURE",
  "END",
  "IF",
  "UNLESS",
  "THEN",
  "ELSIF",
  "ELSE",
  "CASE",
  "WHEN",
  "WHILE",
  "UNTIL",
  "FOR",
  "BREAK",
  "NEXT",
  "REDO",
  "RETRY",
  "IN",
  "DO",
  "DO_COND",
  "DO_BLOCK",
  "RETURN",
  "YIELD",
  "SUPER",
  "SELF",
  "NIL",
  "TRUE",
  "FALSE",
  "AND",
  "OR",
  "NOT",
  "IF_MOD",
  "UNLESS_MOD",
  "WHILE_MOD",
  "UNTIL_MOD",
  "RESCUE_MOD",
  "ALIAS",
  "DEFINED",
  "klBEGIN",
  "klEND",
  "LINE",
  "FILE",
  "IDENTIFIER",
  "FID",
  "GVAR",
  "IVAR",
  "CONSTANT",
  "CVAR",
  "NTH_REF",
  "BACK_REF",
  "STRING_CONTENT",
  "INTEGER",
  "FLOAT",
  "REGEXP_END",
  "\"+@\"",
  "\"-@\"",
  "\"-@NUM\"",
  "\"**\"",
  "\"<=>\"",
  "\"==\"",
  "\"===\"",
  "\"!=\"",
  "\">=\"",
  "\"<=\"",
  "\"&&\"",
  "\"||\"",
  "\"=~\"",
  "\"!~\"",
  "\".\"",
  "\"..\"",
  "\"...\"",
  "\"[]\"",
  "\"[]=\"",
  "\"<<\"",
  "\">>\"",
  "\"::\"",
  "\"::@\"",
  "OP_ASGN",
  "\"=>\"",
  "PAREN_BEG",
  "\"(\"",
  "\")\"",
  "tLPAREN_ARG",
  "ARRAY_BEG",
  "\"]\"",
  "tLBRACE",
  "tLBRACE_ARG",
  "SPLAT",
  "\"*\"",
  "\"&@\"",
  "\"&\"",
  "\"~\"",
  "\"%\"",
  "\"/\"",
  "\"+\"",
  "\"-\"",
  "\"<\"",
  "\">\"",
  "\"|\"",
  "\"!\"",
  "\"^\"",
  "LCURLY",
  "\"}\"",
  "BACK_REF2",
  "SYMBOL_BEG",
  "STRING_BEG",
  "XSTRING_BEG",
  "REGEXP_BEG",
  "WORDS_BEG",
  "AWORDS_BEG",
  "STRING_DBEG",
  "STRING_DVAR",
  "STRING_END",
  "STRING",
  "SYMBOL",
  "\"\\\\n\"",
  "\"?\"",
  "\":\"",
  "\",\"",
  "SPACE",
  "\";\"",
  "LABEL",
  "LAMBDA",
  "LAMBEG",
  "DO_LAMBDA",
  "\"=\"",
  "LOWEST",
  "\"[@\"",
  "\"[\"",
  "\"{\"",
  "$start",
  "target",
  "compstmt",
  "bodystmt",
  "opt_rescue",
  "opt_else",
  "opt_ensure",
  "stmts",
  "opt_terms",
  "none",
  "stmt",
  "terms",
  "fitem",
  "undef_list",
  "expr_value",
  "lhs",
  "command_call",
  "mlhs",
  "var_lhs",
  "primary_value",
  "aref_args",
  "backref",
  "mrhs",
  "arg_value",
  "expr",
  "@1",
  "arg",
  "command",
  "block_command",
  "call_args",
  "block_call",
  "operation2",
  "command_args",
  "cmd_brace_block",
  "opt_block_var",
  "operation",
  "mlhs_basic",
  "mlhs_entry",
  "mlhs_head",
  "mlhs_item",
  "mlhs_node",
  "mlhs_post",
  "variable",
  "cname",
  "cpath",
  "fname",
  "op",
  "reswords",
  "symbol",
  "opt_nl",
  "primary",
  "args",
  "trailer",
  "assocs",
  "paren_args",
  "opt_paren_args",
  "opt_block_arg",
  "block_arg",
  "call_args2",
  "open_args",
  "@2",
  "none_block_pass",
  "literal",
  "strings",
  "xstring",
  "regexp",
  "words",
  "awords",
  "var_ref",
  "assoc_list",
  "brace_block",
  "method_call",
  "lambda",
  "then",
  "if_tail",
  "do",
  "case_body",
  "superclass",
  "term",
  "f_arglist",
  "singleton",
  "dot_or_colon",
  "@3",
  "@4",
  "@5",
  "@6",
  "@7",
  "@8",
  "@9",
  "@10",
  "@11",
  "@12",
  "@13",
  "@14",
  "@15",
  "@16",
  "@17",
  "@18",
  "f_larglist",
  "lambda_body",
  "block_param",
  "@19",
  "f_block_optarg",
  "f_block_opt",
  "block_args_tail",
  "f_block_arg",
  "opt_block_args_tail",
  "f_arg",
  "f_rest_arg",
  "do_block",
  "@20",
  "operation3",
  "@21",
  "@22",
  "cases",
  "@23",
  "exc_list",
  "exc_var",
  "numeric",
  "dsym",
  "string",
  "string1",
  "string_contents",
  "xstring_contents",
  "word_list",
  "word",
  "string_content",
  "qword_list",
  "string_dvar",
  "@24",
  "@25",
  "sym",
  "f_args",
  "f_optarg",
  "opt_f_block_arg",
  "f_norm_arg",
  "f_arg_item",
  "f_margs",
  "f_marg",
  "f_marg_list",
  "f_opt",
  "restarg_mark",
  "blkarg_mark",
  "assoc" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

def _reduce_1(val, _values, result)
      result = val[0]
    
    result
end

def _reduce_2(val, _values, result)
      result = new_body val[0], val[1], val[2], val[3]
    
    result
end

def _reduce_3(val, _values, result)
      comp = new_compstmt val[0]
      if comp and comp.type == :begin and comp.size == 2
        result = comp[1]
        result.line = comp.line
      else
        result = comp
      end
    
    result
end

def _reduce_4(val, _values, result)
      result = new_block
    
    result
end

def _reduce_5(val, _values, result)
      result = new_block val[0]
    
    result
end

def _reduce_6(val, _values, result)
      val[0] << val[2]
      result = val[0]
    
    result
end

def _reduce_7(val, _values, result)
      lexer.lex_state = :expr_fname
    
    result
end

def _reduce_8(val, _values, result)
      result = s(:alias, val[1], val[3])
    
    result
end

def _reduce_9(val, _values, result)
      result = s(:valias, val[1].intern, val[2].intern)
    
    result
end

# reduce 10 omitted

def _reduce_11(val, _values, result)
      result = s(:valias, val[1].intern, val[2].intern)
    
    result
end

def _reduce_12(val, _values, result)
      result = val[1]
    
    result
end

def _reduce_13(val, _values, result)
      result = new_if val[2], val[0], nil
    
    result
end

def _reduce_14(val, _values, result)
      result = new_if val[2], nil, val[0]
    
    result
end

def _reduce_15(val, _values, result)
      result = s(:while, val[2], val[0], true)
    
    result
end

def _reduce_16(val, _values, result)
      result = s(:until, val[2], val[0], true)
    
    result
end

def _reduce_17(val, _values, result)
      result = s(:rescue_mod, val[0], val[2])
    
    result
end

# reduce 18 omitted

# reduce 19 omitted

def _reduce_20(val, _values, result)
      result = new_assign val[0], val[2]
    
    result
end

def _reduce_21(val, _values, result)
      result = s(:masgn, val[0], s(:to_ary, val[2]))
    
    result
end

def _reduce_22(val, _values, result)
      result = new_op_asgn val[1].intern, val[0], val[2]
    
    result
end

# reduce 23 omitted

def _reduce_24(val, _values, result)
      result = s(:op_asgn2, val[0], "#{val[2]}=".intern, val[3].intern, val[4])
    
    result
end

# reduce 25 omitted

# reduce 26 omitted

# reduce 27 omitted

def _reduce_28(val, _values, result)
      result = new_assign val[0], s(:svalue, val[2])
    
    result
end

def _reduce_29(val, _values, result)
      result = s(:masgn, val[0], s(:to_ary, val[2]))
    
    result
end

def _reduce_30(val, _values, result)
      result = s(:masgn, val[0], val[2])
    
    result
end

# reduce 31 omitted

# reduce 32 omitted

def _reduce_33(val, _values, result)
      result = s(:and, val[0], val[2])
      result.line = val[0].line
    
    result
end

def _reduce_34(val, _values, result)
      result = s(:or, val[0], val[2])
      result.line = val[0].line
    
    result
end

def _reduce_35(val, _values, result)
      result = s(:not, val[1])
      result.line = val[1].line
    
    result
end

def _reduce_36(val, _values, result)
      result = s(:not, val[1])
    
    result
end

# reduce 37 omitted

# reduce 38 omitted

# reduce 39 omitted

# reduce 40 omitted

def _reduce_41(val, _values, result)
      args = val[1]
      args = args[1] if args.size == 2
      result = s(:return, args)
    
    result
end

def _reduce_42(val, _values, result)
      args = val[1]
      args = args[1] if args.size == 2
      result = s(:break, args)
    
    result
end

def _reduce_43(val, _values, result)
      args = val[1]
      args = args[1] if args.size == 2
      result = s(:next, args)
    
    result
end

# reduce 44 omitted

# reduce 45 omitted

# reduce 46 omitted

# reduce 47 omitted

def _reduce_48(val, _values, result)
      result = new_call nil, val[0].intern, val[1]
    
    result
end

# reduce 49 omitted

def _reduce_50(val, _values, result)
      result = new_call val[0], val[2].intern, val[3]
    
    result
end

# reduce 51 omitted

def _reduce_52(val, _values, result)
      result = new_call val[0], val[2].intern, val[3]
    
    result
end

# reduce 53 omitted

def _reduce_54(val, _values, result)
      result = new_super val[1]
    
    result
end

def _reduce_55(val, _values, result)
      result = new_yield val[1]
    
    result
end

def _reduce_56(val, _values, result)
      result = val[0]
    
    result
end

def _reduce_57(val, _values, result)
      result = val[1]
    
    result
end

def _reduce_58(val, _values, result)
      result = val[0]
    
    result
end

def _reduce_59(val, _values, result)
      result = val[1]
    
    result
end

def _reduce_60(val, _values, result)
      result = val[0]
    
    result
end

def _reduce_61(val, _values, result)
      result = val[0] << val[1]
    
    result
end

def _reduce_62(val, _values, result)
      result = val[0] << s(:splat, val[2])
    
    result
end

# reduce 63 omitted

def _reduce_64(val, _values, result)
      result = val[0] << s(:splat)
    
    result
end

# reduce 65 omitted

def _reduce_66(val, _values, result)
      result = s(:array, s(:splat, val[1]))
    
    result
end

def _reduce_67(val, _values, result)
      result = s(:array, s(:splat))
    
    result
end

# reduce 68 omitted

def _reduce_69(val, _values, result)
      result = val[0]
    
    result
end

def _reduce_70(val, _values, result)
      result = val[1]
    
    result
end

def _reduce_71(val, _values, result)
      result = s(:array, val[0])
    
    result
end

def _reduce_72(val, _values, result)
      result = val[0] << val[1]
    
    result
end

# reduce 73 omitted

# reduce 74 omitted

def _reduce_75(val, _values, result)
      result = new_assignable val[0]
    
    result
end

def _reduce_76(val, _values, result)
      args = val[2]
      args.type = :arglist if args.type == :array
      result = s(:attrasgn, val[0], :[]=, args)
    
    result
end

def _reduce_77(val, _values, result)
      result = new_call val[0], val[2].intern, s(:arglist)
    
    result
end

# reduce 78 omitted

# reduce 79 omitted

# reduce 80 omitted

# reduce 81 omitted

# reduce 82 omitted

def _reduce_83(val, _values, result)
      result = new_assignable val[0]
    
    result
end

def _reduce_84(val, _values, result)
      args = val[2]
      args.type = :arglist if args.type == :array
      result = s(:attrasgn, val[0], :[]=, args)
    
    result
end

def _reduce_85(val, _values, result)
      result = s(:attrasgn, val[0], "#{val[2]}=".intern, s(:arglist))
    
    result
end

def _reduce_86(val, _values, result)
      result = s(:attrasgn, val[0], "#{val[2]}=".intern, s(:arglist))
    
    result
end

def _reduce_87(val, _values, result)
      result = s(:attrasgn, val[0], "#{val[2]}=".intern, s(:arglist))
    
    result
end

def _reduce_88(val, _values, result)
      result = s(:colon2, val[0], val[2].intern)
    
    result
end

def _reduce_89(val, _values, result)
      result = s(:colon3, val[1].intern)
    
    result
end

# reduce 90 omitted

# reduce 91 omitted

def _reduce_92(val, _values, result)
      result = s(:colon3, val[1].intern)
    
    result
end

def _reduce_93(val, _values, result)
      result = val[0].intern
    
    result
end

def _reduce_94(val, _values, result)
      result = s(:colon2, val[0], val[2].intern)
    
    result
end

# reduce 95 omitted

# reduce 96 omitted

# reduce 97 omitted

def _reduce_98(val, _values, result)
      lexer.lex_state = :expr_end
      result = val[0]
    
    result
end

def _reduce_99(val, _values, result)
      lexer.lex_state = :expr_end
      result = val[0]
    
    result
end

def _reduce_100(val, _values, result)
      result = s(:sym, val[0].intern)
    
    result
end

# reduce 101 omitted

def _reduce_102(val, _values, result)
      result = s(:undef, val[0])
    
    result
end

def _reduce_103(val, _values, result)
      result = val[0] << val[2]
    
    result
end

# reduce 104 omitted

# reduce 105 omitted

# reduce 106 omitted

# reduce 107 omitted

# reduce 108 omitted

# reduce 109 omitted

# reduce 110 omitted

# reduce 111 omitted

# reduce 112 omitted

# reduce 113 omitted

# reduce 114 omitted

# reduce 115 omitted

# reduce 116 omitted

# reduce 117 omitted

# reduce 118 omitted

# reduce 119 omitted

# reduce 120 omitted

# reduce 121 omitted

# reduce 122 omitted

# reduce 123 omitted

# reduce 124 omitted

# reduce 125 omitted

# reduce 126 omitted

# reduce 127 omitted

# reduce 128 omitted

# reduce 129 omitted

# reduce 130 omitted

# reduce 131 omitted

# reduce 132 omitted

# reduce 133 omitted

# reduce 134 omitted

# reduce 135 omitted

# reduce 136 omitted

# reduce 137 omitted

# reduce 138 omitted

# reduce 139 omitted

# reduce 140 omitted

# reduce 141 omitted

# reduce 142 omitted

# reduce 143 omitted

# reduce 144 omitted

# reduce 145 omitted

# reduce 146 omitted

# reduce 147 omitted

# reduce 148 omitted

# reduce 149 omitted

# reduce 150 omitted

# reduce 151 omitted

# reduce 152 omitted

# reduce 153 omitted

# reduce 154 omitted

# reduce 155 omitted

# reduce 156 omitted

# reduce 157 omitted

# reduce 158 omitted

# reduce 159 omitted

# reduce 160 omitted

# reduce 161 omitted

# reduce 162 omitted

# reduce 163 omitted

# reduce 164 omitted

# reduce 165 omitted

# reduce 166 omitted

# reduce 167 omitted

# reduce 168 omitted

# reduce 169 omitted

# reduce 170 omitted

# reduce 171 omitted

# reduce 172 omitted

# reduce 173 omitted

# reduce 174 omitted

# reduce 175 omitted

# reduce 176 omitted

def _reduce_177(val, _values, result)
      result = new_assign val[0], val[2]
    
    result
end

def _reduce_178(val, _values, result)
      result = new_assign val[0], s(:rescue_mod, val[2], val[4])
    
    result
end

def _reduce_179(val, _values, result)
      result = new_op_asgn val[1].intern, val[0], val[2]
    
    result
end

def _reduce_180(val, _values, result)
      args = val[2]
      args.type = :arglist if args.type == :array
      result = s(:op_asgn1, val[0], val[2], val[4].intern, val[5])
      result.line = val[0].line
    
    result
end

def _reduce_181(val, _values, result)
      result = s(:op_asgn2, val[0], "#{val[2]}=".intern, val[3].intern, val[4])
    
    result
end

# reduce 182 omitted

# reduce 183 omitted

# reduce 184 omitted

# reduce 185 omitted

# reduce 186 omitted

def _reduce_187(val, _values, result)
      result = s(:dot2, val[0], val[2])
      result.line = val[0].line
    
    result
end

def _reduce_188(val, _values, result)
      result = s(:dot3, val[0], val[2])
      result.line = val[0].line
    
    result
end

def _reduce_189(val, _values, result)
      result = new_call val[0], :"+", s(:arglist, val[2])
    
    result
end

def _reduce_190(val, _values, result)
      result = new_call val[0], :"-", s(:arglist, val[2])
    
    result
end

def _reduce_191(val, _values, result)
      result = new_call val[0], :"*", s(:arglist, val[2])
    
    result
end

def _reduce_192(val, _values, result)
      result = new_call val[0], :"/", s(:arglist, val[2])
    
    result
end

def _reduce_193(val, _values, result)
      result = new_call val[0], :"%", s(:arglist, val[2])
    
    result
end

def _reduce_194(val, _values, result)
      result = new_call val[0], :"**", s(:arglist, val[2])
    
    result
end

# reduce 195 omitted

# reduce 196 omitted

def _reduce_197(val, _values, result)
      result = new_call val[1], :"+@", s(:arglist)
      result = val[1] if [:int, :float].include? val[1].type
    
    result
end

def _reduce_198(val, _values, result)
      result = new_call val[1], :"-@", s(:arglist)
      if val[1].type == :int
        val[1][1] = -val[1][1]
        result = val[1]
      elsif val[1].type == :float
        val[1][1] = -val[1][1].to_f
        result = val[1]
      end
    
    result
end

def _reduce_199(val, _values, result)
      result = new_call val[0], :"|", s(:arglist, val[2])
    
    result
end

def _reduce_200(val, _values, result)
      result = new_call val[0], :"^", s(:arglist, val[2])
    
    result
end

def _reduce_201(val, _values, result)
      result = new_call val[0], :"&", s(:arglist, val[2])
    
    result
end

def _reduce_202(val, _values, result)
      result = new_call val[0], :"<=>", s(:arglist, val[2])
    
    result
end

def _reduce_203(val, _values, result)
      result = new_call val[0], :">", s(:arglist, val[2])
    
    result
end

def _reduce_204(val, _values, result)
      result = new_call val[0], :">=", s(:arglist, val[2])
    
    result
end

def _reduce_205(val, _values, result)
      result = new_call val[0], :"<", s(:arglist, val[2])
    
    result
end

def _reduce_206(val, _values, result)
      result = new_call val[0], :"<=", s(:arglist, val[2])
    
    result
end

def _reduce_207(val, _values, result)
      result = new_call val[0], :"==", s(:arglist, val[2])
    
    result
end

def _reduce_208(val, _values, result)
      result = new_call val[0], :"===", s(:arglist, val[2])
    
    result
end

def _reduce_209(val, _values, result)
      result = s(:not, new_call(val[0], :"==", s(:arglist, val[2])))
    
    result
end

def _reduce_210(val, _values, result)
      result = new_call val[0], :"=~", s(:arglist, val[2])
    
    result
end

def _reduce_211(val, _values, result)
      result = s(:not, new_call(val[0], :"=~", s(:arglist, val[2])))
    
    result
end

def _reduce_212(val, _values, result)
      result = s(:not, val[1])
    
    result
end

def _reduce_213(val, _values, result)
      result = new_call val[1], :"~", s(:arglist)
    
    result
end

def _reduce_214(val, _values, result)
      result = new_call val[0], :"<<", s(:arglist, val[2])
    
    result
end

def _reduce_215(val, _values, result)
      result = new_call val[0], :">>", s(:arglist, val[2])
    
    result
end

def _reduce_216(val, _values, result)
      result = s(:and, val[0], val[2])
      result.line = val[0].line
    
    result
end

def _reduce_217(val, _values, result)
      result = s(:or, val[0], val[2])
      result.line = val[0].line
    
    result
end

def _reduce_218(val, _values, result)
      result = s(:defined, val[2])
    
    result
end

def _reduce_219(val, _values, result)
      result = s(:if, val[0], val[2], val[4])
      result.line = val[0].line
    
    result
end

# reduce 220 omitted

# reduce 221 omitted

def _reduce_222(val, _values, result)
      result = nil
    
    result
end

def _reduce_223(val, _values, result)
      result = val[0]
    
    result
end

def _reduce_224(val, _values, result)
      val[0] << s(:hash, *val[2])
      result = val[0]
    
    result
end

def _reduce_225(val, _values, result)
      result = s(:array, s(:hash, *val[0]))
    
    result
end

def _reduce_226(val, _values, result)
      result = nil
    
    result
end

def _reduce_227(val, _values, result)
      result = val[1]
    
    result
end

# reduce 228 omitted

# reduce 229 omitted

# reduce 230 omitted

# reduce 231 omitted

def _reduce_232(val, _values, result)
      result = s(:array, val[0])
    
    result
end

def _reduce_233(val, _values, result)
      result = val[0]
      add_block_pass val[0], val[1]
    
    result
end

def _reduce_234(val, _values, result)
      result = s(:arglist, s(:hash, *val[0]))
      add_block_pass result, val[1]
    
    result
end

def _reduce_235(val, _values, result)
      result = val[0]
      result << s(:hash, *val[2])
    
    result
end

def _reduce_236(val, _values, result)
      result = s(:arglist)
      add_block_pass result, val[0]
    
    result
end

# reduce 237 omitted

# reduce 238 omitted

def _reduce_239(val, _values, result)
      lexer.cmdarg_push 1
    
    result
end

def _reduce_240(val, _values, result)
      lexer.cmdarg_pop
      result = val[1]
    
    result
end

# reduce 241 omitted

def _reduce_242(val, _values, result)
      result = nil
    
    result
end

def _reduce_243(val, _values, result)
      result = val[1]
    
    result
end

def _reduce_244(val, _values, result)
      result = s(:block_pass, val[1])
    
    result
end

def _reduce_245(val, _values, result)
      result = val[1]
    
    result
end

def _reduce_246(val, _values, result)
      result = nil
    
    result
end

def _reduce_247(val, _values, result)
      result = s(:array, val[0])
    
    result
end

def _reduce_248(val, _values, result)
      result = s(:array, s(:splat, val[1]))
    
    result
end

def _reduce_249(val, _values, result)
      result = val[0] << val[2]
    
    result
end

def _reduce_250(val, _values, result)
      result  = val[0] << s(:splat, val[3])
    
    result
end

def _reduce_251(val, _values, result)
      val[0] << val[2]
      result = val[0]
    
    result
end

# reduce 252 omitted

def _reduce_253(val, _values, result)
      result = s(:splat, val[1])
    
    result
end

# reduce 254 omitted

# reduce 255 omitted

# reduce 256 omitted

# reduce 257 omitted

# reduce 258 omitted

# reduce 259 omitted

# reduce 260 omitted

# reduce 261 omitted

# reduce 262 omitted

def _reduce_263(val, _values, result)
      result = lexer.line
    
    result
end

def _reduce_264(val, _values, result)
      result = s(:begin, val[2])
      result.line = val[1]
    
    result
end

def _reduce_265(val, _values, result)
      result = val[1]
    
    result
end

def _reduce_266(val, _values, result)
      result = s(:paren, val[1] || s(:nil))
    
    result
end

def _reduce_267(val, _values, result)
      result = s(:colon2, val[0], val[2].intern)
    
    result
end

def _reduce_268(val, _values, result)
      result = s(:colon3, val[1])
    
    result
end

def _reduce_269(val, _values, result)
      result = new_call val[0], :[], val[2]
    
    result
end

def _reduce_270(val, _values, result)
      result = val[1] || s(:array)
    
    result
end

def _reduce_271(val, _values, result)
      result = s(:hash, *val[1])
    
    result
end

def _reduce_272(val, _values, result)
      result = s(:return)
    
    result
end

def _reduce_273(val, _values, result)
      result = new_yield val[2]
    
    result
end

def _reduce_274(val, _values, result)
      result = s(:yield)
    
    result
end

def _reduce_275(val, _values, result)
      result = s(:yield)
    
    result
end

def _reduce_276(val, _values, result)
      result = s(:defined, val[3])
    
    result
end

def _reduce_277(val, _values, result)
      result = s(:not, val[2])
      result.line = val[2].line
    
    result
end

def _reduce_278(val, _values, result)
      result = s(:not, s(:nil))
    
    result
end

def _reduce_279(val, _values, result)
      result = new_call nil, val[0].intern, s(:arglist)
      result << val[1]
    
    result
end

# reduce 280 omitted

def _reduce_281(val, _values, result)
      val[0] << val[1]
      result = val[0]
    
    result
end

def _reduce_282(val, _values, result)
      result = val[1]
    
    result
end

def _reduce_283(val, _values, result)
      result = new_if val[1], val[3], val[4]
    
    result
end

def _reduce_284(val, _values, result)
      result = new_if val[1], val[4], val[3]
    
    result
end

def _reduce_285(val, _values, result)
      lexer.cond_push 1
      result = lexer.line
    
    result
end

def _reduce_286(val, _values, result)
      lexer.cond_pop
    
    result
end

def _reduce_287(val, _values, result)
      result = s(:while, val[2], val[5], true)
      result.line = val[1]
    
    result
end

def _reduce_288(val, _values, result)
      lexer.cond_push 1
      result = lexer.line
    
    result
end

def _reduce_289(val, _values, result)
      lexer.cond_pop
    
    result
end

def _reduce_290(val, _values, result)
      result = s(:until, val[2], val[5], true)
      result.line = val[1]
    
    result
end

def _reduce_291(val, _values, result)
      result = s(:case, val[1], *val[3])
      result.line = val[1].line
    
    result
end

def _reduce_292(val, _values, result)
      result = s(:case, nil, *val[2])
      # result.line = val[2].line
    
    result
end

def _reduce_293(val, _values, result)
      result = s(:case, nil, val[3])
      # result.line = val[3].line
    
    result
end

def _reduce_294(val, _values, result)
      result = "this.cond_push(1);"
    
    result
end

def _reduce_295(val, _values, result)
      result = "this.cond_pop();"
    
    result
end

# reduce 296 omitted

def _reduce_297(val, _values, result)
      result = lexer.line
    
    result
end

def _reduce_298(val, _values, result)
      # ...
    
    result
end

def _reduce_299(val, _values, result)
      result = new_class val[2], val[3], val[5]
      result.line = val[1]
      result.end_line = lexer.line
    
    result
end

def _reduce_300(val, _values, result)
      result = lexer.line
    
    result
end

def _reduce_301(val, _values, result)
      # ...
    
    result
end

def _reduce_302(val, _values, result)
      result = new_sclass val[3], val[6]
      result.line = val[2]
    
    result
end

def _reduce_303(val, _values, result)
      result = lexer.line
    
    result
end

def _reduce_304(val, _values, result)
      # ...
    
    result
end

def _reduce_305(val, _values, result)
      result = new_module val[2], val[4]
      result.line = val[1]
      result.end_line = lexer.line
    
    result
end

def _reduce_306(val, _values, result)
      result = lexer.scope_line
      push_scope
    
    result
end

def _reduce_307(val, _values, result)
      result = new_def val[2], nil, val[1], val[3], val[4]
      pop_scope
    
    result
end

def _reduce_308(val, _values, result)
       lexer.lex_state = :expr_fname
    
    result
end

def _reduce_309(val, _values, result)
      result = lexer.scope_line
      push_scope
    
    result
end

def _reduce_310(val, _values, result)
      result = new_def val[5], val[1], val[4], val[6], val[7]
      pop_scope
    
    result
end

def _reduce_311(val, _values, result)
      result = s(:break)
    
    result
end

def _reduce_312(val, _values, result)
      result = s(:next)
    
    result
end

def _reduce_313(val, _values, result)
      result = s(:redo)
    
    result
end

# reduce 314 omitted

# reduce 315 omitted

# reduce 316 omitted

# reduce 317 omitted

# reduce 318 omitted

# reduce 319 omitted

# reduce 320 omitted

# reduce 321 omitted

# reduce 322 omitted

def _reduce_323(val, _values, result)
      result = new_call nil, :lambda, s(:arglist)
      result << new_iter(val[0], val[1])
    
    result
end

def _reduce_324(val, _values, result)
      result = val[1]
    
    result
end

def _reduce_325(val, _values, result)
      result = nil
    
    result
end

# reduce 326 omitted

# reduce 327 omitted

def _reduce_328(val, _values, result)
      result = val[1]
    
    result
end

def _reduce_329(val, _values, result)
      result = val[1]
    
    result
end

def _reduce_330(val, _values, result)
      result = val[0]
    
    result
end

def _reduce_331(val, _values, result)
      result = lexer.line
    
    result
end

def _reduce_332(val, _values, result)
      result = s(:if, val[2], val[4], val[5])
      result.line = val[1]
    
    result
end

# reduce 333 omitted

def _reduce_334(val, _values, result)
      result = val[1]
    
    result
end

def _reduce_335(val, _values, result)
      result = s(:block, val[0])
    
    result
end

def _reduce_336(val, _values, result)
      val[0] << val[2]
      result = val[0]
    
    result
end

def _reduce_337(val, _values, result)
      result = new_assign new_assignable(s(:identifier, val[0].intern)), val[2]
    
    result
end

# reduce 338 omitted

def _reduce_339(val, _values, result)
      result = 0
    
    result
end

def _reduce_340(val, _values, result)
      result = 0
    
    result
end

def _reduce_341(val, _values, result)
      result = val[1]
    
    result
end

def _reduce_342(val, _values, result)
       result = val[0]
     
    result
end

def _reduce_343(val, _values, result)
      result = val[1]
    
    result
end

def _reduce_344(val, _values, result)
      nil
    
    result
end

def _reduce_345(val, _values, result)
      result = new_block_args val[0], val[2], val[4], val[5]
    
    result
end

def _reduce_346(val, _values, result)
      result = new_block_args val[0], val[2], nil, val[3]
    
    result
end

def _reduce_347(val, _values, result)
      result = new_block_args val[0], nil, val[2], val[3]
    
    result
end

def _reduce_348(val, _values, result)
      result = new_block_args val[0], nil, nil, nil
    
    result
end

def _reduce_349(val, _values, result)
      result = new_block_args val[0], nil, nil, val[1]
    
    result
end

def _reduce_350(val, _values, result)
      result = new_block_args nil, val[0], val[2], val[3]
    
    result
end

def _reduce_351(val, _values, result)
      result = new_block_args nil, val[0], nil, val[1]
    
    result
end

def _reduce_352(val, _values, result)
      result = new_block_args nil, nil, val[0], val[1]
    
    result
end

def _reduce_353(val, _values, result)
      result = new_block_args nil, nil, nil, val[0]
    
    result
end

def _reduce_354(val, _values, result)
      push_scope :block
      result = lexer.line
    
    result
end

def _reduce_355(val, _values, result)
      result = new_iter val[2], val[3]
      result.line = val[1]
      pop_scope
    
    result
end

def _reduce_356(val, _values, result)
      val[0] << val[1]
      result = val[0]
    
    result
end

# reduce 357 omitted

# reduce 358 omitted

def _reduce_359(val, _values, result)
      result = new_call nil, val[0].intern, val[1]
    
    result
end

def _reduce_360(val, _values, result)
      result = new_call val[0], val[2].intern, val[3]
    
    result
end

def _reduce_361(val, _values, result)
      result = new_call val[0], :call, val[2]
    
    result
end

def _reduce_362(val, _values, result)
      result = new_call val[0], val[2].intern, val[3]
    
    result
end

def _reduce_363(val, _values, result)
      result = new_call val[0], val[2].intern, s(:arglist)
    
    result
end

def _reduce_364(val, _values, result)
      result = new_super val[1]
    
    result
end

def _reduce_365(val, _values, result)
      result = s(:super, nil)
    
    result
end

def _reduce_366(val, _values, result)
      push_scope :block
      result = lexer.line
    
    result
end

def _reduce_367(val, _values, result)
      result = new_iter val[2], val[3]
      result.line = val[1]
      pop_scope
    
    result
end

def _reduce_368(val, _values, result)
      push_scope :block
      result = lexer.line
    
    result
end

def _reduce_369(val, _values, result)
      result = new_iter val[2], val[3]
      result.line = val[1]
      pop_scope
    
    result
end

def _reduce_370(val, _values, result)
      result = lexer.line
    
    result
end

def _reduce_371(val, _values, result)
      part = s(:when, val[2], val[4])
      part.line = val[2].line
      result = [part]
      result.push *val[5] if val[5]
    
    result
end

def _reduce_372(val, _values, result)
      result = [val[0]]
    
    result
end

# reduce 373 omitted

def _reduce_374(val, _values, result)
      exc = val[1] || s(:array)
      exc << new_assign(val[2], s(:gvar, '$!'.intern)) if val[2]
      result = [s(:resbody, exc, val[4])]
      result.push val[5].first if val[5]
    
    result
end

def _reduce_375(val, _values, result)
      result = nil
    
    result
end

def _reduce_376(val, _values, result)
      result = s(:array, val[0])
    
    result
end

# reduce 377 omitted

# reduce 378 omitted

def _reduce_379(val, _values, result)
      result = val[1]
    
    result
end

def _reduce_380(val, _values, result)
      result = nil
    
    result
end

def _reduce_381(val, _values, result)
      result = val[1].nil? ? s(:nil) : val[1]
    
    result
end

# reduce 382 omitted

# reduce 383 omitted

# reduce 384 omitted

# reduce 385 omitted

def _reduce_386(val, _values, result)
      result = new_str val[0]
    
    result
end

# reduce 387 omitted

# reduce 388 omitted

def _reduce_389(val, _values, result)
      result = val[1]
    
    result
end

def _reduce_390(val, _values, result)
      result = s(:str, val[0])
    
    result
end

def _reduce_391(val, _values, result)
      result = new_xstr val[1]
    
    result
end

def _reduce_392(val, _values, result)
      result = new_regexp val[1], val[2]
    
    result
end

def _reduce_393(val, _values, result)
      result = s(:array)
    
    result
end

def _reduce_394(val, _values, result)
      result = val[1]
    
    result
end

def _reduce_395(val, _values, result)
      result = s(:array)
    
    result
end

def _reduce_396(val, _values, result)
      part = val[1]
      part = s(:dstr, "", val[1]) if part.type == :evstr
      result = val[0] << part
    
    result
end

def _reduce_397(val, _values, result)
      result = val[0]
    
    result
end

def _reduce_398(val, _values, result)
      result = val[0].concat([val[1]])
    
    result
end

def _reduce_399(val, _values, result)
      result = s(:array)
    
    result
end

def _reduce_400(val, _values, result)
      result = val[1]
    
    result
end

def _reduce_401(val, _values, result)
      result = s(:array)
    
    result
end

def _reduce_402(val, _values, result)
      result = val[0] << s(:str, val[1])
    
    result
end

def _reduce_403(val, _values, result)
      result = nil
    
    result
end

def _reduce_404(val, _values, result)
      result = str_append val[0], val[1]
    
    result
end

def _reduce_405(val, _values, result)
      result = nil
    
    result
end

def _reduce_406(val, _values, result)
      result = str_append val[0], val[1]
    
    result
end

def _reduce_407(val, _values, result)
      result = s(:str, val[0])
    
    result
end

def _reduce_408(val, _values, result)
      result = lexer.string_parse
      lexer.string_parse = nil
    
    result
end

def _reduce_409(val, _values, result)
      lexer.string_parse = val[1]
      result = s(:evstr, val[2])
    
    result
end

def _reduce_410(val, _values, result)
      lexer.cond_push 0
      lexer.cmdarg_push 0
      result = lexer.string_parse
      lexer.string_parse = nil
      lexer.lex_state = :expr_beg
    
    result
end

def _reduce_411(val, _values, result)
      lexer.string_parse = val[1]
      lexer.cond_lexpop
      lexer.cmdarg_lexpop
      result = s(:evstr, val[2])
    
    result
end

def _reduce_412(val, _values, result)
      result = s(:gvar, val[0].intern)
    
    result
end

def _reduce_413(val, _values, result)
      result = s(:ivar, val[0].intern)
    
    result
end

def _reduce_414(val, _values, result)
      result = s(:cvar, val[0].intern)
    
    result
end

# reduce 415 omitted

def _reduce_416(val, _values, result)
      result = s(:sym, val[1].intern)
      lexer.lex_state = :expr_end
    
    result
end

def _reduce_417(val, _values, result)
      result = s(:sym, val[0].intern)
    
    result
end

# reduce 418 omitted

# reduce 419 omitted

# reduce 420 omitted

# reduce 421 omitted

def _reduce_422(val, _values, result)
      result = new_dsym val[1]
    
    result
end

def _reduce_423(val, _values, result)
      result = s(:int, val[0])
    
    result
end

def _reduce_424(val, _values, result)
      result = s(:float, val[0])
    
    result
end

# reduce 425 omitted

# reduce 426 omitted

def _reduce_427(val, _values, result)
      result = s(:identifier, val[0].intern)
    
    result
end

def _reduce_428(val, _values, result)
      result = s(:ivar, val[0].intern)
    
    result
end

def _reduce_429(val, _values, result)
      result = s(:gvar, val[0].intern)
    
    result
end

def _reduce_430(val, _values, result)
      result = s(:const, val[0].intern)
    
    result
end

def _reduce_431(val, _values, result)
      result = s(:cvar, val[0].intern)
    
    result
end

def _reduce_432(val, _values, result)
      result = s(:nil)
    
    result
end

def _reduce_433(val, _values, result)
      result = s(:self)
    
    result
end

def _reduce_434(val, _values, result)
      result = s(:true)
    
    result
end

def _reduce_435(val, _values, result)
      result = s(:false)
    
    result
end

def _reduce_436(val, _values, result)
      result = s(:str, self.file)
    
    result
end

def _reduce_437(val, _values, result)
      result = s(:int, lexer.line)
    
    result
end

def _reduce_438(val, _values, result)
      result = new_var_ref val[0]
    
    result
end

def _reduce_439(val, _values, result)
      result = new_assignable val[0]
    
    result
end

def _reduce_440(val, _values, result)
      result = s(:nth_ref, val[0])
    
    result
end

# reduce 441 omitted

def _reduce_442(val, _values, result)
      result = nil
    
    result
end

def _reduce_443(val, _values, result)
      result = val[1]
    
    result
end

def _reduce_444(val, _values, result)
      result = nil
    
    result
end

def _reduce_445(val, _values, result)
      result = val[1]
      lexer.lex_state = :expr_beg
    
    result
end

def _reduce_446(val, _values, result)
      result = val[0]
    
    result
end

def _reduce_447(val, _values, result)
      result = new_args val[0], val[2], val[4], val[5]
    
    result
end

def _reduce_448(val, _values, result)
      result = new_args val[0], val[2], nil, val[3]
    
    result
end

def _reduce_449(val, _values, result)
      result = new_args val[0], nil, val[2], val[3]
    
    result
end

def _reduce_450(val, _values, result)
      result = new_args val[0], nil, nil, val[1]
    
    result
end

def _reduce_451(val, _values, result)
      result = new_args nil, val[0], val[2], val[3]
    
    result
end

def _reduce_452(val, _values, result)
      result = new_args nil, val[0], nil, val[1]
    
    result
end

def _reduce_453(val, _values, result)
      result = new_args nil, nil, val[0], val[1]
    
    result
end

def _reduce_454(val, _values, result)
      result = new_args nil, nil, nil, val[0]
    
    result
end

def _reduce_455(val, _values, result)
      result = s(:args)
    
    result
end

def _reduce_456(val, _values, result)
      raise 'formal argument cannot be a constant'
    
    result
end

def _reduce_457(val, _values, result)
      raise 'formal argument cannot be an instance variable'
    
    result
end

def _reduce_458(val, _values, result)
      raise 'formal argument cannot be a class variable'
    
    result
end

def _reduce_459(val, _values, result)
      raise 'formal argument cannot be a global variable'
    
    result
end

def _reduce_460(val, _values, result)
      result = val[0].intern
      scope.add_local result
    
    result
end

def _reduce_461(val, _values, result)
      result = val[0]
    
    result
end

def _reduce_462(val, _values, result)
      result = val[1]
    
    result
end

def _reduce_463(val, _values, result)
      result = s(:lasgn, val[0])
    
    result
end

# reduce 464 omitted

def _reduce_465(val, _values, result)
      result = s(:array, val[0])
    
    result
end

def _reduce_466(val, _values, result)
      val[0] << val[2]
      result = val[0]
    
    result
end

# reduce 467 omitted

# reduce 468 omitted

# reduce 469 omitted

# reduce 470 omitted

# reduce 471 omitted

def _reduce_472(val, _values, result)
      result = [val[0]]
    
    result
end

def _reduce_473(val, _values, result)
      val[0] << val[2]
      result = val[0]
    
    result
end

def _reduce_474(val, _values, result)
      result = new_assign new_assignable(s(:identifier, val[0].intern)), val[2]
    
    result
end

def _reduce_475(val, _values, result)
      result = s(:block, val[0])
    
    result
end

def _reduce_476(val, _values, result)
      result = val[0]
      val[0] << val[2]
    
    result
end

# reduce 477 omitted

# reduce 478 omitted

def _reduce_479(val, _values, result)
      result = "*#{val[1]}".intern
    
    result
end

def _reduce_480(val, _values, result)
      result = :"*"
    
    result
end

# reduce 481 omitted

# reduce 482 omitted

def _reduce_483(val, _values, result)
      result = "&#{val[1]}".intern
    
    result
end

def _reduce_484(val, _values, result)
      result = val[1]
    
    result
end

def _reduce_485(val, _values, result)
      result = nil
    
    result
end

def _reduce_486(val, _values, result)
      result = val[0]
    
    result
end

def _reduce_487(val, _values, result)
      result = val[1]
    
    result
end

def _reduce_488(val, _values, result)
      result = []
    
    result
end

def _reduce_489(val, _values, result)
      result = val[0]
    
    result
end

def _reduce_490(val, _values, result)
      raise "unsupported assoc list type (#@line_number)"
    
    result
end

def _reduce_491(val, _values, result)
      result = val[0]
    
    result
end

def _reduce_492(val, _values, result)
      result = val[0].push *val[2]
    
    result
end

def _reduce_493(val, _values, result)
      result = [val[0], val[2]]
    
    result
end

def _reduce_494(val, _values, result)
      result = [s(:sym, val[0].intern), val[1]]
    
    result
end

# reduce 495 omitted

# reduce 496 omitted

# reduce 497 omitted

# reduce 498 omitted

# reduce 499 omitted

# reduce 500 omitted

# reduce 501 omitted

# reduce 502 omitted

# reduce 503 omitted

# reduce 504 omitted

# reduce 505 omitted

# reduce 506 omitted

# reduce 507 omitted

# reduce 508 omitted

# reduce 509 omitted

# reduce 510 omitted

# reduce 511 omitted

# reduce 512 omitted

# reduce 513 omitted

# reduce 514 omitted

# reduce 515 omitted

# reduce 516 omitted

# reduce 517 omitted

# reduce 518 omitted

# reduce 519 omitted

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module Opal
