#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.10
# from Racc grammer file "".
#

require 'racc/parser.rb'
module Opal
  class Parser < Racc::Parser


##### State transition tables begin ###

clist = [
'63,64,65,7,51,555,579,694,57,58,201,202,541,61,591,59,60,62,23,24,66',
'67,661,-502,268,-64,22,28,27,89,88,90,91,579,709,17,584,763,201,202',
'509,6,41,8,9,93,92,83,50,85,84,86,87,94,95,223,81,82,744,38,39,37,-75',
'73,477,621,581,580,586,201,202,74,260,-436,555,-92,590,340,339,261,-436',
'36,555,-91,30,-502,220,52,-94,555,222,221,32,581,580,555,40,100,620',
'742,263,-90,99,100,18,693,-502,267,99,79,73,75,76,77,78,100,-82,554',
'74,80,99,-440,63,64,65,304,51,56,-440,268,57,58,-436,53,54,61,708,59',
'60,62,254,255,66,67,621,272,268,-92,253,287,291,89,88,90,91,100,304',
'215,-504,-83,99,-84,201,202,41,304,741,93,92,83,50,85,84,86,87,94,95',
'620,81,82,-82,38,39,37,100,-92,554,-92,694,99,-92,263,100,-91,554,-91',
'694,99,-91,100,432,554,848,206,99,100,210,554,263,52,99,-90,267,-90',
'-90,765,-90,-82,40,201,202,579,-504,-83,-82,-84,214,522,621,267,524',
'79,73,75,76,77,78,-267,-524,579,74,80,201,202,-267,-524,-524,-524,-95',
'56,-524,-524,-524,100,-524,53,54,263,99,574,-83,620,-84,-524,-524,-524',
'575,-83,-274,-84,297,298,617,-524,-524,-274,-524,-524,-524,-524,-524',
'581,580,621,100,768,693,562,579,99,725,579,100,100,693,263,-267,99,99',
'581,580,577,-524,-524,-524,-524,-524,-524,-524,-524,-524,-524,-524,-524',
'-524,-524,620,512,-524,-524,-524,-445,477,-524,513,263,-524,-274,223',
'-524,200,-524,561,-524,562,-524,825,-524,-524,-524,-524,-524,-524,-524',
'602,-524,-524,-524,581,580,592,581,580,582,100,522,223,893,524,99,-524',
'-524,-524,-524,894,-524,-508,505,506,-88,-444,-87,-524,-508,-508,-508',
'430,-444,-95,-508,-508,638,-508,753,-89,-84,198,-433,639,768,705,-508',
'-92,199,-433,100,705,777,787,768,99,-508,-508,703,-508,-508,-508,-508',
'-508,522,201,202,526,428,-443,638,892,-275,-267,501,429,-443,639,470',
'-275,-267,502,477,304,-444,-508,-508,-508,-508,-508,-508,-508,-508,-508',
'-508,-508,-508,-508,-508,-273,197,-508,-508,-508,704,607,-273,-273,-273',
'-508,704,774,-273,-273,100,-273,-508,304,-508,99,-508,-508,-508,-508',
'-508,-508,-508,430,-508,-508,-508,-275,-267,500,-273,-273,-445,-273',
'-273,-273,-273,-273,-436,-508,-508,862,-83,509,-508,-436,-273,-274,-274',
'-91,-444,-508,775,-273,-274,-274,538,-444,-505,-273,-273,-273,-273,-273',
'-273,-273,-273,-273,-273,-273,-273,-273,-273,-80,-438,-273,-273,-273',
'-441,610,-88,-438,541,-273,-86,-441,337,336,340,339,-273,-94,-273,510',
'-273,-273,-273,-273,-273,-273,-273,-273,-273,-273,-273,-273,-274,-274',
'-273,-444,-273,100,-442,-505,-439,-505,99,-273,-273,-442,-85,-439,-273',
'-321,-506,-506,-506,-93,-506,-273,-321,394,-506,-506,778,396,395,-506',
'779,-506,-506,-506,-506,-506,-506,-506,522,340,339,524,-506,-506,-506',
'-506,-506,-506,-506,541,522,-506,-273,521,-273,782,597,511,-506,862',
'468,-506,-506,-506,-506,-506,-506,-506,-506,-506,-506,768,-506,-506',
'-321,-506,-506,-506,223,227,232,233,234,229,231,239,240,235,236,791',
'216,217,-275,792,237,238,468,-506,465,-275,-506,-506,-254,-506,337,336',
'340,339,-506,220,-506,226,-506,222,221,218,219,230,228,224,-506,225',
'531,532,727,-506,-506,-506,-506,-506,-506,787,768,223,-506,-506,304',
'241,211,-226,701,434,-506,-506,63,64,65,7,51,-506,-506,-275,57,58,433',
'525,697,61,562,59,60,62,23,24,66,67,807,809,812,813,22,28,27,89,88,90',
'91,431,543,17,332,330,329,331,597,6,41,8,9,93,92,83,50,85,84,86,87,94',
'95,223,81,82,815,38,39,37,223,227,232,233,234,229,231,239,240,235,236',
'528,216,217,470,689,237,238,-255,36,686,684,30,-63,220,52,601,535,222',
'221,32,220,674,226,40,222,221,218,219,230,228,224,18,225,538,539,397',
'79,73,75,76,77,78,676,541,731,74,80,550,241,63,64,65,669,51,56,826,-82',
'57,58,827,53,54,61,-90,59,60,62,254,255,66,67,828,263,263,668,253,28',
'27,89,88,90,91,242,385,215,-81,831,337,336,340,339,41,-89,832,93,92',
'83,50,85,84,86,87,94,95,661,81,82,667,38,39,37,223,227,232,233,234,229',
'231,239,240,235,236,834,216,217,376,-253,237,238,838,206,551,494,210',
'817,818,52,819,94,95,759,252,220,843,226,40,222,221,218,219,230,228',
'224,214,225,845,373,661,79,73,75,76,77,78,352,515,387,74,80,676,241',
'-504,-226,851,653,257,56,63,64,65,7,51,53,54,563,57,58,855,856,304,61',
'651,59,60,62,23,24,66,67,-75,758,304,866,22,28,27,89,88,90,91,-256,650',
'17,470,337,336,340,339,6,41,8,9,93,92,83,50,85,84,86,87,94,95,867,81',
'82,869,38,39,37,223,227,232,233,234,229,231,239,240,235,236,296,216',
'217,648,295,237,238,-505,36,503,242,30,879,543,52,332,330,329,331,32',
'220,880,226,40,222,221,218,219,230,228,224,18,225,242,640,883,79,73',
'75,76,77,78,495,885,886,74,80,812,241,63,64,65,7,51,56,812,813,57,58',
'304,53,54,61,635,59,60,62,23,24,66,67,223,223,223,895,22,28,27,89,88',
'90,91,223,196,17,102,103,104,105,106,6,41,8,9,93,92,83,50,85,84,86,87',
'94,95,496,81,82,195,38,39,37,223,227,232,233,234,229,231,239,240,235',
'236,901,216,217,585,194,237,238,667,36,193,263,30,589,600,52,192,911',
'812,913,32,220,914,226,40,222,221,218,219,230,228,224,18,225,-253,599',
'96,79,73,75,76,77,78,595,752,596,74,80,,241,-507,-507,-507,223,-507',
'56,,,-507,-507,,53,54,-507,,-507,-507,-507,-507,-507,-507,-507,,,,,-507',
'-507,-507,-507,-507,-507,-507,,220,-507,,,222,221,218,219,-507,,,-507',
'-507,-507,-507,-507,-507,-507,-507,-507,-507,,-507,-507,,-507,-507,-507',
'223,227,232,233,234,229,231,239,240,235,236,,216,217,,,237,238,,-507',
',,-507,-507,,-507,,,,,-507,220,-507,226,-507,222,221,218,219,230,228',
'224,-507,225,,,,-507,-507,-507,-507,-507,-507,,,,-507,-507,,241,618',
',,,-507,-507,63,64,65,7,51,-507,-507,,57,58,,,,61,,59,60,62,23,24,66',
'67,,,,,22,28,27,89,88,90,91,,,17,102,103,104,105,106,6,41,8,9,93,92',
'83,50,85,84,86,87,94,95,,81,82,,38,39,37,223,227,232,233,234,229,231',
'239,240,235,236,,216,217,,,237,238,,36,,,30,,,52,,,,,32,220,,226,40',
'222,221,218,219,230,228,224,18,225,,,,79,73,75,76,77,78,,,,74,80,,241',
'63,64,65,223,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253',
'287,291,89,88,90,91,,220,215,,,222,221,218,219,41,,,93,92,83,50,85,84',
'86,87,94,95,,81,82,,38,39,37,223,227,232,233,234,229,231,239,240,235',
'236,,216,217,,,237,238,,206,,,210,,,52,,,,,626,220,250,226,40,222,221',
'218,219,230,228,224,214,225,,,,79,73,75,76,77,78,,,,74,80,,241,63,64',
'65,7,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88',
'90,91,,,17,102,103,104,105,106,6,41,8,9,93,92,83,50,85,84,86,87,94,95',
',81,82,,38,39,37,223,227,232,233,234,229,231,239,240,235,236,,216,217',
',,237,238,,36,,,30,,,52,,,,,32,220,,226,40,222,221,218,219,230,228,224',
'18,225,,,,79,73,75,76,77,78,,,,74,80,,241,63,64,65,,51,56,,,57,58,,53',
'54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,',
',93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,223,227,232,233,234',
'229,231,239,240,235,236,,216,217,,,237,238,,206,,,210,211,,52,,,,,,220',
',226,40,222,221,218,219,230,228,224,18,225,,,,79,73,75,76,77,78,,,,74',
'80,,241,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,',
'22,28,27,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95',
',81,82,,38,39,37,223,227,232,233,234,229,231,239,240,235,236,,216,217',
',,237,238,,206,,,210,,,52,,,,,,220,,226,40,222,221,218,219,230,228,224',
'214,225,,,,79,73,75,76,77,78,,,,74,80,,241,63,64,65,7,51,56,,,57,58',
',53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,6',
'41,8,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,223,227,232,233',
'234,229,231,239,240,235,236,,216,217,,,237,238,,36,,,30,,,52,,,,,32',
'220,,226,40,222,221,218,219,230,228,224,18,225,,,,79,73,75,76,77,78',
',,,74,80,,241,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66',
'67,,,,,253,287,291,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86',
'87,94,95,,81,82,,38,39,37,223,227,232,233,234,229,231,239,240,235,236',
',216,217,,,237,238,,206,,,210,,,52,,,,,626,220,,226,40,222,221,218,219',
'230,228,224,214,225,,,,79,73,75,76,77,78,,,,74,80,,241,63,64,65,,51',
'56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253,28,27,89,88,90',
'91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,223',
'227,232,233,234,229,231,239,240,235,236,,216,217,,,237,238,,206,,,210',
',543,52,332,330,329,331,252,220,250,226,40,222,221,218,219,230,228,224',
'214,225,,,,79,73,75,76,77,78,,,,74,80,,241,,546,,,257,56,63,64,65,549',
'51,53,54,,57,58,,,,61,,59,60,62,254,255,66,67,,,,,253,28,27,89,88,90',
'91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,223',
'227,232,233,234,229,231,239,240,235,236,,216,217,,,237,238,,206,,,210',
',543,52,332,330,329,331,252,220,250,226,40,222,221,218,219,230,228,224',
'214,225,,,,79,73,75,76,77,78,,,,74,80,,241,,546,,,257,56,63,64,65,549',
'51,53,54,,57,58,,,,61,,59,60,62,254,255,66,67,,,,,253,28,27,89,88,90',
'91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,223',
'227,232,233,234,229,231,239,240,235,236,,216,217,,,237,238,,206,,,210',
',543,52,332,330,329,331,252,220,250,226,40,222,221,218,219,230,228,224',
'214,225,,,,79,73,75,76,77,78,,,,74,80,,241,,546,,,257,56,63,64,65,784',
'51,53,54,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91',
',,17,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,223,227',
'232,233,234,229,231,239,240,235,236,,216,217,,,237,238,,206,,,210,,',
'52,,,,,,220,,226,40,222,221,218,219,230,228,224,18,225,,,,79,73,75,76',
'77,78,,,,74,80,,241,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254',
'255,66,67,,,,,253,28,27,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85',
'84,86,87,94,95,,81,82,,38,39,37,223,,,,,,,,,,,,,,,,237,238,,206,,,210',
',,52,,,,,252,220,,226,40,222,221,218,219,,,224,214,225,,,,79,73,75,76',
'77,78,,-371,,74,80,,,,-371,-371,-371,257,56,-371,-371,-371,223,-371',
'53,54,,,,,,,-371,-371,-371,,,,237,238,,,-371,-371,,-371,-371,-371,-371',
'-371,,,,220,,226,,222,221,218,219,,,224,,225,,,,,,-371,-371,-371,-371',
'-371,-371,-371,-371,-371,-371,-371,-371,-371,-371,,,-371,-371,-371,',
',-371,,263,-371,,,-371,,-371,,-371,,-371,,-371,-371,-371,-371,-371,-371',
'-371,,-371,-371,-371,,719,,332,330,329,331,,,,,,-371,-371,-371,-371',
',-371,-281,,,,,,-371,-281,-281,-281,,,-281,-281,-281,,-281,223,,,334',
'713,,,,,-281,-281,337,336,340,339,,237,238,-281,-281,,-281,-281,-281',
'-281,-281,,,,,,220,,226,,222,221,218,219,,,224,,225,,,,-281,-281,-281',
'-281,-281,-281,-281,-281,-281,-281,-281,-281,-281,-281,,,-281,-281,-281',
',,-281,,272,-281,,,-281,,-281,,-281,,-281,,-281,-281,-281,-281,-281',
'-281,-281,,-281,,-281,,,,,,,,,,,,,-281,-281,-281,-281,,-281,63,64,65',
'7,51,,-281,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90',
'91,,,17,,,,,,6,41,8,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37',
'223,-526,-526,-526,-526,229,231,,,-526,-526,,,,,,237,238,,36,,,277,',
',52,,,,,32,220,,226,40,222,221,218,219,230,228,224,18,225,,,,79,73,75',
'76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254',
'255,66,67,,,,,253,287,291,89,88,90,91,,,215,,,,,,,288,,,93,92,83,50',
'85,84,86,87,94,95,,81,82,223,,324,292,332,330,329,331,,,,,,,,,237,238',
',,,,,285,,,282,,,52,,220,,,281,222,221,218,219,334,,719,,332,330,329',
'331,337,336,340,339,79,73,75,76,77,78,,746,,74,80,,,63,64,65,,51,56',
',,57,58,,53,54,61,334,59,60,62,254,255,66,67,337,336,340,339,253,287',
'291,89,88,90,91,,,215,,,,,,,288,,,93,92,83,50,85,84,86,87,94,95,223',
'81,82,,,324,292,332,330,329,331,,,,,,237,238,,,,,,,,,285,,,210,,220',
'52,226,,222,221,218,219,,,224,334,225,,,,,,,337,336,340,339,79,73,75',
'76,77,78,,,,74,80,,,,294,,,,56,63,64,65,,51,53,54,,57,58,,,,61,,59,60',
'62,254,255,66,67,,,,,253,287,291,89,88,90,91,,,215,,,,,,,288,,,93,92',
'83,50,85,84,86,87,94,95,223,81,82,,,324,292,332,330,329,331,,,,,,237',
'238,,,,,,,,,874,,,210,,220,52,226,,222,221,218,219,,,,334,319,719,,332',
'330,329,331,337,336,340,339,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51',
'56,,,57,58,,53,54,61,334,59,60,62,254,255,66,67,337,336,340,339,253',
'287,291,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,223,-526,-526,-526,-526,229,231,,,-526,-526,,,,,,237',
'238,,206,,,210,,,52,,,,,,220,,226,40,222,221,218,219,230,228,224,214',
'225,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,7,51,56,,,57,58,,53,54',
'61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,6,41,8,9',
'93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,223,-526,-526,-526,-526',
'229,231,,,-526,-526,,,,,,237,238,,36,,,30,,,52,,,,,32,220,,226,40,222',
'221,218,219,230,228,224,18,225,,,,79,73,75,76,77,78,,,,74,80,,,63,64',
'65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253,287,291',
'89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38',
'39,37,223,-526,-526,-526,-526,229,231,,,-526,-526,,,,,,237,238,,206',
',,210,,,52,,,,,,220,,226,40,222,221,218,219,230,228,224,214,225,,,,79',
'73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62',
'254,255,66,67,,,,,253,287,291,89,88,90,91,,,215,,,,,,,41,,,93,92,83',
'50,85,84,86,87,94,95,,81,82,,38,39,37,223,227,232,233,234,229,231,239',
'240,235,236,,-526,-526,,,237,238,,206,,,210,,,52,,,,,,220,,226,40,222',
'221,218,219,230,228,224,214,225,,,,79,73,75,76,77,78,,,,74,80,,,63,64',
'65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253,287,291',
'89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38',
'39,37,223,-526,-526,-526,-526,229,231,,,-526,-526,,,,,,237,238,,206',
',,210,,,52,,,,,,220,,226,40,222,221,218,219,230,228,224,214,225,,,,79',
'73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62',
'254,255,66,67,,,,,253,287,291,89,88,90,91,,,215,,,,,,,41,,,93,92,83',
'50,85,84,86,87,94,95,,81,82,,38,39,37,223,227,232,233,234,229,231,239',
',235,236,,,,,,237,238,,206,,,210,,,52,,,,,,220,,226,40,222,221,218,219',
'230,228,224,214,225,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56',
',,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253,287,291,89,88,90,91',
',,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,223',
'227,232,233,234,229,231,,,235,236,,,,,,237,238,,206,,,210,,,52,,,,,',
'220,,226,40,222,221,218,219,230,228,224,214,225,,,,79,73,75,76,77,78',
',,,74,80,,,63,64,65,7,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67',
',,,,22,28,27,89,88,90,91,,,17,,,,,,6,41,8,9,93,92,83,50,85,84,86,87',
'94,95,,81,82,,38,39,37,223,-526,-526,-526,-526,229,231,,,-526,-526,',
',,,,237,238,,36,,,30,,,52,,,,,32,220,,226,40,222,221,218,219,230,228',
'224,18,225,,,,79,73,75,76,77,78,,-268,,74,80,,,,-268,-268,-268,,56,-268',
'-268,-268,223,-268,53,54,,,,,,,,-268,-268,,,,237,238,,,-268,-268,,-268',
'-268,-268,-268,-268,,,,220,,226,,222,221,218,219,,,,,,,,,,,-268,-268',
'-268,-268,-268,-268,-268,-268,-268,-268,-268,-268,-268,-268,,,-268,-268',
'-268,,,-268,,,-268,,,-268,,-268,,-268,,-268,,-268,-268,-268,-268,-268',
'-268,-268,,-268,,-268,,,,,,,,,,,,,-268,-268,-268,-268,,-268,,,-268,-268',
',,-268,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,22,28,27',
'89,88,90,91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38',
'39,37,223,227,232,233,234,229,231,239,240,235,236,,-526,-526,,,237,238',
',206,,,210,,,52,,,,,,220,,226,40,222,221,218,219,230,228,224,18,225',
',,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59',
'60,62,254,255,66,67,,,,,253,28,27,89,88,90,91,,,215,,,,,,,41,,,93,92',
'83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210',
',,52,,,,,252,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,257',
'56,63,64,65,,51,53,54,,57,58,,,,61,,59,60,62,254,255,66,67,,,,,253,287',
'291,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82',
',38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,252,,,,40,,,,,,,,214',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,,257,56,63,64,65,,51,53,54,,57,58',
',,,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,',
',93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206',
',,210,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63',
'64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253,287,291',
'89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38',
'39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79',
'73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62',
'23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,83,50,85',
'84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,',
',,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56',
',,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17',
',,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,',
',,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,',
',,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,',
',,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95',
',81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,',
',18,,,,,79,73,75,76,77,78,,,,74,80,100,,63,64,65,99,51,56,,,57,58,,53',
'54,61,,59,60,62,254,255,66,67,,,,,253,287,291,89,88,90,91,,,215,,,,',
',,288,,,93,92,83,50,85,84,86,87,94,95,,81,82,,,719,292,332,330,329,331',
',,,,,,,,,,,,,,,285,,,30,,,52,,,,,32,,,,,334,713,,,,,,,337,336,340,339',
'79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60',
'62,254,255,66,67,,,,,253,287,291,89,88,90,91,,,215,,,,,,,41,,,93,92',
'83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210',
',,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65',
',51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253,287,291,89',
'88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39',
'37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,626,,250,,40,,,,,,,,214,,,',
',79,73,75,76,77,78,,,,74,80,,,,,,,257,56,63,64,65,,51,53,54,,57,58,',
',,61,,59,60,62,254,255,66,67,,,,,253,287,291,89,88,90,91,,,215,,,,,',
',41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,',
',,,,206,,,210,,,52,,,,,626,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,',
',74,80,,,63,64,65,7,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,',
',,22,28,27,89,88,90,91,,,17,,,,,,6,41,8,9,93,92,83,50,85,84,86,87,94',
'95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,',
',,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,7,51,56,,,57,58,,53',
'54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,6,41',
'8,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,',
',,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253',
'287,291,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,250,,40,,,,',
',,,214,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,257,56,-501,-501,-501,,-501',
'53,54,,-501,-501,,,,-501,,-501,-501,-501,-501,-501,-501,-501,,-501,',
',-501,-501,-501,-501,-501,-501,-501,,,-501,,,,,,,-501,,,-501,-501,-501',
'-501,-501,-501,-501,-501,-501,-501,,-501,-501,,-501,-501,-501,,,,,,',
',,,,,,,,,,,,,-501,,,-501,-501,,-501,,,,,-501,,-501,,-501,,,,,,,,-501',
',-501,,,-501,-501,-501,-501,-501,-501,,,,-501,-501,,,,,,,-501,-501,-502',
'-502,-502,,-502,-501,-501,,-502,-502,,,,-502,,-502,-502,-502,-502,-502',
'-502,-502,,-502,,,-502,-502,-502,-502,-502,-502,-502,,,-502,,,,,,,-502',
',,-502,-502,-502,-502,-502,-502,-502,-502,-502,-502,,-502,-502,,-502',
'-502,-502,,,,,,,,,,,,,,,,,,,,-502,,,-502,-502,,-502,,,,,-502,,-502,',
'-502,,,,,,,,-502,,-502,,,-502,-502,-502,-502,-502,-502,,,,-502,-502',
',,,,,,-502,-502,63,64,65,,51,-502,-502,,57,58,,,,61,,59,60,62,254,255',
'66,67,,,,,253,287,291,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84',
'86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,252',
',,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,7,51,56,',
',57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17',
',,,,,6,41,8,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,',
',,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78',
',,,74,80,,,63,64,65,387,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67',
',,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87,94',
'95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,',
',,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53',
'54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,',
',93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206',
',,210,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63',
'64,65,,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89',
'88,90,91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39',
'37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73',
'75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,23',
'24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,83,50,85,84',
'86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,',
',,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,7,51,56,,',
'57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17',
',,,,,6,41,8,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,',
',,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78',
',,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67',
',,,,253,287,291,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87',
'94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40',
',,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58',
',53,54,61,,59,60,62,254,255,66,67,,,,,253,287,291,89,88,90,91,,,215',
',,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,',
',,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78',
',,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67',
',,,,253,287,291,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87',
'94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40',
',,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,7,51,56,,,57,58',
',53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,6',
'41,8,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,',
',,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74',
'80,,,63,64,65,7,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22',
'28,27,89,88,90,91,,,17,,,,,,6,41,8,9,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,',
'18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61',
',59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,215,,,,,,,41,,,93,92',
'83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210',
',,52,,,,,404,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64',
'65,,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88',
'90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37',
',,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,404,,,,40,,,,,,,,214,,,,,79,73',
'75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,23',
'24,66,67,,,,,22,28,27,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84',
'86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,',
',,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,',
'57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253,28,27,89,88,90,91,,',
'215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,',
',,,,,,,,,,,,,206,,,210,,,52,,,,,252,,,,40,,,,,,,,214,,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,257,56,63,64,65,,51,53,54,,57,58,,,,61,,59,60,62',
'254,255,66,67,,,,,253,287,291,89,88,90,91,,,215,,,,,,,41,,,93,92,83',
'50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,',
',52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65',
',51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90',
'91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,',
',,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75',
'76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,23,24',
'66,67,,,,,22,28,27,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86',
'87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,',
'40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57',
'58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,',
',,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,',
',,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74',
'80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22',
'28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81',
'82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,18',
',,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,',
'59,60,62,254,255,66,67,,,,,253,287,291,89,88,90,91,,,215,,,,,,,41,,',
'93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206',
',,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,,,63',
'64,65,7,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89',
'88,90,91,,,17,,,,,,6,41,8,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38',
'39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79',
'73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62',
'23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,83,50,85',
'84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,644,52',
',,,,,,250,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,7',
'51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90',
'91,,,17,,,,,,6,41,8,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37',
',,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75',
'76,77,78,,,,74,80,,,63,64,65,7,51,56,,,57,58,,53,54,61,,59,60,62,23',
'24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,6,41,8,9,93,92,83,50,85',
'84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,',
'32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,7,51,56',
',,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17',
',,,,,6,41,8,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,',
',,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78',
',,,74,80,,,,,,387,,56,63,64,65,7,51,53,54,,57,58,,,,61,,59,60,62,23',
'24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,6,41,8,9,93,92,83,50,85',
'84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,',
'32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56',
',,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17',
',,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,',
',,,,,,,,,206,,,210,,436,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78',
',,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67',
',,,,253,287,291,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87',
'94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40',
',,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58',
',53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,',
'41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,',
',,,206,,,210,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253',
'287,291,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,',
'214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,254,255,66,67,,,,,253,287,291,89,88,90,91,,,215,,,,,,,41',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,',
'206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253',
'287,291,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,',
'214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,254,255,66,67,,,,,253,287,291,89,88,90,91,,,215,,,,,,,41',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,',
'206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253',
'287,291,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,',
'214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,254,255,66,67,,,,,253,287,291,89,88,90,91,,,215,,,,,,,41',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,',
'206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253',
'287,291,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,',
'214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,254,255,66,67,,,,,253,287,291,89,88,90,91,,,215,,,,,,,41',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,',
'206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253',
'287,291,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,',
'214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,254,255,66,67,,,,,253,287,291,89,88,90,91,,,215,,,,,,,41',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,',
'206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253',
'287,291,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,',
'214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,254,255,66,67,,,,,253,287,291,89,88,90,91,,,215,,,,,,,41',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,',
'206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253',
'287,291,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,',
'214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,254,255,66,67,,,,,253,287,291,89,88,90,91,,,215,,,,,,,41',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,',
'206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253',
'287,291,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,',
'214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,254,255,66,67,,,,,253,287,291,89,88,90,91,,,215,,,,,,,41',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,',
'206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253',
'287,291,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,',
'214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,254,255,66,67,,,,,253,287,291,89,88,90,91,,,215,,,,,,,41',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,',
'206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253',
'287,291,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,',
'214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,254,255,66,67,,,,,253,287,291,89,88,90,91,,,215,,,,,,,41',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,',
'206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253',
'287,291,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,',
'214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,254,255,66,67,,,,,253,287,291,89,88,90,91,,,215,,,,,,,41',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,',
'206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253',
'287,291,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,',
'214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,254,255,66,67,,,,,253,287,291,89,88,90,91,,,215,,,,,,,41',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,',
'206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253',
'287,291,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,',
'214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,254,255,66,67,,,,,253,287,291,89,88,90,91,,,215,,,,,,,41',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,',
'206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253',
'28,27,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81',
'82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,252,,,,40,,,,,,,',
'214,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,257,56,63,64,65,,51,53,54,',
'57,58,,,,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,',
',,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,',
',,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74',
'80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253',
'287,291,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,252,,,,40,,,,',
',,,214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53',
'54,61,,59,60,62,254,255,66,67,,,,,253,287,291,89,88,90,91,,,215,,,,',
',,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,',
',,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74',
'80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253',
'287,291,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,404,,,,40,,,,',
',,,214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53',
'54,61,,59,60,62,254,255,66,67,,,,,253,287,291,89,88,90,91,,,215,,,,',
',,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,',
',,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74',
'80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253',
'287,291,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,',
'214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,254,255,66,67,,,,,253,287,291,89,88,90,91,,,215,,,,,,,288',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,,324,292,332,330,329,331,,,',
',,,,,,,,,,,,285,,,282,,,52,,,,,,,,,,334,,534,,,,,,337,336,340,339,79',
'73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62',
'254,255,66,67,,,,,253,287,291,89,88,90,91,,,215,,,,,,,288,,,93,92,83',
'50,85,84,564,87,94,95,,81,82,,,,292,,,,,,,,,,,,,,,,,,,,565,,,210,,,52',
',,,,,,,,,,,,,,,,,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,',
'57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253,287,291,89,88,90,91',
',,215,,,,,,,288,,,93,92,83,50,85,84,564,87,94,95,,81,82,,,,292,,,,,',
',,,,,,,,,,,,,,565,,,210,,,52,,,,,,,,,,,,,,,,,,,,,,79,73,75,76,77,78',
',,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67',
',,,,253,28,27,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94',
'95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,252,,250,',
'40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,257,56,63,64,65,',
'51,53,54,,57,58,,,,61,,59,60,62,254,255,66,67,,,,,253,28,27,89,88,90',
'91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,',
',,,,,,,,,,,,,,,,,,206,,,210,,,486,,,,,252,,250,,40,,,,,,,,214,,,,,79',
'73,75,76,77,78,,,,74,80,,,,,,,257,56,63,64,65,,51,53,54,,57,58,,,,61',
',59,60,62,254,255,66,67,,,,,253,28,27,89,88,90,91,,,215,,,,,,,41,,,93',
'92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,',
',210,,490,52,,,,,252,,250,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74',
'80,,,,,,,257,56,63,64,65,,51,53,54,,57,58,,,,61,,59,60,62,254,255,66',
'67,,,,,253,287,291,89,88,90,91,,,215,,,,,,,288,,,93,92,83,50,85,84,86',
'87,94,95,,81,82,,,,292,,,,,,,,,,,,,,,,,,,,285,,,282,,,52,,,,,,,,,,,',
',,,,,,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,254,255,66,67,,,,,253,287,291,89,88,90,91,,,215,,,,,,,288',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,,,292,,,,,,,,,,,,,,,,,,,,285',
',,282,,,52,,,,,,,,,,,,,,,,,,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65',
'7,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90',
'91,,,17,,,,,,6,41,8,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37',
',,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75',
'76,77,78,,,,74,80,,,63,64,65,7,51,56,,,57,58,,53,54,61,,59,60,62,23',
'24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,6,41,8,9,93,92,83,50,85',
'84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,277,,,52,,,',
',32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,7,51,56',
',,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17',
',,,,,6,41,8,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,',
',,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78',
',,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67',
',,,,253,28,27,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94',
'95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,626,,250,',
'40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,257,56,63,64,65,7',
'51,53,54,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91',
',,17,,,,,,6,41,8,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,',
',,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76',
'77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255',
'66,67,,,,,253,287,291,89,88,90,91,,,215,,,,,,,288,,,93,92,83,50,85,84',
'86,87,94,95,,81,82,,,,292,,,,,,,,,,,,,,,,,,,,285,,,210,,,52,,,,,,,,',
',,,,,,,,,,,,,79,73,75,76,77,78,,,,74,80,,,,498,,,,56,63,64,65,7,51,53',
'54,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17',
',,,,,6,41,8,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,',
',,,,,,,,,,,,36,,,277,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77',
'78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66',
'67,,,,,253,287,291,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86',
'87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,',
'40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,7,51,56,,,57',
'58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,',
',,6,41,8,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,',
',,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,',
',,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67',
',,,,253,287,291,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87',
'94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40',
',,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58',
',53,54,61,,59,60,62,254,255,66,67,,,,,253,28,27,89,88,90,91,,,215,,',
',,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,',
',,,,,,,206,,,210,,,52,,,,,252,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78',
',-273,,74,80,,,,-273,-273,-273,257,56,-273,-273,-273,,-273,53,54,,,',
',,,,-273,-273,,,,,,,,-273,-273,,-273,-273,-273,-273,-273,,,,,,,,,,,',
',,,,,,,,,,-273,-273,-273,-273,-273,-273,-273,-273,-273,-273,-273,-273',
'-273,-273,,,-273,-273,-273,,610,-273,,,-273,,,-273,,-273,,-273,,-273',
',-273,-273,-273,-273,-273,-273,-273,,-273,,-273,,,,,,,,,,,,,-273,-273',
'-273,-273,,-273,-508,,,,-93,,-273,-508,-508,-508,,,-508,-508,-508,,-508',
',,,,,,,,-508,-508,-508,,,,,,,,-508,-508,,-508,-508,-508,-508,-508,,',
',,,,,,,,,,,,,,,,,,,-508,-508,-508,-508,-508,-508,-508,-508,-508,-508',
'-508,-508,-508,-508,,,-508,-508,-508,,743,-508,,,-508,,,-508,,-508,',
'-508,,-508,,-508,-508,-508,-508,-508,-508,-508,,-508,-508,-508,,,,,',
',,,,,,,-508,-508,-508,-508,,-508,,63,64,65,-91,51,-508,,,57,58,,,,61',
',59,60,62,254,255,66,67,,,,,253,287,291,89,88,90,91,,,215,,,,,,,41,',
',93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206',
',,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,,,63',
'64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253,287,291',
'89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38',
'39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79',
'73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62',
'23,24,66,67,,,,,22,28,27,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85',
'84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,',
',,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56',
',,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253,287,291,89,88,90,91',
',,215,,,,,,,288,,,93,92,83,50,85,84,86,87,94,95,,81,82,,,,292,,,,,,',
',,,,,,,,,,,,,285,,,282,,,52,,,,,,,,,,,,,,,,,,,,,,79,73,75,76,77,78,',
',,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,',
',,22,28,27,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95',
',81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,',
',214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,215,,,,,,,41,,,93',
'92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,',
',210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,,,63',
'64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253,287,291',
'89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38',
'39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,730,,,,40,,,,,,,,214,,,',
',79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59',
'60,62,254,255,66,67,,,,,253,287,291,89,88,90,91,,,215,,,,,,,41,,,93',
'92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,',
',210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,,,63',
'64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253,287,291',
'89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38',
'39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79',
'73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62',
'254,255,66,67,,,,,253,287,291,89,88,90,91,,,215,,,,,,,41,,,93,92,83',
'50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,515',
',52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65',
'7,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90',
'91,,,17,,,,,,6,41,8,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37',
',,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75',
'76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,23,24',
'66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,83,50,85,84,86',
'87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,',
'40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58',
',53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,',
'41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,',
',,,206,,,210,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28',
'27,89,88,90,91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82',
',38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,18,,,',
',79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59',
'60,62,254,255,66,67,,,,,253,287,291,89,88,90,91,,,215,,,,,,,41,,,93',
'92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,',
',210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,,,63',
'64,65,,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89',
'88,90,91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39',
'37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73',
'75,76,77,78,,,,74,80,,,63,64,65,7,51,56,,,57,58,,53,54,61,,59,60,62',
'23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,6,41,8,9,93,92,83,50',
'85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,',
',,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51',
'56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253,287,291,89,88,90',
'91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,',
',,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,626,,,,40,,,,,,,,214,,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,257,56,63,64,65,,51,53,54,,57,58,,,,61,,59',
'60,62,254,255,66,67,,,,,253,287,291,89,88,90,91,,,215,,,,,,,41,,,93',
'92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,',
',210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,,,,,',
',257,56,63,64,65,7,51,53,54,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,22',
'28,27,89,88,90,91,,,17,,,,,,6,41,8,9,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,',
'18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,7,51,56,,,57,58,,53,54',
'61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,6,41,8,9',
'93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36',
',,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63',
'64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253,287,291',
'89,88,90,91,,,215,,,,,,,288,,,93,92,83,50,85,84,86,87,94,95,,81,82,',
',,292,,,,,,,,,,,,,,,,,,,,680,,,210,,,52,,,,,,,,,,,,,,,,,,,,,,79,73,75',
'76,77,78,,,,74,80,,,63,64,65,7,51,56,,,57,58,,53,54,61,,59,60,62,23',
'24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,6,41,8,9,93,92,83,50,85',
'84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,',
'32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,7,51,56',
',,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17',
',,,,,6,41,8,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,',
',,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78',
',,,74,80,,,63,64,65,7,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67',
',,,,22,28,27,89,88,90,91,,,17,,,,,,6,41,8,9,93,92,83,50,85,84,86,87',
'94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40',
',,,,,,,18,,,,,79,73,75,76,77,78,,-524,,74,80,,,,-524,-524,-524,,56,-524',
'-524,-524,,-524,53,54,,,,,,,,-524,,,,,,,,,-524,-524,,-524,-524,-524',
'-524,-524,,,,,,,,,,,,-524,,,,,,,-524,-524,-524,,,-524,-524,-524,,-524',
',,,,-524,,,,,-524,,-524,,,,,263,-524,-524,-524,,-524,-524,-524,-524',
'-524,,,,,,,,,,,,,-524,,,,,,,,,,,,,-524,,-524,,,-524,,-524,,,,,,,-524',
',,,,263,-524,,,,,,,,,,,,,,,,,,,,,-524,,,,,,,,,,,,,-524,,-524,,,-524',
'153,164,154,177,150,170,160,159,185,188,175,158,157,152,178,186,187',
'162,151,165,169,171,163,156,,,172,179,174,173,166,176,161,149,168,167',
'180,181,182,183,184,148,155,146,147,144,145,109,111,,,110,,,,,,,,137',
'138,,135,119,120,121,143,124,126,,,122,,,,,139,140,127,128,,,,,,,,,',
',,,132,131,,118,136,134,133,129,130,125,123,116,142,117,,,141,189,,',
',,,,,,,80,153,164,154,177,150,170,160,159,185,188,175,158,157,152,178',
'186,187,162,151,165,169,171,163,156,,,172,179,174,173,166,176,161,149',
'168,167,180,181,182,183,184,148,155,146,147,144,145,109,111,,,110,,',
',,,,,137,138,,135,119,120,121,143,124,126,,,122,,,,,139,140,127,128',
',,,,,,,,,,,,132,131,,118,136,134,133,129,130,125,123,116,142,117,,,141',
'189,,,,,,,,,,80,153,164,154,177,150,170,160,159,185,188,175,158,157',
'152,178,186,187,162,151,165,169,171,163,156,,,172,179,174,173,166,176',
'161,149,168,167,180,181,182,183,184,148,155,146,147,144,145,109,111',
'108,,110,,,,,,,,137,138,,135,119,120,121,143,124,126,,,122,,,,,139,140',
'127,128,,,,,,,,,,,,,132,131,,118,136,134,133,129,130,125,123,116,142',
'117,,,141,189,,,,,,,,,,80,153,164,154,177,150,170,160,159,185,188,175',
'158,157,152,178,186,187,162,151,165,169,171,163,156,,,172,179,174,173',
'166,176,161,149,168,167,180,181,182,183,184,148,155,146,147,144,145',
'109,111,,,110,,,,,,,,137,138,,135,119,120,121,143,124,126,,,122,,,,',
'139,140,127,128,,,,,,,,,,,,,132,131,,118,136,134,133,129,130,125,123',
'116,142,117,,,141,189,,,,,,,,,,80,153,164,154,177,150,170,160,159,185',
'188,175,158,157,152,178,186,187,162,151,165,169,171,163,156,,,172,179',
'174,173,166,176,161,149,168,167,180,181,182,183,184,148,155,146,147',
'144,145,109,111,,,110,,,,,,,,137,138,,135,119,120,121,143,124,126,,',
'122,,,,,139,140,127,128,,,,,,,,,,,,,132,131,,118,136,134,133,129,130',
'125,123,116,142,117,,,141,153,164,154,177,150,170,160,159,185,188,175',
'158,157,152,178,186,187,162,151,165,169,171,163,156,,,172,179,174,173',
'166,176,161,149,168,167,180,181,182,183,184,148,155,146,147,144,145',
'109,111,383,382,110,384,,,,,,,137,138,,135,119,120,121,143,124,126,',
',122,,,,,139,140,127,128,,,,,,,,,,,,,132,131,,118,136,134,133,129,130',
'125,123,116,142,117,,,141,153,164,154,177,150,170,160,159,185,188,175',
'158,157,152,178,186,187,162,151,165,169,171,163,156,,,172,179,174,173',
'166,176,161,149,168,167,180,181,182,183,184,148,155,146,147,144,145',
'109,111,383,382,110,384,,,,,,,137,138,,135,119,120,121,143,124,126,',
',122,,,,,139,140,127,128,,,,,,,,,,,,,132,131,,118,136,134,133,129,130',
'125,123,116,142,117,,,141,153,164,154,177,150,170,160,159,185,188,175',
'158,157,152,178,186,187,162,151,165,169,171,163,156,,,172,179,174,360',
'359,361,358,149,168,167,180,181,182,183,184,148,155,146,147,356,357',
'354,111,85,84,355,87,,,,,,,137,138,,135,119,120,121,143,124,126,,,122',
',,,,139,140,127,128,,,,,,366,,,,,,,132,131,,118,136,134,133,129,130',
'125,123,116,142,117,474,416,141,,475,,,,,,,,137,138,,135,119,120,121',
'143,124,126,,,122,,,,,139,140,127,128,,,,,,,,,,,,,132,131,,118,136,134',
'133,129,130,125,123,116,142,117,797,422,141,,795,,,,,,,,137,138,,135',
'119,120,121,143,124,126,,,122,,,,,139,140,127,128,,,,,,,,,,,,,132,131',
',118,136,134,133,129,130,125,123,116,142,117,613,422,141,,614,,,,,,',
',137,138,,135,119,120,121,143,124,126,,,122,,,,,139,140,127,128,,,,',
',,,,,,,,132,131,,118,136,134,133,129,130,125,123,116,142,117,797,422',
'141,,840,,,,,,,,137,138,,135,119,120,121,143,124,126,,,122,,,,,139,140',
'127,128,,,,,,,,,,,,,132,131,,118,136,134,133,129,130,125,123,116,142',
'117,658,422,141,,659,,,,,,,,137,138,,135,119,120,121,143,124,126,,,122',
',,,,139,140,127,128,,,,,,,,,,,,,132,131,,118,136,134,133,129,130,125',
'123,116,142,117,908,422,141,,909,,,,,,,,137,138,,135,119,120,121,143',
'124,126,,,122,,,,,139,140,127,128,,,,,,,,,,,,,132,131,,118,136,134,133',
'129,130,125,123,116,142,117,906,416,141,,907,,,,,,,,137,138,,135,119',
'120,121,143,124,126,,,122,,,,,139,140,127,128,,,,,,263,,,,,,,132,131',
',118,136,134,133,129,130,125,123,116,142,117,611,416,141,,612,,,,,,',
',137,138,,135,119,120,121,143,124,126,,,122,,,,,139,140,127,128,,,,',
',263,,,,,,,132,131,,118,136,134,133,129,130,125,123,116,142,117,474',
'416,141,,475,,,,,,,,137,138,,135,119,120,121,143,124,126,,,122,,,,,139',
'140,127,128,,,,,,,,,,,,,132,131,,118,136,134,133,129,130,125,123,116',
'142,117,474,416,141,,475,,,,,,,,137,138,,135,119,120,121,143,124,126',
',,122,,,,,139,140,127,128,,,,,,263,,,,,,,132,131,,118,136,134,133,129',
'130,125,123,116,142,117,611,416,141,,612,,,,,,,,137,138,,135,119,120',
'121,143,124,126,,,122,,,,,139,140,127,128,,,,,,263,,,,,,,132,131,,118',
'136,134,133,129,130,125,123,116,142,117,613,422,141,,614,,,,,,,,137',
'138,,135,119,120,121,143,124,126,,,122,,,,,139,140,127,128,,,,,,,,,',
',,,132,131,,118,136,134,133,129,130,125,123,116,142,117,418,422,141',
',420,,,,,,,,137,138,,135,119,120,121,143,124,126,,,122,,,,,139,140,127',
'128,,,,,,,,,,,,,132,131,,118,136,134,133,129,130,125,123,116,142,117',
'655,416,141,,656,,,,,,,,137,138,,135,119,120,121,143,124,126,,,122,',
',,,139,140,127,128,,,,,,263,,,,,,,132,131,,118,136,134,133,129,130,125',
'123,116,142,117,474,416,141,,475,,,,,,,,137,138,,135,119,120,121,143',
'124,126,,,122,,,,,139,140,127,128,,,,,,,,,,,,,132,131,,118,136,134,133',
'129,130,125,123,116,142,117,474,416,141,,475,,,,,,,,137,138,,135,119',
'120,121,143,124,126,,,122,,,,,139,140,127,128,,,,,,,,,,,,,132,131,,118',
'136,134,133,129,130,125,123,116,142,117,412,416,141,,413,,,,,,,,137',
'138,,135,119,120,121,143,124,126,,,122,,,,,139,140,127,128,,,,,,263',
',,,,,,132,131,,118,136,134,133,129,130,125,123,116,142,117,,,141' ]
        racc_action_table = arr = ::Array.new(22346, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'0,0,0,0,0,837,374,558,0,0,710,710,841,0,377,0,0,0,0,0,0,0,652,564,55',
'650,0,0,0,0,0,0,0,372,569,0,372,654,306,306,431,0,0,0,0,0,0,0,0,0,0',
'0,0,0,0,440,0,0,615,0,0,0,650,71,262,487,374,374,374,576,576,71,25,564',
'343,907,377,812,812,25,564,0,878,908,0,564,440,0,431,793,440,440,0,372',
'372,344,0,710,487,612,657,906,710,558,0,558,564,55,558,0,0,0,0,0,0,837',
'655,837,0,0,837,361,404,404,404,306,404,0,361,289,404,404,564,0,0,404',
'569,404,404,404,404,404,404,404,477,287,26,612,404,404,404,404,404,404',
'404,569,576,404,908,658,569,656,665,665,404,288,611,404,404,404,404',
'404,404,404,404,404,404,477,404,404,655,404,404,404,343,907,343,907',
'794,343,907,289,878,908,878,908,557,878,908,793,207,793,793,404,793',
'344,404,344,26,404,344,906,289,906,611,665,906,655,404,435,435,587,658',
'658,655,656,404,310,463,26,310,404,404,404,404,404,404,875,414,368,404',
'404,15,15,875,414,414,414,207,404,414,414,414,714,414,404,404,660,714',
'363,658,463,656,414,414,414,363,658,701,656,37,37,435,414,414,701,414',
'414,414,414,414,587,587,488,794,881,794,881,379,794,587,370,557,800',
'557,291,875,557,800,368,368,368,414,414,414,414,414,414,414,414,414',
'414,414,414,414,414,488,299,414,414,414,205,608,414,299,414,414,701',
'663,414,14,414,348,414,348,414,744,414,414,414,414,414,414,414,413,414',
'414,414,379,379,379,370,370,370,709,315,664,873,315,709,414,414,414',
'414,873,414,418,292,292,205,872,14,414,418,418,418,299,872,14,418,418',
'756,418,637,744,413,13,354,756,666,679,418,413,13,354,3,567,679,910',
'910,3,418,418,567,418,418,418,418,418,312,342,342,312,204,356,481,873',
'763,286,284,204,356,481,251,763,286,284,603,756,872,418,418,418,418',
'418,418,418,418,418,418,418,418,418,418,420,13,418,418,418,679,418,420',
'420,420,418,567,672,420,420,273,420,418,481,418,273,418,418,418,418',
'418,418,418,204,418,418,418,763,286,284,420,420,35,420,420,420,420,420',
'355,418,418,886,418,296,418,355,659,895,503,418,283,418,673,659,895',
'503,676,283,659,420,420,420,420,420,420,420,420,420,420,420,420,420',
'420,35,359,420,420,420,358,420,35,359,678,420,296,358,886,886,886,886',
'420,296,420,297,420,420,420,420,420,420,420,909,420,795,420,659,895',
'503,909,283,795,347,357,909,360,795,347,420,420,357,420,360,420,42,422',
'422,422,420,422,420,42,108,422,422,680,108,108,422,681,422,422,422,422',
'422,422,422,670,541,541,670,422,422,422,422,422,422,422,682,309,422',
'909,309,795,685,402,298,422,809,623,422,422,422,422,422,422,422,422',
'422,422,690,422,422,42,422,422,422,402,402,402,402,402,402,402,402,402',
'402,402,696,402,402,914,698,402,402,248,422,247,914,422,422,598,422',
'809,809,809,809,422,402,422,402,422,402,402,402,402,402,402,402,422',
'402,318,318,591,422,422,422,422,422,422,688,688,301,422,422,308,402',
'215,402,565,209,422,422,896,896,896,896,896,422,422,914,896,896,208',
'311,560,896,559,896,896,896,896,896,896,896,715,716,717,719,896,896',
'896,896,896,896,896,206,549,896,549,549,549,549,616,896,896,896,896',
'896,896,896,896,896,896,896,896,896,896,439,896,896,722,896,896,896',
'616,616,616,616,616,616,616,616,616,616,616,313,616,616,625,553,616',
'616,729,896,548,544,896,276,439,896,412,323,439,439,896,616,533,616',
'896,616,616,616,616,616,616,616,896,616,324,326,190,896,896,896,896',
'896,896,535,327,600,896,896,338,616,892,892,892,518,892,896,747,412',
'892,892,748,896,896,892,412,892,892,892,892,892,892,892,751,754,755',
'517,892,892,892,892,892,892,892,757,96,892,600,760,535,535,535,535,892',
'600,761,892,892,892,892,892,892,892,892,892,892,762,892,892,516,892',
'892,892,641,641,641,641,641,641,641,641,641,641,641,766,641,641,78,769',
'641,641,770,892,341,278,892,723,723,892,723,723,723,645,892,641,785',
'641,892,641,641,641,641,641,641,641,892,641,788,77,507,892,892,892,892',
'892,892,63,504,349,892,892,779,641,797,641,798,499,892,892,890,890,890',
'890,890,892,892,350,890,890,803,804,805,890,497,890,890,890,890,890',
'890,890,494,642,41,821,890,890,890,890,890,890,890,822,493,890,628,779',
'779,779,779,890,890,890,890,890,890,890,890,890,890,890,890,890,890',
'829,890,890,830,890,890,890,245,245,245,245,245,245,245,245,245,245',
'245,36,245,245,489,34,245,245,840,890,285,483,890,846,784,890,784,784',
'784,784,890,245,847,245,890,245,245,245,245,245,245,245,890,245,20,482',
'852,890,890,890,890,890,890,279,857,858,890,890,859,245,882,882,882',
'882,882,890,861,862,882,882,480,890,890,882,479,882,882,882,882,882',
'882,882,444,443,442,874,882,882,882,882,882,882,882,441,12,882,275,275',
'275,275,275,882,882,882,882,882,882,882,882,882,882,882,882,882,882',
'280,882,882,11,882,882,882,662,662,662,662,662,662,662,662,662,662,662',
'884,662,662,373,10,662,662,891,882,9,419,882,376,411,882,8,900,902,903',
'882,662,905,662,882,662,662,662,662,662,662,662,882,662,407,405,1,882',
'882,882,882,882,882,398,636,399,882,882,,662,423,423,423,459,423,882',
',,423,423,,882,882,423,,423,423,423,423,423,423,423,,,,,423,423,423',
'423,423,423,423,,459,423,,,459,459,459,459,423,,,423,423,423,423,423',
'423,423,423,423,423,,423,423,,423,423,423,462,462,462,462,462,462,462',
'462,462,462,462,,462,462,,,462,462,,423,,,423,423,,423,,,,,423,462,423',
'462,423,462,462,462,462,462,462,462,423,462,,,,423,423,423,423,423,423',
',,,423,423,,462,462,,,,423,423,871,871,871,871,871,423,423,,871,871',
',,,871,,871,871,871,871,871,871,871,,,,,871,871,871,871,871,871,871',
',,871,5,5,5,5,5,871,871,871,871,871,871,871,871,871,871,871,871,871',
'871,,871,871,,871,871,871,19,19,19,19,19,19,19,19,19,19,19,,19,19,,',
'19,19,,871,,,871,,,871,,,,,871,19,,19,871,19,19,19,19,19,19,19,871,19',
',,,871,871,871,871,871,871,,,,871,871,,19,869,869,869,458,869,871,,',
'869,869,,871,871,869,,869,869,869,869,869,869,869,,,,,869,869,869,869',
'869,869,869,,458,869,,,458,458,458,458,869,,,869,869,869,869,869,869',
'869,869,869,869,,869,869,,869,869,869,728,728,728,728,728,728,728,728',
'728,728,728,,728,728,,,728,728,,869,,,869,,,869,,,,,869,728,869,728',
'869,728,728,728,728,728,728,728,869,728,,,,869,869,869,869,869,869,',
',,869,869,,728,854,854,854,854,854,869,,,854,854,,869,869,854,,854,854',
'854,854,854,854,854,,,,,854,854,854,854,854,854,854,,,854,649,649,649',
'649,649,854,854,854,854,854,854,854,854,854,854,854,854,854,854,,854',
'854,,854,854,854,733,733,733,733,733,733,733,733,733,733,733,,733,733',
',,733,733,,854,,,854,,,854,,,,,854,733,,733,854,733,733,733,733,733',
'733,733,854,733,,,,854,854,854,854,854,854,,,,854,854,,733,17,17,17',
',17,854,,,17,17,,854,854,17,,17,17,17,17,17,17,17,,,,,17,17,17,17,17',
'17,17,,,17,,,,,,,17,,,17,17,17,17,17,17,17,17,17,17,,17,17,,17,17,17',
'735,735,735,735,735,735,735,735,735,735,735,,735,735,,,735,735,,17,',
',17,17,,17,,,,,,735,,735,17,735,735,735,735,735,735,735,17,735,,,,17',
'17,17,17,17,17,,,,17,17,,735,18,18,18,,18,17,,,18,18,,17,17,18,,18,18',
'18,18,18,18,18,,,,,18,18,18,18,18,18,18,,,18,,,,,,,18,,,18,18,18,18',
'18,18,18,18,18,18,,18,18,,18,18,18,738,738,738,738,738,738,738,738,738',
'738,738,,738,738,,,738,738,,18,,,18,,,18,,,,,,738,,738,18,738,738,738',
'738,738,738,738,18,738,,,,18,18,18,18,18,18,,,,18,18,,738,849,849,849',
'849,849,18,,,849,849,,18,18,849,,849,849,849,849,849,849,849,,,,,849',
'849,849,849,849,849,849,,,849,,,,,,849,849,849,849,849,849,849,849,849',
'849,849,849,849,849,,849,849,,849,849,849,740,740,740,740,740,740,740',
'740,740,740,740,,740,740,,,740,740,,849,,,849,,,849,,,,,849,740,,740',
'849,740,740,740,740,740,740,740,849,740,,,,849,849,849,849,849,849,',
',,849,849,,740,848,848,848,,848,849,,,848,848,,849,849,848,,848,848',
'848,848,848,848,848,,,,,848,848,848,848,848,848,848,,,848,,,,,,,848',
',,848,848,848,848,848,848,848,848,848,848,,848,848,,848,848,848,425',
'425,425,425,425,425,425,425,425,425,425,,425,425,,,425,425,,848,,,848',
',,848,,,,,848,425,,425,848,425,425,425,425,425,425,425,848,425,,,,848',
'848,848,848,848,848,,,,848,848,,425,22,22,22,,22,848,,,22,22,,848,848',
'22,,22,22,22,22,22,22,22,,,,,22,22,22,22,22,22,22,,,22,,,,,,,22,,,22',
'22,22,22,22,22,22,22,22,22,,22,22,,22,22,22,745,745,745,745,745,745',
'745,745,745,745,745,,745,745,,,745,745,,22,,,22,,546,22,546,546,546',
'546,22,745,22,745,22,745,745,745,745,745,745,745,22,745,,,,22,22,22',
'22,22,22,,,,22,22,,745,,546,,,22,22,23,23,23,546,23,22,22,,23,23,,,',
'23,,23,23,23,23,23,23,23,,,,,23,23,23,23,23,23,23,,,23,,,,,,,23,,,23',
'23,23,23,23,23,23,23,23,23,,23,23,,23,23,23,514,514,514,514,514,514',
'514,514,514,514,514,,514,514,,,514,514,,23,,,23,,334,23,334,334,334',
'334,23,514,23,514,23,514,514,514,514,514,514,514,23,514,,,,23,23,23',
'23,23,23,,,,23,23,,514,,334,,,23,23,24,24,24,334,24,23,23,,24,24,,,',
'24,,24,24,24,24,24,24,24,,,,,24,24,24,24,24,24,24,,,24,,,,,,,24,,,24',
'24,24,24,24,24,24,24,24,24,,24,24,,24,24,24,410,410,410,410,410,410',
'410,410,410,410,410,,410,410,,,410,410,,24,,,24,,686,24,686,686,686',
'686,24,410,24,410,24,410,410,410,410,410,410,410,24,410,,,,24,24,24',
'24,24,24,,,,24,24,,410,,686,,,24,24,844,844,844,686,844,24,24,,844,844',
',,,844,,844,844,844,844,844,844,844,,,,,844,844,844,844,844,844,844',
',,844,,,,,,,844,,,844,844,844,844,844,844,844,844,844,844,,844,844,',
'844,844,844,824,824,824,824,824,824,824,824,824,824,824,,824,824,,,824',
'824,,844,,,844,,,844,,,,,,824,,824,844,824,824,824,824,824,824,824,844',
'824,,,,844,844,844,844,844,844,,,,844,844,,824,430,430,430,,430,844',
',,430,430,,844,844,430,,430,430,430,430,430,430,430,,,,,430,430,430',
'430,430,430,430,,,430,,,,,,,430,,,430,430,430,430,430,430,430,430,430',
'430,,430,430,,430,430,430,450,,,,,,,,,,,,,,,,450,450,,430,,,430,,,430',
',,,,430,450,,450,430,450,450,450,450,,,450,430,450,,,,430,430,430,430',
'430,430,,27,,430,430,,,,27,27,27,430,430,27,27,27,449,27,430,430,,,',
',,,27,27,27,,,,449,449,,,27,27,,27,27,27,27,27,,,,449,,449,,449,449',
'449,449,,,449,,449,,,,,,27,27,27,27,27,27,27,27,27,27,27,27,27,27,,',
'27,27,27,,,27,,27,27,,,27,,27,,27,,27,,27,27,27,27,27,27,27,,27,27,27',
',865,,865,865,865,865,,,,,,27,27,27,27,,27,28,,,,,,27,28,28,28,,,28',
'28,28,,28,452,,,865,865,,,,,28,28,865,865,865,865,,452,452,28,28,,28',
'28,28,28,28,,,,,,452,,452,,452,452,452,452,,,452,,452,,,,28,28,28,28',
'28,28,28,28,28,28,28,28,28,28,,,28,28,28,,,28,,28,28,,,28,,28,,28,,28',
',28,28,28,28,28,28,28,,28,,28,,,,,,,,,,,,,28,28,28,28,,28,30,30,30,30',
'30,,28,,30,30,,,,30,,30,30,30,30,30,30,30,,,,,30,30,30,30,30,30,30,',
',30,,,,,,30,30,30,30,30,30,30,30,30,30,30,30,30,30,,30,30,,30,30,30',
'448,448,448,448,448,448,448,,,448,448,,,,,,448,448,,30,,,30,,,30,,,',
',30,448,,448,30,448,448,448,448,448,448,448,30,448,,,,30,30,30,30,30',
'30,,,,30,30,,,31,31,31,,31,30,,,31,31,,30,30,31,,31,31,31,31,31,31,31',
',,,,31,31,31,31,31,31,31,,,31,,,,,,,31,,,31,31,31,31,31,31,31,31,31',
'31,,31,31,447,,620,31,620,620,620,620,,,,,,,,,447,447,,,,,,31,,,31,',
',31,,447,,,31,447,447,447,447,620,,807,,807,807,807,807,620,620,620',
'620,31,31,31,31,31,31,,620,,31,31,,,32,32,32,,32,31,,,32,32,,31,31,32',
'807,32,32,32,32,32,32,32,807,807,807,807,32,32,32,32,32,32,32,,,32,',
',,,,,32,,,32,32,32,32,32,32,32,32,32,32,451,32,32,,,539,32,539,539,539',
'539,,,,,,451,451,,,,,,,,,32,,,32,,451,32,451,,451,451,451,451,,,451',
'539,451,,,,,,,539,539,539,539,32,32,32,32,32,32,,,,32,32,,,,32,,,,32',
'838,838,838,,838,32,32,,838,838,,,,838,,838,838,838,838,838,838,838',
',,,,838,838,838,838,838,838,838,,,838,,,,,,,838,,,838,838,838,838,838',
'838,838,838,838,838,446,838,838,,,56,838,56,56,56,56,,,,,,446,446,,',
',,,,,,838,,,838,,446,838,446,,446,446,446,446,,,,56,56,713,,713,713',
'713,713,56,56,56,56,838,838,838,838,838,838,,,,838,838,,,432,432,432',
',432,838,,,432,432,,838,838,432,713,432,432,432,432,432,432,432,713',
'713,713,713,432,432,432,432,432,432,432,,,432,,,,,,,432,,,432,432,432',
'432,432,432,432,432,432,432,,432,432,,432,432,432,456,456,456,456,456',
'456,456,,,456,456,,,,,,456,456,,432,,,432,,,432,,,,,,456,,456,432,456',
'456,456,456,456,456,456,432,456,,,,432,432,432,432,432,432,,,,432,432',
',,834,834,834,834,834,432,,,834,834,,432,432,834,,834,834,834,834,834',
'834,834,,,,,834,834,834,834,834,834,834,,,834,,,,,,834,834,834,834,834',
'834,834,834,834,834,834,834,834,834,,834,834,,834,834,834,455,455,455',
'455,455,455,455,,,455,455,,,,,,455,455,,834,,,834,,,834,,,,,834,455',
',455,834,455,455,455,455,455,455,455,834,455,,,,834,834,834,834,834',
'834,,,,834,834,,,825,825,825,,825,834,,,825,825,,834,834,825,,825,825',
'825,825,825,825,825,,,,,825,825,825,825,825,825,825,,,825,,,,,,,825',
',,825,825,825,825,825,825,825,825,825,825,,825,825,,825,825,825,454',
'454,454,454,454,454,454,,,454,454,,,,,,454,454,,825,,,825,,,825,,,,',
',454,,454,825,454,454,454,454,454,454,454,825,454,,,,825,825,825,825',
'825,825,,,,825,825,,,38,38,38,,38,825,,,38,38,,825,825,38,,38,38,38',
'38,38,38,38,,,,,38,38,38,38,38,38,38,,,38,,,,,,,38,,,38,38,38,38,38',
'38,38,38,38,38,,38,38,,38,38,38,438,438,438,438,438,438,438,438,438',
'438,438,,438,438,,,438,438,,38,,,38,,,38,,,,,,438,,438,38,438,438,438',
'438,438,438,438,38,438,,,,38,38,38,38,38,38,,,,38,38,,,39,39,39,,39',
'38,,,39,39,,38,38,39,,39,39,39,39,39,39,39,,,,,39,39,39,39,39,39,39',
',,39,,,,,,,39,,,39,39,39,39,39,39,39,39,39,39,,39,39,,39,39,39,453,453',
'453,453,453,453,453,,,453,453,,,,,,453,453,,39,,,39,,,39,,,,,,453,,453',
'39,453,453,453,453,453,453,453,39,453,,,,39,39,39,39,39,39,,,,39,39',
',,40,40,40,,40,39,,,40,40,,39,39,40,,40,40,40,40,40,40,40,,,,,40,40',
'40,40,40,40,40,,,40,,,,,,,40,,,40,40,40,40,40,40,40,40,40,40,,40,40',
',40,40,40,461,461,461,461,461,461,461,461,,461,461,,,,,,461,461,,40',
',,40,,,40,,,,,,461,,461,40,461,461,461,461,461,461,461,40,461,,,,40',
'40,40,40,40,40,,,,40,40,,,813,813,813,,813,40,,,813,813,,40,40,813,',
'813,813,813,813,813,813,813,,,,,813,813,813,813,813,813,813,,,813,,',
',,,,813,,,813,813,813,813,813,813,813,813,813,813,,813,813,,813,813',
'813,460,460,460,460,460,460,460,,,460,460,,,,,,460,460,,813,,,813,,',
'813,,,,,,460,,460,813,460,460,460,460,460,460,460,813,460,,,,813,813',
'813,813,813,813,,,,813,813,,,799,799,799,799,799,813,,,799,799,,813',
'813,799,,799,799,799,799,799,799,799,,,,,799,799,799,799,799,799,799',
',,799,,,,,,799,799,799,799,799,799,799,799,799,799,799,799,799,799,',
'799,799,,799,799,799,457,457,457,457,457,457,457,,,457,457,,,,,,457',
'457,,799,,,799,,,799,,,,,799,457,,457,799,457,457,457,457,457,457,457',
'799,457,,,,799,799,799,799,799,799,,50,,799,799,,,,50,50,50,,799,50',
'50,50,445,50,799,799,,,,,,,,50,50,,,,445,445,,,50,50,,50,50,50,50,50',
',,,445,,445,,445,445,445,445,,,,,,,,,,,50,50,50,50,50,50,50,50,50,50',
'50,50,50,50,,,50,50,50,,,50,,,50,,,50,,50,,50,,50,,50,50,50,50,50,50',
'50,,50,,50,,,,,,,,,,,,,50,50,50,50,,50,,,50,50,,,50,52,52,52,,52,,,',
'52,52,,,,52,,52,52,52,52,52,52,52,,,,,52,52,52,52,52,52,52,,,52,,,,',
',,52,,,52,52,52,52,52,52,52,52,52,52,,52,52,,52,52,52,437,437,437,437',
'437,437,437,437,437,437,437,,437,437,,,437,437,,52,,,52,,,52,,,,,,437',
',437,52,437,437,437,437,437,437,437,52,437,,,,52,52,52,52,52,52,,,,52',
'52,,,53,53,53,,53,52,,,53,53,,52,52,53,,53,53,53,53,53,53,53,,,,,53',
'53,53,53,53,53,53,,,53,,,,,,,53,,,53,53,53,53,53,53,53,53,53,53,,53',
'53,,53,53,53,,,,,,,,,,,,,,,,,,,,53,,,53,,,53,,,,,53,,,,53,,,,,,,,53',
',,,,53,53,53,53,53,53,,,,53,53,,,,,,,53,53,54,54,54,,54,53,53,,54,54',
',,,54,,54,54,54,54,54,54,54,,,,,54,54,54,54,54,54,54,,,54,,,,,,,54,',
',54,54,54,54,54,54,54,54,54,54,,54,54,,54,54,54,,,,,,,,,,,,,,,,,,,,54',
',,54,,,54,,,,,54,,,,54,,,,,,,,54,,,,,54,54,54,54,54,54,,,,54,54,,,,',
',,54,54,366,366,366,,366,54,54,,366,366,,,,366,,366,366,366,366,366',
'366,366,,,,,366,366,366,366,366,366,366,,,366,,,,,,,366,,,366,366,366',
'366,366,366,366,366,366,366,,366,366,,366,366,366,,,,,,,,,,,,,,,,,,',
',366,,,366,,,366,,,,,,,,,366,,,,,,,,366,,,,,366,366,366,366,366,366',
',,,366,366,,,433,433,433,,433,366,,,433,433,,366,366,433,,433,433,433',
'433,433,433,433,,,,,433,433,433,433,433,433,433,,,433,,,,,,,433,,,433',
'433,433,433,433,433,433,433,433,433,,433,433,,433,433,433,,,,,,,,,,',
',,,,,,,,,433,,,433,,,433,,,,,,,,,433,,,,,,,,433,,,,,433,433,433,433',
'433,433,,,,433,433,,,57,57,57,,57,433,,,57,57,,433,433,57,,57,57,57',
'57,57,57,57,,,,,57,57,57,57,57,57,57,,,57,,,,,,,57,,,57,57,57,57,57',
'57,57,57,57,57,,57,57,,57,57,57,,,,,,,,,,,,,,,,,,,,57,,,57,,,57,,,,',
',,,,57,,,,,,,,57,,,,,57,57,57,57,57,57,,,,57,57,,,58,58,58,,58,57,,',
'58,58,,57,57,58,,58,58,58,58,58,58,58,,,,,58,58,58,58,58,58,58,,,58',
',,,,,,58,,,58,58,58,58,58,58,58,58,58,58,,58,58,,58,58,58,,,,,,,,,,',
',,,,,,,,,58,,,58,,,58,,,,,,,,,58,,,,,,,,58,,,,,58,58,58,58,58,58,,,',
'58,58,,,61,61,61,,61,58,,,61,61,,58,58,61,,61,61,61,61,61,61,61,,,,',
'61,61,61,61,61,61,61,,,61,,,,,,,61,,,61,61,61,61,61,61,61,61,61,61,',
'61,61,,61,61,61,,,,,,,,,,,,,,,,,,,,61,,,61,,,61,,,,,,,,,61,,,,,,,,61',
',,,,61,61,61,61,61,61,,,,61,61,61,,62,62,62,61,62,61,,,62,62,,61,61',
'62,,62,62,62,62,62,62,62,,,,,62,62,62,62,62,62,62,,,62,,,,,,,62,,,62',
'62,62,62,62,62,62,62,62,62,,62,62,,,572,62,572,572,572,572,,,,,,,,,',
',,,,,,62,,,62,,,62,,,,,62,,,,,572,572,,,,,,,572,572,572,572,62,62,62',
'62,62,62,,,,62,62,,,434,434,434,,434,62,,,434,434,,62,62,434,,434,434',
'434,434,434,434,434,,,,,434,434,434,434,434,434,434,,,434,,,,,,,434',
',,434,434,434,434,434,434,434,434,434,434,,434,434,,434,434,434,,,,',
',,,,,,,,,,,,,,,434,,,434,,,434,,,,,,,,,434,,,,,,,,434,,,,,434,434,434',
'434,434,434,,,,434,434,,,465,465,465,,465,434,,,465,465,,434,434,465',
',465,465,465,465,465,465,465,,,,,465,465,465,465,465,465,465,,,465,',
',,,,,465,,,465,465,465,465,465,465,465,465,465,465,,465,465,,465,465',
'465,,,,,,,,,,,,,,,,,,,,465,,,465,,,465,,,,,465,,465,,465,,,,,,,,465',
',,,,465,465,465,465,465,465,,,,465,465,,,,,,,465,465,526,526,526,,526',
'465,465,,526,526,,,,526,,526,526,526,526,526,526,526,,,,,526,526,526',
'526,526,526,526,,,526,,,,,,,526,,,526,526,526,526,526,526,526,526,526',
'526,,526,526,,526,526,526,,,,,,,,,,,,,,,,,,,,526,,,526,,,526,,,,,526',
',,,526,,,,,,,,526,,,,,526,526,526,526,526,526,,,,526,526,,,789,789,789',
'789,789,526,,,789,789,,526,526,789,,789,789,789,789,789,789,789,,,,',
'789,789,789,789,789,789,789,,,789,,,,,,789,789,789,789,789,789,789,789',
'789,789,789,789,789,789,,789,789,,789,789,789,,,,,,,,,,,,,,,,,,,,789',
',,789,,,789,,,,,789,,,,789,,,,,,,,789,,,,,789,789,789,789,789,789,,',
',789,789,,,768,768,768,768,768,789,,,768,768,,789,789,768,,768,768,768',
'768,768,768,768,,,,,768,768,768,768,768,768,768,,,768,,,,,,768,768,768',
'768,768,768,768,768,768,768,768,768,768,768,,768,768,,768,768,768,,',
',,,,,,,,,,,,,,,,,768,,,768,,,768,,,,,768,,,,768,,,,,,,,768,,,,,768,768',
'768,768,768,768,,,,768,768,,,468,468,468,,468,768,,,468,468,,768,768',
'468,,468,468,468,468,468,468,468,,,,,468,468,468,468,468,468,468,,,468',
',,,,,,468,,,468,468,468,468,468,468,468,468,468,468,,468,468,,468,468',
'468,,,,,,,,,,,,,,,,,,,,468,,,468,,,468,,,,,,,468,,468,,,,,,,,468,,,',
',468,468,468,468,468,468,,,,468,468,,,,,,,468,468,83,83,83,,83,468,468',
',83,83,,,,83,,83,83,83,83,83,83,83,,83,,,83,83,83,83,83,83,83,,,83,',
',,,,,83,,,83,83,83,83,83,83,83,83,83,83,,83,83,,83,83,83,,,,,,,,,,,',
',,,,,,,,83,,,83,83,,83,,,,,83,,83,,83,,,,,,,,83,,83,,,83,83,83,83,83',
'83,,,,83,83,,,,,,,83,83,86,86,86,,86,83,83,,86,86,,,,86,,86,86,86,86',
'86,86,86,,86,,,86,86,86,86,86,86,86,,,86,,,,,,,86,,,86,86,86,86,86,86',
'86,86,86,86,,86,86,,86,86,86,,,,,,,,,,,,,,,,,,,,86,,,86,86,,86,,,,,86',
',86,,86,,,,,,,,86,,86,,,86,86,86,86,86,86,,,,86,86,,,,,,,86,86,758,758',
'758,,758,86,86,,758,758,,,,758,,758,758,758,758,758,758,758,,,,,758',
'758,758,758,758,758,758,,,758,,,,,,,758,,,758,758,758,758,758,758,758',
'758,758,758,,758,758,,758,758,758,,,,,,,,,,,,,,,,,,,,758,,,758,,,758',
',,,,758,,,,758,,,,,,,,758,,,,,758,758,758,758,758,758,,,,758,758,,,98',
'98,98,98,98,758,,,98,98,,758,758,98,,98,98,98,98,98,98,98,,,,,98,98',
'98,98,98,98,98,,,98,,,,,,98,98,98,98,98,98,98,98,98,98,98,98,98,98,',
'98,98,,98,98,98,,,,,,,,,,,,,,,,,,,,98,,,98,,,98,,,,,98,,,,98,,,,,,,',
'98,,,,,98,98,98,98,98,98,,,,98,98,,,102,102,102,98,102,98,,,102,102',
',98,98,102,,102,102,102,102,102,102,102,,,,,102,102,102,102,102,102',
'102,,,102,,,,,,,102,,,102,102,102,102,102,102,102,102,102,102,,102,102',
',102,102,102,,,,,,,,,,,,,,,,,,,,102,,,102,,,102,,,,,,,,,102,,,,,,,,102',
',,,,102,102,102,102,102,102,,,,102,102,,,103,103,103,,103,102,,,103',
'103,,102,102,103,,103,103,103,103,103,103,103,,,,,103,103,103,103,103',
'103,103,,,103,,,,,,,103,,,103,103,103,103,103,103,103,103,103,103,,103',
'103,,103,103,103,,,,,,,,,,,,,,,,,,,,103,,,103,,,103,,,,,,,,,103,,,,',
',,,103,,,,,103,103,103,103,103,103,,,,103,103,,,104,104,104,,104,103',
',,104,104,,103,103,104,,104,104,104,104,104,104,104,,,,,104,104,104',
'104,104,104,104,,,104,,,,,,,104,,,104,104,104,104,104,104,104,104,104',
'104,,104,104,,104,104,104,,,,,,,,,,,,,,,,,,,,104,,,104,,,104,,,,,,,',
',104,,,,,,,,104,,,,,104,104,104,104,104,104,,,,104,104,,,105,105,105',
',105,104,,,105,105,,104,104,105,,105,105,105,105,105,105,105,,,,,105',
'105,105,105,105,105,105,,,105,,,,,,,105,,,105,105,105,105,105,105,105',
'105,105,105,,105,105,,105,105,105,,,,,,,,,,,,,,,,,,,,105,,,105,,,105',
',,,,,,,,105,,,,,,,,105,,,,,105,105,105,105,105,105,,,,105,105,,,106',
'106,106,106,106,105,,,106,106,,105,105,106,,106,106,106,106,106,106',
'106,,,,,106,106,106,106,106,106,106,,,106,,,,,,106,106,106,106,106,106',
'106,106,106,106,106,106,106,106,,106,106,,106,106,106,,,,,,,,,,,,,,',
',,,,,106,,,106,,,106,,,,,106,,,,106,,,,,,,,106,,,,,106,106,106,106,106',
'106,,,,106,106,,,743,743,743,,743,106,,,743,743,,106,106,743,,743,743',
'743,743,743,743,743,,,,,743,743,743,743,743,743,743,,,743,,,,,,,743',
',,743,743,743,743,743,743,743,743,743,743,,743,743,,743,743,743,,,,',
',,,,,,,,,,,,,,,743,,,743,,,743,,,,,,,,,743,,,,,,,,743,,,,,743,743,743',
'743,743,743,,,,743,743,,,470,470,470,,470,743,,,470,470,,743,743,470',
',470,470,470,470,470,470,470,,,,,470,470,470,470,470,470,470,,,470,',
',,,,,470,,,470,470,470,470,470,470,470,470,470,470,,470,470,,470,470',
'470,,,,,,,,,,,,,,,,,,,,470,,,470,,,470,,,,,,,,,470,,,,,,,,470,,,,,470',
'470,470,470,470,470,,,,470,470,,,742,742,742,,742,470,,,742,742,,470',
'470,742,,742,742,742,742,742,742,742,,,,,742,742,742,742,742,742,742',
',,742,,,,,,,742,,,742,742,742,742,742,742,742,742,742,742,,742,742,',
'742,742,742,,,,,,,,,,,,,,,,,,,,742,,,742,,,742,,,,,,,,,742,,,,,,,,742',
',,,,742,742,742,742,742,742,,,,742,742,,,192,192,192,192,192,742,,,192',
'192,,742,742,192,,192,192,192,192,192,192,192,,,,,192,192,192,192,192',
'192,192,,,192,,,,,,192,192,192,192,192,192,192,192,192,192,192,192,192',
'192,,192,192,,192,192,192,,,,,,,,,,,,,,,,,,,,192,,,192,,,192,,,,,192',
',,,192,,,,,,,,192,,,,,192,192,192,192,192,192,,,,192,192,,,193,193,193',
'193,193,192,,,193,193,,192,192,193,,193,193,193,193,193,193,193,,,,',
'193,193,193,193,193,193,193,,,193,,,,,,193,193,193,193,193,193,193,193',
'193,193,193,193,193,193,,193,193,,193,193,193,,,,,,,,,,,,,,,,,,,,193',
',,193,,,193,,,,,193,,,,193,,,,,,,,193,,,,,193,193,193,193,193,193,,',
',193,193,,,194,194,194,,194,193,,,194,194,,193,193,194,,194,194,194',
'194,194,194,194,,,,,194,194,194,194,194,194,194,,,194,,,,,,,194,,,194',
'194,194,194,194,194,194,194,194,194,,194,194,,194,194,194,,,,,,,,,,',
',,,,,,,,,194,,,194,,,194,,,,,194,,,,194,,,,,,,,194,,,,,194,194,194,194',
'194,194,,,,194,194,,,195,195,195,,195,194,,,195,195,,194,194,195,,195',
'195,195,195,195,195,195,,,,,195,195,195,195,195,195,195,,,195,,,,,,',
'195,,,195,195,195,195,195,195,195,195,195,195,,195,195,,195,195,195',
',,,,,,,,,,,,,,,,,,,195,,,195,,,195,,,,,195,,,,195,,,,,,,,195,,,,,195',
'195,195,195,195,195,,,,195,195,,,196,196,196,,196,195,,,196,196,,195',
'195,196,,196,196,196,196,196,196,196,,,,,196,196,196,196,196,196,196',
',,196,,,,,,,196,,,196,196,196,196,196,196,196,196,196,196,,196,196,',
'196,196,196,,,,,,,,,,,,,,,,,,,,196,,,196,,,196,,,,,,,,,196,,,,,,,,196',
',,,,196,196,196,196,196,196,,,,196,196,,,197,197,197,,197,196,,,197',
'197,,196,196,197,,197,197,197,197,197,197,197,,,,,197,197,197,197,197',
'197,197,,,197,,,,,,,197,,,197,197,197,197,197,197,197,197,197,197,,197',
'197,,197,197,197,,,,,,,,,,,,,,,,,,,,197,,,197,,,197,,,,,197,,,,197,',
',,,,,,197,,,,,197,197,197,197,197,197,,,,197,197,,,,,,,197,197,741,741',
'741,,741,197,197,,741,741,,,,741,,741,741,741,741,741,741,741,,,,,741',
'741,741,741,741,741,741,,,741,,,,,,,741,,,741,741,741,741,741,741,741',
'741,741,741,,741,741,,741,741,741,,,,,,,,,,,,,,,,,,,,741,,,741,,,741',
',,,,,,,,741,,,,,,,,741,,,,,741,741,741,741,741,741,,,,741,741,,,731',
'731,731,,731,741,,,731,731,,741,741,731,,731,731,731,731,731,731,731',
',,,,731,731,731,731,731,731,731,,,731,,,,,,,731,,,731,731,731,731,731',
'731,731,731,731,731,,731,731,,731,731,731,,,,,,,,,,,,,,,,,,,,731,,,731',
',,731,,,,,,,,,731,,,,,,,,731,,,,,731,731,731,731,731,731,,,,731,731',
',,200,200,200,,200,731,,,200,200,,731,731,200,,200,200,200,200,200,200',
'200,,,,,200,200,200,200,200,200,200,,,200,,,,,,,200,,,200,200,200,200',
'200,200,200,200,200,200,,200,200,,200,200,200,,,,,,,,,,,,,,,,,,,,200',
',,200,,,200,,,,,,,,,200,,,,,,,,200,,,,,200,200,200,200,200,200,,,,200',
'200,,,201,201,201,,201,200,,,201,201,,200,200,201,,201,201,201,201,201',
'201,201,,,,,201,201,201,201,201,201,201,,,201,,,,,,,201,,,201,201,201',
'201,201,201,201,201,201,201,,201,201,,201,201,201,,,,,,,,,,,,,,,,,,',
',201,,,201,,,201,,,,,,,,,201,,,,,,,,201,,,,,201,201,201,201,201,201',
',,,201,201,,,202,202,202,,202,201,,,202,202,,201,201,202,,202,202,202',
'202,202,202,202,,,,,202,202,202,202,202,202,202,,,202,,,,,,,202,,,202',
'202,202,202,202,202,202,202,202,202,,202,202,,202,202,202,,,,,,,,,,',
',,,,,,,,,202,,,202,,,202,,,,,,,,,202,,,,,,,,202,,,,,202,202,202,202',
'202,202,,,,202,202,,,730,730,730,,730,202,,,730,730,,202,202,730,,730',
'730,730,730,730,730,730,,,,,730,730,730,730,730,730,730,,,730,,,,,,',
'730,,,730,730,730,730,730,730,730,730,730,730,,730,730,,730,730,730',
',,,,,,,,,,,,,,,,,,,730,,,730,,,730,,,,,,,,,730,,,,,,,,730,,,,,730,730',
'730,730,730,730,,,,730,730,,,724,724,724,724,724,730,,,724,724,,730',
'730,724,,724,724,724,724,724,724,724,,,,,724,724,724,724,724,724,724',
',,724,,,,,,724,724,724,724,724,724,724,724,724,724,724,724,724,724,',
'724,724,,724,724,724,,,,,,,,,,,,,,,,,,,,724,,,724,,,724,,,,,724,,,,724',
',,,,,,,724,,,,,724,724,724,724,724,724,,,,724,724,,,486,486,486,,486',
'724,,,486,486,,724,724,486,,486,486,486,486,486,486,486,,,,,486,486',
'486,486,486,486,486,,,486,,,,,,,486,,,486,486,486,486,486,486,486,486',
'486,486,,486,486,,486,486,486,,,,,,,,,,,,,,,,,,,,486,,,486,,486,486',
',,,,,,486,,486,,,,,,,,486,,,,,486,486,486,486,486,486,,,,486,486,,,712',
'712,712,712,712,486,,,712,712,,486,486,712,,712,712,712,712,712,712',
'712,,,,,712,712,712,712,712,712,712,,,712,,,,,,712,712,712,712,712,712',
'712,712,712,712,712,712,712,712,,712,712,,712,712,712,,,,,,,,,,,,,,',
',,,,,712,,,712,,,712,,,,,712,,,,712,,,,,,,,712,,,,,712,712,712,712,712',
'712,,,,712,712,,,711,711,711,711,711,712,,,711,711,,712,712,711,,711',
'711,711,711,711,711,711,,,,,711,711,711,711,711,711,711,,,711,,,,,,711',
'711,711,711,711,711,711,711,711,711,711,711,711,711,,711,711,,711,711',
'711,,,,,,,,,,,,,,,,,,,,711,,,711,,,711,,,,,711,,,,711,,,,,,,,711,,,',
',711,711,711,711,711,711,,,,711,711,,,492,492,492,492,492,711,,,492',
'492,,711,711,492,,492,492,492,492,492,492,492,,,,,492,492,492,492,492',
'492,492,,,492,,,,,,492,492,492,492,492,492,492,492,492,492,492,492,492',
'492,,492,492,,492,492,492,,,,,,,,,,,,,,,,,,,,492,,,492,,,492,,,,,492',
',,,492,,,,,,,,492,,,,,492,492,492,492,492,492,,,,492,492,,,,,,492,,492',
'210,210,210,210,210,492,492,,210,210,,,,210,,210,210,210,210,210,210',
'210,,,,,210,210,210,210,210,210,210,,,210,,,,,,210,210,210,210,210,210',
'210,210,210,210,210,210,210,210,,210,210,,210,210,210,,,,,,,,,,,,,,',
',,,,,210,,,210,,,210,,,,,210,,,,210,,,,,,,,210,,,,,210,210,210,210,210',
'210,,,,210,210,,,211,211,211,,211,210,,,211,211,,210,210,211,,211,211',
'211,211,211,211,211,,,,,211,211,211,211,211,211,211,,,211,,,,,,,211',
',,211,211,211,211,211,211,211,211,211,211,,211,211,,211,211,211,,,,',
',,,,,,,,,,,,,,,211,,,211,,211,211,,,,,,,,,211,,,,,,,,211,,,,,211,211',
'211,211,211,211,,,,211,211,,,214,214,214,,214,211,,,214,214,,211,211',
'214,,214,214,214,214,214,214,214,,,,,214,214,214,214,214,214,214,,,214',
',,,,,,214,,,214,214,214,214,214,214,214,214,214,214,,214,214,,214,214',
'214,,,,,,,,,,,,,,,,,,,,214,,,214,,,214,,,,,,,,,214,,,,,,,,214,,,,,214',
'214,214,214,214,214,,,,214,214,,,708,708,708,,708,214,,,708,708,,214',
'214,708,,708,708,708,708,708,708,708,,,,,708,708,708,708,708,708,708',
',,708,,,,,,,708,,,708,708,708,708,708,708,708,708,708,708,,708,708,',
'708,708,708,,,,,,,,,,,,,,,,,,,,708,,,708,,,708,,,,,,,,,708,,,,,,,,708',
',,,,708,708,708,708,708,708,,,,708,708,,,216,216,216,,216,708,,,216',
'216,,708,708,216,,216,216,216,216,216,216,216,,,,,216,216,216,216,216',
'216,216,,,216,,,,,,,216,,,216,216,216,216,216,216,216,216,216,216,,216',
'216,,216,216,216,,,,,,,,,,,,,,,,,,,,216,,,216,,,216,,,,,,,,,216,,,,',
',,,216,,,,,216,216,216,216,216,216,,,,216,216,,,217,217,217,,217,216',
',,217,217,,216,216,217,,217,217,217,217,217,217,217,,,,,217,217,217',
'217,217,217,217,,,217,,,,,,,217,,,217,217,217,217,217,217,217,217,217',
'217,,217,217,,217,217,217,,,,,,,,,,,,,,,,,,,,217,,,217,,,217,,,,,,,',
',217,,,,,,,,217,,,,,217,217,217,217,217,217,,,,217,217,,,218,218,218',
',218,217,,,218,218,,217,217,218,,218,218,218,218,218,218,218,,,,,218',
'218,218,218,218,218,218,,,218,,,,,,,218,,,218,218,218,218,218,218,218',
'218,218,218,,218,218,,218,218,218,,,,,,,,,,,,,,,,,,,,218,,,218,,,218',
',,,,,,,,218,,,,,,,,218,,,,,218,218,218,218,218,218,,,,218,218,,,219',
'219,219,,219,218,,,219,219,,218,218,219,,219,219,219,219,219,219,219',
',,,,219,219,219,219,219,219,219,,,219,,,,,,,219,,,219,219,219,219,219',
'219,219,219,219,219,,219,219,,219,219,219,,,,,,,,,,,,,,,,,,,,219,,,219',
',,219,,,,,,,,,219,,,,,,,,219,,,,,219,219,219,219,219,219,,,,219,219',
',,220,220,220,,220,219,,,220,220,,219,219,220,,220,220,220,220,220,220',
'220,,,,,220,220,220,220,220,220,220,,,220,,,,,,,220,,,220,220,220,220',
'220,220,220,220,220,220,,220,220,,220,220,220,,,,,,,,,,,,,,,,,,,,220',
',,220,,,220,,,,,,,,,220,,,,,,,,220,,,,,220,220,220,220,220,220,,,,220',
'220,,,221,221,221,,221,220,,,221,221,,220,220,221,,221,221,221,221,221',
'221,221,,,,,221,221,221,221,221,221,221,,,221,,,,,,,221,,,221,221,221',
'221,221,221,221,221,221,221,,221,221,,221,221,221,,,,,,,,,,,,,,,,,,',
',221,,,221,,,221,,,,,,,,,221,,,,,,,,221,,,,,221,221,221,221,221,221',
',,,221,221,,,222,222,222,,222,221,,,222,222,,221,221,222,,222,222,222',
'222,222,222,222,,,,,222,222,222,222,222,222,222,,,222,,,,,,,222,,,222',
'222,222,222,222,222,222,222,222,222,,222,222,,222,222,222,,,,,,,,,,',
',,,,,,,,,222,,,222,,,222,,,,,,,,,222,,,,,,,,222,,,,,222,222,222,222',
'222,222,,,,222,222,,,223,223,223,,223,222,,,223,223,,222,222,223,,223',
'223,223,223,223,223,223,,,,,223,223,223,223,223,223,223,,,223,,,,,,',
'223,,,223,223,223,223,223,223,223,223,223,223,,223,223,,223,223,223',
',,,,,,,,,,,,,,,,,,,223,,,223,,,223,,,,,,,,,223,,,,,,,,223,,,,,223,223',
'223,223,223,223,,,,223,223,,,224,224,224,,224,223,,,224,224,,223,223',
'224,,224,224,224,224,224,224,224,,,,,224,224,224,224,224,224,224,,,224',
',,,,,,224,,,224,224,224,224,224,224,224,224,224,224,,224,224,,224,224',
'224,,,,,,,,,,,,,,,,,,,,224,,,224,,,224,,,,,,,,,224,,,,,,,,224,,,,,224',
'224,224,224,224,224,,,,224,224,,,225,225,225,,225,224,,,225,225,,224',
'224,225,,225,225,225,225,225,225,225,,,,,225,225,225,225,225,225,225',
',,225,,,,,,,225,,,225,225,225,225,225,225,225,225,225,225,,225,225,',
'225,225,225,,,,,,,,,,,,,,,,,,,,225,,,225,,,225,,,,,,,,,225,,,,,,,,225',
',,,,225,225,225,225,225,225,,,,225,225,,,226,226,226,,226,225,,,226',
'226,,225,225,226,,226,226,226,226,226,226,226,,,,,226,226,226,226,226',
'226,226,,,226,,,,,,,226,,,226,226,226,226,226,226,226,226,226,226,,226',
'226,,226,226,226,,,,,,,,,,,,,,,,,,,,226,,,226,,,226,,,,,,,,,226,,,,',
',,,226,,,,,226,226,226,226,226,226,,,,226,226,,,227,227,227,,227,226',
',,227,227,,226,226,227,,227,227,227,227,227,227,227,,,,,227,227,227',
'227,227,227,227,,,227,,,,,,,227,,,227,227,227,227,227,227,227,227,227',
'227,,227,227,,227,227,227,,,,,,,,,,,,,,,,,,,,227,,,227,,,227,,,,,,,',
',227,,,,,,,,227,,,,,227,227,227,227,227,227,,,,227,227,,,228,228,228',
',228,227,,,228,228,,227,227,228,,228,228,228,228,228,228,228,,,,,228',
'228,228,228,228,228,228,,,228,,,,,,,228,,,228,228,228,228,228,228,228',
'228,228,228,,228,228,,228,228,228,,,,,,,,,,,,,,,,,,,,228,,,228,,,228',
',,,,,,,,228,,,,,,,,228,,,,,228,228,228,228,228,228,,,,228,228,,,229',
'229,229,,229,228,,,229,229,,228,228,229,,229,229,229,229,229,229,229',
',,,,229,229,229,229,229,229,229,,,229,,,,,,,229,,,229,229,229,229,229',
'229,229,229,229,229,,229,229,,229,229,229,,,,,,,,,,,,,,,,,,,,229,,,229',
',,229,,,,,,,,,229,,,,,,,,229,,,,,229,229,229,229,229,229,,,,229,229',
',,230,230,230,,230,229,,,230,230,,229,229,230,,230,230,230,230,230,230',
'230,,,,,230,230,230,230,230,230,230,,,230,,,,,,,230,,,230,230,230,230',
'230,230,230,230,230,230,,230,230,,230,230,230,,,,,,,,,,,,,,,,,,,,230',
',,230,,,230,,,,,,,,,230,,,,,,,,230,,,,,230,230,230,230,230,230,,,,230',
'230,,,231,231,231,,231,230,,,231,231,,230,230,231,,231,231,231,231,231',
'231,231,,,,,231,231,231,231,231,231,231,,,231,,,,,,,231,,,231,231,231',
'231,231,231,231,231,231,231,,231,231,,231,231,231,,,,,,,,,,,,,,,,,,',
',231,,,231,,,231,,,,,,,,,231,,,,,,,,231,,,,,231,231,231,231,231,231',
',,,231,231,,,232,232,232,,232,231,,,232,232,,231,231,232,,232,232,232',
'232,232,232,232,,,,,232,232,232,232,232,232,232,,,232,,,,,,,232,,,232',
'232,232,232,232,232,232,232,232,232,,232,232,,232,232,232,,,,,,,,,,',
',,,,,,,,,232,,,232,,,232,,,,,,,,,232,,,,,,,,232,,,,,232,232,232,232',
'232,232,,,,232,232,,,233,233,233,,233,232,,,233,233,,232,232,233,,233',
'233,233,233,233,233,233,,,,,233,233,233,233,233,233,233,,,233,,,,,,',
'233,,,233,233,233,233,233,233,233,233,233,233,,233,233,,233,233,233',
',,,,,,,,,,,,,,,,,,,233,,,233,,,233,,,,,,,,,233,,,,,,,,233,,,,,233,233',
'233,233,233,233,,,,233,233,,,234,234,234,,234,233,,,234,234,,233,233',
'234,,234,234,234,234,234,234,234,,,,,234,234,234,234,234,234,234,,,234',
',,,,,,234,,,234,234,234,234,234,234,234,234,234,234,,234,234,,234,234',
'234,,,,,,,,,,,,,,,,,,,,234,,,234,,,234,,,,,,,,,234,,,,,,,,234,,,,,234',
'234,234,234,234,234,,,,234,234,,,235,235,235,,235,234,,,235,235,,234',
'234,235,,235,235,235,235,235,235,235,,,,,235,235,235,235,235,235,235',
',,235,,,,,,,235,,,235,235,235,235,235,235,235,235,235,235,,235,235,',
'235,235,235,,,,,,,,,,,,,,,,,,,,235,,,235,,,235,,,,,,,,,235,,,,,,,,235',
',,,,235,235,235,235,235,235,,,,235,235,,,236,236,236,,236,235,,,236',
'236,,235,235,236,,236,236,236,236,236,236,236,,,,,236,236,236,236,236',
'236,236,,,236,,,,,,,236,,,236,236,236,236,236,236,236,236,236,236,,236',
'236,,236,236,236,,,,,,,,,,,,,,,,,,,,236,,,236,,,236,,,,,,,,,236,,,,',
',,,236,,,,,236,236,236,236,236,236,,,,236,236,,,237,237,237,,237,236',
',,237,237,,236,236,237,,237,237,237,237,237,237,237,,,,,237,237,237',
'237,237,237,237,,,237,,,,,,,237,,,237,237,237,237,237,237,237,237,237',
'237,,237,237,,237,237,237,,,,,,,,,,,,,,,,,,,,237,,,237,,,237,,,,,,,',
',237,,,,,,,,237,,,,,237,237,237,237,237,237,,,,237,237,,,238,238,238',
',238,237,,,238,238,,237,237,238,,238,238,238,238,238,238,238,,,,,238',
'238,238,238,238,238,238,,,238,,,,,,,238,,,238,238,238,238,238,238,238',
'238,238,238,,238,238,,238,238,238,,,,,,,,,,,,,,,,,,,,238,,,238,,,238',
',,,,,,,,238,,,,,,,,238,,,,,238,238,238,238,238,238,,,,238,238,,,239',
'239,239,,239,238,,,239,239,,238,238,239,,239,239,239,239,239,239,239',
',,,,239,239,239,239,239,239,239,,,239,,,,,,,239,,,239,239,239,239,239',
'239,239,239,239,239,,239,239,,239,239,239,,,,,,,,,,,,,,,,,,,,239,,,239',
',,239,,,,,,,,,239,,,,,,,,239,,,,,239,239,239,239,239,239,,,,239,239',
',,240,240,240,,240,239,,,240,240,,239,239,240,,240,240,240,240,240,240',
'240,,,,,240,240,240,240,240,240,240,,,240,,,,,,,240,,,240,240,240,240',
'240,240,240,240,240,240,,240,240,,240,240,240,,,,,,,,,,,,,,,,,,,,240',
',,240,,,240,,,,,,,,,240,,,,,,,,240,,,,,240,240,240,240,240,240,,,,240',
'240,,,241,241,241,,241,240,,,241,241,,240,240,241,,241,241,241,241,241',
'241,241,,,,,241,241,241,241,241,241,241,,,241,,,,,,,241,,,241,241,241',
'241,241,241,241,241,241,241,,241,241,,241,241,241,,,,,,,,,,,,,,,,,,',
',241,,,241,,,241,,,,,,,,,241,,,,,,,,241,,,,,241,241,241,241,241,241',
',,,241,241,,,704,704,704,,704,241,,,704,704,,241,241,704,,704,704,704',
'704,704,704,704,,,,,704,704,704,704,704,704,704,,,704,,,,,,,704,,,704',
'704,704,704,704,704,704,704,704,704,,704,704,,704,704,704,,,,,,,,,,',
',,,,,,,,,704,,,704,,,704,,,,,704,,,,704,,,,,,,,704,,,,,704,704,704,704',
'704,704,,,,704,704,,,,,,,704,704,700,700,700,,700,704,704,,700,700,',
',,700,,700,700,700,700,700,700,700,,,,,700,700,700,700,700,700,700,',
',700,,,,,,,700,,,700,700,700,700,700,700,700,700,700,700,,700,700,,700',
'700,700,,,,,,,,,,,,,,,,,,,,700,,,700,,,700,,,,,,,,,700,,,,,,,,700,,',
',,700,700,700,700,700,700,,,,700,700,,,699,699,699,,699,700,,,699,699',
',700,700,699,,699,699,699,699,699,699,699,,,,,699,699,699,699,699,699',
'699,,,699,,,,,,,699,,,699,699,699,699,699,699,699,699,699,699,,699,699',
',699,699,699,,,,,,,,,,,,,,,,,,,,699,,,699,,,699,,,,,699,,,,699,,,,,',
',,699,,,,,699,699,699,699,699,699,,,,699,699,,,250,250,250,,250,699',
',,250,250,,699,699,250,,250,250,250,250,250,250,250,,,,,250,250,250',
'250,250,250,250,,,250,,,,,,,250,,,250,250,250,250,250,250,250,250,250',
'250,,250,250,,250,250,250,,,,,,,,,,,,,,,,,,,,250,,,250,,,250,,,,,,,',
',250,,,,,,,,250,,,,,250,250,250,250,250,250,,,,250,250,,,667,667,667',
',667,250,,,667,667,,250,250,667,,667,667,667,667,667,667,667,,,,,667',
'667,667,667,667,667,667,,,667,,,,,,,667,,,667,667,667,667,667,667,667',
'667,667,667,,667,667,,667,667,667,,,,,,,,,,,,,,,,,,,,667,,,667,,,667',
',,,,667,,,,667,,,,,,,,667,,,,,667,667,667,667,667,667,,,,667,667,,,252',
'252,252,,252,667,,,252,252,,667,667,252,,252,252,252,252,252,252,252',
',,,,252,252,252,252,252,252,252,,,252,,,,,,,252,,,252,252,252,252,252',
'252,252,252,252,252,,252,252,,252,252,252,,,,,,,,,,,,,,,,,,,,252,,,252',
',,252,,,,,,,,,252,,,,,,,,252,,,,,252,252,252,252,252,252,,,,252,252',
',,257,257,257,,257,252,,,257,257,,252,252,257,,257,257,257,257,257,257',
'257,,,,,257,257,257,257,257,257,257,,,257,,,,,,,257,,,257,257,257,257',
'257,257,257,257,257,257,,257,257,,257,257,257,,,,,,,,,,,,,,,,,,,,257',
',,257,,,257,,,,,,,,,257,,,,,,,,257,,,,,257,257,257,257,257,257,,,,257',
'257,,,661,661,661,,661,257,,,661,661,,257,257,661,,661,661,661,661,661',
'661,661,,,,,661,661,661,661,661,661,661,,,661,,,,,,,661,,,661,661,661',
'661,661,661,661,661,661,661,,661,661,,,319,661,319,319,319,319,,,,,',
',,,,,,,,,,661,,,661,,,661,,,,,,,,,,319,,319,,,,,,319,319,319,319,661',
'661,661,661,661,661,,,,661,661,,,353,353,353,,353,661,,,353,353,,661',
'661,353,,353,353,353,353,353,353,353,,,,,353,353,353,353,353,353,353',
',,353,,,,,,,353,,,353,353,353,353,353,353,353,353,353,353,,353,353,',
',,353,,,,,,,,,,,,,,,,,,,,353,,,353,,,353,,,,,,,,,,,,,,,,,,,,,,353,353',
'353,353,353,353,,,,353,353,,,351,351,351,,351,353,,,351,351,,353,353',
'351,,351,351,351,351,351,351,351,,,,,351,351,351,351,351,351,351,,,351',
',,,,,,351,,,351,351,351,351,351,351,351,351,351,351,,351,351,,,,351',
',,,,,,,,,,,,,,,,,,,351,,,351,,,351,,,,,,,,,,,,,,,,,,,,,,351,351,351',
'351,351,351,,,,351,351,,,263,263,263,,263,351,,,263,263,,351,351,263',
',263,263,263,263,263,263,263,,,,,263,263,263,263,263,263,263,,,263,',
',,,,,263,,,263,263,263,263,263,263,263,263,263,263,,263,263,,263,263',
'263,,,,,,,,,,,,,,,,,,,,263,,,263,,,263,,,,,263,,263,,263,,,,,,,,263',
',,,,263,263,263,263,263,263,,,,263,263,,,,,,,263,263,264,264,264,,264',
'263,263,,264,264,,,,264,,264,264,264,264,264,264,264,,,,,264,264,264',
'264,264,264,264,,,264,,,,,,,264,,,264,264,264,264,264,264,264,264,264',
'264,,264,264,,264,264,264,,,,,,,,,,,,,,,,,,,,264,,,264,,,264,,,,,264',
',264,,264,,,,,,,,264,,,,,264,264,264,264,264,264,,,,264,264,,,,,,,264',
'264,272,272,272,,272,264,264,,272,272,,,,272,,272,272,272,272,272,272',
'272,,,,,272,272,272,272,272,272,272,,,272,,,,,,,272,,,272,272,272,272',
'272,272,272,272,272,272,,272,272,,272,272,272,,,,,,,,,,,,,,,,,,,,272',
',,272,,272,272,,,,,272,,272,,272,,,,,,,,272,,,,,272,272,272,272,272',
'272,,,,272,272,,,,,,,272,272,498,498,498,,498,272,272,,498,498,,,,498',
',498,498,498,498,498,498,498,,,,,498,498,498,498,498,498,498,,,498,',
',,,,,498,,,498,498,498,498,498,498,498,498,498,498,,498,498,,,,498,',
',,,,,,,,,,,,,,,,,,498,,,498,,,498,,,,,,,,,,,,,,,,,,,,,,498,498,498,498',
'498,498,,,,498,498,,,651,651,651,,651,498,,,651,651,,498,498,651,,651',
'651,651,651,651,651,651,,,,,651,651,651,651,651,651,651,,,651,,,,,,',
'651,,,651,651,651,651,651,651,651,651,651,651,,651,651,,,,651,,,,,,',
',,,,,,,,,,,,,651,,,651,,,651,,,,,,,,,,,,,,,,,,,,,,651,651,651,651,651',
'651,,,,651,651,,,647,647,647,647,647,651,,,647,647,,651,651,647,,647',
'647,647,647,647,647,647,,,,,647,647,647,647,647,647,647,,,647,,,,,,647',
'647,647,647,647,647,647,647,647,647,647,647,647,647,,647,647,,647,647',
'647,,,,,,,,,,,,,,,,,,,,647,,,647,,,647,,,,,647,,,,647,,,,,,,,647,,,',
',647,647,647,647,647,647,,,,647,647,,,277,277,277,277,277,647,,,277',
'277,,647,647,277,,277,277,277,277,277,277,277,,,,,277,277,277,277,277',
'277,277,,,277,,,,,,277,277,277,277,277,277,277,277,277,277,277,277,277',
'277,,277,277,,277,277,277,,,,,,,,,,,,,,,,,,,,277,,,277,,,277,,,,,277',
',,,277,,,,,,,,277,,,,,277,277,277,277,277,277,,,,277,277,,,646,646,646',
'646,646,277,,,646,646,,277,277,646,,646,646,646,646,646,646,646,,,,',
'646,646,646,646,646,646,646,,,646,,,,,,646,646,646,646,646,646,646,646',
'646,646,646,646,646,646,,646,646,,646,646,646,,,,,,,,,,,,,,,,,,,,646',
',,646,,,646,,,,,646,,,,646,,,,,,,,646,,,,,646,646,646,646,646,646,,',
',646,646,,,640,640,640,,640,646,,,640,640,,646,646,640,,640,640,640',
'640,640,640,640,,,,,640,640,640,640,640,640,640,,,640,,,,,,,640,,,640',
'640,640,640,640,640,640,640,640,640,,640,640,,640,640,640,,,,,,,,,,',
',,,,,,,,,640,,,640,,,640,,,,,640,,640,,640,,,,,,,,640,,,,,640,640,640',
'640,640,640,,,,640,640,,,,,,,640,640,634,634,634,634,634,640,640,,634',
'634,,,,634,,634,634,634,634,634,634,634,,,,,634,634,634,634,634,634',
'634,,,634,,,,,,634,634,634,634,634,634,634,634,634,634,634,634,634,634',
',634,634,,634,634,634,,,,,,,,,,,,,,,,,,,,634,,,634,,,634,,,,,634,,,',
'634,,,,,,,,634,,,,,634,634,634,634,634,634,,,,634,634,,,281,281,281',
',281,634,,,281,281,,634,634,281,,281,281,281,281,281,281,281,,,,,281',
'281,281,281,281,281,281,,,281,,,,,,,281,,,281,281,281,281,281,281,281',
'281,281,281,,281,281,,,,281,,,,,,,,,,,,,,,,,,,,281,,,281,,,281,,,,,',
',,,,,,,,,,,,,,,,281,281,281,281,281,281,,,,281,281,,,,281,,,,281,282',
'282,282,282,282,281,281,,282,282,,,,282,,282,282,282,282,282,282,282',
',,,,282,282,282,282,282,282,282,,,282,,,,,,282,282,282,282,282,282,282',
'282,282,282,282,282,282,282,,282,282,,282,282,282,,,,,,,,,,,,,,,,,,',
',282,,,282,,,282,,,,,282,,,,282,,,,,,,,282,,,,,282,282,282,282,282,282',
',,,282,282,,,626,626,626,,626,282,,,626,626,,282,282,626,,626,626,626',
'626,626,626,626,,,,,626,626,626,626,626,626,626,,,626,,,,,,,626,,,626',
'626,626,626,626,626,626,626,626,626,,626,626,,626,626,626,,,,,,,,,,',
',,,,,,,,,626,,,626,,,626,,,,,,,,,626,,,,,,,,626,,,,,626,626,626,626',
'626,626,,,,626,626,,,622,622,622,622,622,626,,,622,622,,626,626,622',
',622,622,622,622,622,622,622,,,,,622,622,622,622,622,622,622,,,622,',
',,,,622,622,622,622,622,622,622,622,622,622,622,622,622,622,,622,622',
',622,622,622,,,,,,,,,,,,,,,,,,,,622,,,622,,,622,,,,,622,,,,622,,,,,',
',,622,,,,,622,622,622,622,622,622,,,,622,622,,,618,618,618,,618,622',
',,618,618,,622,622,618,,618,618,618,618,618,618,618,,,,,618,618,618',
'618,618,618,618,,,618,,,,,,,618,,,618,618,618,618,618,618,618,618,618',
'618,,618,618,,618,618,618,,,,,,,,,,,,,,,,,,,,618,,,618,,,618,,,,,,,',
',618,,,,,,,,618,,,,,618,618,618,618,618,618,,,,618,618,,,500,500,500',
',500,618,,,500,500,,618,618,500,,500,500,500,500,500,500,500,,,,,500',
'500,500,500,500,500,500,,,500,,,,,,,500,,,500,500,500,500,500,500,500',
'500,500,500,,500,500,,500,500,500,,,,,,,,,,,,,,,,,,,,500,,,500,,,500',
',,,,500,,,,500,,,,,,,,500,,,,,500,500,500,500,500,500,,614,,500,500',
',,,614,614,614,500,500,614,614,614,,614,500,500,,,,,,,,614,614,,,,,',
',,614,614,,614,614,614,614,614,,,,,,,,,,,,,,,,,,,,,,614,614,614,614',
'614,614,614,614,614,614,614,614,614,614,,,614,614,614,,614,614,,,614',
',,614,,614,,614,,614,,614,614,614,614,614,614,614,,614,,614,,,,,,,,',
',,,,614,614,614,614,,614,613,,,,614,,614,613,613,613,,,613,613,613,',
'613,,,,,,,,,613,613,613,,,,,,,,613,613,,613,613,613,613,613,,,,,,,,',
',,,,,,,,,,,,,613,613,613,613,613,613,613,613,613,613,613,613,613,613',
',,613,613,613,,613,613,,,613,,,613,,613,,613,,613,,613,613,613,613,613',
'613,613,,613,613,613,,,,,,,,,,,,,613,613,613,613,,613,,509,509,509,613',
'509,613,,,509,509,,,,509,,509,509,509,509,509,509,509,,,,,509,509,509',
'509,509,509,509,,,509,,,,,,,509,,,509,509,509,509,509,509,509,509,509',
'509,,509,509,,509,509,509,,,,,,,,,,,,,,,,,,,,509,,,509,,,509,,,,,,,',
',509,,,,,,,,509,,,,,509,509,509,509,509,509,,,,509,509,,,610,610,610',
',610,509,,,610,610,,509,509,610,,610,610,610,610,610,610,610,,,,,610',
'610,610,610,610,610,610,,,610,,,,,,,610,,,610,610,610,610,610,610,610',
'610,610,610,,610,610,,610,610,610,,,,,,,,,,,,,,,,,,,,610,,,610,,,610',
',,,,,,,,610,,,,,,,,610,,,,,610,610,610,610,610,610,,,,610,610,,,607',
'607,607,,607,610,,,607,607,,610,610,607,,607,607,607,607,607,607,607',
',,,,607,607,607,607,607,607,607,,,607,,,,,,,607,,,607,607,607,607,607',
'607,607,607,607,607,,607,607,,607,607,607,,,,,,,,,,,,,,,,,,,,607,,,607',
',,607,,,,,,,,,607,,,,,,,,607,,,,,607,607,607,607,607,607,,,,607,607',
',,294,294,294,,294,607,,,294,294,,607,607,294,,294,294,294,294,294,294',
'294,,,,,294,294,294,294,294,294,294,,,294,,,,,,,294,,,294,294,294,294',
'294,294,294,294,294,294,,294,294,,,,294,,,,,,,,,,,,,,,,,,,,294,,,294',
',,294,,,,,,,,,,,,,,,,,,,,,,294,294,294,294,294,294,,,,294,294,,,602',
'602,602,,602,294,,,602,602,,294,294,602,,602,602,602,602,602,602,602',
',,,,602,602,602,602,602,602,602,,,602,,,,,,,602,,,602,602,602,602,602',
'602,602,602,602,602,,602,602,,602,602,602,,,,,,,,,,,,,,,,,,,,602,,,602',
',,602,,,,,,,,,602,,,,,,,,602,,,,,602,602,602,602,602,602,,,,602,602',
',,601,601,601,,601,602,,,601,601,,602,602,601,,601,601,601,601,601,601',
'601,,,,,601,601,601,601,601,601,601,,,601,,,,,,,601,,,601,601,601,601',
'601,601,601,601,601,601,,601,601,,601,601,601,,,,,,,,,,,,,,,,,,,,601',
',,601,,,601,,,,,,,,,601,,,,,,,,601,,,,,601,601,601,601,601,601,,,,601',
'601,,,599,599,599,,599,601,,,599,599,,601,601,599,,599,599,599,599,599',
'599,599,,,,,599,599,599,599,599,599,599,,,599,,,,,,,599,,,599,599,599',
'599,599,599,599,599,599,599,,599,599,,599,599,599,,,,,,,,,,,,,,,,,,',
',599,,,599,,,599,,,,,599,,,,599,,,,,,,,599,,,,,599,599,599,599,599,599',
',,,599,599,,,597,597,597,,597,599,,,597,597,,599,599,597,,597,597,597',
'597,597,597,597,,,,,597,597,597,597,597,597,597,,,597,,,,,,,597,,,597',
'597,597,597,597,597,597,597,597,597,,597,597,,597,597,597,,,,,,,,,,',
',,,,,,,,,597,,,597,,,597,,,,,,,,,597,,,,,,,,597,,,,,597,597,597,597',
'597,597,,,,597,597,,,510,510,510,,510,597,,,510,510,,597,597,510,,510',
'510,510,510,510,510,510,,,,,510,510,510,510,510,510,510,,,510,,,,,,',
'510,,,510,510,510,510,510,510,510,510,510,510,,510,510,,510,510,510',
',,,,,,,,,,,,,,,,,,,510,,,510,,,510,,,,,,,,,510,,,,,,,,510,,,,,510,510',
'510,510,510,510,,,,510,510,,,303,303,303,,303,510,,,303,303,,510,510',
'303,,303,303,303,303,303,303,303,,,,,303,303,303,303,303,303,303,,,303',
',,,,,,303,,,303,303,303,303,303,303,303,303,303,303,,303,303,,303,303',
'303,,,,,,,,,,,,,,,,,,,,303,,,303,303,,303,,,,,,,,,303,,,,,,,,303,,,',
',303,303,303,303,303,303,,,,303,303,,,305,305,305,305,305,303,,,305',
'305,,303,303,305,,305,305,305,305,305,305,305,,,,,305,305,305,305,305',
'305,305,,,305,,,,,,305,305,305,305,305,305,305,305,305,305,305,305,305',
'305,,305,305,,305,305,305,,,,,,,,,,,,,,,,,,,,305,,,305,,,305,,,,,305',
',,,305,,,,,,,,305,,,,,305,305,305,305,305,305,,,,305,305,,,346,346,346',
',346,305,,,346,346,,305,305,346,,346,346,346,346,346,346,346,,,,,346',
'346,346,346,346,346,346,,,346,,,,,,,346,,,346,346,346,346,346,346,346',
'346,346,346,,346,346,,346,346,346,,,,,,,,,,,,,,,,,,,,346,,,346,,,346',
',,,,,,,,346,,,,,,,,346,,,,,346,346,346,346,346,346,,,,346,346,,,345',
'345,345,,345,346,,,345,345,,346,346,345,,345,345,345,345,345,345,345',
',,,,345,345,345,345,345,345,345,,,345,,,,,,,345,,,345,345,345,345,345',
'345,345,345,345,345,,345,345,,345,345,345,,,,,,,,,,,,,,,,,,,,345,,,345',
',,345,,,,,,,,,345,,,,,,,,345,,,,,345,345,345,345,345,345,,,,345,345',
',,570,570,570,,570,345,,,570,570,,345,345,570,,570,570,570,570,570,570',
'570,,,,,570,570,570,570,570,570,570,,,570,,,,,,,570,,,570,570,570,570',
'570,570,570,570,570,570,,570,570,,570,570,570,,,,,,,,,,,,,,,,,,,,570',
',,570,,,570,,,,,,,,,570,,,,,,,,570,,,,,570,570,570,570,570,570,,,,570',
'570,,,511,511,511,,511,570,,,511,511,,570,570,511,,511,511,511,511,511',
'511,511,,,,,511,511,511,511,511,511,511,,,511,,,,,,,511,,,511,511,511',
'511,511,511,511,511,511,511,,511,511,,511,511,511,,,,,,,,,,,,,,,,,,',
',511,,,511,,,511,,,,,,,,,511,,,,,,,,511,,,,,511,511,511,511,511,511',
',,,511,511,,,515,515,515,,515,511,,,515,515,,511,511,515,,515,515,515',
'515,515,515,515,,,,,515,515,515,515,515,515,515,,,515,,,,,,,515,,,515',
'515,515,515,515,515,515,515,515,515,,515,515,,515,515,515,,,,,,,,,,',
',,,,,,,,,515,,,515,,,515,,,,,,,,,515,,,,,,,,515,,,,,515,515,515,515',
'515,515,,,,515,515,,,561,561,561,561,561,515,,,561,561,,515,515,561',
',561,561,561,561,561,561,561,,,,,561,561,561,561,561,561,561,,,561,',
',,,,561,561,561,561,561,561,561,561,561,561,561,561,561,561,,561,561',
',561,561,561,,,,,,,,,,,,,,,,,,,,561,,,561,,,561,,,,,561,,,,561,,,,,',
',,561,,,,,561,561,561,561,561,561,,,,561,561,,,521,521,521,,521,561',
',,521,521,,561,561,521,,521,521,521,521,521,521,521,,,,,521,521,521',
'521,521,521,521,,,521,,,,,,,521,,,521,521,521,521,521,521,521,521,521',
'521,,521,521,,521,521,521,,,,,,,,,,,,,,,,,,,,521,,,521,,,521,,,,,521',
',,,521,,,,,,,,521,,,,,521,521,521,521,521,521,,,,521,521,,,,,,,521,521',
'524,524,524,,524,521,521,,524,524,,,,524,,524,524,524,524,524,524,524',
',,,,524,524,524,524,524,524,524,,,524,,,,,,,524,,,524,524,524,524,524',
'524,524,524,524,524,,524,524,,524,524,524,,,,,,,,,,,,,,,,,,,,524,,,524',
',,524,,,,,,,,,524,,,,,,,,524,,,,,524,524,524,524,524,524,,,,524,524',
',,,,,,524,524,556,556,556,556,556,524,524,,556,556,,,,556,,556,556,556',
'556,556,556,556,,,,,556,556,556,556,556,556,556,,,556,,,,,,556,556,556',
'556,556,556,556,556,556,556,556,556,556,556,,556,556,,556,556,556,,',
',,,,,,,,,,,,,,,,,556,,,556,,,556,,,,,556,,,,556,,,,,,,,556,,,,,556,556',
'556,556,556,556,,,,556,556,,,552,552,552,552,552,556,,,552,552,,556',
'556,552,,552,552,552,552,552,552,552,,,,,552,552,552,552,552,552,552',
',,552,,,,,,552,552,552,552,552,552,552,552,552,552,552,552,552,552,',
'552,552,,552,552,552,,,,,,,,,,,,,,,,,,,,552,,,552,,,552,,,,,552,,,,552',
',,,,,,,552,,,,,552,552,552,552,552,552,,,,552,552,,,538,538,538,,538',
'552,,,538,538,,552,552,538,,538,538,538,538,538,538,538,,,,,538,538',
'538,538,538,538,538,,,538,,,,,,,538,,,538,538,538,538,538,538,538,538',
'538,538,,538,538,,,,538,,,,,,,,,,,,,,,,,,,,538,,,538,,,538,,,,,,,,,',
',,,,,,,,,,,,538,538,538,538,538,538,,,,538,538,,,532,532,532,532,532',
'538,,,532,532,,538,538,532,,532,532,532,532,532,532,532,,,,,532,532',
'532,532,532,532,532,,,532,,,,,,532,532,532,532,532,532,532,532,532,532',
'532,532,532,532,,532,532,,532,532,532,,,,,,,,,,,,,,,,,,,,532,,,532,',
',532,,,,,532,,,,532,,,,,,,,532,,,,,532,532,532,532,532,532,,,,532,532',
',,531,531,531,531,531,532,,,531,531,,532,532,531,,531,531,531,531,531',
'531,531,,,,,531,531,531,531,531,531,531,,,531,,,,,,531,531,531,531,531',
'531,531,531,531,531,531,531,531,531,,531,531,,531,531,531,,,,,,,,,,',
',,,,,,,,,531,,,531,,,531,,,,,531,,,,531,,,,,,,,531,,,,,531,531,531,531',
'531,531,,,,531,531,,,790,790,790,790,790,531,,,790,790,,531,531,790',
',790,790,790,790,790,790,790,,,,,790,790,790,790,790,790,790,,,790,',
',,,,790,790,790,790,790,790,790,790,790,790,790,790,790,790,,790,790',
',790,790,790,,,,,,,,,,,,,,,,,,,,790,,,790,,,790,,,,,790,,,,790,,,,,',
',,790,,,,,790,790,790,790,790,790,,473,,790,790,,,,473,473,473,,790',
'473,473,473,,473,790,790,,,,,,,,473,,,,,,,,,473,473,,473,473,473,473',
'473,,,,,,,,,,,,476,,,,,,,476,476,476,,,476,476,476,,476,,,,,473,,,,',
'476,,473,,,,,473,473,476,476,,476,476,476,476,476,,,,,,,,,,,,,473,,',
',,,,,,,,,,473,,473,,,473,,476,,,,,,,476,,,,,476,476,,,,,,,,,,,,,,,,',
',,,,476,,,,,,,,,,,,,476,,476,,,476,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7',
'7,7,7,7,7,7,7,,,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,,,7,,',
',,,,,7,7,,7,7,7,7,7,7,7,,,7,,,,,7,7,7,7,,,,,,,,,,,,,7,7,,7,7,7,7,7,7',
'7,7,7,7,7,,,7,7,,,,,,,,,,7,393,393,393,393,393,393,393,393,393,393,393',
'393,393,393,393,393,393,393,393,393,393,393,393,393,,,393,393,393,393',
'393,393,393,393,393,393,393,393,393,393,393,393,393,393,393,393,393',
'393,393,,,393,,,,,,,,393,393,,393,393,393,393,393,393,393,,,393,,,,',
'393,393,393,393,,,,,,,,,,,,,393,393,,393,393,393,393,393,393,393,393',
'393,393,393,,,393,393,,,,,,,,,,393,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6',
'6,6,6,6,6,6,6,,,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,,6,',
',,,,,,6,6,,6,6,6,6,6,6,6,,,6,,,,,6,6,6,6,,,,,,,,,,,,,6,6,,6,6,6,6,6',
'6,6,6,6,6,6,,,6,6,,,,,,,,,,6,397,397,397,397,397,397,397,397,397,397',
'397,397,397,397,397,397,397,397,397,397,397,397,397,397,,,397,397,397',
'397,397,397,397,397,397,397,397,397,397,397,397,397,397,397,397,397',
'397,397,397,,,397,,,,,,,,397,397,,397,397,397,397,397,397,397,,,397',
',,,,397,397,397,397,,,,,,,,,,,,,397,397,,397,397,397,397,397,397,397',
'397,397,397,397,,,397,397,,,,,,,,,,397,721,721,721,721,721,721,721,721',
'721,721,721,721,721,721,721,721,721,721,721,721,721,721,721,721,,,721',
'721,721,721,721,721,721,721,721,721,721,721,721,721,721,721,721,721',
'721,721,721,721,721,,,721,,,,,,,,721,721,,721,721,721,721,721,721,721',
',,721,,,,,721,721,721,721,,,,,,,,,,,,,721,721,,721,721,721,721,721,721',
'721,721,721,721,721,,,721,189,189,189,189,189,189,189,189,189,189,189',
'189,189,189,189,189,189,189,189,189,189,189,189,189,,,189,189,189,189',
'189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189',
'189,189,189,189,189,189,,,,,,,189,189,,189,189,189,189,189,189,189,',
',189,,,,,189,189,189,189,,,,,,,,,,,,,189,189,,189,189,189,189,189,189',
'189,189,189,189,189,,,189,79,79,79,79,79,79,79,79,79,79,79,79,79,79',
'79,79,79,79,79,79,79,79,79,79,,,79,79,79,79,79,79,79,79,79,79,79,79',
'79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,,,,,,,79,79,,79,79,79,79',
'79,79,79,,,79,,,,,79,79,79,79,,,,,,,,,,,,,79,79,,79,79,79,79,79,79,79',
'79,79,79,79,,,79,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65',
'65,65,65,65,65,65,65,,,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65',
'65,65,65,65,65,65,65,65,65,65,65,65,,,,,,,65,65,,65,65,65,65,65,65,65',
',,65,,,,,65,65,65,65,,,,,,65,,,,,,,65,65,,65,65,65,65,65,65,65,65,65',
'65,65,639,639,65,,639,,,,,,,,639,639,,639,639,639,639,639,639,639,,',
'639,,,,,639,639,639,639,,,,,,,,,,,,,639,639,,639,639,639,639,639,639',
'639,639,639,639,639,703,703,639,,703,,,,,,,,703,703,,703,703,703,703',
'703,703,703,,,703,,,,,703,703,703,703,,,,,,,,,,,,,703,703,,703,703,703',
'703,703,703,703,703,703,703,703,513,513,703,,513,,,,,,,,513,513,,513',
'513,513,513,513,513,513,,,513,,,,,513,513,513,513,,,,,,,,,,,,,513,513',
',513,513,513,513,513,513,513,513,513,513,513,777,777,513,,777,,,,,,',
',777,777,,777,777,777,777,777,777,777,,,777,,,,,777,777,777,777,,,,',
',,,,,,,,777,777,,777,777,777,777,777,777,777,777,777,777,777,502,502',
'777,,502,,,,,,,,502,502,,502,502,502,502,502,502,502,,,502,,,,,502,502',
'502,502,,,,,,,,,,,,,502,502,,502,502,502,502,502,502,502,502,502,502',
'502,894,894,502,,894,,,,,,,,894,894,,894,894,894,894,894,894,894,,,894',
',,,,894,894,894,894,,,,,,,,,,,,,894,894,,894,894,894,894,894,894,894',
'894,894,894,894,893,893,894,,893,,,,,,,,893,893,,893,893,893,893,893',
'893,893,,,893,,,,,893,893,893,893,,,,,,893,,,,,,,893,893,,893,893,893',
'893,893,893,893,893,893,893,893,512,512,893,,512,,,,,,,,512,512,,512',
'512,512,512,512,512,512,,,512,,,,,512,512,512,512,,,,,,512,,,,,,,512',
'512,,512,512,512,512,512,512,512,512,512,512,512,261,261,512,,261,,',
',,,,,261,261,,261,261,261,261,261,261,261,,,261,,,,,261,261,261,261',
',,,,,,,,,,,,261,261,,261,261,261,261,261,261,261,261,261,261,261,705',
'705,261,,705,,,,,,,,705,705,,705,705,705,705,705,705,705,,,705,,,,,705',
'705,705,705,,,,,,705,,,,,,,705,705,,705,705,705,705,705,705,705,705',
'705,705,705,428,428,705,,428,,,,,,,,428,428,,428,428,428,428,428,428',
'428,,,428,,,,,428,428,428,428,,,,,,428,,,,,,,428,428,,428,428,428,428',
'428,428,428,428,428,428,428,429,429,428,,429,,,,,,,,429,429,,429,429',
'429,429,429,429,429,,,429,,,,,429,429,429,429,,,,,,,,,,,,,429,429,,429',
'429,429,429,429,429,429,429,429,429,429,199,199,429,,199,,,,,,,,199',
'199,,199,199,199,199,199,199,199,,,199,,,,,199,199,199,199,,,,,,,,,',
',,,199,199,,199,199,199,199,199,199,199,199,199,199,199,501,501,199',
',501,,,,,,,,501,501,,501,501,501,501,501,501,501,,,501,,,,,501,501,501',
'501,,,,,,501,,,,,,,501,501,,501,501,501,501,501,501,501,501,501,501',
'501,260,260,501,,260,,,,,,,,260,260,,260,260,260,260,260,260,260,,,260',
',,,,260,260,260,260,,,,,,,,,,,,,260,260,,260,260,260,260,260,260,260',
'260,260,260,260,638,638,260,,638,,,,,,,,638,638,,638,638,638,638,638',
'638,638,,,638,,,,,638,638,638,638,,,,,,,,,,,,,638,638,,638,638,638,638',
'638,638,638,638,638,638,638,198,198,638,,198,,,,,,,,198,198,,198,198',
'198,198,198,198,198,,,198,,,,,198,198,198,198,,,,,,198,,,,,,,198,198',
',198,198,198,198,198,198,198,198,198,198,198,,,198' ]
        racc_action_check = arr = ::Array.new(22346, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_action_pointer = [
    -2,  1181,   nil,   273,   nil,  1321, 20665, 20425,  1053,  1047,
  1018,   999,  1023,   311,   246,   207,   nil,  1687,  1809,  1321,
  1030,   nil,  2175,  2303,  2431,    -3,   121,  2799,  2927,   nil,
  3053,  3175,  3297,   nil,   903,   397,   971,   212,  3913,  4035,
  4157,   853,   497,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
  4519,   nil,  4652,  4774,  4902,    -1,  3438,  5274,  5396,   nil,
   nil,  5518,  5640,   858,   nil, 21232,   nil,   nil,   nil,   nil,
   nil,   -49,   nil,   nil,   nil,   nil,   nil,   804,   773, 21123,
   nil,   nil,   nil,  6506,   nil,   nil,  6634,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   857,   nil,  6884,   nil,
   nil,   nil,  7006,  7128,  7250,  7372,  7494,   nil,   529,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil, 21014,
   684,   nil,  7982,  8104,  8226,  8348,  8470,  8592, 22235, 21999,
  8964,  9086,  9208,   nil,   338,   237,   681,   116,   579,   614,
 10068, 10190,   nil,   nil, 10312,   608, 10556, 10678, 10800, 10922,
 11044, 11166, 11288, 11410, 11532, 11654, 11776, 11898, 12020, 12142,
 12264, 12386, 12508, 12630, 12752, 12874, 12996, 13118, 13240, 13362,
 13484, 13606,   nil,   nil,   nil,   949,   nil,   530,   528,   nil,
 14100,   338, 14344,   nil,   nil,   nil,   nil, 14466,   nil,   nil,
 22117, 21763,   -29, 14954, 15082,   nil,   nil,   nil,   nil,   nil,
   nil,   nil, 15210,   337,   nil,  1071,   698, 15704,   818,   978,
  1003, 16198, 16326,   424,   344,   980,   343,    58,    43,   104,
   nil,   208,   309,   nil, 17553,   nil,   408,   478,   550,   242,
   nil,   626,   nil, 18285,   nil, 18407,     3,   nil,   571,   485,
   105,   621,   287,   665,   nil,   233,   nil,   nil,   549, 14601,
   nil,   nil,   nil,   665,   675,   nil,   683,   692,   nil,   nil,
   nil,   nil,   nil,   nil,  2342,   nil,   nil,   nil,   772,   nil,
   nil,   856,   375,    62,    83, 18651, 18529,   438,   318,   813,
   934, 14832,   nil, 14710,   312,   412,   339,   486,   452,   448,
   488,    46,   nil,   184,   nil,   nil,  5030,   nil,   182,   nil,
   234,   nil,   -24,  1030,   -51,   nil,  1039,   -43,   nil,   231,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil, 20545,   nil,   nil,   nil, 20785,  1079,  1081,
   nil,   nil,   571,   nil,   120,  1055,   nil,  1054,   nil,   nil,
  2431,  1068,   705,   260,   238,   nil,   nil,   nil,   366,  1069,
   444,   nil,   571,  1193,   nil,  2053,   nil,   nil, 21881, 21940,
  2681,   -44,  3547,  5152,  5762,   184,   nil,  4652,  3913,   692,
    -9,  1042,  1033,  1032,  1031,  4470,  3418,  3171,  3053,  2750,
  2681,  3290,  2880,  4035,  3791,  3669,  3547,  4401,  1384,  1134,
  4279,  4157,  1193,   156,   nil,  5884,   nil,   nil,  6378,   nil,
  7738,   nil,   nil, 20245,   nil,   nil, 20299,    72,   nil,   999,
   961,   340,   933,  1007,   nil,   nil,  9574,    -7,   211,   939,
   nil,   nil,  9940,   897,   848,   nil,   nil,   840, 15338,   860,
 16814, 22058, 21527,   422,   852,   nil,   nil,   806,   nil, 17187,
 18163, 18895, 21704, 21409,  2303, 19017,   874,   839,   738,   nil,
   nil, 19261,   nil,   nil, 19389,   nil,  6012,   nil,   nil,   nil,
   nil, 20005, 19883,   707,   nil,   767,   nil,   nil, 19761,  3310,
   nil,   500,   nil,   nil,   696,   nil,  2214,   nil,   658,   686,
   nil,   nil, 19639,   766,   nil,   nil, 19517,   170,   -19,   699,
   704, 19139,   nil,   nil,    -2,   644,   nil,   321,   nil,    33,
 18773,   nil,  5653,   nil,   nil,   nil,    34,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   164,   nil,   nil,
   nil,   555,   nil,   nil,   nil,   nil,   nil, 18041,   534, 17919,
   734, 17797, 17675,   334,   nil,   nil,   nil, 17431,   229,   nil,
 17309,    82,    15, 17060, 16932,   -33,   699,   nil, 16692,   nil,
  3188,   nil, 16570,   492,   nil,   692, 16448,   nil,   902,   nil,
   nil,   nil,   nil,   nil, 16076,   nil,  1101,   295, 22176, 21291,
 15948,   821,   849,   nil,   nil,   826, 15826, 15582,   nil,  1565,
   -63, 15460,  -103,   nil,   -54,    92,   137,    13,   135,   420,
   170, 14588,  1071,   264,   292,   127,   375, 14222,   nil,   nil,
   473,   nil,   347,   492,   nil,   nil,   373,   nil,   406,   315,
   530,   462,   481,   nil,   nil,   524,  2470,   nil,   675,   nil,
   614,   nil,   nil,   nil,   nil,   nil,   637,   nil,   641, 13978,
 13856,   193,   nil, 21350, 13728, 21822,   nil,   nil, 10434,   232,
   -25,  9818,  9696,  3477,   131,   598,   599,   600,   nil,   594,
   nil, 20905,   671,   857,  9452,   nil,   nil,   nil,  1443,   656,
  9330,  8842,   nil,  1565,   nil,  1687,   nil,   nil,  1809,   nil,
  1931,  8720,  7860,  7616,   252,  2175,   nil,   724,   824,   nil,
   nil,   736,   nil,   nil,   759,   760,   306,   829,  6762,   nil,
   751,   858,   753,   342,   nil,   nil,   888,   nil,  6256,   775,
   818,   nil,   nil,   nil,   nil,   nil,   nil, 21468,   nil,   894,
   nil,   nil,   nil,   nil,   988,   908,   nil,   nil,   920,  6134,
 20127,   nil,   nil,    77,   162,   477,   nil,   858,   856,  4401,
   171,   nil,   nil,   952,   953,   841,   nil,  3227,   nil,   567,
   nil,   nil,   -19,  4279,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   867,   859,   nil,  2559,  3791,   nil,   nil,   nil,   918,
   884,   nil,   nil,   nil,  3669,   nil,   nil,    -7,  3425,   nil,
   944,  -113,   nil,   nil,  2559,   nil,  1027,  1036,  2053,  1931,
   nil,   nil,  1050,   nil,  1565,   nil,   nil,   979,   943,   946,
   nil,   954,   948,   nil,   nil,  2861,   nil,   nil,   nil,  1443,
   nil,  1321,   295,   282,  1045,   162,   nil,   nil,    70,   nil,
   nil,   271,  1071,   nil,  1137,   nil,   441,   nil,   nil,   nil,
   949,  1146,   821, 21645, 21586,   421,   699,   nil,   nil,   nil,
  1153,   nil,  1038,  1155,   nil,  1076,    89,    63,    71,   475,
   385,   nil,   nil,   nil,   574,   nil ]

racc_action_default = [
    -3,  -526,    -1,  -513,    -4,    -6,  -526,  -526,  -526,  -526,
  -526,  -526,  -526,  -526,  -267,   -36,   -37,  -526,  -526,   -42,
   -44,   -45,  -278,  -317,  -318,   -49,  -245,  -245,  -245,   -61,
  -524,   -65,   -72,   -74,  -526,  -444,  -526,  -526,  -526,  -526,
  -526,  -515,  -225,  -260,  -261,  -262,  -263,  -264,  -265,  -266,
  -503,  -269,  -526,  -524,  -524,  -286,  -524,  -526,  -526,  -291,
  -294,  -513,  -526,  -303,  -309,  -526,  -319,  -320,  -389,  -390,
  -391,  -392,  -393,  -524,  -396,  -524,  -524,  -524,  -524,  -524,
  -423,  -429,  -430,  -433,  -434,  -435,  -436,  -437,  -438,  -439,
  -440,  -441,  -442,  -443,  -446,  -447,  -526,    -2,  -514,  -520,
  -521,  -522,  -526,  -526,  -526,  -526,  -526,   -12,  -526,  -100,
  -101,  -102,  -103,  -104,  -105,  -106,  -109,  -110,  -111,  -112,
  -113,  -114,  -115,  -116,  -117,  -118,  -119,  -120,  -121,  -122,
  -123,  -124,  -125,  -126,  -127,  -128,  -129,  -130,  -131,  -132,
  -133,  -134,  -135,  -136,  -137,  -138,  -139,  -140,  -141,  -142,
  -143,  -144,  -145,  -146,  -147,  -148,  -149,  -150,  -151,  -152,
  -153,  -154,  -155,  -156,  -157,  -158,  -159,  -160,  -161,  -162,
  -163,  -164,  -165,  -166,  -167,  -168,  -169,  -170,  -171,  -172,
  -173,  -174,  -175,  -176,  -177,  -178,  -179,  -180,  -181,  -526,
   -17,  -107,  -524,  -524,  -526,  -526,  -526,  -524,  -526,  -526,
  -526,  -526,  -526,   -40,  -526,  -444,  -526,  -267,  -526,  -526,
  -524,  -526,   -41,  -217,  -526,  -526,  -526,  -526,  -526,  -526,
  -526,  -526,  -526,  -526,  -526,  -526,  -526,  -526,  -526,  -526,
  -526,  -526,  -526,  -526,  -526,  -526,  -526,  -526,  -526,  -526,
  -526,  -526,  -360,  -362,   -46,  -226,  -238,  -525,  -525,  -242,
  -526,  -253,  -526,  -278,  -317,  -318,  -497,  -526,   -47,   -48,
  -526,  -526,   -53,  -524,  -526,  -285,  -365,  -372,  -374,   -59,
  -370,   -60,  -526,  -513,    -9,   -10,   -61,  -524,  -526,  -526,
   -66,   -69,  -524,   -80,  -526,  -526,   -87,  -281,  -515,  -526,
  -321,  -371,  -526,   -71,  -526,   -76,  -274,  -431,  -432,  -526,
  -202,  -203,  -218,  -526,  -516,  -524,  -515,  -227,  -515,  -517,
  -517,  -526,  -517,  -526,  -494,  -517,  -287,  -288,  -526,  -526,
  -332,  -333,  -341,  -524,  -466,  -348,  -524,  -524,  -359,  -462,
  -463,  -464,  -465,  -467,  -526,  -478,  -483,  -484,  -486,  -487,
  -488,  -526,   -43,  -526,  -526,  -526,  -526,  -513,  -526,  -514,
  -526,  -526,  -306,  -526,  -100,  -101,  -137,  -138,  -154,  -159,
  -166,  -169,  -312,  -526,  -444,  -492,  -526,  -394,  -526,  -409,
  -526,  -411,  -526,  -526,  -526,  -401,  -526,  -526,  -407,  -526,
  -422,  -424,  -425,  -426,  -427,   916,    -5,  -523,   -18,   -19,
   -20,   -21,   -22,  -526,   -14,   -15,   -16,  -526,  -526,  -526,
   -25,   -33,  -182,  -253,  -526,  -526,   -26,   -34,   -35,   -27,
  -184,  -526,  -504,  -505,  -245,  -367,  -506,  -507,  -504,  -245,
  -505,  -369,  -509,  -510,   -32,  -191,   -38,   -39,  -526,  -526,
  -524,  -274,  -526,  -526,  -526,  -526,  -284,  -192,  -193,  -194,
  -195,  -196,  -197,  -198,  -199,  -204,  -205,  -206,  -207,  -208,
  -209,  -210,  -211,  -212,  -213,  -214,  -215,  -216,  -219,  -220,
  -221,  -222,  -526,  -524,  -239,  -526,  -252,  -240,  -526,  -250,
  -526,  -254,  -500,  -245,  -504,  -505,  -245,  -524,   -54,  -526,
  -515,  -515,  -525,  -238,  -246,  -247,  -526,  -524,  -524,  -526,
  -280,    -8,  -514,  -526,   -62,  -272,   -77,   -67,  -526,  -526,
  -524,  -526,  -526,   -86,  -526,  -431,  -432,   -73,   -78,  -526,
  -526,  -526,  -526,  -526,  -223,  -526,  -381,  -526,  -526,  -228,
  -229,  -519,  -518,  -231,  -519,  -276,  -519,  -496,  -277,  -495,
  -329,  -524,  -524,  -526,  -331,  -526,  -350,  -357,  -526,  -354,
  -355,  -526,  -358,  -466,  -526,  -469,  -526,  -471,  -473,  -477,
  -485,  -489,  -524,  -322,  -323,  -324,  -524,  -526,  -526,  -526,
  -526,  -524,  -376,  -300,   -96,  -526,   -98,  -526,  -267,  -526,
  -526,  -310,  -461,  -314,  -511,  -512,  -515,  -395,  -410,  -413,
  -414,  -416,  -397,  -412,  -398,  -399,  -400,  -526,  -403,  -405,
  -406,  -526,  -428,   -13,  -108,   -23,   -24,  -526,  -259,  -526,
  -275,  -526,  -526,   -55,  -236,  -237,  -366,  -526,   -57,  -368,
  -526,  -504,  -505,  -504,  -505,  -526,  -182,  -283,  -526,  -344,
  -526,  -346,  -524,  -525,  -251,  -255,  -526,  -498,  -526,  -499,
   -50,  -363,   -51,  -364,  -524,  -232,  -526,  -526,  -526,  -526,
  -526,   -42,  -526,  -244,  -248,  -526,  -524,  -524,  -279,   -11,
   -62,  -526,   -70,   -75,  -526,  -504,  -505,  -524,  -508,   -85,
  -526,  -526,  -190,  -200,  -201,  -526,  -524,  -524,  -270,  -271,
  -517,  -255,  -526,  -526,  -330,  -342,  -526,  -349,  -524,  -343,
  -526,  -524,  -524,  -479,  -468,  -526,  -526,  -476,  -524,  -325,
  -524,  -292,  -326,  -327,  -328,  -295,  -526,  -298,  -526,  -526,
  -526,   -96,   -97,  -526,  -524,  -526,  -304,  -448,  -526,  -526,
  -526,  -524,  -524,  -461,  -526,  -491,  -491,  -491,  -460,  -466,
  -481,  -526,  -526,  -526,  -524,  -402,  -404,  -408,  -183,  -257,
  -526,  -526,   -29,  -186,   -30,  -187,   -56,   -31,  -188,   -58,
  -189,  -526,  -526,  -526,  -275,  -224,  -345,  -526,  -526,  -241,
  -256,  -526,  -233,  -234,  -524,  -524,  -515,  -526,  -526,  -249,
  -526,  -526,   -68,   -81,   -79,  -282,  -524,  -339,  -524,  -382,
  -524,  -383,  -384,  -230,  -334,  -335,  -356,  -526,  -274,  -526,
  -352,  -353,  -470,  -472,  -475,  -526,  -336,  -337,  -526,  -524,
  -524,  -297,  -299,  -526,  -526,   -96,   -99,  -508,  -526,  -524,
  -526,  -450,  -307,  -526,  -526,  -515,  -452,  -526,  -456,  -526,
  -458,  -459,  -526,  -526,  -315,  -493,  -415,  -418,  -419,  -420,
  -421,  -526,  -258,   -28,  -185,  -526,  -347,  -361,   -52,  -526,
  -525,  -373,  -375,    -7,  -524,  -388,  -340,  -526,  -526,  -386,
  -273,  -524,  -474,  -289,  -526,  -290,  -526,  -526,  -526,  -524,
  -301,  -275,  -526,  -449,  -524,  -311,  -313,  -526,  -491,  -491,
  -490,  -491,  -526,  -482,  -480,  -461,  -417,  -235,  -243,  -526,
  -387,  -524,   -88,  -526,  -526,   -95,  -385,  -351,  -526,  -293,
  -296,  -524,  -524,  -305,  -526,  -451,  -526,  -454,  -455,  -457,
  -524,  -381,  -524,  -526,  -526,   -94,  -524,  -377,  -378,  -379,
  -526,  -308,  -491,  -526,  -380,  -526,  -504,  -505,  -508,   -93,
  -524,  -302,  -453,  -316,   -89,  -338 ]

clist = [
'13,311,246,246,246,112,112,310,315,212,517,303,290,290,560,467,328,204',
'204,414,419,320,204,204,204,362,10,552,556,280,13,284,284,308,266,270',
'5,481,507,381,401,408,537,290,98,540,542,262,269,271,101,666,204,204',
'712,545,10,204,204,683,293,204,284,478,112,624,343,344,624,675,347,107',
'191,691,695,715,115,115,112,97,4,473,476,278,785,766,643,247,247,247',
'631,520,523,633,527,544,276,529,13,863,702,627,204,204,204,204,13,645',
'101,788,305,388,389,390,391,345,569,678,571,312,578,682,622,789,10,718',
'588,203,346,370,372,12,10,379,5,790,634,348,244,258,259,700,392,882',
'351,411,646,647,799,381,570,310,854,353,717,711,572,627,721,865,318',
'12,306,530,316,844,681,342,342,313,365,342,808,810,811,484,863,308,386',
'573,706,363,463,487,488,400,406,409,112,897,699,424,13,13,204,204,204',
'204,423,770,204,204,204,837,367,368,317,374,587,393,13,204,342,342,342',
'342,715,377,10,10,816,723,724,805,858,696,350,190,833,12,3,783,2,1,',
',10,12,796,,624,,652,483,246,,,,,414,419,,246,,,,,,504,405,405,,290',
'204,204,,718,545,,,687,,204,,,290,518,13,519,328,,284,13,,533,,,,,,',
',508,,284,717,,266,,270,898,,279,10,,13,915,685,10,497,850,426,427,675',
'492,887,888,,889,,101,435,657,12,12,,,683,482,247,493,10,290,657,290',
'499,,247,,726,,12,,276,,204,204,890,276,491,,567,,567,557,558,,,,912',
'860,841,860,,,860,204,,715,,,631,633,,,,,,615,480,485,,,,310,,,,489',
'859,749,861,112,,101,762,112,776,,,780,781,,,736,,,545,12,739,308,,',
'12,756,,803,804,718,623,,,605,559,,,904,609,423,,204,,,,,603,12,,,860',
'608,,,,,,,717,654,,636,637,773,,310,342,342,,593,754,755,,594,115,398',
'399,,115,902,624,,,,,,670,576,849,35,290,308,605,279,,605,,204,,,,,',
'13,,630,,508,632,284,,204,423,,,852,842,,,35,283,283,,423,771,,204,',
',10,290,,871,,,,,657,,649,,,13,13,,,,,,679,,283,,,364,,,722,899,,279',
',,13,,279,,13,10,10,884,877,13,896,,,,,,,,204,,,,,,35,,10,,328,,10,',
'35,747,,10,,,,,732,734,623,903,306,868,737,,,204,204,,692,692,,204,',
',,,,,,,707,,,,757,,13,12,,665,,,,,,,290,,13,,,,,,204,,290,,,,13,13,10',
'508,,284,798,,,,,,310,764,10,284,12,12,,605,,,609,,35,35,10,10,,,,,',
',710,814,,12,308,,,12,35,,,,12,,,,,,,,204,,423,,204,,,,204,794,,13,13',
',657,,,800,,,112,,823,,13,,829,,,,,204,405,,,,,10,10,,,,,,,,,,,,10,',
',12,,35,801,802,,283,35,806,605,605,793,12,,,13,,,,283,,,857,423,12',
'12,,,,,35,,,,,,13,13,,,,10,,,,,13,,,,672,673,14,,,,,342,,,,,10,10,,342',
'290,,,,830,688,10,,,690,364,,364,,698,13,14,286,286,873,,905,692,12',
'12,204,,310,853,,13,,,,878,13,12,,,,,10,,,,876,,,286,,,,13,308,,,10',
',,,,10,,13,,,,,,,,13,,204,423,748,,13,10,,12,,,,14,,,751,,10,,,14,,',
',,10,,760,761,12,12,10,,,,,,,,12,,,,,,,,,,,,,,,,,,,,,,,,342,,,,,,,,',
',,12,,,,,35,,,,,,283,,,,12,,,,,12,,,,,,,,,,,821,14,14,,,,12,,,,,,,35',
'35,,,12,,14,364,,,,,12,,,,,,12,,,35,,,,35,,,,,35,836,,,,,,,,,,,,,,,',
',,,,,846,847,,,,,,,,,,,,,,,,,,,,14,,,,286,14,,,,,,,,,,,,286,35,,,,,',
'870,,,,14,,35,,,,,,,,,881,,,35,35,,,,283,,,,,,,,,,283,,,,891,,,,,,,',
',,,900,,568,,568,,,,,,,,,,910,,,,,,,,,,,,,,,,,,,,,35,35,,,,,,,,,213',
',,35,245,245,245,,,,,,,,,,,,,,300,301,302,,,,,,,,,,,,,245,245,,,,,,',
',,,,35,,,,,,,,,,,,,,,,,,,,,35,35,,,,,,,,,35,,,,,,,,,,,,,,,,,,,,14,,',
',,,286,,,,,,,,,35,,,,872,,,,,,,,,,,35,,,,,35,,,,14,14,,,,,,568,,,,,',
'35,,,,,,,,14,,,35,14,,,,,14,,35,,,,,,35,402,245,410,245,403,407,425',
',,,,,,,,,,,,,213,,437,438,439,440,441,442,443,444,445,446,447,448,449',
'450,451,452,453,454,455,456,457,458,459,460,461,462,,,,,14,,,,245,,245',
',469,,471,245,14,,,472,,245,245,,307,314,,321,14,14,245,,,286,,,,,,',
',,,286,369,,371,371,375,378,371,,,,,,,,,,,514,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,14,14,,,,,,,,,,,820,14,,,,,,,,,,,,,,,,,289,289,,,,,,289,289',
'289,,,,,,,,,,,,,,289,,,,14,,,,289,,,,,,,,245,,,,598,,307,,,14,14,,,',
',,,,,14,,,,,,,245,,425,616,410,,,,,,,,,,,,,,,,,,,,,,,,14,,,,875,,,245',
',,245,625,245,,628,14,629,,479,,14,,,,,,,,641,,,,642,,,,,14,,,,,245',
',,,,,14,,,662,663,664,,,14,,,,,,14,245,,,245,625,245,,628,,671,,,,,',
'536,,,536,536,,,,,,,,289,,289,289,289,289,289,289,289,289,289,289,289',
'289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,,,,,,,,',
'289,,289,,,,,289,,,,,,728,,245,,733,735,729,,,,738,,,740,,,,,289,,,745',
',,,,,,,245,604,289,,750,,,,,,,289,,,245,,,307,625,,,,,,,,,,,,,,,,,,',
',,,,245,,,,769,,,,,619,,,,,,,,,289,604,289,,604,619,,,,,,,,,245,619',
'619,,403,245,,,,,,,,,307,,,,,,,,,,,,,,,,,245,824,,,822,,,,289,,,733',
'735,738,,,,,,,,,,,,,,,245,,,,403,,,,289,289,289,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,289,,,289,,289,,,,,,,,,245,,,,864,,,,,,,,824,,,,,,,289,,,',
',,,,,,,289,289,289,,,245,,,,671,,,289,,,289,,289,,,,,,,,,245,604,,289',
'671,,,,,,767,772,,,,,,,,,,,536,245,,536,536,,,,,,767,,767,,,,,,,,,,',
',,,307,,,,,,,,,,,,,,289,,289,,,,,,,,,,,289,,,,,,,,289,,,,,,,,289,,,',
',,,604,604,,,,,,,,,,,835,,,,839,,289,,,,,,,,,,289,,,,,,289,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,289,,,,,,,,,,,,,,,,,,,,,536,,,,,,,,,,289,,,,,',
',,,,,289,289,289,,,,,,,,,,,,,,,289,,767,,,,,,,,,,,307,,,,,,,,,,,,,,',
',,,767,,,,,,,,,,,,,,,,,,,,,,,,289,,,,,,,,,,,,289,,,,,,,,,,,,,289,,,',
',,,,,,289,,,,,,,,,,,,,,,,,,,,,289' ]
        racc_goto_table = arr = ::Array.new(2385, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'22,23,30,30,30,49,49,56,56,19,8,52,53,53,79,59,107,22,22,34,34,103,22',
'22,22,48,18,76,76,42,22,22,22,30,57,57,7,33,44,48,25,25,109,53,6,109',
'109,35,35,35,81,10,22,22,82,138,18,22,22,139,43,22,22,36,49,60,17,17',
'60,106,17,15,15,78,78,110,51,51,49,4,5,34,34,40,77,11,60,54,54,54,58',
'55,55,58,55,140,39,55,22,143,46,146,22,22,22,22,22,61,81,11,85,17,17',
'17,17,86,47,111,47,54,129,111,37,87,18,108,129,27,88,126,126,21,18,126',
'7,89,37,4,32,32,32,90,7,91,92,23,37,37,93,48,94,56,95,96,111,97,98,146',
'99,100,101,21,27,102,73,104,105,27,27,72,71,27,137,137,137,62,143,30',
'5,84,80,83,113,115,116,19,19,19,49,117,118,19,22,22,22,22,22,22,49,119',
'22,22,22,120,124,125,75,127,128,28,22,22,27,27,27,27,110,130,18,18,131',
'132,133,135,136,79,20,16,12,21,3,141,2,1,,,18,21,46,,60,,44,30,30,,',
',,34,34,,30,,,,,,52,54,54,,53,22,22,,108,138,,,138,,22,,,53,52,22,52',
'107,,22,22,,103,,,,,,,,42,,22,111,,57,,57,11,,9,18,,22,77,140,18,43',
'78,27,27,106,6,137,137,,137,,81,27,34,21,21,,,139,54,54,40,18,53,34',
'53,40,,54,,129,,21,,39,,22,22,82,39,4,,22,,22,17,17,,,,137,108,111,108',
',,108,22,,110,,,58,58,,,,,,23,32,32,,,,56,,,,32,111,59,111,49,,81,44',
'49,109,,,109,109,,,36,,,138,21,36,30,,,21,33,,8,8,108,56,,,57,4,,,10',
'57,49,,22,,,,,35,21,,,108,35,,,,,,,111,23,,52,52,55,,56,27,27,,15,34',
'34,,15,51,9,9,,51,111,60,,,,,,56,27,76,45,53,30,57,9,,57,,22,,,,,,22',
',35,,42,35,22,,22,49,,,8,138,,,45,45,45,,49,25,,22,,,18,53,,76,,,,,34',
',7,,,22,22,,,,,,22,,45,,,45,,,52,79,,9,,,22,,9,,22,18,18,8,109,22,76',
',,,,,,,22,,,,,,45,,18,,107,,18,,45,103,,18,,,,,19,19,56,8,27,59,19,',
',22,22,,81,81,,22,,,,,,,,,81,,,,30,,22,21,,27,,,,,,,53,,22,,,,,,22,',
'53,,,,22,22,18,42,,22,23,,,,,,56,42,18,22,21,21,,57,,,57,,45,45,18,18',
',,,,,,27,48,,21,30,,,21,45,,,,21,,,,,,,,22,,49,,22,,,,22,17,,22,22,',
'34,,,17,,,49,,19,,22,,52,,,,,22,54,,,,,18,18,,,,,,,,,,,,18,,,21,,45',
'81,81,,45,45,81,57,57,54,21,,,22,,,,45,,,52,49,21,21,,,,,45,,,,,,22',
'22,,,,18,,,,,22,,,,9,9,24,,,,,27,,,,,18,18,,27,53,,,,54,9,18,,,9,45',
',45,,9,22,24,24,24,22,,23,81,21,21,22,,56,81,,22,,,,17,22,21,,,,,18',
',,,18,,,24,,,,22,30,,,18,,,,,18,,22,,,,,,,,22,,22,49,9,,22,18,,21,,',
',24,,,9,,18,,,24,,,,,18,,9,9,21,21,18,,,,,,,,21,,,,,,,,,,,,,,,,,,,,',
',,,27,,,,,,,,,,,21,,,,,45,,,,,,45,,,,21,,,,,21,,,,,,,,,,,9,24,24,,,',
'21,,,,,,,45,45,,,21,,24,45,,,,,21,,,,,,21,,,45,,,,45,,,,,45,9,,,,,,',
',,,,,,,,,,,,,,9,9,,,,,,,,,,,,,,,,,,,,24,,,,24,24,,,,,,,,,,,,24,45,,',
',,,9,,,,24,,45,,,,,,,,,9,,,45,45,,,,45,,,,,,,,,,45,,,,9,,,,,,,,,,,9',
',24,,24,,,,,,,,,,9,,,,,,,,,,,,,,,,,,,,,45,45,,,,,,,,,29,,,45,29,29,29',
',,,,,,,,,,,,,29,29,29,,,,,,,,,,,,,29,29,,,,,,,,,,,45,,,,,,,,,,,,,,,',
',,,,,45,45,,,,,,,,,45,,,,,,,,,,,,,,,,,,,,24,,,,,,24,,,,,,,,,45,,,,45',
',,,,,,,,,,45,,,,,45,,,,24,24,,,,,,24,,,,,,45,,,,,,,,24,,,45,24,,,,,24',
',45,,,,,,45,29,29,29,29,26,26,29,,,,,,,,,,,,,,29,,29,29,29,29,29,29',
'29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,,,,,24,',
',,29,,29,,26,,26,29,24,,,26,,29,29,,14,14,,14,24,24,29,,,24,,,,,,,,',
',24,14,,14,14,14,14,14,,,,,,,,,,,29,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24',
'24,,,,,,,,,,,24,24,,,,,,,,,,,,,,,,,38,38,,,,,,38,38,38,,,,,,,,,,,,,',
'38,,,,24,,,,38,,,,,,,,29,,,,26,,14,,,24,24,,,,,,,,,24,,,,,,,29,,29,29',
'29,,,,,,,,,,,,,,,,,,,,,,,,24,,,,24,,,29,,,29,26,29,,26,24,26,,14,,24',
',,,,,,,29,,,,26,,,,,24,,,,,29,,,,,,24,,,29,29,29,,,24,,,,,,24,29,,,29',
'26,29,,26,,26,,,,,,14,,,14,14,,,,,,,,38,,38,38,38,38,38,38,38,38,38',
'38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,,,,,,,,,38,,38,,',
',,38,,,,,,29,,29,,29,29,26,,,,29,,,29,,,,,38,,,29,,,,,,,,29,14,38,,26',
',,,,,,38,,,29,,,14,26,,,,,,,,,,,,,,,,,,,,,,,29,,,,26,,,,,14,,,,,,,,',
'38,14,38,,14,14,,,,,,,,,29,14,14,,26,29,,,,,,,,,14,,,,,,,,,,,,,,,,,29',
'29,,,26,,,,38,,,29,29,29,,,,,,,,,,,,,,,29,,,,26,,,,38,38,38,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,38,,,38,,38,,,,,,,,,29,,,,26,,,,,,,,29,,,,,,,38',
',,,,,,,,,,38,38,38,,,29,,,,26,,,38,,,38,,38,,,,,,,,,29,14,,38,26,,,',
',,14,14,,,,,,,,,,,14,29,,14,14,,,,,,14,,14,,,,,,,,,,,,,,14,,,,,,,,,',
',,,,38,,38,,,,,,,,,,,38,,,,,,,,38,,,,,,,,38,,,,,,,14,14,,,,,,,,,,,14',
',,,14,,38,,,,,,,,,,38,,,,,,38,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,38,,,,',
',,,,,,,,,,,,,,,,14,,,,,,,,,,38,,,,,,,,,,,38,38,38,,,,,,,,,,,,,,,38,',
'14,,,,,,,,,,,14,,,,,,,,,,,,,,,,,,14,,,,,,,,,,,,,,,,,,,,,,,,38,,,,,,',
',,,,,38,,,,,,,,,,,,,38,,,,,,,,,,38,,,,,,,,,,,,,,,,,,,,,38' ]
        racc_goto_check = arr = ::Array.new(2385, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_goto_pointer = [
   nil,   233,   232,   230,    76,    80,    41,    36,  -295,   272,
  -465,  -581,  -538,   nil,  1394,    65,   220,     9,    26,    -9,
   164,   131,     0,   -52,   805,  -154,  1185,   110,   102,  1181,
   -20,   nil,   116,  -226,  -179,    21,  -199,  -341,  1515,    66,
    53,   nil,    -2,    28,  -256,   478,  -465,  -235,   -40,    -1,
   nil,    70,   -30,   -19,    65,  -218,   -46,     8,  -383,  -233,
  -400,  -379,   -89,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   105,   115,   109,   nil,   150,  -316,  -604,  -484,  -334,
  -389,    47,  -518,   116,  -184,    59,    56,  -568,    68,  -560,
  -422,  -707,    81,  -558,  -202,  -650,    89,  -416,  -206,  -415,
  -655,   104,  -155,   -35,  -622,  -373,  -466,   -40,  -447,  -281,
  -497,  -418,   nil,   -60,   nil,   -84,   -84,  -692,  -372,  -468,
  -567,   nil,   nil,   nil,   133,   132,    54,   130,  -166,  -248,
   139,  -503,  -359,  -359,   nil,  -490,  -583,  -543,  -279,  -480,
  -239,  -455,   nil,  -710,   nil,   nil,  -367 ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,   nil,   349,   275,   nil,   516,
   nil,   786,   nil,   273,   274,   nil,   nil,   nil,   208,    16,
    11,   209,   299,   nil,   207,   nil,   251,    15,   nil,    19,
    20,    21,   nil,    25,   660,   nil,   nil,   nil,    26,    29,
   nil,    31,    34,    33,   nil,   205,   566,   nil,   114,   417,
   113,    69,   nil,    42,   309,   nil,   248,   415,   606,   464,
   249,   nil,   nil,   264,   466,    43,    44,    45,    46,    47,
    48,    49,   nil,   265,    55,   nil,   nil,   nil,   nil,   nil,
   nil,   553,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   323,   322,   677,   325,   nil,
   326,   327,   243,   nil,   421,   nil,   nil,   nil,   nil,   nil,
   nil,    68,    70,    71,    72,   nil,   nil,   nil,   nil,   583,
   nil,   nil,   nil,   nil,   380,   714,   716,   nil,   333,   335,
   nil,   547,   548,   720,   338,   341,   256 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 138, :_reduce_1,
  2, 139, :_reduce_2,
  0, 140, :_reduce_3,
  1, 140, :_reduce_4,
  3, 140, :_reduce_5,
  1, 142, :_reduce_6,
  4, 145, :_reduce_7,
  2, 146, :_reduce_8,
  1, 150, :_reduce_9,
  1, 150, :_reduce_10,
  3, 150, :_reduce_11,
  0, 165, :_reduce_12,
  4, 144, :_reduce_13,
  3, 144, :_reduce_14,
  3, 144, :_reduce_none,
  3, 144, :_reduce_16,
  2, 144, :_reduce_17,
  3, 144, :_reduce_18,
  3, 144, :_reduce_19,
  3, 144, :_reduce_20,
  3, 144, :_reduce_21,
  3, 144, :_reduce_22,
  4, 144, :_reduce_none,
  4, 144, :_reduce_none,
  3, 144, :_reduce_25,
  3, 144, :_reduce_26,
  3, 144, :_reduce_27,
  6, 144, :_reduce_none,
  5, 144, :_reduce_29,
  5, 144, :_reduce_none,
  5, 144, :_reduce_none,
  3, 144, :_reduce_none,
  3, 144, :_reduce_33,
  3, 144, :_reduce_34,
  3, 144, :_reduce_35,
  1, 144, :_reduce_none,
  1, 164, :_reduce_none,
  3, 164, :_reduce_38,
  3, 164, :_reduce_39,
  2, 164, :_reduce_40,
  2, 164, :_reduce_41,
  1, 164, :_reduce_none,
  1, 154, :_reduce_none,
  1, 156, :_reduce_none,
  1, 156, :_reduce_none,
  2, 156, :_reduce_46,
  2, 156, :_reduce_47,
  2, 156, :_reduce_48,
  1, 168, :_reduce_none,
  4, 168, :_reduce_none,
  4, 168, :_reduce_none,
  4, 173, :_reduce_none,
  2, 167, :_reduce_53,
  3, 167, :_reduce_none,
  4, 167, :_reduce_55,
  5, 167, :_reduce_none,
  4, 167, :_reduce_57,
  5, 167, :_reduce_none,
  2, 167, :_reduce_59,
  2, 167, :_reduce_60,
  1, 157, :_reduce_61,
  3, 157, :_reduce_62,
  1, 177, :_reduce_63,
  3, 177, :_reduce_64,
  1, 176, :_reduce_65,
  2, 176, :_reduce_66,
  3, 176, :_reduce_67,
  5, 176, :_reduce_none,
  2, 176, :_reduce_69,
  4, 176, :_reduce_none,
  2, 176, :_reduce_71,
  1, 176, :_reduce_72,
  3, 176, :_reduce_none,
  1, 179, :_reduce_74,
  3, 179, :_reduce_75,
  2, 178, :_reduce_76,
  3, 178, :_reduce_77,
  1, 181, :_reduce_none,
  3, 181, :_reduce_none,
  1, 180, :_reduce_80,
  4, 180, :_reduce_81,
  3, 180, :_reduce_82,
  3, 180, :_reduce_none,
  3, 180, :_reduce_none,
  3, 180, :_reduce_none,
  2, 180, :_reduce_none,
  1, 180, :_reduce_none,
  1, 155, :_reduce_88,
  4, 155, :_reduce_89,
  3, 155, :_reduce_90,
  3, 155, :_reduce_91,
  3, 155, :_reduce_92,
  3, 155, :_reduce_93,
  2, 155, :_reduce_94,
  1, 155, :_reduce_none,
  1, 183, :_reduce_none,
  2, 184, :_reduce_97,
  1, 184, :_reduce_98,
  3, 184, :_reduce_99,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_103,
  1, 185, :_reduce_104,
  1, 152, :_reduce_105,
  1, 152, :_reduce_none,
  1, 153, :_reduce_107,
  3, 153, :_reduce_108,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  3, 166, :_reduce_182,
  5, 166, :_reduce_183,
  3, 166, :_reduce_184,
  6, 166, :_reduce_185,
  5, 166, :_reduce_186,
  5, 166, :_reduce_none,
  5, 166, :_reduce_none,
  5, 166, :_reduce_none,
  4, 166, :_reduce_none,
  3, 166, :_reduce_none,
  3, 166, :_reduce_192,
  3, 166, :_reduce_193,
  3, 166, :_reduce_194,
  3, 166, :_reduce_195,
  3, 166, :_reduce_196,
  3, 166, :_reduce_197,
  3, 166, :_reduce_198,
  3, 166, :_reduce_199,
  4, 166, :_reduce_none,
  4, 166, :_reduce_none,
  2, 166, :_reduce_202,
  2, 166, :_reduce_203,
  3, 166, :_reduce_204,
  3, 166, :_reduce_205,
  3, 166, :_reduce_206,
  3, 166, :_reduce_207,
  3, 166, :_reduce_208,
  3, 166, :_reduce_209,
  3, 166, :_reduce_210,
  3, 166, :_reduce_211,
  3, 166, :_reduce_212,
  3, 166, :_reduce_213,
  3, 166, :_reduce_214,
  3, 166, :_reduce_215,
  3, 166, :_reduce_216,
  2, 166, :_reduce_217,
  2, 166, :_reduce_218,
  3, 166, :_reduce_219,
  3, 166, :_reduce_220,
  3, 166, :_reduce_221,
  3, 166, :_reduce_222,
  3, 166, :_reduce_223,
  5, 166, :_reduce_224,
  1, 166, :_reduce_none,
  1, 163, :_reduce_none,
  1, 160, :_reduce_227,
  2, 160, :_reduce_228,
  2, 160, :_reduce_229,
  4, 160, :_reduce_230,
  2, 160, :_reduce_231,
  3, 194, :_reduce_232,
  4, 194, :_reduce_233,
  4, 194, :_reduce_none,
  6, 194, :_reduce_none,
  1, 195, :_reduce_none,
  1, 195, :_reduce_none,
  1, 169, :_reduce_238,
  2, 169, :_reduce_239,
  2, 169, :_reduce_240,
  4, 169, :_reduce_241,
  1, 169, :_reduce_242,
  4, 198, :_reduce_none,
  1, 198, :_reduce_none,
  0, 200, :_reduce_245,
  2, 172, :_reduce_246,
  1, 199, :_reduce_none,
  2, 199, :_reduce_248,
  3, 199, :_reduce_249,
  2, 197, :_reduce_250,
  2, 196, :_reduce_251,
  1, 196, :_reduce_252,
  1, 191, :_reduce_253,
  2, 191, :_reduce_254,
  3, 191, :_reduce_255,
  4, 191, :_reduce_256,
  3, 162, :_reduce_257,
  4, 162, :_reduce_none,
  2, 162, :_reduce_259,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  0, 222, :_reduce_269,
  4, 190, :_reduce_270,
  4, 190, :_reduce_271,
  3, 190, :_reduce_272,
  3, 190, :_reduce_273,
  2, 190, :_reduce_274,
  4, 190, :_reduce_275,
  3, 190, :_reduce_276,
  3, 190, :_reduce_277,
  1, 190, :_reduce_278,
  4, 190, :_reduce_279,
  3, 190, :_reduce_280,
  1, 190, :_reduce_281,
  5, 190, :_reduce_282,
  4, 190, :_reduce_283,
  3, 190, :_reduce_284,
  2, 190, :_reduce_285,
  1, 190, :_reduce_none,
  2, 190, :_reduce_287,
  2, 190, :_reduce_288,
  6, 190, :_reduce_289,
  6, 190, :_reduce_290,
  0, 223, :_reduce_291,
  0, 224, :_reduce_292,
  7, 190, :_reduce_293,
  0, 225, :_reduce_294,
  0, 226, :_reduce_295,
  7, 190, :_reduce_296,
  5, 190, :_reduce_297,
  4, 190, :_reduce_298,
  5, 190, :_reduce_299,
  0, 227, :_reduce_300,
  0, 228, :_reduce_301,
  9, 190, :_reduce_none,
  0, 229, :_reduce_303,
  0, 230, :_reduce_304,
  7, 190, :_reduce_305,
  0, 231, :_reduce_306,
  0, 232, :_reduce_307,
  8, 190, :_reduce_308,
  0, 233, :_reduce_309,
  0, 234, :_reduce_310,
  6, 190, :_reduce_311,
  0, 235, :_reduce_312,
  6, 190, :_reduce_313,
  0, 236, :_reduce_314,
  0, 237, :_reduce_315,
  9, 190, :_reduce_316,
  1, 190, :_reduce_317,
  1, 190, :_reduce_318,
  1, 190, :_reduce_319,
  1, 190, :_reduce_none,
  1, 159, :_reduce_none,
  1, 213, :_reduce_none,
  1, 213, :_reduce_none,
  1, 213, :_reduce_none,
  2, 213, :_reduce_none,
  1, 215, :_reduce_none,
  1, 215, :_reduce_none,
  1, 215, :_reduce_none,
  2, 212, :_reduce_329,
  3, 238, :_reduce_330,
  2, 238, :_reduce_331,
  1, 238, :_reduce_none,
  1, 238, :_reduce_none,
  3, 239, :_reduce_334,
  3, 239, :_reduce_335,
  1, 214, :_reduce_336,
  0, 241, :_reduce_337,
  6, 214, :_reduce_338,
  1, 148, :_reduce_none,
  2, 148, :_reduce_340,
  1, 242, :_reduce_341,
  3, 242, :_reduce_342,
  3, 243, :_reduce_343,
  1, 174, :_reduce_none,
  2, 174, :_reduce_345,
  1, 174, :_reduce_346,
  3, 174, :_reduce_347,
  1, 244, :_reduce_348,
  2, 246, :_reduce_349,
  1, 246, :_reduce_350,
  6, 240, :_reduce_351,
  4, 240, :_reduce_352,
  4, 240, :_reduce_353,
  2, 240, :_reduce_354,
  2, 240, :_reduce_355,
  4, 240, :_reduce_356,
  2, 240, :_reduce_357,
  2, 240, :_reduce_358,
  1, 240, :_reduce_359,
  0, 250, :_reduce_360,
  5, 249, :_reduce_361,
  2, 170, :_reduce_362,
  4, 170, :_reduce_none,
  4, 170, :_reduce_none,
  2, 211, :_reduce_365,
  4, 211, :_reduce_366,
  3, 211, :_reduce_367,
  4, 211, :_reduce_368,
  3, 211, :_reduce_369,
  2, 211, :_reduce_370,
  1, 211, :_reduce_371,
  0, 252, :_reduce_372,
  5, 210, :_reduce_373,
  0, 253, :_reduce_374,
  5, 210, :_reduce_375,
  0, 255, :_reduce_376,
  6, 216, :_reduce_377,
  1, 254, :_reduce_378,
  1, 254, :_reduce_none,
  6, 147, :_reduce_380,
  0, 147, :_reduce_381,
  1, 256, :_reduce_382,
  1, 256, :_reduce_none,
  1, 256, :_reduce_none,
  2, 257, :_reduce_385,
  1, 257, :_reduce_386,
  2, 149, :_reduce_387,
  1, 149, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 203, :_reduce_392,
  1, 260, :_reduce_none,
  2, 260, :_reduce_none,
  3, 261, :_reduce_395,
  1, 261, :_reduce_396,
  3, 204, :_reduce_397,
  3, 205, :_reduce_398,
  3, 206, :_reduce_399,
  3, 206, :_reduce_400,
  1, 264, :_reduce_401,
  3, 264, :_reduce_402,
  1, 265, :_reduce_403,
  2, 265, :_reduce_404,
  3, 207, :_reduce_405,
  3, 207, :_reduce_406,
  1, 267, :_reduce_407,
  3, 267, :_reduce_408,
  1, 262, :_reduce_409,
  2, 262, :_reduce_410,
  1, 263, :_reduce_411,
  2, 263, :_reduce_412,
  1, 266, :_reduce_413,
  0, 269, :_reduce_414,
  3, 266, :_reduce_415,
  0, 270, :_reduce_416,
  4, 266, :_reduce_417,
  1, 268, :_reduce_418,
  1, 268, :_reduce_419,
  1, 268, :_reduce_420,
  1, 268, :_reduce_none,
  2, 188, :_reduce_422,
  1, 188, :_reduce_423,
  1, 271, :_reduce_none,
  1, 271, :_reduce_none,
  1, 271, :_reduce_none,
  1, 271, :_reduce_none,
  3, 259, :_reduce_428,
  1, 258, :_reduce_429,
  1, 258, :_reduce_430,
  2, 258, :_reduce_none,
  2, 258, :_reduce_none,
  1, 182, :_reduce_433,
  1, 182, :_reduce_434,
  1, 182, :_reduce_435,
  1, 182, :_reduce_436,
  1, 182, :_reduce_437,
  1, 182, :_reduce_438,
  1, 182, :_reduce_439,
  1, 182, :_reduce_440,
  1, 182, :_reduce_441,
  1, 182, :_reduce_442,
  1, 182, :_reduce_443,
  1, 208, :_reduce_444,
  1, 158, :_reduce_445,
  1, 161, :_reduce_446,
  1, 161, :_reduce_none,
  1, 217, :_reduce_448,
  3, 217, :_reduce_449,
  2, 217, :_reduce_450,
  4, 219, :_reduce_451,
  2, 219, :_reduce_452,
  6, 272, :_reduce_453,
  4, 272, :_reduce_454,
  4, 272, :_reduce_455,
  2, 272, :_reduce_456,
  4, 272, :_reduce_457,
  2, 272, :_reduce_458,
  2, 272, :_reduce_459,
  1, 272, :_reduce_460,
  0, 272, :_reduce_461,
  1, 275, :_reduce_462,
  1, 275, :_reduce_463,
  1, 275, :_reduce_464,
  1, 275, :_reduce_465,
  1, 275, :_reduce_466,
  1, 276, :_reduce_467,
  3, 276, :_reduce_468,
  1, 278, :_reduce_469,
  3, 278, :_reduce_none,
  1, 279, :_reduce_471,
  3, 279, :_reduce_472,
  1, 277, :_reduce_none,
  4, 277, :_reduce_none,
  3, 277, :_reduce_none,
  2, 277, :_reduce_none,
  1, 277, :_reduce_none,
  1, 247, :_reduce_478,
  3, 247, :_reduce_479,
  3, 280, :_reduce_480,
  1, 273, :_reduce_481,
  3, 273, :_reduce_482,
  1, 281, :_reduce_none,
  1, 281, :_reduce_none,
  2, 248, :_reduce_485,
  1, 248, :_reduce_486,
  1, 282, :_reduce_none,
  1, 282, :_reduce_none,
  2, 245, :_reduce_489,
  2, 274, :_reduce_490,
  0, 274, :_reduce_491,
  1, 220, :_reduce_492,
  4, 220, :_reduce_493,
  1, 209, :_reduce_494,
  2, 209, :_reduce_495,
  2, 209, :_reduce_496,
  1, 193, :_reduce_497,
  3, 193, :_reduce_498,
  3, 283, :_reduce_499,
  2, 283, :_reduce_500,
  1, 175, :_reduce_none,
  1, 175, :_reduce_none,
  1, 175, :_reduce_none,
  1, 171, :_reduce_none,
  1, 171, :_reduce_none,
  1, 171, :_reduce_none,
  1, 171, :_reduce_none,
  1, 251, :_reduce_none,
  1, 251, :_reduce_none,
  1, 251, :_reduce_none,
  1, 221, :_reduce_none,
  1, 221, :_reduce_none,
  0, 141, :_reduce_none,
  1, 141, :_reduce_none,
  0, 189, :_reduce_none,
  1, 189, :_reduce_none,
  0, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 218, :_reduce_none,
  1, 218, :_reduce_none,
  1, 143, :_reduce_none,
  2, 143, :_reduce_none,
  0, 151, :_reduce_none,
  0, 201, :_reduce_none ]

racc_reduce_n = 526

racc_shift_n = 916

racc_token_table = {
  false => 0,
  :error => 1,
  :kCLASS => 2,
  :kMODULE => 3,
  :kDEF => 4,
  :kUNDEF => 5,
  :kBEGIN => 6,
  :kRESCUE => 7,
  :kENSURE => 8,
  :kEND => 9,
  :kIF => 10,
  :kUNLESS => 11,
  :kTHEN => 12,
  :kELSIF => 13,
  :kELSE => 14,
  :kCASE => 15,
  :kWHEN => 16,
  :kWHILE => 17,
  :kUNTIL => 18,
  :kFOR => 19,
  :kBREAK => 20,
  :kNEXT => 21,
  :kREDO => 22,
  :kRETRY => 23,
  :kIN => 24,
  :kDO => 25,
  :kDO_COND => 26,
  :kDO_BLOCK => 27,
  :kRETURN => 28,
  :kYIELD => 29,
  :kSUPER => 30,
  :kSELF => 31,
  :kNIL => 32,
  :kTRUE => 33,
  :kFALSE => 34,
  :kAND => 35,
  :kOR => 36,
  :kNOT => 37,
  :kIF_MOD => 38,
  :kUNLESS_MOD => 39,
  :kWHILE_MOD => 40,
  :kUNTIL_MOD => 41,
  :kRESCUE_MOD => 42,
  :kALIAS => 43,
  :kDEFINED => 44,
  :klBEGIN => 45,
  :klEND => 46,
  :k__LINE__ => 47,
  :k__FILE__ => 48,
  :tIDENTIFIER => 49,
  :tFID => 50,
  :tGVAR => 51,
  :tIVAR => 52,
  :tCONSTANT => 53,
  :tCVAR => 54,
  :tNTH_REF => 55,
  :tBACK_REF => 56,
  :tSTRING_CONTENT => 57,
  :tINTEGER => 58,
  :tFLOAT => 59,
  :tREGEXP_END => 60,
  "+@" => 61,
  "-@" => 62,
  "-@NUM" => 63,
  :tPOW => 64,
  :tCMP => 65,
  :tEQ => 66,
  :tEQQ => 67,
  :tNEQ => 68,
  :tGEQ => 69,
  :tLEQ => 70,
  :tANDOP => 71,
  :tOROP => 72,
  :tMATCH => 73,
  :tNMATCH => 74,
  "." => 75,
  :tDOT2 => 76,
  :tDOT3 => 77,
  "[]" => 78,
  "[]=" => 79,
  :tLSHFT => 80,
  :tRSHFT => 81,
  "::" => 82,
  "::@" => 83,
  :tOP_ASGN => 84,
  :tASSOC => 85,
  :tLPAREN => 86,
  "(" => 87,
  ")" => 88,
  :tLPAREN_ARG => 89,
  :ARRAY_BEG => 90,
  "]" => 91,
  :tLBRACE => 92,
  :tLBRACE_ARG => 93,
  :tSTAR => 94,
  :tSTAR2 => 95,
  "&@" => 96,
  :tAMPER2 => 97,
  :tTILDE => 98,
  :tPERCENT => 99,
  :tDIVIDE => 100,
  "+" => 101,
  "-" => 102,
  :tLT => 103,
  :tGT => 104,
  :tPIPE => 105,
  :tBANG => 106,
  :tCARET => 107,
  :tLCURLY => 108,
  "}" => 109,
  :tBACK_REF2 => 110,
  :tSYMBEG => 111,
  :tSTRING_BEG => 112,
  :tXSTRING_BEG => 113,
  :tREGEXP_BEG => 114,
  :tWORDS_BEG => 115,
  :tAWORDS_BEG => 116,
  :tSTRING_DBEG => 117,
  :tSTRING_DVAR => 118,
  :tSTRING_END => 119,
  :tSTRING => 120,
  :tSYMBOL => 121,
  "\\n" => 122,
  :tEH => 123,
  :tCOLON => 124,
  "," => 125,
  :tSPACE => 126,
  ";" => 127,
  :tLABEL => 128,
  :tLAMBDA => 129,
  :tLAMBEG => 130,
  :kDO_LAMBDA => 131,
  :tEQL => 132,
  :tLOWEST => 133,
  "[@" => 134,
  "[" => 135,
  "{" => 136 }

racc_nt_base = 137

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "kCLASS",
  "kMODULE",
  "kDEF",
  "kUNDEF",
  "kBEGIN",
  "kRESCUE",
  "kENSURE",
  "kEND",
  "kIF",
  "kUNLESS",
  "kTHEN",
  "kELSIF",
  "kELSE",
  "kCASE",
  "kWHEN",
  "kWHILE",
  "kUNTIL",
  "kFOR",
  "kBREAK",
  "kNEXT",
  "kREDO",
  "kRETRY",
  "kIN",
  "kDO",
  "kDO_COND",
  "kDO_BLOCK",
  "kRETURN",
  "kYIELD",
  "kSUPER",
  "kSELF",
  "kNIL",
  "kTRUE",
  "kFALSE",
  "kAND",
  "kOR",
  "kNOT",
  "kIF_MOD",
  "kUNLESS_MOD",
  "kWHILE_MOD",
  "kUNTIL_MOD",
  "kRESCUE_MOD",
  "kALIAS",
  "kDEFINED",
  "klBEGIN",
  "klEND",
  "k__LINE__",
  "k__FILE__",
  "tIDENTIFIER",
  "tFID",
  "tGVAR",
  "tIVAR",
  "tCONSTANT",
  "tCVAR",
  "tNTH_REF",
  "tBACK_REF",
  "tSTRING_CONTENT",
  "tINTEGER",
  "tFLOAT",
  "tREGEXP_END",
  "\"+@\"",
  "\"-@\"",
  "\"-@NUM\"",
  "tPOW",
  "tCMP",
  "tEQ",
  "tEQQ",
  "tNEQ",
  "tGEQ",
  "tLEQ",
  "tANDOP",
  "tOROP",
  "tMATCH",
  "tNMATCH",
  "\".\"",
  "tDOT2",
  "tDOT3",
  "\"[]\"",
  "\"[]=\"",
  "tLSHFT",
  "tRSHFT",
  "\"::\"",
  "\"::@\"",
  "tOP_ASGN",
  "tASSOC",
  "tLPAREN",
  "\"(\"",
  "\")\"",
  "tLPAREN_ARG",
  "ARRAY_BEG",
  "\"]\"",
  "tLBRACE",
  "tLBRACE_ARG",
  "tSTAR",
  "tSTAR2",
  "\"&@\"",
  "tAMPER2",
  "tTILDE",
  "tPERCENT",
  "tDIVIDE",
  "\"+\"",
  "\"-\"",
  "tLT",
  "tGT",
  "tPIPE",
  "tBANG",
  "tCARET",
  "tLCURLY",
  "\"}\"",
  "tBACK_REF2",
  "tSYMBEG",
  "tSTRING_BEG",
  "tXSTRING_BEG",
  "tREGEXP_BEG",
  "tWORDS_BEG",
  "tAWORDS_BEG",
  "tSTRING_DBEG",
  "tSTRING_DVAR",
  "tSTRING_END",
  "tSTRING",
  "tSYMBOL",
  "\"\\\\n\"",
  "tEH",
  "tCOLON",
  "\",\"",
  "tSPACE",
  "\";\"",
  "tLABEL",
  "tLAMBDA",
  "tLAMBEG",
  "kDO_LAMBDA",
  "tEQL",
  "tLOWEST",
  "\"[@\"",
  "\"[\"",
  "\"{\"",
  "$start",
  "program",
  "top_compstmt",
  "top_stmts",
  "opt_terms",
  "top_stmt",
  "terms",
  "stmt",
  "bodystmt",
  "compstmt",
  "opt_rescue",
  "opt_else",
  "opt_ensure",
  "stmts",
  "none",
  "fitem",
  "undef_list",
  "expr_value",
  "lhs",
  "command_call",
  "mlhs",
  "var_lhs",
  "primary_value",
  "aref_args",
  "backref",
  "mrhs",
  "arg_value",
  "expr",
  "@1",
  "arg",
  "command",
  "block_command",
  "call_args",
  "block_call",
  "operation2",
  "command_args",
  "cmd_brace_block",
  "opt_block_var",
  "operation",
  "mlhs_basic",
  "mlhs_entry",
  "mlhs_head",
  "mlhs_item",
  "mlhs_node",
  "mlhs_post",
  "variable",
  "cname",
  "cpath",
  "fname",
  "op",
  "reswords",
  "symbol",
  "opt_nl",
  "primary",
  "args",
  "trailer",
  "assocs",
  "paren_args",
  "opt_paren_args",
  "opt_block_arg",
  "block_arg",
  "call_args2",
  "open_args",
  "@2",
  "none_block_pass",
  "literal",
  "strings",
  "xstring",
  "regexp",
  "words",
  "awords",
  "var_ref",
  "assoc_list",
  "brace_block",
  "method_call",
  "lambda",
  "then",
  "if_tail",
  "do",
  "case_body",
  "superclass",
  "term",
  "f_arglist",
  "singleton",
  "dot_or_colon",
  "@3",
  "@4",
  "@5",
  "@6",
  "@7",
  "@8",
  "@9",
  "@10",
  "@11",
  "@12",
  "@13",
  "@14",
  "@15",
  "@16",
  "@17",
  "@18",
  "f_larglist",
  "lambda_body",
  "block_param",
  "@19",
  "f_block_optarg",
  "f_block_opt",
  "block_args_tail",
  "f_block_arg",
  "opt_block_args_tail",
  "f_arg",
  "f_rest_arg",
  "do_block",
  "@20",
  "operation3",
  "@21",
  "@22",
  "cases",
  "@23",
  "exc_list",
  "exc_var",
  "numeric",
  "dsym",
  "string",
  "string1",
  "string_contents",
  "xstring_contents",
  "word_list",
  "word",
  "string_content",
  "qword_list",
  "string_dvar",
  "@24",
  "@25",
  "sym",
  "f_args",
  "f_optarg",
  "opt_f_block_arg",
  "f_norm_arg",
  "f_arg_item",
  "f_margs",
  "f_marg",
  "f_marg_list",
  "f_opt",
  "restarg_mark",
  "blkarg_mark",
  "assoc" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

def _reduce_1(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_2(val, _values, result)
                      comp = new_compstmt val[0]
                      if comp and comp.type == :begin and comp.size == 2
                        result = comp[1]
                        result.line = comp.line
                      else
                        result = comp
                      end
                    
    result
end

def _reduce_3(val, _values, result)
                      result = new_block
                    
    result
end

def _reduce_4(val, _values, result)
                      result = new_block val[0]
                    
    result
end

def _reduce_5(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_6(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_7(val, _values, result)
                      result = new_body val[0], val[1], val[2], val[3]
                    
    result
end

def _reduce_8(val, _values, result)
                      comp = new_compstmt val[0]
                      if comp and comp.type == :begin and comp.size == 2
                        result = comp[1]
                        result.line = comp.line
                      else
                        result = comp
                      end
                    
    result
end

def _reduce_9(val, _values, result)
                      result = new_block
                    
    result
end

def _reduce_10(val, _values, result)
                      result = new_block val[0]
                    
    result
end

def _reduce_11(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_12(val, _values, result)
                      lexer.lex_state = :expr_fname
                    
    result
end

def _reduce_13(val, _values, result)
                      result = s(:alias, val[1], val[3])
                    
    result
end

def _reduce_14(val, _values, result)
                      result = s(:valias, val[1].intern, val[2].intern)
                    
    result
end

# reduce 15 omitted

def _reduce_16(val, _values, result)
                      result = s(:valias, val[1].intern, val[2].intern)
                    
    result
end

def _reduce_17(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_18(val, _values, result)
                      result = new_if val[2], val[0], nil
                    
    result
end

def _reduce_19(val, _values, result)
                      result = new_if val[2], nil, val[0]
                    
    result
end

def _reduce_20(val, _values, result)
                      result = s(:while, val[2], val[0], true)
                    
    result
end

def _reduce_21(val, _values, result)
                      result = s(:until, val[2], val[0], true)
                    
    result
end

def _reduce_22(val, _values, result)
                      result = s(:rescue_mod, val[0], val[2])
                    
    result
end

# reduce 23 omitted

# reduce 24 omitted

def _reduce_25(val, _values, result)
                      result = new_assign val[0], val[2]
                    
    result
end

def _reduce_26(val, _values, result)
                      result = s(:masgn, val[0], s(:to_ary, val[2]))
                    
    result
end

def _reduce_27(val, _values, result)
                      result = new_op_asgn val[1].intern, val[0], val[2]
                    
    result
end

# reduce 28 omitted

def _reduce_29(val, _values, result)
                      result = s(:op_asgn2, val[0], "#{val[2]}=".intern, val[3].intern, val[4])
                    
    result
end

# reduce 30 omitted

# reduce 31 omitted

# reduce 32 omitted

def _reduce_33(val, _values, result)
                      result = new_assign val[0], s(:svalue, val[2])
                    
    result
end

def _reduce_34(val, _values, result)
                      result = s(:masgn, val[0], s(:to_ary, val[2]))
                    
    result
end

def _reduce_35(val, _values, result)
                      result = s(:masgn, val[0], val[2])
                    
    result
end

# reduce 36 omitted

# reduce 37 omitted

def _reduce_38(val, _values, result)
                      result = s(:and, val[0], val[2])
                      result.line = val[0].line
                    
    result
end

def _reduce_39(val, _values, result)
                      result = s(:or, val[0], val[2])
                      result.line = val[0].line
                    
    result
end

def _reduce_40(val, _values, result)
                      result = s(:not, val[1])
                      result.line = val[1].line
                    
    result
end

def _reduce_41(val, _values, result)
                      result = s(:not, val[1])
                    
    result
end

# reduce 42 omitted

# reduce 43 omitted

# reduce 44 omitted

# reduce 45 omitted

def _reduce_46(val, _values, result)
                      args = val[1]
                      args = args[1] if args.size == 2
                      result = s(:return, args)
                    
    result
end

def _reduce_47(val, _values, result)
                      args = val[1]
                      args = args[1] if args.size == 2
                      result = s(:break, args)
                    
    result
end

def _reduce_48(val, _values, result)
                      args = val[1]
                      args = args[1] if args.size == 2
                      result = s(:next, args)
                    
    result
end

# reduce 49 omitted

# reduce 50 omitted

# reduce 51 omitted

# reduce 52 omitted

def _reduce_53(val, _values, result)
                      result = new_call nil, val[0].intern, val[1]
                    
    result
end

# reduce 54 omitted

def _reduce_55(val, _values, result)
                      result = new_call val[0], val[2].intern, val[3]
                    
    result
end

# reduce 56 omitted

def _reduce_57(val, _values, result)
                    result = new_call val[0], val[2].intern, val[3]
                  
    result
end

# reduce 58 omitted

def _reduce_59(val, _values, result)
                      result = new_super val[1]
                    
    result
end

def _reduce_60(val, _values, result)
                      result = new_yield val[1]
                    
    result
end

def _reduce_61(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_62(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_63(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_64(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_65(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_66(val, _values, result)
                      result = val[0] << val[1]
                    
    result
end

def _reduce_67(val, _values, result)
                      result = val[0] << s(:splat, val[2])
                    
    result
end

# reduce 68 omitted

def _reduce_69(val, _values, result)
                      result = val[0] << s(:splat)
                    
    result
end

# reduce 70 omitted

def _reduce_71(val, _values, result)
                      result = s(:array, s(:splat, val[1]))
                    
    result
end

def _reduce_72(val, _values, result)
                      result = s(:array, s(:splat))
                    
    result
end

# reduce 73 omitted

def _reduce_74(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_75(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_76(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

def _reduce_77(val, _values, result)
                      result = val[0] << val[1]
                    
    result
end

# reduce 78 omitted

# reduce 79 omitted

def _reduce_80(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_81(val, _values, result)
                      args = val[2]
                      args.type = :arglist if args.type == :array
                      result = s(:attrasgn, val[0], :[]=, args)
                    
    result
end

def _reduce_82(val, _values, result)
                      result = new_call val[0], val[2].intern, s(:arglist)
                    
    result
end

# reduce 83 omitted

# reduce 84 omitted

# reduce 85 omitted

# reduce 86 omitted

# reduce 87 omitted

def _reduce_88(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_89(val, _values, result)
                      args = val[2]
                      args.type = :arglist if args.type == :array
                      result = s(:attrasgn, val[0], :[]=, args)
                    
    result
end

def _reduce_90(val, _values, result)
                      result = s(:attrasgn, val[0], "#{val[2]}=".intern, s(:arglist))
                    
    result
end

def _reduce_91(val, _values, result)
                      result = s(:attrasgn, val[0], "#{val[2]}=".intern, s(:arglist))
                    
    result
end

def _reduce_92(val, _values, result)
                      result = s(:attrasgn, val[0], "#{val[2]}=".intern, s(:arglist))
                    
    result
end

def _reduce_93(val, _values, result)
                      result = s(:colon2, val[0], val[2].intern)
                    
    result
end

def _reduce_94(val, _values, result)
                      result = s(:colon3, val[1].intern)
                    
    result
end

# reduce 95 omitted

# reduce 96 omitted

def _reduce_97(val, _values, result)
                      result = s(:colon3, val[1].intern)
                    
    result
end

def _reduce_98(val, _values, result)
                      result = val[0].intern
                    
    result
end

def _reduce_99(val, _values, result)
                      result = s(:colon2, val[0], val[2].intern)
                    
    result
end

# reduce 100 omitted

# reduce 101 omitted

# reduce 102 omitted

def _reduce_103(val, _values, result)
                      lexer.lex_state = :expr_end
                      result = val[0]
                    
    result
end

def _reduce_104(val, _values, result)
                      lexer.lex_state = :expr_end
                      result = val[0]
                    
    result
end

def _reduce_105(val, _values, result)
                      result = s(:sym, val[0].intern)
                    
    result
end

# reduce 106 omitted

def _reduce_107(val, _values, result)
                      result = s(:undef, val[0])
                    
    result
end

def _reduce_108(val, _values, result)
                      result = val[0] << val[2]
                    
    result
end

# reduce 109 omitted

# reduce 110 omitted

# reduce 111 omitted

# reduce 112 omitted

# reduce 113 omitted

# reduce 114 omitted

# reduce 115 omitted

# reduce 116 omitted

# reduce 117 omitted

# reduce 118 omitted

# reduce 119 omitted

# reduce 120 omitted

# reduce 121 omitted

# reduce 122 omitted

# reduce 123 omitted

# reduce 124 omitted

# reduce 125 omitted

# reduce 126 omitted

# reduce 127 omitted

# reduce 128 omitted

# reduce 129 omitted

# reduce 130 omitted

# reduce 131 omitted

# reduce 132 omitted

# reduce 133 omitted

# reduce 134 omitted

# reduce 135 omitted

# reduce 136 omitted

# reduce 137 omitted

# reduce 138 omitted

# reduce 139 omitted

# reduce 140 omitted

# reduce 141 omitted

# reduce 142 omitted

# reduce 143 omitted

# reduce 144 omitted

# reduce 145 omitted

# reduce 146 omitted

# reduce 147 omitted

# reduce 148 omitted

# reduce 149 omitted

# reduce 150 omitted

# reduce 151 omitted

# reduce 152 omitted

# reduce 153 omitted

# reduce 154 omitted

# reduce 155 omitted

# reduce 156 omitted

# reduce 157 omitted

# reduce 158 omitted

# reduce 159 omitted

# reduce 160 omitted

# reduce 161 omitted

# reduce 162 omitted

# reduce 163 omitted

# reduce 164 omitted

# reduce 165 omitted

# reduce 166 omitted

# reduce 167 omitted

# reduce 168 omitted

# reduce 169 omitted

# reduce 170 omitted

# reduce 171 omitted

# reduce 172 omitted

# reduce 173 omitted

# reduce 174 omitted

# reduce 175 omitted

# reduce 176 omitted

# reduce 177 omitted

# reduce 178 omitted

# reduce 179 omitted

# reduce 180 omitted

# reduce 181 omitted

def _reduce_182(val, _values, result)
                      result = new_assign val[0], val[2]
                    
    result
end

def _reduce_183(val, _values, result)
                      result = new_assign val[0], s(:rescue_mod, val[2], val[4])
                    
    result
end

def _reduce_184(val, _values, result)
                      result = new_op_asgn val[1].intern, val[0], val[2]
                    
    result
end

def _reduce_185(val, _values, result)
                      args = val[2]
                      args.type = :arglist if args.type == :array
                      result = s(:op_asgn1, val[0], val[2], val[4].intern, val[5])
                      result.line = val[0].line
                    
    result
end

def _reduce_186(val, _values, result)
                      result = s(:op_asgn2, val[0], "#{val[2]}=".intern, val[3].intern, val[4])
                    
    result
end

# reduce 187 omitted

# reduce 188 omitted

# reduce 189 omitted

# reduce 190 omitted

# reduce 191 omitted

def _reduce_192(val, _values, result)
                      result = s(:dot2, val[0], val[2])
                      result.line = val[0].line
                    
    result
end

def _reduce_193(val, _values, result)
                      result = s(:dot3, val[0], val[2])
                      result.line = val[0].line
                    
    result
end

def _reduce_194(val, _values, result)
                      result = new_call val[0], :"+", s(:arglist, val[2])
                    
    result
end

def _reduce_195(val, _values, result)
                      result = new_call val[0], :"-", s(:arglist, val[2])
                    
    result
end

def _reduce_196(val, _values, result)
                      result = new_call val[0], :"*", s(:arglist, val[2])
                    
    result
end

def _reduce_197(val, _values, result)
                      result = new_call val[0], :"/", s(:arglist, val[2])
                    
    result
end

def _reduce_198(val, _values, result)
                      result = new_call val[0], :"%", s(:arglist, val[2])
                    
    result
end

def _reduce_199(val, _values, result)
                      result = new_call val[0], :"**", s(:arglist, val[2])
                    
    result
end

# reduce 200 omitted

# reduce 201 omitted

def _reduce_202(val, _values, result)
                      result = new_call val[1], :"+@", s(:arglist)
                      result = val[1] if [:int, :float].include? val[1].type
                    
    result
end

def _reduce_203(val, _values, result)
                      result = new_call val[1], :"-@", s(:arglist)
                      if val[1].type == :int
                        val[1][1] = -val[1][1]
                        result = val[1]
                      elsif val[1].type == :float
                        val[1][1] = -val[1][1].to_f
                        result = val[1]
                      end
                    
    result
end

def _reduce_204(val, _values, result)
                      result = new_call val[0], :"|", s(:arglist, val[2])
                    
    result
end

def _reduce_205(val, _values, result)
                      result = new_call val[0], :"^", s(:arglist, val[2])
                    
    result
end

def _reduce_206(val, _values, result)
                      result = new_call val[0], :"&", s(:arglist, val[2])
                    
    result
end

def _reduce_207(val, _values, result)
                      result = new_call val[0], :"<=>", s(:arglist, val[2])
                    
    result
end

def _reduce_208(val, _values, result)
                      result = new_call val[0], :">", s(:arglist, val[2])
                    
    result
end

def _reduce_209(val, _values, result)
                      result = new_call val[0], :">=", s(:arglist, val[2])
                    
    result
end

def _reduce_210(val, _values, result)
                      result = new_call val[0], :"<", s(:arglist, val[2])
                    
    result
end

def _reduce_211(val, _values, result)
                      result = new_call val[0], :"<=", s(:arglist, val[2])
                    
    result
end

def _reduce_212(val, _values, result)
                      result = new_call val[0], :"==", s(:arglist, val[2])
                    
    result
end

def _reduce_213(val, _values, result)
                      result = new_call val[0], :"===", s(:arglist, val[2])
                    
    result
end

def _reduce_214(val, _values, result)
                      result = s(:not, new_call(val[0], :"==", s(:arglist, val[2])))
                    
    result
end

def _reduce_215(val, _values, result)
                      result = new_call val[0], :"=~", s(:arglist, val[2])
                    
    result
end

def _reduce_216(val, _values, result)
                      result = s(:not, new_call(val[0], :"=~", s(:arglist, val[2])))
                    
    result
end

def _reduce_217(val, _values, result)
                      result = s(:not, val[1])
                    
    result
end

def _reduce_218(val, _values, result)
                      result = new_call val[1], :"~", s(:arglist)
                    
    result
end

def _reduce_219(val, _values, result)
                      result = new_call val[0], :"<<", s(:arglist, val[2])
                    
    result
end

def _reduce_220(val, _values, result)
                      result = new_call val[0], :">>", s(:arglist, val[2])
                    
    result
end

def _reduce_221(val, _values, result)
                      result = s(:and, val[0], val[2])
                      result.line = val[0].line
                    
    result
end

def _reduce_222(val, _values, result)
                      result = s(:or, val[0], val[2])
                      result.line = val[0].line
                    
    result
end

def _reduce_223(val, _values, result)
                      result = s(:defined, val[2])
                    
    result
end

def _reduce_224(val, _values, result)
                      result = s(:if, val[0], val[2], val[4])
                      result.line = val[0].line
                    
    result
end

# reduce 225 omitted

# reduce 226 omitted

def _reduce_227(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_228(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

def _reduce_229(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_230(val, _values, result)
                      val[0] << s(:hash, *val[2])
                      result = val[0]
                    
    result
end

def _reduce_231(val, _values, result)
                      result = s(:array, s(:hash, *val[0]))
                    
    result
end

def _reduce_232(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_233(val, _values, result)
                      result = val[1]
                    
    result
end

# reduce 234 omitted

# reduce 235 omitted

# reduce 236 omitted

# reduce 237 omitted

def _reduce_238(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

def _reduce_239(val, _values, result)
                      result = val[0]
                      add_block_pass val[0], val[1]
                    
    result
end

def _reduce_240(val, _values, result)
                      result = s(:arglist, s(:hash, *val[0]))
                      add_block_pass result, val[1]
                    
    result
end

def _reduce_241(val, _values, result)
                      result = val[0]
                      result << s(:hash, *val[2])
                    
    result
end

def _reduce_242(val, _values, result)
                      result = s(:arglist)
                      add_block_pass result, val[0]
                    
    result
end

# reduce 243 omitted

# reduce 244 omitted

def _reduce_245(val, _values, result)
                      lexer.cmdarg_push 1
                    
    result
end

def _reduce_246(val, _values, result)
                      lexer.cmdarg_pop
                      result = val[1]
                    
    result
end

# reduce 247 omitted

def _reduce_248(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_249(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_250(val, _values, result)
                      result = s(:block_pass, val[1])
                    
    result
end

def _reduce_251(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_252(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_253(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

def _reduce_254(val, _values, result)
                      result = s(:array, s(:splat, val[1]))
                    
    result
end

def _reduce_255(val, _values, result)
                      result = val[0] << val[2]
                    
    result
end

def _reduce_256(val, _values, result)
                      result  = val[0] << s(:splat, val[3])
                    
    result
end

def _reduce_257(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

# reduce 258 omitted

def _reduce_259(val, _values, result)
                      result = s(:splat, val[1])
                    
    result
end

# reduce 260 omitted

# reduce 261 omitted

# reduce 262 omitted

# reduce 263 omitted

# reduce 264 omitted

# reduce 265 omitted

# reduce 266 omitted

# reduce 267 omitted

# reduce 268 omitted

def _reduce_269(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_270(val, _values, result)
                      result = s(:begin, val[2])
                      result.line = val[1]
                    
    result
end

def _reduce_271(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_272(val, _values, result)
                      result = s(:paren, val[1] || s(:nil))
                    
    result
end

def _reduce_273(val, _values, result)
                      result = s(:colon2, val[0], val[2].intern)
                    
    result
end

def _reduce_274(val, _values, result)
                      result = s(:colon3, val[1])
                    
    result
end

def _reduce_275(val, _values, result)
                      result = new_call val[0], :[], val[2]
                    
    result
end

def _reduce_276(val, _values, result)
                      result = val[1] || s(:array)
                    
    result
end

def _reduce_277(val, _values, result)
                      result = s(:hash, *val[1])
                    
    result
end

def _reduce_278(val, _values, result)
                      result = s(:return)
                    
    result
end

def _reduce_279(val, _values, result)
                      result = new_yield val[2]
                    
    result
end

def _reduce_280(val, _values, result)
                      result = s(:yield)
                    
    result
end

def _reduce_281(val, _values, result)
                      result = s(:yield)
                    
    result
end

def _reduce_282(val, _values, result)
                      result = s(:defined, val[3])
                    
    result
end

def _reduce_283(val, _values, result)
                      result = s(:not, val[2])
                      result.line = val[2].line
                    
    result
end

def _reduce_284(val, _values, result)
                      result = s(:not, s(:nil))
                    
    result
end

def _reduce_285(val, _values, result)
                      result = new_call nil, val[0].intern, s(:arglist)
                      result << val[1]
                    
    result
end

# reduce 286 omitted

def _reduce_287(val, _values, result)
                      val[0] << val[1]
                      result = val[0]
                    
    result
end

def _reduce_288(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_289(val, _values, result)
                      result = new_if val[1], val[3], val[4]
                    
    result
end

def _reduce_290(val, _values, result)
                      result = new_if val[1], val[4], val[3]
                    
    result
end

def _reduce_291(val, _values, result)
                      lexer.cond_push 1
                      result = lexer.line
                    
    result
end

def _reduce_292(val, _values, result)
                      lexer.cond_pop
                    
    result
end

def _reduce_293(val, _values, result)
                      result = s(:while, val[2], val[5], true)
                      result.line = val[1]
                    
    result
end

def _reduce_294(val, _values, result)
                      lexer.cond_push 1
                      result = lexer.line
                    
    result
end

def _reduce_295(val, _values, result)
                      lexer.cond_pop
                    
    result
end

def _reduce_296(val, _values, result)
                      result = s(:until, val[2], val[5], true)
                      result.line = val[1]
                    
    result
end

def _reduce_297(val, _values, result)
                      result = s(:case, val[1], *val[3])
                      result.line = val[1].line
                    
    result
end

def _reduce_298(val, _values, result)
                      result = s(:case, nil, *val[2])
                      # result.line = val[2].line
                    
    result
end

def _reduce_299(val, _values, result)
                      result = s(:case, nil, val[3])
                      # result.line = val[3].line
                    
    result
end

def _reduce_300(val, _values, result)
                      # ...
                    
    result
end

def _reduce_301(val, _values, result)
                      # ...
                    
    result
end

# reduce 302 omitted

def _reduce_303(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_304(val, _values, result)
                      # ...
                    
    result
end

def _reduce_305(val, _values, result)
                      result = new_class val[2], val[3], val[5]
                      result.line = val[1]
                      result.end_line = lexer.line
                    
    result
end

def _reduce_306(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_307(val, _values, result)
                      # ...
                    
    result
end

def _reduce_308(val, _values, result)
                      result = new_sclass val[3], val[6]
                      result.line = val[2]
                    
    result
end

def _reduce_309(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_310(val, _values, result)
                      # ...
                    
    result
end

def _reduce_311(val, _values, result)
                      result = new_module val[2], val[4]
                      result.line = val[1]
                      result.end_line = lexer.line
                    
    result
end

def _reduce_312(val, _values, result)
                      result = lexer.scope_line
                      push_scope
                    
    result
end

def _reduce_313(val, _values, result)
                      result = new_def val[2], nil, val[1], val[3], val[4]
                      pop_scope
                    
    result
end

def _reduce_314(val, _values, result)
                       lexer.lex_state = :expr_fname
                    
    result
end

def _reduce_315(val, _values, result)
                      result = lexer.scope_line
                      push_scope
                    
    result
end

def _reduce_316(val, _values, result)
                      result = new_def val[5], val[1], val[4], val[6], val[7]
                      pop_scope
                    
    result
end

def _reduce_317(val, _values, result)
                      result = s(:break)
                    
    result
end

def _reduce_318(val, _values, result)
                      result = s(:next)
                    
    result
end

def _reduce_319(val, _values, result)
                      result = s(:redo)
                    
    result
end

# reduce 320 omitted

# reduce 321 omitted

# reduce 322 omitted

# reduce 323 omitted

# reduce 324 omitted

# reduce 325 omitted

# reduce 326 omitted

# reduce 327 omitted

# reduce 328 omitted

def _reduce_329(val, _values, result)
                      result = new_call nil, :lambda, s(:arglist)
                      result << new_iter(val[0], val[1])
                    
    result
end

def _reduce_330(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_331(val, _values, result)
                      result = nil
                    
    result
end

# reduce 332 omitted

# reduce 333 omitted

def _reduce_334(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_335(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_336(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_337(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_338(val, _values, result)
                      result = s(:if, val[2], val[4], val[5])
                      result.line = val[1]
                    
    result
end

# reduce 339 omitted

def _reduce_340(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_341(val, _values, result)
                      result = s(:block, val[0])
                    
    result
end

def _reduce_342(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_343(val, _values, result)
                      result = new_assign new_assignable(s(:identifier, val[0].intern)), val[2]
                    
    result
end

# reduce 344 omitted

def _reduce_345(val, _values, result)
                      result = 0
                    
    result
end

def _reduce_346(val, _values, result)
                      result = 0
                    
    result
end

def _reduce_347(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_348(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_349(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_350(val, _values, result)
                      nil
                    
    result
end

def _reduce_351(val, _values, result)
                      result = new_block_args val[0], val[2], val[4], val[5]
                    
    result
end

def _reduce_352(val, _values, result)
                      result = new_block_args val[0], val[2], nil, val[3]
                    
    result
end

def _reduce_353(val, _values, result)
                      result = new_block_args val[0], nil, val[2], val[3]
                    
    result
end

def _reduce_354(val, _values, result)
                      result = new_block_args val[0], nil, nil, nil
                    
    result
end

def _reduce_355(val, _values, result)
                      result = new_block_args val[0], nil, nil, val[1]
                    
    result
end

def _reduce_356(val, _values, result)
                      result = new_block_args nil, val[0], val[2], val[3]
                    
    result
end

def _reduce_357(val, _values, result)
                      result = new_block_args nil, val[0], nil, val[1]
                    
    result
end

def _reduce_358(val, _values, result)
                      result = new_block_args nil, nil, val[0], val[1]
                    
    result
end

def _reduce_359(val, _values, result)
                      result = new_block_args nil, nil, nil, val[0]
                    
    result
end

def _reduce_360(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_361(val, _values, result)
                      result = new_iter val[2], val[3]
                      result.line = val[1]
                      pop_scope
                    
    result
end

def _reduce_362(val, _values, result)
                      val[0] << val[1]
                      result = val[0]
                    
    result
end

# reduce 363 omitted

# reduce 364 omitted

def _reduce_365(val, _values, result)
                      result = new_call nil, val[0].intern, val[1]
                    
    result
end

def _reduce_366(val, _values, result)
                      result = new_call val[0], val[2].intern, val[3]
                    
    result
end

def _reduce_367(val, _values, result)
                      result = new_call val[0], :call, val[2]
                    
    result
end

def _reduce_368(val, _values, result)
                      result = new_call val[0], val[2].intern, val[3]
                    
    result
end

def _reduce_369(val, _values, result)
                      result = new_call val[0], val[2].intern, s(:arglist)
                    
    result
end

def _reduce_370(val, _values, result)
                      result = new_super val[1]
                    
    result
end

def _reduce_371(val, _values, result)
                      result = s(:super, nil)
                    
    result
end

def _reduce_372(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_373(val, _values, result)
                      result = new_iter val[2], val[3]
                      result.line = val[1]
                      pop_scope
                    
    result
end

def _reduce_374(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_375(val, _values, result)
                      result = new_iter val[2], val[3]
                      result.line = val[1]
                      pop_scope
                    
    result
end

def _reduce_376(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_377(val, _values, result)
                      part = s(:when, val[2], val[4])
                      part.line = val[2].line
                      result = [part]
                      result.push *val[5] if val[5]
                    
    result
end

def _reduce_378(val, _values, result)
                      result = [val[0]]
                    
    result
end

# reduce 379 omitted

def _reduce_380(val, _values, result)
                      exc = val[1] || s(:array)
                      exc << new_assign(val[2], s(:gvar, '$!'.intern)) if val[2]
                      result = [s(:resbody, exc, val[4])]
                      result.push val[5].first if val[5]
                    
    result
end

def _reduce_381(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_382(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

# reduce 383 omitted

# reduce 384 omitted

def _reduce_385(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_386(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_387(val, _values, result)
                      result = val[1].nil? ? s(:nil) : val[1]
                    
    result
end

# reduce 388 omitted

# reduce 389 omitted

# reduce 390 omitted

# reduce 391 omitted

def _reduce_392(val, _values, result)
                      result = new_str val[0]
                    
    result
end

# reduce 393 omitted

# reduce 394 omitted

def _reduce_395(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_396(val, _values, result)
                      result = s(:str, val[0])
                    
    result
end

def _reduce_397(val, _values, result)
                      result = new_xstr val[1]
                    
    result
end

def _reduce_398(val, _values, result)
                      result = new_regexp val[1], val[2]
                    
    result
end

def _reduce_399(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_400(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_401(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_402(val, _values, result)
                      part = val[1]
                      part = s(:dstr, "", val[1]) if part.type == :evstr
                      result = val[0] << part
                    
    result
end

def _reduce_403(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_404(val, _values, result)
                      result = val[0].concat([val[1]])
                    
    result
end

def _reduce_405(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_406(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_407(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_408(val, _values, result)
                      result = val[0] << s(:str, val[1])
                    
    result
end

def _reduce_409(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_410(val, _values, result)
                      result = str_append val[0], val[1]
                    
    result
end

def _reduce_411(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_412(val, _values, result)
                      result = str_append val[0], val[1]
                    
    result
end

def _reduce_413(val, _values, result)
                      result = s(:str, val[0])
                    
    result
end

def _reduce_414(val, _values, result)
                      result = lexer.strterm
                      lexer.strterm = nil
                    
    result
end

def _reduce_415(val, _values, result)
                      lexer.strterm = val[1]
                      result = s(:evstr, val[2])
                    
    result
end

def _reduce_416(val, _values, result)
                      lexer.cond_push 0
                      lexer.cmdarg_push 0
                      result = lexer.strterm
                      lexer.strterm = nil
                      lexer.lex_state = :expr_beg
                    
    result
end

def _reduce_417(val, _values, result)
                      lexer.strterm = val[1]
                      lexer.cond_lexpop
                      lexer.cmdarg_lexpop
                      result = s(:evstr, val[2])
                    
    result
end

def _reduce_418(val, _values, result)
                      result = s(:gvar, val[0].intern)
                    
    result
end

def _reduce_419(val, _values, result)
                      result = s(:ivar, val[0].intern)
                    
    result
end

def _reduce_420(val, _values, result)
                      result = s(:cvar, val[0].intern)
                    
    result
end

# reduce 421 omitted

def _reduce_422(val, _values, result)
                      result = s(:sym, val[1].intern)
                      lexer.lex_state = :expr_end
                    
    result
end

def _reduce_423(val, _values, result)
                      result = s(:sym, val[0].intern)
                    
    result
end

# reduce 424 omitted

# reduce 425 omitted

# reduce 426 omitted

# reduce 427 omitted

def _reduce_428(val, _values, result)
                      result = new_dsym val[1]
                    
    result
end

def _reduce_429(val, _values, result)
                      result = s(:int, val[0])
                    
    result
end

def _reduce_430(val, _values, result)
                      result = s(:float, val[0])
                    
    result
end

# reduce 431 omitted

# reduce 432 omitted

def _reduce_433(val, _values, result)
                      result = s(:identifier, val[0].intern)
                    
    result
end

def _reduce_434(val, _values, result)
                      result = s(:ivar, val[0].intern)
                    
    result
end

def _reduce_435(val, _values, result)
                      result = s(:gvar, val[0].intern)
                    
    result
end

def _reduce_436(val, _values, result)
                      result = s(:const, val[0].intern)
                    
    result
end

def _reduce_437(val, _values, result)
                      result = s(:cvar, val[0].intern)
                    
    result
end

def _reduce_438(val, _values, result)
                      result = s(:nil)
                    
    result
end

def _reduce_439(val, _values, result)
                      result = s(:self)
                    
    result
end

def _reduce_440(val, _values, result)
                      result = s(:true)
                    
    result
end

def _reduce_441(val, _values, result)
                      result = s(:false)
                    
    result
end

def _reduce_442(val, _values, result)
                      result = s(:str, self.file)
                    
    result
end

def _reduce_443(val, _values, result)
                      result = s(:int, lexer.line)
                    
    result
end

def _reduce_444(val, _values, result)
                      result = new_var_ref val[0]
                    
    result
end

def _reduce_445(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_446(val, _values, result)
                      result = s(:nth_ref, val[0])
                    
    result
end

# reduce 447 omitted

def _reduce_448(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_449(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_450(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_451(val, _values, result)
                      result = val[1]
                      lexer.lex_state = :expr_beg
                    
    result
end

def _reduce_452(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_453(val, _values, result)
                      result = new_args val[0], val[2], val[4], val[5]
                    
    result
end

def _reduce_454(val, _values, result)
                      result = new_args val[0], val[2], nil, val[3]
                    
    result
end

def _reduce_455(val, _values, result)
                      result = new_args val[0], nil, val[2], val[3]
                    
    result
end

def _reduce_456(val, _values, result)
                      result = new_args val[0], nil, nil, val[1]
                    
    result
end

def _reduce_457(val, _values, result)
                      result = new_args nil, val[0], val[2], val[3]
                    
    result
end

def _reduce_458(val, _values, result)
                      result = new_args nil, val[0], nil, val[1]
                    
    result
end

def _reduce_459(val, _values, result)
                      result = new_args nil, nil, val[0], val[1]
                    
    result
end

def _reduce_460(val, _values, result)
                      result = new_args nil, nil, nil, val[0]
                    
    result
end

def _reduce_461(val, _values, result)
                      result = s(:args)
                    
    result
end

def _reduce_462(val, _values, result)
                      raise 'formal argument cannot be a constant'
                    
    result
end

def _reduce_463(val, _values, result)
                      raise 'formal argument cannot be an instance variable'
                    
    result
end

def _reduce_464(val, _values, result)
                      raise 'formal argument cannot be a class variable'
                    
    result
end

def _reduce_465(val, _values, result)
                      raise 'formal argument cannot be a global variable'
                    
    result
end

def _reduce_466(val, _values, result)
                      result = val[0].intern
                      scope.add_local result
                    
    result
end

def _reduce_467(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_468(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_469(val, _values, result)
                      result = s(:lasgn, val[0])
                    
    result
end

# reduce 470 omitted

def _reduce_471(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

def _reduce_472(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

# reduce 473 omitted

# reduce 474 omitted

# reduce 475 omitted

# reduce 476 omitted

# reduce 477 omitted

def _reduce_478(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_479(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_480(val, _values, result)
                      result = new_assign new_assignable(s(:identifier, val[0].intern)), val[2]
                    
    result
end

def _reduce_481(val, _values, result)
                      result = s(:block, val[0])
                    
    result
end

def _reduce_482(val, _values, result)
                      result = val[0]
                      val[0] << val[2]
                    
    result
end

# reduce 483 omitted

# reduce 484 omitted

def _reduce_485(val, _values, result)
                      result = "*#{val[1]}".intern
                    
    result
end

def _reduce_486(val, _values, result)
                      result = :"*"
                    
    result
end

# reduce 487 omitted

# reduce 488 omitted

def _reduce_489(val, _values, result)
                      result = "&#{val[1]}".intern
                    
    result
end

def _reduce_490(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_491(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_492(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_493(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_494(val, _values, result)
                      result = []
                    
    result
end

def _reduce_495(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_496(val, _values, result)
                      raise "unsupported assoc list type (#@line_number)"
                    
    result
end

def _reduce_497(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_498(val, _values, result)
                      result = val[0].push *val[2]
                    
    result
end

def _reduce_499(val, _values, result)
                      result = [val[0], val[2]]
                    
    result
end

def _reduce_500(val, _values, result)
                      result = [s(:sym, val[0].intern), val[1]]
                    
    result
end

# reduce 501 omitted

# reduce 502 omitted

# reduce 503 omitted

# reduce 504 omitted

# reduce 505 omitted

# reduce 506 omitted

# reduce 507 omitted

# reduce 508 omitted

# reduce 509 omitted

# reduce 510 omitted

# reduce 511 omitted

# reduce 512 omitted

# reduce 513 omitted

# reduce 514 omitted

# reduce 515 omitted

# reduce 516 omitted

# reduce 517 omitted

# reduce 518 omitted

# reduce 519 omitted

# reduce 520 omitted

# reduce 521 omitted

# reduce 522 omitted

# reduce 523 omitted

# reduce 524 omitted

# reduce 525 omitted

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module Opal
