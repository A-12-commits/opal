#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.12
# from Racc grammer file "".
#

require 'racc/parser.rb'
module Opal
  class Parser < Racc::Parser


##### State transition tables begin ###

clist = [
'63,64,65,8,51,-99,-98,-100,57,58,273,205,206,61,619,59,60,62,23,24,66',
'67,607,558,204,205,206,22,28,27,90,89,91,92,205,206,17,607,273,273,612',
'653,7,41,6,9,94,93,-92,84,50,86,85,87,227,88,95,96,268,81,82,-92,38',
'39,-94,-91,597,813,808,582,-68,205,206,-535,-100,652,-95,618,575,-95',
'552,649,268,609,608,36,575,575,30,607,810,52,770,487,54,-97,32,272,609',
'608,40,101,-97,575,268,268,100,-79,18,-96,575,-89,-91,79,73,75,76,77',
'78,-99,-98,-99,74,80,-99,272,272,63,64,65,56,51,-100,53,653,57,58,706',
'37,83,61,73,59,60,62,258,259,66,67,74,609,608,605,227,257,291,295,90',
'89,91,92,308,-92,219,-92,227,-84,-92,652,-85,41,-99,596,94,93,-94,84',
'50,86,85,87,-86,88,95,96,551,81,82,-534,38,39,101,101,-95,574,-95,100',
'100,-95,-535,101,101,574,574,900,100,100,-88,308,-97,-88,-97,210,653',
'-97,214,813,101,52,574,-91,54,100,-96,101,-96,574,40,-96,100,-90,726',
'205,206,-98,218,-98,344,343,-98,79,73,75,76,77,78,-100,652,-100,74,80',
'-100,-87,726,-255,-255,-255,56,-255,-89,53,653,-255,-255,716,37,83,-255',
'718,-255,-255,-255,-255,-255,-255,-255,-90,819,-88,454,788,-255,-255',
'-255,-255,-255,-255,-255,-91,-94,-255,-94,400,401,-94,652,877,-255,-90',
'630,-255,-255,820,-255,-255,-255,-255,-255,-255,-255,-255,-255,558,-255',
'-255,-88,-255,-255,726,-534,-87,-96,308,561,-88,-91,-535,-89,876,-100',
'-95,101,807,725,-91,-90,100,-84,-85,-255,-86,-458,-255,268,-90,-255',
'-94,823,-255,-95,-255,-86,-255,101,-255,725,602,-87,100,581,101,582',
'-255,603,-89,100,-87,-255,-255,-255,-255,-255,-255,-89,824,101,-255',
'-255,-93,777,100,63,64,65,-255,51,561,-255,-534,57,58,-92,-255,-255',
'61,531,59,60,62,258,259,66,67,631,754,-84,-85,789,257,291,295,90,89',
'91,92,751,607,219,101,-86,725,607,227,100,292,607,-87,94,93,-93,84,50',
'86,85,361,827,88,95,96,531,81,82,-84,-85,-88,-99,205,206,344,343,101',
'-84,-85,-97,224,100,-86,-97,226,225,222,223,754,264,265,-86,362,-452',
'702,214,694,266,52,751,-452,54,813,609,608,610,-90,-458,609,608,614',
'752,609,608,620,-99,527,528,524,584,79,73,75,76,77,78,585,836,544,74',
'80,546,344,343,-536,-536,-536,56,-536,101,53,837,-536,-536,100,296,83',
'-536,-84,-536,-536,-536,-536,-536,-536,-536,544,-92,215,546,839,-536',
'-536,-536,-536,-536,-536,-536,101,752,-536,-331,-331,100,583,625,586',
'-536,701,-331,-536,-536,700,-536,-536,-536,-536,-536,-536,-536,-536',
'-536,544,-536,-536,546,-536,-536,547,227,231,236,237,238,233,235,243',
'244,239,240,203,449,220,221,-453,101,241,242,450,-536,100,-453,-536',
'-536,548,-536,840,-331,-536,-331,-536,224,-536,230,-536,226,225,222',
'223,234,232,228,-536,229,456,-284,-284,-536,-536,-536,-536,-536,-536',
'-284,489,776,-536,-536,-534,245,842,-537,-537,-537,-536,-537,452,-536',
'451,-537,-537,455,-536,-536,-537,491,-537,-537,-537,-537,-537,-537,-537',
'103,104,105,106,107,-537,-537,-537,-537,-537,-537,-537,-449,-85,-537',
'524,521,491,-284,-449,-284,-537,-94,522,-537,-537,694,-537,-537,-537',
'-537,-537,-537,-537,-537,-537,544,-537,-537,543,-537,-537,453,227,231',
'236,237,238,233,235,243,244,239,240,-286,-286,220,221,-451,537,241,242',
'-286,-537,721,-451,-537,-537,850,-537,684,520,-537,523,-537,224,-537',
'230,-537,226,225,222,223,234,232,228,-537,229,852,524,593,-537,-537',
'-537,-537,-537,-537,822,832,813,-537,-537,855,245,650,-255,-255,-255',
'-537,-255,-286,-537,-286,-255,-255,856,-537,-537,-255,858,-255,-255',
'-255,-255,-255,-255,-255,103,104,105,106,107,-255,-255,-255,-255,-255',
'-255,-255,-456,860,-255,524,593,862,592,-456,523,-255,555,591,-255,-255',
'864,-255,-255,-255,-255,-255,-255,-255,-255,-255,803,-255,-255,682,-255',
'-255,-79,227,231,236,237,238,233,235,243,244,239,240,524,946,220,221',
'-446,-265,241,242,947,-255,681,-446,-255,268,268,-255,679,592,-255,523',
'-255,224,-255,230,-255,226,225,222,223,234,232,228,-255,229,559,-283',
'-283,-255,-255,-255,-255,-255,-255,-283,301,302,-255,-255,-535,245,671',
'63,64,65,-255,51,945,-255,586,57,58,670,-255,-255,61,308,59,60,62,258',
'259,66,67,415,-532,205,206,561,257,28,27,90,89,91,92,-455,802,219,203',
'201,570,-283,-455,-283,41,571,202,94,93,533,84,50,86,85,87,261,88,95',
'96,878,81,82,879,38,39,880,227,231,236,237,238,233,235,243,244,239,240',
'-449,-449,220,221,-454,881,241,242,-449,210,402,-454,214,-532,883,52',
'884,199,54,200,256,224,694,230,40,226,225,222,223,234,232,228,218,229',
'-532,524,534,79,73,75,76,77,78,535,832,813,74,80,582,245,886,63,64,65',
'56,51,-449,53,-449,57,58,729,37,83,61,-263,59,60,62,258,259,66,67,103',
'104,105,106,107,257,28,27,90,89,91,92,344,343,219,890,800,227,452,625',
'451,41,227,497,94,93,895,84,50,86,85,87,261,88,95,96,227,81,82,897,38',
'39,391,227,231,236,237,238,233,235,243,244,239,240,224,388,220,221,226',
'225,241,242,412,210,491,227,214,414,413,52,227,227,54,404,256,224,903',
'230,40,226,225,222,223,234,232,228,218,229,905,906,308,79,73,75,76,77',
'78,587,489,588,74,80,224,245,589,-233,226,225,56,915,268,53,532,919',
'754,-266,37,83,63,64,65,8,51,-67,629,751,57,58,628,-263,627,61,921,59',
'60,62,23,24,66,67,708,308,792,300,708,22,28,27,90,89,91,92,-535,561',
'17,791,341,340,344,343,7,41,931,9,94,93,932,84,50,86,85,87,299,88,95',
'96,624,81,82,514,38,39,937,227,855,939,860,341,340,344,343,341,340,344',
'343,752,860,915,862,515,241,242,754,36,246,268,30,497,621,52,948,617',
'54,751,32,224,613,230,40,226,225,222,223,516,198,228,18,229,954,497',
'197,79,73,75,76,77,78,700,196,308,74,80,497,195,341,340,344,343,56,866',
'867,53,772,868,95,96,37,83,63,64,65,8,51,964,860,966,57,58,967,108,525',
'61,277,59,60,62,23,24,66,67,97,-264,,752,,22,28,27,90,89,91,92,,563',
'17,336,334,333,,335,7,41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82,',
'38,39,,227,231,236,237,238,233,235,243,244,239,240,,,220,221,,,241,242',
',36,,,30,,,52,,,54,,32,224,,230,40,226,225,222,223,234,232,228,18,229',
',,,79,73,75,76,77,78,,,,74,80,,245,,-233,,,56,,,53,,,,,37,83,63,64,65',
'8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92',
',563,17,336,334,333,,335,7,41,,9,94,93,,84,50,86,85,87,,88,95,96,,81',
'82,,38,39,,227,231,236,237,238,233,235,243,244,239,240,,,220,221,,,241',
'242,,36,,,30,,,52,,,54,,32,224,,230,40,226,225,222,223,234,232,228,18',
'229,,,,79,73,75,76,77,78,,,,74,80,,245,,63,64,65,56,51,,53,,57,58,,37',
'83,61,,59,60,62,258,259,66,67,,,,,,257,28,27,90,89,91,92,,,219,,,,,',
',41,,,94,93,,84,50,86,85,87,261,88,95,96,,81,82,,38,39,,227,231,236',
'237,238,233,235,243,244,239,240,,,220,221,,,241,242,,210,,,214,,,52',
',,54,,256,224,,230,40,226,225,222,223,234,232,228,218,229,,,,79,73,75',
'76,77,78,,,,74,80,,245,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62',
'258,259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,41,,,94,93,,84',
'50,86,85,87,,88,95,96,,81,82,,38,39,,227,231,236,237,238,233,235,243',
'244,239,240,,,220,221,,,241,242,,210,,,214,,,52,,,54,,,224,,230,40,226',
'225,222,223,234,232,228,218,229,,,,79,73,75,76,77,78,,,,74,80,,245,',
'63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,23,24,66,67,,,,,,22,28',
'27,90,89,91,92,,,17,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82',
',38,39,,227,231,236,237,238,233,235,243,244,239,240,,,220,221,,,241',
'242,,210,,,214,215,,52,,,54,,,224,,230,40,226,225,222,223,234,232,228',
'18,229,,,,79,73,75,76,77,78,,,,74,80,,245,,63,64,65,56,51,,53,,57,58',
',37,83,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,219,,,,',
',,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,227,231,236,237',
'238,233,235,243,244,239,240,,,220,221,,,241,242,,210,,,214,,,52,,,54',
',,224,,230,40,226,225,222,223,234,232,228,218,229,,,,79,73,75,76,77',
'78,,,,74,80,,245,,,,,56,,,53,,,,,37,83,63,64,65,8,51,,,,57,58,,,,61',
',59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94',
'93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,227,231,236,237,238,233',
'235,243,244,239,240,,,220,221,,,241,242,,36,,,30,,,52,,,54,,32,224,',
'230,40,226,225,222,223,234,232,228,18,229,,,,79,73,75,76,77,78,,,,74',
'80,,245,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67',
',,,,,257,291,295,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87',
',88,95,96,,81,82,,38,39,,227,231,236,237,238,233,235,243,244,239,240',
',,220,221,,,241,242,,210,,,214,,,52,,,54,,658,224,254,230,40,226,225',
'222,223,234,232,228,218,229,,,,79,73,75,76,77,78,,,,74,80,,245,,63,64',
'65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,28,27',
'90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,261,88,95,96,,81',
'82,,38,39,,227,231,236,237,238,233,235,243,244,239,240,,,220,221,,,241',
'242,,210,,,214,,,52,,,54,,256,224,254,230,40,226,225,222,223,234,232',
'228,218,229,,,,79,73,75,76,77,78,,,,74,80,,245,,63,64,65,56,51,,53,',
'57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,28,27,90,89,91,92,',
',219,,,,,,,41,,,94,93,,84,50,86,85,87,261,88,95,96,,81,82,,38,39,,227',
'231,236,237,238,233,235,243,244,239,240,,,220,221,,,241,242,,210,,,214',
',,52,,,54,,256,224,254,230,40,226,225,222,223,234,232,228,218,229,,',
',79,73,75,76,77,78,,,,74,80,,245,,63,64,65,56,51,,53,,57,58,,37,83,61',
',59,60,62,258,259,66,67,,,,,,257,28,27,90,89,91,92,,,219,,,,,,,41,,',
'94,93,,84,50,86,85,87,261,88,95,96,,81,82,,38,39,,227,231,236,237,238',
'233,235,243,244,239,240,,,220,221,,,241,242,,210,,,214,,,52,,,54,,256',
'224,254,230,40,226,225,222,223,234,232,228,218,229,,,,79,73,75,76,77',
'78,,,,74,80,,245,,,,,56,,,53,,,,,37,83,63,64,65,8,51,,,,57,58,,,,61',
',59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94',
'93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,227,231,236,237,238,233',
'235,243,244,239,240,,,220,221,,,241,242,,36,,,30,,,52,,,54,,32,224,',
'230,40,226,225,222,223,234,232,228,18,229,,,,79,73,75,76,77,78,,,,74',
'80,,245,,,,,56,,,53,,,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,,227,231,236,237,238,233,235,243,244',
'239,240,,,220,221,,,241,242,,36,,,30,,,52,,,54,,32,224,,230,40,226,225',
'222,223,234,232,228,18,229,,,,79,73,75,76,77,78,,,,74,80,,245,,-255',
'-255,-255,56,-255,,53,,-255,-255,,37,83,-255,,-255,-255,-255,-255,-255',
'-255,-255,,,,,,-255,-255,-255,-255,-255,-255,-255,,563,-255,336,334',
'333,,335,,-255,,,-255,-255,,-255,-255,-255,-255,-255,-255,-255,-255',
'-255,,-255,-255,,-255,-255,563,,336,334,333,,335,,,563,566,336,334,333',
',335,,,569,,,-255,,,-255,268,,-255,,,-255,,-255,,-255,,-255,,,566,,',
',,-255,,,569,566,-255,-255,-255,-255,-255,-255,,829,,-255,-255,,,,63',
'64,65,-255,51,,-255,,57,58,,-255,-255,61,,59,60,62,258,259,66,67,,,',
',,257,291,295,90,89,91,92,,,219,,,,227,,,41,,,94,93,,84,50,86,85,87',
',88,95,96,,81,82,,38,39,,227,-555,-555,-555,-555,233,235,224,,-555,-555',
'226,225,222,223,,,241,242,,210,,,214,,,52,,,54,,,224,,230,40,226,225',
'222,223,234,232,228,218,229,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,',
',53,,,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,',
',,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88,95',
'96,,81,82,,38,39,,227,231,236,237,238,233,235,243,244,239,240,,,-555',
'-555,,,241,242,,36,,,281,,,52,,,54,,32,224,,230,40,226,225,222,223,234',
'232,228,18,229,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,',
'57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,291,295,90,89,91,92',
',,219,,,,,,,292,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,327,,336,334',
'333,227,335,,,,,,,,,,,,,,,,241,242,289,,,286,,,52,,,54,,285,,224,,338',
',226,225,222,223,,,341,340,344,343,,79,73,75,76,77,78,794,,,74,80,,',
',63,64,65,56,51,,53,,57,58,,296,83,61,,59,60,62,258,259,66,67,,,,,,257',
'291,295,90,89,91,92,,,219,,,,,,,292,,,94,93,,84,50,86,85,87,,88,95,96',
',81,82,764,,336,334,333,754,335,,,,,,,,,,751,,,,,,,,289,,,214,,,52,',
',54,,,,,,338,,,,,,,,341,340,344,343,,79,73,75,76,77,78,,,,74,80,,,,298',
',,56,,,53,,,,,296,83,63,64,65,,51,,,752,57,58,,,,61,,59,60,62,258,259',
'66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86',
'85,87,,88,95,96,,81,82,,38,39,,227,231,236,237,238,233,235,243,244,239',
'240,,,-555,-555,,,241,242,,210,,,214,,,52,,,54,,658,224,,230,40,226',
'225,222,223,234,232,228,218,229,,,,79,73,75,76,77,78,,,,74,80,,,,63',
'64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,291',
'295,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81',
'82,,38,39,,227,-555,-555,-555,-555,233,235,,,-555,-555,,,,,,,241,242',
',210,,,214,,,52,,,54,,,224,,230,40,226,225,222,223,234,232,228,218,229',
',,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61',
',59,60,62,258,259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,292',
',,94,93,,84,50,86,85,87,,88,95,96,,81,82,327,,336,334,333,,335,,,,,',
',,,,,,,,,,,,926,,,214,,,52,,,54,,,,,,338,322,,,,,,,341,340,344,343,',
'79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,296,83,61,',
'59,60,62,258,259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,41,',
',94,93,,84,50,86,85,87,261,88,95,96,,81,82,,38,39,,227,231,236,237,238',
'233,235,243,,239,240,,,,,,,241,242,,210,,,214,,,52,,,54,,658,224,254',
'230,40,226,225,222,223,234,232,228,218,229,,,,79,73,75,76,77,78,,,,74',
'80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,',
',,,257,291,295,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,227,231,236,237,238,233,235,,,239,240,,,,,,,241',
'242,,210,,,214,,,52,,,54,,,224,,230,40,226,225,222,223,234,232,228,218',
'229,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83',
'61,,59,60,62,258,259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,',
'41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,227,,,,,,,,,,,,',
',,,,241,242,,210,,,214,,,52,,,54,,,224,,230,40,226,225,222,223,,,228',
'218,229,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,',
'37,83,61,,59,60,62,258,259,66,67,,,,,,257,291,295,90,89,91,92,,,219',
',,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,227,-555,-555',
'-555,-555,233,235,,,-555,-555,,,,,,,241,242,,210,,,214,,,52,,,54,,,224',
',230,40,226,225,222,223,234,232,228,218,229,,,,79,73,75,76,77,78,,,',
'74,80,,,,,,,56,,,53,,,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,,227,-555,-555,-555,-555,233,235,,',
'-555,-555,,,,,,,241,242,,36,,,30,,,52,,,54,,32,224,,230,40,226,225,222',
'223,234,232,228,18,229,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56',
'51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,291,295,90',
'89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,261,88,95,96,,81,82',
',38,39,,227,-555,-555,-555,-555,233,235,,,-555,-555,,,,,,,241,242,,210',
',,214,,,52,,,54,,,224,254,230,40,226,225,222,223,234,232,228,218,229',
',,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61',
',59,60,62,258,259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,41',
',,94,93,,84,50,86,85,87,261,88,95,96,,81,82,,38,39,,227,,,,,,,,,,,,',
',,,,241,242,,210,,,214,,,52,,,54,,,224,254,230,40,226,225,222,223,,',
'228,218,229,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57',
'58,,37,83,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,',
',,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,227,-555,-555',
'-555,-555,233,235,,,-555,-555,,,,,,,241,242,,210,,,214,,,52,,,54,,,224',
',230,40,226,225,222,223,234,232,228,18,229,,,,79,73,75,76,77,78,,,,74',
'80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,',
',,,257,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,261',
'88,95,96,,81,82,,38,39,,227,,,,,,,,,,,,,,,,,241,242,,210,,,214,,,52',
',,54,,256,224,,230,40,226,225,222,223,,,228,218,229,,,,79,73,75,76,77',
'78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259',
'66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86',
'85,87,261,88,95,96,,81,82,,38,39,,227,,,,,,,,,,,,,,,,,241,242,,210,',
',214,,,52,,,54,,,224,,230,40,226,225,222,223,,,,218,,,,,79,73,75,76',
'77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258',
'259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,,227,,,,,,,,,,,,,,,,,241,242,,210,',
',214,,,52,,,54,,,224,,230,40,226,225,222,223,,,,218,,,,,79,73,75,76',
'77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258',
'259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52',
',,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56',
'51,,53,,57,58,,37,83,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91',
'92,,,17,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,',
',,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75',
'76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,23',
'24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,,84,50,86,85',
'87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54',
',,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,',
'53,,57,58,,37,83,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92',
',,17,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,',
',,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76',
'77,78,,,,74,80,101,,,,,100,56,,,53,,,,,37,83,63,64,65,,51,,,,57,58,',
',,61,,59,60,62,258,259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,',
',,292,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,327,,336,334,333,,335',
',,,,,,,,,,,,,,,,,356,,,30,,,52,,,54,,32,,,,338,,554,,,,,,341,340,344',
'343,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,296,83',
'61,,59,60,62,258,259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,',
'292,,,94,93,,84,50,86,85,361,,88,95,96,,81,82,327,,336,334,333,,335',
',,,,,,,,,,,,,,367,,,362,,,214,,,52,,,54,,,,,,338,,,,,,,,341,340,344',
'343,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,296,83',
'61,,59,60,62,258,259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,',
'41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,',
',,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,',
'74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,23,24,66,67,',
',,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95',
'96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,',
',,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,,37,83,63,64',
'65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91',
'92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,',
',,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,,37,83,63,64,65,8,51,,,,57,58',
',,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41',
',9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,',
',,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74',
'80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,23,24,66,67,,,,',
',22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,',
',,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,,37,83,63,64,65',
'8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92',
',,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,',
',,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75',
'76,77,78,,,,74,80,,,,-531,-531,-531,56,-531,,53,,-531,-531,,37,83,-531',
',-531,-531,-531,-531,-531,-531,-531,,-531,,,,-531,-531,-531,-531,-531',
'-531,-531,,,-531,,,,,,,-531,,,-531,-531,,-531,-531,-531,-531,-531,-531',
'-531,-531,-531,,-531,-531,,-531,-531,,,,,,,,,,,,,,,,,,,,,,-531,,,-531',
'-531,,-531,,,-531,,-531,,-531,,-531,,,,,,,,-531,,-531,,,-531,-531,-531',
'-531,-531,-531,,,,-531,-531,,,,-532,-532,-532,-531,-532,,-531,,-532',
'-532,,-531,-531,-532,,-532,-532,-532,-532,-532,-532,-532,,-532,,,,-532',
'-532,-532,-532,-532,-532,-532,,,-532,,,,,,,-532,,,-532,-532,,-532,-532',
'-532,-532,-532,-532,-532,-532,-532,,-532,-532,,-532,-532,,,,,,,,,,,',
',,,,,,,,,,-532,,,-532,-532,,-532,,,-532,,-532,,-532,,-532,,,,,,,,-532',
',-532,,,-532,-532,-532,-532,-532,-532,,,,-532,-532,,,,63,64,65,-532',
'51,,-532,,57,58,,-532,-532,61,,59,60,62,258,259,66,67,,,,,,257,291,295',
'90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,256,,,,40,,,,,,,,218',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,,37,83,63,64,65,8,51',
',,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17',
',,,,,7,41,6,9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,',
',,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,404,56,,,53,,,,,37,83,63,64,65,,51,,,,57,58,,,,61,',
'59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93',
',84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214',
',,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64',
'65,56,51,,53,,57,58,,37,83,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90',
'89,91,92,,,17,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79',
'73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60',
'62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52',
',,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56',
'51,,53,,57,58,,37,83,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91',
'92,,,17,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,',
',,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,,,,,37,83,63,64,65,8,51,,,,57,58,,,',
'61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9',
'94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,36',
',,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,',
',,,,56,,,53,,,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66',
'67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,6,9,94,93,,84,50,86,85,87',
',88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,',
',,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53',
',57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,291,295,90,89,91,92',
',,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,',
',,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79,73,75',
'76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258',
'259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52',
',,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56',
'51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,291,295,90',
'89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79',
'73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,,37,83,63,64,65,8,51,,,,57',
'58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7',
'41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,',
',,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,',
'74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,23,24,66,67,',
',,,,22,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,421,,',
',40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53',
',57,58,,37,83,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,219',
',,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,',
',,,,,,,,,,210,,,214,,,52,,,54,,421,,,,40,,,,,,,,218,,,,,79,73,75,76',
'77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,23,24',
'66,67,,,,,,22,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85',
'87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54',
',,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51',
',53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,28,27,90,89,91',
'92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,261,88,95,96,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,256,,,,40,,,,,,,,218,,,,,79',
'73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60',
'62,258,259,66,67,,,,,,257,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,',
'84,50,86,85,87,261,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,',
',214,,,52,,,54,,256,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80',
',,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,23,24,66,67,,,,,,22',
'28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,',
'81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,',
',218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37',
'83,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,219,,,,,,,41',
',,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,',
',210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74',
'80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,',
',,,257,291,295,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40',
',,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57',
'58,,37,83,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,219,',
',,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,',
',,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78',
',,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,23,24,66,67',
',,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40',
',,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58',
',37,83,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,',
',41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,',
',,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,',
'74,80,,,,,,,56,,,53,,,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,',
',54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56',
'51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,291,295,90',
'89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79',
'73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,,37,83,63,64,65,8,51,,,,57',
'58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7',
'41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,',
',,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,',
'74,80,,,,,,,56,,,53,,,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,',
',54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
',,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22',
'28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88,95,96',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,',
',,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37',
'83,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41',
',,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,',
',210,,,214,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,,,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24',
'66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85',
'87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32',
',,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53',
',57,58,,37,83,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17',
',,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,',
',,,,,,,,,,210,,,214,,458,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77',
'78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259',
'66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86',
'85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,',
'54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56',
'51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,291,295,90',
'89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,256,,,,40,,,,,,,,218,,',
',,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61',
',59,60,62,258,259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,41',
',,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,',
',210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74',
'80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,',
',,,257,291,295,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40',
',,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57',
'58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,291,295,90,89,91,92,,',
'219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,',
',,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76',
'77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258',
'259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52',
',,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56',
'51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,291,295,90',
'89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79',
'73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60',
'62,258,259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,41,,,94,93',
',84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214',
',,52,,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64',
'65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,291,295',
'90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,',
',,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61',
',59,60,62,258,259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,41',
',,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,',
',210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74',
'80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,',
',,,257,291,295,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40',
',,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57',
'58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,291,295,90,89,91,92,,',
'219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,',
',,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76',
'77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258',
'259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52',
',,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56',
'51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,291,295,90',
'89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79',
'73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60',
'62,258,259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,41,,,94,93',
',84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214',
',,52,,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64',
'65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,291,295',
'90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,',
',,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61',
',59,60,62,258,259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,41',
',,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,',
',210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74',
'80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,',
',,,257,291,295,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40',
',,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57',
'58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,291,295,90,89,91,92,,',
'219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,',
',,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76',
'77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258',
'259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52',
',,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56',
'51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,291,295,90',
'89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79',
'73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60',
'62,258,259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,41,,,94,93',
',84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214',
',,52,,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64',
'65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,291,295',
'90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,',
',,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61',
',59,60,62,258,259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,41',
',,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,',
',210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74',
'80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,',
',,,257,291,295,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40',
',,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57',
'58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,291,295,90,89,91,92,,',
'219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,',
',,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76',
'77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258',
'259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52',
',,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56',
'51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,291,295,90',
'89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79',
'73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60',
'62,258,259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,41,,,94,93',
',84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214',
',,52,,,54,,421,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63',
'64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,291',
'295,90,89,91,92,,,219,,,,,,,292,,,94,93,,84,50,86,85,87,,88,95,96,,81',
'82,,,,,,,,,,,,,,,,,,,,,,,,,289,,,286,,,52,,,54,,,,,,,,,,,,,,,,,,,79',
'73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,296,83,61,,59',
'60,62,258,259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,292,,,94',
'93,,84,50,86,85,87,,88,95,96,,81,82,,,,,,,,,,,,,,,,,,,,,,,,,289,,,286',
',,52,,,54,,,,,,,,,,,,,,,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56',
'51,,53,,57,58,,296,83,61,,59,60,62,258,259,66,67,,,,,,257,291,295,90',
'89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79',
'73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,,37,83,63,64,65,8,51,,,,57',
'58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7',
'41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,',
',,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,',
'74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67',
',,,,,257,291,295,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87',
',88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,',
',,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53',
',57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,291,295,90,89,91,92',
',,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,',
',,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,,,,,37,83,63,64,65,8,51,,,,57,58,,,',
'61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9',
'94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,36',
',,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,',
',63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257',
'291,295,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,261,88,95',
'96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,254,,40',
',,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57',
'58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,291,295,90,89,91,92,,',
'219,,,,,,,41,,,94,93,,84,50,86,85,87,261,88,95,96,,81,82,,38,39,,,,',
',,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,658,,254,,40,,,,,,,,218,,,,,79',
'73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,,37,83,63,64,65,8,51,,,,57',
'58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7',
'41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,',
',,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,',
'74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67',
',,,,,257,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,261',
'88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,256',
',254,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51',
',53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,28,27,90,89,91',
'92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,261,88,95,96,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,,210,,,214,,,506,,,54,,256,,254,,40,,,,,,,,218,',
',,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61',
',59,60,62,258,259,66,67,,,,,,257,28,27,90,89,91,92,,,219,,,,,,,41,,',
'94,93,,84,50,86,85,87,261,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,',
',,210,,,214,,510,52,,,54,,256,,254,,40,,,,,,,,218,,,,,79,73,75,76,77',
'78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259',
'66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86',
'85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,',
'54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,',
',,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22',
'28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88,95,96',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,',
',,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37',
'83,61,,59,60,62,258,259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,',
',,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,',
',,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78',
',,,74,80,,,,,,,56,,,53,,,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60',
'62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84',
'50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,36,,,281,,',
'52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64',
'65,56,51,,53,,57,58,,37,83,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90',
'89,91,92,,,17,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79',
'73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60',
'62,258,259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,41,,,94,93',
',84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214',
',,52,,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64',
'65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,291,295',
'90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,',
',,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61',
',59,60,62,258,259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,292',
',,94,93,,84,50,86,85,87,,88,95,96,,81,82,764,,336,334,333,754,335,,',
',,,,,,,751,,,,,,,,289,,,214,,,52,,,54,,,,,,338,749,,,,,,,341,340,344',
'343,,79,73,75,76,77,78,,,,74,80,,,,518,,,56,,,53,,,,,296,83,63,64,65',
'8,51,,,752,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91',
'92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,',
',,,,,,,,,,,,,,,,,,,,36,,,281,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73',
'75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52',
',,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56',
'51,,53,,57,58,,37,83,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91',
'92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,',
',,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79,73',
'75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52',
',,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56',
'51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,291,295,90',
'89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,775,,,,40,,,,,,,,218,,',
',,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61',
',59,60,62,258,259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,41',
',,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,',
',210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74',
'80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,23,24,66,67,,,,',
',22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,',
',,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37',
'83,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41',
',,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,',
',210,,,214,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80',
',,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,23,24,66,67,,,,,,22',
'28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81',
'82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,18',
',,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61',
',59,60,62,258,259,66,67,,,,,,257,28,27,90,89,91,92,,,219,,,,,,,41,,',
'94,93,,84,50,86,85,87,261,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,',
',,210,,,214,,,52,,,54,,256,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,',
',74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67',
',,,,,257,291,295,90,89,91,92,,,219,,,,,,,292,,,94,93,,84,50,86,85,87',
',88,95,96,,81,82,,,,,,,,,,,,,,,,,,,,,,,,,289,,,286,,,52,,,54,,,,,,,',
',,,,,,,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,',
'296,83,61,,59,60,62,258,259,66,67,,,,,,257,28,27,90,89,91,92,,,219,',
',,,,,41,,,94,93,,84,50,86,85,87,261,88,95,96,,81,82,,38,39,,,,,,,,,',
',,,,,,,,,,,,210,,,214,,,52,,,54,,256,,,,40,,,,,,,,218,,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,,,,,37,83,63,64,65,8,51,,,,57,58,,,,61',
',59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94',
'93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,36,',
',30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,',
',,,56,,,53,,,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66',
'67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87',
',88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,',
',,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,,37,83',
'63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90',
'89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79',
'73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60',
'62,258,259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,292,,,94,93',
',84,50,86,85,87,,88,95,96,,81,82,,,,,,,,,,,,,,,,,,,,,,,,,712,,,214,',
',52,,,54,,,,,,,,,,,,,,,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56',
'51,,53,,57,58,,296,83,61,,59,60,62,258,259,66,67,,,,,,257,291,295,90',
'89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,,210,,,214,537,,52,,,54,,,,,,40,,,,,,,,218,,',
',,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,,37,83,63,64,65,8,51,',
',,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,',
',,,,7,41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,',
',,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,,,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59',
'60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93',
',84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,36,,,30',
',,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56',
',,53,,,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,',
',,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40',
',,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58',
',37,83,61,,59,60,62,258,259,66,67,,,,,,257,291,295,90,89,91,92,,,219',
',,,,,,41,,,94,93,,84,50,86,85,87,261,88,95,96,,81,82,,38,39,,,,,,,,',
',,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76',
'77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258',
'259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50',
'86,85,87,261,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,',
',52,,,54,,658,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63',
'64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,23,24,66,67,,,,,,22,28,27',
'90,89,91,92,,,17,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,',
'38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,18,,,',
',79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,',
'59,60,62,258,259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,41,',
',94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,',
'210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80',
',,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,',
'257,291,295,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95',
'96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,',
',,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58',
',37,83,61,,59,60,62,258,259,66,67,,,,,,257,291,295,90,89,91,92,,,219',
',,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,',
',,,,,,,,,,210,,,214,,,52,,,54,,,,,,40,,,,,,,,218,,,,,79,73,75,76,77',
'78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259',
'66,67,,,,,,257,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85',
'87,261,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,',
'54,,256,,,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65',
'56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67,,,,,,257,28,27,90',
'89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,261,88,95,96,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,256,,,,40,,,,,,,,218',
',,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61',
',59,60,62,258,259,66,67,,,,,,257,291,295,90,89,91,92,,,219,,,,,,,292',
',,94,93,,84,50,86,85,87,,88,95,96,,81,82,764,,336,334,333,754,335,,',
',,,,,,,751,,,,,,,,289,,,286,,,52,,,54,,,,,,338,749,,,,,,,341,340,344',
'343,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,,296,83,63,64,65,8',
'51,,,752,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92',
',,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,',
',,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,404,56,,,53,,,,,37,83,63,64,65,,51,,,,57,58,',
',,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,',
',94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,',
'210,,,214,,675,52,,,54,,,,254,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,',
',74,80,,,,63,64,65,56,51,,53,,57,58,,37,83,61,,59,60,62,258,259,66,67',
',,,,,257,28,27,90,89,91,92,,,219,,,,,,,41,,,94,93,,84,50,86,85,87,261',
'88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,,210,,,214,,,52,,,54,,256',
',,,40,,,,,,,,218,,,,,79,73,75,76,77,78,,,,74,80,,,,,-283,,56,,,53,,-283',
'-283,-283,37,83,-283,-283,-283,,-283,,,,,,,,,,-283,-283,,,,,,,,,-283',
'-283,,-283,-283,-283,-283,-283,,,,,,,,,,,,,,,,,,,,,,,,-283,-283,-283',
'-283,-283,-283,-283,-283,-283,-283,-283,-283,-283,-283,-283,,,-283,-283',
'-283,,639,-283,,,-283,,,-283,,-283,,-283,,-283,,-283,-283,-283,-283',
'-283,-283,-283,,-283,,-283,,,,,,,,,,,,,-283,-283,-283,-283,,-283,-538',
',-283,,-283,,-98,-538,-538,-538,,,,-538,-538,,-538,,,,,,,,,-538,,,,',
',,,,,,-538,-538,,-538,-538,-538,-538,-538,,,,,,,,,,,,,,,,,,,,,,,,-538',
'-538,-538,-538,-538,-538,-538,-538,-538,-538,-538,-538,-538,-538,-538',
'-283,,-538,-538,-538,,636,-283,-283,-283,-538,,,-283,-283,,-283,-538',
',-538,,-538,-538,-538,-538,-538,-538,-538,,-538,-538,-538,,,,,-283,-283',
',-283,-283,-283,-283,-283,-538,-538,,-87,,-538,,,-538,,-538,,-96,,,',
',,,,,,,-283,-283,-283,-283,-283,-283,-283,-283,-283,-283,-283,-283,-283',
'-283,-283,,,-283,-283,-283,,639,,,,-283,,,,,,,-283,,-283,,-283,-283',
'-283,-283,-283,-283,-283,,-283,,-283,,,,,,,,,,,,,-283,-283,,-89,,-283',
'-538,,-283,,-283,,-98,-538,-538,-538,,,-538,-538,-538,,-538,,,,,,,,',
'-538,-538,-538,,,,,,,,,-538,-538,,-538,-538,-538,-538,-538,,,,,,,,,',
',,,,,,,,,,,,,,-538,-538,-538,-538,-538,-538,-538,-538,-538,-538,-538',
'-538,-538,-538,-538,,,-538,-538,-538,,790,-538,,,-538,,,-538,,-538,',
'-538,,-538,,-538,-538,-538,-538,-538,-538,-538,,-538,-538,-538,,,,,',
',,,,,,,-538,-538,-538,-538,,-538,-278,,-538,,-538,,-96,-278,-278,-278',
',,-278,-278,-278,,-278,,,,,,,,,,-278,-278,-278,,,,,,,,-278,-278,,-278',
'-278,-278,-278,-278,,,,,,,,,,,,,,,,,,,,,,,,-278,-278,-278,-278,-278',
'-278,-278,-278,-278,-278,-278,-278,-278,-278,-278,,,-278,-278,-278,',
',-278,,,-278,,,-278,,-278,,-278,,-278,,-278,-278,-278,-278,-278,-278',
'-278,,-278,,-278,,,,,,,,,,,,,-278,-278,-278,-278,-292,-278,,-278,-278',
',-278,-292,-292,-292,,,-292,-292,-292,,-292,,,,,,,,,,-292,-292,,,,,',
',,,-292,-292,,-292,-292,-292,-292,-292,,,,,,,,,,,,,,,,,,,,,,,,-292,-292',
'-292,-292,-292,-292,-292,-292,-292,-292,-292,-292,-292,-292,-292,,,-292',
'-292,-292,,,-292,,277,-292,,,-292,,-292,,-292,,-292,,-292,-292,-292',
'-292,-292,-292,-292,,-292,,-292,,,,,,,,,,,,,-292,-292,-292,-292,-554',
'-292,,,-292,,-292,-554,-554,-554,,,-554,-554,-554,,-554,,,,,,,,,,-554',
',,,,,,,,,-554,-554,,-554,-554,-554,-554,-554,,,,,,,,,,,,,764,-554,336',
'334,333,754,335,,-554,-554,-554,,,-554,-554,-554,751,-554,,,,,-554,-554',
',,,-554,,,-554,,,,,268,-554,-554,-554,338,-554,-554,-554,-554,-554,',
',341,340,344,343,,,,,,,-554,,,,,,,,,,,,-554,-554,,-554,,,-554,-554,-554',
'-554,-554,-554,-554,-554,-554,,-554,752,-554,,,,,268,-554,,-554,,,,',
',,,,,-554,-554,,-554,-554,-554,-554,-554,,-554,,,,,,689,440,,,690,,',
'-554,,-554,,,-554,142,143,,139,121,122,123,130,127,129,,,124,125,-554',
'-554,,,144,145,131,132,-554,,,,,268,-554,,,,,,136,135,,120,141,138,137',
'133,134,128,126,118,140,119,,-554,146,,,,,,,,,,,,-554,,-554,,,-554,156',
'167,157,180,153,173,163,162,188,191,178,161,160,155,181,189,190,165',
'154,168,172,174,166,159,,,,175,182,177,176,169,179,164,152,171,170,183',
'184,185,186,187,151,158,149,150,147,148,,111,113,110,,112,,,,,,,,,142',
'143,,139,121,122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,',
',,,,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119,,,146,192',
',,,,,,,,,80,156,167,157,180,153,173,163,162,188,191,178,161,160,155',
'181,189,190,165,154,168,172,174,166,159,,,,175,182,177,176,169,179,164',
'152,171,170,183,184,185,186,187,151,158,149,150,147,148,,111,113,,,112',
',,,,,,,,142,143,,139,121,122,123,130,127,129,,,124,125,,,,,144,145,131',
'132,,,,,,,,,,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119',
',,146,192,,,,,,,,,,80,156,167,157,180,153,173,163,162,188,191,178,161',
'160,155,181,189,190,165,154,168,172,174,166,159,,,,175,182,177,176,169',
'179,164,152,171,170,183,184,185,186,187,151,158,149,150,147,148,,111',
'113,,,112,,,,,,,,,142,143,,139,121,122,123,130,127,129,,,124,125,,,',
',144,145,131,132,,,,,,,,,,,,,136,135,,120,141,138,137,133,134,128,126',
'118,140,119,,,146,192,,,,,,,,,,80,156,167,157,180,153,173,163,162,188',
'191,178,161,160,155,181,189,190,165,154,168,172,174,166,159,,,,175,182',
'177,176,169,179,164,152,171,170,183,184,185,186,187,151,158,149,150',
'147,148,,111,113,,,112,,,,,,,,,142,143,,139,121,122,123,130,127,129',
',,124,125,,,,,144,145,131,132,,,,,,,,,,,,,136,135,,120,141,138,137,133',
'134,128,126,118,140,119,,,146,192,,,,,,,,,,80,156,167,157,180,153,173',
'163,162,188,191,178,161,160,155,181,189,190,165,154,168,172,174,166',
'159,,,,175,182,177,376,375,377,374,152,171,170,183,184,185,186,187,151',
'158,149,150,372,373,,370,113,86,85,371,,88,,,,,,,142,143,,139,121,122',
'123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,381,,,,,,,136,135',
',120,141,138,137,133,134,128,126,118,140,119,,,146,156,167,157,180,153',
'173,163,162,188,191,178,161,160,155,181,189,190,165,154,168,172,174',
'166,159,,,,175,182,177,176,169,179,164,152,171,170,183,184,185,186,187',
'151,158,149,150,147,148,,111,113,398,397,112,,399,,,,,,,142,143,,139',
'121,122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,,,,136',
'135,,120,141,138,137,133,134,128,126,118,140,119,,,146,156,167,157,180',
'153,173,163,162,188,191,178,161,160,155,181,189,190,165,154,168,172',
'174,166,159,,,,175,182,177,176,169,179,164,152,171,170,183,184,185,186',
'187,151,158,149,150,147,148,,111,113,,,112,,,,,,,,,142,143,,139,121',
'122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,,,,136,135',
',120,141,138,137,133,134,128,126,118,140,119,,,146,156,167,157,180,153',
'173,163,162,188,191,178,161,160,155,181,189,190,165,154,168,172,174',
'166,159,,,,175,182,177,176,169,179,164,152,171,170,183,184,185,186,187',
'151,158,149,150,147,148,,111,113,398,397,112,,399,,,,,,,142,143,,139',
'121,122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,,,,136',
'135,,120,141,138,137,133,134,128,126,118,140,119,644,440,146,,645,,',
',,,,,,142,143,,139,121,122,123,130,127,129,,,124,125,,,,,144,145,131',
'132,,,,,,,,,,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119',
'959,434,146,,960,,,,,,,,,142,143,,139,121,122,123,130,127,129,,,124',
'125,,,,,144,145,131,132,,,,,,268,,,,,,,136,135,,120,141,138,137,133',
'134,128,126,118,140,119,642,434,146,,643,,,,,,,,,142,143,,139,121,122',
'123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,268,,,,,,,136,135',
',120,141,138,137,133,134,128,126,118,140,119,443,434,146,,444,,,,,,',
',,142,143,,139,121,122,123,130,127,129,,,124,125,,,,,144,145,131,132',
',,,,,,,,,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119,443',
'434,146,,444,,,,,,,,,142,143,,139,121,122,123,130,127,129,,,124,125',
',,,,144,145,131,132,,,,,,,,,,,,,136,135,,120,141,138,137,133,134,128',
'126,118,140,119,686,434,146,,687,,,,,,,,,142,143,,139,121,122,123,130',
'127,129,,,124,125,,,,,144,145,131,132,,,,,,268,,,,,,,136,135,,120,141',
'138,137,133,134,128,126,118,140,119,436,440,146,,438,,,,,,,,,142,143',
',139,121,122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,',
',,,136,135,,120,141,138,137,133,134,128,126,118,140,119,430,434,146',
',431,,,,,,,,,142,143,,139,121,122,123,130,127,129,,,124,125,,,,,144',
'145,131,132,,,,,,268,,,,,,,136,135,,120,141,138,137,133,134,128,126',
'118,140,119,741,440,146,,892,,,,,,,,,142,143,,139,121,122,123,130,127',
'129,,,124,125,,,,,144,145,131,132,,,,,,,,,,,,,136,135,,120,141,138,137',
'133,134,128,126,118,140,119,443,434,146,,444,,,,,,,,,142,143,,139,121',
'122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,268,,,,,,,136',
'135,,120,141,138,137,133,134,128,126,118,140,119,644,440,146,,645,,',
',,,,,,142,143,,139,121,122,123,130,127,129,,,124,125,,,,,144,145,131',
'132,,,,,,,,,,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119',
'741,440,146,,739,,,,,,,,,142,143,,139,121,122,123,130,127,129,,,124',
'125,,,,,144,145,131,132,,,,,,,,,,,,,136,135,,120,141,138,137,133,134',
'128,126,118,140,119,642,434,146,,643,,,,,,,,,142,143,,139,121,122,123',
'130,127,129,,,124,125,,,,,144,145,131,132,,,,,,268,,,,,,,136,135,,120',
'141,138,137,133,134,128,126,118,140,119,961,440,146,,962,,,,,,,,,142',
'143,,139,121,122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,',
',,,,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119,443,434',
'146,,444,,,,,,,,,142,143,,139,121,122,123,130,127,129,,,124,125,,,,',
'144,145,131,132,,,,,,,,,,,,,136,135,,120,141,138,137,133,134,128,126',
'118,140,119,733,434,146,,734,,,,,,,,,142,143,,139,121,122,123,130,127',
'129,,,124,125,,,,,144,145,131,132,,,,,,268,,,,,,,136,135,,120,141,138',
'137,133,134,128,126,118,140,119,443,434,146,,444,,,,,,,,,142,143,,139',
'121,122,123,130,127,129,,,124,125,,,,,144,145,131,132,,,,,,,,,,,,,136',
'135,,120,141,138,137,133,134,128,126,118,140,119,443,434,146,,444,,',
',,,,,,142,143,,139,121,122,123,130,127,129,,,124,125,,,,,144,145,131',
'132,,,,,,,,,,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119',
'735,440,146,,736,,,,,,,,,142,143,,139,121,122,123,130,127,129,,,124',
'125,,,,,144,145,131,132,,,,,,,,,,,,,136,135,,120,141,138,137,133,134',
'128,126,118,140,119,,,146' ]
        racc_action_table = arr = ::Array.new(25047, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'0,0,0,0,0,948,736,357,0,0,55,746,746,0,392,0,0,0,0,0,0,0,615,327,14',
'457,457,0,0,0,0,0,0,0,698,698,0,387,26,293,387,508,0,0,0,0,0,0,924,0',
'0,0,0,0,305,0,0,0,691,0,0,354,0,0,839,14,366,934,692,934,681,310,310',
'736,14,508,733,392,896,959,321,457,693,615,615,0,889,838,0,383,698,0',
'615,251,0,960,0,55,387,387,0,746,734,348,26,293,746,681,0,961,347,736',
'357,0,0,0,0,0,0,948,962,948,0,0,948,26,293,421,421,421,0,421,927,0,485',
'421,421,553,0,0,421,71,421,421,421,421,421,421,421,71,383,383,383,696',
'421,421,421,421,421,421,421,310,924,421,924,697,354,924,485,839,421',
'587,366,421,421,967,421,421,421,421,421,733,421,421,421,321,421,421',
'961,421,421,366,896,959,896,959,366,896,959,962,889,838,889,838,838',
'889,838,734,312,960,687,960,421,507,960,421,699,348,421,348,290,421',
'348,961,347,961,347,421,961,347,525,577,604,604,962,421,962,855,855',
'962,421,421,421,421,421,421,927,507,927,421,421,927,689,841,432,432',
'432,421,432,690,421,497,432,432,564,421,421,432,568,432,432,432,432',
'432,432,432,587,704,687,211,642,432,432,432,432,432,432,432,290,967',
'432,967,83,83,967,497,792,432,525,430,432,432,705,432,432,432,432,432',
'432,432,432,432,708,432,432,687,432,432,578,689,689,735,604,710,687',
'290,690,690,791,211,642,577,685,577,290,525,577,287,807,432,430,209',
'432,432,525,432,792,712,432,430,432,686,432,841,432,841,379,689,841',
'352,744,352,432,379,690,744,689,432,432,432,432,432,432,690,713,351',
'432,432,791,629,351,369,369,369,432,369,714,432,735,369,369,209,432',
'432,369,453,369,369,369,369,369,369,369,431,852,287,807,643,369,369',
'369,369,369,369,369,852,385,369,578,686,578,389,480,578,369,394,735',
'369,369,629,369,369,369,369,369,717,369,369,369,300,369,369,287,807',
'431,453,346,346,852,852,3,287,807,431,480,3,686,643,480,480,480,480',
'860,25,25,686,369,376,540,369,683,25,369,860,376,369,722,385,385,385',
'300,35,389,389,389,852,394,394,394,300,296,296,355,355,369,369,369,369',
'369,369,355,728,703,369,369,703,860,860,440,440,440,369,440,278,369',
'730,440,440,278,369,369,440,35,440,440,440,440,440,440,440,317,35,219',
'317,732,440,440,440,440,440,440,440,597,860,440,42,42,597,355,648,355',
'440,539,42,440,440,538,440,440,440,440,440,440,440,440,440,314,440,440',
'314,440,440,315,648,648,648,648,648,648,648,648,648,648,648,208,208',
'648,648,377,750,648,648,208,440,750,377,440,440,316,440,737,42,440,42',
'440,648,440,648,440,648,648,648,648,648,648,648,440,648,213,589,589',
'440,440,440,440,440,440,589,252,628,440,440,741,648,742,441,441,441',
'440,441,208,440,208,441,441,212,440,440,441,255,441,441,441,441,441',
'441,441,279,279,279,279,279,441,441,441,441,441,441,441,371,628,441',
'288,288,318,589,371,589,441,628,288,441,441,529,441,441,441,441,441',
'441,441,441,441,313,441,441,313,441,441,210,484,484,484,484,484,484',
'484,484,484,484,484,840,840,484,484,375,526,484,484,840,441,573,375',
'441,441,753,441,519,288,441,288,441,484,441,484,441,484,484,484,484',
'484,484,484,441,484,757,711,711,441,441,441,441,441,441,711,720,720',
'441,441,758,484,484,442,442,442,441,442,840,441,840,442,442,760,441',
'441,442,761,442,442,442,442,442,442,442,5,5,5,5,5,442,442,442,442,442',
'442,442,372,762,442,364,364,764,711,372,711,442,326,364,442,442,767',
'442,442,442,442,442,442,442,442,442,676,442,442,517,442,442,514,773',
'773,773,773,773,773,773,773,773,773,773,925,925,773,773,370,774,773',
'773,925,442,513,370,442,442,688,442,509,364,442,364,442,773,442,773',
'442,773,773,773,773,773,773,773,442,773,329,739,739,442,442,442,442',
'442,442,739,37,37,442,442,739,773,503,451,451,451,442,451,925,442,925',
'451,451,502,442,442,451,499,451,451,451,451,451,451,451,193,361,15,15',
'330,451,451,451,451,451,451,451,373,673,451,13,13,342,739,373,739,451',
'345,13,451,451,302,451,451,451,451,451,451,451,451,451,795,451,451,796',
'451,451,799,793,793,793,793,793,793,793,793,793,793,793,361,361,793',
'793,374,801,793,793,361,451,97,374,451,361,804,451,805,13,451,13,451',
'793,806,793,451,793,793,793,793,793,793,793,451,793,361,303,303,451',
'451,451,451,451,451,303,949,949,451,451,579,793,811,945,945,945,451',
'945,361,451,361,945,945,580,451,451,945,814,945,945,945,945,945,945',
'945,680,680,680,680,680,945,945,945,945,945,945,945,561,561,945,815',
'669,466,303,419,303,945,461,267,945,945,830,945,945,945,945,945,945',
'945,945,945,465,945,945,833,945,945,78,419,419,419,419,419,419,419,419',
'419,419,419,461,77,419,419,461,461,419,419,110,945,657,464,945,110,110',
'945,462,463,945,353,945,419,843,419,945,419,419,419,419,419,419,419',
'945,419,846,847,848,945,945,945,945,945,945,356,655,358,945,945,462',
'419,362,419,462,462,945,939,437,945,301,870,939,871,945,945,943,943',
'943,943,943,280,429,939,943,943,428,424,422,943,882,943,943,943,943',
'943,943,943,824,41,647,36,555,943,943,943,943,943,943,943,892,893,943',
'646,939,939,939,939,943,943,898,943,943,943,899,943,943,943,943,943',
'34,943,943,943,416,943,943,282,943,943,907,471,909,912,913,824,824,824',
'824,555,555,555,555,939,914,858,915,283,471,471,858,943,20,295,943,640',
'410,943,926,391,943,858,943,471,388,471,943,471,471,471,471,284,12,471',
'943,471,936,637,11,943,943,943,943,943,943,944,10,292,943,943,632,9',
'858,858,858,858,943,768,768,943,619,768,768,768,943,943,935,935,935',
'935,935,953,955,956,935,935,958,6,289,935,291,935,935,935,935,935,935',
'935,1,626,,858,,935,935,935,935,935,935,935,,569,935,569,569,569,,569',
'935,935,,935,935,935,,935,935,935,935,935,,935,935,935,,935,935,,935',
'935,,672,672,672,672,672,672,672,672,672,672,672,,,672,672,,,672,672',
',935,,,935,,,935,,,935,,935,672,,672,935,672,672,672,672,672,672,672',
'935,672,,,,935,935,935,935,935,935,,,,935,935,,672,,672,,,935,,,935',
',,,,935,935,930,930,930,930,930,,,,930,930,,,,930,,930,930,930,930,930',
'930,930,,,,,,930,930,930,930,930,930,930,,829,930,829,829,829,,829,930',
'930,,930,930,930,,930,930,930,930,930,,930,930,930,,930,930,,930,930',
',873,873,873,873,873,873,873,873,873,873,873,,,873,873,,,873,873,,930',
',,930,,,930,,,930,,930,873,,873,930,873,873,873,873,873,873,873,930',
'873,,,,930,930,930,930,930,930,,,,930,930,,873,,452,452,452,930,452',
',930,,452,452,,930,930,452,,452,452,452,452,452,452,452,,,,,,452,452',
'452,452,452,452,452,,,452,,,,,,,452,,,452,452,,452,452,452,452,452,452',
'452,452,452,,452,452,,452,452,,536,536,536,536,536,536,536,536,536,536',
'536,,,536,536,,,536,536,,452,,,452,,,452,,,452,,452,536,,536,452,536',
'536,536,536,536,536,536,452,536,,,,452,452,452,452,452,452,,,,452,452',
',536,,454,454,454,452,454,,452,,454,454,,452,452,454,,454,454,454,454',
'454,454,454,,,,,,454,454,454,454,454,454,454,,,454,,,,,,,454,,,454,454',
',454,454,454,454,454,,454,454,454,,454,454,,454,454,,427,427,427,427',
'427,427,427,427,427,427,427,,,427,427,,,427,427,,454,,,454,,,454,,,454',
',,427,,427,454,427,427,427,427,427,427,427,454,427,,,,454,454,454,454',
'454,454,,,,454,454,,427,,17,17,17,454,17,,454,,17,17,,454,454,17,,17',
'17,17,17,17,17,17,,,,,,17,17,17,17,17,17,17,,,17,,,,,,,17,,,17,17,,17',
'17,17,17,17,,17,17,17,,17,17,,17,17,,19,19,19,19,19,19,19,19,19,19,19',
',,19,19,,,19,19,,17,,,17,17,,17,,,17,,,19,,19,17,19,19,19,19,19,19,19',
'17,19,,,,17,17,17,17,17,17,,,,17,17,,19,,18,18,18,17,18,,17,,18,18,',
'17,17,18,,18,18,18,18,18,18,18,,,,,,18,18,18,18,18,18,18,,,18,,,,,,',
'18,,,18,18,,18,18,18,18,18,,18,18,18,,18,18,,18,18,,786,786,786,786',
'786,786,786,786,786,786,786,,,786,786,,,786,786,,18,,,18,,,18,,,18,',
',786,,786,18,786,786,786,786,786,786,786,18,786,,,,18,18,18,18,18,18',
',,,18,18,,786,,,,,18,,,18,,,,,18,18,923,923,923,923,923,,,,923,923,',
',,923,,923,923,923,923,923,923,923,,,,,,923,923,923,923,923,923,923',
',,923,,,,,,923,923,,923,923,923,,923,923,923,923,923,,923,923,923,,923',
'923,,923,923,,249,249,249,249,249,249,249,249,249,249,249,,,249,249',
',,249,249,,923,,,923,,,923,,,923,,923,249,,249,923,249,249,249,249,249',
'249,249,923,249,,,,923,923,923,923,923,923,,,,923,923,,249,,921,921',
'921,923,921,,923,,921,921,,923,923,921,,921,921,921,921,921,921,921',
',,,,,921,921,921,921,921,921,921,,,921,,,,,,,921,,,921,921,,921,921',
'921,921,921,,921,921,921,,921,921,,921,921,,781,781,781,781,781,781',
'781,781,781,781,781,,,781,781,,,781,781,,921,,,921,,,921,,,921,,921',
'781,921,781,921,781,781,781,781,781,781,781,921,781,,,,921,921,921,921',
'921,921,,,,921,921,,781,,22,22,22,921,22,,921,,22,22,,921,921,22,,22',
'22,22,22,22,22,22,,,,,,22,22,22,22,22,22,22,,,22,,,,,,,22,,,22,22,,22',
'22,22,22,22,22,22,22,22,,22,22,,22,22,,779,779,779,779,779,779,779,779',
'779,779,779,,,779,779,,,779,779,,22,,,22,,,22,,,22,,22,779,22,779,22',
'779,779,779,779,779,779,779,22,779,,,,22,22,22,22,22,22,,,,22,22,,779',
',23,23,23,22,23,,22,,23,23,,22,22,23,,23,23,23,23,23,23,23,,,,,,23,23',
'23,23,23,23,23,,,23,,,,,,,23,,,23,23,,23,23,23,23,23,23,23,23,23,,23',
'23,,23,23,,875,875,875,875,875,875,875,875,875,875,875,,,875,875,,,875',
'875,,23,,,23,,,23,,,23,,23,875,23,875,23,875,875,875,875,875,875,875',
'23,875,,,,23,23,23,23,23,23,,,,23,23,,875,,24,24,24,23,24,,23,,24,24',
',23,23,24,,24,24,24,24,24,24,24,,,,,,24,24,24,24,24,24,24,,,24,,,,,',
',24,,,24,24,,24,24,24,24,24,24,24,24,24,,24,24,,24,24,,446,446,446,446',
'446,446,446,446,446,446,446,,,446,446,,,446,446,,24,,,24,,,24,,,24,',
'24,446,24,446,24,446,446,446,446,446,446,446,24,446,,,,24,24,24,24,24',
'24,,,,24,24,,446,,,,,24,,,24,,,,,24,24,904,904,904,904,904,,,,904,904',
',,,904,,904,904,904,904,904,904,904,,,,,,904,904,904,904,904,904,904',
',,904,,,,,,904,904,,904,904,904,,904,904,904,904,904,,904,904,904,,904',
'904,,904,904,,695,695,695,695,695,695,695,695,695,695,695,,,695,695',
',,695,695,,904,,,904,,,904,,,904,,904,695,,695,904,695,695,695,695,695',
'695,695,904,695,,,,904,904,904,904,904,904,,,,904,904,,695,,,,,904,',
',904,,,,,904,904,901,901,901,901,901,,,,901,901,,,,901,,901,901,901',
'901,901,901,901,,,,,,901,901,901,901,901,901,901,,,901,,,,,,901,901',
',901,901,901,,901,901,901,901,901,,901,901,901,,901,901,,901,901,,784',
'784,784,784,784,784,784,784,784,784,784,,,784,784,,,784,784,,901,,,901',
',,901,,,901,,901,784,,784,901,784,784,784,784,784,784,784,901,784,,',
',901,901,901,901,901,901,,,,901,901,,784,,27,27,27,901,27,,901,,27,27',
',901,901,27,,27,27,27,27,27,27,27,,,,,,27,27,27,27,27,27,27,,566,27',
'566,566,566,,566,,27,,,27,27,,27,27,27,27,27,27,27,27,27,,27,27,,27',
'27,338,,338,338,338,,338,,,718,566,718,718,718,,718,,,566,,,27,,,27',
'27,,27,,,27,,27,,27,,27,,,338,,,,,27,,,338,718,27,27,27,27,27,27,,718',
',27,27,,,,455,455,455,27,455,,27,,455,455,,27,27,455,,455,455,455,455',
'455,455,455,,,,,,455,455,455,455,455,455,455,,,455,,,,481,,,455,,,455',
'455,,455,455,455,455,455,,455,455,455,,455,455,,455,455,,476,476,476',
'476,476,476,476,481,,476,476,481,481,481,481,,,476,476,,455,,,455,,',
'455,,,455,,,476,,476,455,476,476,476,476,476,476,476,455,476,,,,455',
'455,455,455,455,455,,,,455,455,,,,,,,455,,,455,,,,,455,455,30,30,30',
'30,30,,,,30,30,,,,30,,30,30,30,30,30,30,30,,,,,,30,30,30,30,30,30,30',
',,30,,,,,,30,30,,30,30,30,,30,30,30,30,30,,30,30,30,,30,30,,30,30,,460',
'460,460,460,460,460,460,460,460,460,460,,,460,460,,,460,460,,30,,,30',
',,30,,,30,,30,460,,460,30,460,460,460,460,460,460,460,30,460,,,,30,30',
'30,30,30,30,,,,30,30,,,,31,31,31,30,31,,30,,31,31,,30,30,31,,31,31,31',
'31,31,31,31,,,,,,31,31,31,31,31,31,31,,,31,,,,,,,31,,,31,31,,31,31,31',
'31,31,,31,31,31,,31,31,652,,652,652,652,469,652,,,,,,,,,,,,,,,,469,469',
'31,,,31,,,31,,,31,,31,,469,,652,,469,469,469,469,,,652,652,652,652,',
'31,31,31,31,31,31,652,,,31,31,,,,32,32,32,31,32,,31,,32,32,,31,31,32',
',32,32,32,32,32,32,32,,,,,,32,32,32,32,32,32,32,,,32,,,,,,,32,,,32,32',
',32,32,32,32,32,,32,32,32,,32,32,856,,856,856,856,856,856,,,,,,,,,,856',
',,,,,,,32,,,32,,,32,,,32,,,,,,856,,,,,,,,856,856,856,856,,32,32,32,32',
'32,32,,,,32,32,,,,32,,,32,,,32,,,,,32,32,900,900,900,,900,,,856,900',
'900,,,,900,,900,900,900,900,900,900,900,,,,,,900,900,900,900,900,900',
'900,,,900,,,,,,,900,,,900,900,,900,900,900,900,900,,900,900,900,,900',
'900,,900,900,,459,459,459,459,459,459,459,459,459,459,459,,,459,459',
',,459,459,,900,,,900,,,900,,,900,,900,459,,459,900,459,459,459,459,459',
'459,459,900,459,,,,900,900,900,900,900,900,,,,900,900,,,,456,456,456',
'900,456,,900,,456,456,,900,900,456,,456,456,456,456,456,456,456,,,,',
',456,456,456,456,456,456,456,,,456,,,,,,,456,,,456,456,,456,456,456',
'456,456,,456,456,456,,456,456,,456,456,,470,470,470,470,470,470,470',
',,470,470,,,,,,,470,470,,456,,,456,,,456,,,456,,,470,,470,456,470,470',
'470,470,470,470,470,456,470,,,,456,456,456,456,456,456,,,,456,456,,',
',890,890,890,456,890,,456,,890,890,,456,456,890,,890,890,890,890,890',
'890,890,,,,,,890,890,890,890,890,890,890,,,890,,,,,,,890,,,890,890,',
'890,890,890,890,890,,890,890,890,,890,890,56,,56,56,56,,56,,,,,,,,,',
',,,,,,,,890,,,890,,,890,,,890,,,,,,56,56,,,,,,,56,56,56,56,,890,890',
'890,890,890,890,,,,890,890,,,,487,487,487,890,487,,890,,487,487,,890',
'890,487,,487,487,487,487,487,487,487,,,,,,487,487,487,487,487,487,487',
',,487,,,,,,,487,,,487,487,,487,487,487,487,487,487,487,487,487,,487',
'487,,487,487,,483,483,483,483,483,483,483,483,,483,483,,,,,,,483,483',
',487,,,487,,,487,,,487,,487,483,487,483,487,483,483,483,483,483,483',
'483,487,483,,,,487,487,487,487,487,487,,,,487,487,,,,38,38,38,487,38',
',487,,38,38,,487,487,38,,38,38,38,38,38,38,38,,,,,,38,38,38,38,38,38',
'38,,,38,,,,,,,38,,,38,38,,38,38,38,38,38,,38,38,38,,38,38,,38,38,,482',
'482,482,482,482,482,482,,,482,482,,,,,,,482,482,,38,,,38,,,38,,,38,',
',482,,482,38,482,482,482,482,482,482,482,38,482,,,,38,38,38,38,38,38',
',,,38,38,,,,39,39,39,38,39,,38,,39,39,,38,38,39,,39,39,39,39,39,39,39',
',,,,,39,39,39,39,39,39,39,,,39,,,,,,,39,,,39,39,,39,39,39,39,39,,39',
'39,39,,39,39,,39,39,,472,,,,,,,,,,,,,,,,,472,472,,39,,,39,,,39,,,39',
',,472,,472,39,472,472,472,472,,,472,39,472,,,,39,39,39,39,39,39,,,,39',
'39,,,,40,40,40,39,40,,39,,40,40,,39,39,40,,40,40,40,40,40,40,40,,,,',
',40,40,40,40,40,40,40,,,40,,,,,,,40,,,40,40,,40,40,40,40,40,,40,40,40',
',40,40,,40,40,,479,479,479,479,479,479,479,,,479,479,,,,,,,479,479,',
'40,,,40,,,40,,,40,,,479,,479,40,479,479,479,479,479,479,479,40,479,',
',,40,40,40,40,40,40,,,,40,40,,,,,,,40,,,40,,,,,40,40,886,886,886,886',
'886,,,,886,886,,,,886,,886,886,886,886,886,886,886,,,,,,886,886,886',
'886,886,886,886,,,886,,,,,,886,886,,886,886,886,,886,886,886,886,886',
',886,886,886,,886,886,,886,886,,478,478,478,478,478,478,478,,,478,478',
',,,,,,478,478,,886,,,886,,,886,,,886,,886,478,,478,886,478,478,478,478',
'478,478,478,886,478,,,,886,886,886,886,886,886,,,,886,886,,,,881,881',
'881,886,881,,886,,881,881,,886,886,881,,881,881,881,881,881,881,881',
',,,,,881,881,881,881,881,881,881,,,881,,,,,,,881,,,881,881,,881,881',
'881,881,881,881,881,881,881,,881,881,,881,881,,477,477,477,477,477,477',
'477,,,477,477,,,,,,,477,477,,881,,,881,,,881,,,881,,,477,881,477,881',
'477,477,477,477,477,477,477,881,477,,,,881,881,881,881,881,881,,,,881',
'881,,,,489,489,489,881,489,,881,,489,489,,881,881,489,,489,489,489,489',
'489,489,489,,,,,,489,489,489,489,489,489,489,,,489,,,,,,,489,,,489,489',
',489,489,489,489,489,489,489,489,489,,489,489,,489,489,,473,,,,,,,,',
',,,,,,,,473,473,,489,,,489,,,489,,,489,,,473,489,473,489,473,473,473',
'473,,,473,489,473,,,,489,489,489,489,489,489,,,,489,489,,,,52,52,52',
'489,52,,489,,52,52,,489,489,52,,52,52,52,52,52,52,52,,,,,,52,52,52,52',
'52,52,52,,,52,,,,,,,52,,,52,52,,52,52,52,52,52,,52,52,52,,52,52,,52',
'52,,475,475,475,475,475,475,475,,,475,475,,,,,,,475,475,,52,,,52,,,52',
',,52,,,475,,475,52,475,475,475,475,475,475,475,52,475,,,,52,52,52,52',
'52,52,,,,52,52,,,,53,53,53,52,53,,52,,53,53,,52,52,53,,53,53,53,53,53',
'53,53,,,,,,53,53,53,53,53,53,53,,,53,,,,,,,53,,,53,53,,53,53,53,53,53',
'53,53,53,53,,53,53,,53,53,,474,,,,,,,,,,,,,,,,,474,474,,53,,,53,,,53',
',,53,,53,474,,474,53,474,474,474,474,,,474,53,474,,,,53,53,53,53,53',
'53,,,,53,53,,,,54,54,54,53,54,,53,,54,54,,53,53,54,,54,54,54,54,54,54',
'54,,,,,,54,54,54,54,54,54,54,,,54,,,,,,,54,,,54,54,,54,54,54,54,54,54',
'54,54,54,,54,54,,54,54,,468,,,,,,,,,,,,,,,,,468,468,,54,,,54,,,54,,',
'54,,,468,,468,54,468,468,468,468,,,,54,,,,,54,54,54,54,54,54,,,,54,54',
',,,877,877,877,54,877,,54,,877,877,,54,54,877,,877,877,877,877,877,877',
'877,,,,,,877,877,877,877,877,877,877,,,877,,,,,,,877,,,877,877,,877',
'877,877,877,877,,877,877,877,,877,877,,877,877,,467,,,,,,,,,,,,,,,,',
'467,467,,877,,,877,,,877,,,877,,,467,,467,877,467,467,467,467,,,,877',
',,,,877,877,877,877,877,877,,,,877,877,,,,876,876,876,877,876,,877,',
'876,876,,877,877,876,,876,876,876,876,876,876,876,,,,,,876,876,876,876',
'876,876,876,,,876,,,,,,,876,,,876,876,,876,876,876,876,876,,876,876',
'876,,876,876,,876,876,,,,,,,,,,,,,,,,,,,,,,876,,,876,,,876,,,876,,,',
',,876,,,,,,,,876,,,,,876,876,876,876,876,876,,,,876,876,,,,57,57,57',
'876,57,,876,,57,57,,876,876,57,,57,57,57,57,57,57,57,,,,,,57,57,57,57',
'57,57,57,,,57,,,,,,,57,,,57,57,,57,57,57,57,57,,57,57,57,,57,57,,57',
'57,,,,,,,,,,,,,,,,,,,,,,57,,,57,,,57,,,57,,,,,,57,,,,,,,,57,,,,,57,57',
'57,57,57,57,,,,57,57,,,,58,58,58,57,58,,57,,58,58,,57,57,58,,58,58,58',
'58,58,58,58,,,,,,58,58,58,58,58,58,58,,,58,,,,,,,58,,,58,58,,58,58,58',
'58,58,,58,58,58,,58,58,,58,58,,,,,,,,,,,,,,,,,,,,,,58,,,58,,,58,,,58',
',,,,,58,,,,,,,,58,,,,,58,58,58,58,58,58,,,,58,58,,,,61,61,61,58,61,',
'58,,61,61,,58,58,61,,61,61,61,61,61,61,61,,,,,,61,61,61,61,61,61,61',
',,61,,,,,,,61,,,61,61,,61,61,61,61,61,,61,61,61,,61,61,,61,61,,,,,,',
',,,,,,,,,,,,,,,61,,,61,,,61,,,61,,,,,,61,,,,,,,,61,,,,,61,61,61,61,61',
'61,,,,61,61,61,,,,,61,61,,,61,,,,,61,61,62,62,62,,62,,,,62,62,,,,62',
',62,62,62,62,62,62,62,,,,,,62,62,62,62,62,62,62,,,62,,,,,,,62,,,62,62',
',62,62,62,62,62,,62,62,62,,62,62,322,,322,322,322,,322,,,,,,,,,,,,,',
',,,,62,,,62,,,62,,,62,,62,,,,322,,322,,,,,,322,322,322,322,,62,62,62',
'62,62,62,,,,62,62,,,,63,63,63,62,63,,62,,63,63,,62,62,63,,63,63,63,63',
'63,63,63,,,,,,63,63,63,63,63,63,63,,,63,,,,,,,63,,,63,63,,63,63,63,63',
'63,,63,63,63,,63,63,559,,559,559,559,,559,,,,,,,,,,,,,,,63,,,63,,,63',
',,63,,,63,,,,,,559,,,,,,,,559,559,559,559,,63,63,63,63,63,63,,,,63,63',
',,,862,862,862,63,862,,63,,862,862,,63,63,862,,862,862,862,862,862,862',
'862,,,,,,862,862,862,862,862,862,862,,,862,,,,,,,862,,,862,862,,862',
'862,862,862,862,,862,862,862,,862,862,,862,862,,,,,,,,,,,,,,,,,,,,,',
'862,,,862,,,862,,,862,,,,,,862,,,,,,,,862,,,,,862,862,862,862,862,862',
',,,862,862,,,,350,350,350,862,350,,862,,350,350,,862,862,350,,350,350',
'350,350,350,350,350,,,,,,350,350,350,350,350,350,350,,,350,,,,,,,350',
',,350,350,,350,350,350,350,350,,350,350,350,,350,350,,350,350,,,,,,',
',,,,,,,,,,,,,,,350,,,350,,,350,,,350,,,,,,350,,,,,,,,350,,,,,350,350',
'350,350,350,350,,,,350,350,,,,,,,350,,,350,,,,,350,350,835,835,835,835',
'835,,,,835,835,,,,835,,835,835,835,835,835,835,835,,,,,,835,835,835',
'835,835,835,835,,,835,,,,,,835,835,,835,835,835,,835,835,835,835,835',
',835,835,835,,835,835,,835,835,,,,,,,,,,,,,,,,,,,,,,835,,,835,,,835',
',,835,,835,,,,835,,,,,,,,835,,,,,835,835,835,835,835,835,,,,835,835',
',,,,,,835,,,835,,,,,835,835,834,834,834,834,834,,,,834,834,,,,834,,834',
'834,834,834,834,834,834,,,,,,834,834,834,834,834,834,834,,,834,,,,,',
'834,834,,834,834,834,,834,834,834,834,834,,834,834,834,,834,834,,834',
'834,,,,,,,,,,,,,,,,,,,,,,834,,,834,,,834,,,834,,834,,,,834,,,,,,,,834',
',,,,834,834,834,834,834,834,,,,834,834,,,,832,832,832,834,832,,834,',
'832,832,,834,834,832,,832,832,832,832,832,832,832,,,,,,832,832,832,832',
'832,832,832,,,832,,,,,,,832,,,832,832,,832,832,832,832,832,,832,832',
'832,,832,832,,832,832,,,,,,,,,,,,,,,,,,,,,,832,,,832,,,832,,,832,,,',
',,832,,,,,,,,832,,,,,832,832,832,832,832,832,,,,832,832,,,,,,,832,,',
'832,,,,,832,832,813,813,813,813,813,,,,813,813,,,,813,,813,813,813,813',
'813,813,813,,,,,,813,813,813,813,813,813,813,,,813,,,,,,813,813,,813',
'813,813,,813,813,813,813,813,,813,813,813,,813,813,,813,813,,,,,,,,',
',,,,,,,,,,,,,813,,,813,,,813,,,813,,813,,,,813,,,,,,,,813,,,,,813,813',
'813,813,813,813,,,,813,813,,,,84,84,84,813,84,,813,,84,84,,813,813,84',
',84,84,84,84,84,84,84,,84,,,,84,84,84,84,84,84,84,,,84,,,,,,,84,,,84',
'84,,84,84,84,84,84,84,84,84,84,,84,84,,84,84,,,,,,,,,,,,,,,,,,,,,,84',
',,84,84,,84,,,84,,84,,84,,84,,,,,,,,84,,84,,,84,84,84,84,84,84,,,,84',
'84,,,,87,87,87,84,87,,84,,87,87,,84,84,87,,87,87,87,87,87,87,87,,87',
',,,87,87,87,87,87,87,87,,,87,,,,,,,87,,,87,87,,87,87,87,87,87,87,87',
'87,87,,87,87,,87,87,,,,,,,,,,,,,,,,,,,,,,87,,,87,87,,87,,,87,,87,,87',
',87,,,,,,,,87,,87,,,87,87,87,87,87,87,,,,87,87,,,,802,802,802,87,802',
',87,,802,802,,87,87,802,,802,802,802,802,802,802,802,,,,,,802,802,802',
'802,802,802,802,,,802,,,,,,,802,,,802,802,,802,802,802,802,802,,802',
'802,802,,802,802,,802,802,,,,,,,,,,,,,,,,,,,,,,802,,,802,,,802,,,802',
',802,,,,802,,,,,,,,802,,,,,802,802,802,802,802,802,,,,802,802,,,,,,',
'802,,,802,,,,,802,802,99,99,99,99,99,,,,99,99,,,,99,,99,99,99,99,99',
'99,99,,,,,,99,99,99,99,99,99,99,,,99,,,,,,99,99,99,99,99,99,,99,99,99',
'99,99,,99,99,99,,99,99,,99,99,,,,,,,,,,,,,,,,,,,,,,99,,,99,,,99,,,99',
',99,,,,99,,,,,,,,99,,,,,99,99,99,99,99,99,,,,99,99,,,,,,99,99,,,99,',
',,,99,99,103,103,103,,103,,,,103,103,,,,103,,103,103,103,103,103,103',
'103,,,,,,103,103,103,103,103,103,103,,,103,,,,,,,103,,,103,103,,103',
'103,103,103,103,,103,103,103,,103,103,,103,103,,,,,,,,,,,,,,,,,,,,,',
'103,,,103,,,103,,,103,,,,,,103,,,,,,,,103,,,,,103,103,103,103,103,103',
',,,103,103,,,,104,104,104,103,104,,103,,104,104,,103,103,104,,104,104',
'104,104,104,104,104,,,,,,104,104,104,104,104,104,104,,,104,,,,,,,104',
',,104,104,,104,104,104,104,104,,104,104,104,,104,104,,104,104,,,,,,',
',,,,,,,,,,,,,,,104,,,104,,,104,,,104,,,,,,104,,,,,,,,104,,,,,104,104',
'104,104,104,104,,,,104,104,,,,105,105,105,104,105,,104,,105,105,,104',
'104,105,,105,105,105,105,105,105,105,,,,,,105,105,105,105,105,105,105',
',,105,,,,,,,105,,,105,105,,105,105,105,105,105,,105,105,105,,105,105',
',105,105,,,,,,,,,,,,,,,,,,,,,,105,,,105,,,105,,,105,,,,,,105,,,,,,,',
'105,,,,,105,105,105,105,105,105,,,,105,105,,,,106,106,106,105,106,,105',
',106,106,,105,105,106,,106,106,106,106,106,106,106,,,,,,106,106,106',
'106,106,106,106,,,106,,,,,,,106,,,106,106,,106,106,106,106,106,,106',
'106,106,,106,106,,106,106,,,,,,,,,,,,,,,,,,,,,,106,,,106,,,106,,,106',
',,,,,106,,,,,,,,106,,,,,106,106,106,106,106,106,,,,106,106,,,,,,,106',
',,106,,,,,106,106,107,107,107,107,107,,,,107,107,,,,107,,107,107,107',
'107,107,107,107,,,,,,107,107,107,107,107,107,107,,,107,,,,,,107,107',
',107,107,107,,107,107,107,107,107,,107,107,107,,107,107,,107,107,,,',
',,,,,,,,,,,,,,,,,,107,,,107,,,107,,,107,,107,,,,107,,,,,,,,107,,,,,107',
'107,107,107,107,107,,,,107,107,,,,,,,107,,,107,,,,,107,107,108,108,108',
'108,108,,,,108,108,,,,108,,108,108,108,108,108,108,108,,,,,,108,108',
'108,108,108,108,108,,,108,,,,,,108,108,108,108,108,108,,108,108,108',
'108,108,,108,108,108,,108,108,,108,108,,,,,,,,,,,,,,,,,,,,,,108,,,108',
',,108,,,108,,108,,,,108,,,,,,,,108,,,,,108,108,108,108,108,108,,,,108',
'108,,,,790,790,790,108,790,,108,,790,790,,108,108,790,,790,790,790,790',
'790,790,790,,,,,,790,790,790,790,790,790,790,,,790,,,,,,,790,,,790,790',
',790,790,790,790,790,,790,790,790,,790,790,,790,790,,,,,,,,,,,,,,,,',
',,,,,790,,,790,,,790,,,790,,,,,,790,,,,,,,,790,,,,,790,790,790,790,790',
'790,,,,790,790,,,,789,789,789,790,789,,790,,789,789,,790,790,789,,789',
'789,789,789,789,789,789,,,,,,789,789,789,789,789,789,789,,,789,,,,,',
',789,,,789,789,,789,789,789,789,789,,789,789,789,,789,789,,789,789,',
',,,,,,,,,,,,,,,,,,,,789,,,789,,,789,,,789,,,,,,789,,,,,,,,789,,,,,789',
'789,789,789,789,789,,,,789,789,,,,788,788,788,789,788,,789,,788,788',
',789,789,788,,788,788,788,788,788,788,788,,,,,,788,788,788,788,788,788',
'788,,,788,,,,,,,788,,,788,788,,788,788,788,788,788,,788,788,788,,788',
'788,,788,788,,,,,,,,,,,,,,,,,,,,,,788,,,788,,,788,,,788,,,,,,788,,,',
',,,,788,,,,,788,788,788,788,788,788,,,,788,788,,,,,,,788,,,788,,,,,788',
'788,195,195,195,195,195,,,,195,195,,,,195,,195,195,195,195,195,195,195',
',,,,,195,195,195,195,195,195,195,,,195,,,,,,195,195,,195,195,195,,195',
'195,195,195,195,,195,195,195,,195,195,,195,195,,,,,,,,,,,,,,,,,,,,,',
'195,,,195,,,195,,,195,,195,,,,195,,,,,,,,195,,,,,195,195,195,195,195',
'195,,,,195,195,,,,196,196,196,195,196,,195,,196,196,,195,195,196,,196',
'196,196,196,196,196,196,,,,,,196,196,196,196,196,196,196,,,196,,,,,',
',196,,,196,196,,196,196,196,196,196,,196,196,196,,196,196,,196,196,',
',,,,,,,,,,,,,,,,,,,,196,,,196,,,196,,,196,,196,,,,196,,,,,,,,196,,,',
',196,196,196,196,196,196,,,,196,196,,,,197,197,197,196,197,,196,,197',
'197,,196,196,197,,197,197,197,197,197,197,197,,,,,,197,197,197,197,197',
'197,197,,,197,,,,,,,197,,,197,197,,197,197,197,197,197,,197,197,197',
',197,197,,197,197,,,,,,,,,,,,,,,,,,,,,,197,,,197,,,197,,,197,,197,,',
',197,,,,,,,,197,,,,,197,197,197,197,197,197,,,,197,197,,,,198,198,198',
'197,198,,197,,198,198,,197,197,198,,198,198,198,198,198,198,198,,,,',
',198,198,198,198,198,198,198,,,198,,,,,,,198,,,198,198,,198,198,198',
'198,198,,198,198,198,,198,198,,198,198,,,,,,,,,,,,,,,,,,,,,,198,,,198',
',,198,,,198,,,,,,198,,,,,,,,198,,,,,198,198,198,198,198,198,,,,198,198',
',,,199,199,199,198,199,,198,,199,199,,198,198,199,,199,199,199,199,199',
'199,199,,,,,,199,199,199,199,199,199,199,,,199,,,,,,,199,,,199,199,',
'199,199,199,199,199,199,199,199,199,,199,199,,199,199,,,,,,,,,,,,,,',
',,,,,,,199,,,199,,,199,,,199,,199,,,,199,,,,,,,,199,,,,,199,199,199',
'199,199,199,,,,199,199,,,,200,200,200,199,200,,199,,200,200,,199,199',
'200,,200,200,200,200,200,200,200,,,,,,200,200,200,200,200,200,200,,',
'200,,,,,,,200,,,200,200,,200,200,200,200,200,200,200,200,200,,200,200',
',200,200,,,,,,,,,,,,,,,,,,,,,,200,,,200,,,200,,,200,,200,,,,200,,,,',
',,,200,,,,,200,200,200,200,200,200,,,,200,200,,,,777,777,777,200,777',
',200,,777,777,,200,200,777,,777,777,777,777,777,777,777,,,,,,777,777',
'777,777,777,777,777,,,777,,,,,,,777,,,777,777,,777,777,777,777,777,',
'777,777,777,,777,777,,777,777,,,,,,,,,,,,,,,,,,,,,,777,,,777,,,777,',
',777,,,,,,777,,,,,,,,777,,,,,777,777,777,777,777,777,,,,777,777,,,,776',
'776,776,777,776,,777,,776,776,,777,777,776,,776,776,776,776,776,776',
'776,,,,,,776,776,776,776,776,776,776,,,776,,,,,,,776,,,776,776,,776',
'776,776,776,776,,776,776,776,,776,776,,776,776,,,,,,,,,,,,,,,,,,,,,',
'776,,,776,,,776,,,776,,,,,,776,,,,,,,,776,,,,,776,776,776,776,776,776',
',,,776,776,,,,775,775,775,776,775,,776,,775,775,,776,776,775,,775,775',
'775,775,775,775,775,,,,,,775,775,775,775,775,775,775,,,775,,,,,,,775',
',,775,775,,775,775,775,775,775,,775,775,775,,775,775,,775,775,,,,,,',
',,,,,,,,,,,,,,,775,,,775,,,775,,,775,,,,,,775,,,,,,,,775,,,,,775,775',
'775,775,775,775,,,,775,775,,,,204,204,204,775,204,,775,,204,204,,775',
'775,204,,204,204,204,204,204,204,204,,,,,,204,204,204,204,204,204,204',
',,204,,,,,,,204,,,204,204,,204,204,204,204,204,,204,204,204,,204,204',
',204,204,,,,,,,,,,,,,,,,,,,,,,204,,,204,,,204,,,204,,,,,,204,,,,,,,',
'204,,,,,204,204,204,204,204,204,,,,204,204,,,,205,205,205,204,205,,204',
',205,205,,204,204,205,,205,205,205,205,205,205,205,,,,,,205,205,205',
'205,205,205,205,,,205,,,,,,,205,,,205,205,,205,205,205,205,205,,205',
'205,205,,205,205,,205,205,,,,,,,,,,,,,,,,,,,,,,205,,,205,,,205,,,205',
',,,,,205,,,,,,,,205,,,,,205,205,205,205,205,205,,,,205,205,,,,206,206',
'206,205,206,,205,,206,206,,205,205,206,,206,206,206,206,206,206,206',
',,,,,206,206,206,206,206,206,206,,,206,,,,,,,206,,,206,206,,206,206',
'206,206,206,,206,206,206,,206,206,,206,206,,,,,,,,,,,,,,,,,,,,,,206',
',,206,,,206,,,206,,,,,,206,,,,,,,,206,,,,,206,206,206,206,206,206,,',
',206,206,,,,,,,206,,,206,,,,,206,206,769,769,769,769,769,,,,769,769',
',,,769,,769,769,769,769,769,769,769,,,,,,769,769,769,769,769,769,769',
',,769,,,,,,769,769,,769,769,769,,769,769,769,769,769,,769,769,769,,769',
'769,,769,769,,,,,,,,,,,,,,,,,,,,,,769,,,769,,,769,,,769,,769,,,,769',
',,,,,,,769,,,,,769,769,769,769,769,769,,,,769,769,,,,755,755,755,769',
'755,,769,,755,755,,769,769,755,,755,755,755,755,755,755,755,,,,,,755',
'755,755,755,755,755,755,,,755,,,,,,,755,,,755,755,,755,755,755,755,755',
',755,755,755,,755,755,,755,755,,,,,,,,,,,,,,,,,,,,,,755,,,755,,,755',
',,755,,,,,,755,,,,,,,,755,,,,,755,755,755,755,755,755,,,,755,755,,,',
',,,755,,,755,,,,,755,755,748,748,748,748,748,,,,748,748,,,,748,,748',
'748,748,748,748,748,748,,,,,,748,748,748,748,748,748,748,,,748,,,,,',
'748,748,,748,748,748,,748,748,748,748,748,,748,748,748,,748,748,,748',
'748,,,,,,,,,,,,,,,,,,,,,,748,,,748,,,748,,,748,,748,,,,748,,,,,,,,748',
',,,,748,748,748,748,748,748,,,,748,748,,,,,,,748,,,748,,,,,748,748,747',
'747,747,747,747,,,,747,747,,,,747,,747,747,747,747,747,747,747,,,,,',
'747,747,747,747,747,747,747,,,747,,,,,,747,747,,747,747,747,,747,747',
'747,747,747,,747,747,747,,747,747,,747,747,,,,,,,,,,,,,,,,,,,,,,747',
',,747,,,747,,,747,,747,,,,747,,,,,,,,747,,,,,747,747,747,747,747,747',
',,,747,747,,,,,,,747,,,747,,,,,747,747,743,743,743,743,743,,,,743,743',
',,,743,,743,743,743,743,743,743,743,,,,,,743,743,743,743,743,743,743',
',,743,,,,,,743,743,,743,743,743,,743,743,743,743,743,,743,743,743,,743',
'743,,743,743,,,,,,,,,,,,,,,,,,,,,,743,,,743,,,743,,,743,,743,,,,743',
',,,,,,,743,,,,,743,743,743,743,743,743,,,,743,743,,,,738,738,738,743',
'738,,743,,738,738,,743,743,738,,738,738,738,738,738,738,738,,,,,,738',
'738,738,738,738,738,738,,,738,,,,,,,738,,,738,738,,738,738,738,738,738',
',738,738,738,,738,738,,738,738,,,,,,,,,,,,,,,,,,,,,,738,,,738,,,738',
',,738,,,,,,738,,,,,,,,738,,,,,738,738,738,738,738,738,,,,738,738,,,',
',,,738,,,738,,,,,738,738,214,214,214,214,214,,,,214,214,,,,214,,214',
'214,214,214,214,214,214,,,,,,214,214,214,214,214,214,214,,,214,,,,,',
'214,214,,214,214,214,,214,214,214,214,214,,214,214,214,,214,214,,214',
'214,,,,,,,,,,,,,,,,,,,,,,214,,,214,,,214,,,214,,214,,,,214,,,,,,,,214',
',,,,214,214,214,214,214,214,,,,214,214,,,,215,215,215,214,215,,214,',
'215,215,,214,214,215,,215,215,215,215,215,215,215,,,,,,215,215,215,215',
'215,215,215,,,215,,,,,,,215,,,215,215,,215,215,215,215,215,,215,215',
'215,,215,215,,215,215,,,,,,,,,,,,,,,,,,,,,,215,,,215,,215,215,,,215',
',,,,,215,,,,,,,,215,,,,,215,215,215,215,215,215,,,,215,215,,,,218,218',
'218,215,218,,215,,218,218,,215,215,218,,218,218,218,218,218,218,218',
',,,,,218,218,218,218,218,218,218,,,218,,,,,,,218,,,218,218,,218,218',
'218,218,218,,218,218,218,,218,218,,218,218,,,,,,,,,,,,,,,,,,,,,,218',
',,218,,,218,,,218,,,,,,218,,,,,,,,218,,,,,218,218,218,218,218,218,,',
',218,218,,,,731,731,731,218,731,,218,,731,731,,218,218,731,,731,731',
'731,731,731,731,731,,,,,,731,731,731,731,731,731,731,,,731,,,,,,,731',
',,731,731,,731,731,731,731,731,,731,731,731,,731,731,,731,731,,,,,,',
',,,,,,,,,,,,,,,731,,,731,,,731,,,731,,731,,,,731,,,,,,,,731,,,,,731',
'731,731,731,731,731,,,,731,731,,,,220,220,220,731,220,,731,,220,220',
',731,731,220,,220,220,220,220,220,220,220,,,,,,220,220,220,220,220,220',
'220,,,220,,,,,,,220,,,220,220,,220,220,220,220,220,,220,220,220,,220',
'220,,220,220,,,,,,,,,,,,,,,,,,,,,,220,,,220,,,220,,,220,,,,,,220,,,',
',,,,220,,,,,220,220,220,220,220,220,,,,220,220,,,,221,221,221,220,221',
',220,,221,221,,220,220,221,,221,221,221,221,221,221,221,,,,,,221,221',
'221,221,221,221,221,,,221,,,,,,,221,,,221,221,,221,221,221,221,221,',
'221,221,221,,221,221,,221,221,,,,,,,,,,,,,,,,,,,,,,221,,,221,,,221,',
',221,,,,,,221,,,,,,,,221,,,,,221,221,221,221,221,221,,,,221,221,,,,222',
'222,222,221,222,,221,,222,222,,221,221,222,,222,222,222,222,222,222',
'222,,,,,,222,222,222,222,222,222,222,,,222,,,,,,,222,,,222,222,,222',
'222,222,222,222,,222,222,222,,222,222,,222,222,,,,,,,,,,,,,,,,,,,,,',
'222,,,222,,,222,,,222,,,,,,222,,,,,,,,222,,,,,222,222,222,222,222,222',
',,,222,222,,,,223,223,223,222,223,,222,,223,223,,222,222,223,,223,223',
'223,223,223,223,223,,,,,,223,223,223,223,223,223,223,,,223,,,,,,,223',
',,223,223,,223,223,223,223,223,,223,223,223,,223,223,,223,223,,,,,,',
',,,,,,,,,,,,,,,223,,,223,,,223,,,223,,,,,,223,,,,,,,,223,,,,,223,223',
'223,223,223,223,,,,223,223,,,,224,224,224,223,224,,223,,224,224,,223',
'223,224,,224,224,224,224,224,224,224,,,,,,224,224,224,224,224,224,224',
',,224,,,,,,,224,,,224,224,,224,224,224,224,224,,224,224,224,,224,224',
',224,224,,,,,,,,,,,,,,,,,,,,,,224,,,224,,,224,,,224,,,,,,224,,,,,,,',
'224,,,,,224,224,224,224,224,224,,,,224,224,,,,225,225,225,224,225,,224',
',225,225,,224,224,225,,225,225,225,225,225,225,225,,,,,,225,225,225',
'225,225,225,225,,,225,,,,,,,225,,,225,225,,225,225,225,225,225,,225',
'225,225,,225,225,,225,225,,,,,,,,,,,,,,,,,,,,,,225,,,225,,,225,,,225',
',,,,,225,,,,,,,,225,,,,,225,225,225,225,225,225,,,,225,225,,,,226,226',
'226,225,226,,225,,226,226,,225,225,226,,226,226,226,226,226,226,226',
',,,,,226,226,226,226,226,226,226,,,226,,,,,,,226,,,226,226,,226,226',
'226,226,226,,226,226,226,,226,226,,226,226,,,,,,,,,,,,,,,,,,,,,,226',
',,226,,,226,,,226,,,,,,226,,,,,,,,226,,,,,226,226,226,226,226,226,,',
',226,226,,,,227,227,227,226,227,,226,,227,227,,226,226,227,,227,227',
'227,227,227,227,227,,,,,,227,227,227,227,227,227,227,,,227,,,,,,,227',
',,227,227,,227,227,227,227,227,,227,227,227,,227,227,,227,227,,,,,,',
',,,,,,,,,,,,,,,227,,,227,,,227,,,227,,,,,,227,,,,,,,,227,,,,,227,227',
'227,227,227,227,,,,227,227,,,,228,228,228,227,228,,227,,228,228,,227',
'227,228,,228,228,228,228,228,228,228,,,,,,228,228,228,228,228,228,228',
',,228,,,,,,,228,,,228,228,,228,228,228,228,228,,228,228,228,,228,228',
',228,228,,,,,,,,,,,,,,,,,,,,,,228,,,228,,,228,,,228,,,,,,228,,,,,,,',
'228,,,,,228,228,228,228,228,228,,,,228,228,,,,229,229,229,228,229,,228',
',229,229,,228,228,229,,229,229,229,229,229,229,229,,,,,,229,229,229',
'229,229,229,229,,,229,,,,,,,229,,,229,229,,229,229,229,229,229,,229',
'229,229,,229,229,,229,229,,,,,,,,,,,,,,,,,,,,,,229,,,229,,,229,,,229',
',,,,,229,,,,,,,,229,,,,,229,229,229,229,229,229,,,,229,229,,,,230,230',
'230,229,230,,229,,230,230,,229,229,230,,230,230,230,230,230,230,230',
',,,,,230,230,230,230,230,230,230,,,230,,,,,,,230,,,230,230,,230,230',
'230,230,230,,230,230,230,,230,230,,230,230,,,,,,,,,,,,,,,,,,,,,,230',
',,230,,,230,,,230,,,,,,230,,,,,,,,230,,,,,230,230,230,230,230,230,,',
',230,230,,,,231,231,231,230,231,,230,,231,231,,230,230,231,,231,231',
'231,231,231,231,231,,,,,,231,231,231,231,231,231,231,,,231,,,,,,,231',
',,231,231,,231,231,231,231,231,,231,231,231,,231,231,,231,231,,,,,,',
',,,,,,,,,,,,,,,231,,,231,,,231,,,231,,,,,,231,,,,,,,,231,,,,,231,231',
'231,231,231,231,,,,231,231,,,,232,232,232,231,232,,231,,232,232,,231',
'231,232,,232,232,232,232,232,232,232,,,,,,232,232,232,232,232,232,232',
',,232,,,,,,,232,,,232,232,,232,232,232,232,232,,232,232,232,,232,232',
',232,232,,,,,,,,,,,,,,,,,,,,,,232,,,232,,,232,,,232,,,,,,232,,,,,,,',
'232,,,,,232,232,232,232,232,232,,,,232,232,,,,233,233,233,232,233,,232',
',233,233,,232,232,233,,233,233,233,233,233,233,233,,,,,,233,233,233',
'233,233,233,233,,,233,,,,,,,233,,,233,233,,233,233,233,233,233,,233',
'233,233,,233,233,,233,233,,,,,,,,,,,,,,,,,,,,,,233,,,233,,,233,,,233',
',,,,,233,,,,,,,,233,,,,,233,233,233,233,233,233,,,,233,233,,,,234,234',
'234,233,234,,233,,234,234,,233,233,234,,234,234,234,234,234,234,234',
',,,,,234,234,234,234,234,234,234,,,234,,,,,,,234,,,234,234,,234,234',
'234,234,234,,234,234,234,,234,234,,234,234,,,,,,,,,,,,,,,,,,,,,,234',
',,234,,,234,,,234,,,,,,234,,,,,,,,234,,,,,234,234,234,234,234,234,,',
',234,234,,,,235,235,235,234,235,,234,,235,235,,234,234,235,,235,235',
'235,235,235,235,235,,,,,,235,235,235,235,235,235,235,,,235,,,,,,,235',
',,235,235,,235,235,235,235,235,,235,235,235,,235,235,,235,235,,,,,,',
',,,,,,,,,,,,,,,235,,,235,,,235,,,235,,,,,,235,,,,,,,,235,,,,,235,235',
'235,235,235,235,,,,235,235,,,,236,236,236,235,236,,235,,236,236,,235',
'235,236,,236,236,236,236,236,236,236,,,,,,236,236,236,236,236,236,236',
',,236,,,,,,,236,,,236,236,,236,236,236,236,236,,236,236,236,,236,236',
',236,236,,,,,,,,,,,,,,,,,,,,,,236,,,236,,,236,,,236,,,,,,236,,,,,,,',
'236,,,,,236,236,236,236,236,236,,,,236,236,,,,237,237,237,236,237,,236',
',237,237,,236,236,237,,237,237,237,237,237,237,237,,,,,,237,237,237',
'237,237,237,237,,,237,,,,,,,237,,,237,237,,237,237,237,237,237,,237',
'237,237,,237,237,,237,237,,,,,,,,,,,,,,,,,,,,,,237,,,237,,,237,,,237',
',,,,,237,,,,,,,,237,,,,,237,237,237,237,237,237,,,,237,237,,,,238,238',
'238,237,238,,237,,238,238,,237,237,238,,238,238,238,238,238,238,238',
',,,,,238,238,238,238,238,238,238,,,238,,,,,,,238,,,238,238,,238,238',
'238,238,238,,238,238,238,,238,238,,238,238,,,,,,,,,,,,,,,,,,,,,,238',
',,238,,,238,,,238,,,,,,238,,,,,,,,238,,,,,238,238,238,238,238,238,,',
',238,238,,,,239,239,239,238,239,,238,,239,239,,238,238,239,,239,239',
'239,239,239,239,239,,,,,,239,239,239,239,239,239,239,,,239,,,,,,,239',
',,239,239,,239,239,239,239,239,,239,239,239,,239,239,,239,239,,,,,,',
',,,,,,,,,,,,,,,239,,,239,,,239,,,239,,,,,,239,,,,,,,,239,,,,,239,239',
'239,239,239,239,,,,239,239,,,,240,240,240,239,240,,239,,240,240,,239',
'239,240,,240,240,240,240,240,240,240,,,,,,240,240,240,240,240,240,240',
',,240,,,,,,,240,,,240,240,,240,240,240,240,240,,240,240,240,,240,240',
',240,240,,,,,,,,,,,,,,,,,,,,,,240,,,240,,,240,,,240,,,,,,240,,,,,,,',
'240,,,,,240,240,240,240,240,240,,,,240,240,,,,241,241,241,240,241,,240',
',241,241,,240,240,241,,241,241,241,241,241,241,241,,,,,,241,241,241',
'241,241,241,241,,,241,,,,,,,241,,,241,241,,241,241,241,241,241,,241',
'241,241,,241,241,,241,241,,,,,,,,,,,,,,,,,,,,,,241,,,241,,,241,,,241',
',,,,,241,,,,,,,,241,,,,,241,241,241,241,241,241,,,,241,241,,,,242,242',
'242,241,242,,241,,242,242,,241,241,242,,242,242,242,242,242,242,242',
',,,,,242,242,242,242,242,242,242,,,242,,,,,,,242,,,242,242,,242,242',
'242,242,242,,242,242,242,,242,242,,242,242,,,,,,,,,,,,,,,,,,,,,,242',
',,242,,,242,,,242,,,,,,242,,,,,,,,242,,,,,242,242,242,242,242,242,,',
',242,242,,,,243,243,243,242,243,,242,,243,243,,242,242,243,,243,243',
'243,243,243,243,243,,,,,,243,243,243,243,243,243,243,,,243,,,,,,,243',
',,243,243,,243,243,243,243,243,,243,243,243,,243,243,,243,243,,,,,,',
',,,,,,,,,,,,,,,243,,,243,,,243,,,243,,,,,,243,,,,,,,,243,,,,,243,243',
'243,243,243,243,,,,243,243,,,,244,244,244,243,244,,243,,244,244,,243',
'243,244,,244,244,244,244,244,244,244,,,,,,244,244,244,244,244,244,244',
',,244,,,,,,,244,,,244,244,,244,244,244,244,244,,244,244,244,,244,244',
',244,244,,,,,,,,,,,,,,,,,,,,,,244,,,244,,,244,,,244,,,,,,244,,,,,,,',
'244,,,,,244,244,244,244,244,244,,,,244,244,,,,245,245,245,244,245,,244',
',245,245,,244,244,245,,245,245,245,245,245,245,245,,,,,,245,245,245',
'245,245,245,245,,,245,,,,,,,245,,,245,245,,245,245,245,245,245,,245',
'245,245,,245,245,,245,245,,,,,,,,,,,,,,,,,,,,,,245,,,245,,,245,,,245',
',,,,,245,,,,,,,,245,,,,,245,245,245,245,245,245,,,,245,245,,,,700,700',
'700,245,700,,245,,700,700,,245,245,700,,700,700,700,700,700,700,700',
',,,,,700,700,700,700,700,700,700,,,700,,,,,,,700,,,700,700,,700,700',
'700,700,700,,700,700,700,,700,700,,700,700,,,,,,,,,,,,,,,,,,,,,,700',
',,700,,,700,,,700,,700,,,,700,,,,,,,,700,,,,,700,700,700,700,700,700',
',,,700,700,,,,694,694,694,700,694,,700,,694,694,,700,700,694,,694,694',
'694,694,694,694,694,,,,,,694,694,694,694,694,694,694,,,694,,,,,,,694',
',,694,694,,694,694,694,694,694,,694,694,694,,694,694,,,,,,,,,,,,,,,',
',,,,,,,,,694,,,694,,,694,,,694,,,,,,,,,,,,,,,,,,,694,694,694,694,694',
'694,,,,694,694,,,,682,682,682,694,682,,694,,682,682,,694,694,682,,682',
'682,682,682,682,682,682,,,,,,682,682,682,682,682,682,682,,,682,,,,,',
',682,,,682,682,,682,682,682,682,682,,682,682,682,,682,682,,,,,,,,,,',
',,,,,,,,,,,,,,682,,,682,,,682,,,682,,,,,,,,,,,,,,,,,,,682,682,682,682',
'682,682,,,,682,682,,,,254,254,254,682,254,,682,,254,254,,682,682,254',
',254,254,254,254,254,254,254,,,,,,254,254,254,254,254,254,254,,,254',
',,,,,,254,,,254,254,,254,254,254,254,254,,254,254,254,,254,254,,254',
'254,,,,,,,,,,,,,,,,,,,,,,254,,,254,,,254,,,254,,,,,,254,,,,,,,,254,',
',,,254,254,254,254,254,254,,,,254,254,,,,,,,254,,,254,,,,,254,254,678',
'678,678,678,678,,,,678,678,,,,678,,678,678,678,678,678,678,678,,,,,',
'678,678,678,678,678,678,678,,,678,,,,,,678,678,,678,678,678,,678,678',
'678,678,678,,678,678,678,,678,678,,678,678,,,,,,,,,,,,,,,,,,,,,,678',
',,678,,,678,,,678,,678,,,,678,,,,,,,,678,,,,,678,678,678,678,678,678',
',,,678,678,,,,256,256,256,678,256,,678,,256,256,,678,678,256,,256,256',
'256,256,256,256,256,,,,,,256,256,256,256,256,256,256,,,256,,,,,,,256',
',,256,256,,256,256,256,256,256,,256,256,256,,256,256,,256,256,,,,,,',
',,,,,,,,,,,,,,,256,,,256,,,256,,,256,,,,,,256,,,,,,,,256,,,,,256,256',
'256,256,256,256,,,,256,256,,,,261,261,261,256,261,,256,,261,261,,256',
'256,261,,261,261,261,261,261,261,261,,,,,,261,261,261,261,261,261,261',
',,261,,,,,,,261,,,261,261,,261,261,261,261,261,,261,261,261,,261,261',
',261,261,,,,,,,,,,,,,,,,,,,,,,261,,,261,,,261,,,261,,,,,,261,,,,,,,',
'261,,,,,261,261,261,261,261,261,,,,261,261,,,,,,,261,,,261,,,,,261,261',
'677,677,677,677,677,,,,677,677,,,,677,,677,677,677,677,677,677,677,',
',,,,677,677,677,677,677,677,677,,,677,,,,,,677,677,,677,677,677,,677',
'677,677,677,677,,677,677,677,,677,677,,677,677,,,,,,,,,,,,,,,,,,,,,',
'677,,,677,,,677,,,677,,677,,,,677,,,,,,,,677,,,,,677,677,677,677,677',
'677,,,,677,677,,,,671,671,671,677,671,,677,,671,671,,677,677,671,,671',
'671,671,671,671,671,671,,,,,,671,671,671,671,671,671,671,,,671,,,,,',
',671,,,671,671,,671,671,671,671,671,671,671,671,671,,671,671,,671,671',
',,,,,,,,,,,,,,,,,,,,,671,,,671,,,671,,,671,,,,671,,671,,,,,,,,671,,',
',,671,671,671,671,671,671,,,,671,671,,,,670,670,670,671,670,,671,,670',
'670,,671,671,670,,670,670,670,670,670,670,670,,,,,,670,670,670,670,670',
'670,670,,,670,,,,,,,670,,,670,670,,670,670,670,670,670,670,670,670,670',
',670,670,,670,670,,,,,,,,,,,,,,,,,,,,,,670,,,670,,,670,,,670,,670,,670',
',670,,,,,,,,670,,,,,670,670,670,670,670,670,,,,670,670,,,,,,,670,,,670',
',,,,670,670,667,667,667,667,667,,,,667,667,,,,667,,667,667,667,667,667',
'667,667,,,,,,667,667,667,667,667,667,667,,,667,,,,,,667,667,,667,667',
'667,,667,667,667,667,667,,667,667,667,,667,667,,667,667,,,,,,,,,,,,',
',,,,,,,,,667,,,667,,,667,,,667,,667,,,,667,,,,,,,,667,,,,,667,667,667',
'667,667,667,,,,667,667,,,,268,268,268,667,268,,667,,268,268,,667,667',
'268,,268,268,268,268,268,268,268,,,,,,268,268,268,268,268,268,268,,',
'268,,,,,,,268,,,268,268,,268,268,268,268,268,268,268,268,268,,268,268',
',268,268,,,,,,,,,,,,,,,,,,,,,,268,,,268,,,268,,,268,,268,,268,,268,',
',,,,,,268,,,,,268,268,268,268,268,268,,,,268,268,,,,269,269,269,268',
'269,,268,,269,269,,268,268,269,,269,269,269,269,269,269,269,,,,,,269',
'269,269,269,269,269,269,,,269,,,,,,,269,,,269,269,,269,269,269,269,269',
'269,269,269,269,,269,269,,269,269,,,,,,,,,,,,,,,,,,,,,,269,,,269,,,269',
',,269,,269,,269,,269,,,,,,,,269,,,,,269,269,269,269,269,269,,,,269,269',
',,,277,277,277,269,277,,269,,277,277,,269,269,277,,277,277,277,277,277',
'277,277,,,,,,277,277,277,277,277,277,277,,,277,,,,,,,277,,,277,277,',
'277,277,277,277,277,277,277,277,277,,277,277,,277,277,,,,,,,,,,,,,,',
',,,,,,,277,,,277,,277,277,,,277,,277,,277,,277,,,,,,,,277,,,,,277,277',
'277,277,277,277,,,,277,277,,,,658,658,658,277,658,,277,,658,658,,277',
'277,658,,658,658,658,658,658,658,658,,,,,,658,658,658,658,658,658,658',
',,658,,,,,,,658,,,658,658,,658,658,658,658,658,,658,658,658,,658,658',
',658,658,,,,,,,,,,,,,,,,,,,,,,658,,,658,,,658,,,658,,,,,,658,,,,,,,',
'658,,,,,658,658,658,658,658,658,,,,658,658,,,,,,,658,,,658,,,,,658,658',
'654,654,654,654,654,,,,654,654,,,,654,,654,654,654,654,654,654,654,',
',,,,654,654,654,654,654,654,654,,,654,,,,,,654,654,,654,654,654,,654',
'654,654,654,654,,654,654,654,,654,654,,654,654,,,,,,,,,,,,,,,,,,,,,',
'654,,,654,,,654,,,654,,654,,,,654,,,,,,,,654,,,,,654,654,654,654,654',
'654,,,,654,654,,,,650,650,650,654,650,,654,,650,650,,654,654,650,,650',
'650,650,650,650,650,650,,,,,,650,650,650,650,650,650,650,,,650,,,,,',
',650,,,650,650,,650,650,650,650,650,,650,650,650,,650,650,,650,650,',
',,,,,,,,,,,,,,,,,,,,650,,,650,,,650,,,650,,,,,,650,,,,,,,,650,,,,,650',
'650,650,650,650,650,,,,650,650,,,,,,,650,,,650,,,,,650,650,281,281,281',
'281,281,,,,281,281,,,,281,,281,281,281,281,281,281,281,,,,,,281,281',
'281,281,281,281,281,,,281,,,,,,281,281,,281,281,281,,281,281,281,281',
'281,,281,281,281,,281,281,,281,281,,,,,,,,,,,,,,,,,,,,,,281,,,281,,',
'281,,,281,,281,,,,281,,,,,,,,281,,,,,281,281,281,281,281,281,,,,281',
'281,,,,349,349,349,281,349,,281,,349,349,,281,281,349,,349,349,349,349',
'349,349,349,,,,,,349,349,349,349,349,349,349,,,349,,,,,,,349,,,349,349',
',349,349,349,349,349,,349,349,349,,349,349,,349,349,,,,,,,,,,,,,,,,',
',,,,,349,,,349,,,349,,,349,,,,,,349,,,,,,,,349,,,,,349,349,349,349,349',
'349,,,,349,349,,,,491,491,491,349,491,,349,,491,491,,349,349,491,,491',
'491,491,491,491,491,491,,,,,,491,491,491,491,491,491,491,,,491,,,,,',
',491,,,491,491,,491,491,491,491,491,,491,491,491,,491,491,,491,491,',
',,,,,,,,,,,,,,,,,,,,491,,,491,,,491,,,491,,,,,,491,,,,,,,,491,,,,,491',
'491,491,491,491,491,,,,491,491,,,,639,639,639,491,639,,491,,639,639',
',491,491,639,,639,639,639,639,639,639,639,,,,,,639,639,639,639,639,639',
'639,,,639,,,,,,,639,,,639,639,,639,639,639,639,639,,639,639,639,,639',
'639,,639,639,,,,,,,,,,,,,,,,,,,,,,639,,,639,,,639,,,639,,,,,,639,,,',
',,,,639,,,,,639,639,639,639,639,639,,,,639,639,,,,285,285,285,639,285',
',639,,285,285,,639,639,285,,285,285,285,285,285,285,285,,,,,,285,285',
'285,285,285,285,285,,,285,,,,,,,285,,,285,285,,285,285,285,285,285,',
'285,285,285,,285,285,600,,600,600,600,600,600,,,,,,,,,,600,,,,,,,,285',
',,285,,,285,,,285,,,,,,600,600,,,,,,,600,600,600,600,,285,285,285,285',
'285,285,,,,285,285,,,,285,,,285,,,285,,,,,285,285,286,286,286,286,286',
',,600,286,286,,,,286,,286,286,286,286,286,286,286,,,,,,286,286,286,286',
'286,286,286,,,286,,,,,,286,286,,286,286,286,,286,286,286,286,286,,286',
'286,286,,286,286,,286,286,,,,,,,,,,,,,,,,,,,,,,286,,,286,,,286,,,286',
',286,,,,286,,,,,,,,286,,,,,286,286,286,286,286,286,,,,286,286,,,,636',
'636,636,286,636,,286,,636,636,,286,286,636,,636,636,636,636,636,636',
'636,,,,,,636,636,636,636,636,636,636,,,636,,,,,,,636,,,636,636,,636',
'636,636,636,636,,636,636,636,,636,636,,636,636,,,,,,,,,,,,,,,,,,,,,',
'636,,,636,,,636,,,636,,,,,,636,,,,,,,,636,,,,,636,636,636,636,636,636',
',,,636,636,,,,631,631,631,636,631,,636,,631,631,,636,636,631,,631,631',
'631,631,631,631,631,,,,,,631,631,631,631,631,631,631,,,631,,,,,,,631',
',,631,631,,631,631,631,631,631,,631,631,631,,631,631,,631,631,,,,,,',
',,,,,,,,,,,,,,,631,,,631,,,631,,,631,,,,,,631,,,,,,,,631,,,,,631,631',
'631,631,631,631,,,,631,631,,,,630,630,630,631,630,,631,,630,630,,631',
'631,630,,630,630,630,630,630,630,630,,,,,,630,630,630,630,630,630,630',
',,630,,,,,,,630,,,630,630,,630,630,630,630,630,,630,630,630,,630,630',
',630,630,,,,,,,,,,,,,,,,,,,,,,630,,,630,,,630,,,630,,,,,,630,,,,,,,',
'630,,,,,630,630,630,630,630,630,,,,630,630,,,,627,627,627,630,627,,630',
',627,627,,630,630,627,,627,627,627,627,627,627,627,,,,,,627,627,627',
'627,627,627,627,,,627,,,,,,,627,,,627,627,,627,627,627,627,627,,627',
'627,627,,627,627,,627,627,,,,,,,,,,,,,,,,,,,,,,627,,,627,,,627,,,627',
',627,,,,627,,,,,,,,627,,,,,627,627,627,627,627,627,,,,627,627,,,,625',
'625,625,627,625,,627,,625,625,,627,627,625,,625,625,625,625,625,625',
'625,,,,,,625,625,625,625,625,625,625,,,625,,,,,,,625,,,625,625,,625',
'625,625,625,625,,625,625,625,,625,625,,625,625,,,,,,,,,,,,,,,,,,,,,',
'625,,,625,,,625,,,625,,,,,,625,,,,,,,,625,,,,,625,625,625,625,625,625',
',,,625,625,,,,598,598,598,625,598,,625,,598,598,,625,625,598,,598,598',
'598,598,598,598,598,,,,,,598,598,598,598,598,598,598,,,598,,,,,,,598',
',,598,598,,598,598,598,598,598,,598,598,598,,598,598,,598,598,,,,,,',
',,,,,,,,,,,,,,,598,,,598,,,598,,,598,,,,,,598,,,,,,,,598,,,,,598,598',
'598,598,598,598,,,,598,598,,,,596,596,596,598,596,,598,,596,596,,598',
'598,596,,596,596,596,596,596,596,596,,,,,,596,596,596,596,596,596,596',
',,596,,,,,,,596,,,596,596,,596,596,596,596,596,,596,596,596,,596,596',
',596,596,,,,,,,,,,,,,,,,,,,,,,596,,,596,,,596,,,596,,,,,,596,,,,,,,',
'596,,,,,596,596,596,596,596,596,,,,596,596,,,,381,381,381,596,381,,596',
',381,381,,596,596,381,,381,381,381,381,381,381,381,,,,,,381,381,381',
'381,381,381,381,,,381,,,,,,,381,,,381,381,,381,381,381,381,381,,381',
'381,381,,381,381,,381,381,,,,,,,,,,,,,,,,,,,,,,381,,,381,,,381,,,381',
',,,,,381,,,,,,,,381,,,,,381,381,381,381,381,381,,,,381,381,,,,586,586',
'586,381,586,,381,,586,586,,381,381,586,,586,586,586,586,586,586,586',
',,,,,586,586,586,586,586,586,586,,,586,,,,,,,586,,,586,586,,586,586',
'586,586,586,586,586,586,586,,586,586,,586,586,,,,,,,,,,,,,,,,,,,,,,586',
',,586,,,586,,,586,,586,,,,586,,,,,,,,586,,,,,586,586,586,586,586,586',
',,,586,586,,,,298,298,298,586,298,,586,,298,298,,586,586,298,,298,298',
'298,298,298,298,298,,,,,,298,298,298,298,298,298,298,,,298,,,,,,,298',
',,298,298,,298,298,298,298,298,,298,298,298,,298,298,,,,,,,,,,,,,,,',
',,,,,,,,,298,,,298,,,298,,,298,,,,,,,,,,,,,,,,,,,298,298,298,298,298',
'298,,,,298,298,,,,583,583,583,298,583,,298,,583,583,,298,298,583,,583',
'583,583,583,583,583,583,,,,,,583,583,583,583,583,583,583,,,583,,,,,',
',583,,,583,583,,583,583,583,583,583,583,583,583,583,,583,583,,583,583',
',,,,,,,,,,,,,,,,,,,,,583,,,583,,,583,,,583,,583,,,,583,,,,,,,,583,,',
',,583,583,583,583,583,583,,,,583,583,,,,,,,583,,,583,,,,,583,583,581',
'581,581,581,581,,,,581,581,,,,581,,581,581,581,581,581,581,581,,,,,',
'581,581,581,581,581,581,581,,,581,,,,,,581,581,,581,581,581,,581,581',
'581,581,581,,581,581,581,,581,581,,581,581,,,,,,,,,,,,,,,,,,,,,,581',
',,581,,,581,,,581,,581,,,,581,,,,,,,,581,,,,,581,581,581,581,581,581',
',,,581,581,,,,,,,581,,,581,,,,,581,581,576,576,576,576,576,,,,576,576',
',,,576,,576,576,576,576,576,576,576,,,,,,576,576,576,576,576,576,576',
',,576,,,,,,576,576,,576,576,576,,576,576,576,576,576,,576,576,576,,576',
'576,,576,576,,,,,,,,,,,,,,,,,,,,,,576,,,576,,,576,,,576,,576,,,,576',
',,,,,,,576,,,,,576,576,576,576,576,576,,,,576,576,,,,,,,576,,,576,,',
',,576,576,572,572,572,572,572,,,,572,572,,,,572,,572,572,572,572,572',
'572,572,,,,,,572,572,572,572,572,572,572,,,572,,,,,,572,572,,572,572',
'572,,572,572,572,572,572,,572,572,572,,572,572,,572,572,,,,,,,,,,,,',
',,,,,,,,,572,,,572,,,572,,,572,,572,,,,572,,,,,,,,572,,,,,572,572,572',
'572,572,572,,,,572,572,,,,558,558,558,572,558,,572,,558,558,,572,572',
'558,,558,558,558,558,558,558,558,,,,,,558,558,558,558,558,558,558,,',
'558,,,,,,,558,,,558,558,,558,558,558,558,558,,558,558,558,,558,558,',
',,,,,,,,,,,,,,,,,,,,,,,558,,,558,,,558,,,558,,,,,,,,,,,,,,,,,,,558,558',
'558,558,558,558,,,,558,558,,,,307,307,307,558,307,,558,,307,307,,558',
'558,307,,307,307,307,307,307,307,307,,,,,,307,307,307,307,307,307,307',
',,307,,,,,,,307,,,307,307,,307,307,307,307,307,,307,307,307,,307,307',
',307,307,,,,,,,,,,,,,,,,,,,,,,307,,,307,307,,307,,,307,,,,,,307,,,,',
',,,307,,,,,307,307,307,307,307,307,,,,307,307,,,,,,,307,,,307,,,,,307',
'307,309,309,309,309,309,,,,309,309,,,,309,,309,309,309,309,309,309,309',
',,,,,309,309,309,309,309,309,309,,,309,,,,,,309,309,,309,309,309,,309',
'309,309,309,309,,309,309,309,,309,309,,309,309,,,,,,,,,,,,,,,,,,,,,',
'309,,,309,,,309,,,309,,309,,,,309,,,,,,,,309,,,,,309,309,309,309,309',
'309,,,,309,309,,,,,,,309,,,309,,,,,309,309,552,552,552,552,552,,,,552',
'552,,,,552,,552,552,552,552,552,552,552,,,,,,552,552,552,552,552,552',
'552,,,552,,,,,,552,552,,552,552,552,,552,552,552,552,552,,552,552,552',
',552,552,,552,552,,,,,,,,,,,,,,,,,,,,,,552,,,552,,,552,,,552,,552,,',
',552,,,,,,,,552,,,,,552,552,552,552,552,552,,,,552,552,,,,,,,552,,,552',
',,,,552,552,551,551,551,551,551,,,,551,551,,,,551,,551,551,551,551,551',
'551,551,,,,,,551,551,551,551,551,551,551,,,551,,,,,,551,551,,551,551',
'551,,551,551,551,551,551,,551,551,551,,551,551,,551,551,,,,,,,,,,,,',
',,,,,,,,,551,,,551,,,551,,,551,,551,,,,551,,,,,,,,551,,,,,551,551,551',
'551,551,551,,,,551,551,,,,546,546,546,551,546,,551,,546,546,,551,551',
'546,,546,546,546,546,546,546,546,,,,,,546,546,546,546,546,546,546,,',
'546,,,,,,,546,,,546,546,,546,546,546,546,546,546,546,546,546,,546,546',
',546,546,,,,,,,,,,,,,,,,,,,,,,546,,,546,,,546,,,546,,,,,,546,,,,,,,',
'546,,,,,546,546,546,546,546,546,,,,546,546,,,,543,543,543,546,543,,546',
',543,543,,546,546,543,,543,543,543,543,543,543,543,,,,,,543,543,543',
'543,543,543,543,,,543,,,,,,,543,,,543,543,,543,543,543,543,543,543,543',
'543,543,,543,543,,543,543,,,,,,,,,,,,,,,,,,,,,,543,,,543,,,543,,,543',
',543,,,,543,,,,,,,,543,,,,,543,543,543,543,543,543,,,,543,543,,,,537',
'537,537,543,537,,543,,537,537,,543,543,537,,537,537,537,537,537,537',
'537,,,,,,537,537,537,537,537,537,537,,,537,,,,,,,537,,,537,537,,537',
'537,537,537,537,,537,537,537,,537,537,,537,537,,,,,,,,,,,,,,,,,,,,,',
'537,,,537,,,537,,,537,,,,,,537,,,,,,,,537,,,,,537,537,537,537,537,537',
',,,537,537,,,,533,533,533,537,533,,537,,533,533,,537,537,533,,533,533',
'533,533,533,533,533,,,,,,533,533,533,533,533,533,533,,,533,,,,,,,533',
',,533,533,,533,533,533,533,533,,533,533,533,,533,533,,533,533,,,,,,',
',,,,,,,,,,,,,,,533,,,533,,,533,,,533,,,,,,533,,,,,,,,533,,,,,533,533',
'533,533,533,533,,,,533,533,,,,532,532,532,533,532,,533,,532,532,,533',
'533,532,,532,532,532,532,532,532,532,,,,,,532,532,532,532,532,532,532',
',,532,,,,,,,532,,,532,532,,532,532,532,532,532,,532,532,532,,532,532',
',532,532,,,,,,,,,,,,,,,,,,,,,,532,,,532,,,532,,,532,,,,,,532,,,,,,,',
'532,,,,,532,532,532,532,532,532,,,,532,532,,,,531,531,531,532,531,,532',
',531,531,,532,532,531,,531,531,531,531,531,531,531,,,,,,531,531,531',
'531,531,531,531,,,531,,,,,,,531,,,531,531,,531,531,531,531,531,,531',
'531,531,,531,531,,531,531,,,,,,,,,,,,,,,,,,,,,,531,,,531,,,531,,,531',
',,,,,531,,,,,,,,531,,,,,531,531,531,531,531,531,,,,531,531,,,,523,523',
'523,531,523,,531,,523,523,,531,531,523,,523,523,523,523,523,523,523',
',,,,,523,523,523,523,523,523,523,,,523,,,,,,,523,,,523,523,,523,523',
'523,523,523,523,523,523,523,,523,523,,523,523,,,,,,,,,,,,,,,,,,,,,,523',
',,523,,,523,,,523,,523,,,,523,,,,,,,,523,,,,,523,523,523,523,523,523',
',,,523,523,,,,520,520,520,523,520,,523,,520,520,,523,523,520,,520,520',
'520,520,520,520,520,,,,,,520,520,520,520,520,520,520,,,520,,,,,,,520',
',,520,520,,520,520,520,520,520,520,520,520,520,,520,520,,520,520,,,',
',,,,,,,,,,,,,,,,,,520,,,520,,,520,,,520,,520,,,,520,,,,,,,,520,,,,,520',
'520,520,520,520,520,,,,520,520,,,,518,518,518,520,518,,520,,518,518',
',520,520,518,,518,518,518,518,518,518,518,,,,,,518,518,518,518,518,518',
'518,,,518,,,,,,,518,,,518,518,,518,518,518,518,518,,518,518,518,,518',
'518,918,,918,918,918,918,918,,,,,,,,,,918,,,,,,,,518,,,518,,,518,,,518',
',,,,,918,918,,,,,,,918,918,918,918,,518,518,518,518,518,518,,,,518,518',
',,,,,,518,,,518,,,,,518,518,512,512,512,512,512,,,918,512,512,,,,512',
',512,512,512,512,512,512,512,,,,,,512,512,512,512,512,512,512,,,512',
',,,,,512,512,,512,512,512,,512,512,512,512,512,,512,512,512,,512,512',
',512,512,,,,,,,,,,,,,,,,,,,,,,512,,,512,,,512,,,512,,512,,,,512,,,,',
',,,512,,,,,512,512,512,512,512,512,,,,512,512,,,,,,512,512,,,512,,,',
',512,512,506,506,506,,506,,,,506,506,,,,506,,506,506,506,506,506,506',
'506,,,,,,506,506,506,506,506,506,506,,,506,,,,,,,506,,,506,506,,506',
'506,506,506,506,,506,506,506,,506,506,,506,506,,,,,,,,,,,,,,,,,,,,,',
'506,,,506,,506,506,,,506,,,,506,,506,,,,,,,,506,,,,,506,506,506,506',
'506,506,,,,506,506,,,,592,592,592,506,592,,506,,592,592,,506,506,592',
',592,592,592,592,592,592,592,,,,,,592,592,592,592,592,592,592,,,592',
',,,,,,592,,,592,592,,592,592,592,592,592,592,592,592,592,,592,592,,592',
'592,,,,,,,,,,,,,,,,,,,,,,592,,,592,,,592,,,592,,592,,,,592,,,,,,,,592',
',,,,592,592,592,592,592,592,,,,592,592,,,,,645,,592,,,592,,645,645,645',
'592,592,645,645,645,,645,,,,,,,,,,645,645,,,,,,,,,645,645,,645,645,645',
'645,645,,,,,,,,,,,,,,,,,,,,,,,,645,645,645,645,645,645,645,645,645,645',
'645,645,645,645,645,,,645,645,645,,645,645,,,645,,,645,,645,,645,,645',
',645,645,645,645,645,645,645,,645,,645,,,,,,,,,,,,,645,645,645,645,',
'645,436,,645,,645,,645,436,436,436,,,,436,436,,436,,,,,,,,,436,,,,,',
',,,,,436,436,,436,436,436,436,436,,,,,,,,,,,,,,,,,,,,,,,,436,436,436',
'436,436,436,436,436,436,436,436,436,436,436,436,438,,436,436,436,,436',
'438,438,438,436,,,438,438,,438,436,,436,,436,436,436,436,436,436,436',
',436,436,436,,,,,438,438,,438,438,438,438,438,436,436,,436,,436,,,436',
',436,,436,,,,,,,,,,,438,438,438,438,438,438,438,438,438,438,438,438',
'438,438,438,,,438,438,438,,438,,,,438,,,,,,,438,,438,,438,438,438,438',
'438,438,438,,438,,438,,,,,,,,,,,,,438,438,,438,,438,644,,438,,438,,438',
'644,644,644,,,644,644,644,,644,,,,,,,,,644,644,644,,,,,,,,,644,644,',
'644,644,644,644,644,,,,,,,,,,,,,,,,,,,,,,,,644,644,644,644,644,644,644',
'644,644,644,644,644,644,644,644,,,644,644,644,,644,644,,,644,,,644,',
'644,,644,,644,,644,644,644,644,644,644,644,,644,644,644,,,,,,,,,,,,',
'644,644,644,644,,644,50,,644,,644,,644,50,50,50,,,50,50,50,,50,,,,,',
',,,,50,50,50,,,,,,,,50,50,,50,50,50,50,50,,,,,,,,,,,,,,,,,,,,,,,,50',
'50,50,50,50,50,50,50,50,50,50,50,50,50,50,,,50,50,50,,,50,,,50,,,50',
',50,,50,,50,,50,50,50,50,50,50,50,,50,,50,,,,,,,,,,,,,50,50,50,50,28',
'50,,50,50,,50,28,28,28,,,28,28,28,,28,,,,,,,,,,28,28,,,,,,,,,28,28,',
'28,28,28,28,28,,,,,,,,,,,,,,,,,,,,,,,,28,28,28,28,28,28,28,28,28,28',
'28,28,28,28,28,,,28,28,28,,,28,,28,28,,,28,,28,,28,,28,,28,28,28,28',
'28,28,28,,28,,28,,,,,,,,,,,,,28,28,28,28,496,28,,,28,,28,496,496,496',
',,496,496,496,,496,,,,,,,,,,496,,,,,,,,,,496,496,,496,496,496,496,496',
',,,,,,,,,,,,749,494,749,749,749,749,749,,494,494,494,,,494,494,494,749',
'494,,,,,496,496,,,,494,,,496,,,,,496,496,494,494,749,494,494,494,494',
'494,,,749,749,749,749,,,,,,,496,,,,,,,,,,,,495,496,,496,,,496,495,495',
'495,494,494,495,495,495,,495,749,494,,,,,494,494,,495,,,,,,,,,,495,495',
',495,495,495,495,495,,494,,,,,,522,522,,,522,,,494,,494,,,494,522,522',
',522,522,522,522,522,522,522,,,522,522,495,495,,,522,522,522,522,495',
',,,,495,495,,,,,,522,522,,522,522,522,522,522,522,522,522,522,522,522',
',495,522,,,,,,,,,,,,495,,495,,,495,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7',
'7,7,7,7,7,7,7,,,,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,,7,7,7,,7',
',,,,,,,,7,7,,7,7,7,7,7,7,7,,,7,7,,,,,7,7,7,7,,,,,,,,,,,,,7,7,,7,7,7',
'7,7,7,7,7,7,7,7,,,7,7,,,,,,,,,,7,415,415,415,415,415,415,415,415,415',
'415,415,415,415,415,415,415,415,415,415,415,415,415,415,415,,,,415,415',
'415,415,415,415,415,415,415,415,415,415,415,415,415,415,415,415,415',
'415,415,,415,415,,,415,,,,,,,,,415,415,,415,415,415,415,415,415,415',
',,415,415,,,,,415,415,415,415,,,,,,,,,,,,,415,415,,415,415,415,415,415',
'415,415,415,415,415,415,,,415,415,,,,,,,,,,415,8,8,8,8,8,8,8,8,8,8,8',
'8,8,8,8,8,8,8,8,8,8,8,8,8,,,,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8',
'8,,8,8,,,8,,,,,,,,,8,8,,8,8,8,8,8,8,8,,,8,8,,,,,8,8,8,8,,,,,,,,,,,,',
'8,8,,8,8,8,8,8,8,8,8,8,8,8,,,8,8,,,,,,,,,,8,411,411,411,411,411,411',
'411,411,411,411,411,411,411,411,411,411,411,411,411,411,411,411,411',
'411,,,,411,411,411,411,411,411,411,411,411,411,411,411,411,411,411,411',
'411,411,411,411,411,,411,411,,,411,,,,,,,,,411,411,,411,411,411,411',
'411,411,411,,,411,411,,,,,411,411,411,411,,,,,,,,,,,,,411,411,,411,411',
'411,411,411,411,411,411,411,411,411,,,411,411,,,,,,,,,,411,65,65,65',
'65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,,,,65',
'65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,,65,65,65',
'65,65,,65,,,,,,,65,65,,65,65,65,65,65,65,65,,,65,65,,,,,65,65,65,65',
',,,,,65,,,,,,,65,65,,65,65,65,65,65,65,65,65,65,65,65,,,65,79,79,79',
'79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,,,,79',
'79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,,79,79,79',
'79,79,,79,,,,,,,79,79,,79,79,79,79,79,79,79,,,79,79,,,,,79,79,79,79',
',,,,,,,,,,,,79,79,,79,79,79,79,79,79,79,79,79,79,79,,,79,766,766,766',
'766,766,766,766,766,766,766,766,766,766,766,766,766,766,766,766,766',
'766,766,766,766,,,,766,766,766,766,766,766,766,766,766,766,766,766,766',
'766,766,766,766,766,766,766,766,,766,766,,,766,,,,,,,,,766,766,,766',
'766,766,766,766,766,766,,,766,766,,,,,766,766,766,766,,,,,,,,,,,,,766',
'766,,766,766,766,766,766,766,766,766,766,766,766,,,766,192,192,192,192',
'192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192',
'192,192,192,,,,192,192,192,192,192,192,192,192,192,192,192,192,192,192',
'192,192,192,192,192,192,192,,192,192,192,192,192,,192,,,,,,,192,192',
',192,192,192,192,192,192,192,,,192,192,,,,,192,192,192,192,,,,,,,,,',
',,,192,192,,192,192,192,192,192,192,192,192,192,192,192,450,450,192',
',450,,,,,,,,,450,450,,450,450,450,450,450,450,450,,,450,450,,,,,450',
'450,450,450,,,,,,,,,,,,,450,450,,450,450,450,450,450,450,450,450,450',
'450,450,946,946,450,,946,,,,,,,,,946,946,,946,946,946,946,946,946,946',
',,946,946,,,,,946,946,946,946,,,,,,946,,,,,,,946,946,,946,946,946,946',
'946,946,946,946,946,946,946,449,449,946,,449,,,,,,,,,449,449,,449,449',
'449,449,449,449,449,,,449,449,,,,,449,449,449,449,,,,,,449,,,,,,,449',
'449,,449,449,449,449,449,449,449,449,449,449,449,264,264,449,,264,,',
',,,,,,264,264,,264,264,264,264,264,264,264,,,264,264,,,,,264,264,264',
'264,,,,,,,,,,,,,264,264,,264,264,264,264,264,264,264,264,264,264,264',
'203,203,264,,203,,,,,,,,,203,203,,203,203,203,203,203,203,203,,,203',
'203,,,,,203,203,203,203,,,,,,,,,,,,,203,203,,203,203,203,203,203,203',
'203,203,203,203,203,521,521,203,,521,,,,,,,,,521,521,,521,521,521,521',
'521,521,521,,,521,521,,,,,521,521,521,521,,,,,,521,,,,,,,521,521,,521',
'521,521,521,521,521,521,521,521,521,521,202,202,521,,202,,,,,,,,,202',
'202,,202,202,202,202,202,202,202,,,202,202,,,,,202,202,202,202,,,,,',
',,,,,,,202,202,,202,202,202,202,202,202,202,202,202,202,202,201,201',
'202,,201,,,,,,,,,201,201,,201,201,201,201,201,201,201,,,201,201,,,,',
'201,201,201,201,,,,,,201,,,,,,,201,201,,201,201,201,201,201,201,201',
'201,201,201,201,822,822,201,,822,,,,,,,,,822,822,,822,822,822,822,822',
'822,822,,,822,822,,,,,822,822,822,822,,,,,,,,,,,,,822,822,,822,822,822',
'822,822,822,822,822,822,822,822,593,593,822,,593,,,,,,,,,593,593,,593',
'593,593,593,593,593,593,,,593,593,,,,,593,593,593,593,,,,,,593,,,,,',
',593,593,,593,593,593,593,593,593,593,593,593,593,593,535,535,593,,535',
',,,,,,,,535,535,,535,535,535,535,535,535,535,,,535,535,,,,,535,535,535',
'535,,,,,,,,,,,,,535,535,,535,535,535,535,535,535,535,535,535,535,535',
'591,591,535,,591,,,,,,,,,591,591,,591,591,591,591,591,591,591,,,591',
'591,,,,,591,591,591,591,,,,,,,,,,,,,591,591,,591,591,591,591,591,591',
'591,591,591,591,591,534,534,591,,534,,,,,,,,,534,534,,534,534,534,534',
'534,534,534,,,534,534,,,,,534,534,534,534,,,,,,534,,,,,,,534,534,,534',
'534,534,534,534,534,534,534,534,534,534,947,947,534,,947,,,,,,,,,947',
'947,,947,947,947,947,947,947,947,,,947,947,,,,,947,947,947,947,,,,,',
',,,,,,,947,947,,947,947,947,947,947,947,947,947,947,947,947,265,265',
'947,,265,,,,,,,,,265,265,,265,265,265,265,265,265,265,,,265,265,,,,',
'265,265,265,265,,,,,,,,,,,,,265,265,,265,265,265,265,265,265,265,265',
'265,265,265,584,584,265,,584,,,,,,,,,584,584,,584,584,584,584,584,584',
'584,,,584,584,,,,,584,584,584,584,,,,,,584,,,,,,,584,584,,584,584,584',
'584,584,584,584,584,584,584,584,524,524,584,,524,,,,,,,,,524,524,,524',
'524,524,524,524,524,524,,,524,524,,,,,524,524,524,524,,,,,,,,,,,,,524',
'524,,524,524,524,524,524,524,524,524,524,524,524,266,266,524,,266,,',
',,,,,,266,266,,266,266,266,266,266,266,266,,,266,266,,,,,266,266,266',
'266,,,,,,,,,,,,,266,266,,266,266,266,266,266,266,266,266,266,266,266',
'585,585,266,,585,,,,,,,,,585,585,,585,585,585,585,585,585,585,,,585',
'585,,,,,585,585,585,585,,,,,,,,,,,,,585,585,,585,585,585,585,585,585',
'585,585,585,585,585,,,585' ]
        racc_action_check = arr = ::Array.new(25047, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_action_pointer = [
    -2,  1318,   nil,   324,   nil,   745,  1195, 22938, 23186,  1169,
  1138,  1130,  1174,   848,   -64,   877,   nil,  1815,  1942,  1815,
  1215,   nil,  2336,  2463,  2590,   385,    13,  2997, 22553,   nil,
  3264,  3391,  3518,   nil,  1081,   393,  1126,   821,  4166,  4293,
  4420,  1053,   467,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
 22423,   nil,  4941,  5068,  5195,   -15,  3924,  5576,  5703,   nil,
   nil,  5830,  5970,  6097,   nil, 23434,   nil,   nil,   nil,   nil,
   nil,    25,   nil,   nil,   nil,   nil,   nil,   963,   950, 23547,
   nil,   nil,   nil,   231,  7025,   nil,   nil,  7152,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   975,   nil,  7419,
   nil,   nil,   nil,  7559,  7686,  7813,  7940,  8080,  8220,   nil,
  1047,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil, 23773,   782,   nil,  8741,  8868,  8995,  9122,  9249,
  9376, 24261, 24200, 24078,  9884, 10011, 10138,   nil,   506,   253,
   644,   191,   507,   530, 11092, 11219,   nil,   nil, 11346,   441,
 11600, 11727, 11854, 11981, 12108, 12235, 12362, 12489, 12616, 12743,
 12870, 12997, 13124, 13251, 13378, 13505, 13632, 13759, 13886, 14013,
 14140, 14267, 14394, 14521, 14648, 14775,   nil,   nil,   nil,  2082,
   nil,   -36,   499,   nil, 15283,   560, 15550,   nil,   nil,   nil,
   nil, 15677,   nil,   nil, 24017, 24688, 24871,   964, 16338, 16465,
   nil,   nil,   nil,   nil,   nil,   nil,   nil, 16592,   387,   618,
  1069, 17126,  1125,  1145,  1132, 17634, 17774,   313,   594,  1253,
   196,  1219,  1151,    14,   nil,  1152,   429,   nil, 19044,   nil,
   351,  1083,   870,   922,   nil,   -13,   nil, 19845,   nil, 19985,
    35,   nil,    82,   567,   440,   477,   485,   404,   585,   nil,
   nil,    52,  5982,   nil,   nil,   nil,   677,  -115,   nil,   743,
   786,   nil,   nil,   nil,   nil,   nil,   nil,   nil,  3012,   nil,
   nil,   nil,   877,   nil,   nil,   882,   410,    98,    91, 17253,
  6351,   249,   345,   980,    37,   414,  1080,   -17,  1113,   nil,
   nil,   887,  1087,   nil,   721,   nil,    65,   nil,   nil,   379,
   763,   590,   717,   844,   890,   636,   388,   509,   nil,   277,
   nil, 18790,   nil,    29,   nil,   356,   nil,   -23,  1131,   361,
   nil,  1126,   -46,   nil,   365,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
  1133, 23310,   nil,   nil,   nil, 23062,  1101,   nil,   nil,  1014,
   nil,   125,  1039,   nil,  1038,   nil,   nil,  1688,  1071,  1067,
   211,   315,   252,   nil,   nil,   nil, 22077,  1057, 22159,   nil,
   506,   633,   760,   nil,   nil,   nil,  2590,   nil,   nil, 23956,
 23834,   887,  1561,   307,  1688,  3124,  3785,   -11,   nil,  3658,
  3264,   993,  1041,  1042,  1036,  1007,   988,  5322,  5195,  3392,
  3785,  1154,  4293,  4814,  5068,  4941,  3124,  4687,  4560,  4420,
   355,  3099,  4166,  4039,   633,    59,   nil,  4039,   nil,  4814,
   nil, 17380,   nil,   nil, 22740, 22808, 22683,   186,   nil,   777,
   nil,   nil,   770,   759,   nil,   nil, 21688,   138,   -34,   762,
   nil,   nil, 21548,   756,   697,   nil,   nil,   694, 21408,   635,
 21281, 24139, 22808, 21154, 24810,   206,   625,   nil,   nil,   554,
   nil, 21027, 20900, 20773, 24566, 24444,  1561, 20646,   549,   543,
   376,   nil,   nil, 20519,   nil,   nil, 20392,   nil,   nil,   nil,
   nil, 20265, 20125,    45,   nil,  1131,   nil,   nil, 19718,  6109,
   nil,   950,   nil,   nil,   172,   nil,  2983,   nil,   139,  1280,
   nil,   nil, 19591,   709,   nil,   nil, 19451,   205,   292,   997,
  1017, 19311,   nil, 19171, 24749, 24932, 18917,   147,   nil,   541,
   nil, 24505, 21815, 24383,   nil,   nil, 18663,   416, 18536,   nil,
 17646,   nil,   nil,   nil,   196,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   -38,   nil,   nil,   nil,  1160,
   nil,   nil,   nil,   nil,   nil, 18409,  1190, 18282,   541,   291,
 18155, 18028,  1183,   nil,   nil,   nil, 17901,  1170,   nil, 17507,
  1148,   nil,   192,   319, 22291, 21945,  1098,  1085,   506,   nil,
 16986,   nil,  3403,   nil, 16859,  1007,   nil,  1013, 16719,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil, 16211,   nil,   962,
 16071, 15944,  1294,   795,   nil,   nil,   728, 15817, 15423,   nil,
   999,   -22, 15156,   341,   nil,   237,   327,   186,   761,   228,
   235,   -33,   -27,    -9, 15029,  2730,    86,    98,    -2,   202,
 14902,   nil,   nil,   376,   164,   293,   nil,   nil,   174,   nil,
   194,   668,   292,   245,   257,   nil,   nil,   343,  3021,   nil,
   742,   nil,   462,   nil,   nil,   nil,   nil,   nil,   492,   nil,
   506, 11473,   439,    52,    78,   297,   -18,   505, 10952,   795,
   nil,   541,   539, 10825,   234,   nil,   -25, 10685, 10545, 22688,
   463,   nil,   nil,   674,   nil, 10405,   nil,   616,   630,   nil,
   643,   647,   668,   nil,   663,   nil, 23660,   718,  1234, 10278,
   nil,   nil,   nil,   760,   714,  9757,  9630,  9503,   nil,  2336,
   nil,  2209,   nil,   nil,  2870,   nil,  1942,   nil,  8601,  8474,
  8347,   240,   208,   887,   nil,   838,   941,   nil,   nil,   840,
   nil,   841,  7279,   nil,   866,   972,   858,   314,   nil,   nil,
   nil,  1007,   nil,  6898,   901,   964,   nil,   nil,   nil,   nil,
   nil,   nil, 24322,   nil,  1127,   nil,   nil,   nil,   nil,  1420,
  1055,   nil,  6758,  1068,  6631,  6491,   nil,   nil,    75,    40,
   633,   227,   nil,  1105,   nil,   nil,  1117,  1118,  1002,   nil,
   nil,   nil,   348,   nil,   nil,   137,  3530,   nil,  1184,   nil,
   406,   nil,  6224,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
  1038,  1024,   nil,  1434,   nil,  2463,  5449,  5322,   nil,   nil,
   nil,  4687,  1041,   nil,   nil,   nil,  4560,   nil,   nil,    74,
  3912,   nil,  1099,  1062,   nil,   nil,    66,   nil,  1191,  1195,
  3658,  2870,   nil,   nil,  2730,   nil,   nil,  1128,   nil,  1093,
   nil,   nil,  1094,  1095,  1105,  1098,   nil,   nil, 21420,   nil,
   nil,  2209,   nil,  2082,    36,   760,  1193,   120,   nil,   nil,
  1434,   nil,   nil,   nil,    53,  1294,  1257,   nil,   nil,  1096,
   nil,   nil,   nil,  1154,  1268,  1014, 23895, 24627,    -7,   996,
   nil,   nil,   nil,  1292,   nil,  1173,  1294,   nil,  1211,    67,
    83,    97,   108,   nil,   nil,   nil,   nil,   163 ]

racc_action_default = [
    -3,  -555,    -1,  -543,    -4,    -6,  -555,  -555,  -555,  -555,
  -555,  -555,  -555,  -555,  -277,   -37,   -38,  -555,  -555,   -43,
   -45,   -46,  -289,  -327,  -328,   -50,  -255,  -382,  -255,   -65,
   -10,   -69,   -76,   -78,  -555,  -457,  -555,  -555,  -555,  -555,
  -555,  -545,  -232,  -270,  -271,  -272,  -273,  -274,  -275,  -276,
  -533,  -279,  -555,  -554,  -525,  -297,  -554,  -555,  -555,  -302,
  -305,  -543,  -555,  -555,  -319,  -555,  -329,  -330,  -400,  -401,
  -402,  -403,  -404,  -554,  -407,  -554,  -554,  -554,  -554,  -554,
  -434,  -440,  -441,  -555,  -446,  -447,  -448,  -449,  -450,  -451,
  -452,  -453,  -454,  -455,  -456,  -459,  -460,  -555,    -2,  -544,
  -550,  -551,  -552,  -555,  -555,  -555,  -555,  -555,    -3,   -13,
  -555,  -105,  -106,  -107,  -108,  -109,  -110,  -111,  -114,  -115,
  -116,  -117,  -118,  -119,  -120,  -121,  -122,  -123,  -124,  -125,
  -126,  -127,  -128,  -129,  -130,  -131,  -132,  -133,  -134,  -135,
  -136,  -137,  -138,  -139,  -140,  -141,  -142,  -143,  -144,  -145,
  -146,  -147,  -148,  -149,  -150,  -151,  -152,  -153,  -154,  -155,
  -156,  -157,  -158,  -159,  -160,  -161,  -162,  -163,  -164,  -165,
  -166,  -167,  -168,  -169,  -170,  -171,  -172,  -173,  -174,  -175,
  -176,  -177,  -178,  -179,  -180,  -181,  -182,  -183,  -184,  -185,
  -186,  -187,  -555,   -18,  -112,   -10,  -555,  -555,  -555,  -554,
  -554,  -555,  -555,  -555,  -555,  -555,  -555,   -41,  -555,  -457,
  -555,  -277,  -555,  -555,   -10,  -555,   -42,  -224,  -555,  -555,
  -555,  -555,  -555,  -555,  -555,  -555,  -555,  -555,  -555,  -555,
  -555,  -555,  -555,  -555,  -555,  -555,  -555,  -555,  -555,  -555,
  -555,  -555,  -555,  -555,  -555,  -555,  -369,  -371,   -47,  -233,
  -248,  -262,  -262,  -252,  -555,  -263,  -555,  -289,  -327,  -328,
  -527,  -555,   -48,   -49,  -555,  -555,  -555,   -55,  -554,  -555,
  -296,  -375,  -383,  -385,   -63,  -381,   -64,  -555,  -543,   -11,
   -65,   -10,  -555,  -555,   -70,   -73,   -10,  -457,  -555,  -555,
  -277,  -292,  -545,  -555,  -331,  -382,  -555,   -75,  -555,   -80,
  -284,  -442,  -443,  -555,  -209,  -210,  -225,  -555,  -546,   -10,
  -545,  -234,  -545,  -547,  -547,  -555,  -555,  -547,  -555,  -298,
  -299,  -555,  -555,  -342,  -343,  -350,  -554,  -491,  -357,  -554,
  -554,  -368,  -490,  -492,  -493,  -494,  -495,  -496,  -555,  -509,
  -514,  -515,  -517,  -518,  -519,  -555,   -44,  -555,  -555,  -555,
  -555,  -543,  -555,  -544,  -457,  -555,  -555,  -277,  -555,  -498,
  -499,  -101,  -555,  -103,  -555,  -277,  -555,  -316,  -457,  -555,
  -105,  -106,  -143,  -144,  -160,  -165,  -172,  -175,  -322,  -555,
  -523,  -555,  -405,  -555,  -420,  -555,  -422,  -555,  -555,  -555,
  -412,  -555,  -555,  -418,  -555,  -433,  -435,  -436,  -437,  -438,
  -444,  -445,   968,    -5,  -553,   -19,   -20,   -21,   -22,   -23,
  -555,  -555,   -15,   -16,   -17,  -555,  -555,   -25,   -34,  -188,
  -263,  -555,  -555,   -26,   -35,   -36,   -27,  -190,  -555,  -555,
  -534,  -535,  -554,  -378,  -536,  -537,  -534,  -255,  -535,  -380,
  -539,  -540,  -554,  -534,  -535,   -33,  -198,   -39,   -40,  -555,
  -555,  -554,  -554,  -284,  -555,  -555,  -555,  -555,  -295,  -199,
  -200,  -201,  -202,  -203,  -204,  -205,  -206,  -211,  -212,  -213,
  -214,  -215,  -216,  -217,  -218,  -219,  -220,  -221,  -222,  -223,
  -226,  -227,  -228,  -229,  -555,  -554,  -249,  -555,  -250,  -555,
  -260,  -555,  -264,  -530,  -255,  -255,  -255,  -554,   -56,  -545,
  -243,  -244,  -262,  -262,  -256,  -257,  -555,  -554,  -554,  -555,
  -291,    -9,  -544,  -555,   -66,  -282,   -81,   -71,  -555,  -555,
  -554,  -555,  -555,  -554,  -555,  -284,  -555,  -442,  -443,   -77,
   -82,  -555,  -555,  -555,  -555,  -555,  -230,  -555,  -392,  -555,
  -555,  -235,  -236,  -549,  -548,  -238,  -549,  -287,  -288,  -526,
  -339,   -10,   -10,  -555,  -341,  -555,  -359,  -366,  -555,  -363,
  -364,  -555,  -367,  -491,  -555,  -500,  -555,  -502,  -504,  -508,
  -516,  -520,   -10,  -332,  -333,  -334,   -10,  -555,  -555,  -555,
  -555,   -10,  -387,  -554,  -555,  -555,  -554,  -284,  -311,  -101,
  -102,  -555,  -554,  -555,  -314,  -461,  -555,  -555,  -555,  -320,
  -489,  -324,  -541,  -542,  -545,  -406,  -421,  -424,  -425,  -427,
  -408,  -423,  -409,  -410,  -411,  -555,  -414,  -416,  -417,  -555,
  -439,    -7,   -14,  -113,   -24,  -555,  -269,  -555,  -285,  -286,
  -555,  -555,   -59,  -241,  -242,  -376,  -555,   -61,  -379,  -555,
   -57,  -377,  -534,  -535,  -534,  -535,  -555,  -555,  -188,  -294,
  -555,  -353,  -555,  -355,   -10,  -262,  -261,  -265,  -555,  -528,
  -529,   -51,  -372,   -52,  -373,   -53,  -374,   -10,  -239,  -555,
  -245,  -247,   -43,  -555,  -254,  -258,  -555,   -10,   -10,  -290,
   -12,   -66,  -555,   -74,   -79,  -555,  -534,  -535,  -554,  -538,
  -283,  -555,  -555,  -554,  -555,  -197,  -207,  -208,  -555,  -554,
  -554,  -280,  -281,  -547,  -555,  -555,  -340,  -351,  -555,  -358,
  -554,  -352,  -555,  -554,  -554,  -510,  -497,  -555,  -555,  -507,
  -554,  -335,  -554,  -303,  -336,  -337,  -338,  -306,  -555,  -309,
  -555,  -555,  -555,  -534,  -535,  -538,  -283,  -555,  -555,  -101,
  -104,  -538,  -555,   -10,  -555,  -463,  -555,   -10,   -10,  -489,
  -555,  -466,  -467,  -469,  -470,  -472,  -473,  -522,  -522,  -478,
  -480,  -480,  -480,  -488,  -491,  -512,  -555,  -555,  -555,   -10,
  -413,  -415,  -419,  -189,  -267,  -555,  -555,  -555,   -30,  -193,
   -31,  -194,   -60,   -32,  -195,   -62,  -196,   -58,  -555,  -555,
  -555,  -286,  -285,  -231,  -354,  -555,  -555,  -251,  -266,  -555,
  -240,  -262,  -555,  -259,  -555,  -555,   -72,  -285,  -286,   -83,
  -293,  -554,  -348,   -10,  -393,  -554,  -394,  -395,  -237,  -344,
  -345,  -365,  -555,  -284,  -555,  -361,  -362,  -501,  -503,  -506,
  -555,  -346,  -555,  -555,   -10,   -10,  -308,  -310,  -555,  -285,
   -93,  -555,  -285,  -555,  -462,  -317,  -555,  -555,  -545,  -465,
  -468,  -471,  -555,  -476,  -477,  -555,  -555,  -484,  -555,  -486,
  -555,  -487,  -555,  -325,  -524,  -426,  -429,  -430,  -431,  -432,
  -555,  -268,   -28,  -191,   -29,  -192,  -555,  -555,  -356,  -370,
   -54,  -246,  -262,  -384,  -386,    -8,   -10,  -399,  -349,  -555,
  -555,  -397,  -283,  -554,  -505,  -300,  -555,  -301,  -555,  -555,
  -555,   -10,  -312,  -315,   -10,  -321,  -323,  -555,  -474,  -522,
  -521,  -479,  -480,  -480,  -480,  -555,  -513,  -511,  -489,  -428,
  -253,  -555,  -398,   -10,  -457,  -555,  -555,  -277,  -396,  -360,
   -10,  -304,  -307,  -265,  -554,   -10,  -555,  -464,  -475,  -555,
  -482,  -483,  -485,   -10,  -392,  -554,  -555,  -555,  -284,  -554,
  -388,  -389,  -390,  -555,  -318,  -480,  -555,  -391,  -555,  -534,
  -535,  -538,  -283,  -347,  -313,  -481,  -326,  -285 ]

clist = [
'13,109,194,307,565,539,114,114,748,580,323,378,284,699,529,488,5,208',
'208,102,760,498,208,208,208,396,315,324,763,331,13,288,288,572,576,659',
'12,117,117,99,207,250,250,250,384,366,386,386,390,393,386,715,208,208',
'707,723,727,208,208,98,297,208,355,364,114,564,12,432,437,442,294,294',
'312,418,425,310,606,102,114,916,346,346,616,590,346,2,251,251,251,252',
'252,252,659,542,545,918,282,549,830,13,309,294,294,208,208,208,208,13',
'13,347,348,349,280,351,834,5,350,352,853,854,835,317,811,409,5,738,346',
'346,346,346,494,495,496,935,641,12,385,387,396,743,394,598,904,12,12',
'833,369,747,35,600,766,601,321,550,379,405,406,407,408,557,916,713,560',
'562,885,248,262,263,594,760,358,403,428,429,193,216,360,763,35,287,287',
'247,485,507,508,950,662,664,666,731,815,114,889,410,382,13,208,208,208',
'208,208,441,383,320,208,208,208,389,615,319,354,368,392,368,13,208,865',
'659,312,312,768,769,10,848,909,908,316,380,447,448,504,12,565,912,683',
'719,728,676,457,500,411,267,274,276,668,828,499,35,1,,12,,10,,526,35',
'35,,,,422,422,,,,,488,,208,208,938,656,540,656,541,,553,208,,530,654',
'13,,,359,288,13,250,250,,674,,667,717,102,331,250,556,288,,556,556,677',
'678,,,,,771,13,,,740,517,512,432,437,12,,902,,10,12,707,294,,943,963',
',10,10,,502,251,511,503,252,294,760,,,251,,35,252,12,763,513,715,208',
'208,599,519,417,423,426,,951,,,,445,35,280,,,,102,280,364,,,346,346',
',,,,,,,208,595,,565,641,782,688,,,693,785,,,787,,,,806,,688,577,578',
'633,604,622,,579,294,623,114,501,505,633,114,,,10,797,957,509,,,,646',
'647,,659,,35,,,,287,35,,10,,,843,,117,14,846,847,117,287,,,441,688,208',
'208,,656,656,651,35,,688,,669,,,,633,633,633,651,,312,312,14,290,290',
',,,651,651,,,,818,,,,,857,859,861,,,685,,894,692,,,530,,,,10,357,365',
'208,,10,,,,13,,,,,368,288,,208,441,,208,901,,,,680,310,,10,,,441,,,208',
',312,,14,312,821,,,825,826,12,14,14,13,13,,655,,732,294,711,737,698',
',271,275,797,742,767,,,,,283,13,,,923,13,816,,,,13,930,208,441,,208',
'12,12,,441,952,208,724,724,,208,294,208,,936,,312,,,312,795,,12,,703',
'312,12,745,,,,12,,346,,746,,710,,331,,714,,,208,208,,,,,208,14,,956',
'940,941,942,,,920,,632,744,,,,637,,13,,14,640,,633,35,,,530,633,656',
'287,13,762,,812,817,,,,809,,13,13,,,556,288,965,556,556,,,,,12,812,',
'812,288,,,759,,35,35,,,12,,656,368,,,661,663,665,863,12,12,,,,,,35,294',
',14,35,,929,290,14,35,,,,294,10,,416,801,208,,290,,,13,,,,13,13,,,14',
',,,283,,,,,844,346,845,,422,114,849,,,13,,,,10,10,,208,208,,12,,,887',
'12,12,,891,778,780,,841,,,783,10,838,,,10,,,,35,10,,12,,,,,907,365,688',
'13,,35,,762,,,,441,283,,,35,35,283,,271,287,275,208,,13,13,,,,,,,287',
',,,759,,,12,,,,,,346,,724,,,,,,,556,,882,,,,12,12,,,,,10,,,,,,,,896',
',13,,,10,925,35,893,,,35,35,,,10,10,13,,,13,812,,,,,,,,,,,,35,958,,812',
',12,13,913,,914,,,294,13,,,872,874,13,,12,,,12,,,13,,208,441,,,910,',
',910,759,14,759,,759,,12,290,35,,,312,10,12,,634,10,10,12,,638,,,,,634',
'12,,,35,35,,,762,,,,,10,,14,14,,,,,,365,,,,,,,955,,,,,,,14,759,,,14',
',,,,14,,,,,,,634,634,634,,35,10,759,,924,,,,,,,,,,,35,,,35,,,,10,10',
',,,,,,,,,,,,,35,,,,,,,35,,217,,,35,249,249,249,,,,,35,704,705,,,14,',
',,304,305,306,,,,,,10,14,,,928,720,,249,249,722,,14,14,,730,10,290,',
'10,,,,,,,,,,290,,,,,,,,,10,,,,,,,10,,,,,10,,,,,,,,10,,,,,,,,,,,,,,,',
',,,,14,,,,14,14,,,,,796,,,,,,,,,,,,,799,,869,14,,,,,,,804,805,,,,,634',
',,638,,634,,,,,,,,,,,,,,,,,,,,,,,,,,14,,,419,249,427,249,249,,,,446',
',,,,,,,,,14,14,,,217,,459,460,461,462,463,464,465,466,467,468,469,470',
'471,472,473,474,475,476,477,478,479,480,481,482,483,484,,,870,,,,,,249',
',249,,,,,249,318,,,,14,,249,249,927,,,,,,,249,,,,14,,,14,,,,,,,,888',
',,,,,,,,,,14,,,,536,,,14,,,898,899,14,,,,,,,,14,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,922,,,293,293,,,,,,293,293,293,,,934,,,,,,,,,,',
'293,,,,,,,,293,293,,944,,420,424,,,,949,,,,,953,,,,,,,249,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,249,249,,446,648,427,,,,,,490,,492,,,,,493,,,,,,',
',,,,,,,,,,,249,,249,,249,,,,,,,,,,,,,,,672,,,,,,,,,,,,,,249,,,249,,',
',,,,,695,696,697,,,,,,,,,,249,,,249,,,,,,,,,293,,293,293,293,293,293',
'293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293',
'293,293,293,293,249,,,249,,,,,293,249,293,,,,,293,,,,,,,,,,,,,,,,,,',
',,,,,293,,,773,,249,,626,779,781,,,,293,784,,,786,,,,,293,,,,,,793,',
',,,,,,249,,,,,,,,,,,,249,249,,,,,,,,,,,,,,,,,,,,,,,,657,,318,,660,249',
',,,,,293,,,,,,,,673,,,,,,,,,,,,,,,,,249,,,,,,,,,,,,,,,,,,,,657,,,318',
'249,,,293,,,,,,,,,,,,,,,,,249,873,875,,,,,,,,,,,779,781,784,293,293',
'293,,,,,,,,,249,,,,,,,,,,,,,,,,,,,,,,293,,293,,293,,,,,,,774,,,,,,,',
',,,,,,,,,,,,293,,,,,,,249,,,,798,,293,293,293,,,,,,875,873,657,318,293',
'249,,293,,,,,,,,,,,,293,,,,,249,,,,,,,,814,,,,,,,,,,,,,249,,,,,,,,,',
',,,,,,,,420,,,,,,249,,,,,,,,,,,,,,,,,293,851,293,,,,,,,,,,,,293,,,,',
',,871,,,,293,,,,,,,,293,,,,,,,,,,,,293,293,,420,,,,,,,,,293,,,,,,,,',
',,,293,,,,,,293,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,293,,917,,,,,,,,,,,,,',
',,,,,318,,,293,,,,,,,,,,,,,,,,933,,,,293,,,,,,,,,,,,,293,293,293,,933',
',,,,,,,,,293,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,293,,,,,,,,,,,,,,293,293,,,,293,,,,,,,,,293,,,,,,,,,,293,,,,,,,',
',,,,,,,,,,,,,293' ]
        racc_goto_table = arr = ::Array.new(2321, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'21,14,14,51,145,8,48,48,84,80,104,47,41,10,43,61,7,21,21,83,110,35,21',
'21,21,47,22,53,141,107,21,21,21,77,77,154,20,50,50,6,26,29,29,29,53',
'46,53,53,53,53,53,147,21,21,106,79,79,21,21,4,42,21,21,21,48,148,20',
'33,33,33,52,52,29,24,24,26,129,83,48,151,26,26,129,45,26,2,54,54,54',
'56,56,56,154,55,55,101,39,55,78,21,87,52,52,21,21,21,21,21,21,16,16',
'88,38,16,89,7,90,4,142,142,91,56,11,7,7,92,26,26,26,26,33,33,33,93,60',
'20,126,126,47,94,126,95,96,20,20,11,97,98,44,99,100,86,102,103,85,16',
'16,16,16,109,151,105,109,109,12,31,31,31,82,110,81,5,22,22,15,18,19',
'141,44,44,44,112,113,115,116,117,60,60,60,118,119,48,120,2,124,21,21',
'21,21,21,21,48,125,76,21,21,21,127,128,74,44,44,130,44,21,21,131,154',
'29,29,132,133,17,135,137,139,73,72,26,26,64,20,145,144,43,145,80,63',
'26,53,27,34,34,34,59,149,58,44,1,,20,,17,,51,44,44,,,,54,54,,,,,61,',
'21,21,142,62,51,62,51,,104,21,,41,36,21,,,17,21,21,29,29,,62,,36,148',
'83,107,29,53,21,,53,53,36,36,,,,,129,21,,,45,42,6,33,33,20,,79,,17,20',
'106,52,,84,78,,17,17,,54,54,4,56,56,52,110,,,54,,44,56,20,141,39,147',
'21,21,46,39,18,18,18,,11,,,,18,44,38,,,,83,38,21,,,26,26,,,,,,,,21,83',
',145,60,35,33,,,33,35,,,35,,,,43,,33,16,16,53,26,14,,4,52,14,48,31,31',
'53,48,,,17,61,10,31,,,,22,22,,154,,44,,,,44,44,,17,,,8,,50,23,8,8,50',
'44,,,48,33,21,21,,62,62,53,44,,33,,51,,,,53,53,53,53,,29,29,23,23,23',
',,,53,53,,,,55,,,,,143,143,143,,,22,,145,22,,,41,,,,17,23,23,21,,17',
',,,21,,,,,44,21,,21,48,,21,77,,,,7,26,,17,,,48,,,21,,29,,23,29,109,',
',109,109,20,23,23,21,21,,56,,22,52,21,22,26,,57,57,61,22,51,,,,,9,21',
',,77,21,24,,,,21,77,21,48,,21,20,20,,48,80,21,83,83,,21,52,21,,8,,29',
',,29,104,,20,,56,29,20,83,,,,20,,26,,26,,111,,107,,111,,,21,21,,,,,21',
'23,,8,143,143,143,,,61,,34,16,,,,34,,21,,23,34,,53,44,,,41,53,62,44',
'21,111,,53,53,,,,41,,21,21,,,53,21,143,53,53,,,,,20,53,,53,21,,,108',
',44,44,,,20,,62,44,,,34,34,34,47,20,20,,,,,,44,52,,23,44,,109,23,23',
'44,,,,52,17,,9,56,21,,23,,,21,,,,21,21,,,23,,,,9,,,,,83,26,83,,54,48',
'83,,,21,,,,17,17,,21,21,,20,,,53,20,20,,53,18,18,,16,,,18,17,54,,,17',
',,,44,17,,20,,,,,51,23,33,21,,44,,111,,,,48,9,,,44,44,9,,57,44,57,21',
',21,21,,,,,,,44,,,,108,,,20,,,,,,26,,83,,,,,,,53,,54,,,,20,20,,,,,17',
',,,,,,,16,,21,,,17,21,44,111,,,44,44,,,17,17,21,,,21,53,,,,,,,,,,,,44',
'22,,53,,20,21,111,,111,,,52,21,,,18,18,21,,20,,,20,,,21,,21,48,,,108',
',,108,108,23,108,,108,,20,23,44,,,29,17,20,,57,17,17,20,,57,,,,,57,20',
',,44,44,,,111,,,,,17,,23,23,,,,,,23,,,,,,,111,,,,,,,23,108,,,23,,,,',
'23,,,,,,,57,57,57,,44,17,108,,44,,,,,,,,,,,44,,,44,,,,17,17,,,,,,,,',
',,,,,44,,,,,,,44,,28,,,44,28,28,28,,,,,44,9,9,,,23,,,,28,28,28,,,,,',
'17,23,,,17,9,,28,28,9,,23,23,,9,17,23,,17,,,,,,,,,,23,,,,,,,,,17,,,',
',,,17,,,,,17,,,,,,,,17,,,,,,,,,,,,,,,,,,,,23,,,,23,23,,,,,9,,,,,,,,',
',,,,9,,23,23,,,,,,,9,9,,,,,57,,,57,,57,,,,,,,,,,,,,,,,,,,,,,,,,,23,',
',28,28,28,28,28,,,,28,,,,,,,,,,23,23,,,28,,28,28,28,28,28,28,28,28,28',
'28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,,,9,,,,,,28,,28,',
',,,28,25,,,,23,,28,28,23,,,,,,,28,,,,23,,,23,,,,,,,,9,,,,,,,,,,,23,',
',,28,,,23,,,9,9,23,,,,,,,,23,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,9,,,37,37,,,,,,37,37,37,,,9,,,,,,,,,,,37,,,,,,,,37,37,,9,,25,25,,',
',9,,,,,9,,,,,,,28,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,28,28,,28,28,28,,,,,',
'25,,25,,,,,25,,,,,,,,,,,,,,,,,,28,,28,,28,,,,,,,,,,,,,,,28,,,,,,,,,',
',,,,28,,,28,,,,,,,,28,28,28,,,,,,,,,,28,,,28,,,,,,,,,37,,37,37,37,37',
'37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,28',
',,28,,,,,37,28,37,,,,,37,,,,,,,,,,,,,,,,,,,,,,,,37,,,28,,28,,25,28,28',
',,,37,28,,,28,,,,,37,,,,,,28,,,,,,,,28,,,,,,,,,,,,28,28,,,,,,,,,,,,',
',,,,,,,,,,,25,,25,,25,28,,,,,,37,,,,,,,,25,,,,,,,,,,,,,,,,,28,,,,,,',
',,,,,,,,,,,,,25,,,25,28,,,37,,,,,,,,,,,,,,,,,28,28,28,,,,,,,,,,,28,28',
'28,37,37,37,,,,,,,,,28,,,,,,,,,,,,,,,,,,,,,,37,,37,,37,,,,,,,25,,,,',
',,,,,,,,,,,,,,,37,,,,,,,28,,,,25,,37,37,37,,,,,,28,28,25,25,37,28,,37',
',,,,,,,,,,,37,,,,,28,,,,,,,,25,,,,,,,,,,,,,28,,,,,,,,,,,,,,,,,,25,,',
',,,28,,,,,,,,,,,,,,,,,37,25,37,,,,,,,,,,,,37,,,,,,,25,,,,37,,,,,,,,37',
',,,,,,,,,,,37,37,,25,,,,,,,,,37,,,,,,,,,,,,37,,,,,,37,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,37,,25,,,,,,,,,,,,,,,,,,,25,,,37,,,,,,,,,,,,,,,,25,',
',,37,,,,,,,,,,,,,37,37,37,,25,,,,,,,,,,37,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,37,,,,,,,,,,,,,,37,37,,,,37,,,,,,,',
',37,,,,,,,,,,37,,,,,,,,,,,,,,,,,,,,,37' ]
        racc_goto_check = arr = ::Array.new(2321, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_goto_pointer = [
   nil,   248,    85,   nil,    56,    72,    36,    16,  -304,   541,
  -525,  -577,  -647,   nil,    -6,   166,    52,   222,   157,   114,
    36,     0,   -27,   442,  -123,  1270,    23,   131,  1062,    19,
   nil,   143,   nil,  -134,   215,  -246,  -205,  1399,    82,    66,
   nil,   -19,    28,  -284,   148,  -279,   -18,   -54,    -1,   nil,
    30,   -38,    39,   -29,    64,  -220,    67,   536,   -22,  -255,
  -308,  -237,  -216,  -269,   -39,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   162,   172,   154,   nil,   147,  -314,  -622,  -522,
  -343,   108,  -198,    16,  -592,    89,  -228,    49,    52,  -609,
    56,  -607,  -463,  -769,  -455,  -226,  -703,    82,  -452,  -229,
  -451,  -768,    96,  -168,   -46,  -398,  -501,   -27,    97,  -167,
  -580,    68,   161,   -64,   nil,   -89,   -89,  -749,  -393,  -510,
  -623,   nil,   nil,   nil,   123,   129,    61,   130,  -181,  -307,
   134,  -552,  -388,  -388,   nil,  -526,   nil,  -628,   nil,  -627,
   nil,  -572,  -639,  -272,  -623,  -334,   nil,  -508,  -273,  -473,
   nil,  -779,   nil,   nil,  -454 ]

racc_goto_default = [
   nil,   nil,   nil,     3,   nil,     4,   353,   279,   nil,   538,
   nil,   831,   nil,   278,   nil,   nil,   nil,   212,    16,    11,
   213,   303,   nil,   211,   nil,   255,    15,   nil,    19,    20,
    21,   nil,    25,   691,   nil,   nil,   nil,    26,    29,   nil,
    31,    34,    33,   nil,   209,   363,   nil,   116,   435,   115,
    69,   nil,    42,   311,   313,   nil,   314,   433,   nil,   nil,
   635,   486,   253,   nil,   nil,   269,    43,    44,    45,    46,
    47,    48,    49,   nil,   270,    55,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   573,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   326,   325,   709,   328,   nil,
   329,   330,   nil,   nil,   439,   nil,   nil,   nil,   nil,   nil,
   nil,    68,    70,    71,    72,   nil,   nil,   nil,   nil,   611,
   nil,   nil,   nil,   nil,   395,   750,   753,   758,   755,   756,
   757,   911,   nil,   nil,   761,   337,   332,   339,   nil,   567,
   568,   765,   342,   345,   260 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 143, :_reduce_none,
  2, 144, :_reduce_2,
  0, 145, :_reduce_3,
  1, 145, :_reduce_4,
  3, 145, :_reduce_5,
  1, 147, :_reduce_none,
  4, 147, :_reduce_7,
  4, 150, :_reduce_8,
  2, 151, :_reduce_9,
  0, 155, :_reduce_10,
  1, 155, :_reduce_11,
  3, 155, :_reduce_12,
  0, 169, :_reduce_13,
  4, 149, :_reduce_14,
  3, 149, :_reduce_15,
  3, 149, :_reduce_none,
  3, 149, :_reduce_17,
  2, 149, :_reduce_18,
  3, 149, :_reduce_19,
  3, 149, :_reduce_20,
  3, 149, :_reduce_21,
  3, 149, :_reduce_22,
  3, 149, :_reduce_23,
  4, 149, :_reduce_none,
  3, 149, :_reduce_25,
  3, 149, :_reduce_26,
  3, 149, :_reduce_27,
  6, 149, :_reduce_none,
  6, 149, :_reduce_none,
  5, 149, :_reduce_30,
  5, 149, :_reduce_none,
  5, 149, :_reduce_none,
  3, 149, :_reduce_none,
  3, 149, :_reduce_34,
  3, 149, :_reduce_35,
  3, 149, :_reduce_36,
  1, 149, :_reduce_none,
  1, 168, :_reduce_none,
  3, 168, :_reduce_39,
  3, 168, :_reduce_40,
  2, 168, :_reduce_41,
  2, 168, :_reduce_42,
  1, 168, :_reduce_none,
  1, 158, :_reduce_none,
  1, 160, :_reduce_none,
  1, 160, :_reduce_none,
  2, 160, :_reduce_47,
  2, 160, :_reduce_48,
  2, 160, :_reduce_49,
  1, 172, :_reduce_none,
  4, 172, :_reduce_none,
  4, 172, :_reduce_none,
  4, 172, :_reduce_none,
  4, 177, :_reduce_none,
  2, 171, :_reduce_55,
  3, 171, :_reduce_none,
  4, 171, :_reduce_57,
  5, 171, :_reduce_none,
  4, 171, :_reduce_59,
  5, 171, :_reduce_none,
  4, 171, :_reduce_61,
  5, 171, :_reduce_none,
  2, 171, :_reduce_63,
  2, 171, :_reduce_64,
  1, 161, :_reduce_65,
  3, 161, :_reduce_66,
  1, 181, :_reduce_67,
  3, 181, :_reduce_68,
  1, 180, :_reduce_69,
  2, 180, :_reduce_70,
  3, 180, :_reduce_71,
  5, 180, :_reduce_none,
  2, 180, :_reduce_73,
  4, 180, :_reduce_none,
  2, 180, :_reduce_75,
  1, 180, :_reduce_76,
  3, 180, :_reduce_none,
  1, 183, :_reduce_78,
  3, 183, :_reduce_79,
  2, 182, :_reduce_80,
  3, 182, :_reduce_81,
  1, 185, :_reduce_none,
  3, 185, :_reduce_none,
  1, 184, :_reduce_84,
  4, 184, :_reduce_85,
  3, 184, :_reduce_86,
  3, 184, :_reduce_none,
  3, 184, :_reduce_none,
  3, 184, :_reduce_none,
  2, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 159, :_reduce_92,
  4, 159, :_reduce_93,
  4, 159, :_reduce_94,
  3, 159, :_reduce_95,
  3, 159, :_reduce_96,
  3, 159, :_reduce_97,
  3, 159, :_reduce_98,
  2, 159, :_reduce_99,
  1, 159, :_reduce_none,
  1, 187, :_reduce_none,
  2, 188, :_reduce_102,
  1, 188, :_reduce_103,
  3, 188, :_reduce_104,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_108,
  1, 189, :_reduce_109,
  1, 156, :_reduce_110,
  1, 156, :_reduce_none,
  1, 157, :_reduce_112,
  3, 157, :_reduce_113,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  3, 170, :_reduce_188,
  5, 170, :_reduce_189,
  3, 170, :_reduce_190,
  6, 170, :_reduce_191,
  6, 170, :_reduce_192,
  5, 170, :_reduce_193,
  5, 170, :_reduce_none,
  5, 170, :_reduce_none,
  5, 170, :_reduce_none,
  4, 170, :_reduce_none,
  3, 170, :_reduce_none,
  3, 170, :_reduce_199,
  3, 170, :_reduce_200,
  3, 170, :_reduce_201,
  3, 170, :_reduce_202,
  3, 170, :_reduce_203,
  3, 170, :_reduce_204,
  3, 170, :_reduce_205,
  3, 170, :_reduce_206,
  4, 170, :_reduce_207,
  4, 170, :_reduce_208,
  2, 170, :_reduce_209,
  2, 170, :_reduce_210,
  3, 170, :_reduce_211,
  3, 170, :_reduce_212,
  3, 170, :_reduce_213,
  3, 170, :_reduce_214,
  3, 170, :_reduce_215,
  3, 170, :_reduce_216,
  3, 170, :_reduce_217,
  3, 170, :_reduce_218,
  3, 170, :_reduce_219,
  3, 170, :_reduce_220,
  3, 170, :_reduce_221,
  3, 170, :_reduce_222,
  3, 170, :_reduce_223,
  2, 170, :_reduce_224,
  2, 170, :_reduce_225,
  3, 170, :_reduce_226,
  3, 170, :_reduce_227,
  3, 170, :_reduce_228,
  3, 170, :_reduce_229,
  3, 170, :_reduce_230,
  5, 170, :_reduce_231,
  1, 170, :_reduce_none,
  1, 167, :_reduce_none,
  1, 164, :_reduce_234,
  2, 164, :_reduce_235,
  2, 164, :_reduce_236,
  4, 164, :_reduce_237,
  2, 164, :_reduce_238,
  3, 199, :_reduce_239,
  2, 201, :_reduce_none,
  1, 202, :_reduce_241,
  1, 202, :_reduce_none,
  1, 200, :_reduce_243,
  1, 200, :_reduce_none,
  2, 200, :_reduce_245,
  4, 200, :_reduce_246,
  2, 200, :_reduce_247,
  1, 173, :_reduce_248,
  2, 173, :_reduce_249,
  2, 173, :_reduce_250,
  4, 173, :_reduce_251,
  1, 173, :_reduce_252,
  4, 205, :_reduce_none,
  1, 205, :_reduce_none,
  0, 207, :_reduce_255,
  2, 176, :_reduce_256,
  1, 206, :_reduce_none,
  2, 206, :_reduce_258,
  3, 206, :_reduce_259,
  2, 204, :_reduce_260,
  2, 203, :_reduce_261,
  0, 203, :_reduce_262,
  1, 196, :_reduce_263,
  2, 196, :_reduce_264,
  3, 196, :_reduce_265,
  4, 196, :_reduce_266,
  3, 166, :_reduce_267,
  4, 166, :_reduce_268,
  2, 166, :_reduce_269,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  0, 229, :_reduce_279,
  4, 194, :_reduce_280,
  4, 194, :_reduce_281,
  3, 194, :_reduce_282,
  3, 194, :_reduce_283,
  2, 194, :_reduce_284,
  4, 194, :_reduce_285,
  4, 194, :_reduce_286,
  3, 194, :_reduce_287,
  3, 194, :_reduce_288,
  1, 194, :_reduce_289,
  4, 194, :_reduce_290,
  3, 194, :_reduce_291,
  1, 194, :_reduce_292,
  5, 194, :_reduce_293,
  4, 194, :_reduce_294,
  3, 194, :_reduce_295,
  2, 194, :_reduce_296,
  1, 194, :_reduce_none,
  2, 194, :_reduce_298,
  2, 194, :_reduce_299,
  6, 194, :_reduce_300,
  6, 194, :_reduce_301,
  0, 230, :_reduce_302,
  0, 231, :_reduce_303,
  7, 194, :_reduce_304,
  0, 232, :_reduce_305,
  0, 233, :_reduce_306,
  7, 194, :_reduce_307,
  5, 194, :_reduce_308,
  4, 194, :_reduce_309,
  5, 194, :_reduce_310,
  0, 234, :_reduce_311,
  0, 235, :_reduce_312,
  9, 194, :_reduce_313,
  0, 236, :_reduce_314,
  6, 194, :_reduce_315,
  0, 237, :_reduce_316,
  0, 238, :_reduce_317,
  8, 194, :_reduce_318,
  0, 239, :_reduce_319,
  0, 240, :_reduce_320,
  6, 194, :_reduce_321,
  0, 241, :_reduce_322,
  6, 194, :_reduce_323,
  0, 242, :_reduce_324,
  0, 243, :_reduce_325,
  9, 194, :_reduce_326,
  1, 194, :_reduce_327,
  1, 194, :_reduce_328,
  1, 194, :_reduce_329,
  1, 194, :_reduce_none,
  1, 163, :_reduce_none,
  1, 219, :_reduce_none,
  1, 219, :_reduce_none,
  1, 219, :_reduce_none,
  2, 219, :_reduce_none,
  1, 221, :_reduce_none,
  1, 221, :_reduce_none,
  1, 221, :_reduce_none,
  2, 218, :_reduce_339,
  3, 244, :_reduce_340,
  2, 244, :_reduce_341,
  1, 244, :_reduce_none,
  1, 244, :_reduce_none,
  3, 245, :_reduce_344,
  3, 245, :_reduce_345,
  1, 220, :_reduce_346,
  5, 220, :_reduce_347,
  1, 153, :_reduce_none,
  2, 153, :_reduce_349,
  1, 247, :_reduce_350,
  3, 247, :_reduce_351,
  3, 248, :_reduce_352,
  1, 178, :_reduce_none,
  2, 178, :_reduce_354,
  1, 178, :_reduce_355,
  3, 178, :_reduce_356,
  1, 249, :_reduce_357,
  2, 251, :_reduce_358,
  1, 251, :_reduce_359,
  6, 246, :_reduce_360,
  4, 246, :_reduce_361,
  4, 246, :_reduce_362,
  2, 246, :_reduce_363,
  2, 246, :_reduce_364,
  4, 246, :_reduce_365,
  2, 246, :_reduce_366,
  2, 246, :_reduce_367,
  1, 246, :_reduce_368,
  0, 255, :_reduce_369,
  5, 254, :_reduce_370,
  2, 174, :_reduce_371,
  4, 174, :_reduce_none,
  4, 174, :_reduce_none,
  4, 174, :_reduce_none,
  2, 217, :_reduce_375,
  4, 217, :_reduce_376,
  4, 217, :_reduce_377,
  3, 217, :_reduce_378,
  4, 217, :_reduce_379,
  3, 217, :_reduce_380,
  2, 217, :_reduce_381,
  1, 217, :_reduce_382,
  0, 257, :_reduce_383,
  5, 216, :_reduce_384,
  0, 258, :_reduce_385,
  5, 216, :_reduce_386,
  0, 260, :_reduce_387,
  6, 222, :_reduce_388,
  1, 259, :_reduce_389,
  1, 259, :_reduce_none,
  6, 152, :_reduce_391,
  0, 152, :_reduce_392,
  1, 261, :_reduce_393,
  1, 261, :_reduce_none,
  1, 261, :_reduce_none,
  2, 262, :_reduce_396,
  1, 262, :_reduce_397,
  2, 154, :_reduce_398,
  1, 154, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 209, :_reduce_403,
  1, 265, :_reduce_none,
  2, 265, :_reduce_405,
  3, 266, :_reduce_406,
  1, 266, :_reduce_407,
  3, 210, :_reduce_408,
  3, 211, :_reduce_409,
  3, 212, :_reduce_410,
  3, 212, :_reduce_411,
  1, 269, :_reduce_412,
  3, 269, :_reduce_413,
  1, 270, :_reduce_414,
  2, 270, :_reduce_415,
  3, 213, :_reduce_416,
  3, 213, :_reduce_417,
  1, 272, :_reduce_418,
  3, 272, :_reduce_419,
  1, 267, :_reduce_420,
  2, 267, :_reduce_421,
  1, 268, :_reduce_422,
  2, 268, :_reduce_423,
  1, 271, :_reduce_424,
  0, 274, :_reduce_425,
  3, 271, :_reduce_426,
  0, 275, :_reduce_427,
  4, 271, :_reduce_428,
  1, 273, :_reduce_429,
  1, 273, :_reduce_430,
  1, 273, :_reduce_431,
  1, 273, :_reduce_none,
  2, 192, :_reduce_433,
  1, 192, :_reduce_434,
  1, 276, :_reduce_none,
  1, 276, :_reduce_none,
  1, 276, :_reduce_none,
  1, 276, :_reduce_none,
  3, 264, :_reduce_439,
  1, 263, :_reduce_440,
  1, 263, :_reduce_441,
  2, 263, :_reduce_442,
  2, 263, :_reduce_443,
  2, 263, :_reduce_444,
  2, 263, :_reduce_445,
  1, 186, :_reduce_446,
  1, 186, :_reduce_447,
  1, 186, :_reduce_448,
  1, 186, :_reduce_449,
  1, 186, :_reduce_450,
  1, 186, :_reduce_451,
  1, 186, :_reduce_452,
  1, 186, :_reduce_453,
  1, 186, :_reduce_454,
  1, 186, :_reduce_455,
  1, 186, :_reduce_456,
  1, 214, :_reduce_457,
  1, 162, :_reduce_458,
  1, 165, :_reduce_459,
  1, 165, :_reduce_none,
  1, 224, :_reduce_461,
  3, 224, :_reduce_462,
  2, 224, :_reduce_463,
  4, 226, :_reduce_464,
  2, 226, :_reduce_465,
  1, 278, :_reduce_none,
  1, 278, :_reduce_none,
  2, 279, :_reduce_468,
  1, 279, :_reduce_469,
  1, 280, :_reduce_470,
  2, 281, :_reduce_471,
  1, 281, :_reduce_472,
  1, 282, :_reduce_473,
  3, 282, :_reduce_474,
  4, 283, :_reduce_475,
  2, 283, :_reduce_476,
  2, 283, :_reduce_477,
  1, 283, :_reduce_478,
  2, 285, :_reduce_479,
  0, 285, :_reduce_480,
  6, 277, :_reduce_481,
  4, 277, :_reduce_482,
  4, 277, :_reduce_483,
  2, 277, :_reduce_484,
  4, 277, :_reduce_485,
  2, 277, :_reduce_486,
  2, 277, :_reduce_487,
  1, 277, :_reduce_488,
  0, 277, :_reduce_489,
  1, 287, :_reduce_none,
  1, 287, :_reduce_491,
  1, 288, :_reduce_492,
  1, 288, :_reduce_493,
  1, 288, :_reduce_494,
  1, 288, :_reduce_495,
  1, 289, :_reduce_496,
  3, 289, :_reduce_497,
  1, 223, :_reduce_none,
  1, 223, :_reduce_none,
  1, 291, :_reduce_500,
  3, 291, :_reduce_none,
  1, 292, :_reduce_502,
  3, 292, :_reduce_503,
  1, 290, :_reduce_none,
  4, 290, :_reduce_none,
  3, 290, :_reduce_none,
  2, 290, :_reduce_none,
  1, 290, :_reduce_none,
  1, 252, :_reduce_509,
  3, 252, :_reduce_510,
  3, 293, :_reduce_511,
  1, 286, :_reduce_512,
  3, 286, :_reduce_513,
  1, 294, :_reduce_none,
  1, 294, :_reduce_none,
  2, 253, :_reduce_516,
  1, 253, :_reduce_517,
  1, 295, :_reduce_none,
  1, 295, :_reduce_none,
  2, 250, :_reduce_520,
  2, 284, :_reduce_521,
  0, 284, :_reduce_522,
  1, 227, :_reduce_523,
  4, 227, :_reduce_524,
  0, 215, :_reduce_525,
  2, 215, :_reduce_526,
  1, 198, :_reduce_527,
  3, 198, :_reduce_528,
  3, 296, :_reduce_529,
  2, 296, :_reduce_530,
  1, 179, :_reduce_none,
  1, 179, :_reduce_none,
  1, 179, :_reduce_none,
  1, 175, :_reduce_none,
  1, 175, :_reduce_none,
  1, 175, :_reduce_none,
  1, 175, :_reduce_none,
  1, 256, :_reduce_none,
  1, 256, :_reduce_none,
  1, 256, :_reduce_none,
  1, 228, :_reduce_none,
  1, 228, :_reduce_none,
  0, 146, :_reduce_none,
  1, 146, :_reduce_none,
  0, 193, :_reduce_none,
  1, 193, :_reduce_none,
  0, 197, :_reduce_none,
  1, 197, :_reduce_none,
  1, 197, :_reduce_none,
  1, 225, :_reduce_none,
  1, 225, :_reduce_none,
  1, 148, :_reduce_none,
  2, 148, :_reduce_none,
  0, 195, :_reduce_554 ]

racc_reduce_n = 555

racc_shift_n = 968

racc_token_table = {
  false => 0,
  :error => 1,
  :kCLASS => 2,
  :kMODULE => 3,
  :kDEF => 4,
  :kUNDEF => 5,
  :kBEGIN => 6,
  :kRESCUE => 7,
  :kENSURE => 8,
  :kEND => 9,
  :kIF => 10,
  :kUNLESS => 11,
  :kTHEN => 12,
  :kELSIF => 13,
  :kELSE => 14,
  :kCASE => 15,
  :kWHEN => 16,
  :kWHILE => 17,
  :kUNTIL => 18,
  :kFOR => 19,
  :kBREAK => 20,
  :kNEXT => 21,
  :kREDO => 22,
  :kRETRY => 23,
  :kIN => 24,
  :kDO => 25,
  :kDO_COND => 26,
  :kDO_BLOCK => 27,
  :kDO_LAMBDA => 28,
  :kRETURN => 29,
  :kYIELD => 30,
  :kSUPER => 31,
  :kSELF => 32,
  :kNIL => 33,
  :kTRUE => 34,
  :kFALSE => 35,
  :kAND => 36,
  :kOR => 37,
  :kNOT => 38,
  :kIF_MOD => 39,
  :kUNLESS_MOD => 40,
  :kWHILE_MOD => 41,
  :kUNTIL_MOD => 42,
  :kRESCUE_MOD => 43,
  :kALIAS => 44,
  :kDEFINED => 45,
  :klBEGIN => 46,
  :klEND => 47,
  :k__LINE__ => 48,
  :k__FILE__ => 49,
  :k__ENCODING__ => 50,
  :tIDENTIFIER => 51,
  :tFID => 52,
  :tGVAR => 53,
  :tIVAR => 54,
  :tCONSTANT => 55,
  :tLABEL => 56,
  :tCVAR => 57,
  :tNTH_REF => 58,
  :tBACK_REF => 59,
  :tSTRING_CONTENT => 60,
  :tINTEGER => 61,
  :tFLOAT => 62,
  :tREGEXP_END => 63,
  :tUPLUS => 64,
  :tUMINUS => 65,
  :tUMINUS_NUM => 66,
  :tPOW => 67,
  :tCMP => 68,
  :tEQ => 69,
  :tEQQ => 70,
  :tNEQ => 71,
  :tGEQ => 72,
  :tLEQ => 73,
  :tANDOP => 74,
  :tOROP => 75,
  :tMATCH => 76,
  :tNMATCH => 77,
  :tJSDOT => 78,
  :tDOT => 79,
  :tDOT2 => 80,
  :tDOT3 => 81,
  :tAREF => 82,
  :tASET => 83,
  :tLSHFT => 84,
  :tRSHFT => 85,
  :tCOLON2 => 86,
  :tCOLON3 => 87,
  :tOP_ASGN => 88,
  :tASSOC => 89,
  :tLPAREN => 90,
  :tLPAREN2 => 91,
  :tRPAREN => 92,
  :tLPAREN_ARG => 93,
  :ARRAY_BEG => 94,
  :tRBRACK => 95,
  :tLBRACE => 96,
  :tLBRACE_ARG => 97,
  :tSTAR => 98,
  :tSTAR2 => 99,
  :tAMPER => 100,
  :tAMPER2 => 101,
  :tTILDE => 102,
  :tPERCENT => 103,
  :tDIVIDE => 104,
  :tPLUS => 105,
  :tMINUS => 106,
  :tLT => 107,
  :tGT => 108,
  :tPIPE => 109,
  :tBANG => 110,
  :tCARET => 111,
  :tLCURLY => 112,
  :tRCURLY => 113,
  :tBACK_REF2 => 114,
  :tSYMBEG => 115,
  :tSTRING_BEG => 116,
  :tXSTRING_BEG => 117,
  :tREGEXP_BEG => 118,
  :tWORDS_BEG => 119,
  :tAWORDS_BEG => 120,
  :tSTRING_DBEG => 121,
  :tSTRING_DVAR => 122,
  :tSTRING_END => 123,
  :tSTRING => 124,
  :tSYMBOL => 125,
  :tNL => 126,
  :tEH => 127,
  :tCOLON => 128,
  :tCOMMA => 129,
  :tSPACE => 130,
  :tSEMI => 131,
  :tLAMBDA => 132,
  :tLAMBEG => 133,
  :tLBRACK2 => 134,
  :tLBRACK => 135,
  :tJSLBRACK => 136,
  :tDSTAR => 137,
  :tEQL => 138,
  :tLOWEST => 139,
  "-@NUM" => 140,
  "+@NUM" => 141 }

racc_nt_base = 142

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "kCLASS",
  "kMODULE",
  "kDEF",
  "kUNDEF",
  "kBEGIN",
  "kRESCUE",
  "kENSURE",
  "kEND",
  "kIF",
  "kUNLESS",
  "kTHEN",
  "kELSIF",
  "kELSE",
  "kCASE",
  "kWHEN",
  "kWHILE",
  "kUNTIL",
  "kFOR",
  "kBREAK",
  "kNEXT",
  "kREDO",
  "kRETRY",
  "kIN",
  "kDO",
  "kDO_COND",
  "kDO_BLOCK",
  "kDO_LAMBDA",
  "kRETURN",
  "kYIELD",
  "kSUPER",
  "kSELF",
  "kNIL",
  "kTRUE",
  "kFALSE",
  "kAND",
  "kOR",
  "kNOT",
  "kIF_MOD",
  "kUNLESS_MOD",
  "kWHILE_MOD",
  "kUNTIL_MOD",
  "kRESCUE_MOD",
  "kALIAS",
  "kDEFINED",
  "klBEGIN",
  "klEND",
  "k__LINE__",
  "k__FILE__",
  "k__ENCODING__",
  "tIDENTIFIER",
  "tFID",
  "tGVAR",
  "tIVAR",
  "tCONSTANT",
  "tLABEL",
  "tCVAR",
  "tNTH_REF",
  "tBACK_REF",
  "tSTRING_CONTENT",
  "tINTEGER",
  "tFLOAT",
  "tREGEXP_END",
  "tUPLUS",
  "tUMINUS",
  "tUMINUS_NUM",
  "tPOW",
  "tCMP",
  "tEQ",
  "tEQQ",
  "tNEQ",
  "tGEQ",
  "tLEQ",
  "tANDOP",
  "tOROP",
  "tMATCH",
  "tNMATCH",
  "tJSDOT",
  "tDOT",
  "tDOT2",
  "tDOT3",
  "tAREF",
  "tASET",
  "tLSHFT",
  "tRSHFT",
  "tCOLON2",
  "tCOLON3",
  "tOP_ASGN",
  "tASSOC",
  "tLPAREN",
  "tLPAREN2",
  "tRPAREN",
  "tLPAREN_ARG",
  "ARRAY_BEG",
  "tRBRACK",
  "tLBRACE",
  "tLBRACE_ARG",
  "tSTAR",
  "tSTAR2",
  "tAMPER",
  "tAMPER2",
  "tTILDE",
  "tPERCENT",
  "tDIVIDE",
  "tPLUS",
  "tMINUS",
  "tLT",
  "tGT",
  "tPIPE",
  "tBANG",
  "tCARET",
  "tLCURLY",
  "tRCURLY",
  "tBACK_REF2",
  "tSYMBEG",
  "tSTRING_BEG",
  "tXSTRING_BEG",
  "tREGEXP_BEG",
  "tWORDS_BEG",
  "tAWORDS_BEG",
  "tSTRING_DBEG",
  "tSTRING_DVAR",
  "tSTRING_END",
  "tSTRING",
  "tSYMBOL",
  "tNL",
  "tEH",
  "tCOLON",
  "tCOMMA",
  "tSPACE",
  "tSEMI",
  "tLAMBDA",
  "tLAMBEG",
  "tLBRACK2",
  "tLBRACK",
  "tJSLBRACK",
  "tDSTAR",
  "tEQL",
  "tLOWEST",
  "\"-@NUM\"",
  "\"+@NUM\"",
  "$start",
  "program",
  "top_compstmt",
  "top_stmts",
  "opt_terms",
  "top_stmt",
  "terms",
  "stmt",
  "bodystmt",
  "compstmt",
  "opt_rescue",
  "opt_else",
  "opt_ensure",
  "stmts",
  "fitem",
  "undef_list",
  "expr_value",
  "lhs",
  "command_call",
  "mlhs",
  "var_lhs",
  "primary_value",
  "aref_args",
  "backref",
  "mrhs",
  "arg_value",
  "expr",
  "@1",
  "arg",
  "command",
  "block_command",
  "call_args",
  "block_call",
  "operation2",
  "command_args",
  "cmd_brace_block",
  "opt_block_var",
  "operation",
  "mlhs_basic",
  "mlhs_entry",
  "mlhs_head",
  "mlhs_item",
  "mlhs_node",
  "mlhs_post",
  "variable",
  "cname",
  "cpath",
  "fname",
  "op",
  "reswords",
  "symbol",
  "opt_nl",
  "primary",
  "none",
  "args",
  "trailer",
  "assocs",
  "paren_args",
  "opt_call_args",
  "rparen",
  "opt_paren_args",
  "opt_block_arg",
  "block_arg",
  "call_args2",
  "open_args",
  "@2",
  "literal",
  "strings",
  "xstring",
  "regexp",
  "words",
  "awords",
  "var_ref",
  "assoc_list",
  "brace_block",
  "method_call",
  "lambda",
  "then",
  "if_tail",
  "do",
  "case_body",
  "for_var",
  "superclass",
  "term",
  "f_arglist",
  "singleton",
  "dot_or_colon",
  "@3",
  "@4",
  "@5",
  "@6",
  "@7",
  "@8",
  "@9",
  "@10",
  "@11",
  "@12",
  "@13",
  "@14",
  "@15",
  "@16",
  "@17",
  "f_larglist",
  "lambda_body",
  "block_param",
  "f_block_optarg",
  "f_block_opt",
  "block_args_tail",
  "f_block_arg",
  "opt_block_args_tail",
  "f_arg",
  "f_rest_arg",
  "do_block",
  "@18",
  "operation3",
  "@19",
  "@20",
  "cases",
  "@21",
  "exc_list",
  "exc_var",
  "numeric",
  "dsym",
  "string",
  "string1",
  "string_contents",
  "xstring_contents",
  "word_list",
  "word",
  "string_content",
  "qword_list",
  "string_dvar",
  "@22",
  "@23",
  "sym",
  "f_args",
  "kwrest_mark",
  "f_kwrest",
  "f_label",
  "f_kw",
  "f_kwarg",
  "args_tail",
  "opt_f_block_arg",
  "opt_args_tail",
  "f_optarg",
  "f_norm_arg",
  "f_bad_arg",
  "f_arg_item",
  "f_margs",
  "f_marg",
  "f_marg_list",
  "f_opt",
  "restarg_mark",
  "blkarg_mark",
  "assoc" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

def _reduce_2(val, _values, result)
                      result = new_compstmt val[0]
                    
    result
end

def _reduce_3(val, _values, result)
                      result = new_block
                    
    result
end

def _reduce_4(val, _values, result)
                      result = new_block val[0]
                    
    result
end

def _reduce_5(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

# reduce 6 omitted

def _reduce_7(val, _values, result)
                      result = val[2]
                    
    result
end

def _reduce_8(val, _values, result)
                      result = new_body(val[0], val[1], val[2], val[3])
                    
    result
end

def _reduce_9(val, _values, result)
                      result = new_compstmt val[0]
                    
    result
end

def _reduce_10(val, _values, result)
                      result = new_block
                    
    result
end

def _reduce_11(val, _values, result)
                      result = new_block val[0]
                    
    result
end

def _reduce_12(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_13(val, _values, result)
                      lexer.lex_state = :expr_fname
                    
    result
end

def _reduce_14(val, _values, result)
                      result = new_alias(val[0], val[1], val[3])
                    
    result
end

def _reduce_15(val, _values, result)
                      result = s(:valias, value(val[1]).to_sym, value(val[2]).to_sym)
                    
    result
end

# reduce 16 omitted

def _reduce_17(val, _values, result)
                      result = s(:valias, value(val[1]).to_sym, value(val[2]).to_sym)
                    
    result
end

def _reduce_18(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_19(val, _values, result)
                      result = new_if(val[1], val[2], val[0], nil)
                    
    result
end

def _reduce_20(val, _values, result)
                      result = new_if(val[1], val[2], nil, val[0])
                    
    result
end

def _reduce_21(val, _values, result)
                      result = new_while(val[1], val[2], val[0])
                    
    result
end

def _reduce_22(val, _values, result)
                      result = new_until(val[1], val[2], val[0])
                    
    result
end

def _reduce_23(val, _values, result)
                      result = new_rescue_mod(val[1], val[0], val[2])
                    
    result
end

# reduce 24 omitted

def _reduce_25(val, _values, result)
                      result = new_assign(val[0], val[1], val[2])
                    
    result
end

def _reduce_26(val, _values, result)
                      result = s(:masgn, val[0], s(:to_ary, val[2]))
                    
    result
end

def _reduce_27(val, _values, result)
                      result = new_op_asgn val[1], val[0], val[2]
                    
    result
end

# reduce 28 omitted

# reduce 29 omitted

def _reduce_30(val, _values, result)
                      result = s(:op_asgn2, val[0], op_to_setter(val[2]), value(val[3]).to_sym, val[4])
                    
    result
end

# reduce 31 omitted

# reduce 32 omitted

# reduce 33 omitted

def _reduce_34(val, _values, result)
                      result = new_assign val[0], val[1], s(:svalue, val[2])
                    
    result
end

def _reduce_35(val, _values, result)
                      result = s(:masgn, val[0], s(:to_ary, val[2]))
                    
    result
end

def _reduce_36(val, _values, result)
                      result = s(:masgn, val[0], val[2])
                    
    result
end

# reduce 37 omitted

# reduce 38 omitted

def _reduce_39(val, _values, result)
                      result = s(:and, val[0], val[2])
                    
    result
end

def _reduce_40(val, _values, result)
                      result = s(:or, val[0], val[2])
                    
    result
end

def _reduce_41(val, _values, result)
                      result = new_unary_call(['!', []], val[1])
                    
    result
end

def _reduce_42(val, _values, result)
                      result = new_unary_call(val[0], val[1])
                    
    result
end

# reduce 43 omitted

# reduce 44 omitted

# reduce 45 omitted

# reduce 46 omitted

def _reduce_47(val, _values, result)
                      result = new_return(val[0], val[1])
                    
    result
end

def _reduce_48(val, _values, result)
                      result = new_break(val[0], val[1])
                    
    result
end

def _reduce_49(val, _values, result)
                      result = new_next(val[0], val[1])
                    
    result
end

# reduce 50 omitted

# reduce 51 omitted

# reduce 52 omitted

# reduce 53 omitted

# reduce 54 omitted

def _reduce_55(val, _values, result)
                      result = new_call(nil, val[0], val[1])
                    
    result
end

# reduce 56 omitted

def _reduce_57(val, _values, result)
                      result = new_js_call(val[0], val[2], val[3])
                    
    result
end

# reduce 58 omitted

def _reduce_59(val, _values, result)
                      result = new_call(val[0], val[2], val[3])
                    
    result
end

# reduce 60 omitted

def _reduce_61(val, _values, result)
                    result = new_call(val[0], val[2], val[3])
                  
    result
end

# reduce 62 omitted

def _reduce_63(val, _values, result)
                      result = new_super(val[0], val[1])
                    
    result
end

def _reduce_64(val, _values, result)
                      result = new_yield val[1]
                    
    result
end

def _reduce_65(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_66(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_67(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_68(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_69(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_70(val, _values, result)
                      result = val[0] << val[1]
                    
    result
end

def _reduce_71(val, _values, result)
                      result = val[0] << s(:splat, val[2])
                    
    result
end

# reduce 72 omitted

def _reduce_73(val, _values, result)
                      result = val[0] << s(:splat)
                    
    result
end

# reduce 74 omitted

def _reduce_75(val, _values, result)
                      result = s(:array, s(:splat, val[1]))
                    
    result
end

def _reduce_76(val, _values, result)
                      result = s(:array, s(:splat))
                    
    result
end

# reduce 77 omitted

def _reduce_78(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_79(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_80(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

def _reduce_81(val, _values, result)
                      result = val[0] << val[1]
                    
    result
end

# reduce 82 omitted

# reduce 83 omitted

def _reduce_84(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_85(val, _values, result)
                      args = val[2] ? val[2] : []
                      result = s(:attrasgn, val[0], :[]=, s(:arglist, *args))
                    
    result
end

def _reduce_86(val, _values, result)
                      result = new_call val[0], val[2], []
                    
    result
end

# reduce 87 omitted

# reduce 88 omitted

# reduce 89 omitted

# reduce 90 omitted

# reduce 91 omitted

def _reduce_92(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_93(val, _values, result)
                      result = new_js_attrasgn(val[0], val[2])
                    
    result
end

def _reduce_94(val, _values, result)
                      result = new_attrasgn(val[0], :[]=, val[2])
                    
    result
end

def _reduce_95(val, _values, result)
                      result = new_attrasgn(val[0], op_to_setter(val[2]))
                    
    result
end

def _reduce_96(val, _values, result)
                      result = new_attrasgn(val[0], op_to_setter(val[2]))
                    
    result
end

def _reduce_97(val, _values, result)
                      result = new_attrasgn(val[0], op_to_setter(val[2]))
                    
    result
end

def _reduce_98(val, _values, result)
                      result = new_colon2(val[0], val[1], val[2])
                    
    result
end

def _reduce_99(val, _values, result)
                      result = new_colon3(val[0], val[1])
                    
    result
end

# reduce 100 omitted

# reduce 101 omitted

def _reduce_102(val, _values, result)
                      result = new_colon3(val[0], val[1])
                    
    result
end

def _reduce_103(val, _values, result)
                      result = new_const(val[0])
                    
    result
end

def _reduce_104(val, _values, result)
                      result = new_colon2(val[0], val[1], val[2])
                    
    result
end

# reduce 105 omitted

# reduce 106 omitted

# reduce 107 omitted

def _reduce_108(val, _values, result)
                      lexer.lex_state = :expr_end
                      result = val[0]
                    
    result
end

def _reduce_109(val, _values, result)
                      lexer.lex_state = :expr_end
                      result = val[0]
                    
    result
end

def _reduce_110(val, _values, result)
                      result = new_sym(val[0])
                    
    result
end

# reduce 111 omitted

def _reduce_112(val, _values, result)
                      result = s(:undef, val[0])
                    
    result
end

def _reduce_113(val, _values, result)
                      result = val[0] << val[2]
                    
    result
end

# reduce 114 omitted

# reduce 115 omitted

# reduce 116 omitted

# reduce 117 omitted

# reduce 118 omitted

# reduce 119 omitted

# reduce 120 omitted

# reduce 121 omitted

# reduce 122 omitted

# reduce 123 omitted

# reduce 124 omitted

# reduce 125 omitted

# reduce 126 omitted

# reduce 127 omitted

# reduce 128 omitted

# reduce 129 omitted

# reduce 130 omitted

# reduce 131 omitted

# reduce 132 omitted

# reduce 133 omitted

# reduce 134 omitted

# reduce 135 omitted

# reduce 136 omitted

# reduce 137 omitted

# reduce 138 omitted

# reduce 139 omitted

# reduce 140 omitted

# reduce 141 omitted

# reduce 142 omitted

# reduce 143 omitted

# reduce 144 omitted

# reduce 145 omitted

# reduce 146 omitted

# reduce 147 omitted

# reduce 148 omitted

# reduce 149 omitted

# reduce 150 omitted

# reduce 151 omitted

# reduce 152 omitted

# reduce 153 omitted

# reduce 154 omitted

# reduce 155 omitted

# reduce 156 omitted

# reduce 157 omitted

# reduce 158 omitted

# reduce 159 omitted

# reduce 160 omitted

# reduce 161 omitted

# reduce 162 omitted

# reduce 163 omitted

# reduce 164 omitted

# reduce 165 omitted

# reduce 166 omitted

# reduce 167 omitted

# reduce 168 omitted

# reduce 169 omitted

# reduce 170 omitted

# reduce 171 omitted

# reduce 172 omitted

# reduce 173 omitted

# reduce 174 omitted

# reduce 175 omitted

# reduce 176 omitted

# reduce 177 omitted

# reduce 178 omitted

# reduce 179 omitted

# reduce 180 omitted

# reduce 181 omitted

# reduce 182 omitted

# reduce 183 omitted

# reduce 184 omitted

# reduce 185 omitted

# reduce 186 omitted

# reduce 187 omitted

def _reduce_188(val, _values, result)
                      result = new_assign(val[0], val[1], val[2])
                    
    result
end

def _reduce_189(val, _values, result)
                      result = new_assign val[0], val[1], s(:rescue_mod, val[2], val[4])
                    
    result
end

def _reduce_190(val, _values, result)
                      result = new_op_asgn val[1], val[0], val[2]
                    
    result
end

def _reduce_191(val, _values, result)
                      result = new_op_asgn1(val[0], val[2], val[4], val[5])
                    
    result
end

def _reduce_192(val, _values, result)
                      raise ".JS[...] #{val[4]} is not supported"
                    
    result
end

def _reduce_193(val, _values, result)
                      result = s(:op_asgn2, val[0], op_to_setter(val[2]), value(val[3]).to_sym, val[4])
                    
    result
end

# reduce 194 omitted

# reduce 195 omitted

# reduce 196 omitted

# reduce 197 omitted

# reduce 198 omitted

def _reduce_199(val, _values, result)
                      result = new_irange(val[0], val[1], val[2])
                    
    result
end

def _reduce_200(val, _values, result)
                      result = new_erange(val[0], val[1], val[2])
                    
    result
end

def _reduce_201(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_202(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_203(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_204(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_205(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_206(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_207(val, _values, result)
                      result = new_call new_binary_call(new_int(val[1]), val[2], val[3]), [:"-@", []], []
                    
    result
end

def _reduce_208(val, _values, result)
                      result = new_call new_binary_call(new_float(val[1]), val[2], val[3]), [:"-@", []], []
                    
    result
end

def _reduce_209(val, _values, result)
                      result = new_call val[1], [:"+@", []], []
                      if [:int, :float].include? val[1].type
                        result = val[1]
                      end
                    
    result
end

def _reduce_210(val, _values, result)
                      result = new_call val[1], [:"-@", []], []
                      if val[1].type == :int
                        val[1][1] = -val[1][1]
                        result = val[1]
                      elsif val[1].type == :float
                        val[1][1] = -val[1][1].to_f
                        result = val[1]
                      end
                    
    result
end

def _reduce_211(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_212(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_213(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_214(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_215(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_216(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_217(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_218(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_219(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_220(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_221(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_222(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_223(val, _values, result)
                      result = new_not(val[1], new_binary_call(
                                 val[0], ['=~', []], val[2]))
                    
    result
end

def _reduce_224(val, _values, result)
                      result = new_unary_call(val[0], val[1])
                    
    result
end

def _reduce_225(val, _values, result)
                      result = new_unary_call(val[0], val[1])
                    
    result
end

def _reduce_226(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_227(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_228(val, _values, result)
                      result = new_and(val[0], val[1], val[2])
                    
    result
end

def _reduce_229(val, _values, result)
                      result = new_or(val[0], val[1], val[2])
                    
    result
end

def _reduce_230(val, _values, result)
                      result = s(:defined, val[2])
                    
    result
end

def _reduce_231(val, _values, result)
                      result = new_if(val[1], val[0], val[2], val[4])
                    
    result
end

# reduce 232 omitted

# reduce 233 omitted

def _reduce_234(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_235(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_236(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_237(val, _values, result)
                      val[0] << s(:hash, *val[2])
                      result = val[0]
                    
    result
end

def _reduce_238(val, _values, result)
                      result = [s(:hash, *val[0])]
                    
    result
end

def _reduce_239(val, _values, result)
                      result = val[1]
                    
    result
end

# reduce 240 omitted

def _reduce_241(val, _values, result)
                      result = []
                    
    result
end

# reduce 242 omitted

def _reduce_243(val, _values, result)
                      result = []
                    
    result
end

# reduce 244 omitted

def _reduce_245(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_246(val, _values, result)
                      result = val[0]
                      result << new_hash(nil, val[2], nil)
                    
    result
end

def _reduce_247(val, _values, result)
                      result = [new_hash(nil, val[0], nil)]
                    
    result
end

def _reduce_248(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_249(val, _values, result)
                      result = val[0]
                      add_block_pass val[0], val[1]
                    
    result
end

def _reduce_250(val, _values, result)
                      result = [new_hash(nil, val[0], nil)]
                      add_block_pass result, val[1]
                    
    result
end

def _reduce_251(val, _values, result)
                      result = val[0]
                      result << new_hash(nil, val[2], nil)
                    
    result
end

def _reduce_252(val, _values, result)
                      result = []
                      add_block_pass result, val[0]
                    
    result
end

# reduce 253 omitted

# reduce 254 omitted

def _reduce_255(val, _values, result)
                      lexer.cmdarg_push 1
                    
    result
end

def _reduce_256(val, _values, result)
                      lexer.cmdarg_pop
                      result = val[1]
                    
    result
end

# reduce 257 omitted

def _reduce_258(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_259(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_260(val, _values, result)
                      result = new_block_pass(val[0], val[1])
                    
    result
end

def _reduce_261(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_262(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_263(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_264(val, _values, result)
                      result = [new_splat(val[0], val[1])]
                    
    result
end

def _reduce_265(val, _values, result)
                      result = val[0] << val[2]
                    
    result
end

def _reduce_266(val, _values, result)
                      result  = val[0] << new_splat(val[2], val[3])
                    
    result
end

def _reduce_267(val, _values, result)
                      val[0] << val[2]
                      result = s(:array, *val[0])
                    
    result
end

def _reduce_268(val, _values, result)
                      val[0] << s(:splat, val[3])
                      result = s(:array, *val[0])
                    
    result
end

def _reduce_269(val, _values, result)
                      result = s(:splat, val[1])
                    
    result
end

# reduce 270 omitted

# reduce 271 omitted

# reduce 272 omitted

# reduce 273 omitted

# reduce 274 omitted

# reduce 275 omitted

# reduce 276 omitted

# reduce 277 omitted

# reduce 278 omitted

def _reduce_279(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_280(val, _values, result)
                      result = s(:begin, val[2])
                    
    result
end

def _reduce_281(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_282(val, _values, result)
                      result = new_paren(val[0], val[1], val[2])
                    
    result
end

def _reduce_283(val, _values, result)
                      result = new_colon2(val[0], val[1], val[2])
                    
    result
end

def _reduce_284(val, _values, result)
                      result = new_colon3(val[0], val[1])
                    
    result
end

def _reduce_285(val, _values, result)
                      result = new_call val[0], [:[], []], val[2]
                    
    result
end

def _reduce_286(val, _values, result)
                      result = new_js_call val[0], [:[], []], val[2]
                    
    result
end

def _reduce_287(val, _values, result)
                      result = new_array(val[0], val[1], val[2])
                    
    result
end

def _reduce_288(val, _values, result)
                      result = new_hash(val[0], val[1], val[2])
                    
    result
end

def _reduce_289(val, _values, result)
                      result = new_return(val[0])
                    
    result
end

def _reduce_290(val, _values, result)
                      result = new_yield val[2]
                    
    result
end

def _reduce_291(val, _values, result)
                      result = s(:yield)
                    
    result
end

def _reduce_292(val, _values, result)
                      result = s(:yield)
                    
    result
end

def _reduce_293(val, _values, result)
                      result = s(:defined, val[3])
                    
    result
end

def _reduce_294(val, _values, result)
                      result = new_unary_call(['!', []], val[2])
                    
    result
end

def _reduce_295(val, _values, result)
                      result = new_unary_call(['!', []], new_nil(val[0]))
                    
    result
end

def _reduce_296(val, _values, result)
                      result = new_call(nil, val[0], [])
                      result << val[1]
                    
    result
end

# reduce 297 omitted

def _reduce_298(val, _values, result)
                      val[0] << val[1]
                      result = val[0]
                    
    result
end

def _reduce_299(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_300(val, _values, result)
                      result = new_if(val[0], val[1], val[3], val[4])
                    
    result
end

def _reduce_301(val, _values, result)
                      result = new_if(val[0], val[1], val[4], val[3])
                    
    result
end

def _reduce_302(val, _values, result)
                      lexer.cond_push 1
                      result = lexer.line
                    
    result
end

def _reduce_303(val, _values, result)
                      lexer.cond_pop
                    
    result
end

def _reduce_304(val, _values, result)
                      result = s(:while, val[2], val[5])
                    
    result
end

def _reduce_305(val, _values, result)
                      lexer.cond_push 1
                      result = lexer.line
                    
    result
end

def _reduce_306(val, _values, result)
                      lexer.cond_pop
                    
    result
end

def _reduce_307(val, _values, result)
                      result = s(:until, val[2], val[5])
                    
    result
end

def _reduce_308(val, _values, result)
                      result = s(:case, val[1], *val[3])
                    
    result
end

def _reduce_309(val, _values, result)
                      result = s(:case, nil, *val[2])
                    
    result
end

def _reduce_310(val, _values, result)
                      result = s(:case, nil, val[3])
                    
    result
end

def _reduce_311(val, _values, result)
                      lexer.cond_push 1
                      result = lexer.line
                    
    result
end

def _reduce_312(val, _values, result)
                      lexer.cond_pop
                    
    result
end

def _reduce_313(val, _values, result)
                      result = s(:for, val[4], val[1], val[7])
                    
    result
end

def _reduce_314(val, _values, result)
                      # ...
                    
    result
end

def _reduce_315(val, _values, result)
                      result = new_class val[0], val[1], val[2], val[4], val[5]
                    
    result
end

def _reduce_316(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_317(val, _values, result)
                      # ...
                    
    result
end

def _reduce_318(val, _values, result)
                      result = new_sclass(val[0], val[3], val[6], val[7])
                    
    result
end

def _reduce_319(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_320(val, _values, result)
                      # ...
                    
    result
end

def _reduce_321(val, _values, result)
                      result = new_module(val[0], val[2], val[4], val[5])
                    
    result
end

def _reduce_322(val, _values, result)
                      push_scope
                      lexer.lex_state = :expr_endfn
                    
    result
end

def _reduce_323(val, _values, result)
                      result = new_def(val[0], nil, val[1], val[3], val[4], val[5])
                      pop_scope
                    
    result
end

def _reduce_324(val, _values, result)
                       lexer.lex_state = :expr_fname
                    
    result
end

def _reduce_325(val, _values, result)
                      push_scope
                      lexer.lex_state = :expr_endfn
                    
    result
end

def _reduce_326(val, _values, result)
                      result = new_def(val[0], val[1], val[4], val[6], val[7], val[8])
                      pop_scope
                    
    result
end

def _reduce_327(val, _values, result)
                      result = new_break(val[0])
                    
    result
end

def _reduce_328(val, _values, result)
                      result = s(:next)
                    
    result
end

def _reduce_329(val, _values, result)
                      result = s(:redo)
                    
    result
end

# reduce 330 omitted

# reduce 331 omitted

# reduce 332 omitted

# reduce 333 omitted

# reduce 334 omitted

# reduce 335 omitted

# reduce 336 omitted

# reduce 337 omitted

# reduce 338 omitted

def _reduce_339(val, _values, result)
                      result = new_call nil, [:lambda, []], []
                      result << new_iter(val[0], val[1])
                    
    result
end

def _reduce_340(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_341(val, _values, result)
                      result = nil
                    
    result
end

# reduce 342 omitted

# reduce 343 omitted

def _reduce_344(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_345(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_346(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_347(val, _values, result)
                      result = new_if(val[0], val[1], val[3], val[4])
                    
    result
end

# reduce 348 omitted

def _reduce_349(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_350(val, _values, result)
                      result = s(:block, val[0])
                    
    result
end

def _reduce_351(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_352(val, _values, result)
                      result = new_assign(new_assignable(new_ident(
                                  val[0])), val[1], val[2])
                    
    result
end

# reduce 353 omitted

def _reduce_354(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_355(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_356(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_357(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_358(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_359(val, _values, result)
                      nil
                    
    result
end

def _reduce_360(val, _values, result)
                      result = new_block_args(val[0], val[2], val[4], val[5])
                    
    result
end

def _reduce_361(val, _values, result)
                      result = new_block_args(val[0], val[2], nil, val[3])
                    
    result
end

def _reduce_362(val, _values, result)
                      result = new_block_args(val[0], nil, val[2], val[3])
                    
    result
end

def _reduce_363(val, _values, result)
                      result = new_block_args(val[0], nil, nil, nil)
                    
    result
end

def _reduce_364(val, _values, result)
                      result = new_block_args(val[0], nil, nil, val[1])
                    
    result
end

def _reduce_365(val, _values, result)
                      result = new_block_args(nil, val[0], val[2], val[3])
                    
    result
end

def _reduce_366(val, _values, result)
                      result = new_block_args(nil, val[0], nil, val[1])
                    
    result
end

def _reduce_367(val, _values, result)
                      result = new_block_args(nil, nil, val[0], val[1])
                    
    result
end

def _reduce_368(val, _values, result)
                      result = new_block_args(nil, nil, nil, val[0])
                    
    result
end

def _reduce_369(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_370(val, _values, result)
                      result = new_iter val[2], val[3]
                      pop_scope
                    
    result
end

def _reduce_371(val, _values, result)
                      val[0] << val[1]
                      result = val[0]
                    
    result
end

# reduce 372 omitted

# reduce 373 omitted

# reduce 374 omitted

def _reduce_375(val, _values, result)
                      result = new_call(nil, val[0], val[1])
                    
    result
end

def _reduce_376(val, _values, result)
                      result = new_call(val[0], val[2], val[3])
                    
    result
end

def _reduce_377(val, _values, result)
                      result = new_js_call(val[0], val[2], val[3])
                    
    result
end

def _reduce_378(val, _values, result)
                      result = new_call(val[0], [:call, []], val[2])
                    
    result
end

def _reduce_379(val, _values, result)
                      result = new_call(val[0], val[2], val[3])
                    
    result
end

def _reduce_380(val, _values, result)
                      result = new_call(val[0], val[2])
                    
    result
end

def _reduce_381(val, _values, result)
                      result = new_super(val[0], val[1])
                    
    result
end

def _reduce_382(val, _values, result)
                      result = new_super(val[0], nil)
                    
    result
end

def _reduce_383(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_384(val, _values, result)
                      result = new_iter val[2], val[3]
                      pop_scope
                    
    result
end

def _reduce_385(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_386(val, _values, result)
                      result = new_iter val[2], val[3]
                      pop_scope
                    
    result
end

def _reduce_387(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_388(val, _values, result)
                      part = s(:when, s(:array, *val[2]), val[4])
                      result = [part]
                      result.push(*val[5]) if val[5]
                    
    result
end

def _reduce_389(val, _values, result)
                      result = [val[0]]
                    
    result
end

# reduce 390 omitted

def _reduce_391(val, _values, result)
                      exc = val[1] || s(:array)
                      exc << new_assign(val[2], val[2], s(:gvar, '$!'.intern)) if val[2]
                      result = [s(:resbody, exc, val[4])]
                      result.push val[5].first if val[5]
                    
    result
end

def _reduce_392(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_393(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

# reduce 394 omitted

# reduce 395 omitted

def _reduce_396(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_397(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_398(val, _values, result)
                      result = val[1].nil? ? s(:nil) : val[1]
                    
    result
end

# reduce 399 omitted

# reduce 400 omitted

# reduce 401 omitted

# reduce 402 omitted

def _reduce_403(val, _values, result)
                      result = new_str val[0]
                    
    result
end

# reduce 404 omitted

def _reduce_405(val, _values, result)
                    result = str_append val[0], val[1]
                  
    result
end

def _reduce_406(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_407(val, _values, result)
                      result = s(:str, value(val[0]))
                    
    result
end

def _reduce_408(val, _values, result)
                      result = new_xstr(val[0], val[1], val[2])
                    
    result
end

def _reduce_409(val, _values, result)
                      result = new_regexp val[1], val[2]
                    
    result
end

def _reduce_410(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_411(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_412(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_413(val, _values, result)
                      part = val[1]
                      part = s(:dstr, "", val[1]) if part.type == :evstr
                      result = val[0] << part
                    
    result
end

def _reduce_414(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_415(val, _values, result)
                      result = val[0].concat([val[1]])
                    
    result
end

def _reduce_416(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_417(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_418(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_419(val, _values, result)
                      result = val[0] << s(:str, value(val[1]))
                    
    result
end

def _reduce_420(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_421(val, _values, result)
                      result = str_append val[0], val[1]
                    
    result
end

def _reduce_422(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_423(val, _values, result)
                      result = str_append val[0], val[1]
                    
    result
end

def _reduce_424(val, _values, result)
                      result = new_str_content(val[0])
                    
    result
end

def _reduce_425(val, _values, result)
                      result = lexer.strterm
                      lexer.strterm = nil
                    
    result
end

def _reduce_426(val, _values, result)
                      lexer.strterm = val[1]
                      result = new_evstr(val[2])
                    
    result
end

def _reduce_427(val, _values, result)
                      lexer.cond_push 0
                      lexer.cmdarg_push 0
                      result = lexer.strterm
                      lexer.strterm = nil
                      lexer.lex_state = :expr_beg
                    
    result
end

def _reduce_428(val, _values, result)
                      lexer.strterm = val[1]
                      lexer.cond_lexpop
                      lexer.cmdarg_lexpop
                      result = new_evstr(val[2])
                    
    result
end

def _reduce_429(val, _values, result)
                      result = new_gvar(val[0])
                    
    result
end

def _reduce_430(val, _values, result)
                      result = new_ivar(val[0])
                    
    result
end

def _reduce_431(val, _values, result)
                      result = new_cvar(val[0])
                    
    result
end

# reduce 432 omitted

def _reduce_433(val, _values, result)
                      result = new_sym(val[1])
                      lexer.lex_state = :expr_end
                    
    result
end

def _reduce_434(val, _values, result)
                      result = new_sym(val[0])
                    
    result
end

# reduce 435 omitted

# reduce 436 omitted

# reduce 437 omitted

# reduce 438 omitted

def _reduce_439(val, _values, result)
                      result = new_dsym val[1]
                    
    result
end

def _reduce_440(val, _values, result)
                      result = new_int(val[0])
                    
    result
end

def _reduce_441(val, _values, result)
                      result = new_float(val[0])
                    
    result
end

def _reduce_442(val, _values, result)
                    result = negate_num(new_int(val[1]))
                  
    result
end

def _reduce_443(val, _values, result)
                    result = negate_num(new_float(val[1]))
                  
    result
end

def _reduce_444(val, _values, result)
                    result = new_int(val[1])
                  
    result
end

def _reduce_445(val, _values, result)
                    result = new_float(val[1])
                  
    result
end

def _reduce_446(val, _values, result)
                      result = new_ident(val[0])
                    
    result
end

def _reduce_447(val, _values, result)
                      result = new_ivar(val[0])
                    
    result
end

def _reduce_448(val, _values, result)
                      result = new_gvar(val[0])
                    
    result
end

def _reduce_449(val, _values, result)
                      result = new_const(val[0])
                    
    result
end

def _reduce_450(val, _values, result)
                      result = new_cvar(val[0])
                    
    result
end

def _reduce_451(val, _values, result)
                      result = new_nil(val[0])
                    
    result
end

def _reduce_452(val, _values, result)
                      result = new_self(val[0])
                    
    result
end

def _reduce_453(val, _values, result)
                      result = new_true(val[0])
                    
    result
end

def _reduce_454(val, _values, result)
                      result = new_false(val[0])
                    
    result
end

def _reduce_455(val, _values, result)
                      result = new___FILE__(val[0])
                    
    result
end

def _reduce_456(val, _values, result)
                      result = new___LINE__(val[0])
                    
    result
end

def _reduce_457(val, _values, result)
                      result = new_var_ref(val[0])
                    
    result
end

def _reduce_458(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_459(val, _values, result)
                      result = s(:nth_ref, value(val[0]))
                    
    result
end

# reduce 460 omitted

def _reduce_461(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_462(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_463(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_464(val, _values, result)
                      result = val[1]
                      lexer.lex_state = :expr_beg
                    
    result
end

def _reduce_465(val, _values, result)
                      result = val[0]
                      lexer.lex_state = :expr_beg
                    
    result
end

# reduce 466 omitted

# reduce 467 omitted

def _reduce_468(val, _values, result)
                      result = new_kwrestarg(val[1])
                    
    result
end

def _reduce_469(val, _values, result)
                      result = new_kwrestarg()
                    
    result
end

def _reduce_470(val, _values, result)
                      result = new_sym(val[0])
                    
    result
end

def _reduce_471(val, _values, result)
                      result = new_kwoptarg(val[0], val[1])
                    
    result
end

def _reduce_472(val, _values, result)
                      result = new_kwarg(val[0])
                    
    result
end

def _reduce_473(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_474(val, _values, result)
                      result = val[0]
                      result << val[2]
                    
    result
end

def _reduce_475(val, _values, result)
                      result = new_args_tail(val[0], val[2], val[3])
                    
    result
end

def _reduce_476(val, _values, result)
                      result = new_args_tail(val[0], nil, val[1])
                    
    result
end

def _reduce_477(val, _values, result)
                      result = new_args_tail(nil, val[0], val[1])
                    
    result
end

def _reduce_478(val, _values, result)
                      result = new_args_tail(nil, nil, val[0])
                    
    result
end

def _reduce_479(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_480(val, _values, result)
                      result = new_args_tail(nil, nil, nil)
                    
    result
end

def _reduce_481(val, _values, result)
                      result = new_args(val[0], val[2], val[4], val[5])
                    
    result
end

def _reduce_482(val, _values, result)
                      result = new_args(val[0], val[2], nil, val[3])
                    
    result
end

def _reduce_483(val, _values, result)
                      result = new_args(val[0], nil, val[2], val[3])
                    
    result
end

def _reduce_484(val, _values, result)
                      result = new_args(val[0], nil, nil, val[1])
                    
    result
end

def _reduce_485(val, _values, result)
                      result = new_args(nil, val[0], val[2], val[3])
                    
    result
end

def _reduce_486(val, _values, result)
                      result = new_args(nil, val[0], nil, val[1])
                    
    result
end

def _reduce_487(val, _values, result)
                      result = new_args(nil, nil, val[0], val[1])
                    
    result
end

def _reduce_488(val, _values, result)
                      result = new_args(nil, nil, nil, val[0])
                    
    result
end

def _reduce_489(val, _values, result)
                      result = new_args(nil, nil, nil, nil)
                    
    result
end

# reduce 490 omitted

def _reduce_491(val, _values, result)
                      result = value(val[0]).to_sym
                      scope.add_local result
                    
    result
end

def _reduce_492(val, _values, result)
                      raise 'formal argument cannot be a constant'
                    
    result
end

def _reduce_493(val, _values, result)
                      raise 'formal argument cannot be an instance variable'
                    
    result
end

def _reduce_494(val, _values, result)
                      raise 'formal argument cannot be a class variable'
                    
    result
end

def _reduce_495(val, _values, result)
                      raise 'formal argument cannot be a global variable'
                    
    result
end

def _reduce_496(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_497(val, _values, result)
                      result = val[1]
                    
    result
end

# reduce 498 omitted

# reduce 499 omitted

def _reduce_500(val, _values, result)
                      result = s(:lasgn, val[0])
                    
    result
end

# reduce 501 omitted

def _reduce_502(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

def _reduce_503(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

# reduce 504 omitted

# reduce 505 omitted

# reduce 506 omitted

# reduce 507 omitted

# reduce 508 omitted

def _reduce_509(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_510(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_511(val, _values, result)
                      result = new_assign(new_assignable(new_ident(val[0])), val[1], val[2])
                    
    result
end

def _reduce_512(val, _values, result)
                      result = s(:block, val[0])
                    
    result
end

def _reduce_513(val, _values, result)
                      result = val[0]
                      val[0] << val[2]
                    
    result
end

# reduce 514 omitted

# reduce 515 omitted

def _reduce_516(val, _values, result)
                      result = "*#{value(val[1])}".to_sym
                    
    result
end

def _reduce_517(val, _values, result)
                      result = :"*"
                    
    result
end

# reduce 518 omitted

# reduce 519 omitted

def _reduce_520(val, _values, result)
                      result = "&#{value(val[1])}".to_sym
                    
    result
end

def _reduce_521(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_522(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_523(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_524(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_525(val, _values, result)
                      result = []
                    
    result
end

def _reduce_526(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_527(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_528(val, _values, result)
                      result = val[0].push(*val[2])
                    
    result
end

def _reduce_529(val, _values, result)
                      result = [val[0], val[2]]
                    
    result
end

def _reduce_530(val, _values, result)
                      result = [new_sym(val[0]), val[1]]
                    
    result
end

# reduce 531 omitted

# reduce 532 omitted

# reduce 533 omitted

# reduce 534 omitted

# reduce 535 omitted

# reduce 536 omitted

# reduce 537 omitted

# reduce 538 omitted

# reduce 539 omitted

# reduce 540 omitted

# reduce 541 omitted

# reduce 542 omitted

# reduce 543 omitted

# reduce 544 omitted

# reduce 545 omitted

# reduce 546 omitted

# reduce 547 omitted

# reduce 548 omitted

# reduce 549 omitted

# reduce 550 omitted

# reduce 551 omitted

# reduce 552 omitted

# reduce 553 omitted

def _reduce_554(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module Opal
