#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.10
# from Racc grammer file "".
#

require 'racc/parser.rb'
module Opal
  class Parser < Racc::Parser


##### State transition tables begin ###

clist = [
'63,64,65,8,51,554,578,693,57,58,201,202,540,61,590,59,60,62,23,24,66',
'67,620,-502,268,620,22,28,27,89,88,90,91,578,708,17,583,660,201,202',
'508,7,41,6,9,93,92,83,50,85,84,86,87,94,95,619,81,82,619,38,39,37,268',
'-64,73,762,580,579,585,201,202,260,74,-436,-92,-90,589,767,261,561,-436',
'36,554,-91,30,-502,263,52,-94,554,339,338,32,580,579,554,40,100,741',
'740,-75,554,99,100,18,692,-502,267,99,79,73,75,76,77,78,100,-82,553',
'74,80,99,-440,63,64,65,303,51,56,-440,268,57,58,-436,53,54,61,707,59',
'60,62,254,255,66,67,620,267,-92,-90,253,286,290,89,88,90,91,100,303',
'215,-504,-83,99,-84,201,202,41,743,431,93,92,83,50,85,84,86,87,94,95',
'619,81,82,-82,38,39,37,-92,-90,-92,-90,693,-92,-90,263,100,-91,553,-91',
'693,99,-91,100,-445,553,847,206,99,100,210,553,476,52,99,100,267,553',
'-95,764,99,-82,40,201,202,578,-504,-83,-82,-84,214,521,620,263,523,79',
'73,75,76,77,78,-267,-524,578,74,80,201,202,-267,-524,-524,-524,-88,56',
'-524,-524,-524,100,-524,53,54,272,99,573,-83,619,-84,-524,-524,-524',
'574,-83,-274,-84,296,297,616,-524,-524,-274,-524,-524,-524,-524,-524',
'580,579,560,100,561,692,303,578,99,724,578,100,100,692,263,-267,99,99',
'580,579,576,-524,-524,-524,-524,-524,-524,-524,-524,-524,-524,-524,-524',
'-524,-524,263,511,-524,-524,-524,824,476,-524,512,263,-524,-274,223',
'-524,200,-524,223,-524,752,-524,767,-524,-524,-524,-524,-524,-524,-524',
'469,-524,-524,-524,580,579,591,580,579,581,100,521,476,892,523,99,-524',
'-524,-524,-524,893,-524,-508,504,505,-89,-444,-87,-524,-508,-508,-508',
'429,-444,-95,-508,-508,-433,-508,773,100,198,704,-443,-433,99,704,-508',
'199,776,-443,100,427,702,786,767,99,-508,-508,428,-508,-508,-508,-508',
'-508,100,601,-436,-445,-273,99,637,891,-275,-436,-267,-273,500,638,774',
'-275,-505,-267,537,501,-444,-508,-508,-508,-508,-508,-508,-508,-508',
'-508,-508,-508,-508,-508,-508,197,703,-508,-508,-508,703,606,-84,-274',
'-80,-508,429,540,-438,-92,-274,-88,-508,303,-508,-438,-508,-508,-508',
'-508,-508,-508,-508,-273,-508,-508,-508,-275,637,-267,-441,499,201,202',
'-442,638,-274,-441,-439,-508,-508,-442,-83,-274,-508,-439,339,338,509',
'-91,-273,-508,63,64,65,8,51,-273,-273,-273,57,58,-274,-273,-273,61,-273',
'59,60,62,23,24,66,67,521,303,777,525,22,28,27,89,88,90,91,-273,-273',
'17,-273,-273,-273,-273,-273,7,41,-274,9,93,92,83,50,85,84,86,87,94,95',
'521,81,82,523,38,39,37,-273,-273,-273,-273,-273,-273,-273,-273,-273',
'-273,-273,-273,-273,-273,530,531,-273,-273,-273,36,609,-444,30,521,-273',
'52,520,778,-444,540,32,-273,781,-273,40,-273,-273,-273,-273,-273,-273',
'-273,18,-273,510,-273,467,79,73,75,76,77,78,-321,767,-273,74,80,-273',
'-273,-321,-85,-273,-273,790,56,791,-505,-93,-275,-273,53,54,-506,-506',
'-506,-275,-506,467,394,-444,-506,-506,396,395,464,-506,-254,-506,-506',
'-506,-506,-506,-506,-506,786,767,726,223,-506,-506,-506,-506,-506,-506',
'-506,816,817,-506,818,94,95,-321,596,-273,-506,303,211,-506,-506,-506',
'-506,-506,-506,-506,-506,-506,-506,-275,-506,-506,700,-506,-506,-506',
'223,227,232,233,234,229,231,239,240,235,236,433,216,217,-273,432,237',
'238,524,-506,696,-273,-506,-506,561,-506,-505,806,508,808,-506,220,-506',
'226,-506,222,221,218,219,230,228,224,-506,225,811,812,430,-506,-506',
'-506,-506,-506,-506,814,527,469,-506,-506,688,241,-255,-226,600,685',
'-506,-506,63,64,65,-86,51,-506,-506,-273,57,58,-94,683,-63,61,534,59',
'60,62,254,255,66,67,673,537,538,397,253,28,27,89,88,90,91,540,549,215',
'668,-82,825,826,596,827,41,861,-90,93,92,83,50,85,84,86,87,94,95,263',
'81,82,263,38,39,37,223,227,232,233,234,229,231,239,240,235,236,667,216',
'217,242,861,237,238,384,206,830,831,210,660,666,52,336,335,339,338,252',
'220,730,226,40,222,221,218,219,230,228,224,214,225,833,375,-253,79,73',
'75,76,77,78,837,550,493,74,80,675,241,336,335,339,338,257,56,63,64,65',
'8,51,53,54,-81,57,58,758,842,844,61,-89,59,60,62,23,24,66,67,372,660',
'351,514,22,28,27,89,88,90,91,386,-504,17,850,336,335,339,338,7,41,675',
'9,93,92,83,50,85,84,86,87,94,95,652,81,82,562,38,39,37,223,227,232,233',
'234,229,231,239,240,235,236,854,216,217,855,303,237,238,650,36,-75,757',
'30,303,865,52,336,335,339,338,32,220,-256,226,40,222,221,218,219,230',
'228,224,18,225,649,469,866,79,73,75,76,77,78,868,295,647,74,80,294,241',
'63,64,65,8,51,56,-505,502,57,58,242,53,54,61,878,59,60,62,23,24,66,67',
'879,242,639,882,22,28,27,89,88,90,91,494,542,17,331,329,328,330,884',
'7,41,885,9,93,92,83,50,85,84,86,87,94,95,223,81,82,811,38,39,37,223',
'227,232,233,234,229,231,239,240,235,236,811,216,217,812,303,237,238',
'634,36,223,223,30,223,220,52,894,223,222,221,32,220,196,226,40,222,221',
'218,219,230,228,224,18,225,495,195,900,79,73,75,76,77,78,584,194,666',
'74,80,193,241,-507,-507,-507,223,-507,56,263,588,-507,-507,599,53,54',
'-507,107,-507,-507,-507,-507,-507,-507,-507,910,811,912,913,-507,-507',
'-507,-507,-507,-507,-507,-253,220,-507,598,96,222,221,218,219,-507,592',
'751,-507,-507,-507,-507,-507,-507,-507,-507,-507,-507,223,-507,-507',
'595,-507,-507,-507,223,227,232,233,234,229,231,239,240,235,236,,216',
'217,,,237,238,,-507,,,-507,-507,220,-507,,,222,221,-507,220,-507,226',
'-507,222,221,218,219,230,228,224,-507,225,,,,-507,-507,-507,-507,-507',
'-507,,,,-507,-507,,241,,-226,,,-507,-507,63,64,65,8,51,-507,-507,,57',
'58,,,,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,542,17,331',
'329,328,330,,7,41,,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37',
'223,227,232,233,234,229,231,239,240,235,236,,216,217,,,237,238,,36,',
',30,,,52,,,,,32,220,,226,40,222,221,218,219,230,228,224,18,225,,,,79',
'73,75,76,77,78,,,,74,80,,241,63,64,65,223,51,56,,,57,58,,53,54,61,,59',
'60,62,254,255,66,67,,,,,253,286,290,89,88,90,91,,220,215,,,222,221,218',
'219,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,223,227,232',
'233,234,229,231,239,240,235,236,,216,217,,,237,238,,206,,,210,,,52,',
',,,625,220,250,226,40,222,221,218,219,230,228,224,214,225,,,,79,73,75',
'76,77,78,,,,74,80,,241,63,64,65,8,51,56,,,57,58,,53,54,61,,59,60,62',
'23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,102,103,104,105,106,7,41,',
'9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,223,227,232,233,234',
'229,231,239,240,235,236,,216,217,,,237,238,,36,,,30,,,52,,,,,32,220',
',226,40,222,221,218,219,230,228,224,18,225,,,,79,73,75,76,77,78,,,,74',
'80,,241,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,',
'22,28,27,89,88,90,91,,,17,102,103,104,105,106,,41,,,93,92,83,50,85,84',
'86,87,94,95,,81,82,,38,39,37,223,227,232,233,234,229,231,239,240,235',
'236,,216,217,,,237,238,,206,,,210,211,,52,102,103,104,105,106,220,,226',
'40,222,221,218,219,230,228,224,18,225,,,,79,73,75,76,77,78,,,,74,80',
',241,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22',
'28,27,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81',
'82,,38,39,37,223,227,232,233,234,229,231,239,240,235,236,,216,217,,',
'237,238,,206,,,210,,,52,,,,,,220,,226,40,222,221,218,219,230,228,224',
'214,225,,,,79,73,75,76,77,78,,,,74,80,,241,63,64,65,8,51,56,,,57,58',
',53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,7',
'41,,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,223,227,232,233',
'234,229,231,239,240,235,236,,216,217,,,237,238,,36,,,30,,,52,,,,,32',
'220,,226,40,222,221,218,219,230,228,224,18,225,,,,79,73,75,76,77,78',
',,,74,80,,241,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66',
'67,,,,,253,286,290,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86',
'87,94,95,,81,82,,38,39,37,223,227,232,233,234,229,231,239,240,235,236',
',216,217,,,237,238,,206,,,210,,,52,,,,,625,220,,226,40,222,221,218,219',
'230,228,224,214,225,,,,79,73,75,76,77,78,,,,74,80,,241,63,64,65,,51',
'56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253,28,27,89,88,90',
'91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,223',
'227,232,233,234,229,231,239,240,235,236,,216,217,,,237,238,,206,,,210',
',542,52,331,329,328,330,252,220,250,226,40,222,221,218,219,230,228,224',
'214,225,,,,79,73,75,76,77,78,,,,74,80,,241,617,545,,,257,56,63,64,65',
'548,51,53,54,,57,58,,,,61,,59,60,62,254,255,66,67,,,,,253,28,27,89,88',
'90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37',
'223,227,232,233,234,229,231,239,240,235,236,,216,217,,,237,238,,206',
',,210,,542,52,331,329,328,330,252,220,250,226,40,222,221,218,219,230',
'228,224,214,225,,,,79,73,75,76,77,78,,,,74,80,,241,,545,,,257,56,63',
'64,65,548,51,53,54,,57,58,,,,61,,59,60,62,254,255,66,67,,,,,253,28,27',
'89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38',
'39,37,223,227,232,233,234,229,231,239,240,235,236,,216,217,,,237,238',
',206,,,210,,542,52,331,329,328,330,252,220,250,226,40,222,221,218,219',
'230,228,224,214,225,,,,79,73,75,76,77,78,,,,74,80,,241,,545,,,257,56',
'63,64,65,783,51,53,54,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,22,28,27',
'89,88,90,91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38',
'39,37,223,227,232,233,234,229,231,239,240,235,236,,216,217,,,237,238',
',206,,,210,,,52,,,,,,220,,226,40,222,221,218,219,230,228,224,18,225',
',,,79,73,75,76,77,78,,,,74,80,,241,63,64,65,,51,56,,,57,58,,53,54,61',
',59,60,62,254,255,66,67,,,,,253,28,27,89,88,90,91,,,215,,,,,,,41,,,93',
'92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,223,227,232,233,234,229',
'231,239,240,235,236,,216,217,,,237,238,,206,,,210,,,52,,,,,252,220,',
'226,40,222,221,218,219,230,228,224,214,225,,,,79,73,75,76,77,78,,-371',
',74,80,,241,,-371,-371,-371,257,56,-371,-371,-371,223,-371,53,54,,,',
',,,-371,-371,-371,,,,237,238,,,-371,-371,,-371,-371,-371,-371,-371,',
',,220,,226,,222,221,218,219,,,224,,225,,,,,,-371,-371,-371,-371,-371',
'-371,-371,-371,-371,-371,-371,-371,-371,-371,,,-371,-371,-371,,,-371',
',263,-371,,,-371,,-371,,-371,,-371,,-371,-371,-371,-371,-371,-371,-371',
',-371,-371,-371,,718,,331,329,328,330,,,,,,-371,-371,-371,-371,,-371',
'-281,,,,,,-371,-281,-281,-281,,,-281,-281,-281,,-281,223,,,333,712,',
',,,-281,-281,336,335,339,338,,237,238,-281,-281,,-281,-281,-281,-281',
'-281,,,,,,220,,226,,222,221,218,219,,,224,,225,,,,-281,-281,-281,-281',
'-281,-281,-281,-281,-281,-281,-281,-281,-281,-281,,,-281,-281,-281,',
',-281,,272,-281,,,-281,,-281,,-281,,-281,,-281,-281,-281,-281,-281,-281',
'-281,,-281,,-281,,,,,,,,,,,,,-281,-281,-281,-281,,-281,63,64,65,8,51',
',-281,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,',
'17,,,,,,7,41,,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,223,-526',
'-526,-526,-526,229,231,,,-526,-526,,,,,,237,238,,36,,,276,,,52,,,,,32',
'220,,226,40,222,221,218,219,230,228,224,18,225,,,,79,73,75,76,77,78',
',,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67',
',,,,253,286,290,89,88,90,91,,,215,,,,,,,287,,,93,92,83,50,85,84,86,87',
'94,95,,81,82,223,,323,291,331,329,328,330,,,,,,,,,237,238,,,,,,284,',
',281,,,52,,220,,,280,222,221,218,219,333,,718,,331,329,328,330,336,335',
'339,338,79,73,75,76,77,78,,745,,74,80,,,63,64,65,,51,56,,,57,58,,53',
'54,61,333,59,60,62,254,255,66,67,336,335,339,338,253,286,290,89,88,90',
'91,,,215,,,,,,,287,,,93,92,83,50,85,84,86,87,94,95,223,81,82,,,323,291',
'331,329,328,330,,,,,,237,238,,,,,,,,,284,,,210,,220,52,226,,222,221',
'218,219,,,224,333,225,,,,,,,336,335,339,338,79,73,75,76,77,78,,,,74',
'80,,,,293,,,,56,63,64,65,,51,53,54,,57,58,,,,61,,59,60,62,254,255,66',
'67,,,,,253,286,290,89,88,90,91,,,215,,,,,,,287,,,93,92,83,50,85,84,86',
'87,94,95,223,81,82,,,323,291,331,329,328,330,,,,,,237,238,,,,,,,,,873',
',,210,,220,52,226,,222,221,218,219,,,,333,318,718,,331,329,328,330,336',
'335,339,338,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53',
'54,61,333,59,60,62,254,255,66,67,336,335,339,338,253,286,290,89,88,90',
'91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,223',
'-526,-526,-526,-526,229,231,,,-526,-526,,,,,,237,238,,206,,,210,,,52',
',,,,,220,,226,40,222,221,218,219,230,228,224,214,225,,,,79,73,75,76',
'77,78,,,,74,80,,,63,64,65,8,51,56,,,57,58,,53,54,61,,59,60,62,23,24',
'66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,83,50,85,84,86',
'87,94,95,,81,82,,38,39,37,223,-526,-526,-526,-526,229,231,,,-526,-526',
',,,,,237,238,,36,,,30,,,52,,,,,32,220,,226,40,222,221,218,219,230,228',
'224,18,225,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,',
'53,54,61,,59,60,62,254,255,66,67,,,,,253,286,290,89,88,90,91,,,215,',
',,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,223,-526,-526',
'-526,-526,229,231,,,-526,-526,,,,,,237,238,,206,,,210,,,52,,,,,,220',
',226,40,222,221,218,219,230,228,224,214,225,,,,79,73,75,76,77,78,,,',
'74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,',
',,253,286,290,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94',
'95,,81,82,,38,39,37,223,227,232,233,234,229,231,239,240,235,236,,-526',
'-526,,,237,238,,206,,,210,,,52,,,,,,220,,226,40,222,221,218,219,230',
'228,224,214,225,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57',
'58,,53,54,61,,59,60,62,254,255,66,67,,,,,253,286,290,89,88,90,91,,,215',
',,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,223,-526,-526',
'-526,-526,229,231,,,-526,-526,,,,,,237,238,,206,,,210,,,52,,,,,,220',
',226,40,222,221,218,219,230,228,224,214,225,,,,79,73,75,76,77,78,,,',
'74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,',
',,253,286,290,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94',
'95,,81,82,,38,39,37,223,227,232,233,234,229,231,239,,235,236,,,,,,237',
'238,,206,,,210,,,52,,,,,,220,,226,40,222,221,218,219,230,228,224,214',
'225,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61',
',59,60,62,254,255,66,67,,,,,253,286,290,89,88,90,91,,,215,,,,,,,41,',
',93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,223,227,232,233,234',
'229,231,,,235,236,,,,,,237,238,,206,,,210,,,52,,,,,,220,,226,40,222',
'221,218,219,230,228,224,214,225,,,,79,73,75,76,77,78,,,,74,80,,,63,64',
'65,8,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88',
'90,91,,,17,,,,,,7,41,,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39',
'37,223,-526,-526,-526,-526,229,231,,,-526,-526,,,,,,237,238,,36,,,30',
',,52,,,,,32,220,,226,40,222,221,218,219,230,228,224,18,225,,,,79,73',
'75,76,77,78,,-268,,74,80,,,,-268,-268,-268,,56,-268,-268,-268,223,-268',
'53,54,,,,,,,,-268,-268,,,,237,238,,,-268,-268,,-268,-268,-268,-268,-268',
',,,220,,226,,222,221,218,219,,,224,,225,,,,,,-268,-268,-268,-268,-268',
'-268,-268,-268,-268,-268,-268,-268,-268,-268,,,-268,-268,-268,,,-268',
',,-268,,,-268,,-268,,-268,,-268,,-268,-268,-268,-268,-268,-268,-268',
',-268,,-268,,,,,,,,,,,,,-268,-268,-268,-268,,-268,,,-268,-268,,,-268',
'63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88',
'90,91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37',
'223,227,232,233,234,229,231,239,240,235,236,,-526,-526,,,237,238,,206',
',,210,,,52,,,,,,220,,226,40,222,221,218,219,230,228,224,18,225,,,,79',
'73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62',
'254,255,66,67,,,,,253,28,27,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50',
'85,84,86,87,94,95,,81,82,,38,39,37,223,,,,,,,,,,,,,,,,237,238,,206,',
',210,,,52,,,,,252,220,,226,40,222,221,218,219,,,,214,,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,257,56,63,64,65,,51,53,54,,57,58,,,,61,,59,60,62',
'254,255,66,67,,,,,253,286,290,89,88,90,91,,,215,,,,,,,41,,,93,92,83',
'50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,',
',52,,,,,252,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,257',
'56,63,64,65,,51,53,54,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,22,28,27',
'89,88,90,91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38',
'39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,18,,,,,79',
'73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62',
'254,255,66,67,,,,,253,286,290,89,88,90,91,,,215,,,,,,,41,,,93,92,83',
'50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,',
',52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65',
',51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90',
'91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,',
',,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76',
'77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66',
'67,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87',
'94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40',
',,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,',
'53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,',
'206,,,210,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,100',
',63,64,65,99,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253',
'286,290,89,88,90,91,,,215,,,,,,,287,,,93,92,83,50,85,84,86,87,94,95',
',81,82,,,718,291,331,329,328,330,,,,,,,,,,,,,,,,284,,,30,,,52,,,,,32',
',,,,333,712,,,,,,,336,335,339,338,79,73,75,76,77,78,,,,74,80,,,63,64',
'65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253,286,290',
'89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38',
'39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79',
'73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62',
'254,255,66,67,,,,,253,286,290,89,88,90,91,,,215,,,,,,,41,,,93,92,83',
'50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,',
',52,,,,,625,,250,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,,,,,',
',257,56,63,64,65,,51,53,54,,57,58,,,,61,,59,60,62,254,255,66,67,,,,',
'253,286,290,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94',
'95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,625,,,,40',
',,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,8,51,56,,,57,58',
',53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,7',
'41,,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,',
',,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74',
'80,,,63,64,65,8,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22',
'28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,83,50,85,84,86,87,94,95,,81',
'82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18',
',,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,',
'59,60,62,254,255,66,67,,,,,253,286,290,89,88,90,91,,,215,,,,,,,41,,',
'93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206',
',,210,,,52,,,,,,,250,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,',
',,,,,257,56,-501,-501,-501,,-501,53,54,,-501,-501,,,,-501,,-501,-501',
'-501,-501,-501,-501,-501,,-501,,,-501,-501,-501,-501,-501,-501,-501',
',,-501,,,,,,,-501,,,-501,-501,-501,-501,-501,-501,-501,-501,-501,-501',
',-501,-501,,-501,-501,-501,,,,,,,,,,,,,,,,,,,,-501,,,-501,-501,,-501',
',,,,-501,,-501,,-501,,,,,,,,-501,,-501,,,-501,-501,-501,-501,-501,-501',
',,,-501,-501,,,,,,,-501,-501,-502,-502,-502,,-502,-501,-501,,-502,-502',
',,,-502,,-502,-502,-502,-502,-502,-502,-502,,-502,,,-502,-502,-502,-502',
'-502,-502,-502,,,-502,,,,,,,-502,,,-502,-502,-502,-502,-502,-502,-502',
'-502,-502,-502,,-502,-502,,-502,-502,-502,,,,,,,,,,,,,,,,,,,,-502,,',
'-502,-502,,-502,,,,,-502,,-502,,-502,,,,,,,,-502,,-502,,,-502,-502,-502',
'-502,-502,-502,,,,-502,-502,,,,,,,-502,-502,63,64,65,,51,-502,-502,',
'57,58,,,,61,,59,60,62,254,255,66,67,,,,,253,286,290,89,88,90,91,,,215',
',,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,',
',,,,,,,,,206,,,210,,,52,,,,,252,,,,40,,,,,,,,214,,,,,79,73,75,76,77',
'78,,,,74,80,,,63,64,65,8,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66',
'67,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,6,9,93,92,83,50,85,84,86',
'87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,',
'40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,386,51,56,,,57',
'58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,',
',,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,',
',,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74',
'80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22',
'28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81',
'82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,18',
',,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,',
'59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92',
'83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210',
',,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65',
',51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90',
'91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,',
',,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76',
'77,78,,,,74,80,,,63,64,65,8,51,56,,,57,58,,53,54,61,,59,60,62,23,24',
'66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,83,50,85,84,86',
'87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,',
'40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,8,51,56,,,57',
'58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,',
',,7,41,6,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,',
',,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,',
',,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67',
',,,,253,286,290,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87',
'94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40',
',,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58',
',53,54,61,,59,60,62,254,255,66,67,,,,,253,286,290,89,88,90,91,,,215',
',,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,',
',,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78',
',,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67',
',,,,253,286,290,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87',
'94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40',
',,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,8,51,56,,,57,58',
',53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,7',
'41,,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,',
',,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74',
'80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22',
'28,27,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81',
'82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,403,,,,40,,,,,,,',
'214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,215,,,,,,,41,,,93',
'92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,',
',210,,,52,,,,,403,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,,',
'63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27',
'89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38',
'39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79',
'73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62',
'254,255,66,67,,,,,253,28,27,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50',
'85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52',
',,,,252,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,257,56',
'63,64,65,,51,53,54,,57,58,,,,61,,59,60,62,254,255,66,67,,,,,253,286',
'290,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82',
',38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,',
',,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59',
'60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,215,,,,,,,41,,,93,92,83',
'50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,',
',52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65',
',51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90',
'91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,',
',,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75',
'76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,23,24',
'66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,83,50,85,84,86',
'87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,',
'40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58',
',53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,',
'41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,',
',,,206,,,210,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253',
'286,290,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,',
'214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,8,51,56,,,57,58,,53,54',
'61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9',
'93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36',
',,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63',
'64,65,,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89',
'88,90,91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39',
'37,,,,,,,,,,,,,,,,,,,,206,,,210,,643,52,,,,,,,250,,40,,,,,,,,18,,,,',
'79,73,75,76,77,78,,,,74,80,,,63,64,65,8,51,56,,,57,58,,53,54,61,,59',
'60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,83',
'50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52',
',,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,8,51',
'56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91',
',,17,,,,,,7,41,,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,',
',,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76',
'77,78,,,,74,80,,,63,64,65,8,51,56,,,57,58,,53,54,61,,59,60,62,23,24',
'66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,83,50,85,84,86',
'87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,',
'40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,386,,56,63,64,65,8',
'51,53,54,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91',
',,17,,,,,,7,41,,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,',
',,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76',
'77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66',
'67,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87',
'94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,435,52,,,,,,,,',
'40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58',
',53,54,61,,59,60,62,254,255,66,67,,,,,253,286,290,89,88,90,91,,,215',
',,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,',
',,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78',
',,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,',
',,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95',
',81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,',
',18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,254,255,66,67,,,,,253,286,290,89,88,90,91,,,215,,,,,,,41',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,',
'206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253',
'286,290,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,',
'214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,254,255,66,67,,,,,253,286,290,89,88,90,91,,,215,,,,,,,41',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,',
'206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253',
'286,290,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,',
'214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,254,255,66,67,,,,,253,286,290,89,88,90,91,,,215,,,,,,,41',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,',
'206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253',
'286,290,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,',
'214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,254,255,66,67,,,,,253,286,290,89,88,90,91,,,215,,,,,,,41',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,',
'206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253',
'286,290,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,',
'214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,254,255,66,67,,,,,253,286,290,89,88,90,91,,,215,,,,,,,41',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,',
'206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253',
'286,290,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,',
'214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,254,255,66,67,,,,,253,286,290,89,88,90,91,,,215,,,,,,,41',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,',
'206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253',
'286,290,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,',
'214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,254,255,66,67,,,,,253,286,290,89,88,90,91,,,215,,,,,,,41',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,',
'206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253',
'286,290,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,',
'214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,254,255,66,67,,,,,253,286,290,89,88,90,91,,,215,,,,,,,41',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,',
'206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253',
'286,290,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,',
'214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,254,255,66,67,,,,,253,286,290,89,88,90,91,,,215,,,,,,,41',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,',
'206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253',
'286,290,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,',
'214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,254,255,66,67,,,,,253,286,290,89,88,90,91,,,215,,,,,,,41',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,',
'206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253',
'286,290,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,',
'214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,254,255,66,67,,,,,253,286,290,89,88,90,91,,,215,,,,,,,41',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,',
'206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253',
'286,290,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,',
'214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,254,255,66,67,,,,,253,286,290,89,88,90,91,,,215,,,,,,,41',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,',
'206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253',
'286,290,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,',
'214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,254,255,66,67,,,,,253,286,290,89,88,90,91,,,215,,,,,,,41',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,',
'206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253',
'286,290,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,',
'214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,254,255,66,67,,,,,253,28,27,89,88,90,91,,,215,,,,,,,41',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,',
'206,,,210,,,52,,,,,252,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74',
'80,,,,,,,257,56,63,64,65,,51,53,54,,57,58,,,,61,,59,60,62,23,24,66,67',
',,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87,94',
'95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,',
',,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53',
'54,61,,59,60,62,254,255,66,67,,,,,253,286,290,89,88,90,91,,,215,,,,',
',,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,',
',,,,,206,,,210,,,52,,,,,252,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,',
',,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67',
',,,,253,286,290,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87',
'94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40',
',,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58',
',53,54,61,,59,60,62,254,255,66,67,,,,,253,286,290,89,88,90,91,,,215',
',,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,',
',,,,,,,,,206,,,210,,,52,,,,,403,,,,40,,,,,,,,214,,,,,79,73,75,76,77',
'78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66',
'67,,,,,253,286,290,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86',
'87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,',
'40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57',
'58,,53,54,61,,59,60,62,254,255,66,67,,,,,253,286,290,89,88,90,91,,,215',
',,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,',
',,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78',
',,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67',
',,,,253,286,290,89,88,90,91,,,215,,,,,,,287,,,93,92,83,50,85,84,86,87',
'94,95,,81,82,,,323,291,331,329,328,330,,,,,,,,,,,,,,,,284,,,281,,,52',
',,,,,,,,,333,,533,,,,,,336,335,339,338,79,73,75,76,77,78,,,,74,80,,',
'63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253,286',
'290,89,88,90,91,,,215,,,,,,,287,,,93,92,83,50,85,84,563,87,94,95,,81',
'82,,,,291,,,,,,,,,,,,,,,,,,,,564,,,210,,,52,,,,,,,,,,,,,,,,,,,,,,79',
'73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62',
'254,255,66,67,,,,,253,286,290,89,88,90,91,,,215,,,,,,,287,,,93,92,83',
'50,85,84,563,87,94,95,,81,82,,,,291,,,,,,,,,,,,,,,,,,,,564,,,210,,,52',
',,,,,,,,,,,,,,,,,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,',
'57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253,28,27,89,88,90,91,,',
'215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,',
',,,,,,,,,,,,,206,,,210,,,52,,,,,252,,250,,40,,,,,,,,214,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,257,56,63,64,65,,51,53,54,,57,58,,,,61,,59,60',
'62,254,255,66,67,,,,,253,28,27,89,88,90,91,,,215,,,,,,,41,,,93,92,83',
'50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,',
',485,,,,,252,,250,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,,,,',
',,257,56,63,64,65,,51,53,54,,57,58,,,,61,,59,60,62,254,255,66,67,,,',
',253,28,27,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95',
',81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,489,52,,,,,252,,250,',
'40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,257,56,63,64,65,',
'51,53,54,,57,58,,,,61,,59,60,62,254,255,66,67,,,,,253,286,290,89,88',
'90,91,,,215,,,,,,,287,,,93,92,83,50,85,84,86,87,94,95,,81,82,,,,291',
',,,,,,,,,,,,,,,,,,,284,,,281,,,52,,,,,,,,,,,,,,,,,,,,,,79,73,75,76,77',
'78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66',
'67,,,,,253,286,290,89,88,90,91,,,215,,,,,,,287,,,93,92,83,50,85,84,86',
'87,94,95,,81,82,,,,291,,,,,,,,,,,,,,,,,,,,284,,,281,,,52,,,,,,,,,,,',
',,,,,,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,8,51,56,,,57,58,,53',
'54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41',
',9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,',
',36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,8,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28',
'27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,83,50,85,84,86,87,94,95,,81,82',
',38,39,37,,,,,,,,,,,,,,,,,,,,36,,,276,,,52,,,,,32,,,,40,,,,,,,,18,,',
',,79,73,75,76,77,78,,,,74,80,,,63,64,65,8,51,56,,,57,58,,53,54,61,,59',
'60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,83',
'50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52',
',,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51',
'56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253,28,27,89,88,90',
'91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,',
',,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,625,,250,,40,,,,,,,,214,,,,,79',
'73,75,76,77,78,,,,74,80,,,,,,,257,56,63,64,65,8,51,53,54,,57,58,,,,61',
',59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93',
'92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,',
'30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64',
'65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253,286,290',
'89,88,90,91,,,215,,,,,,,287,,,93,92,83,50,85,84,86,87,94,95,,81,82,',
',,291,,,,,,,,,,,,,,,,,,,,284,,,210,,,52,,,,,,,,,,,,,,,,,,,,,,79,73,75',
'76,77,78,,,,74,80,,,,497,,,,56,63,64,65,8,51,53,54,,57,58,,,,61,,59',
'60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,83',
'50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,276,,',
'52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65',
',51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253,286,290,89',
'88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39',
'37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73',
'75,76,77,78,,,,74,80,,,63,64,65,8,51,56,,,57,58,,53,54,61,,59,60,62',
'23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,83,50,85',
'84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,',
'32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56',
',,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253,286,290,89,88,90,91',
',,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,',
',,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76',
'77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255',
'66,67,,,,,253,28,27,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86',
'87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,252',
',,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,-273,,74,80,,,,-273,-273,-273',
'257,56,-273,-273,-273,,-273,53,54,,,,,,,,-273,-273,,,,,,,,-273,-273',
',-273,-273,-273,-273,-273,,,,,,,,,,,,,,,,,,,,,,-273,-273,-273,-273,-273',
'-273,-273,-273,-273,-273,-273,-273,-273,-273,,,-273,-273,-273,,609,-273',
',,-273,,,-273,,-273,,-273,,-273,,-273,-273,-273,-273,-273,-273,-273',
',-273,,-273,,,,,,,,,,,,,-273,-273,-273,-273,,-273,-508,,,,-93,,-273',
'-508,-508,-508,,,-508,-508,-508,,-508,,,,,,,,,-508,-508,-508,,,,,,,',
'-508,-508,,-508,-508,-508,-508,-508,,,,,,,,,,,,,,,,,,,,,,-508,-508,-508',
'-508,-508,-508,-508,-508,-508,-508,-508,-508,-508,-508,,,-508,-508,-508',
',742,-508,,,-508,,,-508,,-508,,-508,,-508,,-508,-508,-508,-508,-508',
'-508,-508,,-508,-508,-508,,,,,,,,,,,,,-508,-508,-508,-508,,-508,,63',
'64,65,-91,51,-508,,,57,58,,,,61,,59,60,62,254,255,66,67,,,,,253,286',
'290,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82',
',38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,',
',,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59',
'60,62,254,255,66,67,,,,,253,286,290,89,88,90,91,,,215,,,,,,,41,,,93',
'92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,',
',210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,,,63',
'64,65,,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89',
'88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39',
'37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73',
'75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254',
'255,66,67,,,,,253,286,290,89,88,90,91,,,215,,,,,,,287,,,93,92,83,50',
'85,84,86,87,94,95,,81,82,,,,291,,,,,,,,,,,,,,,,,,,,284,,,281,,,52,,',
',,,,,,,,,,,,,,,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57',
'58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,215,,',
',,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,',
',,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,',
',74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,',
',22,28,27,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95',
',81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,',
',214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,254,255,66,67,,,,,253,286,290,89,88,90,91,,,215,,,,,,,41',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,',
'206,,,210,,,52,,,,,729,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74',
'80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253',
'286,290,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,',
'214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,254,255,66,67,,,,,253,286,290,89,88,90,91,,,215,,,,,,,41',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,',
'206,,,210,,,52,,,,,,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255,66,67,,,,,253',
'286,290,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,514,,52,,,,,,,,,40,,,,',
',,,214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,8,51,56,,,57,58,,53',
'54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41',
',9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,',
',36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28',
'27,89,88,90,91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82',
',38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,18,,,',
',79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59',
'60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,83',
'50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,',
',52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,',
'51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90',
'91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,',
',,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76',
'77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,254,255',
'66,67,,,,,253,286,290,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84',
'86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,',
',,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,',
'57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17',
',,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,',
',,,,,,,,,206,,,210,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,',
',,74,80,,,63,64,65,8,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,',
',,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,83,50,85,84,86,87,94',
'95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,',
',,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53',
'54,61,,59,60,62,254,255,66,67,,,,,253,286,290,89,88,90,91,,,215,,,,',
',,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,',
',,,,,206,,,210,,,52,,,,,625,,,,40,,,,,,,,214,,,,,79,73,75,76,77,78,',
',,74,80,,,,,,,257,56,63,64,65,,51,53,54,,57,58,,,,61,,59,60,62,254,255',
'66,67,,,,,253,286,290,89,88,90,91,,,215,,,,,,,41,,,93,92,83,50,85,84',
'86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,206,,,210,,,52,,,,,',
',,,40,,,,,,,,214,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,257,56,63,64,65',
'8,51,53,54,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90',
'91,,,17,,,,,,7,41,,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37',
',,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75',
'76,77,78,,,,74,80,,,63,64,65,8,51,56,,,57,58,,53,54,61,,59,60,62,23',
'24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,83,50,85,84',
'86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32',
',,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57',
'58,,53,54,61,,59,60,62,254,255,66,67,,,,,253,286,290,89,88,90,91,,,215',
',,,,,,287,,,93,92,83,50,85,84,86,87,94,95,,81,82,,,,291,,,,,,,,,,,,',
',,,,,,,679,,,210,,,52,,,,,,,,,,,,,,,,,,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,8,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28',
'27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,83,50,85,84,86,87,94,95,,81,82',
',38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,',
',79,73,75,76,77,78,,,,74,80,,,63,64,65,8,51,56,,,57,58,,53,54,61,,59',
'60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,83',
'50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52',
',,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,8,51',
'56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91',
',,17,,,,,,7,41,,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,',
',,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76',
'77,78,,-524,,74,80,,,,-524,-524,-524,,56,-524,-524,-524,,-524,53,54',
',,,,,,,-524,,,,,,,,,-524,-524,,-524,-524,-524,-524,-524,,,,,,,,,,,,-524',
',,,,,,-524,-524,-524,,,-524,-524,-524,,-524,,,,,-524,,,,,-524,,-524',
',,,,263,-524,-524,-524,,-524,-524,-524,-524,-524,,,,,,,,,,,,,-524,,',
',,,,,,,,,,-524,,-524,,,-524,,-524,,,,,,,-524,,,,,263,-524,,,,,,,,,,',
',,,,,,,,,,-524,,,,,,,,,,,,,-524,,-524,,,-524,154,165,155,178,151,171',
'161,160,186,189,176,159,158,153,179,187,188,163,152,166,170,172,164',
'157,,,173,180,175,174,167,177,162,150,169,168,181,182,183,184,185,149',
'156,147,148,145,146,110,112,,,111,,,,,,,,138,139,,136,120,121,122,144',
'125,127,,,123,,,,,140,141,128,129,,,,,,,,,,,,,133,132,,119,137,135,134',
'130,131,126,124,117,143,118,,,142,190,,,,,,,,,,80,154,165,155,178,151',
'171,161,160,186,189,176,159,158,153,179,187,188,163,152,166,170,172',
'164,157,,,173,180,175,174,167,177,162,150,169,168,181,182,183,184,185',
'149,156,147,148,145,146,110,112,109,,111,,,,,,,,138,139,,136,120,121',
'122,144,125,127,,,123,,,,,140,141,128,129,,,,,,,,,,,,,133,132,,119,137',
'135,134,130,131,126,124,117,143,118,,,142,190,,,,,,,,,,80,154,165,155',
'178,151,171,161,160,186,189,176,159,158,153,179,187,188,163,152,166',
'170,172,164,157,,,173,180,175,174,167,177,162,150,169,168,181,182,183',
'184,185,149,156,147,148,145,146,110,112,,,111,,,,,,,,138,139,,136,120',
'121,122,144,125,127,,,123,,,,,140,141,128,129,,,,,,,,,,,,,133,132,,119',
'137,135,134,130,131,126,124,117,143,118,,,142,190,,,,,,,,,,80,154,165',
'155,178,151,171,161,160,186,189,176,159,158,153,179,187,188,163,152',
'166,170,172,164,157,,,173,180,175,174,167,177,162,150,169,168,181,182',
'183,184,185,149,156,147,148,145,146,110,112,,,111,,,,,,,,138,139,,136',
'120,121,122,144,125,127,,,123,,,,,140,141,128,129,,,,,,,,,,,,,133,132',
',119,137,135,134,130,131,126,124,117,143,118,,,142,190,,,,,,,,,,80,154',
'165,155,178,151,171,161,160,186,189,176,159,158,153,179,187,188,163',
'152,166,170,172,164,157,,,173,180,175,174,167,177,162,150,169,168,181',
'182,183,184,185,149,156,147,148,145,146,110,112,382,381,111,383,,,,',
',,138,139,,136,120,121,122,144,125,127,,,123,,,,,140,141,128,129,,,',
',,,,,,,,,133,132,,119,137,135,134,130,131,126,124,117,143,118,,,142',
'154,165,155,178,151,171,161,160,186,189,176,159,158,153,179,187,188',
'163,152,166,170,172,164,157,,,173,180,175,359,358,360,357,150,169,168',
'181,182,183,184,185,149,156,147,148,355,356,353,112,85,84,354,87,,,',
',,,138,139,,136,120,121,122,144,125,127,,,123,,,,,140,141,128,129,,',
',,,365,,,,,,,133,132,,119,137,135,134,130,131,126,124,117,143,118,,',
'142,154,165,155,178,151,171,161,160,186,189,176,159,158,153,179,187',
'188,163,152,166,170,172,164,157,,,173,180,175,174,167,177,162,150,169',
'168,181,182,183,184,185,149,156,147,148,145,146,110,112,382,381,111',
'383,,,,,,,138,139,,136,120,121,122,144,125,127,,,123,,,,,140,141,128',
'129,,,,,,,,,,,,,133,132,,119,137,135,134,130,131,126,124,117,143,118',
',,142,154,165,155,178,151,171,161,160,186,189,176,159,158,153,179,187',
'188,163,152,166,170,172,164,157,,,173,180,175,174,167,177,162,150,169',
'168,181,182,183,184,185,149,156,147,148,145,146,110,112,,,111,,,,,,',
',138,139,,136,120,121,122,144,125,127,,,123,,,,,140,141,128,129,,,,',
',,,,,,,,133,132,,119,137,135,134,130,131,126,124,117,143,118,473,415',
'142,,474,,,,,,,,138,139,,136,120,121,122,144,125,127,,,123,,,,,140,141',
'128,129,,,,,,,,,,,,,133,132,,119,137,135,134,130,131,126,124,117,143',
'118,796,421,142,,794,,,,,,,,138,139,,136,120,121,122,144,125,127,,,123',
',,,,140,141,128,129,,,,,,,,,,,,,133,132,,119,137,135,134,130,131,126',
'124,117,143,118,612,421,142,,613,,,,,,,,138,139,,136,120,121,122,144',
'125,127,,,123,,,,,140,141,128,129,,,,,,,,,,,,,133,132,,119,137,135,134',
'130,131,126,124,117,143,118,796,421,142,,839,,,,,,,,138,139,,136,120',
'121,122,144,125,127,,,123,,,,,140,141,128,129,,,,,,,,,,,,,133,132,,119',
'137,135,134,130,131,126,124,117,143,118,657,421,142,,658,,,,,,,,138',
'139,,136,120,121,122,144,125,127,,,123,,,,,140,141,128,129,,,,,,,,,',
',,,133,132,,119,137,135,134,130,131,126,124,117,143,118,907,421,142',
',908,,,,,,,,138,139,,136,120,121,122,144,125,127,,,123,,,,,140,141,128',
'129,,,,,,,,,,,,,133,132,,119,137,135,134,130,131,126,124,117,143,118',
'905,415,142,,906,,,,,,,,138,139,,136,120,121,122,144,125,127,,,123,',
',,,140,141,128,129,,,,,,263,,,,,,,133,132,,119,137,135,134,130,131,126',
'124,117,143,118,610,415,142,,611,,,,,,,,138,139,,136,120,121,122,144',
'125,127,,,123,,,,,140,141,128,129,,,,,,263,,,,,,,133,132,,119,137,135',
'134,130,131,126,124,117,143,118,473,415,142,,474,,,,,,,,138,139,,136',
'120,121,122,144,125,127,,,123,,,,,140,141,128,129,,,,,,,,,,,,,133,132',
',119,137,135,134,130,131,126,124,117,143,118,473,415,142,,474,,,,,,',
',138,139,,136,120,121,122,144,125,127,,,123,,,,,140,141,128,129,,,,',
',263,,,,,,,133,132,,119,137,135,134,130,131,126,124,117,143,118,610',
'415,142,,611,,,,,,,,138,139,,136,120,121,122,144,125,127,,,123,,,,,140',
'141,128,129,,,,,,263,,,,,,,133,132,,119,137,135,134,130,131,126,124',
'117,143,118,612,421,142,,613,,,,,,,,138,139,,136,120,121,122,144,125',
'127,,,123,,,,,140,141,128,129,,,,,,,,,,,,,133,132,,119,137,135,134,130',
'131,126,124,117,143,118,417,421,142,,419,,,,,,,,138,139,,136,120,121',
'122,144,125,127,,,123,,,,,140,141,128,129,,,,,,,,,,,,,133,132,,119,137',
'135,134,130,131,126,124,117,143,118,654,415,142,,655,,,,,,,,138,139',
',136,120,121,122,144,125,127,,,123,,,,,140,141,128,129,,,,,,263,,,,',
',,133,132,,119,137,135,134,130,131,126,124,117,143,118,473,415,142,',
'474,,,,,,,,138,139,,136,120,121,122,144,125,127,,,123,,,,,140,141,128',
'129,,,,,,,,,,,,,133,132,,119,137,135,134,130,131,126,124,117,143,118',
'473,415,142,,474,,,,,,,,138,139,,136,120,121,122,144,125,127,,,123,',
',,,140,141,128,129,,,,,,,,,,,,,133,132,,119,137,135,134,130,131,126',
'124,117,143,118,411,415,142,,412,,,,,,,,138,139,,136,120,121,122,144',
'125,127,,,123,,,,,140,141,128,129,,,,,,263,,,,,,,133,132,,119,137,135',
'134,130,131,126,124,117,143,118,,,142' ]
        racc_action_table = arr = ::Array.new(22287, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'0,0,0,0,0,836,373,793,0,0,709,709,840,0,376,0,0,0,0,0,0,0,486,563,288',
'476,0,0,0,0,0,0,0,371,568,0,371,651,575,575,430,0,0,0,0,0,0,0,0,0,0',
'0,0,0,0,486,0,0,476,0,0,0,55,649,71,653,373,373,373,305,305,25,71,563',
'906,905,376,880,25,880,563,0,877,907,0,563,288,0,430,792,811,811,0,371',
'371,342,0,709,611,610,649,343,709,793,0,793,563,288,793,0,0,0,0,0,0',
'836,654,836,0,0,836,360,403,403,403,575,403,0,360,26,403,403,563,0,0',
'403,568,403,403,403,403,403,403,403,462,55,611,610,403,403,403,403,403',
'403,403,568,305,403,907,657,568,655,664,664,403,614,207,403,403,403',
'403,403,403,403,403,403,403,462,403,403,654,403,403,403,906,905,906',
'905,557,906,905,26,877,907,877,907,556,877,907,792,205,792,792,403,792',
'342,403,342,262,403,342,343,26,343,207,664,343,654,403,434,434,586,657',
'657,654,655,403,309,487,656,309,403,403,403,403,403,403,874,413,367',
'403,403,15,15,874,413,413,413,205,403,413,413,413,713,413,403,403,286',
'713,362,657,487,655,413,413,413,362,657,700,655,37,37,434,413,413,700',
'413,413,413,413,413,586,586,347,557,347,557,287,378,557,586,369,556',
'799,556,659,874,556,799,367,367,367,413,413,413,413,413,413,413,413',
'413,413,413,413,413,413,290,298,413,413,413,743,607,413,298,413,413',
'700,662,413,14,413,663,413,636,413,665,413,413,413,413,413,413,413,251',
'413,413,413,378,378,378,369,369,369,708,314,602,872,314,708,413,413',
'413,413,872,413,417,291,291,743,871,14,413,417,417,417,298,871,14,417',
'417,353,417,671,3,13,678,355,353,3,566,417,13,678,355,273,204,566,909',
'909,273,417,417,204,417,417,417,417,417,346,412,354,35,658,346,755,872',
'762,354,285,658,283,755,672,762,658,285,675,283,871,417,417,417,417',
'417,417,417,417,417,417,417,417,417,417,13,678,417,417,417,566,417,412',
'894,35,417,204,677,358,412,894,35,417,755,417,358,417,417,417,417,417',
'417,417,658,417,417,417,762,480,285,357,283,341,341,356,480,502,357',
'359,417,417,356,417,502,417,359,540,540,296,417,419,417,895,895,895',
'895,895,419,419,419,895,895,894,419,419,895,419,895,895,895,895,895',
'895,895,311,480,679,311,895,895,895,895,895,895,895,419,419,895,419',
'419,419,419,419,895,895,502,895,895,895,895,895,895,895,895,895,895',
'895,669,895,895,669,895,895,895,419,419,419,419,419,419,419,419,419',
'419,419,419,419,419,317,317,419,419,419,895,419,282,895,308,419,895',
'308,680,282,681,895,419,684,419,895,419,419,419,419,419,419,419,895',
'419,297,419,622,895,895,895,895,895,895,42,689,908,895,895,419,419,42',
'419,908,419,695,895,697,908,419,913,419,895,895,421,421,421,913,421',
'248,109,282,421,421,109,109,247,421,597,421,421,421,421,421,421,421',
'687,687,590,300,421,421,421,421,421,421,421,722,722,421,722,722,722',
'42,401,908,421,307,215,421,421,421,421,421,421,421,421,421,421,913,421',
'421,564,421,421,421,401,401,401,401,401,401,401,401,401,401,401,209',
'401,401,794,208,401,401,310,421,559,794,421,421,558,421,794,714,295',
'715,421,401,421,401,421,401,401,401,401,401,401,401,421,401,716,718',
'206,421,421,421,421,421,421,721,312,624,421,421,552,401,728,401,411',
'547,421,421,891,891,891,295,891,421,421,794,891,891,295,543,275,891',
'322,891,891,891,891,891,891,891,532,323,325,191,891,891,891,891,891',
'891,891,326,337,891,517,411,746,747,615,750,891,885,411,891,891,891',
'891,891,891,891,891,891,891,753,891,891,754,891,891,891,615,615,615',
'615,615,615,615,615,615,615,615,516,615,615,756,808,615,615,96,891,759',
'760,891,761,515,891,885,885,885,885,891,615,599,615,891,615,615,615',
'615,615,615,615,891,615,765,78,768,891,891,891,891,891,891,769,340,277',
'891,891,534,615,808,808,808,808,891,891,889,889,889,889,889,891,891',
'599,889,889,644,784,787,889,599,889,889,889,889,889,889,889,77,506,63',
'503,889,889,889,889,889,889,889,348,796,889,797,534,534,534,534,889',
'889,778,889,889,889,889,889,889,889,889,889,889,889,498,889,889,349',
'889,889,889,245,245,245,245,245,245,245,245,245,245,245,802,245,245',
'803,804,245,245,496,889,493,641,889,41,820,889,778,778,778,778,889,245',
'821,245,889,245,245,245,245,245,245,245,889,245,492,627,828,889,889',
'889,889,889,889,829,36,488,889,889,34,245,881,881,881,881,881,889,839',
'284,881,881,482,889,889,881,845,881,881,881,881,881,881,881,846,20,481',
'851,881,881,881,881,881,881,881,278,548,881,548,548,548,548,856,881',
'881,857,881,881,881,881,881,881,881,881,881,881,881,439,881,881,858',
'881,881,881,661,661,661,661,661,661,661,661,661,661,661,860,661,661',
'861,479,661,661,478,881,443,442,881,441,439,881,873,440,439,439,881',
'661,12,661,881,661,661,661,661,661,661,661,881,661,279,11,883,881,881',
'881,881,881,881,372,10,890,881,881,9,661,422,422,422,458,422,881,418',
'375,422,422,410,881,881,422,6,422,422,422,422,422,422,422,899,901,902',
'904,422,422,422,422,422,422,422,406,458,422,404,1,458,458,458,458,422',
'392,635,422,422,422,422,422,422,422,422,422,422,438,422,422,398,422',
'422,422,640,640,640,640,640,640,640,640,640,640,640,,640,640,,,640,640',
',422,,,422,422,438,422,,,438,438,422,640,422,640,422,640,640,640,640',
'640,640,640,422,640,,,,422,422,422,422,422,422,,,,422,422,,640,,640',
',,422,422,870,870,870,870,870,422,422,,870,870,,,,870,,870,870,870,870',
'870,870,870,,,,,870,870,870,870,870,870,870,,783,870,783,783,783,783',
',870,870,,870,870,870,870,870,870,870,870,870,870,870,,870,870,,870',
'870,870,19,19,19,19,19,19,19,19,19,19,19,,19,19,,,19,19,,870,,,870,',
',870,,,,,870,19,,19,870,19,19,19,19,19,19,19,870,19,,,,870,870,870,870',
'870,870,,,,870,870,,19,868,868,868,457,868,870,,,868,868,,870,870,868',
',868,868,868,868,868,868,868,,,,,868,868,868,868,868,868,868,,457,868',
',,457,457,457,457,868,,,868,868,868,868,868,868,868,868,868,868,,868',
'868,,868,868,868,727,727,727,727,727,727,727,727,727,727,727,,727,727',
',,727,727,,868,,,868,,,868,,,,,868,727,868,727,868,727,727,727,727,727',
'727,727,868,727,,,,868,868,868,868,868,868,,,,868,868,,727,853,853,853',
'853,853,868,,,853,853,,868,868,853,,853,853,853,853,853,853,853,,,,',
'853,853,853,853,853,853,853,,,853,274,274,274,274,274,853,853,,853,853',
'853,853,853,853,853,853,853,853,853,,853,853,,853,853,853,732,732,732',
'732,732,732,732,732,732,732,732,,732,732,,,732,732,,853,,,853,,,853',
',,,,853,732,,732,853,732,732,732,732,732,732,732,853,732,,,,853,853',
'853,853,853,853,,,,853,853,,732,17,17,17,,17,853,,,17,17,,853,853,17',
',17,17,17,17,17,17,17,,,,,17,17,17,17,17,17,17,,,17,5,5,5,5,5,,17,,',
'17,17,17,17,17,17,17,17,17,17,,17,17,,17,17,17,734,734,734,734,734,734',
'734,734,734,734,734,,734,734,,,734,734,,17,,,17,17,,17,648,648,648,648',
'648,734,,734,17,734,734,734,734,734,734,734,17,734,,,,17,17,17,17,17',
'17,,,,17,17,,734,18,18,18,,18,17,,,18,18,,17,17,18,,18,18,18,18,18,18',
'18,,,,,18,18,18,18,18,18,18,,,18,,,,,,,18,,,18,18,18,18,18,18,18,18',
'18,18,,18,18,,18,18,18,737,737,737,737,737,737,737,737,737,737,737,',
'737,737,,,737,737,,18,,,18,,,18,,,,,,737,,737,18,737,737,737,737,737',
'737,737,18,737,,,,18,18,18,18,18,18,,,,18,18,,737,848,848,848,848,848',
'18,,,848,848,,18,18,848,,848,848,848,848,848,848,848,,,,,848,848,848',
'848,848,848,848,,,848,,,,,,848,848,,848,848,848,848,848,848,848,848',
'848,848,848,,848,848,,848,848,848,739,739,739,739,739,739,739,739,739',
'739,739,,739,739,,,739,739,,848,,,848,,,848,,,,,848,739,,739,848,739',
'739,739,739,739,739,739,848,739,,,,848,848,848,848,848,848,,,,848,848',
',739,847,847,847,,847,848,,,847,847,,848,848,847,,847,847,847,847,847',
'847,847,,,,,847,847,847,847,847,847,847,,,847,,,,,,,847,,,847,847,847',
'847,847,847,847,847,847,847,,847,847,,847,847,847,424,424,424,424,424',
'424,424,424,424,424,424,,424,424,,,424,424,,847,,,847,,,847,,,,,847',
'424,,424,847,424,424,424,424,424,424,424,847,424,,,,847,847,847,847',
'847,847,,,,847,847,,424,22,22,22,,22,847,,,22,22,,847,847,22,,22,22',
'22,22,22,22,22,,,,,22,22,22,22,22,22,22,,,22,,,,,,,22,,,22,22,22,22',
'22,22,22,22,22,22,,22,22,,22,22,22,461,461,461,461,461,461,461,461,461',
'461,461,,461,461,,,461,461,,22,,,22,,545,22,545,545,545,545,22,461,22',
'461,22,461,461,461,461,461,461,461,22,461,,,,22,22,22,22,22,22,,,,22',
'22,,461,461,545,,,22,22,23,23,23,545,23,22,22,,23,23,,,,23,,23,23,23',
'23,23,23,23,,,,,23,23,23,23,23,23,23,,,23,,,,,,,23,,,23,23,23,23,23',
'23,23,23,23,23,,23,23,,23,23,23,744,744,744,744,744,744,744,744,744',
'744,744,,744,744,,,744,744,,23,,,23,,333,23,333,333,333,333,23,744,23',
'744,23,744,744,744,744,744,744,744,23,744,,,,23,23,23,23,23,23,,,,23',
'23,,744,,333,,,23,23,24,24,24,333,24,23,23,,24,24,,,,24,,24,24,24,24',
'24,24,24,,,,,24,24,24,24,24,24,24,,,24,,,,,,,24,,,24,24,24,24,24,24',
'24,24,24,24,,24,24,,24,24,24,513,513,513,513,513,513,513,513,513,513',
'513,,513,513,,,513,513,,24,,,24,,685,24,685,685,685,685,24,513,24,513',
'24,513,513,513,513,513,513,513,24,513,,,,24,24,24,24,24,24,,,,24,24',
',513,,685,,,24,24,843,843,843,685,843,24,24,,843,843,,,,843,,843,843',
'843,843,843,843,843,,,,,843,843,843,843,843,843,843,,,843,,,,,,,843',
',,843,843,843,843,843,843,843,843,843,843,,843,843,,843,843,843,409',
'409,409,409,409,409,409,409,409,409,409,,409,409,,,409,409,,843,,,843',
',,843,,,,,,409,,409,843,409,409,409,409,409,409,409,843,409,,,,843,843',
'843,843,843,843,,,,843,843,,409,429,429,429,,429,843,,,429,429,,843',
'843,429,,429,429,429,429,429,429,429,,,,,429,429,429,429,429,429,429',
',,429,,,,,,,429,,,429,429,429,429,429,429,429,429,429,429,,429,429,',
'429,429,429,823,823,823,823,823,823,823,823,823,823,823,,823,823,,,823',
'823,,429,,,429,,,429,,,,,429,823,,823,429,823,823,823,823,823,823,823',
'429,823,,,,429,429,429,429,429,429,,27,,429,429,,823,,27,27,27,429,429',
'27,27,27,449,27,429,429,,,,,,,27,27,27,,,,449,449,,,27,27,,27,27,27',
'27,27,,,,449,,449,,449,449,449,449,,,449,,449,,,,,,27,27,27,27,27,27',
'27,27,27,27,27,27,27,27,,,27,27,27,,,27,,27,27,,,27,,27,,27,,27,,27',
'27,27,27,27,27,27,,27,27,27,,864,,864,864,864,864,,,,,,27,27,27,27,',
'27,28,,,,,,27,28,28,28,,,28,28,28,,28,448,,,864,864,,,,,28,28,864,864',
'864,864,,448,448,28,28,,28,28,28,28,28,,,,,,448,,448,,448,448,448,448',
',,448,,448,,,,28,28,28,28,28,28,28,28,28,28,28,28,28,28,,,28,28,28,',
',28,,28,28,,,28,,28,,28,,28,,28,28,28,28,28,28,28,,28,,28,,,,,,,,,,',
',,28,28,28,28,,28,30,30,30,30,30,,28,,30,30,,,,30,,30,30,30,30,30,30',
'30,,,,,30,30,30,30,30,30,30,,,30,,,,,,30,30,,30,30,30,30,30,30,30,30',
'30,30,30,,30,30,,30,30,30,447,447,447,447,447,447,447,,,447,447,,,,',
',447,447,,30,,,30,,,30,,,,,30,447,,447,30,447,447,447,447,447,447,447',
'30,447,,,,30,30,30,30,30,30,,,,30,30,,,31,31,31,,31,30,,,31,31,,30,30',
'31,,31,31,31,31,31,31,31,,,,,31,31,31,31,31,31,31,,,31,,,,,,,31,,,31',
'31,31,31,31,31,31,31,31,31,,31,31,446,,619,31,619,619,619,619,,,,,,',
',,446,446,,,,,,31,,,31,,,31,,446,,,31,446,446,446,446,619,,806,,806',
'806,806,806,619,619,619,619,31,31,31,31,31,31,,619,,31,31,,,32,32,32',
',32,31,,,32,32,,31,31,32,806,32,32,32,32,32,32,32,806,806,806,806,32',
'32,32,32,32,32,32,,,32,,,,,,,32,,,32,32,32,32,32,32,32,32,32,32,451',
'32,32,,,538,32,538,538,538,538,,,,,,451,451,,,,,,,,,32,,,32,,451,32',
'451,,451,451,451,451,,,451,538,451,,,,,,,538,538,538,538,32,32,32,32',
'32,32,,,,32,32,,,,32,,,,32,837,837,837,,837,32,32,,837,837,,,,837,,837',
'837,837,837,837,837,837,,,,,837,837,837,837,837,837,837,,,837,,,,,,',
'837,,,837,837,837,837,837,837,837,837,837,837,445,837,837,,,56,837,56',
'56,56,56,,,,,,445,445,,,,,,,,,837,,,837,,445,837,445,,445,445,445,445',
',,,56,56,712,,712,712,712,712,56,56,56,56,837,837,837,837,837,837,,',
',837,837,,,431,431,431,,431,837,,,431,431,,837,837,431,712,431,431,431',
'431,431,431,431,712,712,712,712,431,431,431,431,431,431,431,,,431,,',
',,,,431,,,431,431,431,431,431,431,431,431,431,431,,431,431,,431,431',
'431,455,455,455,455,455,455,455,,,455,455,,,,,,455,455,,431,,,431,,',
'431,,,,,,455,,455,431,455,455,455,455,455,455,455,431,455,,,,431,431',
'431,431,431,431,,,,431,431,,,833,833,833,833,833,431,,,833,833,,431',
'431,833,,833,833,833,833,833,833,833,,,,,833,833,833,833,833,833,833',
',,833,,,,,,833,833,,833,833,833,833,833,833,833,833,833,833,833,,833',
'833,,833,833,833,454,454,454,454,454,454,454,,,454,454,,,,,,454,454',
',833,,,833,,,833,,,,,833,454,,454,833,454,454,454,454,454,454,454,833',
'454,,,,833,833,833,833,833,833,,,,833,833,,,824,824,824,,824,833,,,824',
'824,,833,833,824,,824,824,824,824,824,824,824,,,,,824,824,824,824,824',
'824,824,,,824,,,,,,,824,,,824,824,824,824,824,824,824,824,824,824,,824',
'824,,824,824,824,453,453,453,453,453,453,453,,,453,453,,,,,,453,453',
',824,,,824,,,824,,,,,,453,,453,824,453,453,453,453,453,453,453,824,453',
',,,824,824,824,824,824,824,,,,824,824,,,38,38,38,,38,824,,,38,38,,824',
'824,38,,38,38,38,38,38,38,38,,,,,38,38,38,38,38,38,38,,,38,,,,,,,38',
',,38,38,38,38,38,38,38,38,38,38,,38,38,,38,38,38,437,437,437,437,437',
'437,437,437,437,437,437,,437,437,,,437,437,,38,,,38,,,38,,,,,,437,,437',
'38,437,437,437,437,437,437,437,38,437,,,,38,38,38,38,38,38,,,,38,38',
',,39,39,39,,39,38,,,39,39,,38,38,39,,39,39,39,39,39,39,39,,,,,39,39',
'39,39,39,39,39,,,39,,,,,,,39,,,39,39,39,39,39,39,39,39,39,39,,39,39',
',39,39,39,452,452,452,452,452,452,452,,,452,452,,,,,,452,452,,39,,,39',
',,39,,,,,,452,,452,39,452,452,452,452,452,452,452,39,452,,,,39,39,39',
'39,39,39,,,,39,39,,,40,40,40,,40,39,,,40,40,,39,39,40,,40,40,40,40,40',
'40,40,,,,,40,40,40,40,40,40,40,,,40,,,,,,,40,,,40,40,40,40,40,40,40',
'40,40,40,,40,40,,40,40,40,460,460,460,460,460,460,460,460,,460,460,',
',,,,460,460,,40,,,40,,,40,,,,,,460,,460,40,460,460,460,460,460,460,460',
'40,460,,,,40,40,40,40,40,40,,,,40,40,,,812,812,812,,812,40,,,812,812',
',40,40,812,,812,812,812,812,812,812,812,,,,,812,812,812,812,812,812',
'812,,,812,,,,,,,812,,,812,812,812,812,812,812,812,812,812,812,,812,812',
',812,812,812,459,459,459,459,459,459,459,,,459,459,,,,,,459,459,,812',
',,812,,,812,,,,,,459,,459,812,459,459,459,459,459,459,459,812,459,,',
',812,812,812,812,812,812,,,,812,812,,,798,798,798,798,798,812,,,798',
'798,,812,812,798,,798,798,798,798,798,798,798,,,,,798,798,798,798,798',
'798,798,,,798,,,,,,798,798,,798,798,798,798,798,798,798,798,798,798',
'798,,798,798,,798,798,798,456,456,456,456,456,456,456,,,456,456,,,,',
',456,456,,798,,,798,,,798,,,,,798,456,,456,798,456,456,456,456,456,456',
'456,798,456,,,,798,798,798,798,798,798,,50,,798,798,,,,50,50,50,,798',
'50,50,50,450,50,798,798,,,,,,,,50,50,,,,450,450,,,50,50,,50,50,50,50',
'50,,,,450,,450,,450,450,450,450,,,450,,450,,,,,,50,50,50,50,50,50,50',
'50,50,50,50,50,50,50,,,50,50,50,,,50,,,50,,,50,,50,,50,,50,,50,50,50',
'50,50,50,50,,50,,50,,,,,,,,,,,,,50,50,50,50,,50,,,50,50,,,50,52,52,52',
',52,,,,52,52,,,,52,,52,52,52,52,52,52,52,,,,,52,52,52,52,52,52,52,,',
'52,,,,,,,52,,,52,52,52,52,52,52,52,52,52,52,,52,52,,52,52,52,436,436',
'436,436,436,436,436,436,436,436,436,,436,436,,,436,436,,52,,,52,,,52',
',,,,,436,,436,52,436,436,436,436,436,436,436,52,436,,,,52,52,52,52,52',
'52,,,,52,52,,,53,53,53,,53,52,,,53,53,,52,52,53,,53,53,53,53,53,53,53',
',,,,53,53,53,53,53,53,53,,,53,,,,,,,53,,,53,53,53,53,53,53,53,53,53',
'53,,53,53,,53,53,53,444,,,,,,,,,,,,,,,,444,444,,53,,,53,,,53,,,,,53',
'444,,444,53,444,444,444,444,,,,53,,,,,53,53,53,53,53,53,,,,53,53,,,',
',,,53,53,54,54,54,,54,53,53,,54,54,,,,54,,54,54,54,54,54,54,54,,,,,54',
'54,54,54,54,54,54,,,54,,,,,,,54,,,54,54,54,54,54,54,54,54,54,54,,54',
'54,,54,54,54,,,,,,,,,,,,,,,,,,,,54,,,54,,,54,,,,,54,,,,54,,,,,,,,54',
',,,,54,54,54,54,54,54,,,,54,54,,,,,,,54,54,365,365,365,,365,54,54,,365',
'365,,,,365,,365,365,365,365,365,365,365,,,,,365,365,365,365,365,365',
'365,,,365,,,,,,,365,,,365,365,365,365,365,365,365,365,365,365,,365,365',
',365,365,365,,,,,,,,,,,,,,,,,,,,365,,,365,,,365,,,,,,,,,365,,,,,,,,365',
',,,,365,365,365,365,365,365,,,,365,365,,,432,432,432,,432,365,,,432',
'432,,365,365,432,,432,432,432,432,432,432,432,,,,,432,432,432,432,432',
'432,432,,,432,,,,,,,432,,,432,432,432,432,432,432,432,432,432,432,,432',
'432,,432,432,432,,,,,,,,,,,,,,,,,,,,432,,,432,,,432,,,,,,,,,432,,,,',
',,,432,,,,,432,432,432,432,432,432,,,,432,432,,,57,57,57,,57,432,,,57',
'57,,432,432,57,,57,57,57,57,57,57,57,,,,,57,57,57,57,57,57,57,,,57,',
',,,,,57,,,57,57,57,57,57,57,57,57,57,57,,57,57,,57,57,57,,,,,,,,,,,',
',,,,,,,,57,,,57,,,57,,,,,,,,,57,,,,,,,,57,,,,,57,57,57,57,57,57,,,,57',
'57,,,58,58,58,,58,57,,,58,58,,57,57,58,,58,58,58,58,58,58,58,,,,,58',
'58,58,58,58,58,58,,,58,,,,,,,58,,,58,58,58,58,58,58,58,58,58,58,,58',
'58,,58,58,58,,,,,,,,,,,,,,,,,,,,58,,,58,,,58,,,,,,,,,58,,,,,,,,58,,',
',,58,58,58,58,58,58,,,,58,58,,,61,61,61,,61,58,,,61,61,,58,58,61,,61',
'61,61,61,61,61,61,,,,,61,61,61,61,61,61,61,,,61,,,,,,,61,,,61,61,61',
'61,61,61,61,61,61,61,,61,61,,61,61,61,,,,,,,,,,,,,,,,,,,,61,,,61,,,61',
',,,,,,,,61,,,,,,,,61,,,,,61,61,61,61,61,61,,,,61,61,61,,62,62,62,61',
'62,61,,,62,62,,61,61,62,,62,62,62,62,62,62,62,,,,,62,62,62,62,62,62',
'62,,,62,,,,,,,62,,,62,62,62,62,62,62,62,62,62,62,,62,62,,,571,62,571',
'571,571,571,,,,,,,,,,,,,,,,62,,,62,,,62,,,,,62,,,,,571,571,,,,,,,571',
'571,571,571,62,62,62,62,62,62,,,,62,62,,,433,433,433,,433,62,,,433,433',
',62,62,433,,433,433,433,433,433,433,433,,,,,433,433,433,433,433,433',
'433,,,433,,,,,,,433,,,433,433,433,433,433,433,433,433,433,433,,433,433',
',433,433,433,,,,,,,,,,,,,,,,,,,,433,,,433,,,433,,,,,,,,,433,,,,,,,,433',
',,,,433,433,433,433,433,433,,,,433,433,,,464,464,464,,464,433,,,464',
'464,,433,433,464,,464,464,464,464,464,464,464,,,,,464,464,464,464,464',
'464,464,,,464,,,,,,,464,,,464,464,464,464,464,464,464,464,464,464,,464',
'464,,464,464,464,,,,,,,,,,,,,,,,,,,,464,,,464,,,464,,,,,464,,464,,464',
',,,,,,,464,,,,,464,464,464,464,464,464,,,,464,464,,,,,,,464,464,525',
'525,525,,525,464,464,,525,525,,,,525,,525,525,525,525,525,525,525,,',
',,525,525,525,525,525,525,525,,,525,,,,,,,525,,,525,525,525,525,525',
'525,525,525,525,525,,525,525,,525,525,525,,,,,,,,,,,,,,,,,,,,525,,,525',
',,525,,,,,525,,,,525,,,,,,,,525,,,,,525,525,525,525,525,525,,,,525,525',
',,788,788,788,788,788,525,,,788,788,,525,525,788,,788,788,788,788,788',
'788,788,,,,,788,788,788,788,788,788,788,,,788,,,,,,788,788,,788,788',
'788,788,788,788,788,788,788,788,788,,788,788,,788,788,788,,,,,,,,,,',
',,,,,,,,,788,,,788,,,788,,,,,788,,,,788,,,,,,,,788,,,,,788,788,788,788',
'788,788,,,,788,788,,,767,767,767,767,767,788,,,767,767,,788,788,767',
',767,767,767,767,767,767,767,,,,,767,767,767,767,767,767,767,,,767,',
',,,,767,767,,767,767,767,767,767,767,767,767,767,767,767,,767,767,,767',
'767,767,,,,,,,,,,,,,,,,,,,,767,,,767,,,767,,,,,767,,,,767,,,,,,,,767',
',,,,767,767,767,767,767,767,,,,767,767,,,467,467,467,,467,767,,,467',
'467,,767,767,467,,467,467,467,467,467,467,467,,,,,467,467,467,467,467',
'467,467,,,467,,,,,,,467,,,467,467,467,467,467,467,467,467,467,467,,467',
'467,,467,467,467,,,,,,,,,,,,,,,,,,,,467,,,467,,,467,,,,,,,467,,467,',
',,,,,,467,,,,,467,467,467,467,467,467,,,,467,467,,,,,,,467,467,83,83',
'83,,83,467,467,,83,83,,,,83,,83,83,83,83,83,83,83,,83,,,83,83,83,83',
'83,83,83,,,83,,,,,,,83,,,83,83,83,83,83,83,83,83,83,83,,83,83,,83,83',
'83,,,,,,,,,,,,,,,,,,,,83,,,83,83,,83,,,,,83,,83,,83,,,,,,,,83,,83,,',
'83,83,83,83,83,83,,,,83,83,,,,,,,83,83,86,86,86,,86,83,83,,86,86,,,',
'86,,86,86,86,86,86,86,86,,86,,,86,86,86,86,86,86,86,,,86,,,,,,,86,,',
'86,86,86,86,86,86,86,86,86,86,,86,86,,86,86,86,,,,,,,,,,,,,,,,,,,,86',
',,86,86,,86,,,,,86,,86,,86,,,,,,,,86,,86,,,86,86,86,86,86,86,,,,86,86',
',,,,,,86,86,757,757,757,,757,86,86,,757,757,,,,757,,757,757,757,757',
'757,757,757,,,,,757,757,757,757,757,757,757,,,757,,,,,,,757,,,757,757',
'757,757,757,757,757,757,757,757,,757,757,,757,757,757,,,,,,,,,,,,,,',
',,,,,757,,,757,,,757,,,,,757,,,,757,,,,,,,,757,,,,,757,757,757,757,757',
'757,,,,757,757,,,98,98,98,98,98,757,,,98,98,,757,757,98,,98,98,98,98',
'98,98,98,,,,,98,98,98,98,98,98,98,,,98,,,,,,98,98,98,98,98,98,98,98',
'98,98,98,98,98,98,,98,98,,98,98,98,,,,,,,,,,,,,,,,,,,,98,,,98,,,98,',
',,,98,,,,98,,,,,,,,98,,,,,98,98,98,98,98,98,,,,98,98,,,102,102,102,98',
'102,98,,,102,102,,98,98,102,,102,102,102,102,102,102,102,,,,,102,102',
'102,102,102,102,102,,,102,,,,,,,102,,,102,102,102,102,102,102,102,102',
'102,102,,102,102,,102,102,102,,,,,,,,,,,,,,,,,,,,102,,,102,,,102,,,',
',,,,,102,,,,,,,,102,,,,,102,102,102,102,102,102,,,,102,102,,,103,103',
'103,,103,102,,,103,103,,102,102,103,,103,103,103,103,103,103,103,,,',
',103,103,103,103,103,103,103,,,103,,,,,,,103,,,103,103,103,103,103,103',
'103,103,103,103,,103,103,,103,103,103,,,,,,,,,,,,,,,,,,,,103,,,103,',
',103,,,,,,,,,103,,,,,,,,103,,,,,103,103,103,103,103,103,,,,103,103,',
',104,104,104,,104,103,,,104,104,,103,103,104,,104,104,104,104,104,104',
'104,,,,,104,104,104,104,104,104,104,,,104,,,,,,,104,,,104,104,104,104',
'104,104,104,104,104,104,,104,104,,104,104,104,,,,,,,,,,,,,,,,,,,,104',
',,104,,,104,,,,,,,,,104,,,,,,,,104,,,,,104,104,104,104,104,104,,,,104',
'104,,,105,105,105,,105,104,,,105,105,,104,104,105,,105,105,105,105,105',
'105,105,,,,,105,105,105,105,105,105,105,,,105,,,,,,,105,,,105,105,105',
'105,105,105,105,105,105,105,,105,105,,105,105,105,,,,,,,,,,,,,,,,,,',
',105,,,105,,,105,,,,,,,,,105,,,,,,,,105,,,,,105,105,105,105,105,105',
',,,105,105,,,106,106,106,106,106,105,,,106,106,,105,105,106,,106,106',
'106,106,106,106,106,,,,,106,106,106,106,106,106,106,,,106,,,,,,106,106',
',106,106,106,106,106,106,106,106,106,106,106,,106,106,,106,106,106,',
',,,,,,,,,,,,,,,,,,106,,,106,,,106,,,,,106,,,,106,,,,,,,,106,,,,,106',
'106,106,106,106,106,,,,106,106,,,107,107,107,107,107,106,,,107,107,',
'106,106,107,,107,107,107,107,107,107,107,,,,,107,107,107,107,107,107',
'107,,,107,,,,,,107,107,107,107,107,107,107,107,107,107,107,107,107,107',
',107,107,,107,107,107,,,,,,,,,,,,,,,,,,,,107,,,107,,,107,,,,,107,,,',
'107,,,,,,,,107,,,,,107,107,107,107,107,107,,,,107,107,,,742,742,742',
',742,107,,,742,742,,107,107,742,,742,742,742,742,742,742,742,,,,,742',
'742,742,742,742,742,742,,,742,,,,,,,742,,,742,742,742,742,742,742,742',
'742,742,742,,742,742,,742,742,742,,,,,,,,,,,,,,,,,,,,742,,,742,,,742',
',,,,,,,,742,,,,,,,,742,,,,,742,742,742,742,742,742,,,,742,742,,,469',
'469,469,,469,742,,,469,469,,742,742,469,,469,469,469,469,469,469,469',
',,,,469,469,469,469,469,469,469,,,469,,,,,,,469,,,469,469,469,469,469',
'469,469,469,469,469,,469,469,,469,469,469,,,,,,,,,,,,,,,,,,,,469,,,469',
',,469,,,,,,,,,469,,,,,,,,469,,,,,469,469,469,469,469,469,,,,469,469',
',,741,741,741,,741,469,,,741,741,,469,469,741,,741,741,741,741,741,741',
'741,,,,,741,741,741,741,741,741,741,,,741,,,,,,,741,,,741,741,741,741',
'741,741,741,741,741,741,,741,741,,741,741,741,,,,,,,,,,,,,,,,,,,,741',
',,741,,,741,,,,,,,,,741,,,,,,,,741,,,,,741,741,741,741,741,741,,,,741',
'741,,,193,193,193,193,193,741,,,193,193,,741,741,193,,193,193,193,193',
'193,193,193,,,,,193,193,193,193,193,193,193,,,193,,,,,,193,193,,193',
'193,193,193,193,193,193,193,193,193,193,,193,193,,193,193,193,,,,,,',
',,,,,,,,,,,,,193,,,193,,,193,,,,,193,,,,193,,,,,,,,193,,,,,193,193,193',
'193,193,193,,,,193,193,,,194,194,194,,194,193,,,194,194,,193,193,194',
',194,194,194,194,194,194,194,,,,,194,194,194,194,194,194,194,,,194,',
',,,,,194,,,194,194,194,194,194,194,194,194,194,194,,194,194,,194,194',
'194,,,,,,,,,,,,,,,,,,,,194,,,194,,,194,,,,,194,,,,194,,,,,,,,194,,,',
',194,194,194,194,194,194,,,,194,194,,,195,195,195,,195,194,,,195,195',
',194,194,195,,195,195,195,195,195,195,195,,,,,195,195,195,195,195,195',
'195,,,195,,,,,,,195,,,195,195,195,195,195,195,195,195,195,195,,195,195',
',195,195,195,,,,,,,,,,,,,,,,,,,,195,,,195,,,195,,,,,195,,,,195,,,,,',
',,195,,,,,195,195,195,195,195,195,,,,195,195,,,196,196,196,,196,195',
',,196,196,,195,195,196,,196,196,196,196,196,196,196,,,,,196,196,196',
'196,196,196,196,,,196,,,,,,,196,,,196,196,196,196,196,196,196,196,196',
'196,,196,196,,196,196,196,,,,,,,,,,,,,,,,,,,,196,,,196,,,196,,,,,,,',
',196,,,,,,,,196,,,,,196,196,196,196,196,196,,,,196,196,,,197,197,197',
',197,196,,,197,197,,196,196,197,,197,197,197,197,197,197,197,,,,,197',
'197,197,197,197,197,197,,,197,,,,,,,197,,,197,197,197,197,197,197,197',
'197,197,197,,197,197,,197,197,197,,,,,,,,,,,,,,,,,,,,197,,,197,,,197',
',,,,197,,,,197,,,,,,,,197,,,,,197,197,197,197,197,197,,,,197,197,,,',
',,,197,197,740,740,740,,740,197,197,,740,740,,,,740,,740,740,740,740',
'740,740,740,,,,,740,740,740,740,740,740,740,,,740,,,,,,,740,,,740,740',
'740,740,740,740,740,740,740,740,,740,740,,740,740,740,,,,,,,,,,,,,,',
',,,,,740,,,740,,,740,,,,,,,,,740,,,,,,,,740,,,,,740,740,740,740,740',
'740,,,,740,740,,,730,730,730,,730,740,,,730,730,,740,740,730,,730,730',
'730,730,730,730,730,,,,,730,730,730,730,730,730,730,,,730,,,,,,,730',
',,730,730,730,730,730,730,730,730,730,730,,730,730,,730,730,730,,,,',
',,,,,,,,,,,,,,,730,,,730,,,730,,,,,,,,,730,,,,,,,,730,,,,,730,730,730',
'730,730,730,,,,730,730,,,200,200,200,,200,730,,,200,200,,730,730,200',
',200,200,200,200,200,200,200,,,,,200,200,200,200,200,200,200,,,200,',
',,,,,200,,,200,200,200,200,200,200,200,200,200,200,,200,200,,200,200',
'200,,,,,,,,,,,,,,,,,,,,200,,,200,,,200,,,,,,,,,200,,,,,,,,200,,,,,200',
'200,200,200,200,200,,,,200,200,,,201,201,201,,201,200,,,201,201,,200',
'200,201,,201,201,201,201,201,201,201,,,,,201,201,201,201,201,201,201',
',,201,,,,,,,201,,,201,201,201,201,201,201,201,201,201,201,,201,201,',
'201,201,201,,,,,,,,,,,,,,,,,,,,201,,,201,,,201,,,,,,,,,201,,,,,,,,201',
',,,,201,201,201,201,201,201,,,,201,201,,,202,202,202,,202,201,,,202',
'202,,201,201,202,,202,202,202,202,202,202,202,,,,,202,202,202,202,202',
'202,202,,,202,,,,,,,202,,,202,202,202,202,202,202,202,202,202,202,,202',
'202,,202,202,202,,,,,,,,,,,,,,,,,,,,202,,,202,,,202,,,,,,,,,202,,,,',
',,,202,,,,,202,202,202,202,202,202,,,,202,202,,,729,729,729,,729,202',
',,729,729,,202,202,729,,729,729,729,729,729,729,729,,,,,729,729,729',
'729,729,729,729,,,729,,,,,,,729,,,729,729,729,729,729,729,729,729,729',
'729,,729,729,,729,729,729,,,,,,,,,,,,,,,,,,,,729,,,729,,,729,,,,,,,',
',729,,,,,,,,729,,,,,729,729,729,729,729,729,,,,729,729,,,723,723,723',
'723,723,729,,,723,723,,729,729,723,,723,723,723,723,723,723,723,,,,',
'723,723,723,723,723,723,723,,,723,,,,,,723,723,,723,723,723,723,723',
'723,723,723,723,723,723,,723,723,,723,723,723,,,,,,,,,,,,,,,,,,,,723',
',,723,,,723,,,,,723,,,,723,,,,,,,,723,,,,,723,723,723,723,723,723,,',
',723,723,,,485,485,485,,485,723,,,485,485,,723,723,485,,485,485,485',
'485,485,485,485,,,,,485,485,485,485,485,485,485,,,485,,,,,,,485,,,485',
'485,485,485,485,485,485,485,485,485,,485,485,,485,485,485,,,,,,,,,,',
',,,,,,,,,485,,,485,,485,485,,,,,,,485,,485,,,,,,,,485,,,,,485,485,485',
'485,485,485,,,,485,485,,,711,711,711,711,711,485,,,711,711,,485,485',
'711,,711,711,711,711,711,711,711,,,,,711,711,711,711,711,711,711,,,711',
',,,,,711,711,,711,711,711,711,711,711,711,711,711,711,711,,711,711,',
'711,711,711,,,,,,,,,,,,,,,,,,,,711,,,711,,,711,,,,,711,,,,711,,,,,,',
',711,,,,,711,711,711,711,711,711,,,,711,711,,,710,710,710,710,710,711',
',,710,710,,711,711,710,,710,710,710,710,710,710,710,,,,,710,710,710',
'710,710,710,710,,,710,,,,,,710,710,,710,710,710,710,710,710,710,710',
'710,710,710,,710,710,,710,710,710,,,,,,,,,,,,,,,,,,,,710,,,710,,,710',
',,,,710,,,,710,,,,,,,,710,,,,,710,710,710,710,710,710,,,,710,710,,,491',
'491,491,491,491,710,,,491,491,,710,710,491,,491,491,491,491,491,491',
'491,,,,,491,491,491,491,491,491,491,,,491,,,,,,491,491,,491,491,491',
'491,491,491,491,491,491,491,491,,491,491,,491,491,491,,,,,,,,,,,,,,',
',,,,,491,,,491,,,491,,,,,491,,,,491,,,,,,,,491,,,,,491,491,491,491,491',
'491,,,,491,491,,,,,,491,,491,210,210,210,210,210,491,491,,210,210,,',
',210,,210,210,210,210,210,210,210,,,,,210,210,210,210,210,210,210,,',
'210,,,,,,210,210,,210,210,210,210,210,210,210,210,210,210,210,,210,210',
',210,210,210,,,,,,,,,,,,,,,,,,,,210,,,210,,,210,,,,,210,,,,210,,,,,',
',,210,,,,,210,210,210,210,210,210,,,,210,210,,,211,211,211,,211,210',
',,211,211,,210,210,211,,211,211,211,211,211,211,211,,,,,211,211,211',
'211,211,211,211,,,211,,,,,,,211,,,211,211,211,211,211,211,211,211,211',
'211,,211,211,,211,211,211,,,,,,,,,,,,,,,,,,,,211,,,211,,211,211,,,,',
',,,,211,,,,,,,,211,,,,,211,211,211,211,211,211,,,,211,211,,,214,214',
'214,,214,211,,,214,214,,211,211,214,,214,214,214,214,214,214,214,,,',
',214,214,214,214,214,214,214,,,214,,,,,,,214,,,214,214,214,214,214,214',
'214,214,214,214,,214,214,,214,214,214,,,,,,,,,,,,,,,,,,,,214,,,214,',
',214,,,,,,,,,214,,,,,,,,214,,,,,214,214,214,214,214,214,,,,214,214,',
',707,707,707,,707,214,,,707,707,,214,214,707,,707,707,707,707,707,707',
'707,,,,,707,707,707,707,707,707,707,,,707,,,,,,,707,,,707,707,707,707',
'707,707,707,707,707,707,,707,707,,707,707,707,,,,,,,,,,,,,,,,,,,,707',
',,707,,,707,,,,,,,,,707,,,,,,,,707,,,,,707,707,707,707,707,707,,,,707',
'707,,,216,216,216,,216,707,,,216,216,,707,707,216,,216,216,216,216,216',
'216,216,,,,,216,216,216,216,216,216,216,,,216,,,,,,,216,,,216,216,216',
'216,216,216,216,216,216,216,,216,216,,216,216,216,,,,,,,,,,,,,,,,,,',
',216,,,216,,,216,,,,,,,,,216,,,,,,,,216,,,,,216,216,216,216,216,216',
',,,216,216,,,217,217,217,,217,216,,,217,217,,216,216,217,,217,217,217',
'217,217,217,217,,,,,217,217,217,217,217,217,217,,,217,,,,,,,217,,,217',
'217,217,217,217,217,217,217,217,217,,217,217,,217,217,217,,,,,,,,,,',
',,,,,,,,,217,,,217,,,217,,,,,,,,,217,,,,,,,,217,,,,,217,217,217,217',
'217,217,,,,217,217,,,218,218,218,,218,217,,,218,218,,217,217,218,,218',
'218,218,218,218,218,218,,,,,218,218,218,218,218,218,218,,,218,,,,,,',
'218,,,218,218,218,218,218,218,218,218,218,218,,218,218,,218,218,218',
',,,,,,,,,,,,,,,,,,,218,,,218,,,218,,,,,,,,,218,,,,,,,,218,,,,,218,218',
'218,218,218,218,,,,218,218,,,219,219,219,,219,218,,,219,219,,218,218',
'219,,219,219,219,219,219,219,219,,,,,219,219,219,219,219,219,219,,,219',
',,,,,,219,,,219,219,219,219,219,219,219,219,219,219,,219,219,,219,219',
'219,,,,,,,,,,,,,,,,,,,,219,,,219,,,219,,,,,,,,,219,,,,,,,,219,,,,,219',
'219,219,219,219,219,,,,219,219,,,220,220,220,,220,219,,,220,220,,219',
'219,220,,220,220,220,220,220,220,220,,,,,220,220,220,220,220,220,220',
',,220,,,,,,,220,,,220,220,220,220,220,220,220,220,220,220,,220,220,',
'220,220,220,,,,,,,,,,,,,,,,,,,,220,,,220,,,220,,,,,,,,,220,,,,,,,,220',
',,,,220,220,220,220,220,220,,,,220,220,,,221,221,221,,221,220,,,221',
'221,,220,220,221,,221,221,221,221,221,221,221,,,,,221,221,221,221,221',
'221,221,,,221,,,,,,,221,,,221,221,221,221,221,221,221,221,221,221,,221',
'221,,221,221,221,,,,,,,,,,,,,,,,,,,,221,,,221,,,221,,,,,,,,,221,,,,',
',,,221,,,,,221,221,221,221,221,221,,,,221,221,,,222,222,222,,222,221',
',,222,222,,221,221,222,,222,222,222,222,222,222,222,,,,,222,222,222',
'222,222,222,222,,,222,,,,,,,222,,,222,222,222,222,222,222,222,222,222',
'222,,222,222,,222,222,222,,,,,,,,,,,,,,,,,,,,222,,,222,,,222,,,,,,,',
',222,,,,,,,,222,,,,,222,222,222,222,222,222,,,,222,222,,,223,223,223',
',223,222,,,223,223,,222,222,223,,223,223,223,223,223,223,223,,,,,223',
'223,223,223,223,223,223,,,223,,,,,,,223,,,223,223,223,223,223,223,223',
'223,223,223,,223,223,,223,223,223,,,,,,,,,,,,,,,,,,,,223,,,223,,,223',
',,,,,,,,223,,,,,,,,223,,,,,223,223,223,223,223,223,,,,223,223,,,224',
'224,224,,224,223,,,224,224,,223,223,224,,224,224,224,224,224,224,224',
',,,,224,224,224,224,224,224,224,,,224,,,,,,,224,,,224,224,224,224,224',
'224,224,224,224,224,,224,224,,224,224,224,,,,,,,,,,,,,,,,,,,,224,,,224',
',,224,,,,,,,,,224,,,,,,,,224,,,,,224,224,224,224,224,224,,,,224,224',
',,225,225,225,,225,224,,,225,225,,224,224,225,,225,225,225,225,225,225',
'225,,,,,225,225,225,225,225,225,225,,,225,,,,,,,225,,,225,225,225,225',
'225,225,225,225,225,225,,225,225,,225,225,225,,,,,,,,,,,,,,,,,,,,225',
',,225,,,225,,,,,,,,,225,,,,,,,,225,,,,,225,225,225,225,225,225,,,,225',
'225,,,226,226,226,,226,225,,,226,226,,225,225,226,,226,226,226,226,226',
'226,226,,,,,226,226,226,226,226,226,226,,,226,,,,,,,226,,,226,226,226',
'226,226,226,226,226,226,226,,226,226,,226,226,226,,,,,,,,,,,,,,,,,,',
',226,,,226,,,226,,,,,,,,,226,,,,,,,,226,,,,,226,226,226,226,226,226',
',,,226,226,,,227,227,227,,227,226,,,227,227,,226,226,227,,227,227,227',
'227,227,227,227,,,,,227,227,227,227,227,227,227,,,227,,,,,,,227,,,227',
'227,227,227,227,227,227,227,227,227,,227,227,,227,227,227,,,,,,,,,,',
',,,,,,,,,227,,,227,,,227,,,,,,,,,227,,,,,,,,227,,,,,227,227,227,227',
'227,227,,,,227,227,,,228,228,228,,228,227,,,228,228,,227,227,228,,228',
'228,228,228,228,228,228,,,,,228,228,228,228,228,228,228,,,228,,,,,,',
'228,,,228,228,228,228,228,228,228,228,228,228,,228,228,,228,228,228',
',,,,,,,,,,,,,,,,,,,228,,,228,,,228,,,,,,,,,228,,,,,,,,228,,,,,228,228',
'228,228,228,228,,,,228,228,,,229,229,229,,229,228,,,229,229,,228,228',
'229,,229,229,229,229,229,229,229,,,,,229,229,229,229,229,229,229,,,229',
',,,,,,229,,,229,229,229,229,229,229,229,229,229,229,,229,229,,229,229',
'229,,,,,,,,,,,,,,,,,,,,229,,,229,,,229,,,,,,,,,229,,,,,,,,229,,,,,229',
'229,229,229,229,229,,,,229,229,,,230,230,230,,230,229,,,230,230,,229',
'229,230,,230,230,230,230,230,230,230,,,,,230,230,230,230,230,230,230',
',,230,,,,,,,230,,,230,230,230,230,230,230,230,230,230,230,,230,230,',
'230,230,230,,,,,,,,,,,,,,,,,,,,230,,,230,,,230,,,,,,,,,230,,,,,,,,230',
',,,,230,230,230,230,230,230,,,,230,230,,,231,231,231,,231,230,,,231',
'231,,230,230,231,,231,231,231,231,231,231,231,,,,,231,231,231,231,231',
'231,231,,,231,,,,,,,231,,,231,231,231,231,231,231,231,231,231,231,,231',
'231,,231,231,231,,,,,,,,,,,,,,,,,,,,231,,,231,,,231,,,,,,,,,231,,,,',
',,,231,,,,,231,231,231,231,231,231,,,,231,231,,,232,232,232,,232,231',
',,232,232,,231,231,232,,232,232,232,232,232,232,232,,,,,232,232,232',
'232,232,232,232,,,232,,,,,,,232,,,232,232,232,232,232,232,232,232,232',
'232,,232,232,,232,232,232,,,,,,,,,,,,,,,,,,,,232,,,232,,,232,,,,,,,',
',232,,,,,,,,232,,,,,232,232,232,232,232,232,,,,232,232,,,233,233,233',
',233,232,,,233,233,,232,232,233,,233,233,233,233,233,233,233,,,,,233',
'233,233,233,233,233,233,,,233,,,,,,,233,,,233,233,233,233,233,233,233',
'233,233,233,,233,233,,233,233,233,,,,,,,,,,,,,,,,,,,,233,,,233,,,233',
',,,,,,,,233,,,,,,,,233,,,,,233,233,233,233,233,233,,,,233,233,,,234',
'234,234,,234,233,,,234,234,,233,233,234,,234,234,234,234,234,234,234',
',,,,234,234,234,234,234,234,234,,,234,,,,,,,234,,,234,234,234,234,234',
'234,234,234,234,234,,234,234,,234,234,234,,,,,,,,,,,,,,,,,,,,234,,,234',
',,234,,,,,,,,,234,,,,,,,,234,,,,,234,234,234,234,234,234,,,,234,234',
',,235,235,235,,235,234,,,235,235,,234,234,235,,235,235,235,235,235,235',
'235,,,,,235,235,235,235,235,235,235,,,235,,,,,,,235,,,235,235,235,235',
'235,235,235,235,235,235,,235,235,,235,235,235,,,,,,,,,,,,,,,,,,,,235',
',,235,,,235,,,,,,,,,235,,,,,,,,235,,,,,235,235,235,235,235,235,,,,235',
'235,,,236,236,236,,236,235,,,236,236,,235,235,236,,236,236,236,236,236',
'236,236,,,,,236,236,236,236,236,236,236,,,236,,,,,,,236,,,236,236,236',
'236,236,236,236,236,236,236,,236,236,,236,236,236,,,,,,,,,,,,,,,,,,',
',236,,,236,,,236,,,,,,,,,236,,,,,,,,236,,,,,236,236,236,236,236,236',
',,,236,236,,,237,237,237,,237,236,,,237,237,,236,236,237,,237,237,237',
'237,237,237,237,,,,,237,237,237,237,237,237,237,,,237,,,,,,,237,,,237',
'237,237,237,237,237,237,237,237,237,,237,237,,237,237,237,,,,,,,,,,',
',,,,,,,,,237,,,237,,,237,,,,,,,,,237,,,,,,,,237,,,,,237,237,237,237',
'237,237,,,,237,237,,,238,238,238,,238,237,,,238,238,,237,237,238,,238',
'238,238,238,238,238,238,,,,,238,238,238,238,238,238,238,,,238,,,,,,',
'238,,,238,238,238,238,238,238,238,238,238,238,,238,238,,238,238,238',
',,,,,,,,,,,,,,,,,,,238,,,238,,,238,,,,,,,,,238,,,,,,,,238,,,,,238,238',
'238,238,238,238,,,,238,238,,,239,239,239,,239,238,,,239,239,,238,238',
'239,,239,239,239,239,239,239,239,,,,,239,239,239,239,239,239,239,,,239',
',,,,,,239,,,239,239,239,239,239,239,239,239,239,239,,239,239,,239,239',
'239,,,,,,,,,,,,,,,,,,,,239,,,239,,,239,,,,,,,,,239,,,,,,,,239,,,,,239',
'239,239,239,239,239,,,,239,239,,,240,240,240,,240,239,,,240,240,,239',
'239,240,,240,240,240,240,240,240,240,,,,,240,240,240,240,240,240,240',
',,240,,,,,,,240,,,240,240,240,240,240,240,240,240,240,240,,240,240,',
'240,240,240,,,,,,,,,,,,,,,,,,,,240,,,240,,,240,,,,,,,,,240,,,,,,,,240',
',,,,240,240,240,240,240,240,,,,240,240,,,241,241,241,,241,240,,,241',
'241,,240,240,241,,241,241,241,241,241,241,241,,,,,241,241,241,241,241',
'241,241,,,241,,,,,,,241,,,241,241,241,241,241,241,241,241,241,241,,241',
'241,,241,241,241,,,,,,,,,,,,,,,,,,,,241,,,241,,,241,,,,,,,,,241,,,,',
',,,241,,,,,241,241,241,241,241,241,,,,241,241,,,703,703,703,,703,241',
',,703,703,,241,241,703,,703,703,703,703,703,703,703,,,,,703,703,703',
'703,703,703,703,,,703,,,,,,,703,,,703,703,703,703,703,703,703,703,703',
'703,,703,703,,703,703,703,,,,,,,,,,,,,,,,,,,,703,,,703,,,703,,,,,703',
',,,703,,,,,,,,703,,,,,703,703,703,703,703,703,,,,703,703,,,,,,,703,703',
'699,699,699,,699,703,703,,699,699,,,,699,,699,699,699,699,699,699,699',
',,,,699,699,699,699,699,699,699,,,699,,,,,,,699,,,699,699,699,699,699',
'699,699,699,699,699,,699,699,,699,699,699,,,,,,,,,,,,,,,,,,,,699,,,699',
',,699,,,,,,,,,699,,,,,,,,699,,,,,699,699,699,699,699,699,,,,699,699',
',,698,698,698,,698,699,,,698,698,,699,699,698,,698,698,698,698,698,698',
'698,,,,,698,698,698,698,698,698,698,,,698,,,,,,,698,,,698,698,698,698',
'698,698,698,698,698,698,,698,698,,698,698,698,,,,,,,,,,,,,,,,,,,,698',
',,698,,,698,,,,,698,,,,698,,,,,,,,698,,,,,698,698,698,698,698,698,,',
',698,698,,,250,250,250,,250,698,,,250,250,,698,698,250,,250,250,250',
'250,250,250,250,,,,,250,250,250,250,250,250,250,,,250,,,,,,,250,,,250',
'250,250,250,250,250,250,250,250,250,,250,250,,250,250,250,,,,,,,,,,',
',,,,,,,,,250,,,250,,,250,,,,,,,,,250,,,,,,,,250,,,,,250,250,250,250',
'250,250,,,,250,250,,,666,666,666,,666,250,,,666,666,,250,250,666,,666',
'666,666,666,666,666,666,,,,,666,666,666,666,666,666,666,,,666,,,,,,',
'666,,,666,666,666,666,666,666,666,666,666,666,,666,666,,666,666,666',
',,,,,,,,,,,,,,,,,,,666,,,666,,,666,,,,,666,,,,666,,,,,,,,666,,,,,666',
'666,666,666,666,666,,,,666,666,,,252,252,252,,252,666,,,252,252,,666',
'666,252,,252,252,252,252,252,252,252,,,,,252,252,252,252,252,252,252',
',,252,,,,,,,252,,,252,252,252,252,252,252,252,252,252,252,,252,252,',
'252,252,252,,,,,,,,,,,,,,,,,,,,252,,,252,,,252,,,,,,,,,252,,,,,,,,252',
',,,,252,252,252,252,252,252,,,,252,252,,,257,257,257,,257,252,,,257',
'257,,252,252,257,,257,257,257,257,257,257,257,,,,,257,257,257,257,257',
'257,257,,,257,,,,,,,257,,,257,257,257,257,257,257,257,257,257,257,,257',
'257,,257,257,257,,,,,,,,,,,,,,,,,,,,257,,,257,,,257,,,,,,,,,257,,,,',
',,,257,,,,,257,257,257,257,257,257,,,,257,257,,,660,660,660,,660,257',
',,660,660,,257,257,660,,660,660,660,660,660,660,660,,,,,660,660,660',
'660,660,660,660,,,660,,,,,,,660,,,660,660,660,660,660,660,660,660,660',
'660,,660,660,,,318,660,318,318,318,318,,,,,,,,,,,,,,,,660,,,660,,,660',
',,,,,,,,,318,,318,,,,,,318,318,318,318,660,660,660,660,660,660,,,,660',
'660,,,352,352,352,,352,660,,,352,352,,660,660,352,,352,352,352,352,352',
'352,352,,,,,352,352,352,352,352,352,352,,,352,,,,,,,352,,,352,352,352',
'352,352,352,352,352,352,352,,352,352,,,,352,,,,,,,,,,,,,,,,,,,,352,',
',352,,,352,,,,,,,,,,,,,,,,,,,,,,352,352,352,352,352,352,,,,352,352,',
',350,350,350,,350,352,,,350,350,,352,352,350,,350,350,350,350,350,350',
'350,,,,,350,350,350,350,350,350,350,,,350,,,,,,,350,,,350,350,350,350',
'350,350,350,350,350,350,,350,350,,,,350,,,,,,,,,,,,,,,,,,,,350,,,350',
',,350,,,,,,,,,,,,,,,,,,,,,,350,350,350,350,350,350,,,,350,350,,,263',
'263,263,,263,350,,,263,263,,350,350,263,,263,263,263,263,263,263,263',
',,,,263,263,263,263,263,263,263,,,263,,,,,,,263,,,263,263,263,263,263',
'263,263,263,263,263,,263,263,,263,263,263,,,,,,,,,,,,,,,,,,,,263,,,263',
',,263,,,,,263,,263,,263,,,,,,,,263,,,,,263,263,263,263,263,263,,,,263',
'263,,,,,,,263,263,264,264,264,,264,263,263,,264,264,,,,264,,264,264',
'264,264,264,264,264,,,,,264,264,264,264,264,264,264,,,264,,,,,,,264',
',,264,264,264,264,264,264,264,264,264,264,,264,264,,264,264,264,,,,',
',,,,,,,,,,,,,,,264,,,264,,,264,,,,,264,,264,,264,,,,,,,,264,,,,,264',
'264,264,264,264,264,,,,264,264,,,,,,,264,264,272,272,272,,272,264,264',
',272,272,,,,272,,272,272,272,272,272,272,272,,,,,272,272,272,272,272',
'272,272,,,272,,,,,,,272,,,272,272,272,272,272,272,272,272,272,272,,272',
'272,,272,272,272,,,,,,,,,,,,,,,,,,,,272,,,272,,272,272,,,,,272,,272',
',272,,,,,,,,272,,,,,272,272,272,272,272,272,,,,272,272,,,,,,,272,272',
'497,497,497,,497,272,272,,497,497,,,,497,,497,497,497,497,497,497,497',
',,,,497,497,497,497,497,497,497,,,497,,,,,,,497,,,497,497,497,497,497',
'497,497,497,497,497,,497,497,,,,497,,,,,,,,,,,,,,,,,,,,497,,,497,,,497',
',,,,,,,,,,,,,,,,,,,,,497,497,497,497,497,497,,,,497,497,,,650,650,650',
',650,497,,,650,650,,497,497,650,,650,650,650,650,650,650,650,,,,,650',
'650,650,650,650,650,650,,,650,,,,,,,650,,,650,650,650,650,650,650,650',
'650,650,650,,650,650,,,,650,,,,,,,,,,,,,,,,,,,,650,,,650,,,650,,,,,',
',,,,,,,,,,,,,,,,650,650,650,650,650,650,,,,650,650,,,646,646,646,646',
'646,650,,,646,646,,650,650,646,,646,646,646,646,646,646,646,,,,,646',
'646,646,646,646,646,646,,,646,,,,,,646,646,,646,646,646,646,646,646',
'646,646,646,646,646,,646,646,,646,646,646,,,,,,,,,,,,,,,,,,,,646,,,646',
',,646,,,,,646,,,,646,,,,,,,,646,,,,,646,646,646,646,646,646,,,,646,646',
',,276,276,276,276,276,646,,,276,276,,646,646,276,,276,276,276,276,276',
'276,276,,,,,276,276,276,276,276,276,276,,,276,,,,,,276,276,,276,276',
'276,276,276,276,276,276,276,276,276,,276,276,,276,276,276,,,,,,,,,,',
',,,,,,,,,276,,,276,,,276,,,,,276,,,,276,,,,,,,,276,,,,,276,276,276,276',
'276,276,,,,276,276,,,645,645,645,645,645,276,,,645,645,,276,276,645',
',645,645,645,645,645,645,645,,,,,645,645,645,645,645,645,645,,,645,',
',,,,645,645,,645,645,645,645,645,645,645,645,645,645,645,,645,645,,645',
'645,645,,,,,,,,,,,,,,,,,,,,645,,,645,,,645,,,,,645,,,,645,,,,,,,,645',
',,,,645,645,645,645,645,645,,,,645,645,,,639,639,639,,639,645,,,639',
'639,,645,645,639,,639,639,639,639,639,639,639,,,,,639,639,639,639,639',
'639,639,,,639,,,,,,,639,,,639,639,639,639,639,639,639,639,639,639,,639',
'639,,639,639,639,,,,,,,,,,,,,,,,,,,,639,,,639,,,639,,,,,639,,639,,639',
',,,,,,,639,,,,,639,639,639,639,639,639,,,,639,639,,,,,,,639,639,633',
'633,633,633,633,639,639,,633,633,,,,633,,633,633,633,633,633,633,633',
',,,,633,633,633,633,633,633,633,,,633,,,,,,633,633,,633,633,633,633',
'633,633,633,633,633,633,633,,633,633,,633,633,633,,,,,,,,,,,,,,,,,,',
',633,,,633,,,633,,,,,633,,,,633,,,,,,,,633,,,,,633,633,633,633,633,633',
',,,633,633,,,280,280,280,,280,633,,,280,280,,633,633,280,,280,280,280',
'280,280,280,280,,,,,280,280,280,280,280,280,280,,,280,,,,,,,280,,,280',
'280,280,280,280,280,280,280,280,280,,280,280,,,,280,,,,,,,,,,,,,,,,',
',,,280,,,280,,,280,,,,,,,,,,,,,,,,,,,,,,280,280,280,280,280,280,,,,280',
'280,,,,280,,,,280,281,281,281,281,281,280,280,,281,281,,,,281,,281,281',
'281,281,281,281,281,,,,,281,281,281,281,281,281,281,,,281,,,,,,281,281',
',281,281,281,281,281,281,281,281,281,281,281,,281,281,,281,281,281,',
',,,,,,,,,,,,,,,,,,281,,,281,,,281,,,,,281,,,,281,,,,,,,,281,,,,,281',
'281,281,281,281,281,,,,281,281,,,625,625,625,,625,281,,,625,625,,281',
'281,625,,625,625,625,625,625,625,625,,,,,625,625,625,625,625,625,625',
',,625,,,,,,,625,,,625,625,625,625,625,625,625,625,625,625,,625,625,',
'625,625,625,,,,,,,,,,,,,,,,,,,,625,,,625,,,625,,,,,,,,,625,,,,,,,,625',
',,,,625,625,625,625,625,625,,,,625,625,,,621,621,621,621,621,625,,,621',
'621,,625,625,621,,621,621,621,621,621,621,621,,,,,621,621,621,621,621',
'621,621,,,621,,,,,,621,621,,621,621,621,621,621,621,621,621,621,621',
'621,,621,621,,621,621,621,,,,,,,,,,,,,,,,,,,,621,,,621,,,621,,,,,621',
',,,621,,,,,,,,621,,,,,621,621,621,621,621,621,,,,621,621,,,617,617,617',
',617,621,,,617,617,,621,621,617,,617,617,617,617,617,617,617,,,,,617',
'617,617,617,617,617,617,,,617,,,,,,,617,,,617,617,617,617,617,617,617',
'617,617,617,,617,617,,617,617,617,,,,,,,,,,,,,,,,,,,,617,,,617,,,617',
',,,,,,,,617,,,,,,,,617,,,,,617,617,617,617,617,617,,,,617,617,,,499',
'499,499,,499,617,,,499,499,,617,617,499,,499,499,499,499,499,499,499',
',,,,499,499,499,499,499,499,499,,,499,,,,,,,499,,,499,499,499,499,499',
'499,499,499,499,499,,499,499,,499,499,499,,,,,,,,,,,,,,,,,,,,499,,,499',
',,499,,,,,499,,,,499,,,,,,,,499,,,,,499,499,499,499,499,499,,613,,499',
'499,,,,613,613,613,499,499,613,613,613,,613,499,499,,,,,,,,613,613,',
',,,,,,613,613,,613,613,613,613,613,,,,,,,,,,,,,,,,,,,,,,613,613,613',
'613,613,613,613,613,613,613,613,613,613,613,,,613,613,613,,613,613,',
',613,,,613,,613,,613,,613,,613,613,613,613,613,613,613,,613,,613,,,',
',,,,,,,,,613,613,613,613,,613,612,,,,613,,613,612,612,612,,,612,612',
'612,,612,,,,,,,,,612,612,612,,,,,,,,612,612,,612,612,612,612,612,,,',
',,,,,,,,,,,,,,,,,,612,612,612,612,612,612,612,612,612,612,612,612,612',
'612,,,612,612,612,,612,612,,,612,,,612,,612,,612,,612,,612,612,612,612',
'612,612,612,,612,612,612,,,,,,,,,,,,,612,612,612,612,,612,,508,508,508',
'612,508,612,,,508,508,,,,508,,508,508,508,508,508,508,508,,,,,508,508',
'508,508,508,508,508,,,508,,,,,,,508,,,508,508,508,508,508,508,508,508',
'508,508,,508,508,,508,508,508,,,,,,,,,,,,,,,,,,,,508,,,508,,,508,,,',
',,,,,508,,,,,,,,508,,,,,508,508,508,508,508,508,,,,508,508,,,609,609',
'609,,609,508,,,609,609,,508,508,609,,609,609,609,609,609,609,609,,,',
',609,609,609,609,609,609,609,,,609,,,,,,,609,,,609,609,609,609,609,609',
'609,609,609,609,,609,609,,609,609,609,,,,,,,,,,,,,,,,,,,,609,,,609,',
',609,,,,,,,,,609,,,,,,,,609,,,,,609,609,609,609,609,609,,,,609,609,',
',606,606,606,,606,609,,,606,606,,609,609,606,,606,606,606,606,606,606',
'606,,,,,606,606,606,606,606,606,606,,,606,,,,,,,606,,,606,606,606,606',
'606,606,606,606,606,606,,606,606,,606,606,606,,,,,,,,,,,,,,,,,,,,606',
',,606,,,606,,,,,,,,,606,,,,,,,,606,,,,,606,606,606,606,606,606,,,,606',
'606,,,293,293,293,,293,606,,,293,293,,606,606,293,,293,293,293,293,293',
'293,293,,,,,293,293,293,293,293,293,293,,,293,,,,,,,293,,,293,293,293',
'293,293,293,293,293,293,293,,293,293,,,,293,,,,,,,,,,,,,,,,,,,,293,',
',293,,,293,,,,,,,,,,,,,,,,,,,,,,293,293,293,293,293,293,,,,293,293,',
',601,601,601,,601,293,,,601,601,,293,293,601,,601,601,601,601,601,601',
'601,,,,,601,601,601,601,601,601,601,,,601,,,,,,,601,,,601,601,601,601',
'601,601,601,601,601,601,,601,601,,601,601,601,,,,,,,,,,,,,,,,,,,,601',
',,601,,,601,,,,,,,,,601,,,,,,,,601,,,,,601,601,601,601,601,601,,,,601',
'601,,,600,600,600,,600,601,,,600,600,,601,601,600,,600,600,600,600,600',
'600,600,,,,,600,600,600,600,600,600,600,,,600,,,,,,,600,,,600,600,600',
'600,600,600,600,600,600,600,,600,600,,600,600,600,,,,,,,,,,,,,,,,,,',
',600,,,600,,,600,,,,,,,,,600,,,,,,,,600,,,,,600,600,600,600,600,600',
',,,600,600,,,598,598,598,,598,600,,,598,598,,600,600,598,,598,598,598',
'598,598,598,598,,,,,598,598,598,598,598,598,598,,,598,,,,,,,598,,,598',
'598,598,598,598,598,598,598,598,598,,598,598,,598,598,598,,,,,,,,,,',
',,,,,,,,,598,,,598,,,598,,,,,598,,,,598,,,,,,,,598,,,,,598,598,598,598',
'598,598,,,,598,598,,,596,596,596,,596,598,,,596,596,,598,598,596,,596',
'596,596,596,596,596,596,,,,,596,596,596,596,596,596,596,,,596,,,,,,',
'596,,,596,596,596,596,596,596,596,596,596,596,,596,596,,596,596,596',
',,,,,,,,,,,,,,,,,,,596,,,596,,,596,,,,,,,,,596,,,,,,,,596,,,,,596,596',
'596,596,596,596,,,,596,596,,,509,509,509,,509,596,,,509,509,,596,596',
'509,,509,509,509,509,509,509,509,,,,,509,509,509,509,509,509,509,,,509',
',,,,,,509,,,509,509,509,509,509,509,509,509,509,509,,509,509,,509,509',
'509,,,,,,,,,,,,,,,,,,,,509,,,509,,,509,,,,,,,,,509,,,,,,,,509,,,,,509',
'509,509,509,509,509,,,,509,509,,,302,302,302,,302,509,,,302,302,,509',
'509,302,,302,302,302,302,302,302,302,,,,,302,302,302,302,302,302,302',
',,302,,,,,,,302,,,302,302,302,302,302,302,302,302,302,302,,302,302,',
'302,302,302,,,,,,,,,,,,,,,,,,,,302,,,302,302,,302,,,,,,,,,302,,,,,,',
',302,,,,,302,302,302,302,302,302,,,,302,302,,,304,304,304,304,304,302',
',,304,304,,302,302,304,,304,304,304,304,304,304,304,,,,,304,304,304',
'304,304,304,304,,,304,,,,,,304,304,,304,304,304,304,304,304,304,304',
'304,304,304,,304,304,,304,304,304,,,,,,,,,,,,,,,,,,,,304,,,304,,,304',
',,,,304,,,,304,,,,,,,,304,,,,,304,304,304,304,304,304,,,,304,304,,,345',
'345,345,,345,304,,,345,345,,304,304,345,,345,345,345,345,345,345,345',
',,,,345,345,345,345,345,345,345,,,345,,,,,,,345,,,345,345,345,345,345',
'345,345,345,345,345,,345,345,,345,345,345,,,,,,,,,,,,,,,,,,,,345,,,345',
',,345,,,,,,,,,345,,,,,,,,345,,,,,345,345,345,345,345,345,,,,345,345',
',,344,344,344,,344,345,,,344,344,,345,345,344,,344,344,344,344,344,344',
'344,,,,,344,344,344,344,344,344,344,,,344,,,,,,,344,,,344,344,344,344',
'344,344,344,344,344,344,,344,344,,344,344,344,,,,,,,,,,,,,,,,,,,,344',
',,344,,,344,,,,,,,,,344,,,,,,,,344,,,,,344,344,344,344,344,344,,,,344',
'344,,,569,569,569,,569,344,,,569,569,,344,344,569,,569,569,569,569,569',
'569,569,,,,,569,569,569,569,569,569,569,,,569,,,,,,,569,,,569,569,569',
'569,569,569,569,569,569,569,,569,569,,569,569,569,,,,,,,,,,,,,,,,,,',
',569,,,569,,,569,,,,,,,,,569,,,,,,,,569,,,,,569,569,569,569,569,569',
',,,569,569,,,510,510,510,,510,569,,,510,510,,569,569,510,,510,510,510',
'510,510,510,510,,,,,510,510,510,510,510,510,510,,,510,,,,,,,510,,,510',
'510,510,510,510,510,510,510,510,510,,510,510,,510,510,510,,,,,,,,,,',
',,,,,,,,,510,,,510,,,510,,,,,,,,,510,,,,,,,,510,,,,,510,510,510,510',
'510,510,,,,510,510,,,514,514,514,,514,510,,,514,514,,510,510,514,,514',
'514,514,514,514,514,514,,,,,514,514,514,514,514,514,514,,,514,,,,,,',
'514,,,514,514,514,514,514,514,514,514,514,514,,514,514,,514,514,514',
',,,,,,,,,,,,,,,,,,,514,,,514,,,514,,,,,,,,,514,,,,,,,,514,,,,,514,514',
'514,514,514,514,,,,514,514,,,560,560,560,560,560,514,,,560,560,,514',
'514,560,,560,560,560,560,560,560,560,,,,,560,560,560,560,560,560,560',
',,560,,,,,,560,560,,560,560,560,560,560,560,560,560,560,560,560,,560',
'560,,560,560,560,,,,,,,,,,,,,,,,,,,,560,,,560,,,560,,,,,560,,,,560,',
',,,,,,560,,,,,560,560,560,560,560,560,,,,560,560,,,520,520,520,,520',
'560,,,520,520,,560,560,520,,520,520,520,520,520,520,520,,,,,520,520',
'520,520,520,520,520,,,520,,,,,,,520,,,520,520,520,520,520,520,520,520',
'520,520,,520,520,,520,520,520,,,,,,,,,,,,,,,,,,,,520,,,520,,,520,,,',
',520,,,,520,,,,,,,,520,,,,,520,520,520,520,520,520,,,,520,520,,,,,,',
'520,520,523,523,523,,523,520,520,,523,523,,,,523,,523,523,523,523,523',
'523,523,,,,,523,523,523,523,523,523,523,,,523,,,,,,,523,,,523,523,523',
'523,523,523,523,523,523,523,,523,523,,523,523,523,,,,,,,,,,,,,,,,,,',
',523,,,523,,,523,,,,,,,,,523,,,,,,,,523,,,,,523,523,523,523,523,523',
',,,523,523,,,,,,,523,523,555,555,555,555,555,523,523,,555,555,,,,555',
',555,555,555,555,555,555,555,,,,,555,555,555,555,555,555,555,,,555,',
',,,,555,555,,555,555,555,555,555,555,555,555,555,555,555,,555,555,,555',
'555,555,,,,,,,,,,,,,,,,,,,,555,,,555,,,555,,,,,555,,,,555,,,,,,,,555',
',,,,555,555,555,555,555,555,,,,555,555,,,551,551,551,551,551,555,,,551',
'551,,555,555,551,,551,551,551,551,551,551,551,,,,,551,551,551,551,551',
'551,551,,,551,,,,,,551,551,,551,551,551,551,551,551,551,551,551,551',
'551,,551,551,,551,551,551,,,,,,,,,,,,,,,,,,,,551,,,551,,,551,,,,,551',
',,,551,,,,,,,,551,,,,,551,551,551,551,551,551,,,,551,551,,,537,537,537',
',537,551,,,537,537,,551,551,537,,537,537,537,537,537,537,537,,,,,537',
'537,537,537,537,537,537,,,537,,,,,,,537,,,537,537,537,537,537,537,537',
'537,537,537,,537,537,,,,537,,,,,,,,,,,,,,,,,,,,537,,,537,,,537,,,,,',
',,,,,,,,,,,,,,,,537,537,537,537,537,537,,,,537,537,,,531,531,531,531',
'531,537,,,531,531,,537,537,531,,531,531,531,531,531,531,531,,,,,531',
'531,531,531,531,531,531,,,531,,,,,,531,531,,531,531,531,531,531,531',
'531,531,531,531,531,,531,531,,531,531,531,,,,,,,,,,,,,,,,,,,,531,,,531',
',,531,,,,,531,,,,531,,,,,,,,531,,,,,531,531,531,531,531,531,,,,531,531',
',,530,530,530,530,530,531,,,530,530,,531,531,530,,530,530,530,530,530',
'530,530,,,,,530,530,530,530,530,530,530,,,530,,,,,,530,530,,530,530',
'530,530,530,530,530,530,530,530,530,,530,530,,530,530,530,,,,,,,,,,',
',,,,,,,,,530,,,530,,,530,,,,,530,,,,530,,,,,,,,530,,,,,530,530,530,530',
'530,530,,,,530,530,,,789,789,789,789,789,530,,,789,789,,530,530,789',
',789,789,789,789,789,789,789,,,,,789,789,789,789,789,789,789,,,789,',
',,,,789,789,,789,789,789,789,789,789,789,789,789,789,789,,789,789,,789',
'789,789,,,,,,,,,,,,,,,,,,,,789,,,789,,,789,,,,,789,,,,789,,,,,,,,789',
',,,,789,789,789,789,789,789,,472,,789,789,,,,472,472,472,,789,472,472',
'472,,472,789,789,,,,,,,,472,,,,,,,,,472,472,,472,472,472,472,472,,,',
',,,,,,,,475,,,,,,,475,475,475,,,475,475,475,,475,,,,,472,,,,,475,,472',
',,,,472,472,475,475,,475,475,475,475,475,,,,,,,,,,,,,472,,,,,,,,,,,',
',472,,472,,,472,,475,,,,,,,475,,,,,475,475,,,,,,,,,,,,,,,,,,,,,475,',
',,,,,,,,,,,475,,475,,,475,397,397,397,397,397,397,397,397,397,397,397',
'397,397,397,397,397,397,397,397,397,397,397,397,397,,,397,397,397,397',
'397,397,397,397,397,397,397,397,397,397,397,397,397,397,397,397,397',
'397,397,,,397,,,,,,,,397,397,,397,397,397,397,397,397,397,,,397,,,,',
'397,397,397,397,,,,,,,,,,,,,397,397,,397,397,397,397,397,397,397,397',
'397,397,397,,,397,397,,,,,,,,,,397,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7',
'7,7,7,7,7,7,7,,,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,,7,',
',,,,,,7,7,,7,7,7,7,7,7,7,,,7,,,,,7,7,7,7,,,,,,,,,,,,,7,7,,7,7,7,7,7',
'7,7,7,7,7,7,,,7,7,,,,,,,,,,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8',
'8,8,8,8,,,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,,,8,,,,,,,,8',
'8,,8,8,8,8,8,8,8,,,8,,,,,8,8,8,8,,,,,,,,,,,,,8,8,,8,8,8,8,8,8,8,8,8',
'8,8,,,8,8,,,,,,,,,,8,393,393,393,393,393,393,393,393,393,393,393,393',
'393,393,393,393,393,393,393,393,393,393,393,393,,,393,393,393,393,393',
'393,393,393,393,393,393,393,393,393,393,393,393,393,393,393,393,393',
'393,,,393,,,,,,,,393,393,,393,393,393,393,393,393,393,,,393,,,,,393',
'393,393,393,,,,,,,,,,,,,393,393,,393,393,393,393,393,393,393,393,393',
'393,393,,,393,393,,,,,,,,,,393,190,190,190,190,190,190,190,190,190,190',
'190,190,190,190,190,190,190,190,190,190,190,190,190,190,,,190,190,190',
'190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190',
'190,190,190,190,190,190,190,,,,,,,190,190,,190,190,190,190,190,190,190',
',,190,,,,,190,190,190,190,,,,,,,,,,,,,190,190,,190,190,190,190,190,190',
'190,190,190,190,190,,,190,65,65,65,65,65,65,65,65,65,65,65,65,65,65',
'65,65,65,65,65,65,65,65,65,65,,,65,65,65,65,65,65,65,65,65,65,65,65',
'65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,,,,,,,65,65,,65,65,65,65',
'65,65,65,,,65,,,,,65,65,65,65,,,,,,65,,,,,,,65,65,,65,65,65,65,65,65',
'65,65,65,65,65,,,65,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79',
'79,79,79,79,79,79,79,79,,,79,79,79,79,79,79,79,79,79,79,79,79,79,79',
'79,79,79,79,79,79,79,79,79,79,79,79,79,,,,,,,79,79,,79,79,79,79,79,79',
'79,,,79,,,,,79,79,79,79,,,,,,,,,,,,,79,79,,79,79,79,79,79,79,79,79,79',
'79,79,,,79,720,720,720,720,720,720,720,720,720,720,720,720,720,720,720',
'720,720,720,720,720,720,720,720,720,,,720,720,720,720,720,720,720,720',
'720,720,720,720,720,720,720,720,720,720,720,720,720,720,720,,,720,,',
',,,,,720,720,,720,720,720,720,720,720,720,,,720,,,,,720,720,720,720',
',,,,,,,,,,,,720,720,,720,720,720,720,720,720,720,720,720,720,720,638',
'638,720,,638,,,,,,,,638,638,,638,638,638,638,638,638,638,,,638,,,,,638',
'638,638,638,,,,,,,,,,,,,638,638,,638,638,638,638,638,638,638,638,638',
'638,638,702,702,638,,702,,,,,,,,702,702,,702,702,702,702,702,702,702',
',,702,,,,,702,702,702,702,,,,,,,,,,,,,702,702,,702,702,702,702,702,702',
'702,702,702,702,702,512,512,702,,512,,,,,,,,512,512,,512,512,512,512',
'512,512,512,,,512,,,,,512,512,512,512,,,,,,,,,,,,,512,512,,512,512,512',
'512,512,512,512,512,512,512,512,776,776,512,,776,,,,,,,,776,776,,776',
'776,776,776,776,776,776,,,776,,,,,776,776,776,776,,,,,,,,,,,,,776,776',
',776,776,776,776,776,776,776,776,776,776,776,501,501,776,,501,,,,,,',
',501,501,,501,501,501,501,501,501,501,,,501,,,,,501,501,501,501,,,,',
',,,,,,,,501,501,,501,501,501,501,501,501,501,501,501,501,501,893,893',
'501,,893,,,,,,,,893,893,,893,893,893,893,893,893,893,,,893,,,,,893,893',
'893,893,,,,,,,,,,,,,893,893,,893,893,893,893,893,893,893,893,893,893',
'893,892,892,893,,892,,,,,,,,892,892,,892,892,892,892,892,892,892,,,892',
',,,,892,892,892,892,,,,,,892,,,,,,,892,892,,892,892,892,892,892,892',
'892,892,892,892,892,511,511,892,,511,,,,,,,,511,511,,511,511,511,511',
'511,511,511,,,511,,,,,511,511,511,511,,,,,,511,,,,,,,511,511,,511,511',
'511,511,511,511,511,511,511,511,511,261,261,511,,261,,,,,,,,261,261',
',261,261,261,261,261,261,261,,,261,,,,,261,261,261,261,,,,,,,,,,,,,261',
'261,,261,261,261,261,261,261,261,261,261,261,261,704,704,261,,704,,',
',,,,,704,704,,704,704,704,704,704,704,704,,,704,,,,,704,704,704,704',
',,,,,704,,,,,,,704,704,,704,704,704,704,704,704,704,704,704,704,704',
'427,427,704,,427,,,,,,,,427,427,,427,427,427,427,427,427,427,,,427,',
',,,427,427,427,427,,,,,,427,,,,,,,427,427,,427,427,427,427,427,427,427',
'427,427,427,427,428,428,427,,428,,,,,,,,428,428,,428,428,428,428,428',
'428,428,,,428,,,,,428,428,428,428,,,,,,,,,,,,,428,428,,428,428,428,428',
'428,428,428,428,428,428,428,199,199,428,,199,,,,,,,,199,199,,199,199',
'199,199,199,199,199,,,199,,,,,199,199,199,199,,,,,,,,,,,,,199,199,,199',
'199,199,199,199,199,199,199,199,199,199,500,500,199,,500,,,,,,,,500',
'500,,500,500,500,500,500,500,500,,,500,,,,,500,500,500,500,,,,,,500',
',,,,,,500,500,,500,500,500,500,500,500,500,500,500,500,500,260,260,500',
',260,,,,,,,,260,260,,260,260,260,260,260,260,260,,,260,,,,,260,260,260',
'260,,,,,,,,,,,,,260,260,,260,260,260,260,260,260,260,260,260,260,260',
'637,637,260,,637,,,,,,,,637,637,,637,637,637,637,637,637,637,,,637,',
',,,637,637,637,637,,,,,,,,,,,,,637,637,,637,637,637,637,637,637,637',
'637,637,637,637,198,198,637,,198,,,,,,,,198,198,,198,198,198,198,198',
'198,198,,,198,,,,,198,198,198,198,,,,,,198,,,,,,,198,198,,198,198,198',
'198,198,198,198,198,198,198,198,,,198' ]
        racc_action_check = arr = ::Array.new(22287, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_action_pointer = [
    -2,  1173,   nil,   262,   nil,  1628,  1042, 20486, 20606,  1026,
   998,   989,  1024,   310,   246,   207,   nil,  1628,  1750,  1262,
  1010,   nil,  2116,  2244,  2372,    -4,   104,  2740,  2868,   nil,
  2994,  3116,  3238,   nil,   887,   328,   955,   212,  3854,  3976,
  4098,   855,   541,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
  4460,   nil,  4593,  4715,  4843,    37,  3379,  5215,  5337,   nil,
   nil,  5459,  5581,   836,   nil, 20955,   nil,   nil,   nil,   nil,
   nil,   -48,   nil,   nil,   nil,   nil,   nil,   788,   745, 21064,
   nil,   nil,   nil,  6447,   nil,   nil,  6575,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   844,   nil,  6825,   nil,
   nil,   nil,  6947,  7069,  7191,  7313,  7435,  7557,   nil,   591,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
 20846,   664,   nil,  8045,  8167,  8289,  8411,  8533, 22176, 21940,
  8905,  9027,  9149,   nil,   321,   116,   691,    82,   581,   625,
 10009, 10131,   nil,   nil, 10253,   593, 10497, 10619, 10741, 10863,
 10985, 11107, 11229, 11351, 11473, 11595, 11717, 11839, 11961, 12083,
 12205, 12327, 12449, 12571, 12693, 12815, 12937, 13059, 13181, 13303,
 13425, 13547,   nil,   nil,   nil,   890,   nil,   523,   516,   nil,
 14041,   259, 14285,   nil,   nil,   nil,   nil, 14407,   nil,   nil,
 22058, 21704,   115, 14895, 15023,   nil,   nil,   nil,   nil,   nil,
   nil,   nil, 15151,   273,  1506,   688, 15645,   793,   959,   995,
 16139, 16267,   509,   346,   968,   344,   170,   165,    -1,   nil,
   229,   309,   nil, 17494,   nil,   642,   433,   543,   242,   nil,
   597,   nil, 18226,   nil, 18348,    34,   nil,   557,   464,   105,
   625,   401,   643,   nil,   233,   nil,   nil,   447, 14542,   nil,
   nil,   nil,   653,   655,   nil,   663,   672,   nil,   nil,   nil,
   nil,   nil,   nil,  2283,   nil,   nil,   nil,   749,   nil,   nil,
   831,   446,    83,    89, 18592, 18470,   287,   269,   798,   926,
 14773,   nil, 14651,   306,   336,   312,   408,   404,   382,   412,
    46,   nil,   184,   nil,   nil,  4971,   nil,   182,   nil,   234,
   nil,   -24,  1010,   -51,   nil,  1024,   -43,   nil,   231,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,  1070, 20726,   nil,   nil,   nil, 20366,  1085,   nil,
   nil,   634,   nil,   120,  1047,   nil,  1044,   nil,   nil,  2500,
  1055,   676,   326,   238,   nil,   nil,   nil,   366,  1055,   499,
   nil,   634,  1134,   nil,  1994,   nil,   nil, 21822, 21881,  2622,
   -44,  3488,  5093,  5703,   184,   nil,  4593,  3854,  1127,  1005,
  1039,  1035,  1033,  1032,  4715,  3359,  3112,  2994,  2821,  2691,
  4411,  3231,  3976,  3732,  3610,  3488,  4342,  1325,  1075,  4220,
  4098,  2116,    72,   nil,  5825,   nil,   nil,  6319,   nil,  7801,
   nil,   nil, 20186,   nil,   nil, 20240,   -47,   nil,  1006,   969,
   402,   913,   997,   nil,   nil,  9515,   -50,   156,   921,   nil,
   nil,  9881,   910,   849,   nil,   nil,   847, 15279,   859, 16755,
 21999, 21468,   410,   830,   nil,   nil,   790,   nil, 17128, 18104,
 18836, 21645, 21350,  2372, 18958,   843,   828,   712,   nil,   nil,
 19202,   nil,   nil, 19330,   nil,  5953,   nil,   nil,   nil,   nil,
 19946, 19824,   698,   nil,   835,   nil,   nil, 19702,  3251,   nil,
   399,   nil,   nil,   687,   nil,  2155,   nil,   636,   999,   nil,
   nil, 19580,   744,   nil,   nil, 19458,   170,   162,   706,   709,
 19080,   nil,   nil,    -2,   641,   nil,   315,   nil,    33, 18714,
   nil,  5594,   nil,   nil,   nil,     3,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   164,   nil,   nil,   nil,
   534,   nil,   nil,   nil,   nil,   nil, 17982,   525, 17860,   774,
 17738, 17616,   263,   nil,   nil,   nil, 17372,   229,   nil, 17250,
    15,    14, 17001, 16873,    74,   762,   nil, 16633,   nil,  3129,
   nil, 16511,   484,   nil,   668, 16389,   nil,   914,   nil,   nil,
   nil,   nil,   nil, 16017,   nil,  1092,   246, 22117, 21232, 15889,
  1134,   850,   nil,   nil,   814, 15767, 15523,   nil,  1680,   -25,
 15401,   -88,   nil,   -26,    92,   137,   142,   135,   338,   208,
 14529,  1012,   264,   268,   127,   322, 14163,   nil,   nil,   434,
   nil,   274,   414,   nil,   nil,   295,   nil,   331,   311,   472,
   465,   467,   nil,   nil,   507,  2411,   nil,   645,   nil,   603,
   nil,   nil,   nil,   nil,   nil,   618,   nil,   620, 13919, 13797,
   193,   nil, 21291, 13669, 21763,   nil,   nil, 10375,   232,   -25,
  9759,  9637,  3418,   131,   600,   602,   617,   nil,   611,   nil,
 21173,   663,   618,  9393,   nil,   nil,   nil,  1384,   633,  9271,
  8783,   nil,  1506,   nil,  1628,   nil,   nil,  1750,   nil,  1872,
  8661,  7923,  7679,   237,  2244,   nil,   697,   794,   nil,   nil,
   696,   nil,   nil,   732,   735,   340,   813,  6703,   nil,   737,
   838,   724,   342,   nil,   nil,   862,   nil,  6197,   747,   794,
   nil,   nil,   nil,   nil,   nil,   nil, 21409,   nil,   886,   nil,
   nil,   nil,   nil,  1249,   894,   nil,   nil,   895,  6075, 20068,
   nil,   nil,    77,   -19,   637,   nil,   839,   837,  4342,   171,
   nil,   nil,   956,   959,   847,   nil,  3168,   nil,   792,   nil,
   nil,    -6,  4220,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   869,   861,   nil,  2622,  3732,   nil,   nil,   nil,   912,   882,
   nil,   nil,   nil,  3610,   nil,   nil,    -7,  3366,   nil,   933,
  -113,   nil,   nil,  2500,   nil,  1019,  1027,  1994,  1872,   nil,
   nil,  1030,   nil,  1506,   nil,   nil,   966,   932,   947,   nil,
   962,   958,   nil,   nil,  2802,   nil,   nil,   nil,  1384,   nil,
  1262,   295,   282,  1049,   162,   nil,   nil,    70,   nil,   nil,
    63,  1012,   nil,  1113,   nil,   758,   nil,   nil,   nil,   890,
  1124,   762, 21586, 21527,   377,   499,   nil,   nil,   nil,  1149,
   nil,  1034,  1151,   nil,  1070,    63,    62,    71,   543,   385,
   nil,   nil,   nil,   557,   nil ]

racc_action_default = [
    -3,  -526,    -1,  -513,    -4,    -6,  -526,  -526,  -526,  -526,
  -526,  -526,  -526,  -526,  -267,   -36,   -37,  -526,  -526,   -42,
   -44,   -45,  -278,  -317,  -318,   -49,  -245,  -245,  -245,   -61,
   -10,   -65,   -72,   -74,  -526,  -444,  -526,  -526,  -526,  -526,
  -526,  -515,  -225,  -260,  -261,  -262,  -263,  -264,  -265,  -266,
  -503,  -269,  -526,  -524,  -524,  -286,  -524,  -526,  -526,  -291,
  -294,  -513,  -526,  -303,  -309,  -526,  -319,  -320,  -389,  -390,
  -391,  -392,  -393,  -524,  -396,  -524,  -524,  -524,  -524,  -524,
  -423,  -429,  -430,  -433,  -434,  -435,  -436,  -437,  -438,  -439,
  -440,  -441,  -442,  -443,  -446,  -447,  -526,    -2,  -514,  -520,
  -521,  -522,  -526,  -526,  -526,  -526,  -526,    -3,   -13,  -526,
  -100,  -101,  -102,  -103,  -104,  -105,  -106,  -109,  -110,  -111,
  -112,  -113,  -114,  -115,  -116,  -117,  -118,  -119,  -120,  -121,
  -122,  -123,  -124,  -125,  -126,  -127,  -128,  -129,  -130,  -131,
  -132,  -133,  -134,  -135,  -136,  -137,  -138,  -139,  -140,  -141,
  -142,  -143,  -144,  -145,  -146,  -147,  -148,  -149,  -150,  -151,
  -152,  -153,  -154,  -155,  -156,  -157,  -158,  -159,  -160,  -161,
  -162,  -163,  -164,  -165,  -166,  -167,  -168,  -169,  -170,  -171,
  -172,  -173,  -174,  -175,  -176,  -177,  -178,  -179,  -180,  -181,
  -526,   -18,  -107,   -10,  -526,  -526,  -526,  -524,  -526,  -526,
  -526,  -526,  -526,   -40,  -526,  -444,  -526,  -267,  -526,  -526,
   -10,  -526,   -41,  -217,  -526,  -526,  -526,  -526,  -526,  -526,
  -526,  -526,  -526,  -526,  -526,  -526,  -526,  -526,  -526,  -526,
  -526,  -526,  -526,  -526,  -526,  -526,  -526,  -526,  -526,  -526,
  -526,  -526,  -360,  -362,   -46,  -226,  -238,  -525,  -525,  -242,
  -526,  -253,  -526,  -278,  -317,  -318,  -497,  -526,   -47,   -48,
  -526,  -526,   -53,  -524,  -526,  -285,  -365,  -372,  -374,   -59,
  -370,   -60,  -526,  -513,   -11,   -61,   -10,  -526,  -526,   -66,
   -69,   -10,   -80,  -526,  -526,   -87,  -281,  -515,  -526,  -321,
  -371,  -526,   -71,  -526,   -76,  -274,  -431,  -432,  -526,  -202,
  -203,  -218,  -526,  -516,   -10,  -515,  -227,  -515,  -517,  -517,
  -526,  -517,  -526,  -494,  -517,  -287,  -288,  -526,  -526,  -332,
  -333,  -341,  -524,  -466,  -348,  -524,  -524,  -359,  -462,  -463,
  -464,  -465,  -467,  -526,  -478,  -483,  -484,  -486,  -487,  -488,
  -526,   -43,  -526,  -526,  -526,  -526,  -513,  -526,  -514,  -526,
  -526,  -306,  -526,  -100,  -101,  -137,  -138,  -154,  -159,  -166,
  -169,  -312,  -526,  -444,  -492,  -526,  -394,  -526,  -409,  -526,
  -411,  -526,  -526,  -526,  -401,  -526,  -526,  -407,  -526,  -422,
  -424,  -425,  -426,  -427,   915,    -5,  -523,   -19,   -20,   -21,
   -22,   -23,  -526,  -526,   -15,   -16,   -17,  -526,  -526,   -25,
   -33,  -182,  -253,  -526,  -526,   -26,   -34,   -35,   -27,  -184,
  -526,  -504,  -505,  -245,  -367,  -506,  -507,  -504,  -245,  -505,
  -369,  -509,  -510,   -32,  -191,   -38,   -39,  -526,  -526,  -524,
  -274,  -526,  -526,  -526,  -526,  -284,  -192,  -193,  -194,  -195,
  -196,  -197,  -198,  -199,  -204,  -205,  -206,  -207,  -208,  -209,
  -210,  -211,  -212,  -213,  -214,  -215,  -216,  -219,  -220,  -221,
  -222,  -526,  -524,  -239,  -526,  -252,  -240,  -526,  -250,  -526,
  -254,  -500,  -245,  -504,  -505,  -245,  -524,   -54,  -526,  -515,
  -515,  -525,  -238,  -246,  -247,  -526,  -524,  -524,  -526,  -280,
    -9,  -514,  -526,   -62,  -272,   -77,   -67,  -526,  -526,  -524,
  -526,  -526,   -86,  -526,  -431,  -432,   -73,   -78,  -526,  -526,
  -526,  -526,  -526,  -223,  -526,  -381,  -526,  -526,  -228,  -229,
  -519,  -518,  -231,  -519,  -276,  -519,  -496,  -277,  -495,  -329,
   -10,   -10,  -526,  -331,  -526,  -350,  -357,  -526,  -354,  -355,
  -526,  -358,  -466,  -526,  -469,  -526,  -471,  -473,  -477,  -485,
  -489,   -10,  -322,  -323,  -324,   -10,  -526,  -526,  -526,  -526,
   -10,  -376,  -300,   -96,  -526,   -98,  -526,  -267,  -526,  -526,
  -310,  -461,  -314,  -511,  -512,  -515,  -395,  -410,  -413,  -414,
  -416,  -397,  -412,  -398,  -399,  -400,  -526,  -403,  -405,  -406,
  -526,  -428,    -7,   -14,  -108,   -24,  -526,  -259,  -526,  -275,
  -526,  -526,   -55,  -236,  -237,  -366,  -526,   -57,  -368,  -526,
  -504,  -505,  -504,  -505,  -526,  -182,  -283,  -526,  -344,  -526,
  -346,   -10,  -525,  -251,  -255,  -526,  -498,  -526,  -499,   -50,
  -363,   -51,  -364,   -10,  -232,  -526,  -526,  -526,  -526,  -526,
   -42,  -526,  -244,  -248,  -526,   -10,   -10,  -279,   -12,   -62,
  -526,   -70,   -75,  -526,  -504,  -505,  -524,  -508,   -85,  -526,
  -526,  -190,  -200,  -201,  -526,  -524,  -524,  -270,  -271,  -517,
  -255,  -526,  -526,  -330,  -342,  -526,  -349,  -524,  -343,  -526,
  -524,  -524,  -479,  -468,  -526,  -526,  -476,  -524,  -325,  -524,
  -292,  -326,  -327,  -328,  -295,  -526,  -298,  -526,  -526,  -526,
   -96,   -97,  -526,  -524,  -526,  -304,  -448,  -526,  -526,  -526,
   -10,   -10,  -461,  -526,  -491,  -491,  -491,  -460,  -466,  -481,
  -526,  -526,  -526,   -10,  -402,  -404,  -408,  -183,  -257,  -526,
  -526,   -29,  -186,   -30,  -187,   -56,   -31,  -188,   -58,  -189,
  -526,  -526,  -526,  -275,  -224,  -345,  -526,  -526,  -241,  -256,
  -526,  -233,  -234,  -524,  -524,  -515,  -526,  -526,  -249,  -526,
  -526,   -68,   -81,   -79,  -282,  -524,  -339,   -10,  -382,  -524,
  -383,  -384,  -230,  -334,  -335,  -356,  -526,  -274,  -526,  -352,
  -353,  -470,  -472,  -475,  -526,  -336,  -337,  -526,   -10,   -10,
  -297,  -299,  -526,  -526,   -96,   -99,  -508,  -526,   -10,  -526,
  -450,  -307,  -526,  -526,  -515,  -452,  -526,  -456,  -526,  -458,
  -459,  -526,  -526,  -315,  -493,  -415,  -418,  -419,  -420,  -421,
  -526,  -258,   -28,  -185,  -526,  -347,  -361,   -52,  -526,  -525,
  -373,  -375,    -8,   -10,  -388,  -340,  -526,  -526,  -386,  -273,
  -524,  -474,  -289,  -526,  -290,  -526,  -526,  -526,   -10,  -301,
  -275,  -526,  -449,   -10,  -311,  -313,  -526,  -491,  -491,  -490,
  -491,  -526,  -482,  -480,  -461,  -417,  -235,  -243,  -526,  -387,
   -10,   -88,  -526,  -526,   -95,  -385,  -351,  -526,  -293,  -296,
  -524,   -10,  -305,  -526,  -451,  -526,  -454,  -455,  -457,   -10,
  -381,  -524,  -526,  -526,   -94,   -10,  -377,  -378,  -379,  -526,
  -308,  -491,  -526,  -380,  -526,  -504,  -505,  -508,   -93,  -524,
  -302,  -453,  -316,   -89,  -338 ]

clist = [
'12,310,246,246,246,309,314,278,113,113,413,418,516,559,361,289,289,319',
'477,466,302,400,407,279,623,327,13,623,380,5,12,116,116,307,544,551',
'555,480,506,665,108,192,711,204,204,642,289,714,204,204,204,262,269',
'271,98,292,13,283,283,519,522,682,526,342,343,528,113,346,543,277,275',
'784,472,475,717,577,690,694,204,204,113,587,674,204,204,2,536,204,283',
'539,541,630,97,765,632,701,212,862,12,626,644,344,244,258,259,788,12',
'12,387,388,389,390,345,807,809,810,789,787,266,270,699,369,371,621,13',
'378,881,5,204,204,204,204,13,13,350,391,5,633,568,380,570,798,569,853',
'352,410,710,645,646,309,347,571,720,677,864,626,317,681,529,316,843',
'680,315,312,364,247,247,247,483,304,398,705,462,486,862,487,896,307',
'698,769,836,366,367,572,373,586,362,278,714,376,716,113,392,12,815,722',
'723,311,804,623,422,857,393,349,191,832,782,385,1,,12,,,,,717,,,,13',
'204,204,204,204,695,101,204,204,204,,,,,795,,,13,204,,413,418,,651,482',
'246,,544,,,686,,,246,278,,,886,887,278,888,,,,,289,,503,,,,,,399,405',
'408,,12,289,423,532,684,12,,101,517,507,518,327,,204,204,,,914,725,',
',,204,,911,,13,496,12,,283,13,897,859,,859,656,849,859,492,275,,,283',
'498,275,,656,491,35,674,,,682,13,716,,,289,889,289,404,404,,714,,,479',
'484,,,,,,556,557,488,,,35,282,282,735,,,,490,738,,,,717,,,204,204,630',
'632,,,566,614,566,,266,309,270,,,,544,282,859,,363,204,10,748,113,761',
',840,113,,,,,,,,481,247,,307,,,,755,903,247,622,116,802,803,772,116',
'10,35,,858,593,860,623,422,594,35,35,,,558,,,602,,,775,,607,779,780',
',653,,753,754,309,,,,204,,,635,636,,,,,,,,,,,,,669,,,,,,,307,,289,,716',
'841,848,,,,507,10,12,,770,,101,,629,10,10,631,,422,,901,604,851,671',
'672,,608,204,,422,,,656,13,35,,648,289,,283,,204,,,687,870,12,12,689',
',,35,,697,,,204,,,,,,898,,,,,12,,,721,12,13,13,,,12,883,,678,604,,,604',
'101,,895,,,,,,203,13,,,746,13,,,,10,13,,327,,,622,,,,204,,902,747,,867',
'35,10,,876,282,35,,,,750,305,,,,,341,341,282,756,341,12,759,760,,,204',
'204,,35,,,204,12,289,,,,,,,,507,,289,12,12,13,,,,797,763,,,309,,14,',
'13,,341,341,341,341,204,,,10,813,,13,13,10,,363,283,363,731,733,,,,307',
'736,,283,14,285,285,,,,,,,10,,,,820,,,422,656,793,,,,,12,12,,799,,,',
',,285,,113,,12,,204,,,,204,,,,204,828,,13,13,,,,,,,835,,,,604,13,,608',
',,,14,204,,,,425,426,,14,14,845,846,12,,,434,,,,,,,422,691,691,,,,856',
',,,,12,12,706,,,13,,,,,12,,,,,,,,,,822,404,869,,,,13,13,35,,,,,289,282',
',13,880,,,,,,,,12,402,406,,,,904,,792,,309,,604,604,890,12,877,14,,',
'12,,35,35,,899,13,,,363,872,,,,14,,204,12,307,909,,13,,35,,,13,35,12',
',10,,35,,,,12,468,,470,,422,12,13,471,,,829,,,341,341,,,13,,,,,,,,13',
',204,,,,13,10,10,575,,,,,,800,801,,14,,805,,285,14,,,,,10,,,35,10,,',
'285,,10,,,,,,35,,,14,,,,,,,,,35,35,,,,282,,,,,,,,,,282,,,,,,,,,306,313',
',320,,,,,,,,,,567,,567,,,,10,368,691,370,370,374,377,370,852,,,,10,',
',,,,,,,,35,35,10,10,,,,,597,305,,,,35,,,,,,,,,,,,,,,,,,,,,,,,,664,,',
',,,,,,,,,,,,,,,,35,,,,,,,,,,10,10,624,,,627,,628,,,,35,35,10,,,,,,,',
'35,,641,,,709,,,,,,,,,,306,,,,,,,,,,14,,,,,,285,,,,35,10,624,,871,627',
',670,,,,,,,,35,,,,,35,,10,10,,,,,,14,14,,10,,,,567,35,,,,,,,,,478,,35',
',14,,,,14,,35,,,14,,,35,,,,,10,,,,875,,,,,,,,,728,,10,,,,,10,,,,,,,',
',,,,,341,,,,10,,,749,341,,,,,,,10,,,,,14,624,,10,,,,,,10,,,14,,,,,,',
',,,,,14,14,,,768,285,,,,,,,,,,285,,,,,,,,,,,,,,,,,,,,,402,,,,,,,,,,',
',,,,,603,213,,,,245,245,245,,,,,,14,14,821,306,,,,,299,300,301,,819',
'14,,,,,,,,,,245,245,,,,,,402,,,,,341,618,,,,,,,,,,603,,,603,618,,,,',
',,14,,,618,618,,,,,,,,,,,,306,,,,,14,14,,,,,,863,,,14,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,670,,,14,,,,874,,,,,,,,,,,14,,,670,,14,,,,,,,,,,,,',
',,,,14,,,,401,245,409,245,,,424,14,,,,,,,,14,,,,,213,14,436,437,438',
'439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455',
'456,457,458,459,460,461,,,,,,,,,245,,245,,,,,245,,,603,,,245,245,,,',
',766,771,,245,,,,,,,,,,,,,,,,,,,766,,766,,,,,,,,,513,,,,,306,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,288,288,,,,,,288,288,288,,,,,603,603,,,',
',,,,288,,,834,,,,838,288,,,,,,,,,,,,,,,,,,,,,,,,,,,,,245,,,,,,,,,,,',
',,,,,,,,,,,,,,245,,424,615,409,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,245,,,245',
',245,,,,,,,,,,,,,,,766,640,,,,,,,,,,306,,,,245,,,,,,,,,661,662,663,',
',766,,,,,,,245,,,245,,245,288,,288,288,288,288,288,288,288,288,288,288',
'288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,,,,',
',,,,288,,288,,,,,288,,,,,,,,,,,,,,,,,,,,,,,288,,,,727,,245,,732,734',
',,,288,737,,,739,,,,,288,,,744,,,,,,,,245,,,,,,,,,,,,,,245,,,,,,,,,',
',,,,,,,,,,,,,288,,288,,245,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,245,,,,,245',
',,,,,,,,,,,288,,,,,,,,,,,,,,245,823,,,,,,,,,,732,734,737,288,288,288',
',,,,,,,,,,,245,,,,,,,,,,,,,,,,,,,288,,,288,,288,,,,,,,,,,,,,,,,,,,,',
',,,,,,,288,,,245,,,,,,,,288,288,288,,823,,,,,,,,288,,,288,,288,,,,,',
',,,,245,,288,,,,,,,,,,,,,,,,,,,245,,,,,,,,,,,,,,,,,,,,,,,245,,,,,,,',
',,,,,,,,,288,,288,,,,,,,,,,,288,,,,,,,,288,,,,,,,,288,,,,,,,,,,,,,,',
',,,,,,,,,,288,,,,,,,,,,288,,,,,,288,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,288',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,288,,,,,,,,,,,288,288,288,,,,,,,,,,,,',
',,288,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,288,,,,',
',,,,,,,288,,,,,,,,,,,,,288,,,,,,,,,,288,,,,,,,,,,,,,,,,,,,,,288' ]
        racc_goto_table = arr = ::Array.new(2518, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'20,22,29,29,29,56,56,9,48,48,33,33,8,79,47,52,52,103,35,59,51,24,24',
'41,60,107,21,60,47,7,20,50,50,29,138,76,76,32,43,10,14,14,82,21,21,60',
'52,110,21,21,21,34,34,34,6,42,21,21,21,55,55,139,55,16,16,55,48,16,140',
'39,38,77,33,33,108,129,78,78,21,21,48,129,106,21,21,2,109,21,21,109',
'109,58,4,11,58,45,18,143,20,146,61,86,31,31,31,87,20,20,16,16,16,16',
'88,137,137,137,89,11,57,57,90,126,126,36,21,126,91,7,21,21,21,21,21',
'21,92,7,7,36,46,47,46,93,94,95,96,22,97,36,36,56,4,98,99,111,100,146',
'101,111,102,75,104,105,73,72,71,54,54,54,62,85,9,80,113,115,143,116',
'117,29,118,119,120,124,125,84,127,128,83,9,110,130,111,48,2,20,131,132',
'133,54,135,60,48,136,27,19,15,12,141,5,1,,20,,,,,108,,,,21,21,21,21',
'21,79,81,21,21,21,,,,,45,,,21,21,,33,33,,43,29,29,,138,,,138,,,29,9',
',,137,137,9,137,,,,,52,,51,,,,,,18,18,18,,20,52,18,103,140,20,,81,51',
'41,51,107,,21,21,,,77,129,,,,21,,137,,21,42,20,,21,21,11,108,,108,33',
'78,108,39,38,,,21,39,38,,33,6,44,106,,,139,21,111,,,52,82,52,54,54,',
'110,,,31,31,,,,,,16,16,31,,,44,44,44,35,,,,4,35,,,,108,,,21,21,58,58',
',,21,22,21,,57,56,57,,,,138,44,108,,44,21,17,59,48,43,,111,48,,,,,,',
',54,54,,29,,,,32,10,54,56,50,8,8,55,50,17,44,,111,14,111,60,48,14,44',
'44,,,4,,,34,,,109,,34,109,109,,22,,33,33,56,,,,21,,,51,51,,,,,,,,,,',
',,56,,,,,,,29,,52,,111,138,76,,,,41,17,20,,24,,81,,34,17,17,34,,48,',
'111,57,8,9,9,,57,21,,48,,,33,21,44,,7,52,,21,,21,,,9,76,20,20,9,,,44',
',9,,,21,,,,,,79,,,,,20,,,51,20,21,21,,,20,8,,21,57,,,57,81,,76,,,,,',
'26,21,,,103,21,,,,17,21,,107,,,56,,,,21,,8,9,,59,44,17,,109,44,44,,',
',9,26,,,,,26,26,44,29,26,20,9,9,,,21,21,,44,,,21,20,52,,,,,,,,41,,52',
'20,20,21,,,,22,41,,,56,,23,,21,,26,26,26,26,21,,,17,47,,21,21,17,,44',
'21,44,18,18,,,,29,18,,21,23,23,23,,,,,,,17,,,,9,,,48,33,16,,,,,20,20',
',16,,,,,,23,,48,,20,,21,,,,21,,,,21,51,,21,21,,,,,,,9,,,,57,21,,57,',
',,23,21,,,,26,26,,23,23,9,9,20,,,26,,,,,,,48,81,81,,,,51,,,,,20,20,81',
',,21,,,,,20,,,,,,,,,,18,54,9,,,,21,21,44,,,,,52,44,,21,9,,,,,,,,20,25',
'25,,,,22,,54,,56,,57,57,9,20,16,23,,,20,,44,44,,9,21,,,44,21,,,,23,',
'21,20,29,9,,21,,44,,,21,44,20,,17,,44,,,,20,25,,25,,48,20,21,25,,,54',
',,26,26,,,21,,,,,,,,21,,21,,,,21,17,17,26,,,,,,81,81,,23,,81,,23,23',
',,,,17,,,44,17,,,23,,17,,,,,,44,,,23,,,,,,,,,44,44,,,,44,,,,,,,,,,44',
',,,,,,,,53,53,,53,,,,,,,,,,23,,23,,,,17,53,81,53,53,53,53,53,81,,,,17',
',,,,,,,,,44,44,17,17,,,,,25,26,,,,44,,,,,,,,,,,,,,,,,,,,,,,,,26,,,,',
',,,,,,,,,,,,,,44,,,,,,,,,,17,17,25,,,25,,25,,,,44,44,17,,,,,,,,44,,25',
',,26,,,,,,,,,,53,,,,,,,,,,23,,,,,,23,,,,44,17,25,,44,25,,25,,,,,,,,44',
',,,,44,,17,17,,,,,,23,23,,17,,,,23,44,,,,,,,,,53,,44,,23,,,,23,,44,',
',23,,,44,,,,,17,,,,17,,,,,,,,,25,,17,,,,,17,,,,,,,,,,,,,26,,,,17,,,25',
'26,,,,,,,17,,,,,23,25,,17,,,,,,17,,,23,,,,,,,,,,,,23,23,,,25,23,,,,',
',,,,,23,,,,,,,,,,,,,,,,,,,,,25,,,,,,,,,,,,,,,,53,28,,,,28,28,28,,,,',
',23,23,25,53,,,,,28,28,28,,23,23,,,,,,,,,,28,28,,,,,,25,,,,,26,53,,',
',,,,,,,53,,,53,53,,,,,,,23,,,53,53,,,,,,,,,,,,53,,,,,23,23,,,,,,25,',
',23,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,25,,,23,,,,23,,,,,,,,,,,23,,,25,',
'23,,,,,,,,,,,,,,,,,23,,,,28,28,28,28,,,28,23,,,,,,,,23,,,,,28,23,28',
'28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28',
'28,28,,,,,,,,,28,,28,,,,,28,,,53,,,28,28,,,,,53,53,,28,,,,,,,,,,,,,',
',,,,,53,,53,,,,,,,,,28,,,,,53,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,37',
'37,,,,,,37,37,37,,,,,53,53,,,,,,,,37,,,53,,,,53,37,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,28,,,,,,,,,,,,,,,,,,,,,,,,,,28,,28,28,28,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,28,,,28,,28,,,,,,,,,,,,,,,53,28,,,,,,,,,,53,,,,28,,,,',
',,,,28,28,28,,,53,,,,,,,28,,,28,,28,37,,37,37,37,37,37,37,37,37,37,37',
'37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,,,,,,,,,37,,37,,,,,37',
',,,,,,,,,,,,,,,,,,,,,,37,,,,28,,28,,28,28,,,,37,28,,,28,,,,,37,,,28',
',,,,,,,28,,,,,,,,,,,,,,28,,,,,,,,,,,,,,,,,,,,,,,37,,37,,28,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,28,,,,,28,,,,,,,,,,,,37,,,,,,,,,,,,,,28,28,,,',
',,,,,,28,28,28,37,37,37,,,,,,,,,,,,28,,,,,,,,,,,,,,,,,,,37,,,37,,37',
',,,,,,,,,,,,,,,,,,,,,,,,,,,37,,,28,,,,,,,,37,37,37,,28,,,,,,,,37,,,37',
',37,,,,,,,,,,28,,37,,,,,,,,,,,,,,,,,,,28,,,,,,,,,,,,,,,,,,,,,,,28,,',
',,,,,,,,,,,,,,37,,37,,,,,,,,,,,37,,,,,,,,37,,,,,,,,37,,,,,,,,,,,,,,',
',,,,,,,,,,37,,,,,,,,,,37,,,,,,37,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,37,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,37,,,,,,,,,,,37,37,37,,,,,,,,,,,,,,,37',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,37,,,,,,,,,,,',
'37,,,,,,,,,,,,,37,,,,,,,,,,37,,,,,,,,,,,,,,,,,,,,,37' ]
        racc_goto_check = arr = ::Array.new(2518, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_goto_pointer = [
   nil,   208,    85,   nil,    89,   109,    51,    29,  -292,   -23,
  -476,  -572,  -560,   nil,    33,   196,     6,   392,    78,   141,
     0,    26,   -52,   657,  -173,   640,   559,    94,  1337,   -20,
   nil,    80,  -226,  -188,    25,  -244,  -339,  1649,    40,    39,
   nil,    -8,    23,  -255,   325,  -469,  -212,   -51,     1,   nil,
    24,   -21,   -16,   941,   143,  -249,   -48,    92,  -381,  -229,
  -440,  -385,   -96,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    99,   109,   107,   nil,   103,  -307,  -616,  -480,  -334,
  -397,   222,  -529,   121,  -179,   118,    42,  -585,    52,  -578,
  -442,  -723,    71,  -564,  -209,  -658,    80,  -424,  -210,  -420,
  -659,   100,  -159,   -39,  -626,  -377,  -452,   -31,  -497,  -236,
  -524,  -381,   nil,   -70,   nil,   -94,   -93,  -704,  -383,  -487,
  -589,   nil,   nil,   nil,   110,   109,    46,   107,  -188,  -292,
   111,  -528,  -384,  -384,   nil,  -514,  -605,  -601,  -299,  -477,
  -265,  -479,   nil,  -711,   nil,   nil,  -368 ]

racc_goto_default = [
   nil,   nil,   nil,     3,   nil,     4,   348,   274,   nil,   515,
   nil,   785,   nil,   273,   nil,   nil,   nil,   208,    16,    11,
   209,   298,   nil,   207,   nil,   251,    15,   nil,    19,    20,
    21,   nil,    25,   659,   nil,   nil,   nil,    26,    29,   nil,
    31,    34,    33,   nil,   205,   565,   nil,   115,   416,   114,
    69,   nil,    42,   535,   308,   nil,   248,   414,   605,   463,
   249,   nil,   nil,   264,   465,    43,    44,    45,    46,    47,
    48,    49,   nil,   265,    55,   nil,   nil,   nil,   nil,   nil,
   nil,   552,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   322,   321,   676,   324,   nil,
   325,   326,   243,   nil,   420,   nil,   nil,   nil,   nil,   nil,
   nil,    68,    70,    71,    72,   nil,   nil,   nil,   nil,   582,
   nil,   nil,   nil,   nil,   379,   713,   715,   nil,   332,   334,
   nil,   546,   547,   719,   337,   340,   256 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 138, :_reduce_1,
  2, 139, :_reduce_2,
  0, 140, :_reduce_3,
  1, 140, :_reduce_4,
  3, 140, :_reduce_5,
  1, 142, :_reduce_none,
  4, 142, :_reduce_7,
  4, 145, :_reduce_8,
  2, 146, :_reduce_9,
  0, 150, :_reduce_10,
  1, 150, :_reduce_11,
  3, 150, :_reduce_12,
  0, 164, :_reduce_13,
  4, 144, :_reduce_14,
  3, 144, :_reduce_15,
  3, 144, :_reduce_none,
  3, 144, :_reduce_17,
  2, 144, :_reduce_18,
  3, 144, :_reduce_19,
  3, 144, :_reduce_20,
  3, 144, :_reduce_21,
  3, 144, :_reduce_22,
  3, 144, :_reduce_23,
  4, 144, :_reduce_none,
  3, 144, :_reduce_25,
  3, 144, :_reduce_26,
  3, 144, :_reduce_27,
  6, 144, :_reduce_none,
  5, 144, :_reduce_29,
  5, 144, :_reduce_none,
  5, 144, :_reduce_none,
  3, 144, :_reduce_none,
  3, 144, :_reduce_33,
  3, 144, :_reduce_34,
  3, 144, :_reduce_35,
  1, 144, :_reduce_none,
  1, 163, :_reduce_none,
  3, 163, :_reduce_38,
  3, 163, :_reduce_39,
  2, 163, :_reduce_40,
  2, 163, :_reduce_41,
  1, 163, :_reduce_none,
  1, 153, :_reduce_none,
  1, 155, :_reduce_none,
  1, 155, :_reduce_none,
  2, 155, :_reduce_46,
  2, 155, :_reduce_47,
  2, 155, :_reduce_48,
  1, 167, :_reduce_none,
  4, 167, :_reduce_none,
  4, 167, :_reduce_none,
  4, 172, :_reduce_none,
  2, 166, :_reduce_53,
  3, 166, :_reduce_none,
  4, 166, :_reduce_55,
  5, 166, :_reduce_none,
  4, 166, :_reduce_57,
  5, 166, :_reduce_none,
  2, 166, :_reduce_59,
  2, 166, :_reduce_60,
  1, 156, :_reduce_61,
  3, 156, :_reduce_62,
  1, 176, :_reduce_63,
  3, 176, :_reduce_64,
  1, 175, :_reduce_65,
  2, 175, :_reduce_66,
  3, 175, :_reduce_67,
  5, 175, :_reduce_none,
  2, 175, :_reduce_69,
  4, 175, :_reduce_none,
  2, 175, :_reduce_71,
  1, 175, :_reduce_72,
  3, 175, :_reduce_none,
  1, 178, :_reduce_74,
  3, 178, :_reduce_75,
  2, 177, :_reduce_76,
  3, 177, :_reduce_77,
  1, 180, :_reduce_none,
  3, 180, :_reduce_none,
  1, 179, :_reduce_80,
  4, 179, :_reduce_81,
  3, 179, :_reduce_82,
  3, 179, :_reduce_none,
  3, 179, :_reduce_none,
  3, 179, :_reduce_none,
  2, 179, :_reduce_none,
  1, 179, :_reduce_none,
  1, 154, :_reduce_88,
  4, 154, :_reduce_89,
  3, 154, :_reduce_90,
  3, 154, :_reduce_91,
  3, 154, :_reduce_92,
  3, 154, :_reduce_93,
  2, 154, :_reduce_94,
  1, 154, :_reduce_none,
  1, 182, :_reduce_none,
  2, 183, :_reduce_97,
  1, 183, :_reduce_98,
  3, 183, :_reduce_99,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_103,
  1, 184, :_reduce_104,
  1, 151, :_reduce_105,
  1, 151, :_reduce_none,
  1, 152, :_reduce_107,
  3, 152, :_reduce_108,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  3, 165, :_reduce_182,
  5, 165, :_reduce_183,
  3, 165, :_reduce_184,
  6, 165, :_reduce_185,
  5, 165, :_reduce_186,
  5, 165, :_reduce_none,
  5, 165, :_reduce_none,
  5, 165, :_reduce_none,
  4, 165, :_reduce_none,
  3, 165, :_reduce_none,
  3, 165, :_reduce_192,
  3, 165, :_reduce_193,
  3, 165, :_reduce_194,
  3, 165, :_reduce_195,
  3, 165, :_reduce_196,
  3, 165, :_reduce_197,
  3, 165, :_reduce_198,
  3, 165, :_reduce_199,
  4, 165, :_reduce_none,
  4, 165, :_reduce_none,
  2, 165, :_reduce_202,
  2, 165, :_reduce_203,
  3, 165, :_reduce_204,
  3, 165, :_reduce_205,
  3, 165, :_reduce_206,
  3, 165, :_reduce_207,
  3, 165, :_reduce_208,
  3, 165, :_reduce_209,
  3, 165, :_reduce_210,
  3, 165, :_reduce_211,
  3, 165, :_reduce_212,
  3, 165, :_reduce_213,
  3, 165, :_reduce_214,
  3, 165, :_reduce_215,
  3, 165, :_reduce_216,
  2, 165, :_reduce_217,
  2, 165, :_reduce_218,
  3, 165, :_reduce_219,
  3, 165, :_reduce_220,
  3, 165, :_reduce_221,
  3, 165, :_reduce_222,
  3, 165, :_reduce_223,
  5, 165, :_reduce_224,
  1, 165, :_reduce_none,
  1, 162, :_reduce_none,
  1, 159, :_reduce_227,
  2, 159, :_reduce_228,
  2, 159, :_reduce_229,
  4, 159, :_reduce_230,
  2, 159, :_reduce_231,
  3, 194, :_reduce_232,
  4, 194, :_reduce_233,
  4, 194, :_reduce_none,
  6, 194, :_reduce_none,
  1, 195, :_reduce_none,
  1, 195, :_reduce_none,
  1, 168, :_reduce_238,
  2, 168, :_reduce_239,
  2, 168, :_reduce_240,
  4, 168, :_reduce_241,
  1, 168, :_reduce_242,
  4, 198, :_reduce_none,
  1, 198, :_reduce_none,
  0, 200, :_reduce_245,
  2, 171, :_reduce_246,
  1, 199, :_reduce_none,
  2, 199, :_reduce_248,
  3, 199, :_reduce_249,
  2, 197, :_reduce_250,
  2, 196, :_reduce_251,
  1, 196, :_reduce_252,
  1, 191, :_reduce_253,
  2, 191, :_reduce_254,
  3, 191, :_reduce_255,
  4, 191, :_reduce_256,
  3, 161, :_reduce_257,
  4, 161, :_reduce_none,
  2, 161, :_reduce_259,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  0, 222, :_reduce_269,
  4, 189, :_reduce_270,
  4, 189, :_reduce_271,
  3, 189, :_reduce_272,
  3, 189, :_reduce_273,
  2, 189, :_reduce_274,
  4, 189, :_reduce_275,
  3, 189, :_reduce_276,
  3, 189, :_reduce_277,
  1, 189, :_reduce_278,
  4, 189, :_reduce_279,
  3, 189, :_reduce_280,
  1, 189, :_reduce_281,
  5, 189, :_reduce_282,
  4, 189, :_reduce_283,
  3, 189, :_reduce_284,
  2, 189, :_reduce_285,
  1, 189, :_reduce_none,
  2, 189, :_reduce_287,
  2, 189, :_reduce_288,
  6, 189, :_reduce_289,
  6, 189, :_reduce_290,
  0, 223, :_reduce_291,
  0, 224, :_reduce_292,
  7, 189, :_reduce_293,
  0, 225, :_reduce_294,
  0, 226, :_reduce_295,
  7, 189, :_reduce_296,
  5, 189, :_reduce_297,
  4, 189, :_reduce_298,
  5, 189, :_reduce_299,
  0, 227, :_reduce_300,
  0, 228, :_reduce_301,
  9, 189, :_reduce_none,
  0, 229, :_reduce_303,
  0, 230, :_reduce_304,
  7, 189, :_reduce_305,
  0, 231, :_reduce_306,
  0, 232, :_reduce_307,
  8, 189, :_reduce_308,
  0, 233, :_reduce_309,
  0, 234, :_reduce_310,
  6, 189, :_reduce_311,
  0, 235, :_reduce_312,
  6, 189, :_reduce_313,
  0, 236, :_reduce_314,
  0, 237, :_reduce_315,
  9, 189, :_reduce_316,
  1, 189, :_reduce_317,
  1, 189, :_reduce_318,
  1, 189, :_reduce_319,
  1, 189, :_reduce_none,
  1, 158, :_reduce_none,
  1, 213, :_reduce_none,
  1, 213, :_reduce_none,
  1, 213, :_reduce_none,
  2, 213, :_reduce_none,
  1, 215, :_reduce_none,
  1, 215, :_reduce_none,
  1, 215, :_reduce_none,
  2, 212, :_reduce_329,
  3, 238, :_reduce_330,
  2, 238, :_reduce_331,
  1, 238, :_reduce_none,
  1, 238, :_reduce_none,
  3, 239, :_reduce_334,
  3, 239, :_reduce_335,
  1, 214, :_reduce_336,
  0, 241, :_reduce_337,
  6, 214, :_reduce_338,
  1, 148, :_reduce_none,
  2, 148, :_reduce_340,
  1, 242, :_reduce_341,
  3, 242, :_reduce_342,
  3, 243, :_reduce_343,
  1, 173, :_reduce_none,
  2, 173, :_reduce_345,
  1, 173, :_reduce_346,
  3, 173, :_reduce_347,
  1, 244, :_reduce_348,
  2, 246, :_reduce_349,
  1, 246, :_reduce_350,
  6, 240, :_reduce_351,
  4, 240, :_reduce_352,
  4, 240, :_reduce_353,
  2, 240, :_reduce_354,
  2, 240, :_reduce_355,
  4, 240, :_reduce_356,
  2, 240, :_reduce_357,
  2, 240, :_reduce_358,
  1, 240, :_reduce_359,
  0, 250, :_reduce_360,
  5, 249, :_reduce_361,
  2, 169, :_reduce_362,
  4, 169, :_reduce_none,
  4, 169, :_reduce_none,
  2, 211, :_reduce_365,
  4, 211, :_reduce_366,
  3, 211, :_reduce_367,
  4, 211, :_reduce_368,
  3, 211, :_reduce_369,
  2, 211, :_reduce_370,
  1, 211, :_reduce_371,
  0, 252, :_reduce_372,
  5, 210, :_reduce_373,
  0, 253, :_reduce_374,
  5, 210, :_reduce_375,
  0, 255, :_reduce_376,
  6, 216, :_reduce_377,
  1, 254, :_reduce_378,
  1, 254, :_reduce_none,
  6, 147, :_reduce_380,
  0, 147, :_reduce_381,
  1, 256, :_reduce_382,
  1, 256, :_reduce_none,
  1, 256, :_reduce_none,
  2, 257, :_reduce_385,
  1, 257, :_reduce_386,
  2, 149, :_reduce_387,
  1, 149, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 203, :_reduce_392,
  1, 260, :_reduce_none,
  2, 260, :_reduce_none,
  3, 261, :_reduce_395,
  1, 261, :_reduce_396,
  3, 204, :_reduce_397,
  3, 205, :_reduce_398,
  3, 206, :_reduce_399,
  3, 206, :_reduce_400,
  1, 264, :_reduce_401,
  3, 264, :_reduce_402,
  1, 265, :_reduce_403,
  2, 265, :_reduce_404,
  3, 207, :_reduce_405,
  3, 207, :_reduce_406,
  1, 267, :_reduce_407,
  3, 267, :_reduce_408,
  1, 262, :_reduce_409,
  2, 262, :_reduce_410,
  1, 263, :_reduce_411,
  2, 263, :_reduce_412,
  1, 266, :_reduce_413,
  0, 269, :_reduce_414,
  3, 266, :_reduce_415,
  0, 270, :_reduce_416,
  4, 266, :_reduce_417,
  1, 268, :_reduce_418,
  1, 268, :_reduce_419,
  1, 268, :_reduce_420,
  1, 268, :_reduce_none,
  2, 187, :_reduce_422,
  1, 187, :_reduce_423,
  1, 271, :_reduce_none,
  1, 271, :_reduce_none,
  1, 271, :_reduce_none,
  1, 271, :_reduce_none,
  3, 259, :_reduce_428,
  1, 258, :_reduce_429,
  1, 258, :_reduce_430,
  2, 258, :_reduce_none,
  2, 258, :_reduce_none,
  1, 181, :_reduce_433,
  1, 181, :_reduce_434,
  1, 181, :_reduce_435,
  1, 181, :_reduce_436,
  1, 181, :_reduce_437,
  1, 181, :_reduce_438,
  1, 181, :_reduce_439,
  1, 181, :_reduce_440,
  1, 181, :_reduce_441,
  1, 181, :_reduce_442,
  1, 181, :_reduce_443,
  1, 208, :_reduce_444,
  1, 157, :_reduce_445,
  1, 160, :_reduce_446,
  1, 160, :_reduce_none,
  1, 217, :_reduce_448,
  3, 217, :_reduce_449,
  2, 217, :_reduce_450,
  4, 219, :_reduce_451,
  2, 219, :_reduce_452,
  6, 272, :_reduce_453,
  4, 272, :_reduce_454,
  4, 272, :_reduce_455,
  2, 272, :_reduce_456,
  4, 272, :_reduce_457,
  2, 272, :_reduce_458,
  2, 272, :_reduce_459,
  1, 272, :_reduce_460,
  0, 272, :_reduce_461,
  1, 275, :_reduce_462,
  1, 275, :_reduce_463,
  1, 275, :_reduce_464,
  1, 275, :_reduce_465,
  1, 275, :_reduce_466,
  1, 276, :_reduce_467,
  3, 276, :_reduce_468,
  1, 278, :_reduce_469,
  3, 278, :_reduce_none,
  1, 279, :_reduce_471,
  3, 279, :_reduce_472,
  1, 277, :_reduce_none,
  4, 277, :_reduce_none,
  3, 277, :_reduce_none,
  2, 277, :_reduce_none,
  1, 277, :_reduce_none,
  1, 247, :_reduce_478,
  3, 247, :_reduce_479,
  3, 280, :_reduce_480,
  1, 273, :_reduce_481,
  3, 273, :_reduce_482,
  1, 281, :_reduce_none,
  1, 281, :_reduce_none,
  2, 248, :_reduce_485,
  1, 248, :_reduce_486,
  1, 282, :_reduce_none,
  1, 282, :_reduce_none,
  2, 245, :_reduce_489,
  2, 274, :_reduce_490,
  0, 274, :_reduce_491,
  1, 220, :_reduce_492,
  4, 220, :_reduce_493,
  1, 209, :_reduce_494,
  2, 209, :_reduce_495,
  2, 209, :_reduce_496,
  1, 193, :_reduce_497,
  3, 193, :_reduce_498,
  3, 283, :_reduce_499,
  2, 283, :_reduce_500,
  1, 174, :_reduce_none,
  1, 174, :_reduce_none,
  1, 174, :_reduce_none,
  1, 170, :_reduce_none,
  1, 170, :_reduce_none,
  1, 170, :_reduce_none,
  1, 170, :_reduce_none,
  1, 251, :_reduce_none,
  1, 251, :_reduce_none,
  1, 251, :_reduce_none,
  1, 221, :_reduce_none,
  1, 221, :_reduce_none,
  0, 141, :_reduce_none,
  1, 141, :_reduce_none,
  0, 188, :_reduce_none,
  1, 188, :_reduce_none,
  0, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 218, :_reduce_none,
  1, 218, :_reduce_none,
  1, 143, :_reduce_none,
  2, 143, :_reduce_none,
  0, 190, :_reduce_none,
  0, 201, :_reduce_none ]

racc_reduce_n = 526

racc_shift_n = 915

racc_token_table = {
  false => 0,
  :error => 1,
  :kCLASS => 2,
  :kMODULE => 3,
  :kDEF => 4,
  :kUNDEF => 5,
  :kBEGIN => 6,
  :kRESCUE => 7,
  :kENSURE => 8,
  :kEND => 9,
  :kIF => 10,
  :kUNLESS => 11,
  :kTHEN => 12,
  :kELSIF => 13,
  :kELSE => 14,
  :kCASE => 15,
  :kWHEN => 16,
  :kWHILE => 17,
  :kUNTIL => 18,
  :kFOR => 19,
  :kBREAK => 20,
  :kNEXT => 21,
  :kREDO => 22,
  :kRETRY => 23,
  :kIN => 24,
  :kDO => 25,
  :kDO_COND => 26,
  :kDO_BLOCK => 27,
  :kRETURN => 28,
  :kYIELD => 29,
  :kSUPER => 30,
  :kSELF => 31,
  :kNIL => 32,
  :kTRUE => 33,
  :kFALSE => 34,
  :kAND => 35,
  :kOR => 36,
  :kNOT => 37,
  :kIF_MOD => 38,
  :kUNLESS_MOD => 39,
  :kWHILE_MOD => 40,
  :kUNTIL_MOD => 41,
  :kRESCUE_MOD => 42,
  :kALIAS => 43,
  :kDEFINED => 44,
  :klBEGIN => 45,
  :klEND => 46,
  :k__LINE__ => 47,
  :k__FILE__ => 48,
  :tIDENTIFIER => 49,
  :tFID => 50,
  :tGVAR => 51,
  :tIVAR => 52,
  :tCONSTANT => 53,
  :tCVAR => 54,
  :tNTH_REF => 55,
  :tBACK_REF => 56,
  :tSTRING_CONTENT => 57,
  :tINTEGER => 58,
  :tFLOAT => 59,
  :tREGEXP_END => 60,
  "+@" => 61,
  "-@" => 62,
  "-@NUM" => 63,
  :tPOW => 64,
  :tCMP => 65,
  :tEQ => 66,
  :tEQQ => 67,
  :tNEQ => 68,
  :tGEQ => 69,
  :tLEQ => 70,
  :tANDOP => 71,
  :tOROP => 72,
  :tMATCH => 73,
  :tNMATCH => 74,
  "." => 75,
  :tDOT2 => 76,
  :tDOT3 => 77,
  "[]" => 78,
  "[]=" => 79,
  :tLSHFT => 80,
  :tRSHFT => 81,
  "::" => 82,
  "::@" => 83,
  :tOP_ASGN => 84,
  :tASSOC => 85,
  :tLPAREN => 86,
  "(" => 87,
  ")" => 88,
  :tLPAREN_ARG => 89,
  :ARRAY_BEG => 90,
  "]" => 91,
  :tLBRACE => 92,
  :tLBRACE_ARG => 93,
  :tSTAR => 94,
  :tSTAR2 => 95,
  "&@" => 96,
  :tAMPER2 => 97,
  :tTILDE => 98,
  :tPERCENT => 99,
  :tDIVIDE => 100,
  "+" => 101,
  "-" => 102,
  :tLT => 103,
  :tGT => 104,
  :tPIPE => 105,
  :tBANG => 106,
  :tCARET => 107,
  :tLCURLY => 108,
  :tRCURLY => 109,
  :tBACK_REF2 => 110,
  :tSYMBEG => 111,
  :tSTRING_BEG => 112,
  :tXSTRING_BEG => 113,
  :tREGEXP_BEG => 114,
  :tWORDS_BEG => 115,
  :tAWORDS_BEG => 116,
  :tSTRING_DBEG => 117,
  :tSTRING_DVAR => 118,
  :tSTRING_END => 119,
  :tSTRING => 120,
  :tSYMBOL => 121,
  "\\n" => 122,
  :tEH => 123,
  :tCOLON => 124,
  "," => 125,
  :tSPACE => 126,
  ";" => 127,
  :tLABEL => 128,
  :tLAMBDA => 129,
  :tLAMBEG => 130,
  :kDO_LAMBDA => 131,
  :tEQL => 132,
  :tLOWEST => 133,
  "[@" => 134,
  "[" => 135,
  "{" => 136 }

racc_nt_base = 137

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "kCLASS",
  "kMODULE",
  "kDEF",
  "kUNDEF",
  "kBEGIN",
  "kRESCUE",
  "kENSURE",
  "kEND",
  "kIF",
  "kUNLESS",
  "kTHEN",
  "kELSIF",
  "kELSE",
  "kCASE",
  "kWHEN",
  "kWHILE",
  "kUNTIL",
  "kFOR",
  "kBREAK",
  "kNEXT",
  "kREDO",
  "kRETRY",
  "kIN",
  "kDO",
  "kDO_COND",
  "kDO_BLOCK",
  "kRETURN",
  "kYIELD",
  "kSUPER",
  "kSELF",
  "kNIL",
  "kTRUE",
  "kFALSE",
  "kAND",
  "kOR",
  "kNOT",
  "kIF_MOD",
  "kUNLESS_MOD",
  "kWHILE_MOD",
  "kUNTIL_MOD",
  "kRESCUE_MOD",
  "kALIAS",
  "kDEFINED",
  "klBEGIN",
  "klEND",
  "k__LINE__",
  "k__FILE__",
  "tIDENTIFIER",
  "tFID",
  "tGVAR",
  "tIVAR",
  "tCONSTANT",
  "tCVAR",
  "tNTH_REF",
  "tBACK_REF",
  "tSTRING_CONTENT",
  "tINTEGER",
  "tFLOAT",
  "tREGEXP_END",
  "\"+@\"",
  "\"-@\"",
  "\"-@NUM\"",
  "tPOW",
  "tCMP",
  "tEQ",
  "tEQQ",
  "tNEQ",
  "tGEQ",
  "tLEQ",
  "tANDOP",
  "tOROP",
  "tMATCH",
  "tNMATCH",
  "\".\"",
  "tDOT2",
  "tDOT3",
  "\"[]\"",
  "\"[]=\"",
  "tLSHFT",
  "tRSHFT",
  "\"::\"",
  "\"::@\"",
  "tOP_ASGN",
  "tASSOC",
  "tLPAREN",
  "\"(\"",
  "\")\"",
  "tLPAREN_ARG",
  "ARRAY_BEG",
  "\"]\"",
  "tLBRACE",
  "tLBRACE_ARG",
  "tSTAR",
  "tSTAR2",
  "\"&@\"",
  "tAMPER2",
  "tTILDE",
  "tPERCENT",
  "tDIVIDE",
  "\"+\"",
  "\"-\"",
  "tLT",
  "tGT",
  "tPIPE",
  "tBANG",
  "tCARET",
  "tLCURLY",
  "tRCURLY",
  "tBACK_REF2",
  "tSYMBEG",
  "tSTRING_BEG",
  "tXSTRING_BEG",
  "tREGEXP_BEG",
  "tWORDS_BEG",
  "tAWORDS_BEG",
  "tSTRING_DBEG",
  "tSTRING_DVAR",
  "tSTRING_END",
  "tSTRING",
  "tSYMBOL",
  "\"\\\\n\"",
  "tEH",
  "tCOLON",
  "\",\"",
  "tSPACE",
  "\";\"",
  "tLABEL",
  "tLAMBDA",
  "tLAMBEG",
  "kDO_LAMBDA",
  "tEQL",
  "tLOWEST",
  "\"[@\"",
  "\"[\"",
  "\"{\"",
  "$start",
  "program",
  "top_compstmt",
  "top_stmts",
  "opt_terms",
  "top_stmt",
  "terms",
  "stmt",
  "bodystmt",
  "compstmt",
  "opt_rescue",
  "opt_else",
  "opt_ensure",
  "stmts",
  "fitem",
  "undef_list",
  "expr_value",
  "lhs",
  "command_call",
  "mlhs",
  "var_lhs",
  "primary_value",
  "aref_args",
  "backref",
  "mrhs",
  "arg_value",
  "expr",
  "@1",
  "arg",
  "command",
  "block_command",
  "call_args",
  "block_call",
  "operation2",
  "command_args",
  "cmd_brace_block",
  "opt_block_var",
  "operation",
  "mlhs_basic",
  "mlhs_entry",
  "mlhs_head",
  "mlhs_item",
  "mlhs_node",
  "mlhs_post",
  "variable",
  "cname",
  "cpath",
  "fname",
  "op",
  "reswords",
  "symbol",
  "opt_nl",
  "primary",
  "none",
  "args",
  "trailer",
  "assocs",
  "paren_args",
  "opt_paren_args",
  "opt_block_arg",
  "block_arg",
  "call_args2",
  "open_args",
  "@2",
  "none_block_pass",
  "literal",
  "strings",
  "xstring",
  "regexp",
  "words",
  "awords",
  "var_ref",
  "assoc_list",
  "brace_block",
  "method_call",
  "lambda",
  "then",
  "if_tail",
  "do",
  "case_body",
  "superclass",
  "term",
  "f_arglist",
  "singleton",
  "dot_or_colon",
  "@3",
  "@4",
  "@5",
  "@6",
  "@7",
  "@8",
  "@9",
  "@10",
  "@11",
  "@12",
  "@13",
  "@14",
  "@15",
  "@16",
  "@17",
  "@18",
  "f_larglist",
  "lambda_body",
  "block_param",
  "@19",
  "f_block_optarg",
  "f_block_opt",
  "block_args_tail",
  "f_block_arg",
  "opt_block_args_tail",
  "f_arg",
  "f_rest_arg",
  "do_block",
  "@20",
  "operation3",
  "@21",
  "@22",
  "cases",
  "@23",
  "exc_list",
  "exc_var",
  "numeric",
  "dsym",
  "string",
  "string1",
  "string_contents",
  "xstring_contents",
  "word_list",
  "word",
  "string_content",
  "qword_list",
  "string_dvar",
  "@24",
  "@25",
  "sym",
  "f_args",
  "f_optarg",
  "opt_f_block_arg",
  "f_norm_arg",
  "f_arg_item",
  "f_margs",
  "f_marg",
  "f_marg_list",
  "f_opt",
  "restarg_mark",
  "blkarg_mark",
  "assoc" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

def _reduce_1(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_2(val, _values, result)
                      comp = new_compstmt val[0]
                      if comp and comp.type == :begin and comp.size == 2
                        result = comp[1]
                        result.line = comp.line
                      else
                        result = comp
                      end
                    
    result
end

def _reduce_3(val, _values, result)
                      result = new_block
                    
    result
end

def _reduce_4(val, _values, result)
                      result = new_block val[0]
                    
    result
end

def _reduce_5(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

# reduce 6 omitted

def _reduce_7(val, _values, result)
                      result = val[2]
                    
    result
end

def _reduce_8(val, _values, result)
                      result = new_body val[0], val[1], val[2], val[3]
                    
    result
end

def _reduce_9(val, _values, result)
                      comp = new_compstmt val[0]
                      if comp and comp.type == :begin and comp.size == 2
                        result = comp[1]
                        result.line = comp.line
                      else
                        result = comp
                      end
                    
    result
end

def _reduce_10(val, _values, result)
                      result = new_block
                    
    result
end

def _reduce_11(val, _values, result)
                      result = new_block val[0]
                    
    result
end

def _reduce_12(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_13(val, _values, result)
                      lexer.lex_state = :expr_fname
                    
    result
end

def _reduce_14(val, _values, result)
                      result = s(:alias, val[1], val[3])
                    
    result
end

def _reduce_15(val, _values, result)
                      result = s(:valias, val[1].intern, val[2].intern)
                    
    result
end

# reduce 16 omitted

def _reduce_17(val, _values, result)
                      result = s(:valias, val[1].intern, val[2].intern)
                    
    result
end

def _reduce_18(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_19(val, _values, result)
                      result = new_if val[2], val[0], nil
                    
    result
end

def _reduce_20(val, _values, result)
                      result = new_if val[2], nil, val[0]
                    
    result
end

def _reduce_21(val, _values, result)
                      result = s(:while, val[2], val[0], true)
                    
    result
end

def _reduce_22(val, _values, result)
                      result = s(:until, val[2], val[0], true)
                    
    result
end

def _reduce_23(val, _values, result)
                      result = s(:rescue_mod, val[0], val[2])
                    
    result
end

# reduce 24 omitted

def _reduce_25(val, _values, result)
                      result = new_assign val[0], val[2]
                    
    result
end

def _reduce_26(val, _values, result)
                      result = s(:masgn, val[0], s(:to_ary, val[2]))
                    
    result
end

def _reduce_27(val, _values, result)
                      result = new_op_asgn val[1].intern, val[0], val[2]
                    
    result
end

# reduce 28 omitted

def _reduce_29(val, _values, result)
                      result = s(:op_asgn2, val[0], "#{val[2]}=".intern, val[3].intern, val[4])
                    
    result
end

# reduce 30 omitted

# reduce 31 omitted

# reduce 32 omitted

def _reduce_33(val, _values, result)
                      result = new_assign val[0], s(:svalue, val[2])
                    
    result
end

def _reduce_34(val, _values, result)
                      result = s(:masgn, val[0], s(:to_ary, val[2]))
                    
    result
end

def _reduce_35(val, _values, result)
                      result = s(:masgn, val[0], val[2])
                    
    result
end

# reduce 36 omitted

# reduce 37 omitted

def _reduce_38(val, _values, result)
                      result = s(:and, val[0], val[2])
                      result.line = val[0].line
                    
    result
end

def _reduce_39(val, _values, result)
                      result = s(:or, val[0], val[2])
                      result.line = val[0].line
                    
    result
end

def _reduce_40(val, _values, result)
                      result = s(:not, val[1])
                      result.line = val[1].line
                    
    result
end

def _reduce_41(val, _values, result)
                      result = s(:not, val[1])
                    
    result
end

# reduce 42 omitted

# reduce 43 omitted

# reduce 44 omitted

# reduce 45 omitted

def _reduce_46(val, _values, result)
                      args = val[1]
                      args = args[1] if args.size == 2
                      result = s(:return, args)
                    
    result
end

def _reduce_47(val, _values, result)
                      args = val[1]
                      args = args[1] if args.size == 2
                      result = s(:break, args)
                    
    result
end

def _reduce_48(val, _values, result)
                      args = val[1]
                      args = args[1] if args.size == 2
                      result = s(:next, args)
                    
    result
end

# reduce 49 omitted

# reduce 50 omitted

# reduce 51 omitted

# reduce 52 omitted

def _reduce_53(val, _values, result)
                      result = new_call nil, val[0].intern, val[1]
                    
    result
end

# reduce 54 omitted

def _reduce_55(val, _values, result)
                      result = new_call val[0], val[2].intern, val[3]
                    
    result
end

# reduce 56 omitted

def _reduce_57(val, _values, result)
                    result = new_call val[0], val[2].intern, val[3]
                  
    result
end

# reduce 58 omitted

def _reduce_59(val, _values, result)
                      result = new_super val[1]
                    
    result
end

def _reduce_60(val, _values, result)
                      result = new_yield val[1]
                    
    result
end

def _reduce_61(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_62(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_63(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_64(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_65(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_66(val, _values, result)
                      result = val[0] << val[1]
                    
    result
end

def _reduce_67(val, _values, result)
                      result = val[0] << s(:splat, val[2])
                    
    result
end

# reduce 68 omitted

def _reduce_69(val, _values, result)
                      result = val[0] << s(:splat)
                    
    result
end

# reduce 70 omitted

def _reduce_71(val, _values, result)
                      result = s(:array, s(:splat, val[1]))
                    
    result
end

def _reduce_72(val, _values, result)
                      result = s(:array, s(:splat))
                    
    result
end

# reduce 73 omitted

def _reduce_74(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_75(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_76(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

def _reduce_77(val, _values, result)
                      result = val[0] << val[1]
                    
    result
end

# reduce 78 omitted

# reduce 79 omitted

def _reduce_80(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_81(val, _values, result)
                      args = val[2]
                      args.type = :arglist if args.type == :array
                      result = s(:attrasgn, val[0], :[]=, args)
                    
    result
end

def _reduce_82(val, _values, result)
                      result = new_call val[0], val[2].intern, s(:arglist)
                    
    result
end

# reduce 83 omitted

# reduce 84 omitted

# reduce 85 omitted

# reduce 86 omitted

# reduce 87 omitted

def _reduce_88(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_89(val, _values, result)
                      args = val[2]
                      args.type = :arglist if args.type == :array
                      result = s(:attrasgn, val[0], :[]=, args)
                    
    result
end

def _reduce_90(val, _values, result)
                      result = s(:attrasgn, val[0], "#{val[2]}=".intern, s(:arglist))
                    
    result
end

def _reduce_91(val, _values, result)
                      result = s(:attrasgn, val[0], "#{val[2]}=".intern, s(:arglist))
                    
    result
end

def _reduce_92(val, _values, result)
                      result = s(:attrasgn, val[0], "#{val[2]}=".intern, s(:arglist))
                    
    result
end

def _reduce_93(val, _values, result)
                      result = s(:colon2, val[0], val[2].intern)
                    
    result
end

def _reduce_94(val, _values, result)
                      result = s(:colon3, val[1].intern)
                    
    result
end

# reduce 95 omitted

# reduce 96 omitted

def _reduce_97(val, _values, result)
                      result = s(:colon3, val[1].intern)
                    
    result
end

def _reduce_98(val, _values, result)
                      result = val[0].intern
                    
    result
end

def _reduce_99(val, _values, result)
                      result = s(:colon2, val[0], val[2].intern)
                    
    result
end

# reduce 100 omitted

# reduce 101 omitted

# reduce 102 omitted

def _reduce_103(val, _values, result)
                      lexer.lex_state = :expr_end
                      result = val[0]
                    
    result
end

def _reduce_104(val, _values, result)
                      lexer.lex_state = :expr_end
                      result = val[0]
                    
    result
end

def _reduce_105(val, _values, result)
                      result = s(:sym, val[0].intern)
                    
    result
end

# reduce 106 omitted

def _reduce_107(val, _values, result)
                      result = s(:undef, val[0])
                    
    result
end

def _reduce_108(val, _values, result)
                      result = val[0] << val[2]
                    
    result
end

# reduce 109 omitted

# reduce 110 omitted

# reduce 111 omitted

# reduce 112 omitted

# reduce 113 omitted

# reduce 114 omitted

# reduce 115 omitted

# reduce 116 omitted

# reduce 117 omitted

# reduce 118 omitted

# reduce 119 omitted

# reduce 120 omitted

# reduce 121 omitted

# reduce 122 omitted

# reduce 123 omitted

# reduce 124 omitted

# reduce 125 omitted

# reduce 126 omitted

# reduce 127 omitted

# reduce 128 omitted

# reduce 129 omitted

# reduce 130 omitted

# reduce 131 omitted

# reduce 132 omitted

# reduce 133 omitted

# reduce 134 omitted

# reduce 135 omitted

# reduce 136 omitted

# reduce 137 omitted

# reduce 138 omitted

# reduce 139 omitted

# reduce 140 omitted

# reduce 141 omitted

# reduce 142 omitted

# reduce 143 omitted

# reduce 144 omitted

# reduce 145 omitted

# reduce 146 omitted

# reduce 147 omitted

# reduce 148 omitted

# reduce 149 omitted

# reduce 150 omitted

# reduce 151 omitted

# reduce 152 omitted

# reduce 153 omitted

# reduce 154 omitted

# reduce 155 omitted

# reduce 156 omitted

# reduce 157 omitted

# reduce 158 omitted

# reduce 159 omitted

# reduce 160 omitted

# reduce 161 omitted

# reduce 162 omitted

# reduce 163 omitted

# reduce 164 omitted

# reduce 165 omitted

# reduce 166 omitted

# reduce 167 omitted

# reduce 168 omitted

# reduce 169 omitted

# reduce 170 omitted

# reduce 171 omitted

# reduce 172 omitted

# reduce 173 omitted

# reduce 174 omitted

# reduce 175 omitted

# reduce 176 omitted

# reduce 177 omitted

# reduce 178 omitted

# reduce 179 omitted

# reduce 180 omitted

# reduce 181 omitted

def _reduce_182(val, _values, result)
                      result = new_assign val[0], val[2]
                    
    result
end

def _reduce_183(val, _values, result)
                      result = new_assign val[0], s(:rescue_mod, val[2], val[4])
                    
    result
end

def _reduce_184(val, _values, result)
                      result = new_op_asgn val[1].intern, val[0], val[2]
                    
    result
end

def _reduce_185(val, _values, result)
                      args = val[2]
                      args.type = :arglist if args.type == :array
                      result = s(:op_asgn1, val[0], val[2], val[4].intern, val[5])
                      result.line = val[0].line
                    
    result
end

def _reduce_186(val, _values, result)
                      result = s(:op_asgn2, val[0], "#{val[2]}=".intern, val[3].intern, val[4])
                    
    result
end

# reduce 187 omitted

# reduce 188 omitted

# reduce 189 omitted

# reduce 190 omitted

# reduce 191 omitted

def _reduce_192(val, _values, result)
                      result = s(:dot2, val[0], val[2])
                      result.line = val[0].line
                    
    result
end

def _reduce_193(val, _values, result)
                      result = s(:dot3, val[0], val[2])
                      result.line = val[0].line
                    
    result
end

def _reduce_194(val, _values, result)
                      result = new_call val[0], :"+", s(:arglist, val[2])
                    
    result
end

def _reduce_195(val, _values, result)
                      result = new_call val[0], :"-", s(:arglist, val[2])
                    
    result
end

def _reduce_196(val, _values, result)
                      result = new_call val[0], :"*", s(:arglist, val[2])
                    
    result
end

def _reduce_197(val, _values, result)
                      result = new_call val[0], :"/", s(:arglist, val[2])
                    
    result
end

def _reduce_198(val, _values, result)
                      result = new_call val[0], :"%", s(:arglist, val[2])
                    
    result
end

def _reduce_199(val, _values, result)
                      result = new_call val[0], :"**", s(:arglist, val[2])
                    
    result
end

# reduce 200 omitted

# reduce 201 omitted

def _reduce_202(val, _values, result)
                      result = new_call val[1], :"+@", s(:arglist)
                      result = val[1] if [:int, :float].include? val[1].type
                    
    result
end

def _reduce_203(val, _values, result)
                      result = new_call val[1], :"-@", s(:arglist)
                      if val[1].type == :int
                        val[1][1] = -val[1][1]
                        result = val[1]
                      elsif val[1].type == :float
                        val[1][1] = -val[1][1].to_f
                        result = val[1]
                      end
                    
    result
end

def _reduce_204(val, _values, result)
                      result = new_call val[0], :"|", s(:arglist, val[2])
                    
    result
end

def _reduce_205(val, _values, result)
                      result = new_call val[0], :"^", s(:arglist, val[2])
                    
    result
end

def _reduce_206(val, _values, result)
                      result = new_call val[0], :"&", s(:arglist, val[2])
                    
    result
end

def _reduce_207(val, _values, result)
                      result = new_call val[0], :"<=>", s(:arglist, val[2])
                    
    result
end

def _reduce_208(val, _values, result)
                      result = new_call val[0], :">", s(:arglist, val[2])
                    
    result
end

def _reduce_209(val, _values, result)
                      result = new_call val[0], :">=", s(:arglist, val[2])
                    
    result
end

def _reduce_210(val, _values, result)
                      result = new_call val[0], :"<", s(:arglist, val[2])
                    
    result
end

def _reduce_211(val, _values, result)
                      result = new_call val[0], :"<=", s(:arglist, val[2])
                    
    result
end

def _reduce_212(val, _values, result)
                      result = new_call val[0], :"==", s(:arglist, val[2])
                    
    result
end

def _reduce_213(val, _values, result)
                      result = new_call val[0], :"===", s(:arglist, val[2])
                    
    result
end

def _reduce_214(val, _values, result)
                      result = s(:not, new_call(val[0], :"==", s(:arglist, val[2])))
                    
    result
end

def _reduce_215(val, _values, result)
                      result = new_call val[0], :"=~", s(:arglist, val[2])
                    
    result
end

def _reduce_216(val, _values, result)
                      result = s(:not, new_call(val[0], :"=~", s(:arglist, val[2])))
                    
    result
end

def _reduce_217(val, _values, result)
                      result = s(:not, val[1])
                    
    result
end

def _reduce_218(val, _values, result)
                      result = new_call val[1], :"~", s(:arglist)
                    
    result
end

def _reduce_219(val, _values, result)
                      result = new_call val[0], :"<<", s(:arglist, val[2])
                    
    result
end

def _reduce_220(val, _values, result)
                      result = new_call val[0], :">>", s(:arglist, val[2])
                    
    result
end

def _reduce_221(val, _values, result)
                      result = s(:and, val[0], val[2])
                      result.line = val[0].line
                    
    result
end

def _reduce_222(val, _values, result)
                      result = s(:or, val[0], val[2])
                      result.line = val[0].line
                    
    result
end

def _reduce_223(val, _values, result)
                      result = s(:defined, val[2])
                    
    result
end

def _reduce_224(val, _values, result)
                      result = s(:if, val[0], val[2], val[4])
                      result.line = val[0].line
                    
    result
end

# reduce 225 omitted

# reduce 226 omitted

def _reduce_227(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_228(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

def _reduce_229(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_230(val, _values, result)
                      val[0] << s(:hash, *val[2])
                      result = val[0]
                    
    result
end

def _reduce_231(val, _values, result)
                      result = s(:array, s(:hash, *val[0]))
                    
    result
end

def _reduce_232(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_233(val, _values, result)
                      result = val[1]
                    
    result
end

# reduce 234 omitted

# reduce 235 omitted

# reduce 236 omitted

# reduce 237 omitted

def _reduce_238(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

def _reduce_239(val, _values, result)
                      result = val[0]
                      add_block_pass val[0], val[1]
                    
    result
end

def _reduce_240(val, _values, result)
                      result = s(:arglist, s(:hash, *val[0]))
                      add_block_pass result, val[1]
                    
    result
end

def _reduce_241(val, _values, result)
                      result = val[0]
                      result << s(:hash, *val[2])
                    
    result
end

def _reduce_242(val, _values, result)
                      result = s(:arglist)
                      add_block_pass result, val[0]
                    
    result
end

# reduce 243 omitted

# reduce 244 omitted

def _reduce_245(val, _values, result)
                      lexer.cmdarg_push 1
                    
    result
end

def _reduce_246(val, _values, result)
                      lexer.cmdarg_pop
                      result = val[1]
                    
    result
end

# reduce 247 omitted

def _reduce_248(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_249(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_250(val, _values, result)
                      result = s(:block_pass, val[1])
                    
    result
end

def _reduce_251(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_252(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_253(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

def _reduce_254(val, _values, result)
                      result = s(:array, s(:splat, val[1]))
                    
    result
end

def _reduce_255(val, _values, result)
                      result = val[0] << val[2]
                    
    result
end

def _reduce_256(val, _values, result)
                      result  = val[0] << s(:splat, val[3])
                    
    result
end

def _reduce_257(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

# reduce 258 omitted

def _reduce_259(val, _values, result)
                      result = s(:splat, val[1])
                    
    result
end

# reduce 260 omitted

# reduce 261 omitted

# reduce 262 omitted

# reduce 263 omitted

# reduce 264 omitted

# reduce 265 omitted

# reduce 266 omitted

# reduce 267 omitted

# reduce 268 omitted

def _reduce_269(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_270(val, _values, result)
                      result = s(:begin, val[2])
                      result.line = val[1]
                    
    result
end

def _reduce_271(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_272(val, _values, result)
                      result = s(:paren, val[1] || s(:nil))
                    
    result
end

def _reduce_273(val, _values, result)
                      result = s(:colon2, val[0], val[2].intern)
                    
    result
end

def _reduce_274(val, _values, result)
                      result = s(:colon3, val[1])
                    
    result
end

def _reduce_275(val, _values, result)
                      result = new_call val[0], :[], val[2]
                    
    result
end

def _reduce_276(val, _values, result)
                      result = val[1] || s(:array)
                    
    result
end

def _reduce_277(val, _values, result)
                      result = s(:hash, *val[1])
                    
    result
end

def _reduce_278(val, _values, result)
                      result = s(:return)
                    
    result
end

def _reduce_279(val, _values, result)
                      result = new_yield val[2]
                    
    result
end

def _reduce_280(val, _values, result)
                      result = s(:yield)
                    
    result
end

def _reduce_281(val, _values, result)
                      result = s(:yield)
                    
    result
end

def _reduce_282(val, _values, result)
                      result = s(:defined, val[3])
                    
    result
end

def _reduce_283(val, _values, result)
                      result = s(:not, val[2])
                      result.line = val[2].line
                    
    result
end

def _reduce_284(val, _values, result)
                      result = s(:not, s(:nil))
                    
    result
end

def _reduce_285(val, _values, result)
                      result = new_call nil, val[0].intern, s(:arglist)
                      result << val[1]
                    
    result
end

# reduce 286 omitted

def _reduce_287(val, _values, result)
                      val[0] << val[1]
                      result = val[0]
                    
    result
end

def _reduce_288(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_289(val, _values, result)
                      result = new_if val[1], val[3], val[4]
                    
    result
end

def _reduce_290(val, _values, result)
                      result = new_if val[1], val[4], val[3]
                    
    result
end

def _reduce_291(val, _values, result)
                      lexer.cond_push 1
                      result = lexer.line
                    
    result
end

def _reduce_292(val, _values, result)
                      lexer.cond_pop
                    
    result
end

def _reduce_293(val, _values, result)
                      result = s(:while, val[2], val[5], true)
                      result.line = val[1]
                    
    result
end

def _reduce_294(val, _values, result)
                      lexer.cond_push 1
                      result = lexer.line
                    
    result
end

def _reduce_295(val, _values, result)
                      lexer.cond_pop
                    
    result
end

def _reduce_296(val, _values, result)
                      result = s(:until, val[2], val[5], true)
                      result.line = val[1]
                    
    result
end

def _reduce_297(val, _values, result)
                      result = s(:case, val[1], *val[3])
                      result.line = val[1].line
                    
    result
end

def _reduce_298(val, _values, result)
                      result = s(:case, nil, *val[2])
                      # result.line = val[2].line
                    
    result
end

def _reduce_299(val, _values, result)
                      result = s(:case, nil, val[3])
                      # result.line = val[3].line
                    
    result
end

def _reduce_300(val, _values, result)
                      # ...
                    
    result
end

def _reduce_301(val, _values, result)
                      # ...
                    
    result
end

# reduce 302 omitted

def _reduce_303(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_304(val, _values, result)
                      # ...
                    
    result
end

def _reduce_305(val, _values, result)
                      result = new_class val[2], val[3], val[5]
                      result.line = val[1]
                      result.end_line = lexer.line
                    
    result
end

def _reduce_306(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_307(val, _values, result)
                      # ...
                    
    result
end

def _reduce_308(val, _values, result)
                      result = new_sclass val[3], val[6]
                      result.line = val[2]
                    
    result
end

def _reduce_309(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_310(val, _values, result)
                      # ...
                    
    result
end

def _reduce_311(val, _values, result)
                      result = new_module val[2], val[4]
                      result.line = val[1]
                      result.end_line = lexer.line
                    
    result
end

def _reduce_312(val, _values, result)
                      result = lexer.scope_line
                      push_scope
                    
    result
end

def _reduce_313(val, _values, result)
                      result = new_def val[2], nil, val[1], val[3], val[4]
                      pop_scope
                    
    result
end

def _reduce_314(val, _values, result)
                       lexer.lex_state = :expr_fname
                    
    result
end

def _reduce_315(val, _values, result)
                      result = lexer.scope_line
                      push_scope
                    
    result
end

def _reduce_316(val, _values, result)
                      result = new_def val[5], val[1], val[4], val[6], val[7]
                      pop_scope
                    
    result
end

def _reduce_317(val, _values, result)
                      result = s(:break)
                    
    result
end

def _reduce_318(val, _values, result)
                      result = s(:next)
                    
    result
end

def _reduce_319(val, _values, result)
                      result = s(:redo)
                    
    result
end

# reduce 320 omitted

# reduce 321 omitted

# reduce 322 omitted

# reduce 323 omitted

# reduce 324 omitted

# reduce 325 omitted

# reduce 326 omitted

# reduce 327 omitted

# reduce 328 omitted

def _reduce_329(val, _values, result)
                      result = new_call nil, :lambda, s(:arglist)
                      result << new_iter(val[0], val[1])
                    
    result
end

def _reduce_330(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_331(val, _values, result)
                      result = nil
                    
    result
end

# reduce 332 omitted

# reduce 333 omitted

def _reduce_334(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_335(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_336(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_337(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_338(val, _values, result)
                      result = s(:if, val[2], val[4], val[5])
                      result.line = val[1]
                    
    result
end

# reduce 339 omitted

def _reduce_340(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_341(val, _values, result)
                      result = s(:block, val[0])
                    
    result
end

def _reduce_342(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_343(val, _values, result)
                      result = new_assign new_assignable(s(:identifier, val[0].intern)), val[2]
                    
    result
end

# reduce 344 omitted

def _reduce_345(val, _values, result)
                      result = 0
                    
    result
end

def _reduce_346(val, _values, result)
                      result = 0
                    
    result
end

def _reduce_347(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_348(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_349(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_350(val, _values, result)
                      nil
                    
    result
end

def _reduce_351(val, _values, result)
                      result = new_block_args val[0], val[2], val[4], val[5]
                    
    result
end

def _reduce_352(val, _values, result)
                      result = new_block_args val[0], val[2], nil, val[3]
                    
    result
end

def _reduce_353(val, _values, result)
                      result = new_block_args val[0], nil, val[2], val[3]
                    
    result
end

def _reduce_354(val, _values, result)
                      result = new_block_args val[0], nil, nil, nil
                    
    result
end

def _reduce_355(val, _values, result)
                      result = new_block_args val[0], nil, nil, val[1]
                    
    result
end

def _reduce_356(val, _values, result)
                      result = new_block_args nil, val[0], val[2], val[3]
                    
    result
end

def _reduce_357(val, _values, result)
                      result = new_block_args nil, val[0], nil, val[1]
                    
    result
end

def _reduce_358(val, _values, result)
                      result = new_block_args nil, nil, val[0], val[1]
                    
    result
end

def _reduce_359(val, _values, result)
                      result = new_block_args nil, nil, nil, val[0]
                    
    result
end

def _reduce_360(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_361(val, _values, result)
                      result = new_iter val[2], val[3]
                      result.line = val[1]
                      pop_scope
                    
    result
end

def _reduce_362(val, _values, result)
                      val[0] << val[1]
                      result = val[0]
                    
    result
end

# reduce 363 omitted

# reduce 364 omitted

def _reduce_365(val, _values, result)
                      result = new_call nil, val[0].intern, val[1]
                    
    result
end

def _reduce_366(val, _values, result)
                      result = new_call val[0], val[2].intern, val[3]
                    
    result
end

def _reduce_367(val, _values, result)
                      result = new_call val[0], :call, val[2]
                    
    result
end

def _reduce_368(val, _values, result)
                      result = new_call val[0], val[2].intern, val[3]
                    
    result
end

def _reduce_369(val, _values, result)
                      result = new_call val[0], val[2].intern, s(:arglist)
                    
    result
end

def _reduce_370(val, _values, result)
                      result = new_super val[1]
                    
    result
end

def _reduce_371(val, _values, result)
                      result = s(:super, nil)
                    
    result
end

def _reduce_372(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_373(val, _values, result)
                      result = new_iter val[2], val[3]
                      result.line = val[1]
                      pop_scope
                    
    result
end

def _reduce_374(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_375(val, _values, result)
                      result = new_iter val[2], val[3]
                      result.line = val[1]
                      pop_scope
                    
    result
end

def _reduce_376(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_377(val, _values, result)
                      part = s(:when, val[2], val[4])
                      part.line = val[2].line
                      result = [part]
                      result.push *val[5] if val[5]
                    
    result
end

def _reduce_378(val, _values, result)
                      result = [val[0]]
                    
    result
end

# reduce 379 omitted

def _reduce_380(val, _values, result)
                      exc = val[1] || s(:array)
                      exc << new_assign(val[2], s(:gvar, '$!'.intern)) if val[2]
                      result = [s(:resbody, exc, val[4])]
                      result.push val[5].first if val[5]
                    
    result
end

def _reduce_381(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_382(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

# reduce 383 omitted

# reduce 384 omitted

def _reduce_385(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_386(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_387(val, _values, result)
                      result = val[1].nil? ? s(:nil) : val[1]
                    
    result
end

# reduce 388 omitted

# reduce 389 omitted

# reduce 390 omitted

# reduce 391 omitted

def _reduce_392(val, _values, result)
                      result = new_str val[0]
                    
    result
end

# reduce 393 omitted

# reduce 394 omitted

def _reduce_395(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_396(val, _values, result)
                      result = s(:str, val[0])
                    
    result
end

def _reduce_397(val, _values, result)
                      result = new_xstr val[1]
                    
    result
end

def _reduce_398(val, _values, result)
                      result = new_regexp val[1], val[2]
                    
    result
end

def _reduce_399(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_400(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_401(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_402(val, _values, result)
                      part = val[1]
                      part = s(:dstr, "", val[1]) if part.type == :evstr
                      result = val[0] << part
                    
    result
end

def _reduce_403(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_404(val, _values, result)
                      result = val[0].concat([val[1]])
                    
    result
end

def _reduce_405(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_406(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_407(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_408(val, _values, result)
                      result = val[0] << s(:str, val[1])
                    
    result
end

def _reduce_409(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_410(val, _values, result)
                      result = str_append val[0], val[1]
                    
    result
end

def _reduce_411(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_412(val, _values, result)
                      result = str_append val[0], val[1]
                    
    result
end

def _reduce_413(val, _values, result)
                      result = s(:str, val[0])
                    
    result
end

def _reduce_414(val, _values, result)
                      result = lexer.strterm
                      lexer.strterm = nil
                    
    result
end

def _reduce_415(val, _values, result)
                      lexer.strterm = val[1]
                      result = s(:evstr, val[2])
                    
    result
end

def _reduce_416(val, _values, result)
                      lexer.cond_push 0
                      lexer.cmdarg_push 0
                      result = lexer.strterm
                      lexer.strterm = nil
                      lexer.lex_state = :expr_beg
                    
    result
end

def _reduce_417(val, _values, result)
                      lexer.strterm = val[1]
                      lexer.cond_lexpop
                      lexer.cmdarg_lexpop
                      result = s(:evstr, val[2])
                    
    result
end

def _reduce_418(val, _values, result)
                      result = s(:gvar, val[0].intern)
                    
    result
end

def _reduce_419(val, _values, result)
                      result = s(:ivar, val[0].intern)
                    
    result
end

def _reduce_420(val, _values, result)
                      result = s(:cvar, val[0].intern)
                    
    result
end

# reduce 421 omitted

def _reduce_422(val, _values, result)
                      result = s(:sym, val[1].intern)
                      lexer.lex_state = :expr_end
                    
    result
end

def _reduce_423(val, _values, result)
                      result = s(:sym, val[0].intern)
                    
    result
end

# reduce 424 omitted

# reduce 425 omitted

# reduce 426 omitted

# reduce 427 omitted

def _reduce_428(val, _values, result)
                      result = new_dsym val[1]
                    
    result
end

def _reduce_429(val, _values, result)
                      result = s(:int, val[0])
                    
    result
end

def _reduce_430(val, _values, result)
                      result = s(:float, val[0])
                    
    result
end

# reduce 431 omitted

# reduce 432 omitted

def _reduce_433(val, _values, result)
                      result = s(:identifier, val[0].intern)
                    
    result
end

def _reduce_434(val, _values, result)
                      result = s(:ivar, val[0].intern)
                    
    result
end

def _reduce_435(val, _values, result)
                      result = s(:gvar, val[0].intern)
                    
    result
end

def _reduce_436(val, _values, result)
                      result = s(:const, val[0].intern)
                    
    result
end

def _reduce_437(val, _values, result)
                      result = s(:cvar, val[0].intern)
                    
    result
end

def _reduce_438(val, _values, result)
                      result = s(:nil)
                    
    result
end

def _reduce_439(val, _values, result)
                      result = s(:self)
                    
    result
end

def _reduce_440(val, _values, result)
                      result = s(:true)
                    
    result
end

def _reduce_441(val, _values, result)
                      result = s(:false)
                    
    result
end

def _reduce_442(val, _values, result)
                      result = s(:str, self.file)
                    
    result
end

def _reduce_443(val, _values, result)
                      result = s(:int, lexer.line)
                    
    result
end

def _reduce_444(val, _values, result)
                      result = new_var_ref val[0]
                    
    result
end

def _reduce_445(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_446(val, _values, result)
                      result = s(:nth_ref, val[0])
                    
    result
end

# reduce 447 omitted

def _reduce_448(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_449(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_450(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_451(val, _values, result)
                      result = val[1]
                      lexer.lex_state = :expr_beg
                    
    result
end

def _reduce_452(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_453(val, _values, result)
                      result = new_args val[0], val[2], val[4], val[5]
                    
    result
end

def _reduce_454(val, _values, result)
                      result = new_args val[0], val[2], nil, val[3]
                    
    result
end

def _reduce_455(val, _values, result)
                      result = new_args val[0], nil, val[2], val[3]
                    
    result
end

def _reduce_456(val, _values, result)
                      result = new_args val[0], nil, nil, val[1]
                    
    result
end

def _reduce_457(val, _values, result)
                      result = new_args nil, val[0], val[2], val[3]
                    
    result
end

def _reduce_458(val, _values, result)
                      result = new_args nil, val[0], nil, val[1]
                    
    result
end

def _reduce_459(val, _values, result)
                      result = new_args nil, nil, val[0], val[1]
                    
    result
end

def _reduce_460(val, _values, result)
                      result = new_args nil, nil, nil, val[0]
                    
    result
end

def _reduce_461(val, _values, result)
                      result = s(:args)
                    
    result
end

def _reduce_462(val, _values, result)
                      raise 'formal argument cannot be a constant'
                    
    result
end

def _reduce_463(val, _values, result)
                      raise 'formal argument cannot be an instance variable'
                    
    result
end

def _reduce_464(val, _values, result)
                      raise 'formal argument cannot be a class variable'
                    
    result
end

def _reduce_465(val, _values, result)
                      raise 'formal argument cannot be a global variable'
                    
    result
end

def _reduce_466(val, _values, result)
                      result = val[0].intern
                      scope.add_local result
                    
    result
end

def _reduce_467(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_468(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_469(val, _values, result)
                      result = s(:lasgn, val[0])
                    
    result
end

# reduce 470 omitted

def _reduce_471(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

def _reduce_472(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

# reduce 473 omitted

# reduce 474 omitted

# reduce 475 omitted

# reduce 476 omitted

# reduce 477 omitted

def _reduce_478(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_479(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_480(val, _values, result)
                      result = new_assign new_assignable(s(:identifier, val[0].intern)), val[2]
                    
    result
end

def _reduce_481(val, _values, result)
                      result = s(:block, val[0])
                    
    result
end

def _reduce_482(val, _values, result)
                      result = val[0]
                      val[0] << val[2]
                    
    result
end

# reduce 483 omitted

# reduce 484 omitted

def _reduce_485(val, _values, result)
                      result = "*#{val[1]}".intern
                    
    result
end

def _reduce_486(val, _values, result)
                      result = :"*"
                    
    result
end

# reduce 487 omitted

# reduce 488 omitted

def _reduce_489(val, _values, result)
                      result = "&#{val[1]}".intern
                    
    result
end

def _reduce_490(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_491(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_492(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_493(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_494(val, _values, result)
                      result = []
                    
    result
end

def _reduce_495(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_496(val, _values, result)
                      raise "unsupported assoc list type (#@line_number)"
                    
    result
end

def _reduce_497(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_498(val, _values, result)
                      result = val[0].push *val[2]
                    
    result
end

def _reduce_499(val, _values, result)
                      result = [val[0], val[2]]
                    
    result
end

def _reduce_500(val, _values, result)
                      result = [s(:sym, val[0].intern), val[1]]
                    
    result
end

# reduce 501 omitted

# reduce 502 omitted

# reduce 503 omitted

# reduce 504 omitted

# reduce 505 omitted

# reduce 506 omitted

# reduce 507 omitted

# reduce 508 omitted

# reduce 509 omitted

# reduce 510 omitted

# reduce 511 omitted

# reduce 512 omitted

# reduce 513 omitted

# reduce 514 omitted

# reduce 515 omitted

# reduce 516 omitted

# reduce 517 omitted

# reduce 518 omitted

# reduce 519 omitted

# reduce 520 omitted

# reduce 521 omitted

# reduce 522 omitted

# reduce 523 omitted

# reduce 524 omitted

# reduce 525 omitted

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module Opal
