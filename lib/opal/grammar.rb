#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.9
# from Racc grammer file "".
#

require 'racc/parser.rb'
module Opal
  class Grammar < Racc::Parser


##### State transition tables begin ###

clist = [
'63,64,65,7,51,529,197,198,57,58,197,198,264,61,565,59,60,62,23,24,66',
'67,696,-472,197,198,22,28,27,89,88,90,91,595,674,17,197,198,197,198',
'-426,6,41,8,9,93,92,83,50,85,84,86,87,94,95,783,81,82,522,38,39,37,-258',
'-71,-72,659,594,100,707,-258,-79,73,99,-417,529,-80,564,728,100,74,-417',
'36,529,99,30,-472,-82,52,-78,591,-81,-59,32,296,264,263,40,100,529,493',
'194,-72,99,-79,18,529,-472,195,-72,79,73,75,76,77,78,100,-82,528,74',
'80,99,-258,63,64,65,296,51,56,-67,659,57,58,-417,53,54,61,673,59,60',
'62,250,251,66,67,727,264,659,-84,249,280,284,89,88,90,91,100,259,211',
'724,193,99,100,553,658,41,-474,99,93,92,83,50,85,84,86,87,94,95,263',
'81,82,723,38,39,37,100,-80,528,-80,595,99,-80,421,100,259,528,805,-82',
'99,-82,268,-81,-82,-81,202,595,-81,206,259,100,52,528,296,576,99,248',
'100,-426,528,40,259,99,594,555,554,566,100,210,658,263,595,99,79,73',
'75,76,77,78,594,259,-85,74,80,100,196,658,575,706,99,253,56,63,64,65',
'-74,51,53,54,-70,57,58,-82,219,594,61,-78,59,60,62,250,251,66,67,553',
'731,219,536,249,280,284,89,88,90,91,100,-77,211,-72,535,99,536,571,-85',
'41,-80,-80,93,92,83,50,85,84,86,87,94,95,553,81,82,718,38,39,37,219',
'223,228,229,230,225,227,235,236,231,232,-251,212,213,491,492,233,234',
'-251,202,555,554,206,553,731,52,493,100,717,690,736,216,99,222,40,218',
'217,214,215,226,224,220,210,221,328,327,737,79,73,75,76,77,78,555,554',
'560,74,80,738,237,-477,-477,-477,219,-477,56,522,-76,-477,-477,-251',
'53,54,-477,-84,-477,-477,-477,-477,-477,-477,-477,522,555,554,556,-477',
'-477,-477,-477,-477,-477,-477,523,216,-477,-74,-423,218,217,571,459',
'-477,743,-423,-477,-477,-477,-477,-477,-477,-477,-477,-477,-477,553',
'-477,-477,459,-477,-477,-477,219,223,228,229,230,225,227,235,236,231',
'232,-74,212,213,197,198,233,234,-74,-477,-419,849,-477,-477,100,-477',
'731,-419,850,99,-477,216,-477,222,-477,218,217,214,215,226,224,220,-477',
'221,289,290,750,-477,-477,-477,-477,-477,-477,555,554,551,-477,-477',
'818,237,505,-212,-425,504,-477,-477,-476,-476,-476,-425,-476,-477,-477',
'553,-476,-476,558,746,731,-476,848,-476,-476,-476,-476,-476,-476,-476',
'197,198,-474,-73,-476,-476,-476,-476,-476,-476,-476,751,-305,-476,-259',
'325,324,328,327,-305,-476,-259,483,-476,-476,-476,-476,-476,-476,-476',
'-476,-476,-476,-425,-476,-476,548,-476,-476,-476,-73,482,-257,549,-257',
'555,554,-73,417,-257,-258,-257,746,731,-475,418,-475,-258,457,-476,670',
'-425,-476,-476,481,-476,505,742,-425,507,-476,-305,-476,-259,-476,383',
'487,-251,496,385,384,-58,-476,488,-251,497,-257,-476,-476,-476,-476',
'-476,-476,-257,-257,-257,-476,-476,650,-257,-257,-257,-257,-257,-476',
'-476,-257,419,-422,-258,670,-476,-476,-257,466,-422,-258,668,-475,669',
'-425,-257,-257,-258,-257,-257,-257,-257,-257,513,514,818,-421,-259,256',
'486,-251,419,459,-421,-259,257,-424,325,324,328,327,494,457,-424,-257',
'-257,-257,-257,-257,-257,-257,-257,-257,-257,-257,-257,-257,-257,-417',
'-257,-257,-257,-257,669,584,-417,454,-414,-257,-258,325,324,328,327',
'-414,-257,495,-257,709,-257,-257,-257,-257,-257,-257,-257,-259,-257',
'219,-257,219,-420,318,766,322,320,319,321,-420,768,522,505,-257,-257',
'504,-75,684,-257,322,320,319,321,-83,771,-257,63,64,65,7,51,207,216',
'773,57,58,218,217,466,61,423,59,60,62,23,24,66,67,325,324,328,327,22',
'28,27,89,88,90,91,711,508,17,325,324,328,327,-239,6,41,8,9,93,92,83',
'50,85,84,86,87,94,95,505,81,82,507,38,39,37,219,223,228,229,230,225',
'227,235,236,231,232,612,212,213,422,466,233,234,613,36,612,510,30,-238',
'692,52,517,613,420,519,32,216,522,222,40,218,217,214,215,226,224,220',
'18,221,666,219,784,79,73,75,76,77,78,650,785,786,74,80,296,237,63,64',
'65,259,51,56,259,296,57,58,523,53,54,61,238,59,60,62,250,251,66,67,386',
'789,790,219,249,280,284,89,88,90,91,792,524,211,-237,796,325,324,328',
'327,41,662,374,93,92,83,50,85,84,86,87,94,95,800,81,82,802,38,39,37',
'219,223,228,229,230,225,227,235,236,231,232,365,212,213,362,536,233',
'234,341,202,525,-474,206,775,776,52,777,94,95,808,654,216,376,222,40',
'218,217,214,215,226,224,220,210,221,219,812,813,79,73,75,76,77,78,-478',
'296,643,74,80,537,237,-478,-478,-478,639,822,56,-478,-478,-240,-478',
'219,53,54,219,219,216,823,825,-478,218,217,214,215,102,103,104,105,106',
'-478,-478,296,-478,-478,-478,-478,-478,638,288,684,522,322,320,319,321',
'216,-475,637,835,218,217,214,215,102,103,104,105,106,-478,-478,-478',
'-478,-478,-478,-478,-478,-478,-478,-478,-478,-478,-478,836,287,-478',
'-478,-478,678,581,499,839,238,-478,841,325,324,328,327,842,-478,489',
'-478,522,-478,-478,-478,-478,-478,-478,-478,771,-478,-478,-478,559,563',
'624,-67,623,851,622,569,238,614,857,296,-478,-478,192,-73,637,-478,191',
'63,64,65,-81,51,-478,190,189,57,58,609,188,867,61,522,59,60,62,250,251',
'66,67,869,870,570,573,249,280,284,89,88,90,91,96,259,211,-237,574,,',
',,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,219,223,228,229',
'230,225,227,235,236,231,232,,212,213,,,233,234,,202,,,206,,,52,,,,,248',
'216,,222,40,218,217,214,215,226,224,220,210,221,,,,79,73,75,76,77,78',
',,,74,80,,237,,-212,,,253,56,63,64,65,7,51,53,54,,57,58,,,,61,,59,60',
'62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,6,41,8,9,93,92,83',
'50,85,84,86,87,94,95,,81,82,,38,39,37,219,223,228,229,230,225,227,235',
'236,231,232,,212,213,,,233,234,,36,,,30,,,52,,,,,32,216,,222,40,218',
'217,214,215,226,224,220,18,221,,,,79,73,75,76,77,78,,,,74,80,,237,63',
'64,65,7,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89',
'88,90,91,,,17,,,,,,6,41,8,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38',
'39,37,219,223,228,229,230,225,227,235,236,231,232,,212,213,,,233,234',
',36,,,30,,,52,,,,,32,216,,222,40,218,217,214,215,226,224,220,18,221',
',,,79,73,75,76,77,78,,-494,,74,80,,237,592,-494,-494,-494,,56,-494,-494',
'-494,,-494,53,54,,,,,,,-494,-494,-494,,,,,,,,-494,-494,,-494,-494,-494',
'-494,-494,,318,,322,320,319,321,,,,,,,,,,,,,,,-494,-494,-494,-494,-494',
'-494,-494,-494,-494,-494,-494,-494,-494,-494,,,-494,-494,-494,,,-494',
',259,-494,325,324,328,327,-494,,-494,,-494,,-494,-494,-494,-494,-494',
'-494,-494,,-494,-494,-494,,,,,,,,,,,,,-494,-494,-494,-494,,-494,63,64',
'65,7,51,,-494,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88',
'90,91,,,17,,,,,,6,41,8,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39',
'37,219,223,228,229,230,225,227,235,236,231,232,,212,213,,,233,234,,36',
',,30,,,52,,,,,32,216,,222,40,218,217,214,215,226,224,220,18,221,,,,79',
'73,75,76,77,78,,,,74,80,,237,63,64,65,,51,56,,,57,58,,53,54,61,,59,60',
'62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,83,50',
'85,84,86,87,94,95,,81,82,,38,39,37,219,223,228,229,230,225,227,235,236',
'231,232,,212,213,,,233,234,,202,,,206,207,,52,,,,,,216,,222,40,218,217',
'214,215,226,224,220,18,221,,,,79,73,75,76,77,78,,,,74,80,,237,63,64',
'65,,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88',
'90,91,,,211,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37',
'219,223,228,229,230,225,227,235,236,231,232,,212,213,,,233,234,,202',
',,206,,,52,,,,,,216,,222,40,218,217,214,215,226,224,220,210,221,,,,79',
'73,75,76,77,78,,,,74,80,,237,63,64,65,,51,56,,,57,58,,53,54,61,,59,60',
'62,250,251,66,67,,,,,249,280,284,89,88,90,91,,,211,,,,,,,41,,,93,92',
'83,50,85,84,86,87,94,95,,81,82,,38,39,37,219,223,228,229,230,225,227',
'235,236,231,232,,212,213,,,233,234,,202,,,206,,,52,,,,,600,216,246,222',
'40,218,217,214,215,226,224,220,210,221,,,,79,73,75,76,77,78,,,,74,80',
',237,63,64,65,7,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22',
'28,27,89,88,90,91,,,17,,,,,,6,41,8,9,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,219,223,228,229,230,225,227,235,236,231,232,,212,213',
',,233,234,,36,,,30,,,52,,,,,32,216,,222,40,218,217,214,215,226,224,220',
'18,221,,,,79,73,75,76,77,78,,,,74,80,,237,63,64,65,,51,56,,,57,58,,53',
'54,61,,59,60,62,250,251,66,67,,,,,249,28,27,89,88,90,91,,,211,,,,,,',
'41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,219,223,228,229',
'230,225,227,235,236,231,232,,212,213,,,233,234,,202,,,206,,,52,,,,,248',
'216,246,222,40,218,217,214,215,226,224,220,210,221,,,,79,73,75,76,77',
'78,,,,74,80,318,237,322,320,319,321,253,56,63,64,65,,51,53,54,,57,58',
',,,61,,59,60,62,250,251,66,67,,,,,249,28,27,89,88,90,91,,,211,,325,324',
'328,327,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,219,223',
'228,229,230,225,227,235,236,231,232,,212,213,,,233,234,,202,,,206,,',
'52,,,,,248,216,246,222,40,218,217,214,215,226,224,220,210,221,,,,79',
'73,75,76,77,78,,,,74,80,684,237,322,320,319,321,253,56,63,64,65,,51',
'53,54,,57,58,,,,61,,59,60,62,250,251,66,67,,,,,249,28,27,89,88,90,91',
',,211,,325,324,328,327,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38',
'39,37,219,223,228,229,230,225,227,235,236,231,232,,212,213,,,233,234',
',202,,,206,,,52,,,,,248,216,246,222,40,218,217,214,215,226,224,220,210',
'221,,,,79,73,75,76,77,78,,,,74,80,,237,,,,,253,56,63,64,65,7,51,53,54',
',57,58,,,,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,',
',,6,41,8,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,219,223,228',
'229,230,225,227,235,236,231,232,,212,213,,,233,234,,36,,,30,,,52,,,',
',32,216,,222,40,218,217,214,215,226,224,220,18,221,,,,79,73,75,76,77',
'78,,,,74,80,,237,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,250,251',
'66,67,,,,,249,280,284,89,88,90,91,,,211,,,,,,,41,,,93,92,83,50,85,84',
'86,87,94,95,,81,82,,38,39,37,219,223,228,229,230,225,227,235,236,231',
'232,,212,213,,,233,234,,202,,,206,,,52,,,,,,216,,222,40,218,217,214',
'215,226,224,220,210,221,,,,79,73,75,76,77,78,,-352,,74,80,,237,,-352',
'-352,-352,,56,-352,-352,-352,,-352,53,54,,,,,,,-352,-352,-352,,,,,,',
',-352,-352,,-352,-352,-352,-352,-352,,318,,322,320,319,321,,,,,,,,,',
',,,,,-352,-352,-352,-352,-352,-352,-352,-352,-352,-352,-352,-352,-352',
'-352,,,-352,-352,-352,516,,-352,,259,-352,325,324,328,327,-352,,-352',
',-352,,-352,-352,-352,-352,-352,-352,-352,,-352,-352,-352,,684,,322',
'320,319,321,,,,,,-352,-352,-352,-352,,-352,-265,,,,,,-352,-265,-265',
'-265,,,-265,-265,-265,318,-265,322,320,319,321,678,,,,,-265,-265,325',
'324,328,327,,,,-265,-265,,-265,-265,-265,-265,-265,,,,,,,,,,,310,,,',
',,,325,324,328,327,-265,-265,-265,-265,-265,-265,-265,-265,-265,-265',
'-265,-265,-265,-265,,,-265,-265,-265,,,-265,,268,-265,,,,,-265,,-265',
',-265,,-265,-265,-265,-265,-265,-265,-265,,-265,,-265,,,,,,,,,,,,,-265',
'-265,-265,-265,,-265,63,64,65,7,51,,-265,,57,58,,,,61,,59,60,62,23,24',
'66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,6,41,8,9,93,92,83,50,85,84',
'86,87,94,95,,81,82,,38,39,37,219,-496,-496,-496,-496,225,227,,,-496',
'-496,,,,,,233,234,,36,,,270,,,52,,,,,32,216,,222,40,218,217,214,215',
'226,224,220,18,221,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,',
',57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17',
',,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,219,,,,,,',
',,,,,,,,,233,234,,202,,,206,,,52,,,,,,216,,222,40,218,217,214,215,,',
'220,18,221,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,',
'53,54,61,,59,60,62,250,251,66,67,,,,,249,280,284,89,88,90,91,,,211,',
',,,,,281,,,93,92,83,50,85,84,86,87,94,95,,81,82,,,,285,219,223,228,229',
'230,225,227,235,236,231,232,,-496,-496,,,233,234,,278,,,206,,,52,,,',
',,216,,222,,218,217,214,215,226,224,220,,221,,,,79,73,75,76,77,78,,',
',74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,250,251,66,67,',
',,,249,280,284,89,88,90,91,,,211,,,,,,,41,,,93,92,83,50,85,84,86,87',
'94,95,,81,82,,38,39,37,219,,,,,,,,,,,,,,,,233,234,,202,,,206,,,52,,',
',,600,216,,222,40,218,217,214,215,,,220,210,221,,,,79,73,75,76,77,78',
',,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,',
',,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95',
',81,82,,38,39,37,219,-496,-496,-496,-496,225,227,,,-496,-496,,,,,,233',
'234,,202,,,206,,,52,,,,,,216,,222,40,218,217,214,215,226,224,220,18',
'221,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61',
',59,60,62,250,251,66,67,,,,,249,280,284,89,88,90,91,,,211,,,,,,,281',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,,,285,219,-496,-496,-496,-496',
'225,227,,,-496,-496,,,,,,233,234,,830,,,206,,,52,,,,,,216,,222,,218',
'217,214,215,226,224,220,,221,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65',
',51,56,,,57,58,,53,54,61,,59,60,62,250,251,66,67,,,,,249,280,284,89',
'88,90,91,,,211,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39',
'37,219,-496,-496,-496,-496,225,227,,,-496,-496,,,,,,233,234,,202,,,206',
',,52,,,,,600,216,246,222,40,218,217,214,215,226,224,220,210,221,,,,79',
'73,75,76,77,78,,,,74,80,,,,,,,253,56,63,64,65,,51,53,54,,57,58,,,,61',
',59,60,62,250,251,66,67,,,,,249,280,284,89,88,90,91,,,211,,,,,,,41,',
',93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,219,223,228,229,230',
'225,227,235,236,231,232,,-496,-496,,,233,234,,202,,,206,,,52,,,,,,216',
',222,40,218,217,214,215,226,224,220,210,221,,,,79,73,75,76,77,78,,,',
'74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,250,251,66,67,,',
',,249,280,284,89,88,90,91,,,211,,,,,,,41,,,93,92,83,50,85,84,86,87,94',
'95,,81,82,,38,39,37,219,223,228,229,230,225,227,,,231,232,,,,,,233,234',
',202,,,206,,,52,,,,,,216,,222,40,218,217,214,215,226,224,220,210,221',
',,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59',
'60,62,250,251,66,67,,,,,249,280,284,89,88,90,91,,,211,,,,,,,41,,,93',
'92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,219,223,228,229,230,225',
'227,235,,231,232,,,,,,233,234,,202,,,206,,,52,,,,,,216,,222,40,218,217',
'214,215,226,224,220,210,221,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65',
'7,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90',
'91,,,17,,,,,,6,41,8,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37',
'219,-496,-496,-496,-496,225,227,,,-496,-496,,,,,,233,234,,36,,,30,,',
'52,,,,,32,216,,222,40,218,217,214,215,226,224,220,18,221,,,,79,73,75',
'76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,250',
'251,66,67,,,,,249,280,284,89,88,90,91,,,211,,,,,,,41,,,93,92,83,50,85',
'84,86,87,94,95,,81,82,,38,39,37,219,-496,-496,-496,-496,225,227,,,-496',
'-496,,,,,,233,234,,202,,,206,,,52,,,,,,216,,222,40,218,217,214,215,226',
'224,220,210,221,,,,79,73,75,76,77,78,,-252,,74,80,,,,-252,-252,-252',
',56,-252,-252,-252,219,-252,53,54,,,,,,-252,,-252,-252,,,,233,234,,',
'-252,-252,,-252,-252,-252,-252,-252,,,,216,,222,,218,217,214,215,,,220',
',221,,,,,,-252,-252,-252,-252,-252,-252,-252,-252,-252,-252,-252,-252',
'-252,-252,,,-252,-252,-252,,,-252,,,-252,,,-252,,-252,,-252,,-252,,-252',
'-252,-252,-252,-252,-252,-252,,-252,,-252,,,,,,,,,,,,,-252,-252,-252',
'-252,,-252,,,-252,-252,,,-252,63,64,65,,51,,,,57,58,,,,61,,59,60,62',
'23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,83,50,85',
'84,86,87,94,95,,81,82,,38,39,37,219,,,,,,,,,,,,,,,,233,234,,202,,,206',
',,52,,,,,,216,,222,40,218,217,214,215,,,220,18,221,,,,79,73,75,76,77',
'78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,250,251,66',
'67,,,,,249,280,284,89,88,90,91,,,211,,,,,,,41,,,93,92,83,50,85,84,86',
'87,94,95,,81,82,,38,39,37,219,,,,,,,,,,,,,,,,233,234,,202,,,206,219',
',52,,,,,248,216,,222,40,218,217,214,215,233,234,,210,,,,,79,73,75,76',
'77,78,,216,,74,80,218,217,214,215,,,253,56,63,64,65,,51,53,54,,57,58',
',,,61,,59,60,62,250,251,66,67,,,,,249,280,284,89,88,90,91,,,211,,,,',
',,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,219,,,,,,,,,,',
',,,,,233,234,,202,,,206,,,52,,,,,248,216,,222,40,218,217,214,215,,,',
'210,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,253,56,63,64,65,,51,53,54,',
'57,58,,,,61,,59,60,62,250,251,66,67,,,,,249,280,284,89,88,90,91,,,211',
',,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,',
',,,,,,,,,202,,,206,,,52,,,,,,,246,,40,,,,,,,,210,,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,253,56,63,64,65,,51,53,54,,57,58,,,,61,,59,60,62,250',
'251,66,67,,,,,249,280,284,89,88,90,91,,,211,,,,,,,41,,,93,92,83,50,85',
'84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,202,,,206,,,52,,',
',,,,,,40,,,,,,,,210,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56',
',,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17',
',,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,',
',,,,,,,,,202,,,206,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,',
',,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,',
',,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95',
',81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,202,,,206,,,52,,,,,,,,,40,,,,,,',
',18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93',
'92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,202,',
',206,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,100,,',
',,99,,56,63,64,65,7,51,53,54,,57,58,,,,61,,59,60,62,23,24,66,67,,,,',
'22,28,27,89,88,90,91,,,17,,,,,,6,41,8,9,93,92,83,50,85,84,86,87,94,95',
',81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,',
',18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,250,251,66,67,,,,,249,280,284,89,88,90,91,,,211,,,,,,,41',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,',
'202,,,206,,,52,,,,,,,,,40,,,,,,,,210,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,250,251,66,67,,,,,249',
'280,284,89,88,90,91,,,211,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,202,,,206,,,52,,,,,,,,,40,,,,,,,',
'210,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93',
'92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,202,',
',206,,618,52,,,,,,,246,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,7,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28',
'27,89,88,90,91,,,17,,,,,,6,41,8,9,93,92,83,50,85,84,86,87,94,95,,81',
'82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18',
',,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,7,51,56,,,57,58,,53,54,61',
',59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,6,41,8,9,93',
'92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,',
'30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64',
'65,,51,56,,,57,58,,53,54,61,,59,60,62,250,251,66,67,,,,,249,280,284',
'89,88,90,91,,,211,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38',
'39,37,,,,,,,,,,,,,,,,,,,,202,,,206,,,52,,,,,248,,,,40,,,,,,,,210,,,',
',79,73,75,76,77,78,,,,74,80,,,,,,,253,56,-471,-471,-471,,-471,53,54',
',-471,-471,,,,-471,,-471,-471,-471,-471,-471,-471,-471,,-471,,,-471',
'-471,-471,-471,-471,-471,-471,,,-471,,,,,,,-471,,,-471,-471,-471,-471',
'-471,-471,-471,-471,-471,-471,,-471,-471,,-471,-471,-471,,,,,,,,,,,',
',,,,,,,,-471,,,-471,-471,,-471,,,,,-471,,-471,,-471,,,,,,,,-471,,-471',
',,-471,-471,-471,-471,-471,-471,,,,-471,-471,,,,,,,-471,-471,-472,-472',
'-472,,-472,-471,-471,,-472,-472,,,,-472,,-472,-472,-472,-472,-472,-472',
'-472,,-472,,,-472,-472,-472,-472,-472,-472,-472,,,-472,,,,,,,-472,,',
'-472,-472,-472,-472,-472,-472,-472,-472,-472,-472,,-472,-472,,-472,-472',
'-472,,,,,,,,,,,,,,,,,,,,-472,,,-472,-472,,-472,,,,,-472,,-472,,-472',
',,,,,,,-472,,-472,,,-472,-472,-472,-472,-472,-472,,,,-472,-472,,,,,',
',-472,-472,63,64,65,,51,-472,-472,,57,58,,,,61,,59,60,62,23,24,66,67',
',,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87,94',
'95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,202,,,206,,,52,,,,,,,,,40,,,',
',,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,7,51,56,,,57,58,,53',
'54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,6,41',
'8,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,',
',,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,376,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22',
'28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81',
'82,,38,39,37,,,,,,,,,,,,,,,,,,,,202,,,206,,,52,,,,,,,,,40,,,,,,,,18',
',,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,',
'59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92',
'83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,202,,,206',
',,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65',
',51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90',
'91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,',
',,,,,,,,,,,,,,,,,202,,,206,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76',
'77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66',
'67,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87',
'94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,202,,,206,,,52,,,,,,,,,40',
',,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,7,51,56,,,57,58',
',53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,6',
'41,8,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,',
',,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74',
'80,,,63,64,65,7,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22',
'28,27,89,88,90,91,,,17,,,,,,6,41,8,9,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,',
'18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61',
',59,60,62,250,251,66,67,,,,,249,280,284,89,88,90,91,,,211,,,,,,,41,',
',93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,202',
',,206,,,52,,,,,,,,,40,,,,,,,,210,,,,,79,73,75,76,77,78,,,,74,80,,,63',
'64,65,,51,56,,,57,58,,53,54,61,,59,60,62,250,251,66,67,,,,,249,280,284',
'89,88,90,91,,,211,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38',
'39,37,,,,,,,,,,,,,,,,,,,,202,,,206,,,52,,,,,248,,,,40,,,,,,,,210,,,',
',79,73,75,76,77,78,,,,74,80,,,63,64,65,7,51,56,,,57,58,,53,54,61,,59',
'60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,6,41,8,9,93,92',
'83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30',
',,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65',
'7,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90',
'91,,,17,,,,,,6,41,8,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37',
',,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75',
'76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,23,24',
'66,67,,,,,22,28,27,89,88,90,91,,,211,,,,,,,41,,,93,92,83,50,85,84,86',
'87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,202,,,206,,,52,,,,,393',
',,,40,,,,,,,,210,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,',
'57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,211',
',,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,',
',,,,,,,,,202,,,206,,,52,,,,,393,,,,40,,,,,,,,210,,,,,79,73,75,76,77',
'78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67',
',,,,22,28,27,89,88,90,91,,,211,,,,,,,41,,,93,92,83,50,85,84,86,87,94',
'95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,202,,,206,,,52,,,,,,,,,40,,,',
',,,,210,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53',
'54,61,,59,60,62,250,251,66,67,,,,,249,280,284,89,88,90,91,,,211,,,,',
',,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,',
',,,,,202,,,206,,,52,,,,,248,,,,40,,,,,,,,210,,,,,79,73,75,76,77,78,',
',,74,80,,,,,,,253,56,63,64,65,,51,53,54,,57,58,,,,61,,59,60,62,250,251',
'66,67,,,,,249,280,284,89,88,90,91,,,211,,,,,,,41,,,93,92,83,50,85,84',
'86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,202,,,206,,,52,,,,,',
',,,40,,,,,,,,210,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,',
'57,58,,53,54,61,,59,60,62,250,251,66,67,,,,,249,280,284,89,88,90,91',
',,211,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,',
',,,,,,,,,,,,,,,202,,,206,,,52,,,,,,,,,40,,,,,,,,210,,,,,79,73,75,76',
'77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66',
'67,,,,,22,28,27,89,88,90,91,,,211,,,,,,,41,,,93,92,83,50,85,84,86,87',
'94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,202,,,206,,,52,,,,,,,,,40',
',,,,,,,210,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58',
',53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,',
'41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,',
',,,202,,,206,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28',
'27,89,88,90,91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82',
',38,39,37,,,,,,,,,,,,,,,,,,,,202,,,206,,,52,,,,,,,,,40,,,,,,,,18,,,',
',79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59',
'60,62,250,251,66,67,,,,,249,280,284,89,88,90,91,,,211,,,,,,,41,,,93',
'92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,202,',
',206,,,52,,,,,,,,,40,,,,,,,,210,,,,,79,73,75,76,77,78,,,,74,80,,,63',
'64,65,,51,56,,,57,58,,53,54,61,,59,60,62,250,251,66,67,,,,,249,280,284',
'89,88,90,91,,,211,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38',
'39,37,,,,,,,,,,,,,,,,,,,,202,,,206,,,52,,,,,,,,,40,,,,,,,,210,,,,,79',
'73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62',
'250,251,66,67,,,,,249,280,284,89,88,90,91,,,211,,,,,,,41,,,93,92,83',
'50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,202,,,206,',
',52,,,,,,,,,40,,,,,,,,210,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65',
',51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90',
'91,,,211,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,',
',,,,,,,,,,,,,,,,,,202,,,206,,,52,,,,,,,,,40,,,,,,,,210,,,,,79,73,75',
'76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,250',
'251,66,67,,,,,249,280,284,89,88,90,91,,,211,,,,,,,41,,,93,92,83,50,85',
'84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,202,,,206,,,52,,',
',,,,,,40,,,,,,,,210,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,7,51,56',
',,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17',
',,,,,6,41,8,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,',
',,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78',
',,,74,80,,,63,64,65,7,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67',
',,,,22,28,27,89,88,90,91,,,17,,,,,,6,41,8,9,93,92,83,50,85,84,86,87',
'94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40',
',,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,',
'53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,',
'202,,,206,,425,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,250,251,66,67,,,,,249',
'280,284,89,88,90,91,,,211,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,202,,,206,,,52,,,,,,,,,40,,,,,,,',
'210,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93',
'92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,202,',
',206,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64',
'65,,51,56,,,57,58,,53,54,61,,59,60,62,250,251,66,67,,,,,249,280,284',
'89,88,90,91,,,211,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38',
'39,37,,,,,,,,,,,,,,,,,,,,202,,,206,,,52,,,,,,,,,40,,,,,,,,210,,,,,79',
'73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62',
'250,251,66,67,,,,,249,280,284,89,88,90,91,,,211,,,,,,,41,,,93,92,83',
'50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,202,,,206,',
',52,,,,,,,,,40,,,,,,,,210,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65',
',51,56,,,57,58,,53,54,61,,59,60,62,250,251,66,67,,,,,249,280,284,89',
'88,90,91,,,211,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39',
'37,,,,,,,,,,,,,,,,,,,,202,,,206,,,52,,,,,,,,,40,,,,,,,,210,,,,,79,73',
'75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,250',
'251,66,67,,,,,249,280,284,89,88,90,91,,,211,,,,,,,41,,,93,92,83,50,85',
'84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,202,,,206,,,52,,',
',,,,,,40,,,,,,,,210,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56',
',,57,58,,53,54,61,,59,60,62,250,251,66,67,,,,,249,280,284,89,88,90,91',
',,211,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,',
',,,,,,,,,,,,,,,202,,,206,,,52,,,,,,,,,40,,,,,,,,210,,,,,79,73,75,76',
'77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,250,251',
'66,67,,,,,249,280,284,89,88,90,91,,,211,,,,,,,41,,,93,92,83,50,85,84',
'86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,202,,,206,,,52,,,,,',
',,,40,,,,,,,,210,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,',
'57,58,,53,54,61,,59,60,62,250,251,66,67,,,,,249,280,284,89,88,90,91',
',,211,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,',
',,,,,,,,,,,,,,,202,,,206,,,52,,,,,,,,,40,,,,,,,,210,,,,,79,73,75,76',
'77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,250,251',
'66,67,,,,,249,280,284,89,88,90,91,,,211,,,,,,,41,,,93,92,83,50,85,84',
'86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,202,,,206,,,52,,,,,',
',,,40,,,,,,,,210,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,',
'57,58,,53,54,61,,59,60,62,250,251,66,67,,,,,249,280,284,89,88,90,91',
',,211,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,',
',,,,,,,,,,,,,,,202,,,206,,,52,,,,,,,,,40,,,,,,,,210,,,,,79,73,75,76',
'77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,250,251',
'66,67,,,,,249,280,284,89,88,90,91,,,211,,,,,,,41,,,93,92,83,50,85,84',
'86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,202,,,206,,,52,,,,,',
',,,40,,,,,,,,210,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,',
'57,58,,53,54,61,,59,60,62,250,251,66,67,,,,,249,280,284,89,88,90,91',
',,211,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,',
',,,,,,,,,,,,,,,202,,,206,,,52,,,,,,,,,40,,,,,,,,210,,,,,79,73,75,76',
'77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,250,251',
'66,67,,,,,249,280,284,89,88,90,91,,,211,,,,,,,41,,,93,92,83,50,85,84',
'86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,202,,,206,,,52,,,,,',
',,,40,,,,,,,,210,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,',
'57,58,,53,54,61,,59,60,62,250,251,66,67,,,,,249,280,284,89,88,90,91',
',,211,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,',
',,,,,,,,,,,,,,,202,,,206,,,52,,,,,,,,,40,,,,,,,,210,,,,,79,73,75,76',
'77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,250,251',
'66,67,,,,,249,280,284,89,88,90,91,,,211,,,,,,,41,,,93,92,83,50,85,84',
'86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,202,,,206,,,52,,,,,',
',,,40,,,,,,,,210,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,',
'57,58,,53,54,61,,59,60,62,250,251,66,67,,,,,249,280,284,89,88,90,91',
',,211,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,',
',,,,,,,,,,,,,,,202,,,206,,,52,,,,,,,,,40,,,,,,,,210,,,,,79,73,75,76',
'77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,250,251',
'66,67,,,,,249,280,284,89,88,90,91,,,211,,,,,,,41,,,93,92,83,50,85,84',
'86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,202,,,206,,,52,,,,,',
',,,40,,,,,,,,210,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,',
'57,58,,53,54,61,,59,60,62,250,251,66,67,,,,,249,280,284,89,88,90,91',
',,211,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,',
',,,,,,,,,,,,,,,202,,,206,,,52,,,,,,,,,40,,,,,,,,210,,,,,79,73,75,76',
'77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,250,251',
'66,67,,,,,249,280,284,89,88,90,91,,,211,,,,,,,41,,,93,92,83,50,85,84',
'86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,202,,,206,,,52,,,,,',
',,,40,,,,,,,,210,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,',
'57,58,,53,54,61,,59,60,62,250,251,66,67,,,,,249,280,284,89,88,90,91',
',,211,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,',
',,,,,,,,,,,,,,,202,,,206,,,52,,,,,,,,,40,,,,,,,,210,,,,,79,73,75,76',
'77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,250,251',
'66,67,,,,,249,280,284,89,88,90,91,,,211,,,,,,,41,,,93,92,83,50,85,84',
'86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,202,,,206,,,52,,,,,',
',,,40,,,,,,,,210,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,',
'57,58,,53,54,61,,59,60,62,250,251,66,67,,,,,249,280,284,89,88,90,91',
',,211,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,',
',,,,,,,,,,,,,,,202,,,206,,,52,,,,,,,,,40,,,,,,,,210,,,,,79,73,75,76',
'77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,250,251',
'66,67,,,,,249,280,284,89,88,90,91,,,211,,,,,,,41,,,93,92,83,50,85,84',
'86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,202,,,206,,,52,,,,,',
',,,40,,,,,,,,210,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,',
'57,58,,53,54,61,,59,60,62,250,251,66,67,,,,,249,280,284,89,88,90,91',
',,211,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,',
',,,,,,,,,,,,,,,202,,,206,,,52,,,,,,,,,40,,,,,,,,210,,,,,79,73,75,76',
'77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,250,251',
'66,67,,,,,249,280,284,89,88,90,91,,,211,,,,,,,41,,,93,92,83,50,85,84',
'86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,202,,,206,,,52,,,,,',
',,,40,,,,,,,,210,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,',
'57,58,,53,54,61,,59,60,62,250,251,66,67,,,,,249,280,284,89,88,90,91',
',,211,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,',
',,,,,,,,,,,,,,,202,,,206,,,52,,,,,,,,,40,,,,,,,,210,,,,,79,73,75,76',
'77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,250,251',
'66,67,,,,,249,280,284,89,88,90,91,,,211,,,,,,,41,,,93,92,83,50,85,84',
'86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,202,,,206,,,52,,,,,',
',,,40,,,,,,,,210,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,7,51,56,',
',57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17',
',,,,,6,41,8,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,',
',,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78',
',,,74,80,,,63,64,65,7,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67',
',,,,22,28,27,89,88,90,91,,,17,,,,,,6,41,8,9,93,92,83,50,85,84,86,87',
'94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40',
',,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,',
'53,54,61,,59,60,62,250,251,66,67,,,,,249,280,284,89,88,90,91,,,211,',
',,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,',
',,,,,,,,202,,,206,,,52,,,,,600,,,,40,,,,,,,,210,,,,,79,73,75,76,77,78',
',,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,250,251,66,67',
',,,,249,280,284,89,88,90,91,,,211,,,,,,,41,,,93,92,83,50,85,84,86,87',
'94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,202,,,206,,,52,,,,,,,,,40',
',,,,,,,210,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58',
',53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,',
'41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,',
',,,202,,,206,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,250,251,66,67,,,,,249',
'280,284,89,88,90,91,,,211,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,202,,,206,,,52,,,,,,,,,40,,,,,,,',
'210,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,250,251,66,67,,,,,249,280,284,89,88,90,91,,,211,,,,,,,41',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,',
'202,,,206,,,52,,,,,,,,,40,,,,,,,,210,,,,,79,73,75,76,77,78,,,,74,80',
',,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,250,251,66,67,,,,,249',
'280,284,89,88,90,91,,,211,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,202,,,206,,,52,,,,,,,,,40,,,,,,,',
'210,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,253,56,63,64,65,7,51,53,54',
',57,58,,,,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,',
',,6,41,8,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,',
',,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,',
',,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,250,251,66,67',
',,,,249,280,284,89,88,90,91,,,211,,,,,,,281,,,93,92,83,50,85,84,538',
'87,94,95,,81,82,,,,285,,,,,,,,,,,,,,,,,,,,539,,,206,,,52,,,,,,,,,,,',
',,,,,,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,250,251,66,67,,,,,249,28,27,89,88,90,91,,,211,,,,,,,41',
',,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,',
'202,,,206,,,52,,,,,248,,246,,40,,,,,,,,210,,,,,79,73,75,76,77,78,,,',
'74,80,,,,,,,253,56,63,64,65,,51,53,54,,57,58,,,,61,,59,60,62,250,251',
'66,67,,,,,249,28,27,89,88,90,91,,,211,,,,,,,41,,,93,92,83,50,85,84,86',
'87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,202,,,206,,,475,,,,,248',
',246,,40,,,,,,,,210,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,253,56,63,64',
'65,,51,53,54,,57,58,,,,61,,59,60,62,250,251,66,67,,,,,249,28,27,89,88',
'90,91,,,211,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37',
',,,,,,,,,,,,,,,,,,,202,,,206,,479,52,,,,,248,,246,,40,,,,,,,,210,,,',
',79,73,75,76,77,78,,,,74,80,,,,,,,253,56,63,64,65,,51,53,54,,57,58,',
',,61,,59,60,62,250,251,66,67,,,,,249,280,284,89,88,90,91,,,211,,,,,',
',41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,',
',,,,202,,,206,,,52,,,,,248,,,,40,,,,,,,,210,,,,,79,73,75,76,77,78,,',
',74,80,,,,,,,253,56,63,64,65,7,51,53,54,,57,58,,,,61,,59,60,62,23,24',
'66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,6,41,8,9,93,92,83,50,85,84',
'86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,270,,,52,,,,,32',
',,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57',
'58,,53,54,61,,59,60,62,250,251,66,67,,,,,249,280,284,89,88,90,91,,,211',
',,,,,,281,,,93,92,83,50,85,84,538,87,94,95,,81,82,,,,285,,,,,,,,,,,',
',,,,,,,,539,,,206,,,52,,,,,,,,,,,,,,,,,,,,,,79,73,75,76,77,78,,,,74',
'80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22',
'28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81',
'82,,38,39,37,,,,,,,,,,,,,,,,,,,,202,,,206,,,52,,,,,,,,,40,,,,,,,,18',
',,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,',
'59,60,62,250,251,66,67,,,,,249,280,284,89,88,90,91,,,211,,,,,,,41,,',
'93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,202',
',,206,,,52,,,,,248,,,,40,,,,,,,,210,,,,,79,73,75,76,77,78,,,,74,80,',
',63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,250,251,66,67,,,,,249,280',
'284,89,88,90,91,,,211,,,,,,,281,,,93,92,83,50,85,84,86,87,94,95,,81',
'82,,,,285,,,,,,,,,,,,,,,,,,,,278,,,206,,,52,,,,,,,,,,,,,,,,,,,,,,79',
'73,75,76,77,78,,,,74,80,,,63,64,65,7,51,56,,,57,58,,53,54,61,,59,60',
'62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,6,41,8,9,93,92,83',
'50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,270,,',
'52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65',
',51,56,,,57,58,,53,54,61,,59,60,62,250,251,66,67,,,,,249,280,284,89',
'88,90,91,,,211,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39',
'37,,,,,,,,,,,,,,,,,,,,202,,,206,,,52,,,,,393,,,,40,,,,,,,,210,,,,,79',
'73,75,76,77,78,,,,74,80,,,63,64,65,7,51,56,,,57,58,,53,54,61,,59,60',
'62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,6,41,8,9,93,92,83',
'50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52',
',,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,7,51',
'56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91',
',,17,,,,,,6,41,8,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,',
',,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76',
'77,78,,,,74,80,,,63,64,65,7,51,56,,,57,58,,53,54,61,,59,60,62,23,24',
'66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,6,41,8,9,93,92,83,50,85,84',
'86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32',
',,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57',
'58,,53,54,61,,59,60,62,250,251,66,67,,,,,249,28,27,89,88,90,91,,,211',
',,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,',
',,,,,,,,,202,,,206,,,52,,,,,600,,246,,40,,,,,,,,210,,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,253,56,63,64,65,,51,53,54,,57,58,,,,61,,59,60,62',
'250,251,66,67,,,,,249,280,284,89,88,90,91,,,211,,,,,,,281,,,93,92,83',
'50,85,84,86,87,94,95,,81,82,,,,285,,,,,,,,,,,,,,,,,,,,652,,,206,,,52',
',,,,,,,,,,,,,,,,,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,7,51,56,',
',57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17',
',,,,,6,41,8,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,',
',,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78',
',,,74,80,,,63,64,65,7,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67',
',,,,22,28,27,89,88,90,91,,,17,,,,,,6,41,8,9,93,92,83,50,85,84,86,87',
'94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40',
',,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,7,51,56,,,57,58',
',53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,6',
'41,8,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,',
',,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74',
'80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,250,251,66,67,,,,,249',
'280,284,89,88,90,91,,,211,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,',
'81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,202,,,206,,,52,,,,,,,,,40,,,,,,,',
'210,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,7,51,56,,,57,58,,53,54',
'61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,6,41,8,9',
'93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36',
',,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63',
'64,65,,51,56,,,57,58,,53,54,61,,59,60,62,250,251,66,67,,,,,249,280,284',
'89,88,90,91,,,211,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38',
'39,37,,,,,,,,,,,,,,,,,,,,202,,,206,,,52,,,,,,,,,40,,,,,,,,210,,,,,79',
'73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62',
'23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,83,50,85',
'84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,202,,,206,,,52,,',
',,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,-257,,74,80,,,,-257,-257,-257',
',56,-257,-257,-257,,-257,53,54,,,,,,,,-257,-257,,,,,,,,-257,-257,,-257',
'-257,-257,-257,-257,,,,,,,,,,,,,,,,,,,,,,-257,-257,-257,-257,-257,-257',
'-257,-257,-257,-257,-257,-257,-257,-257,,,-257,-257,-257,,584,-257,',
',-257,,,-257,,-257,,-257,,-257,,-257,-257,-257,-257,-257,-257,-257,',
'-257,,-257,,,,,,,,,,,,,-257,-257,-257,-257,,-257,,63,64,65,-83,51,-257',
',,57,58,,,,61,,59,60,62,250,251,66,67,,,,,249,280,284,89,88,90,91,,',
'211,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,',
',,,,,,,,,,,,,202,,,206,499,,52,,,,,,,,,40,,,,,,,,210,,,,,79,73,75,76',
'77,78,,,,74,80,,,63,64,65,7,51,56,,,57,58,,53,54,61,,59,60,62,23,24',
'66,67,,,,,22,28,27,89,88,90,91,,,17,,,,,,6,41,8,9,93,92,83,50,85,84',
'86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32',
',,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57',
'58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,17,,,',
',,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,',
',,,,,,202,,,206,,,52,,,,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,-478',
',74,80,,,,-478,-478,-478,,56,-478,-478,-478,,-478,53,54,,,,,,,-478,-478',
'-478,,,,,,,,-478,-478,,-478,-478,-478,-478,-478,,,,,,,,,,,,,,,,,,,,',
',-478,-478,-478,-478,-478,-478,-478,-478,-478,-478,-478,-478,-478,-478',
',,-478,-478,-478,,708,-478,,,-478,,,-478,,-478,,-478,,-478,,-478,-478',
'-478,-478,-478,-478,-478,,-478,-478,-478,,,,,,,,,,,,,-478,-478,-478',
'-478,,-478,,63,64,65,-81,51,-478,,,57,58,,,,61,,59,60,62,250,251,66',
'67,,,,,249,280,284,89,88,90,91,,,211,,,,,,,41,,,93,92,83,50,85,84,86',
'87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,202,,,206,,,52,,,,,,,,',
'40,,,,,,,,210,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57',
'58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,211,,',
',,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,',
',,,,,,,202,,,206,,,52,,,,,,,,,40,,,,,,,,210,,,,,79,73,75,76,77,78,,',
',74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,',
',22,28,27,89,88,90,91,,,211,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95',
',81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,202,,,206,,,52,,,,,,,,,40,,,,,,',
',210,,,,,79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54',
'61,,59,60,62,23,24,66,67,,,,,22,28,27,89,88,90,91,,,211,,,,,,,41,,,93',
'92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,202,',
',206,,,52,,,,,,,,,40,,,,,,,,210,,,,,79,73,75,76,77,78,,,,74,80,,,63',
'64,65,,51,56,,,57,58,,53,54,61,,59,60,62,250,251,66,67,,,,,249,280,284',
'89,88,90,91,,,211,,,,,,,41,,,93,92,83,50,85,84,86,87,94,95,,81,82,,38',
'39,37,,,,,,,,,,,,,,,,,,,,202,,,206,,,52,,,,,695,,,,40,,,,,,,,210,,,',
',79,73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59',
'60,62,250,251,66,67,,,,,249,280,284,89,88,90,91,,,211,,,,,,,41,,,93',
'92,83,50,85,84,86,87,94,95,,81,82,,38,39,37,,,,,,,,,,,,,,,,,,,,202,',
',206,,,52,,,,,,,,,40,,,,,,,,210,,,,,79,73,75,76,77,78,,,,74,80,,,63',
'64,65,7,51,56,,,57,58,,53,54,61,,59,60,62,23,24,66,67,,,,,22,28,27,89',
'88,90,91,,,17,,,,,,6,41,8,9,93,92,83,50,85,84,86,87,94,95,,81,82,,38',
'39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,,,32,,,,40,,,,,,,,18,,,,,79',
'73,75,76,77,78,,,,74,80,,,63,64,65,,51,56,,,57,58,,53,54,61,,59,60,62',
'250,251,66,67,,,,,249,280,284,89,88,90,91,,,211,,,,,,,281,,,93,92,83',
'50,85,84,86,87,94,95,,81,82,,,-494,285,,,,,,-494,-494,-494,,,-494,-494',
'-494,,-494,,,,,278,,,275,,-494,52,,,,,274,,,-494,-494,,-494,-494,-494',
'-494,-494,,,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,,56,,,,,,53,54,-494',
',-494,,,,,-494,,-494,-494,-494,259,-494,-494,-494,-494,,-494,,,,,,,',
',,-494,,,,,,-494,,,-494,-494,,-494,-494,-494,-494,-494,,,-494,,-494',
',,-494,,,,,,,,,,,,,,,,,,,,,,,,,-494,,,,,,,-494,,,,,259,-494,,,,,,,,',
',,,,,,,,,,,,-494,,,,,,,,,,,,,-494,,-494,,,-494,153,164,154,177,150,170',
'160,159,,,175,158,157,152,178,,,162,151,165,169,171,163,156,,,172,179',
'174,173,166,176,161,149,168,167,180,181,182,183,184,148,155,146,147',
'144,145,109,111,,,110,,,,,,,,137,138,,135,119,120,121,143,124,126,,',
'122,,,,,139,140,127,128,,,,,,,,,,,,,132,131,,118,136,134,133,129,130',
'125,123,116,142,117,,,141,185,153,164,154,177,150,170,160,159,,80,175',
'158,157,152,178,,,162,151,165,169,171,163,156,,,172,179,174,173,166',
'176,161,149,168,167,180,181,182,183,184,148,155,146,147,144,145,109',
'111,,,110,,,,,,,,137,138,,135,119,120,121,143,124,126,,,122,,,,,139',
'140,127,128,,,,,,,,,,,,,132,131,,118,136,134,133,129,130,125,123,116',
'142,117,,,141,185,153,164,154,177,150,170,160,159,,80,175,158,157,152',
'178,,,162,151,165,169,171,163,156,,,172,179,174,173,166,176,161,149',
'168,167,180,181,182,183,184,148,155,146,147,144,145,109,111,108,,110',
',,,,,,,137,138,,135,119,120,121,143,124,126,,,122,,,,,139,140,127,128',
',,,,,,,,,,,,132,131,,118,136,134,133,129,130,125,123,116,142,117,,,141',
'185,153,164,154,177,150,170,160,159,,80,175,158,157,152,178,,,162,151',
'165,169,171,163,156,,,172,179,174,173,166,176,161,149,168,167,180,181',
'182,183,184,148,155,146,147,144,145,109,111,,,110,,,,,,,,137,138,,135',
'119,120,121,143,124,126,,,122,,,,,139,140,127,128,,,,,,,,,,,,,132,131',
',118,136,134,133,129,130,125,123,116,142,117,,,141,185,153,164,154,177',
'150,170,160,159,,80,175,158,157,152,178,,,162,151,165,169,171,163,156',
',,172,179,174,173,166,176,161,149,168,167,180,181,182,183,184,148,155',
'146,147,144,145,109,111,372,371,110,373,,,,,,,137,138,,135,119,120,121',
'143,124,126,,,122,,,,,139,140,127,128,,,,,,,,,,,,,132,131,,118,136,134',
'133,129,130,125,123,116,142,117,,,141,153,164,154,177,150,170,160,159',
',,175,158,157,152,178,,,162,151,165,169,171,163,156,,,172,179,174,349',
'348,350,347,149,168,167,180,181,182,183,184,148,155,146,147,345,346',
'343,111,85,84,344,87,,,,,,,137,138,,135,119,120,121,143,124,126,,,122',
',,,,139,140,127,128,,,,,,355,,,,,,,132,131,,118,136,134,133,129,130',
'125,123,116,142,117,,,141,153,164,154,177,150,170,160,159,,,175,158',
'157,152,178,,,162,151,165,169,171,163,156,,,172,179,174,173,166,176',
'161,149,168,167,180,181,182,183,184,148,155,146,147,144,145,109,111',
'372,371,110,373,,,,,,,137,138,,135,119,120,121,143,124,126,,,122,,,',
',139,140,127,128,,,,,,,,,,,,,132,131,,118,136,134,133,129,130,125,123',
'116,142,117,,,141,153,164,154,177,150,170,160,159,,,175,158,157,152',
'178,,,162,151,165,169,171,163,156,,,172,179,174,173,166,176,161,149',
'168,167,180,181,182,183,184,148,155,146,147,144,145,109,111,,,110,,',
',,,,,137,138,,135,119,120,121,143,124,126,,,122,,,,,139,140,127,128',
',,,,,,,,,,,,132,131,,118,136,134,133,129,130,125,123,116,142,117,463',
'405,141,,464,,,,,,,,137,138,,135,119,120,121,143,124,126,,,122,,,,,139',
'140,127,128,,,,,,259,,,,,,,132,131,,118,136,134,133,129,130,125,123',
'116,142,117,463,405,141,,464,,,,,,,,137,138,,135,119,120,121,143,124',
'126,,,122,,,,,139,140,127,128,,,,,,,,,,,,,132,131,,118,136,134,133,129',
'130,125,123,116,142,117,585,405,141,,586,,,,,,,,137,138,,135,119,120',
'121,143,124,126,,,122,,,,,139,140,127,128,,,,,,259,,,,,,,132,131,,118',
'136,134,133,129,130,125,123,116,142,117,463,405,141,,464,,,,,,,,137',
'138,,135,119,120,121,143,124,126,,,122,,,,,139,140,127,128,,,,,,,,,',
',,,132,131,,118,136,134,133,129,130,125,123,116,142,117,587,411,141',
',588,,,,,,,,137,138,,135,119,120,121,143,124,126,,,122,,,,,139,140,127',
'128,,,,,,,,,,,,,132,131,,118,136,134,133,129,130,125,123,116,142,117',
'756,411,141,,754,,,,,,,,137,138,,135,119,120,121,143,124,126,,,122,',
',,,139,140,127,128,,,,,,,,,,,,,132,131,,118,136,134,133,129,130,125',
'123,116,142,117,407,411,141,,409,,,,,,,,137,138,,135,119,120,121,143',
'124,126,,,122,,,,,139,140,127,128,,,,,,,,,,,,,132,131,,118,136,134,133',
'129,130,125,123,116,142,117,401,405,141,,402,,,,,,,,137,138,,135,119',
'120,121,143,124,126,,,122,,,,,139,140,127,128,,,,,,259,,,,,,,132,131',
',118,136,134,133,129,130,125,123,116,142,117,587,411,141,,588,,,,,,',
',137,138,,135,119,120,121,143,124,126,,,122,,,,,139,140,127,128,,,,',
',,,,,,,,132,131,,118,136,134,133,129,130,125,123,116,142,117,862,405',
'141,,863,,,,,,,,137,138,,135,119,120,121,143,124,126,,,122,,,,,139,140',
'127,128,,,,,,259,,,,,,,132,131,,118,136,134,133,129,130,125,123,116',
'142,117,864,411,141,,865,,,,,,,,137,138,,135,119,120,121,143,124,126',
',,122,,,,,139,140,127,128,,,,,,,,,,,,,132,131,,118,136,134,133,129,130',
'125,123,116,142,117,626,405,141,,627,,,,,,,,137,138,,135,119,120,121',
'143,124,126,,,122,,,,,139,140,127,128,,,,,,259,,,,,,,132,131,,118,136',
'134,133,129,130,125,123,116,142,117,463,405,141,,464,,,,,,,,137,138',
',135,119,120,121,143,124,126,,,122,,,,,139,140,127,128,,,,,,,,,,,,,132',
'131,,118,136,134,133,129,130,125,123,116,142,117,629,411,141,,630,,',
',,,,,137,138,,135,119,120,121,143,124,126,,,122,,,,,139,140,127,128',
',,,,,,,,,,,,132,131,,118,136,134,133,129,130,125,123,116,142,117,756',
'411,141,,799,,,,,,,,137,138,,135,119,120,121,143,124,126,,,122,,,,,139',
'140,127,128,,,,,,,,,,,,,132,131,,118,136,134,133,129,130,125,123,116',
'142,117,585,405,141,,586,,,,,,,,137,138,,135,119,120,121,143,124,126',
',,122,,,,,139,140,127,128,,,,,,259,,,,,,,132,131,,118,136,134,133,129',
'130,125,123,116,142,117,463,405,141,,464,,,,,,,,137,138,,135,119,120',
'121,143,124,126,,,122,,,,,139,140,127,128,,,,,,,,,,,,,132,131,,118,136',
'134,133,129,130,125,123,116,142,117,,,141' ]
        racc_action_table = arr = ::Array.new(21438, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'0,0,0,0,0,332,298,298,0,0,675,675,55,0,366,0,0,0,0,0,0,0,574,538,635',
'635,0,0,0,0,0,0,0,466,543,0,424,424,550,550,201,0,0,0,0,0,0,0,0,0,0',
'0,0,0,0,709,0,0,816,0,0,0,851,574,626,531,466,3,586,851,574,71,3,538',
'331,862,366,635,759,71,538,0,752,759,0,538,863,0,201,424,864,623,0,298',
'26,55,0,675,795,420,13,626,675,709,0,834,538,13,626,0,0,0,0,0,0,332',
'586,332,0,0,332,851,419,419,419,550,419,0,623,532,419,419,538,0,0,419',
'543,419,419,419,419,419,419,419,625,282,753,420,419,419,419,419,419',
'419,419,543,26,419,619,13,543,531,368,531,419,864,531,419,419,419,419',
'419,419,419,419,419,419,26,419,419,616,419,419,419,331,862,331,862,452',
'331,862,203,752,628,752,752,863,752,863,280,864,863,864,419,477,864',
'419,282,795,419,795,281,402,795,419,834,35,834,419,631,834,452,368,368',
'368,532,419,532,282,476,532,419,419,419,419,419,419,477,284,203,419',
'419,753,14,753,401,585,753,419,419,421,421,421,402,421,419,419,35,421',
'421,402,633,476,421,35,421,421,421,421,421,421,421,561,837,634,837,421',
'421,421,421,421,421,421,679,14,421,401,336,679,336,590,14,421,401,585',
'421,421,421,421,421,421,421,421,421,421,363,421,421,611,421,421,421',
'590,590,590,590,590,590,590,590,590,590,590,831,590,590,285,285,590',
'590,831,421,561,561,421,359,636,421,288,674,610,561,641,590,674,590',
'421,590,590,590,590,590,590,590,421,590,522,522,642,421,421,421,421',
'421,421,363,363,363,421,421,644,590,412,412,412,428,412,421,645,288',
'412,412,831,421,421,412,288,412,412,412,412,412,412,412,648,359,359',
'359,412,412,412,412,412,412,412,650,428,412,627,346,428,428,391,602',
'412,652,346,412,412,412,412,412,412,412,412,412,412,357,412,412,599',
'412,412,412,391,391,391,391,391,391,391,391,391,391,391,627,391,391',
'15,15,391,391,627,412,348,829,412,412,335,412,655,348,829,335,412,391',
'412,391,412,391,391,391,391,391,391,391,412,391,37,37,661,412,412,412',
'412,412,412,357,357,357,412,412,842,391,303,391,828,303,412,412,411',
'411,411,828,411,412,412,361,411,411,361,653,653,411,829,411,411,411',
'411,411,411,411,330,330,629,629,411,411,411,411,411,411,411,663,42,411',
'727,842,842,842,842,42,411,727,273,411,411,411,411,411,411,411,411,411',
'411,828,411,411,352,411,411,411,629,272,754,352,865,361,361,629,200',
'754,666,865,866,866,754,200,865,666,597,411,651,276,411,411,271,411',
'306,651,276,306,411,42,411,727,411,108,277,279,291,108,108,269,411,277',
'279,291,409,411,411,411,411,411,411,409,409,409,411,411,738,409,409',
'754,409,865,411,411,630,200,347,666,541,411,411,630,258,347,489,541',
'630,651,276,409,409,489,409,409,409,409,409,309,309,768,350,870,25,277',
'279,291,247,350,870,25,345,738,738,738,738,289,244,345,409,409,409,409',
'409,409,409,409,409,409,409,409,409,409,344,630,409,409,409,541,409',
'344,243,343,409,489,768,768,768,768,343,409,290,409,589,409,409,409',
'409,409,409,409,870,409,293,409,429,349,594,680,594,594,594,594,349',
'681,682,300,409,409,300,409,678,409,678,678,678,678,409,684,409,852',
'852,852,852,852,211,429,687,852,852,429,429,582,852,205,852,852,852',
'852,852,852,852,594,594,594,594,852,852,852,852,852,852,852,594,302',
'852,678,678,678,678,694,852,852,852,852,852,852,852,852,852,852,852',
'852,852,852,301,852,852,301,852,852,852,414,414,414,414,414,414,414',
'414,414,414,414,721,414,414,204,577,414,414,721,852,470,304,852,572',
'565,852,313,470,202,314,852,414,315,414,852,414,414,414,414,414,414',
'414,852,414,539,433,712,852,852,852,852,852,852,519,713,716,852,852',
'721,414,422,422,422,719,422,852,720,470,422,422,318,852,852,422,722',
'422,422,422,422,422,422,422,186,725,726,432,422,422,422,422,422,422',
'422,729,326,422,732,733,519,519,519,519,422,534,96,422,422,422,422,422',
'422,422,422,422,422,744,422,422,747,422,422,422,19,19,19,19,19,19,19',
'19,19,19,19,78,19,19,77,533,19,19,63,422,329,756,422,688,688,422,688',
'688,688,757,527,19,337,19,422,19,19,19,19,19,19,19,422,19,447,762,763',
'422,422,422,422,422,422,407,764,515,422,422,338,19,407,407,407,502,779',
'422,407,407,780,407,431,422,422,448,430,447,787,788,407,447,447,447',
'447,5,5,5,5,5,407,407,41,407,407,407,407,407,501,36,546,798,546,546',
'546,546,448,799,500,803,448,448,448,448,375,375,375,375,375,407,407',
'407,407,407,407,407,407,407,407,407,407,407,407,804,34,407,407,407,546',
'407,490,809,20,407,814,546,546,546,546,815,407,278,407,817,407,407,407',
'407,407,407,407,818,407,407,407,362,365,485,481,480,830,478,387,472',
'471,840,469,407,407,12,407,847,407,11,848,848,848,407,848,407,10,9,848',
'848,468,8,856,848,858,848,848,848,848,848,848,848,859,861,388,394,848',
'848,848,848,848,848,848,1,408,848,396,400,,,,,848,,,848,848,848,848',
'848,848,848,848,848,848,,848,848,,848,848,848,615,615,615,615,615,615',
'615,615,615,615,615,,615,615,,,615,615,,848,,,848,,,848,,,,,848,615',
',615,848,615,615,615,615,615,615,615,848,615,,,,848,848,848,848,848',
'848,,,,848,848,,615,,615,,,848,848,846,846,846,846,846,848,848,,846',
'846,,,,846,,846,846,846,846,846,846,846,,,,,846,846,846,846,846,846',
'846,,,846,,,,,,846,846,846,846,846,846,846,846,846,846,846,846,846,846',
',846,846,,846,846,846,782,782,782,782,782,782,782,782,782,782,782,,782',
'782,,,782,782,,846,,,846,,,846,,,,,846,782,,782,846,782,782,782,782',
'782,782,782,846,782,,,,846,846,846,846,846,846,,,,846,846,,782,838,838',
'838,838,838,846,,,838,838,,846,846,838,,838,838,838,838,838,838,838',
',,,,838,838,838,838,838,838,838,,,838,,,,,,838,838,838,838,838,838,838',
'838,838,838,838,838,838,838,,838,838,,838,838,838,451,451,451,451,451',
'451,451,451,451,451,451,,451,451,,,451,451,,838,,,838,,,838,,,,,838',
'451,,451,838,451,451,451,451,451,451,451,838,451,,,,838,838,838,838',
'838,838,,403,,838,838,,451,451,403,403,403,,838,403,403,403,,403,838',
'838,,,,,,,403,403,403,,,,,,,,403,403,,403,403,403,403,403,,62,,62,62',
'62,62,,,,,,,,,,,,,,,403,403,403,403,403,403,403,403,403,403,403,403',
'403,403,,,403,403,403,,,403,,403,403,62,62,62,62,403,,403,,403,,403',
'403,403,403,403,403,403,,403,403,403,,,,,,,,,,,,,403,403,403,403,,403',
'827,827,827,827,827,,403,,827,827,,,,827,,827,827,827,827,827,827,827',
',,,,827,827,827,827,827,827,827,,,827,,,,,,827,827,827,827,827,827,827',
'827,827,827,827,827,827,827,,827,827,,827,827,827,710,710,710,710,710',
'710,710,710,710,710,710,,710,710,,,710,710,,827,,,827,,,827,,,,,827',
'710,,710,827,710,710,710,710,710,710,710,827,710,,,,827,827,827,827',
'827,827,,,,827,827,,710,17,17,17,,17,827,,,17,17,,827,827,17,,17,17',
'17,17,17,17,17,,,,,17,17,17,17,17,17,17,,,17,,,,,,,17,,,17,17,17,17',
'17,17,17,17,17,17,,17,17,,17,17,17,705,705,705,705,705,705,705,705,705',
'705,705,,705,705,,,705,705,,17,,,17,17,,17,,,,,,705,,705,17,705,705',
'705,705,705,705,705,17,705,,,,17,17,17,17,17,17,,,,17,17,,705,18,18',
'18,,18,17,,,18,18,,17,17,18,,18,18,18,18,18,18,18,,,,,18,18,18,18,18',
'18,18,,,18,,,,,,,18,,,18,18,18,18,18,18,18,18,18,18,,18,18,,18,18,18',
'703,703,703,703,703,703,703,703,703,703,703,,703,703,,,703,703,,18,',
',18,,,18,,,,,,703,,703,18,703,703,703,703,703,703,703,18,703,,,,18,18',
'18,18,18,18,,,,18,18,,703,825,825,825,,825,18,,,825,825,,18,18,825,',
'825,825,825,825,825,825,825,,,,,825,825,825,825,825,825,825,,,825,,',
',,,,825,,,825,825,825,825,825,825,825,825,825,825,,825,825,,825,825',
'825,700,700,700,700,700,700,700,700,700,700,700,,700,700,,,700,700,',
'825,,,825,,,825,,,,,825,700,825,700,825,700,700,700,700,700,700,700',
'825,700,,,,825,825,825,825,825,825,,,,825,825,,700,811,811,811,811,811',
'825,,,811,811,,825,825,811,,811,811,811,811,811,811,811,,,,,811,811',
'811,811,811,811,811,,,811,,,,,,811,811,811,811,811,811,811,811,811,811',
'811,811,811,811,,811,811,,811,811,811,698,698,698,698,698,698,698,698',
'698,698,698,,698,698,,,698,698,,811,,,811,,,811,,,,,811,698,,698,811',
'698,698,698,698,698,698,698,811,698,,,,811,811,811,811,811,811,,,,811',
'811,,698,22,22,22,,22,811,,,22,22,,811,811,22,,22,22,22,22,22,22,22',
',,,,22,22,22,22,22,22,22,,,22,,,,,,,22,,,22,22,22,22,22,22,22,22,22',
'22,,22,22,,22,22,22,693,693,693,693,693,693,693,693,693,693,693,,693',
'693,,,693,693,,22,,,22,,,22,,,,,22,693,22,693,22,693,693,693,693,693',
'693,693,22,693,,,,22,22,22,22,22,22,,,,22,22,517,693,517,517,517,517',
'22,22,23,23,23,,23,22,22,,23,23,,,,23,,23,23,23,23,23,23,23,,,,,23,23',
'23,23,23,23,23,,,23,,517,517,517,517,,23,,,23,23,23,23,23,23,23,23,23',
'23,,23,23,,23,23,23,241,241,241,241,241,241,241,241,241,241,241,,241',
'241,,,241,241,,23,,,23,,,23,,,,,23,241,23,241,23,241,241,241,241,241',
'241,241,23,241,,,,23,23,23,23,23,23,,,,23,23,766,241,766,766,766,766',
'23,23,24,24,24,,24,23,23,,24,24,,,,24,,24,24,24,24,24,24,24,,,,,24,24',
'24,24,24,24,24,,,24,,766,766,766,766,,24,,,24,24,24,24,24,24,24,24,24',
'24,,24,24,,24,24,24,632,632,632,632,632,632,632,632,632,632,632,,632',
'632,,,632,632,,24,,,24,,,24,,,,,24,632,24,632,24,632,632,632,632,632',
'632,632,24,632,,,,24,24,24,24,24,24,,,,24,24,,632,,,,,24,24,806,806',
'806,806,806,24,24,,806,806,,,,806,,806,806,806,806,806,806,806,,,,,806',
'806,806,806,806,806,806,,,806,,,,,,806,806,806,806,806,806,806,806,806',
'806,806,806,806,806,,806,806,,806,806,806,399,399,399,399,399,399,399',
'399,399,399,399,,399,399,,,399,399,,806,,,806,,,806,,,,,806,399,,399',
'806,399,399,399,399,399,399,399,806,399,,,,806,806,806,806,806,806,',
',,806,806,,399,423,423,423,,423,806,,,423,423,,806,806,423,,423,423',
'423,423,423,423,423,,,,,423,423,423,423,423,423,423,,,423,,,,,,,423',
',,423,423,423,423,423,423,423,423,423,423,,423,423,,423,423,423,498',
'498,498,498,498,498,498,498,498,498,498,,498,498,,,498,498,,423,,,423',
',,423,,,,,,498,,498,423,498,498,498,498,498,498,498,423,498,,,,423,423',
'423,423,423,423,,27,,423,423,,498,,27,27,27,,423,27,27,27,,27,423,423',
',,,,,,27,27,27,,,,,,,,27,27,,27,27,27,27,27,,310,,310,310,310,310,,',
',,,,,,,,,,,,27,27,27,27,27,27,27,27,27,27,27,27,27,27,,,27,27,27,310',
',27,,27,27,310,310,310,310,27,,27,,27,,27,27,27,27,27,27,27,,27,27,27',
',821,,821,821,821,821,,,,,,27,27,27,27,,27,28,,,,,,27,28,28,28,,,28',
'28,28,56,28,56,56,56,56,821,,,,,28,28,821,821,821,821,,,,28,28,,28,28',
'28,28,28,,,,,,,,,,,56,,,,,,,56,56,56,56,28,28,28,28,28,28,28,28,28,28',
'28,28,28,28,,,28,28,28,,,28,,28,28,,,,,28,,28,,28,,28,28,28,28,28,28',
'28,,28,,28,,,,,,,,,,,,,28,28,28,28,,28,30,30,30,30,30,,28,,30,30,,,',
'30,,30,30,30,30,30,30,30,,,,,30,30,30,30,30,30,30,,,30,,,,,,30,30,30',
'30,30,30,30,30,30,30,30,30,30,30,,30,30,,30,30,30,446,446,446,446,446',
'446,446,,,446,446,,,,,,446,446,,30,,,30,,,30,,,,,30,446,,446,30,446',
'446,446,446,446,446,446,30,446,,,,30,30,30,30,30,30,,,,30,30,,,544,544',
'544,,544,30,,,544,544,,30,30,544,,544,544,544,544,544,544,544,,,,,544',
'544,544,544,544,544,544,,,544,,,,,,,544,,,544,544,544,544,544,544,544',
'544,544,544,,544,544,,544,544,544,440,,,,,,,,,,,,,,,,440,440,,544,,',
'544,,,544,,,,,,440,,440,544,440,440,440,440,,,440,544,440,,,,544,544',
'544,544,544,544,,,,544,544,,,32,32,32,,32,544,,,32,32,,544,544,32,,32',
'32,32,32,32,32,32,,,,,32,32,32,32,32,32,32,,,32,,,,,,,32,,,32,32,32',
'32,32,32,32,32,32,32,,32,32,,,,32,426,426,426,426,426,426,426,426,426',
'426,426,,426,426,,,426,426,,32,,,32,,,32,,,,,,426,,426,,426,426,426',
'426,426,426,426,,426,,,,32,32,32,32,32,32,,,,32,32,,,805,805,805,,805',
'32,,,805,805,,32,32,805,,805,805,805,805,805,805,805,,,,,805,805,805',
'805,805,805,805,,,805,,,,,,,805,,,805,805,805,805,805,805,805,805,805',
'805,,805,805,,805,805,805,441,,,,,,,,,,,,,,,,441,441,,805,,,805,,,805',
',,,,805,441,,441,805,441,441,441,441,,,441,805,441,,,,805,805,805,805',
'805,805,,,,805,805,,,801,801,801,,801,805,,,801,801,,805,805,801,,801',
'801,801,801,801,801,801,,,,,801,801,801,801,801,801,801,,,801,,,,,,',
'801,,,801,801,801,801,801,801,801,801,801,801,,801,801,,801,801,801',
'442,442,442,442,442,442,442,,,442,442,,,,,,442,442,,801,,,801,,,801',
',,,,,442,,442,801,442,442,442,442,442,442,442,801,442,,,,801,801,801',
'801,801,801,,,,801,801,,,796,796,796,,796,801,,,796,796,,801,801,796',
',796,796,796,796,796,796,796,,,,,796,796,796,796,796,796,796,,,796,',
',,,,,796,,,796,796,796,796,796,796,796,796,796,796,,796,796,,,,796,443',
'443,443,443,443,443,443,,,443,443,,,,,,443,443,,796,,,796,,,796,,,,',
',443,,443,,443,443,443,443,443,443,443,,443,,,,796,796,796,796,796,796',
',,,796,796,,,454,454,454,,454,796,,,454,454,,796,796,454,,454,454,454',
'454,454,454,454,,,,,454,454,454,454,454,454,454,,,454,,,,,,,454,,,454',
'454,454,454,454,454,454,454,454,454,,454,454,,454,454,454,444,444,444',
'444,444,444,444,,,444,444,,,,,,444,444,,454,,,454,,,454,,,,,454,444',
'454,444,454,444,444,444,444,444,444,444,454,444,,,,454,454,454,454,454',
'454,,,,454,454,,,,,,,454,454,38,38,38,,38,454,454,,38,38,,,,38,,38,38',
'38,38,38,38,38,,,,,38,38,38,38,38,38,38,,,38,,,,,,,38,,,38,38,38,38',
'38,38,38,38,38,38,,38,38,,38,38,38,427,427,427,427,427,427,427,427,427',
'427,427,,427,427,,,427,427,,38,,,38,,,38,,,,,,427,,427,38,427,427,427',
'427,427,427,427,38,427,,,,38,38,38,38,38,38,,,,38,38,,,39,39,39,,39',
'38,,,39,39,,38,38,39,,39,39,39,39,39,39,39,,,,,39,39,39,39,39,39,39',
',,39,,,,,,,39,,,39,39,39,39,39,39,39,39,39,39,,39,39,,39,39,39,449,449',
'449,449,449,449,449,,,449,449,,,,,,449,449,,39,,,39,,,39,,,,,,449,,449',
'39,449,449,449,449,449,449,449,39,449,,,,39,39,39,39,39,39,,,,39,39',
',,40,40,40,,40,39,,,40,40,,39,39,40,,40,40,40,40,40,40,40,,,,,40,40',
'40,40,40,40,40,,,40,,,,,,,40,,,40,40,40,40,40,40,40,40,40,40,,40,40',
',40,40,40,450,450,450,450,450,450,450,450,,450,450,,,,,,450,450,,40',
',,40,,,40,,,,,,450,,450,40,450,450,450,450,450,450,450,40,450,,,,40',
'40,40,40,40,40,,,,40,40,,,792,792,792,792,792,40,,,792,792,,40,40,792',
',792,792,792,792,792,792,792,,,,,792,792,792,792,792,792,792,,,792,',
',,,,792,792,792,792,792,792,792,792,792,792,792,792,792,792,,792,792',
',792,792,792,437,437,437,437,437,437,437,,,437,437,,,,,,437,437,,792',
',,792,,,792,,,,,792,437,,437,792,437,437,437,437,437,437,437,792,437',
',,,792,792,792,792,792,792,,,,792,792,,,783,783,783,,783,792,,,783,783',
',792,792,783,,783,783,783,783,783,783,783,,,,,783,783,783,783,783,783',
'783,,,783,,,,,,,783,,,783,783,783,783,783,783,783,783,783,783,,783,783',
',783,783,783,445,445,445,445,445,445,445,,,445,445,,,,,,445,445,,783',
',,783,,,783,,,,,,445,,445,783,445,445,445,445,445,445,445,783,445,,',
',783,783,783,783,783,783,,50,,783,783,,,,50,50,50,,783,50,50,50,438',
'50,783,783,,,,,,50,,50,50,,,,438,438,,,50,50,,50,50,50,50,50,,,,438',
',438,,438,438,438,438,,,438,,438,,,,,,50,50,50,50,50,50,50,50,50,50',
'50,50,50,50,,,50,50,50,,,50,,,50,,,50,,50,,50,,50,,50,50,50,50,50,50',
'50,,50,,50,,,,,,,,,,,,,50,50,50,50,,50,,,50,50,,,50,52,52,52,,52,,,',
'52,52,,,,52,,52,52,52,52,52,52,52,,,,,52,52,52,52,52,52,52,,,52,,,,',
',,52,,,52,52,52,52,52,52,52,52,52,52,,52,52,,52,52,52,439,,,,,,,,,,',
',,,,,439,439,,52,,,52,,,52,,,,,,439,,439,52,439,439,439,439,,,439,52',
'439,,,,52,52,52,52,52,52,,,,52,52,,,53,53,53,,53,52,,,53,53,,52,52,53',
',53,53,53,53,53,53,53,,,,,53,53,53,53,53,53,53,,,53,,,,,,,53,,,53,53',
'53,53,53,53,53,53,53,53,,53,53,,53,53,53,435,,,,,,,,,,,,,,,,435,435',
',53,,,53,436,,53,,,,,53,435,,435,53,435,435,435,435,436,436,,53,,,,',
'53,53,53,53,53,53,,436,,53,53,436,436,436,436,,,53,53,54,54,54,,54,53',
'53,,54,54,,,,54,,54,54,54,54,54,54,54,,,,,54,54,54,54,54,54,54,,,54',
',,,,,,54,,,54,54,54,54,54,54,54,54,54,54,,54,54,,54,54,54,434,,,,,,',
',,,,,,,,,434,434,,54,,,54,,,54,,,,,54,434,,434,54,434,434,434,434,,',
',54,,,,,54,54,54,54,54,54,,,,54,54,,,,,,,54,54,457,457,457,,457,54,54',
',457,457,,,,457,,457,457,457,457,457,457,457,,,,,457,457,457,457,457',
'457,457,,,457,,,,,,,457,,,457,457,457,457,457,457,457,457,457,457,,457',
'457,,457,457,457,,,,,,,,,,,,,,,,,,,,457,,,457,,,457,,,,,,,457,,457,',
',,,,,,457,,,,,457,457,457,457,457,457,,,,457,457,,,,,,,457,457,771,771',
'771,,771,457,457,,771,771,,,,771,,771,771,771,771,771,771,771,,,,,771',
'771,771,771,771,771,771,,,771,,,,,,,771,,,771,771,771,771,771,771,771',
'771,771,771,,771,771,,771,771,771,,,,,,,,,,,,,,,,,,,,771,,,771,,,771',
',,,,,,,,771,,,,,,,,771,,,,,771,771,771,771,771,771,,,,771,771,,,57,57',
'57,,57,771,,,57,57,,771,771,57,,57,57,57,57,57,57,57,,,,,57,57,57,57',
'57,57,57,,,57,,,,,,,57,,,57,57,57,57,57,57,57,57,57,57,,57,57,,57,57',
'57,,,,,,,,,,,,,,,,,,,,57,,,57,,,57,,,,,,,,,57,,,,,,,,57,,,,,57,57,57',
'57,57,57,,,,57,57,,,58,58,58,,58,57,,,58,58,,57,57,58,,58,58,58,58,58',
'58,58,,,,,58,58,58,58,58,58,58,,,58,,,,,,,58,,,58,58,58,58,58,58,58',
'58,58,58,,58,58,,58,58,58,,,,,,,,,,,,,,,,,,,,58,,,58,,,58,,,,,,,,,58',
',,,,,,,58,,,,,58,58,58,58,58,58,,,,58,58,,,61,61,61,,61,58,,,61,61,',
'58,58,61,,61,61,61,61,61,61,61,,,,,61,61,61,61,61,61,61,,,61,,,,,,,61',
',,61,61,61,61,61,61,61,61,61,61,,61,61,,61,61,61,,,,,,,,,,,,,,,,,,,',
'61,,,61,,,61,,,,,,,,,61,,,,,,,,61,,,,,61,61,61,61,61,61,,,,61,61,61',
',,,,61,,61,758,758,758,758,758,61,61,,758,758,,,,758,,758,758,758,758',
'758,758,758,,,,,758,758,758,758,758,758,758,,,758,,,,,,758,758,758,758',
'758,758,758,758,758,758,758,758,758,758,,758,758,,758,758,758,,,,,,',
',,,,,,,,,,,,,758,,,758,,,758,,,,,758,,,,758,,,,,,,,758,,,,,758,758,758',
'758,758,758,,,,758,758,,,459,459,459,,459,758,,,459,459,,758,758,459',
',459,459,459,459,459,459,459,,,,,459,459,459,459,459,459,459,,,459,',
',,,,,459,,,459,459,459,459,459,459,459,459,459,459,,459,459,,459,459',
'459,,,,,,,,,,,,,,,,,,,,459,,,459,,,459,,,,,,,,,459,,,,,,,,459,,,,,459',
'459,459,459,459,459,,,,459,459,,,393,393,393,,393,459,,,393,393,,459',
'459,393,,393,393,393,393,393,393,393,,,,,393,393,393,393,393,393,393',
',,393,,,,,,,393,,,393,393,393,393,393,393,393,393,393,393,,393,393,',
'393,393,393,,,,,,,,,,,,,,,,,,,,393,,,393,,,393,,,,,,,,,393,,,,,,,,393',
',,,,393,393,393,393,393,393,,,,393,393,,,475,475,475,,475,393,,,475',
'475,,393,393,475,,475,475,475,475,475,475,475,,,,,475,475,475,475,475',
'475,475,,,475,,,,,,,475,,,475,475,475,475,475,475,475,475,475,475,,475',
'475,,475,475,475,,,,,,,,,,,,,,,,,,,,475,,,475,,475,475,,,,,,,475,,475',
',,,,,,,475,,,,,475,475,475,475,475,475,,,,475,475,,,749,749,749,749',
'749,475,,,749,749,,475,475,749,,749,749,749,749,749,749,749,,,,,749',
'749,749,749,749,749,749,,,749,,,,,,749,749,749,749,749,749,749,749,749',
'749,749,749,749,749,,749,749,,749,749,749,,,,,,,,,,,,,,,,,,,,749,,,749',
',,749,,,,,749,,,,749,,,,,,,,749,,,,,749,749,749,749,749,749,,,,749,749',
',,748,748,748,748,748,749,,,748,748,,749,749,748,,748,748,748,748,748',
'748,748,,,,,748,748,748,748,748,748,748,,,748,,,,,,748,748,748,748,748',
'748,748,748,748,748,748,748,748,748,,748,748,,748,748,748,,,,,,,,,,',
',,,,,,,,,748,,,748,,,748,,,,,748,,,,748,,,,,,,,748,,,,,748,748,748,748',
'748,748,,,,748,748,,,486,486,486,,486,748,,,486,486,,748,748,486,,486',
'486,486,486,486,486,486,,,,,486,486,486,486,486,486,486,,,486,,,,,,',
'486,,,486,486,486,486,486,486,486,486,486,486,,486,486,,486,486,486',
',,,,,,,,,,,,,,,,,,,486,,,486,,,486,,,,,486,,,,486,,,,,,,,486,,,,,486',
'486,486,486,486,486,,,,486,486,,,,,,,486,486,83,83,83,,83,486,486,,83',
'83,,,,83,,83,83,83,83,83,83,83,,83,,,83,83,83,83,83,83,83,,,83,,,,,',
',83,,,83,83,83,83,83,83,83,83,83,83,,83,83,,83,83,83,,,,,,,,,,,,,,,',
',,,,83,,,83,83,,83,,,,,83,,83,,83,,,,,,,,83,,83,,,83,83,83,83,83,83',
',,,83,83,,,,,,,83,83,86,86,86,,86,83,83,,86,86,,,,86,,86,86,86,86,86',
'86,86,,86,,,86,86,86,86,86,86,86,,,86,,,,,,,86,,,86,86,86,86,86,86,86',
'86,86,86,,86,86,,86,86,86,,,,,,,,,,,,,,,,,,,,86,,,86,86,,86,,,,,86,',
'86,,86,,,,,,,,86,,86,,,86,86,86,86,86,86,,,,86,86,,,,,,,86,86,355,355',
'355,,355,86,86,,355,355,,,,355,,355,355,355,355,355,355,355,,,,,355',
'355,355,355,355,355,355,,,355,,,,,,,355,,,355,355,355,355,355,355,355',
'355,355,355,,355,355,,355,355,355,,,,,,,,,,,,,,,,,,,,355,,,355,,,355',
',,,,,,,,355,,,,,,,,355,,,,,355,355,355,355,355,355,,,,355,355,,,98,98',
'98,98,98,355,,,98,98,,355,355,98,,98,98,98,98,98,98,98,,,,,98,98,98',
'98,98,98,98,,,98,,,,,,98,98,98,98,98,98,98,98,98,98,98,98,98,98,,98',
'98,,98,98,98,,,,,,,,,,,,,,,,,,,,98,,,98,,,98,,,,,98,,,,98,,,,,,,,98',
',,,,98,98,98,98,98,98,,,,98,98,,,102,102,102,98,102,98,,,102,102,,98',
'98,102,,102,102,102,102,102,102,102,,,,,102,102,102,102,102,102,102',
',,102,,,,,,,102,,,102,102,102,102,102,102,102,102,102,102,,102,102,',
'102,102,102,,,,,,,,,,,,,,,,,,,,102,,,102,,,102,,,,,,,,,102,,,,,,,,102',
',,,,102,102,102,102,102,102,,,,102,102,,,103,103,103,,103,102,,,103',
'103,,102,102,103,,103,103,103,103,103,103,103,,,,,103,103,103,103,103',
'103,103,,,103,,,,,,,103,,,103,103,103,103,103,103,103,103,103,103,,103',
'103,,103,103,103,,,,,,,,,,,,,,,,,,,,103,,,103,,,103,,,,,,,,,103,,,,',
',,,103,,,,,103,103,103,103,103,103,,,,103,103,,,104,104,104,,104,103',
',,104,104,,103,103,104,,104,104,104,104,104,104,104,,,,,104,104,104',
'104,104,104,104,,,104,,,,,,,104,,,104,104,104,104,104,104,104,104,104',
'104,,104,104,,104,104,104,,,,,,,,,,,,,,,,,,,,104,,,104,,,104,,,,,,,',
',104,,,,,,,,104,,,,,104,104,104,104,104,104,,,,104,104,,,105,105,105',
',105,104,,,105,105,,104,104,105,,105,105,105,105,105,105,105,,,,,105',
'105,105,105,105,105,105,,,105,,,,,,,105,,,105,105,105,105,105,105,105',
'105,105,105,,105,105,,105,105,105,,,,,,,,,,,,,,,,,,,,105,,,105,,,105',
',,,,,,,,105,,,,,,,,105,,,,,105,105,105,105,105,105,,,,105,105,,,106',
'106,106,106,106,105,,,106,106,,105,105,106,,106,106,106,106,106,106',
'106,,,,,106,106,106,106,106,106,106,,,106,,,,,,106,106,106,106,106,106',
'106,106,106,106,106,106,106,106,,106,106,,106,106,106,,,,,,,,,,,,,,',
',,,,,106,,,106,,,106,,,,,106,,,,106,,,,,,,,106,,,,,106,106,106,106,106',
'106,,,,106,106,,,731,731,731,731,731,106,,,731,731,,106,106,731,,731',
'731,731,731,731,731,731,,,,,731,731,731,731,731,731,731,,,731,,,,,,731',
'731,731,731,731,731,731,731,731,731,731,731,731,731,,731,731,,731,731',
'731,,,,,,,,,,,,,,,,,,,,731,,,731,,,731,,,,,731,,,,731,,,,,,,,731,,,',
',731,731,731,731,731,731,,,,731,731,,,493,493,493,,493,731,,,493,493',
',731,731,493,,493,493,493,493,493,493,493,,,,,493,493,493,493,493,493',
'493,,,493,,,,,,,493,,,493,493,493,493,493,493,493,493,493,493,,493,493',
',493,493,493,,,,,,,,,,,,,,,,,,,,493,,,493,,,493,,,,,,,,,493,,,,,,,,493',
',,,,493,493,493,493,493,493,,,,493,493,,,723,723,723,,723,493,,,723',
'723,,493,493,723,,723,723,723,723,723,723,723,,,,,723,723,723,723,723',
'723,723,,,723,,,,,,,723,,,723,723,723,723,723,723,723,723,723,723,,723',
'723,,723,723,723,,,,,,,,,,,,,,,,,,,,723,,,723,,,723,,,,,723,,,,723,',
',,,,,,723,,,,,723,723,723,723,723,723,,,,723,723,,,188,188,188,188,188',
'723,,,188,188,,723,723,188,,188,188,188,188,188,188,188,,,,,188,188',
'188,188,188,188,188,,,188,,,,,,188,188,188,188,188,188,188,188,188,188',
'188,188,188,188,,188,188,,188,188,188,,,,,,,,,,,,,,,,,,,,188,,,188,',
',188,,,,,188,,,,188,,,,,,,,188,,,,,188,188,188,188,188,188,,,,188,188',
',,189,189,189,189,189,188,,,189,189,,188,188,189,,189,189,189,189,189',
'189,189,,,,,189,189,189,189,189,189,189,,,189,,,,,,189,189,189,189,189',
'189,189,189,189,189,189,189,189,189,,189,189,,189,189,189,,,,,,,,,,',
',,,,,,,,,189,,,189,,,189,,,,,189,,,,189,,,,,,,,189,,,,,189,189,189,189',
'189,189,,,,189,189,,,190,190,190,,190,189,,,190,190,,189,189,190,,190',
'190,190,190,190,190,190,,,,,190,190,190,190,190,190,190,,,190,,,,,,',
'190,,,190,190,190,190,190,190,190,190,190,190,,190,190,,190,190,190',
',,,,,,,,,,,,,,,,,,,190,,,190,,,190,,,,,190,,,,190,,,,,,,,190,,,,,190',
'190,190,190,190,190,,,,190,190,,,191,191,191,,191,190,,,191,191,,190',
'190,191,,191,191,191,191,191,191,191,,,,,191,191,191,191,191,191,191',
',,191,,,,,,,191,,,191,191,191,191,191,191,191,191,191,191,,191,191,',
'191,191,191,,,,,,,,,,,,,,,,,,,,191,,,191,,,191,,,,,191,,,,191,,,,,,',
',191,,,,,191,191,191,191,191,191,,,,191,191,,,192,192,192,,192,191,',
',192,192,,191,191,192,,192,192,192,192,192,192,192,,,,,192,192,192,192',
'192,192,192,,,192,,,,,,,192,,,192,192,192,192,192,192,192,192,192,192',
',192,192,,192,192,192,,,,,,,,,,,,,,,,,,,,192,,,192,,,192,,,,,,,,,192',
',,,,,,,192,,,,,192,192,192,192,192,192,,,,192,192,,,193,193,193,,193',
'192,,,193,193,,192,192,193,,193,193,193,193,193,193,193,,,,,193,193',
'193,193,193,193,193,,,193,,,,,,,193,,,193,193,193,193,193,193,193,193',
'193,193,,193,193,,193,193,193,,,,,,,,,,,,,,,,,,,,193,,,193,,,193,,,',
',193,,,,193,,,,,,,,193,,,,,193,193,193,193,193,193,,,,193,193,,,,,,',
'193,193,494,494,494,,494,193,193,,494,494,,,,494,,494,494,494,494,494',
'494,494,,,,,494,494,494,494,494,494,494,,,494,,,,,,,494,,,494,494,494',
'494,494,494,494,494,494,494,,494,494,,494,494,494,,,,,,,,,,,,,,,,,,',
',494,,,494,,,494,,,,,,,,,494,,,,,,,,494,,,,,494,494,494,494,494,494',
',,,494,494,,,495,495,495,,495,494,,,495,495,,494,494,495,,495,495,495',
'495,495,495,495,,,,,495,495,495,495,495,495,495,,,495,,,,,,,495,,,495',
'495,495,495,495,495,495,495,495,495,,495,495,,495,495,495,,,,,,,,,,',
',,,,,,,,,495,,,495,,,495,,,,,,,,,495,,,,,,,,495,,,,,495,495,495,495',
'495,495,,,,495,495,,,196,196,196,,196,495,,,196,196,,495,495,196,,196',
'196,196,196,196,196,196,,,,,196,196,196,196,196,196,196,,,196,,,,,,',
'196,,,196,196,196,196,196,196,196,196,196,196,,196,196,,196,196,196',
',,,,,,,,,,,,,,,,,,,196,,,196,,,196,,,,,,,,,196,,,,,,,,196,,,,,196,196',
'196,196,196,196,,,,196,196,,,197,197,197,,197,196,,,197,197,,196,196',
'197,,197,197,197,197,197,197,197,,,,,197,197,197,197,197,197,197,,,197',
',,,,,,197,,,197,197,197,197,197,197,197,197,197,197,,197,197,,197,197',
'197,,,,,,,,,,,,,,,,,,,,197,,,197,,,197,,,,,,,,,197,,,,,,,,197,,,,,197',
'197,197,197,197,197,,,,197,197,,,198,198,198,,198,197,,,198,198,,197',
'197,198,,198,198,198,198,198,198,198,,,,,198,198,198,198,198,198,198',
',,198,,,,,,,198,,,198,198,198,198,198,198,198,198,198,198,,198,198,',
'198,198,198,,,,,,,,,,,,,,,,,,,,198,,,198,,,198,,,,,,,,,198,,,,,,,,198',
',,,,198,198,198,198,198,198,,,,198,198,,,708,708,708,,708,198,,,708',
'708,,198,198,708,,708,708,708,708,708,708,708,,,,,708,708,708,708,708',
'708,708,,,708,,,,,,,708,,,708,708,708,708,708,708,708,708,708,708,,708',
'708,,708,708,708,,,,,,,,,,,,,,,,,,,,708,,,708,,,708,,,,,,,,,708,,,,',
',,,708,,,,,708,708,708,708,708,708,,,,708,708,,,707,707,707,,707,708',
',,707,707,,708,708,707,,707,707,707,707,707,707,707,,,,,707,707,707',
'707,707,707,707,,,707,,,,,,,707,,,707,707,707,707,707,707,707,707,707',
'707,,707,707,,707,707,707,,,,,,,,,,,,,,,,,,,,707,,,707,,,707,,,,,,,',
',707,,,,,,,,707,,,,,707,707,707,707,707,707,,,,707,707,,,706,706,706',
',706,707,,,706,706,,707,707,706,,706,706,706,706,706,706,706,,,,,706',
'706,706,706,706,706,706,,,706,,,,,,,706,,,706,706,706,706,706,706,706',
'706,706,706,,706,706,,706,706,706,,,,,,,,,,,,,,,,,,,,706,,,706,,,706',
',,,,,,,,706,,,,,,,,706,,,,,706,706,706,706,706,706,,,,706,706,,,696',
'696,696,,696,706,,,696,696,,706,706,696,,696,696,696,696,696,696,696',
',,,,696,696,696,696,696,696,696,,,696,,,,,,,696,,,696,696,696,696,696',
'696,696,696,696,696,,696,696,,696,696,696,,,,,,,,,,,,,,,,,,,,696,,,696',
',,696,,,,,,,,,696,,,,,,,,696,,,,,696,696,696,696,696,696,,,,696,696',
',,695,695,695,,695,696,,,695,695,,696,696,695,,695,695,695,695,695,695',
'695,,,,,695,695,695,695,695,695,695,,,695,,,,,,,695,,,695,695,695,695',
'695,695,695,695,695,695,,695,695,,695,695,695,,,,,,,,,,,,,,,,,,,,695',
',,695,,,695,,,,,,,,,695,,,,,,,,695,,,,,695,695,695,695,695,695,,,,695',
'695,,,689,689,689,689,689,695,,,689,689,,695,695,689,,689,689,689,689',
'689,689,689,,,,,689,689,689,689,689,689,689,,,689,,,,,,689,689,689,689',
'689,689,689,689,689,689,689,689,689,689,,689,689,,689,689,689,,,,,,',
',,,,,,,,,,,,,689,,,689,,,689,,,,,689,,,,689,,,,,,,,689,,,,,689,689,689',
'689,689,689,,,,689,689,,,206,206,206,206,206,689,,,206,206,,689,689',
'206,,206,206,206,206,206,206,206,,,,,206,206,206,206,206,206,206,,,206',
',,,,,206,206,206,206,206,206,206,206,206,206,206,206,206,206,,206,206',
',206,206,206,,,,,,,,,,,,,,,,,,,,206,,,206,,,206,,,,,206,,,,206,,,,,',
',,206,,,,,206,206,206,206,206,206,,,,206,206,,,207,207,207,,207,206',
',,207,207,,206,206,207,,207,207,207,207,207,207,207,,,,,207,207,207',
'207,207,207,207,,,207,,,,,,,207,,,207,207,207,207,207,207,207,207,207',
'207,,207,207,,207,207,207,,,,,,,,,,,,,,,,,,,,207,,,207,,207,207,,,,',
',,,,207,,,,,,,,207,,,,,207,207,207,207,207,207,,,,207,207,,,210,210',
'210,,210,207,,,210,210,,207,207,210,,210,210,210,210,210,210,210,,,',
',210,210,210,210,210,210,210,,,210,,,,,,,210,,,210,210,210,210,210,210',
'210,210,210,210,,210,210,,210,210,210,,,,,,,,,,,,,,,,,,,,210,,,210,',
',210,,,,,,,,,210,,,,,,,,210,,,,,210,210,210,210,210,210,,,,210,210,',
',499,499,499,,499,210,,,499,499,,210,210,499,,499,499,499,499,499,499',
'499,,,,,499,499,499,499,499,499,499,,,499,,,,,,,499,,,499,499,499,499',
'499,499,499,499,499,499,,499,499,,499,499,499,,,,,,,,,,,,,,,,,,,,499',
',,499,,,499,,,,,,,,,499,,,,,,,,499,,,,,499,499,499,499,499,499,,,,499',
'499,,,212,212,212,,212,499,,,212,212,,499,499,212,,212,212,212,212,212',
'212,212,,,,,212,212,212,212,212,212,212,,,212,,,,,,,212,,,212,212,212',
'212,212,212,212,212,212,212,,212,212,,212,212,212,,,,,,,,,,,,,,,,,,',
',212,,,212,,,212,,,,,,,,,212,,,,,,,,212,,,,,212,212,212,212,212,212',
',,,212,212,,,213,213,213,,213,212,,,213,213,,212,212,213,,213,213,213',
'213,213,213,213,,,,,213,213,213,213,213,213,213,,,213,,,,,,,213,,,213',
'213,213,213,213,213,213,213,213,213,,213,213,,213,213,213,,,,,,,,,,',
',,,,,,,,,213,,,213,,,213,,,,,,,,,213,,,,,,,,213,,,,,213,213,213,213',
'213,213,,,,213,213,,,214,214,214,,214,213,,,214,214,,213,213,214,,214',
'214,214,214,214,214,214,,,,,214,214,214,214,214,214,214,,,214,,,,,,',
'214,,,214,214,214,214,214,214,214,214,214,214,,214,214,,214,214,214',
',,,,,,,,,,,,,,,,,,,214,,,214,,,214,,,,,,,,,214,,,,,,,,214,,,,,214,214',
'214,214,214,214,,,,214,214,,,215,215,215,,215,214,,,215,215,,214,214',
'215,,215,215,215,215,215,215,215,,,,,215,215,215,215,215,215,215,,,215',
',,,,,,215,,,215,215,215,215,215,215,215,215,215,215,,215,215,,215,215',
'215,,,,,,,,,,,,,,,,,,,,215,,,215,,,215,,,,,,,,,215,,,,,,,,215,,,,,215',
'215,215,215,215,215,,,,215,215,,,216,216,216,,216,215,,,216,216,,215',
'215,216,,216,216,216,216,216,216,216,,,,,216,216,216,216,216,216,216',
',,216,,,,,,,216,,,216,216,216,216,216,216,216,216,216,216,,216,216,',
'216,216,216,,,,,,,,,,,,,,,,,,,,216,,,216,,,216,,,,,,,,,216,,,,,,,,216',
',,,,216,216,216,216,216,216,,,,216,216,,,217,217,217,,217,216,,,217',
'217,,216,216,217,,217,217,217,217,217,217,217,,,,,217,217,217,217,217',
'217,217,,,217,,,,,,,217,,,217,217,217,217,217,217,217,217,217,217,,217',
'217,,217,217,217,,,,,,,,,,,,,,,,,,,,217,,,217,,,217,,,,,,,,,217,,,,',
',,,217,,,,,217,217,217,217,217,217,,,,217,217,,,218,218,218,,218,217',
',,218,218,,217,217,218,,218,218,218,218,218,218,218,,,,,218,218,218',
'218,218,218,218,,,218,,,,,,,218,,,218,218,218,218,218,218,218,218,218',
'218,,218,218,,218,218,218,,,,,,,,,,,,,,,,,,,,218,,,218,,,218,,,,,,,',
',218,,,,,,,,218,,,,,218,218,218,218,218,218,,,,218,218,,,219,219,219',
',219,218,,,219,219,,218,218,219,,219,219,219,219,219,219,219,,,,,219',
'219,219,219,219,219,219,,,219,,,,,,,219,,,219,219,219,219,219,219,219',
'219,219,219,,219,219,,219,219,219,,,,,,,,,,,,,,,,,,,,219,,,219,,,219',
',,,,,,,,219,,,,,,,,219,,,,,219,219,219,219,219,219,,,,219,219,,,220',
'220,220,,220,219,,,220,220,,219,219,220,,220,220,220,220,220,220,220',
',,,,220,220,220,220,220,220,220,,,220,,,,,,,220,,,220,220,220,220,220',
'220,220,220,220,220,,220,220,,220,220,220,,,,,,,,,,,,,,,,,,,,220,,,220',
',,220,,,,,,,,,220,,,,,,,,220,,,,,220,220,220,220,220,220,,,,220,220',
',,221,221,221,,221,220,,,221,221,,220,220,221,,221,221,221,221,221,221',
'221,,,,,221,221,221,221,221,221,221,,,221,,,,,,,221,,,221,221,221,221',
'221,221,221,221,221,221,,221,221,,221,221,221,,,,,,,,,,,,,,,,,,,,221',
',,221,,,221,,,,,,,,,221,,,,,,,,221,,,,,221,221,221,221,221,221,,,,221',
'221,,,222,222,222,,222,221,,,222,222,,221,221,222,,222,222,222,222,222',
'222,222,,,,,222,222,222,222,222,222,222,,,222,,,,,,,222,,,222,222,222',
'222,222,222,222,222,222,222,,222,222,,222,222,222,,,,,,,,,,,,,,,,,,',
',222,,,222,,,222,,,,,,,,,222,,,,,,,,222,,,,,222,222,222,222,222,222',
',,,222,222,,,223,223,223,,223,222,,,223,223,,222,222,223,,223,223,223',
'223,223,223,223,,,,,223,223,223,223,223,223,223,,,223,,,,,,,223,,,223',
'223,223,223,223,223,223,223,223,223,,223,223,,223,223,223,,,,,,,,,,',
',,,,,,,,,223,,,223,,,223,,,,,,,,,223,,,,,,,,223,,,,,223,223,223,223',
'223,223,,,,223,223,,,224,224,224,,224,223,,,224,224,,223,223,224,,224',
'224,224,224,224,224,224,,,,,224,224,224,224,224,224,224,,,224,,,,,,',
'224,,,224,224,224,224,224,224,224,224,224,224,,224,224,,224,224,224',
',,,,,,,,,,,,,,,,,,,224,,,224,,,224,,,,,,,,,224,,,,,,,,224,,,,,224,224',
'224,224,224,224,,,,224,224,,,225,225,225,,225,224,,,225,225,,224,224',
'225,,225,225,225,225,225,225,225,,,,,225,225,225,225,225,225,225,,,225',
',,,,,,225,,,225,225,225,225,225,225,225,225,225,225,,225,225,,225,225',
'225,,,,,,,,,,,,,,,,,,,,225,,,225,,,225,,,,,,,,,225,,,,,,,,225,,,,,225',
'225,225,225,225,225,,,,225,225,,,226,226,226,,226,225,,,226,226,,225',
'225,226,,226,226,226,226,226,226,226,,,,,226,226,226,226,226,226,226',
',,226,,,,,,,226,,,226,226,226,226,226,226,226,226,226,226,,226,226,',
'226,226,226,,,,,,,,,,,,,,,,,,,,226,,,226,,,226,,,,,,,,,226,,,,,,,,226',
',,,,226,226,226,226,226,226,,,,226,226,,,227,227,227,,227,226,,,227',
'227,,226,226,227,,227,227,227,227,227,227,227,,,,,227,227,227,227,227',
'227,227,,,227,,,,,,,227,,,227,227,227,227,227,227,227,227,227,227,,227',
'227,,227,227,227,,,,,,,,,,,,,,,,,,,,227,,,227,,,227,,,,,,,,,227,,,,',
',,,227,,,,,227,227,227,227,227,227,,,,227,227,,,228,228,228,,228,227',
',,228,228,,227,227,228,,228,228,228,228,228,228,228,,,,,228,228,228',
'228,228,228,228,,,228,,,,,,,228,,,228,228,228,228,228,228,228,228,228',
'228,,228,228,,228,228,228,,,,,,,,,,,,,,,,,,,,228,,,228,,,228,,,,,,,',
',228,,,,,,,,228,,,,,228,228,228,228,228,228,,,,228,228,,,229,229,229',
',229,228,,,229,229,,228,228,229,,229,229,229,229,229,229,229,,,,,229',
'229,229,229,229,229,229,,,229,,,,,,,229,,,229,229,229,229,229,229,229',
'229,229,229,,229,229,,229,229,229,,,,,,,,,,,,,,,,,,,,229,,,229,,,229',
',,,,,,,,229,,,,,,,,229,,,,,229,229,229,229,229,229,,,,229,229,,,230',
'230,230,,230,229,,,230,230,,229,229,230,,230,230,230,230,230,230,230',
',,,,230,230,230,230,230,230,230,,,230,,,,,,,230,,,230,230,230,230,230',
'230,230,230,230,230,,230,230,,230,230,230,,,,,,,,,,,,,,,,,,,,230,,,230',
',,230,,,,,,,,,230,,,,,,,,230,,,,,230,230,230,230,230,230,,,,230,230',
',,231,231,231,,231,230,,,231,231,,230,230,231,,231,231,231,231,231,231',
'231,,,,,231,231,231,231,231,231,231,,,231,,,,,,,231,,,231,231,231,231',
'231,231,231,231,231,231,,231,231,,231,231,231,,,,,,,,,,,,,,,,,,,,231',
',,231,,,231,,,,,,,,,231,,,,,,,,231,,,,,231,231,231,231,231,231,,,,231',
'231,,,232,232,232,,232,231,,,232,232,,231,231,232,,232,232,232,232,232',
'232,232,,,,,232,232,232,232,232,232,232,,,232,,,,,,,232,,,232,232,232',
'232,232,232,232,232,232,232,,232,232,,232,232,232,,,,,,,,,,,,,,,,,,',
',232,,,232,,,232,,,,,,,,,232,,,,,,,,232,,,,,232,232,232,232,232,232',
',,,232,232,,,233,233,233,,233,232,,,233,233,,232,232,233,,233,233,233',
'233,233,233,233,,,,,233,233,233,233,233,233,233,,,233,,,,,,,233,,,233',
'233,233,233,233,233,233,233,233,233,,233,233,,233,233,233,,,,,,,,,,',
',,,,,,,,,233,,,233,,,233,,,,,,,,,233,,,,,,,,233,,,,,233,233,233,233',
'233,233,,,,233,233,,,234,234,234,,234,233,,,234,234,,233,233,234,,234',
'234,234,234,234,234,234,,,,,234,234,234,234,234,234,234,,,234,,,,,,',
'234,,,234,234,234,234,234,234,234,234,234,234,,234,234,,234,234,234',
',,,,,,,,,,,,,,,,,,,234,,,234,,,234,,,,,,,,,234,,,,,,,,234,,,,,234,234',
'234,234,234,234,,,,234,234,,,235,235,235,,235,234,,,235,235,,234,234',
'235,,235,235,235,235,235,235,235,,,,,235,235,235,235,235,235,235,,,235',
',,,,,,235,,,235,235,235,235,235,235,235,235,235,235,,235,235,,235,235',
'235,,,,,,,,,,,,,,,,,,,,235,,,235,,,235,,,,,,,,,235,,,,,,,,235,,,,,235',
'235,235,235,235,235,,,,235,235,,,236,236,236,,236,235,,,236,236,,235',
'235,236,,236,236,236,236,236,236,236,,,,,236,236,236,236,236,236,236',
',,236,,,,,,,236,,,236,236,236,236,236,236,236,236,236,236,,236,236,',
'236,236,236,,,,,,,,,,,,,,,,,,,,236,,,236,,,236,,,,,,,,,236,,,,,,,,236',
',,,,236,236,236,236,236,236,,,,236,236,,,237,237,237,,237,236,,,237',
'237,,236,236,237,,237,237,237,237,237,237,237,,,,,237,237,237,237,237',
'237,237,,,237,,,,,,,237,,,237,237,237,237,237,237,237,237,237,237,,237',
'237,,237,237,237,,,,,,,,,,,,,,,,,,,,237,,,237,,,237,,,,,,,,,237,,,,',
',,,237,,,,,237,237,237,237,237,237,,,,237,237,,,677,677,677,677,677',
'237,,,677,677,,237,237,677,,677,677,677,677,677,677,677,,,,,677,677',
'677,677,677,677,677,,,677,,,,,,677,677,677,677,677,677,677,677,677,677',
'677,677,677,677,,677,677,,677,677,677,,,,,,,,,,,,,,,,,,,,677,,,677,',
',677,,,,,677,,,,677,,,,,,,,677,,,,,677,677,677,677,677,677,,,,677,677',
',,676,676,676,676,676,677,,,676,676,,677,677,676,,676,676,676,676,676',
'676,676,,,,,676,676,676,676,676,676,676,,,676,,,,,,676,676,676,676,676',
'676,676,676,676,676,676,676,676,676,,676,676,,676,676,676,,,,,,,,,,',
',,,,,,,,,676,,,676,,,676,,,,,676,,,,676,,,,,,,,676,,,,,676,676,676,676',
'676,676,,,,676,676,,,504,504,504,,504,676,,,504,504,,676,676,504,,504',
'504,504,504,504,504,504,,,,,504,504,504,504,504,504,504,,,504,,,,,,',
'504,,,504,504,504,504,504,504,504,504,504,504,,504,504,,504,504,504',
',,,,,,,,,,,,,,,,,,,504,,,504,,,504,,,,,504,,,,504,,,,,,,,504,,,,,504',
'504,504,504,504,504,,,,504,504,,,246,246,246,,246,504,,,246,246,,504',
'504,246,,246,246,246,246,246,246,246,,,,,246,246,246,246,246,246,246',
',,246,,,,,,,246,,,246,246,246,246,246,246,246,246,246,246,,246,246,',
'246,246,246,,,,,,,,,,,,,,,,,,,,246,,,246,,,246,,,,,,,,,246,,,,,,,,246',
',,,,246,246,246,246,246,246,,,,246,246,,,673,673,673,,673,246,,,673',
'673,,246,246,673,,673,673,673,673,673,673,673,,,,,673,673,673,673,673',
'673,673,,,673,,,,,,,673,,,673,673,673,673,673,673,673,673,673,673,,673',
'673,,673,673,673,,,,,,,,,,,,,,,,,,,,673,,,673,,,673,,,,,,,,,673,,,,',
',,,673,,,,,673,673,673,673,673,673,,,,673,673,,,248,248,248,,248,673',
',,248,248,,673,673,248,,248,248,248,248,248,248,248,,,,,248,248,248',
'248,248,248,248,,,248,,,,,,,248,,,248,248,248,248,248,248,248,248,248',
'248,,248,248,,248,248,248,,,,,,,,,,,,,,,,,,,,248,,,248,,,248,,,,,,,',
',248,,,,,,,,248,,,,,248,248,248,248,248,248,,,,248,248,,,253,253,253',
',253,248,,,253,253,,248,248,253,,253,253,253,253,253,253,253,,,,,253',
'253,253,253,253,253,253,,,253,,,,,,,253,,,253,253,253,253,253,253,253',
'253,253,253,,253,253,,253,253,253,,,,,,,,,,,,,,,,,,,,253,,,253,,,253',
',,,,,,,,253,,,,,,,,253,,,,,253,253,253,253,253,253,,,,253,253,,,507',
'507,507,,507,253,,,507,507,,253,253,507,,507,507,507,507,507,507,507',
',,,,507,507,507,507,507,507,507,,,507,,,,,,,507,,,507,507,507,507,507',
'507,507,507,507,507,,507,507,,507,507,507,,,,,,,,,,,,,,,,,,,,507,,,507',
',,507,,,,,,,,,507,,,,,,,,507,,,,,507,507,507,507,507,507,,,,507,507',
',,,,,,507,507,513,513,513,513,513,507,507,,513,513,,,,513,,513,513,513',
'513,513,513,513,,,,,513,513,513,513,513,513,513,,,513,,,,,,513,513,513',
'513,513,513,513,513,513,513,513,513,513,513,,513,513,,513,513,513,,',
',,,,,,,,,,,,,,,,,513,,,513,,,513,,,,,513,,,,513,,,,,,,,513,,,,,513,513',
'513,513,513,513,,,,513,513,,,342,342,342,,342,513,,,342,342,,513,513',
'342,,342,342,342,342,342,342,342,,,,,342,342,342,342,342,342,342,,,342',
',,,,,,342,,,342,342,342,342,342,342,342,342,342,342,,342,342,,,,342',
',,,,,,,,,,,,,,,,,,,342,,,342,,,342,,,,,,,,,,,,,,,,,,,,,,342,342,342',
'342,342,342,,,,342,342,,,259,259,259,,259,342,,,259,259,,342,342,259',
',259,259,259,259,259,259,259,,,,,259,259,259,259,259,259,259,,,259,',
',,,,,259,,,259,259,259,259,259,259,259,259,259,259,,259,259,,259,259',
'259,,,,,,,,,,,,,,,,,,,,259,,,259,,,259,,,,,259,,259,,259,,,,,,,,259',
',,,,259,259,259,259,259,259,,,,259,259,,,,,,,259,259,260,260,260,,260',
'259,259,,260,260,,,,260,,260,260,260,260,260,260,260,,,,,260,260,260',
'260,260,260,260,,,260,,,,,,,260,,,260,260,260,260,260,260,260,260,260',
'260,,260,260,,260,260,260,,,,,,,,,,,,,,,,,,,,260,,,260,,,260,,,,,260',
',260,,260,,,,,,,,260,,,,,260,260,260,260,260,260,,,,260,260,,,,,,,260',
'260,268,268,268,,268,260,260,,268,268,,,,268,,268,268,268,268,268,268',
'268,,,,,268,268,268,268,268,268,268,,,268,,,,,,,268,,,268,268,268,268',
'268,268,268,268,268,268,,268,268,,268,268,268,,,,,,,,,,,,,,,,,,,,268',
',,268,,268,268,,,,,268,,268,,268,,,,,,,,268,,,,,268,268,268,268,268',
'268,,,,268,268,,,,,,,268,268,669,669,669,,669,268,268,,669,669,,,,669',
',669,669,669,669,669,669,669,,,,,669,669,669,669,669,669,669,,,669,',
',,,,,669,,,669,669,669,669,669,669,669,669,669,669,,669,669,,669,669',
'669,,,,,,,,,,,,,,,,,,,,669,,,669,,,669,,,,,669,,,,669,,,,,,,,669,,,',
',669,669,669,669,669,669,,,,669,669,,,,,,,669,669,270,270,270,270,270',
'669,669,,270,270,,,,270,,270,270,270,270,270,270,270,,,,,270,270,270',
'270,270,270,270,,,270,,,,,,270,270,270,270,270,270,270,270,270,270,270',
'270,270,270,,270,270,,270,270,270,,,,,,,,,,,,,,,,,,,,270,,,270,,,270',
',,,,270,,,,270,,,,,,,,270,,,,,270,270,270,270,270,270,,,,270,270,,,340',
'340,340,,340,270,,,340,340,,270,270,340,,340,340,340,340,340,340,340',
',,,,340,340,340,340,340,340,340,,,340,,,,,,,340,,,340,340,340,340,340',
'340,340,340,340,340,,340,340,,,,340,,,,,,,,,,,,,,,,,,,,340,,,340,,,340',
',,,,,,,,,,,,,,,,,,,,,340,340,340,340,340,340,,,,340,340,,,665,665,665',
',665,340,,,665,665,,340,340,665,,665,665,665,665,665,665,665,,,,,665',
'665,665,665,665,665,665,,,665,,,,,,,665,,,665,665,665,665,665,665,665',
'665,665,665,,665,665,,665,665,665,,,,,,,,,,,,,,,,,,,,665,,,665,,,665',
',,,,,,,,665,,,,,,,,665,,,,,665,665,665,665,665,665,,,,665,665,,,664',
'664,664,,664,665,,,664,664,,665,665,664,,664,664,664,664,664,664,664',
',,,,664,664,664,664,664,664,664,,,664,,,,,,,664,,,664,664,664,664,664',
'664,664,664,664,664,,664,664,,664,664,664,,,,,,,,,,,,,,,,,,,,664,,,664',
',,664,,,,,664,,,,664,,,,,,,,664,,,,,664,664,664,664,664,664,,,,664,664',
',,274,274,274,,274,664,,,274,274,,664,664,274,,274,274,274,274,274,274',
'274,,,,,274,274,274,274,274,274,274,,,274,,,,,,,274,,,274,274,274,274',
'274,274,274,274,274,274,,274,274,,,,274,,,,,,,,,,,,,,,,,,,,274,,,274',
',,274,,,,,,,,,,,,,,,,,,,,,,274,274,274,274,274,274,,,,274,274,,,275',
'275,275,275,275,274,,,275,275,,274,274,275,,275,275,275,275,275,275',
'275,,,,,275,275,275,275,275,275,275,,,275,,,,,,275,275,275,275,275,275',
'275,275,275,275,275,275,275,275,,275,275,,275,275,275,,,,,,,,,,,,,,',
',,,,,275,,,275,,,275,,,,,275,,,,275,,,,,,,,275,,,,,275,275,275,275,275',
'275,,,,275,275,,,637,637,637,,637,275,,,637,637,,275,275,637,,637,637',
'637,637,637,637,637,,,,,637,637,637,637,637,637,637,,,637,,,,,,,637',
',,637,637,637,637,637,637,637,637,637,637,,637,637,,637,637,637,,,,',
',,,,,,,,,,,,,,,637,,,637,,,637,,,,,637,,,,637,,,,,,,,637,,,,,637,637',
'637,637,637,637,,,,637,637,,,621,621,621,621,621,637,,,621,621,,637',
'637,621,,621,621,621,621,621,621,621,,,,,621,621,621,621,621,621,621',
',,621,,,,,,621,621,621,621,621,621,621,621,621,621,621,621,621,621,',
'621,621,,621,621,621,,,,,,,,,,,,,,,,,,,,621,,,621,,,621,,,,,621,,,,621',
',,,,,,,621,,,,,621,621,621,621,621,621,,,,621,621,,,620,620,620,620',
'620,621,,,620,620,,621,621,620,,620,620,620,620,620,620,620,,,,,620',
'620,620,620,620,620,620,,,620,,,,,,620,620,620,620,620,620,620,620,620',
'620,620,620,620,620,,620,620,,620,620,620,,,,,,,,,,,,,,,,,,,,620,,,620',
',,620,,,,,620,,,,620,,,,,,,,620,,,,,620,620,620,620,620,620,,,,620,620',
',,514,514,514,514,514,620,,,514,514,,620,620,514,,514,514,514,514,514',
'514,514,,,,,514,514,514,514,514,514,514,,,514,,,,,,514,514,514,514,514',
'514,514,514,514,514,514,514,514,514,,514,514,,514,514,514,,,,,,,,,,',
',,,,,,,,,514,,,514,,,514,,,,,514,,,,514,,,,,,,,514,,,,,514,514,514,514',
'514,514,,,,514,514,,,614,614,614,,614,514,,,614,614,,514,514,614,,614',
'614,614,614,614,614,614,,,,,614,614,614,614,614,614,614,,,614,,,,,,',
'614,,,614,614,614,614,614,614,614,614,614,614,,614,614,,614,614,614',
',,,,,,,,,,,,,,,,,,,614,,,614,,,614,,,,,614,,614,,614,,,,,,,,614,,,,',
'614,614,614,614,614,614,,,,614,614,,,,,,,614,614,523,523,523,,523,614',
'614,,523,523,,,,523,,523,523,523,523,523,523,523,,,,,523,523,523,523',
'523,523,523,,,523,,,,,,,523,,,523,523,523,523,523,523,523,523,523,523',
',523,523,,,,523,,,,,,,,,,,,,,,,,,,,523,,,523,,,523,,,,,,,,,,,,,,,,,',
',,,,523,523,523,523,523,523,,,,523,523,,,526,526,526,526,526,523,,,526',
'526,,523,523,526,,526,526,526,526,526,526,526,,,,,526,526,526,526,526',
'526,526,,,526,,,,,,526,526,526,526,526,526,526,526,526,526,526,526,526',
'526,,526,526,,526,526,526,,,,,,,,,,,,,,,,,,,,526,,,526,,,526,,,,,526',
',,,526,,,,,,,,526,,,,,526,526,526,526,526,526,,,,526,526,,,530,530,530',
'530,530,526,,,530,530,,526,526,530,,530,530,530,530,530,530,530,,,,',
'530,530,530,530,530,530,530,,,530,,,,,,530,530,530,530,530,530,530,530',
'530,530,530,530,530,530,,530,530,,530,530,530,,,,,,,,,,,,,,,,,,,,530',
',,530,,,530,,,,,530,,,,530,,,,,,,,530,,,,,530,530,530,530,530,530,,',
',530,530,,,608,608,608,608,608,530,,,608,608,,530,530,608,,608,608,608',
'608,608,608,608,,,,,608,608,608,608,608,608,608,,,608,,,,,,608,608,608',
'608,608,608,608,608,608,608,608,608,608,608,,608,608,,608,608,608,,',
',,,,,,,,,,,,,,,,,608,,,608,,,608,,,,,608,,,,608,,,,,,,,608,,,,,608,608',
'608,608,608,608,,,,608,608,,,600,600,600,,600,608,,,600,600,,608,608',
'600,,600,600,600,600,600,600,600,,,,,600,600,600,600,600,600,600,,,600',
',,,,,,600,,,600,600,600,600,600,600,600,600,600,600,,600,600,,600,600',
'600,,,,,,,,,,,,,,,,,,,,600,,,600,,,600,,,,,,,,,600,,,,,,,,600,,,,,600',
'600,600,600,600,600,,,,600,600,,,596,596,596,596,596,600,,,596,596,',
'600,600,596,,596,596,596,596,596,596,596,,,,,596,596,596,596,596,596',
'596,,,596,,,,,,596,596,596,596,596,596,596,596,596,596,596,596,596,596',
',596,596,,596,596,596,,,,,,,,,,,,,,,,,,,,596,,,596,,,596,,,,,596,,,',
'596,,,,,,,,596,,,,,596,596,596,596,596,596,,,,596,596,,,592,592,592',
',592,596,,,592,592,,596,596,592,,592,592,592,592,592,592,592,,,,,592',
'592,592,592,592,592,592,,,592,,,,,,,592,,,592,592,592,592,592,592,592',
'592,592,592,,592,592,,592,592,592,,,,,,,,,,,,,,,,,,,,592,,,592,,,592',
',,,,,,,,592,,,,,,,,592,,,,,592,592,592,592,592,592,,,,592,592,,,334',
'334,334,,334,592,,,334,334,,592,592,334,,334,334,334,334,334,334,334',
',,,,334,334,334,334,334,334,334,,,334,,,,,,,334,,,334,334,334,334,334',
'334,334,334,334,334,,334,334,,334,334,334,,,,,,,,,,,,,,,,,,,,334,,,334',
',,334,,,,,,,,,334,,,,,,,,334,,,,,334,334,334,334,334,334,,588,,334,334',
',,,588,588,588,,334,588,588,588,,588,334,334,,,,,,,,588,588,,,,,,,,588',
'588,,588,588,588,588,588,,,,,,,,,,,,,,,,,,,,,,588,588,588,588,588,588',
'588,588,588,588,588,588,588,588,,,588,588,588,,588,588,,,588,,,588,',
'588,,588,,588,,588,588,588,588,588,588,588,,588,,588,,,,,,,,,,,,,588',
'588,588,588,,588,,295,295,295,588,295,588,,,295,295,,,,295,,295,295',
'295,295,295,295,295,,,,,295,295,295,295,295,295,295,,,295,,,,,,,295',
',,295,295,295,295,295,295,295,295,295,295,,295,295,,295,295,295,,,,',
',,,,,,,,,,,,,,,295,,,295,295,,295,,,,,,,,,295,,,,,,,,295,,,,,295,295',
'295,295,295,295,,,,295,295,,,297,297,297,297,297,295,,,297,297,,295',
'295,297,,297,297,297,297,297,297,297,,,,,297,297,297,297,297,297,297',
',,297,,,,,,297,297,297,297,297,297,297,297,297,297,297,297,297,297,',
'297,297,,297,297,297,,,,,,,,,,,,,,,,,,,,297,,,297,,,297,,,,,297,,,,297',
',,,,,,,297,,,,,297,297,297,297,297,297,,,,297,297,,,333,333,333,,333',
'297,,,333,333,,297,297,333,,333,333,333,333,333,333,333,,,,,333,333',
'333,333,333,333,333,,,333,,,,,,,333,,,333,333,333,333,333,333,333,333',
'333,333,,333,333,,333,333,333,,,,,,,,,,,,,,,,,,,,333,,,333,,,333,,,',
',,,,,333,,,,,,,,333,,,,,333,333,333,333,333,333,,587,,333,333,,,,587',
'587,587,,333,587,587,587,,587,333,333,,,,,,,587,587,587,,,,,,,,587,587',
',587,587,587,587,587,,,,,,,,,,,,,,,,,,,,,,587,587,587,587,587,587,587',
'587,587,587,587,587,587,587,,,587,587,587,,587,587,,,587,,,587,,587',
',587,,587,,587,587,587,587,587,587,587,,587,587,587,,,,,,,,,,,,,587',
'587,587,587,,587,,584,584,584,587,584,587,,,584,584,,,,584,,584,584',
'584,584,584,584,584,,,,,584,584,584,584,584,584,584,,,584,,,,,,,584',
',,584,584,584,584,584,584,584,584,584,584,,584,584,,584,584,584,,,,',
',,,,,,,,,,,,,,,584,,,584,,,584,,,,,,,,,584,,,,,,,,584,,,,,584,584,584',
'584,584,584,,,,584,584,,,581,581,581,,581,584,,,581,581,,584,584,581',
',581,581,581,581,581,581,581,,,,,581,581,581,581,581,581,581,,,581,',
',,,,,581,,,581,581,581,581,581,581,581,581,581,581,,581,581,,581,581',
'581,,,,,,,,,,,,,,,,,,,,581,,,581,,,581,,,,,,,,,581,,,,,,,,581,,,,,581',
'581,581,581,581,581,,,,581,581,,,576,576,576,,576,581,,,576,576,,581',
'581,576,,576,576,576,576,576,576,576,,,,,576,576,576,576,576,576,576',
',,576,,,,,,,576,,,576,576,576,576,576,576,576,576,576,576,,576,576,',
'576,576,576,,,,,,,,,,,,,,,,,,,,576,,,576,,,576,,,,,,,,,576,,,,,,,,576',
',,,,576,576,576,576,576,576,,,,576,576,,,575,575,575,,575,576,,,575',
'575,,576,576,575,,575,575,575,575,575,575,575,,,,,575,575,575,575,575',
'575,575,,,575,,,,,,,575,,,575,575,575,575,575,575,575,575,575,575,,575',
'575,,575,575,575,,,,,,,,,,,,,,,,,,,,575,,,575,,,575,,,,,,,,,575,,,,',
',,,575,,,,,575,575,575,575,575,575,,,,575,575,,,573,573,573,,573,575',
',,573,573,,575,575,573,,573,573,573,573,573,573,573,,,,,573,573,573',
'573,573,573,573,,,573,,,,,,,573,,,573,573,573,573,573,573,573,573,573',
'573,,573,573,,573,573,573,,,,,,,,,,,,,,,,,,,,573,,,573,,,573,,,,,573',
',,,573,,,,,,,,573,,,,,573,573,573,573,573,573,,,,573,573,,,571,571,571',
',571,573,,,571,571,,573,573,571,,571,571,571,571,571,571,571,,,,,571',
'571,571,571,571,571,571,,,571,,,,,,,571,,,571,571,571,571,571,571,571',
'571,571,571,,571,571,,571,571,571,,,,,,,,,,,,,,,,,,,,571,,,571,,,571',
',,,,,,,,571,,,,,,,,571,,,,,571,571,571,571,571,571,,,,571,571,,,535',
'535,535,535,535,571,,,535,535,,571,571,535,,535,535,535,535,535,535',
'535,,,,,535,535,535,535,535,535,535,,,535,,,,,,535,535,535,535,535,535',
'535,535,535,535,535,535,535,535,,535,535,,535,535,535,,,,,,,,,,,,,,',
',,,,,535,,,535,,,535,,,,,535,,,,535,,,,,,,,535,,,,,535,535,535,535,535',
'535,,,,535,535,,,31,31,31,,31,535,,,31,31,,535,535,31,,31,31,31,31,31',
'31,31,,,,,31,31,31,31,31,31,31,,,31,,,,,,,31,,,31,31,31,31,31,31,31',
'31,31,31,,31,31,,,465,31,,,,,,465,465,465,,,465,465,465,,465,,,,,31',
',,31,,465,31,,,,,31,,,465,465,,465,465,465,465,465,,,,,,,31,31,31,31',
'31,31,,,,31,31,,,,,,,,31,,,,,,31,31,465,,462,,,,,465,,462,462,462,465',
'465,462,462,462,,462,,,,,,,,,,462,,,,,,465,,,462,462,,462,462,462,462',
'462,,,465,,465,,,465,,,,,,,,,,,,,,,,,,,,,,,,,462,,,,,,,462,,,,,462,462',
',,,,,,,,,,,,,,,,,,,,462,,,,,,,,,,,,,462,,462,,,462,382,382,382,382,382',
'382,382,382,,,382,382,382,382,382,,,382,382,382,382,382,382,382,,,382',
'382,382,382,382,382,382,382,382,382,382,382,382,382,382,382,382,382',
'382,382,382,382,382,,,382,,,,,,,,382,382,,382,382,382,382,382,382,382',
',,382,,,,,382,382,382,382,,,,,,,,,,,,,382,382,,382,382,382,382,382,382',
'382,382,382,382,382,,,382,382,386,386,386,386,386,386,386,386,,382,386',
'386,386,386,386,,,386,386,386,386,386,386,386,,,386,386,386,386,386',
'386,386,386,386,386,386,386,386,386,386,386,386,386,386,386,386,386',
'386,,,386,,,,,,,,386,386,,386,386,386,386,386,386,386,,,386,,,,,386',
'386,386,386,,,,,,,,,,,,,386,386,,386,386,386,386,386,386,386,386,386',
'386,386,,,386,386,6,6,6,6,6,6,6,6,,386,6,6,6,6,6,,,6,6,6,6,6,6,6,,,6',
'6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,,6,,,,,,,,6,6,,6,6,6,6',
'6,6,6,,,6,,,,,6,6,6,6,,,,,,,,,,,,,6,6,,6,6,6,6,6,6,6,6,6,6,6,,,6,6,7',
'7,7,7,7,7,7,7,,6,7,7,7,7,7,,,7,7,7,7,7,7,7,,,7,7,7,7,7,7,7,7,7,7,7,7',
'7,7,7,7,7,7,7,7,7,7,7,,,7,,,,,,,,7,7,,7,7,7,7,7,7,7,,,7,,,,,7,7,7,7',
',,,,,,,,,,,,7,7,,7,7,7,7,7,7,7,7,7,7,7,,,7,7,79,79,79,79,79,79,79,79',
',7,79,79,79,79,79,,,79,79,79,79,79,79,79,,,79,79,79,79,79,79,79,79,79',
'79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,,,,,,,79,79,,79',
'79,79,79,79,79,79,,,79,,,,,79,79,79,79,,,,,,,,,,,,,79,79,,79,79,79,79',
'79,79,79,79,79,79,79,,,79,65,65,65,65,65,65,65,65,,,65,65,65,65,65,',
',65,65,65,65,65,65,65,,,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65',
'65,65,65,65,65,65,65,65,65,65,65,65,,,,,,,65,65,,65,65,65,65,65,65,65',
',,65,,,,,65,65,65,65,,,,,,65,,,,,,,65,65,,65,65,65,65,65,65,65,65,65',
'65,65,,,65,185,185,185,185,185,185,185,185,,,185,185,185,185,185,,,185',
'185,185,185,185,185,185,,,185,185,185,185,185,185,185,185,185,185,185',
'185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,,,,',
',,185,185,,185,185,185,185,185,185,185,,,185,,,,,185,185,185,185,,,',
',,,,,,,,,185,185,,185,185,185,185,185,185,185,185,185,185,185,,,185',
'686,686,686,686,686,686,686,686,,,686,686,686,686,686,,,686,686,686',
'686,686,686,686,,,686,686,686,686,686,686,686,686,686,686,686,686,686',
'686,686,686,686,686,686,686,686,686,686,,,686,,,,,,,,686,686,,686,686',
'686,686,686,686,686,,,686,,,,,686,686,686,686,,,,,,,,,,,,,686,686,,686',
'686,686,686,686,686,686,686,686,686,686,670,670,686,,670,,,,,,,,670',
'670,,670,670,670,670,670,670,670,,,670,,,,,670,670,670,670,,,,,,670',
',,,,,,670,670,,670,670,670,670,670,670,670,670,670,670,670,256,256,670',
',256,,,,,,,,256,256,,256,256,256,256,256,256,256,,,256,,,,,256,256,256',
'256,,,,,,,,,,,,,256,256,,256,256,256,256,256,256,256,256,256,256,256',
'496,496,256,,496,,,,,,,,496,496,,496,496,496,496,496,496,496,,,496,',
',,,496,496,496,496,,,,,,496,,,,,,,496,496,,496,496,496,496,496,496,496',
'496,496,496,496,257,257,496,,257,,,,,,,,257,257,,257,257,257,257,257',
'257,257,,,257,,,,,257,257,257,257,,,,,,,,,,,,,257,257,,257,257,257,257',
'257,257,257,257,257,257,257,497,497,257,,497,,,,,,,,497,497,,497,497',
'497,497,497,497,497,,,497,,,,,497,497,497,497,,,,,,,,,,,,,497,497,,497',
'497,497,497,497,497,497,497,497,497,497,668,668,497,,668,,,,,,,,668',
'668,,668,668,668,668,668,668,668,,,668,,,,,668,668,668,668,,,,,,,,,',
',,,668,668,,668,668,668,668,668,668,668,668,668,668,668,195,195,668',
',195,,,,,,,,195,195,,195,195,195,195,195,195,195,,,195,,,,,195,195,195',
'195,,,,,,,,,,,,,195,195,,195,195,195,195,195,195,195,195,195,195,195',
'194,194,195,,194,,,,,,,,194,194,,194,194,194,194,194,194,194,,,194,',
',,,194,194,194,194,,,,,,194,,,,,,,194,194,,194,194,194,194,194,194,194',
'194,194,194,194,418,418,194,,418,,,,,,,,418,418,,418,418,418,418,418',
'418,418,,,418,,,,,418,418,418,418,,,,,,,,,,,,,418,418,,418,418,418,418',
'418,418,418,418,418,418,418,849,849,418,,849,,,,,,,,849,849,,849,849',
'849,849,849,849,849,,,849,,,,,849,849,849,849,,,,,,849,,,,,,,849,849',
',849,849,849,849,849,849,849,849,849,849,849,850,850,849,,850,,,,,,',
',850,850,,850,850,850,850,850,850,850,,,850,,,,,850,850,850,850,,,,',
',,,,,,,,850,850,,850,850,850,850,850,850,850,850,850,850,850,487,487',
'850,,487,,,,,,,,487,487,,487,487,487,487,487,487,487,,,487,,,,,487,487',
'487,487,,,,,,487,,,,,,,487,487,,487,487,487,487,487,487,487,487,487',
'487,487,612,612,487,,612,,,,,,,,612,612,,612,612,612,612,612,612,612',
',,612,,,,,612,612,612,612,,,,,,,,,,,,,612,612,,612,612,612,612,612,612',
'612,612,612,612,612,488,488,612,,488,,,,,,,,488,488,,488,488,488,488',
'488,488,488,,,488,,,,,488,488,488,488,,,,,,,,,,,,,488,488,,488,488,488',
'488,488,488,488,488,488,488,488,742,742,488,,742,,,,,,,,742,742,,742',
'742,742,742,742,742,742,,,742,,,,,742,742,742,742,,,,,,,,,,,,,742,742',
',742,742,742,742,742,742,742,742,742,742,742,417,417,742,,417,,,,,,',
',417,417,,417,417,417,417,417,417,417,,,417,,,,,417,417,417,417,,,,',
',417,,,,,,,417,417,,417,417,417,417,417,417,417,417,417,417,417,613',
'613,417,,613,,,,,,,,613,613,,613,613,613,613,613,613,613,,,613,,,,,613',
'613,613,613,,,,,,,,,,,,,613,613,,613,613,613,613,613,613,613,613,613',
'613,613,,,613' ]
        racc_action_check = arr = ::Array.new(21438, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_action_pointer = [
    -2,  1142,   nil,   -55,   nil,   972, 19777, 19887,  1012,  1008,
   983,   976,  1020,    25,   159,   413,   nil,  1723,  1845,   863,
  1040,   nil,  2211,  2339,  2467,   581,    69,  2835,  2963,   nil,
  3089, 19292,  3333,   nil,   934,   132,   971,   420,  3949,  4071,
  4193,   895,   459,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
  4555,   nil,  4688,  4810,  4938,   -13,  2929,  5316,  5438,   nil,
   nil,  5560,  1470,   865,   nil, 20106,   nil,   nil,   nil,   nil,
   nil,   -41,   nil,   nil,   nil,   nil,   nil,   815,   812, 19997,
   nil,   nil,   nil,  6548,   nil,   nil,  6676,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   909,   nil,  6926,   nil,
   nil,   nil,  7048,  7170,  7292,  7414,  7536,   nil,   546,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil, 20215,   762,   nil,  8024,  8146,
  8268,  8390,  8512,  8634, 20796, 20737,  9006,  9128,  9250,   nil,
   495,   -44,   780,   107,   687,   673, 10104, 10226,   nil,   nil,
 10348,   661, 10592, 10714, 10836, 10958, 11080, 11202, 11324, 11446,
 11568, 11690, 11812, 11934, 12056, 12178, 12300, 12422, 12544, 12666,
 12788, 12910, 13032, 13154, 13276, 13398, 13520, 13642,   nil,   nil,
   nil,  2339,   nil,   569,   545,   nil, 14130,   575, 14374,   nil,
   nil,   nil,   nil, 14496,   nil,   nil, 20442, 20560,   543, 14990,
 15118,   nil,   nil,   nil,   nil,   nil,   nil,   nil, 15246,   515,
 15502,   498,   475,   419, 15990, 16112,   508,   523,  1023,   524,
   112,    89,   120,   nil,   151,   268,   nil,   nil,   254,   605,
   640,   525,   nil,   652,   nil, 17949,   nil, 18071,   -29,   nil,
   607,   676,   686,   372,   717,   nil,   466,   nil,   nil,   521,
  2830,   nil,   nil,   706,   709,   712,   nil,   nil,   743,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   850,   nil,   nil,   898,
   487,    62,    -7, 18193, 17704,   336,   273,   832,   961,   nil,
 15624,   nil, 14868,   620,   611,   589,   334,   555,   379,   644,
   579,   nil,   483,   nil,   nil,  6804,   nil,   370,   nil,   278,
   nil,   450,   971,   248,   nil,   972,   -43,   nil,   105,   nil,
   nil,   nil,   nil,   nil,   nil,  1001,   nil,   nil,   nil,   nil,
   nil,   nil, 19557,   nil,   nil,   nil, 19667,   988,  1024,   nil,
   nil,   370,   nil,  5932,  1009,   nil,  1020,   nil,   nil,  2595,
  1055,   161,   128,  1475,   nil,   nil,   nil,   980,  1056,   608,
   nil,   498,   370,   nil,   741,   nil,   nil, 21268, 20855,   120,
    15,   248,   863,  2717,     1,   nil,  3333,  3949,   311,   654,
   937,   933,   826,   786,  4938,  4810,  4833,  4315,  4506,  4688,
  3211,  3455,  3577,  3699,  3821,  4437,  3089,   907,   936,  4071,
  4193,  1357,   116,   nil,  3821,   nil,   nil,  5066,   nil,  5810,
   nil,   nil, 19431,   nil,   nil, 19354,   -39,   nil,  1031,   979,
   750,   974,  1071,   nil,   nil,  6054,   157,   132,  1008,   nil,
  1006,   968,   nil,   nil,   nil,  1004,  6420, 21032, 21150,   563,
   978,   nil,   nil,  7780,  8762,  8884, 20501, 20619,  2717, 10470,
  1026,  1014,   902,   nil, 14008,   nil,   nil, 14618,   nil,   nil,
   nil,   nil,   nil, 14746, 16600,   894,   nil,  2284,   nil,   809,
   nil,   nil,   260, 16850,   nil,   nil, 16972,   945,   nil,   nil,
 17094,    39,   103,   926,   899, 19170,   nil,   nil,    -2,   796,
   nil,   557,   nil,    33,  3211,   nil,   976,   nil,   nil,   nil,
     3,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   215,   nil,   nil,   nil,   703,   nil,   nil,   nil,   nil,
   nil, 19048,   703, 18926,   -62, 18804, 18682,   727,   nil,   nil,
   nil, 18560,   662,   nil, 18438,   162,   -16, 18311, 17822,   615,
   248,   nil, 17582,   nil,   671,   nil, 17460,   455,   nil,   345,
 17338,   nil,   328,   nil,   nil,   nil,   nil,   nil, 17216,   nil,
   252,   220, 21091, 21327, 16722,  1107,    55,   nil,   nil,    70,
 16478, 16356,   nil,     3,   nil,    53,   -24,   320,   106,   437,
   553,   132,  2467,   197,   210,   -11,   322, 16234,   nil,   nil,
   nil,   233,   349,   nil,   245,   253,   nil,   nil,   269,   nil,
   273,   507,   362,   498,   nil,   446,   nil,   nil,   nil,   nil,
   nil,   471,   nil,   524, 15868, 15746,   497,   nil, 20678, 15374,
 20383,   nil,   nil, 14252,   217,   -25, 13886, 13764,   685,   161,
   596,   602,   603,   nil,   609,   nil, 20324,   662,   899,  9982,
   nil,   nil,   nil,  2211,   658,  9860,  9738,   nil,  2089,   nil,
  1967,   nil,   nil,  1845,   nil,  1723,  9616,  9494,  9372,   -29,
  1601,   nil,   746,   850,   nil,   nil,   751,   nil,   nil,   781,
   784,   741,   852,  7902,   nil,   779,   880,   461,   nil,   890,
   nil,  7658,   776,   817,   nil,   nil,   nil,   nil,   571,   nil,
   nil,   nil, 21209,   nil,   911,   nil,   nil,   914,  6298,  6176,
   nil,   nil,    70,   120,   489,   nil,   861,   865,  5688,   -44,
   nil,   nil,   963,   964,   859,   nil,  2412,   nil,   604,   nil,
   nil,  5194,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   882,
   870,   nil,  1235,  4437,   nil,   nil,   nil,   915,   879,   nil,
   nil,   nil,  4315,   nil,   nil,    86,  3699,   nil,   901,   945,
   nil,  3577,   nil,  1025,  1049,  3455,  2595,   nil,   nil,  1057,
   nil,  2089,   nil,   nil,   981,   949,   -67,   953,   954,   nil,
   nil,  2897,   nil,   nil,   nil,  1967,   nil,  1601,   421,   380,
  1042,   248,   nil,   nil,    93,   nil,   nil,   259,  1357,   nil,
  1091,   nil,   443,   nil,   nil,   nil,  1235,  1099,  1107, 20914,
 20973,   -13,   741,   nil,   nil,   nil,  1112,   nil,   998,  1122,
   nil,  1041,    63,    74,    78,   491,   561,   nil,   nil,   nil,
   580,   nil ]

racc_action_default = [
  -494,  -496,    -1,  -483,    -4,    -5,  -496,  -496,  -496,  -496,
  -496,  -496,  -496,  -496,  -251,   -31,   -32,  -496,  -496,   -37,
   -39,   -40,  -262,  -301,  -302,   -44,  -229,  -229,  -229,   -56,
  -494,   -60,   -65,   -66,  -496,  -425,  -496,  -496,  -496,  -496,
  -496,  -485,  -211,  -244,  -245,  -246,  -247,  -248,  -249,  -250,
  -473,  -253,  -496,  -494,  -494,  -270,  -494,  -496,  -496,  -275,
  -278,  -483,  -496,  -287,  -293,  -496,  -303,  -304,  -370,  -371,
  -372,  -373,  -374,  -494,  -377,  -494,  -494,  -494,  -494,  -494,
  -404,  -410,  -411,  -414,  -415,  -416,  -417,  -418,  -419,  -420,
  -421,  -422,  -423,  -424,  -427,  -428,  -496,    -3,  -484,  -490,
  -491,  -492,  -496,  -496,  -496,  -496,  -496,    -7,  -496,   -90,
   -91,   -92,   -93,   -94,   -95,   -96,   -99,  -100,  -101,  -102,
  -103,  -104,  -105,  -106,  -107,  -108,  -109,  -110,  -111,  -112,
  -113,  -114,  -115,  -116,  -117,  -118,  -119,  -120,  -121,  -122,
  -123,  -124,  -125,  -126,  -127,  -128,  -129,  -130,  -131,  -132,
  -133,  -134,  -135,  -136,  -137,  -138,  -139,  -140,  -141,  -142,
  -143,  -144,  -145,  -146,  -147,  -148,  -149,  -150,  -151,  -152,
  -153,  -154,  -155,  -156,  -157,  -158,  -159,  -160,  -161,  -162,
  -163,  -164,  -165,  -166,  -167,  -496,   -12,   -97,  -494,  -494,
  -496,  -496,  -496,  -494,  -496,  -496,  -496,  -496,  -496,   -35,
  -496,  -425,  -496,  -251,  -496,  -496,  -494,  -496,   -36,  -203,
  -496,  -496,  -496,  -496,  -496,  -496,  -496,  -496,  -496,  -496,
  -496,  -496,  -496,  -496,  -496,  -496,  -496,  -496,  -496,  -496,
  -496,  -496,  -496,  -496,  -496,  -496,  -496,  -496,  -341,  -343,
   -41,  -212,  -222,  -495,  -495,  -226,  -496,  -237,  -496,  -262,
  -301,  -302,  -467,  -496,   -42,   -43,  -496,  -496,   -48,  -494,
  -496,  -269,  -346,  -353,  -355,   -54,  -351,   -55,  -496,   -56,
  -494,  -496,  -496,   -61,   -63,  -494,   -70,  -496,  -496,   -77,
  -265,  -485,  -496,  -305,  -352,  -496,   -64,   -68,  -258,  -412,
  -413,  -496,  -188,  -189,  -204,  -496,  -486,  -494,  -485,  -213,
  -487,  -487,  -496,  -487,  -496,  -464,  -487,  -271,  -272,  -496,
  -496,  -316,  -317,  -461,  -461,  -461,  -333,  -334,  -447,  -443,
  -444,  -445,  -446,  -448,  -453,  -454,  -456,  -457,  -458,  -496,
   -38,  -496,  -496,  -496,  -496,  -483,  -496,  -484,  -496,  -325,
  -496,  -290,  -496,   -90,   -91,  -127,  -128,  -144,  -149,  -156,
  -159,  -296,  -496,  -425,  -462,  -496,  -375,  -496,  -390,  -496,
  -392,  -496,  -496,  -496,  -382,  -496,  -496,  -388,  -496,  -403,
  -405,  -406,  -407,  -408,   872,    -6,  -493,   -13,   -14,   -15,
   -16,   -17,  -496,    -9,   -10,   -11,  -496,  -496,  -496,   -20,
   -28,  -168,  -237,  -496,  -496,   -21,   -29,   -30,   -22,  -170,
  -496,  -474,  -475,  -229,  -348,  -476,  -477,  -474,  -229,  -475,
  -350,  -479,  -480,   -27,  -177,   -33,   -34,  -496,  -496,  -494,
  -258,  -496,  -496,  -496,  -496,  -268,  -178,  -179,  -180,  -181,
  -182,  -183,  -184,  -185,  -190,  -191,  -192,  -193,  -194,  -195,
  -196,  -197,  -198,  -199,  -200,  -201,  -202,  -205,  -206,  -207,
  -208,  -496,  -494,  -223,  -496,  -236,  -224,  -496,  -234,  -496,
  -238,  -470,  -229,  -474,  -475,  -229,  -494,   -49,  -496,  -485,
  -485,  -495,  -222,  -230,  -231,  -496,  -494,  -494,  -496,  -264,
  -496,   -57,  -256,   -69,   -62,  -496,  -494,  -496,  -496,   -76,
  -496,  -412,  -413,  -496,  -496,  -496,  -496,  -496,  -209,  -496,
  -362,  -496,  -496,  -214,  -489,  -488,  -215,  -489,  -260,  -466,
  -261,  -465,  -313,  -494,  -494,  -496,  -315,  -496,  -329,  -496,
  -331,  -332,  -496,  -496,  -455,  -459,  -494,  -306,  -307,  -308,
  -494,  -496,  -496,  -496,  -496,  -494,  -357,  -284,   -86,  -496,
   -88,  -496,  -251,  -496,  -496,  -294,  -442,  -298,  -481,  -482,
  -485,  -376,  -391,  -394,  -395,  -397,  -378,  -393,  -379,  -380,
  -381,  -496,  -384,  -386,  -387,  -496,  -409,    -8,   -98,   -18,
   -19,  -496,  -243,  -496,  -259,  -496,  -496,   -50,  -220,  -221,
  -347,  -496,   -52,  -349,  -496,  -474,  -475,  -474,  -475,  -496,
  -168,  -267,  -496,  -337,  -496,  -339,  -494,  -495,  -235,  -239,
  -496,  -468,  -496,  -469,   -45,  -344,   -46,  -345,  -494,  -216,
  -496,  -496,  -496,  -496,  -496,   -37,  -496,  -228,  -232,  -496,
  -494,  -494,  -263,   -57,   -67,  -496,  -474,  -475,  -494,  -478,
   -75,  -496,  -176,  -186,  -187,  -496,  -494,  -494,  -254,  -255,
  -239,  -496,  -496,  -314,  -461,  -461,  -449,  -460,  -461,  -335,
  -496,  -336,  -496,  -494,  -309,  -494,  -276,  -310,  -311,  -312,
  -279,  -496,  -282,  -496,  -496,  -496,   -86,   -87,  -496,  -494,
  -496,  -288,  -429,  -496,  -496,  -496,  -494,  -494,  -442,  -496,
  -461,  -461,  -461,  -441,  -447,  -451,  -496,  -496,  -496,  -494,
  -383,  -385,  -389,  -169,  -241,  -496,  -496,   -24,  -172,   -25,
  -173,   -51,   -26,  -174,   -53,  -175,  -496,  -496,  -496,  -259,
  -210,  -338,  -496,  -496,  -225,  -240,  -496,  -217,  -218,  -494,
  -494,  -485,  -496,  -496,  -233,  -496,  -496,   -71,  -266,  -494,
  -323,  -494,  -363,  -494,  -364,  -365,  -318,  -319,  -496,  -327,
  -328,  -330,  -496,  -258,  -496,  -320,  -321,  -496,  -494,  -494,
  -281,  -283,  -496,  -496,   -86,   -89,  -478,  -496,  -494,  -496,
  -431,  -291,  -496,  -496,  -485,  -433,  -496,  -437,  -496,  -439,
  -440,  -496,  -299,  -463,  -396,  -399,  -400,  -401,  -402,  -496,
  -242,   -23,  -171,  -496,  -340,  -342,   -47,  -496,  -495,  -354,
  -356,    -2,  -494,  -369,  -324,  -496,  -496,  -367,  -461,  -257,
  -273,  -496,  -274,  -496,  -496,  -496,  -494,  -285,  -259,  -496,
  -430,  -494,  -295,  -297,  -496,  -461,  -461,  -461,  -496,  -452,
  -450,  -442,  -398,  -219,  -227,  -496,  -368,  -494,   -78,  -496,
  -496,   -85,  -366,  -326,  -496,  -277,  -280,  -494,  -494,  -289,
  -496,  -432,  -496,  -435,  -436,  -438,  -494,  -362,  -494,  -496,
  -496,   -84,  -494,  -358,  -359,  -360,  -496,  -292,  -461,  -496,
  -361,  -496,  -474,  -475,  -478,   -83,  -494,  -286,  -434,  -300,
   -79,  -322 ]

clist = [
'26,302,283,283,456,112,112,295,338,301,306,534,677,262,266,2,470,26',
'26,316,526,530,26,26,26,316,97,101,501,636,26,680,351,390,397,199,271',
'258,265,267,115,115,243,243,243,272,370,107,187,646,467,311,26,286,240',
'254,255,26,26,269,601,26,598,649,112,598,605,656,660,607,298,242,242',
'242,303,330,330,729,112,330,744,375,552,617,336,101,331,332,562,381',
'335,819,801,596,667,619,747,645,26,648,352,547,26,26,26,26,26,608,359',
'361,601,543,368,545,35,297,333,620,621,748,330,330,330,330,503,506,682',
'509,334,749,511,377,378,379,380,665,838,340,758,544,811,400,342,676',
'35,276,276,546,686,301,821,309,370,512,308,403,408,473,208,671,644,273',
'354,680,382,819,186,452,476,477,853,664,733,795,356,357,304,363,561',
'353,98,366,774,688,112,689,764,815,26,26,26,26,26,307,412,791,26,26',
'26,1,,,,387,388,,26,26,661,,394,394,35,,,415,416,462,465,,35,272,598',
'755,,424,,,,,,,,,518,520,521,,,,,,,,,283,,490,,,,,,,,,,,682,26,26,,',
',502,,,,26,262,26,266,,316,,26,480,,854,471,243,485,649,,,272,691,846',
'243,807,272,469,474,871,,484,,26,646,269,478,,35,35,269,515,680,,472',
'242,,283,,283,,,,242,798,,35,,,605,607,,,,,,389,395,398,26,26,,413,',
',,,,,,,,816,,817,,,330,330,,,26,,714,533,101,,,531,532,,,,589,,701,',
'721,14,550,704,301,860,,403,408,,112,,,35,112,,,276,35,579,,,,,583,',
',,,10,682,14,279,279,,,762,763,,597,35,,,577,,115,412,,582,115,,858',
'567,,,,568,,,10,,,598,625,610,611,,,,,806,301,,,,,,628,579,,,579,,353',
',353,628,,,,,,,,,,,,,14,,,604,,26,606,,14,,734,,,,827,,,412,,809,,,',
'298,283,,412,,10,26,,,,,,,10,,,683,,,855,26,26,,687,635,,,,,,852,,,26',
',641,642,26,,,,,26,,,,,712,653,840,,26,655,,,824,,663,,,,,657,657,316',
',,14,14,675,,,739,740,672,,741,597,,,719,720,26,26,859,14,,12,26,,,',
',,,10,10,,,,,,,26,,,,,767,769,770,,,10,,26,,12,713,,,26,579,,757,583',
',26,26,,716,,301,,35,35,,,628,,,,725,726,353,,,35,683,14,,35,,279,14',
',35,,,,772,,,,394,,,,,,722,,26,,412,,14,10,,,26,,10,26,26,12,,,,,330',
'752,112,12,787,,26,,330,,,753,,26,10,760,761,,,759,765,779,,579,579',
',,35,,542,,542,697,699,,,833,,702,35,,,,,,,,814,26,,,35,35,843,844,845',
',,412,,788,,,794,,26,26,,,,,,,,,26,,,,,803,804,,,283,12,12,,,,,,,,657',
',868,,,,810,683,,12,,,,35,35,26,,,,861,,,,,26,,35,301,,26,826,,,628',
'26,,,,392,396,,,330,,837,,,,,,26,,,834,,,,,,781,,26,,,,847,,,35,26,',
',412,12,,26,856,,12,,,,,,,35,35,,,,866,,,,458,35,460,,,,12,461,,,,,',
',14,14,,,,,,,,,542,,,14,,,,14,,,,35,14,,,828,,,10,10,,,,,,35,,,,,35',
'10,,,,10,,,,,10,,,,,,35,,,,,,,,,,,35,,,,,,,,35,,,,299,305,35,312,14',
',,,,,,,,,,,14,,,,358,,360,360,364,367,360,,14,14,,,10,,,,,,,,,,,,10',
',,,,,,,,,572,,10,10,,,,,,,,,,,,,,,,,,,,,,,,,,,14,14,,,,,,,,,,,778,14',
',,,,,,,,,,,,,,10,10,,599,,,602,,603,,,,,10,,,,12,12,,,,,,616,,,14,299',
',12,,,,12,,,,,12,,,,,14,14,,,,,,,,640,14,10,602,,,,,,,,,,,,,,,,10,10',
',,,,,,,,10,,,,,,14,,,,831,,468,,,,,,12,,14,,,,,14,,,,,12,,,,10,,,,832',
',694,14,12,12,,,,,10,,,,14,10,,,,,,,14,,,,,,14,715,,10,,,,,,,,,,,10',
'599,,,,,,,10,,13,,,,10,,,,12,12,,,,,732,,,200,200,,,12,200,200,200,',
',,,,13,277,277,,,,,,,,,392,,,,,,,,,,,200,,,,,200,200,,,200,,12,,,578',
',,,,,780,,,,,,,,12,12,299,,,,,,,,12,,,,,,,,13,,392,,200,200,200,200',
'13,,,,,,,,,593,,,,,,,,,12,578,,,578,593,,,,,,,,,12,593,593,,,12,,,,',
'820,299,,,,,,,,,,12,,,,,,,,,,,12,,,,,,,,12,,,,640,,12,,,,13,13,200,200',
'200,,,,200,200,200,,,,640,,,,13,200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,200,200,,,,,,,,200,,13,,,,277,13,,,,,,,,,,,,,,,,578',
',,,,,13,,730,735,,,,,,,,,,,,,,,,730,,730,,,,,,,,,,,,,,299,200,200,,',
',,,541,,541,,,,,,,,,,,,,200,,,,,,,,,,,,,,,,,,,,,,,,,,,578,578,,,,,,',
',,793,,,,797,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,209,,,,241',
'241,241,,,,,,,,,,,,,,292,293,294,,,,,,,,,200,,,,241,241,,,,,,,,,,,,',
',,,,,,200,730,,,,,,,,,,,299,,13,13,,,,,,,,,651,,,13,,,730,13,,,,,13',
',,,,,,,,200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,200,200,,,,,200,,,,,,,,,,',
',,,,13,,,,,,,,,,,,13,,,,,,200,,391,241,399,241,13,13,414,,,,,,,,,,,',
',,209,,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441',
'442,443,444,445,446,447,448,449,450,451,,200,,,,,,,241,200,241,,13,13',
',241,,,,,,241,241,,,13,,,,,241,,200,,,,,,,,,,,,,,,,,,,,,,,,,498,,,,',
',,,,,13,,,,,,,,,,,,,,,,,13,13,,,,,,,,,13,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,13,,,,829,,,,,200,,,,,13,,,,,13,,,,,,,,241,,,,,,,,13,,,,,,,,,',
',13,,,,,,,241,13,414,590,399,,,13,,,,,,,,,,,,,,,,,,,,,,,,,,,,241,,,241',
',241,,,,,,,,,,,,,,,,615,,,,,,,,,,,241,,,,,,,632,633,634,,,,,,,,,241',
',,241,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',693,,241,,698,700,,,,,703,,,705,,,,,,,,710,,,,,,,,241,,,,,,,,,,,,,',
'241,,,,,,,,,,,,,,,,,,,,,,,241,,,,,,,,,,,,,,,,,,,,,,,,,,,241,,,,,241',
',,,,,,,,,,,,,,,,,,,,,,,,,241,782,,,,,,,,,,698,700,703,,,,,,,,,,,,,,',
'241,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,241,,,,,,,,,,,,782',
',,,,,,,,,,,,,,,,,,,,,241,,,,,,,,,,,,,,,,,,,,241,,,,,,,,,,,,,,,,,,,,',
',,241' ]
        racc_goto_table = arr = ::Array.new(2523, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'35,20,49,49,55,45,45,48,76,52,52,75,79,53,53,2,30,35,35,106,72,72,35',
'35,35,106,8,78,3,4,35,102,44,22,22,24,37,32,32,32,47,47,50,50,50,2,44',
'12,12,133,33,100,35,40,29,29,29,35,35,36,137,35,56,107,45,56,54,74,74',
'54,24,27,27,27,50,24,24,5,45,24,73,10,125,56,8,78,14,14,125,10,14,134',
'101,34,42,57,5,104,35,104,80,81,35,35,35,35,35,34,122,122,137,43,122',
'43,41,82,83,34,34,84,24,24,24,24,51,51,104,51,85,86,51,14,14,14,14,87',
'88,89,90,91,92,20,93,94,41,41,41,95,96,52,97,98,44,99,71,31,31,58,16',
'77,103,39,67,102,25,134,13,109,111,112,113,114,115,116,120,121,68,123',
'124,41,11,126,127,128,45,129,131,132,35,35,35,35,35,69,45,6,35,35,35',
'1,,,,2,2,,35,35,75,,50,50,41,,,24,24,31,31,,41,2,56,42,,24,,,,,,,,,105',
'105,105,,,,,,,,,49,,48,,,,,,,,,,,104,35,35,,,,48,,,,35,53,35,53,,106',
',35,37,,5,50,50,37,107,,,2,125,79,50,74,2,29,29,73,,40,,35,133,36,29',
',41,41,36,100,102,,27,27,,49,,49,,,,27,104,,41,,,54,54,,,,,,16,16,16',
'35,35,,16,,,,,,,,,,104,,104,,,24,24,,,35,,55,8,78,,,14,14,,,,20,,33',
',30,21,24,33,52,4,,31,31,,45,,,41,45,,,41,41,53,,,,,53,,,,,15,104,21',
'21,21,,,3,3,,52,41,,,32,,47,45,,32,47,,104,12,,,,12,,,15,,,56,20,48',
'48,,,,,72,52,,,,,,31,53,,,53,,41,,41,31,,,,,,,,,,,,,21,,,32,,35,32,',
'21,,22,,,,72,,,45,,3,,,,24,49,,45,,15,35,,,,,,,15,,,106,,,75,35,35,',
'48,24,,,,,,72,,,35,,2,2,35,,,,,35,,,,,76,2,3,,35,2,,,55,,2,,,,,78,78',
'106,,,21,21,24,,,105,105,78,,105,52,,,31,31,35,35,3,21,,18,35,,,,,,',
'15,15,,,,,,,35,,,,,105,105,105,,,15,,35,,18,2,,,35,53,,20,53,,35,35',
',2,,52,,41,41,,,31,,,,2,2,41,,,41,106,21,,41,,21,21,,41,,,,44,,,,50',
',,,,,27,,35,,45,,21,15,,,35,,15,35,35,18,,,,,24,50,45,18,48,,35,,24',
',,14,,35,15,78,78,,,14,78,2,,53,53,,,41,,21,,21,16,16,,,105,,16,41,',
',,,,,,48,35,,,41,41,105,105,105,,,45,,50,,,2,,35,35,,,,,,,,,35,,,,,2',
'2,,,49,18,18,,,,,,,,78,,105,,,,78,106,,18,,,,41,41,35,,,,20,,,,,35,',
'41,52,,35,2,,,31,35,,,,23,23,,,24,,2,,,,,,35,,,14,,,,,,16,,35,,,,2,',
',41,35,,,45,18,,35,2,,18,,,,,,,41,41,,,,2,,,,23,41,23,,,,18,23,,,,,',
',21,21,,,,,,,,,21,,,21,,,,21,,,,41,21,,,41,,,15,15,,,,,,41,,,,,41,15',
',,,15,,,,,15,,,,,,41,,,,,,,,,,,41,,,,,,,,41,,,,9,9,41,9,21,,,,,,,,,',
',,21,,,,9,,9,9,9,9,9,,21,21,,,15,,,,,,,,,,,,15,,,,,,,,,,23,,15,15,,',
',,,,,,,,,,,,,,,,,,,,,,,,21,21,,,,,,,,,,,21,21,,,,,,,,,,,,,,,15,15,,23',
',,23,,23,,,,,15,,,,18,18,,,,,,23,,,21,9,,18,,,,18,,,,,18,,,,,21,21,',
',,,,,,23,21,15,23,,,,,,,,,,,,,,,,15,15,,,,,,,,,15,,,,,,21,,,,21,,9,',
',,,,18,,21,,,,,21,,,,,18,,,,15,,,,15,,23,21,18,18,,,,,15,,,,21,15,,',
',,,,21,,,,,,21,23,,15,,,,,,,,,,,15,23,,,,,,,15,,19,,,,15,,,,18,18,,',
',,23,,,19,19,,,18,19,19,19,,,,,,19,19,19,,,,,,,,,23,,,,,,,,,,,19,,,',
',19,19,,,19,,18,,,9,,,,,,23,,,,,,,,18,18,9,,,,,,,,18,,,,,,,,19,,23,',
'19,19,19,19,19,,,,,,,,,9,,,,,,,,,18,9,,,9,9,,,,,,,,,18,9,9,,,18,,,,',
'23,9,,,,,,,,,,18,,,,,,,,,,,18,,,,,,,,18,,,,23,,18,,,,19,19,19,19,19',
',,,19,19,19,,,,23,,,,19,19,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,19,19,,,,,,,,19,,19,,,,19,19,,,,,,,,,,,,,,,,9,,,,,,19,,9,9',
',,,,,,,,,,,,,,,9,,9,,,,,,,,,,,,,,9,19,19,,,,,,19,,19,,,,,,,,,,,,,19',
',,,,,,,,,,,,,,,,,,,,,,,,,,9,9,,,,,,,,,9,,,,9,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,26,,,,26,26,26,,,,,,,,,,,,,,26,26,26,,,,,,,',
',19,,,,26,26,,,,,,,,,,,,,,,,,,,19,9,,,,,,,,,,,9,,19,19,,,,,,,,,19,,',
'19,,,9,19,,,,,19,,,,,,,,,19,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,19,19,,,,',
'19,,,,,,,,,,,,,,,19,,,,,,,,,,,,19,,,,,,19,,26,26,26,26,19,19,26,,,,',
',,,,,,,,,26,,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26',
'26,26,26,26,26,26,26,,19,,,,,,,26,19,26,,19,19,,26,,,,,,26,26,,,19,',
',,,26,,19,,,,,,,,,,,,,,,,,,,,,,,,,26,,,,,,,,,,19,,,,,,,,,,,,,,,,,19',
'19,,,,,,,,,19,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,19,,,,19,,,,,19,,,,,19',
',,,,19,,,,,,,,26,,,,,,,,19,,,,,,,,,,,19,,,,,,,26,19,26,26,26,,,19,,',
',,,,,,,,,,,,,,,,,,,,,,,,,26,,,26,,26,,,,,,,,,,,,,,,,26,,,,,,,,,,,26',
',,,,,,26,26,26,,,,,,,,,26,,,26,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,26,,26,,26,26,,,,,26,,,26,,,,,,,,26,,,,,,',
',26,,,,,,,,,,,,,,26,,,,,,,,,,,,,,,,,,,,,,,26,,,,,,,,,,,,,,,,,,,,,,,',
',,,26,,,,,26,,,,,,,,,,,,,,,,,,,,,,,,,,26,26,,,,,,,,,,26,26,26,,,,,,',
',,,,,,,,26,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,26,,,,,,,',
',,,,26,,,,,,,,,,,,,,,,,,,,,,26,,,,,,,,,,,,,,,,,,,,26,,,,,,,,,,,,,,,',
',,,,,,,26' ]
        racc_goto_check = arr = ::Array.new(2523, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_goto_pointer = [
   nil,   199,    15,  -269,  -471,  -559,  -534,   nil,    23,   911,
   -17,   177,    41,   159,    29,   400,   140,   nil,   580,  1248,
   -52,   372,  -157,   625,    18,    57,  1674,    49,   nil,    32,
  -243,   -39,    11,  -208,  -359,     0,    29,     6,   nil,   130,
    21,   114,  -445,  -229,   -33,    -1,   nil,    34,   -34,   -29,
    20,  -176,   -44,   -13,  -396,  -240,  -392,  -380,  -103,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    97,   122,   138,
   nil,    98,  -311,  -573,  -464,  -325,   -54,  -384,    24,  -534,
    35,  -251,    64,    57,  -537,    68,  -531,  -402,  -671,    74,
  -533,  -202,  -621,    78,  -402,  -204,  -399,  -622,    95,  -156,
    -5,  -654,  -515,  -357,  -420,   -79,   -37,  -456,   nil,   -71,
   nil,   -95,   -95,  -667,  -365,  -465,  -560,   nil,   nil,   nil,
   103,   102,    33,   100,  -185,  -275,   103,  -506,  -371,  -370,
   nil,  -492,  -579,  -468,  -677,   nil,   nil,  -397 ]

racc_goto_default = [
   nil,   nil,   500,   nil,   nil,   745,   nil,     3,   nil,     4,
     5,   337,   nil,   nil,   nil,   204,    16,    11,   205,   291,
   nil,   203,   nil,   247,    15,   nil,    19,    20,    21,   nil,
    25,   631,   nil,   nil,   nil,   282,    29,   nil,    31,    34,
    33,   201,   540,   nil,   114,   406,   113,    69,   nil,    42,
   300,   nil,   244,   404,   580,   453,   245,   nil,   nil,   260,
   455,    43,    44,    45,    46,    47,    48,    49,   nil,   261,
    55,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   527,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   339,   nil,   313,   314,   315,   nil,   647,   317,   239,   nil,
   410,   nil,   nil,   nil,   nil,   nil,   nil,    68,    70,    71,
    72,   nil,   nil,   nil,   nil,   557,   nil,   nil,   nil,   nil,
   369,   679,   681,   323,   685,   326,   329,   252 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 138, :_reduce_1,
  4, 140, :_reduce_2,
  2, 139, :_reduce_3,
  1, 144, :_reduce_4,
  1, 144, :_reduce_5,
  3, 144, :_reduce_6,
  0, 162, :_reduce_7,
  4, 147, :_reduce_8,
  3, 147, :_reduce_9,
  3, 147, :_reduce_none,
  3, 147, :_reduce_11,
  2, 147, :_reduce_12,
  3, 147, :_reduce_13,
  3, 147, :_reduce_14,
  3, 147, :_reduce_15,
  3, 147, :_reduce_16,
  3, 147, :_reduce_none,
  4, 147, :_reduce_none,
  4, 147, :_reduce_none,
  3, 147, :_reduce_20,
  3, 147, :_reduce_21,
  3, 147, :_reduce_22,
  6, 147, :_reduce_none,
  5, 147, :_reduce_24,
  5, 147, :_reduce_none,
  5, 147, :_reduce_none,
  3, 147, :_reduce_none,
  3, 147, :_reduce_28,
  3, 147, :_reduce_29,
  3, 147, :_reduce_30,
  1, 147, :_reduce_none,
  1, 161, :_reduce_none,
  3, 161, :_reduce_33,
  3, 161, :_reduce_34,
  2, 161, :_reduce_35,
  2, 161, :_reduce_36,
  1, 161, :_reduce_none,
  1, 151, :_reduce_none,
  1, 153, :_reduce_none,
  1, 153, :_reduce_none,
  2, 153, :_reduce_41,
  2, 153, :_reduce_42,
  2, 153, :_reduce_43,
  1, 165, :_reduce_none,
  4, 165, :_reduce_none,
  4, 165, :_reduce_none,
  4, 170, :_reduce_none,
  2, 164, :_reduce_48,
  3, 164, :_reduce_none,
  4, 164, :_reduce_50,
  5, 164, :_reduce_none,
  4, 164, :_reduce_52,
  5, 164, :_reduce_none,
  2, 164, :_reduce_54,
  2, 164, :_reduce_55,
  1, 154, :_reduce_56,
  3, 154, :_reduce_57,
  1, 174, :_reduce_58,
  3, 174, :_reduce_59,
  1, 173, :_reduce_60,
  2, 173, :_reduce_61,
  3, 173, :_reduce_62,
  2, 173, :_reduce_63,
  2, 173, :_reduce_64,
  1, 173, :_reduce_65,
  1, 176, :_reduce_66,
  3, 176, :_reduce_67,
  2, 175, :_reduce_68,
  3, 175, :_reduce_69,
  1, 177, :_reduce_70,
  4, 177, :_reduce_none,
  3, 177, :_reduce_none,
  3, 177, :_reduce_none,
  3, 177, :_reduce_none,
  3, 177, :_reduce_none,
  2, 177, :_reduce_none,
  1, 177, :_reduce_none,
  1, 152, :_reduce_78,
  4, 152, :_reduce_79,
  3, 152, :_reduce_80,
  3, 152, :_reduce_81,
  3, 152, :_reduce_82,
  3, 152, :_reduce_none,
  2, 152, :_reduce_none,
  1, 152, :_reduce_none,
  1, 179, :_reduce_none,
  2, 180, :_reduce_87,
  1, 180, :_reduce_88,
  3, 180, :_reduce_89,
  1, 181, :_reduce_none,
  1, 181, :_reduce_none,
  1, 181, :_reduce_none,
  1, 181, :_reduce_93,
  1, 181, :_reduce_94,
  1, 149, :_reduce_95,
  1, 149, :_reduce_96,
  1, 150, :_reduce_97,
  3, 150, :_reduce_98,
  1, 182, :_reduce_none,
  1, 182, :_reduce_none,
  1, 182, :_reduce_none,
  1, 182, :_reduce_none,
  1, 182, :_reduce_none,
  1, 182, :_reduce_none,
  1, 182, :_reduce_none,
  1, 182, :_reduce_none,
  1, 182, :_reduce_none,
  1, 182, :_reduce_none,
  1, 182, :_reduce_none,
  1, 182, :_reduce_none,
  1, 182, :_reduce_none,
  1, 182, :_reduce_none,
  1, 182, :_reduce_none,
  1, 182, :_reduce_none,
  1, 182, :_reduce_none,
  1, 182, :_reduce_none,
  1, 182, :_reduce_none,
  1, 182, :_reduce_none,
  1, 182, :_reduce_none,
  1, 182, :_reduce_none,
  1, 182, :_reduce_none,
  1, 182, :_reduce_none,
  1, 182, :_reduce_none,
  1, 182, :_reduce_none,
  1, 182, :_reduce_none,
  1, 182, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  3, 163, :_reduce_168,
  5, 163, :_reduce_none,
  3, 163, :_reduce_170,
  6, 163, :_reduce_171,
  5, 163, :_reduce_172,
  5, 163, :_reduce_none,
  5, 163, :_reduce_none,
  5, 163, :_reduce_none,
  4, 163, :_reduce_none,
  3, 163, :_reduce_none,
  3, 163, :_reduce_178,
  3, 163, :_reduce_179,
  3, 163, :_reduce_180,
  3, 163, :_reduce_181,
  3, 163, :_reduce_182,
  3, 163, :_reduce_183,
  3, 163, :_reduce_184,
  3, 163, :_reduce_185,
  4, 163, :_reduce_none,
  4, 163, :_reduce_none,
  2, 163, :_reduce_188,
  2, 163, :_reduce_189,
  3, 163, :_reduce_190,
  3, 163, :_reduce_191,
  3, 163, :_reduce_192,
  3, 163, :_reduce_193,
  3, 163, :_reduce_194,
  3, 163, :_reduce_195,
  3, 163, :_reduce_196,
  3, 163, :_reduce_197,
  3, 163, :_reduce_198,
  3, 163, :_reduce_199,
  3, 163, :_reduce_200,
  3, 163, :_reduce_201,
  3, 163, :_reduce_202,
  2, 163, :_reduce_203,
  2, 163, :_reduce_204,
  3, 163, :_reduce_205,
  3, 163, :_reduce_206,
  3, 163, :_reduce_207,
  3, 163, :_reduce_208,
  3, 163, :_reduce_209,
  5, 163, :_reduce_210,
  1, 163, :_reduce_none,
  1, 160, :_reduce_none,
  1, 157, :_reduce_213,
  2, 157, :_reduce_214,
  2, 157, :_reduce_215,
  3, 190, :_reduce_216,
  4, 190, :_reduce_217,
  4, 190, :_reduce_none,
  6, 190, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 166, :_reduce_222,
  2, 166, :_reduce_223,
  2, 166, :_reduce_224,
  4, 166, :_reduce_225,
  1, 166, :_reduce_226,
  4, 194, :_reduce_none,
  1, 194, :_reduce_none,
  0, 196, :_reduce_229,
  2, 169, :_reduce_230,
  1, 195, :_reduce_none,
  2, 195, :_reduce_232,
  3, 195, :_reduce_233,
  2, 193, :_reduce_234,
  2, 192, :_reduce_235,
  1, 192, :_reduce_236,
  1, 187, :_reduce_237,
  2, 187, :_reduce_238,
  3, 187, :_reduce_239,
  4, 187, :_reduce_240,
  3, 159, :_reduce_241,
  4, 159, :_reduce_none,
  2, 159, :_reduce_243,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  0, 219, :_reduce_253,
  4, 186, :_reduce_254,
  4, 186, :_reduce_255,
  3, 186, :_reduce_256,
  3, 186, :_reduce_257,
  2, 186, :_reduce_258,
  4, 186, :_reduce_259,
  3, 186, :_reduce_260,
  3, 186, :_reduce_261,
  1, 186, :_reduce_262,
  4, 186, :_reduce_263,
  3, 186, :_reduce_264,
  1, 186, :_reduce_265,
  5, 186, :_reduce_266,
  4, 186, :_reduce_267,
  3, 186, :_reduce_268,
  2, 186, :_reduce_269,
  1, 186, :_reduce_none,
  2, 186, :_reduce_271,
  2, 186, :_reduce_272,
  6, 186, :_reduce_273,
  6, 186, :_reduce_274,
  0, 220, :_reduce_275,
  0, 221, :_reduce_276,
  7, 186, :_reduce_277,
  0, 222, :_reduce_278,
  0, 223, :_reduce_279,
  7, 186, :_reduce_280,
  5, 186, :_reduce_281,
  4, 186, :_reduce_282,
  5, 186, :_reduce_283,
  0, 224, :_reduce_284,
  0, 225, :_reduce_285,
  9, 186, :_reduce_none,
  0, 226, :_reduce_287,
  0, 227, :_reduce_288,
  7, 186, :_reduce_289,
  0, 228, :_reduce_290,
  0, 229, :_reduce_291,
  8, 186, :_reduce_292,
  0, 230, :_reduce_293,
  0, 231, :_reduce_294,
  6, 186, :_reduce_295,
  0, 232, :_reduce_296,
  6, 186, :_reduce_297,
  0, 233, :_reduce_298,
  0, 234, :_reduce_299,
  9, 186, :_reduce_300,
  1, 186, :_reduce_301,
  1, 186, :_reduce_302,
  1, 186, :_reduce_303,
  1, 186, :_reduce_none,
  1, 156, :_reduce_none,
  1, 209, :_reduce_none,
  1, 209, :_reduce_none,
  1, 209, :_reduce_none,
  2, 209, :_reduce_none,
  1, 211, :_reduce_none,
  1, 211, :_reduce_none,
  1, 211, :_reduce_none,
  2, 208, :_reduce_313,
  3, 235, :_reduce_314,
  2, 235, :_reduce_315,
  1, 235, :_reduce_none,
  1, 235, :_reduce_none,
  3, 236, :_reduce_318,
  3, 236, :_reduce_319,
  1, 210, :_reduce_320,
  0, 238, :_reduce_321,
  6, 210, :_reduce_322,
  1, 142, :_reduce_none,
  2, 142, :_reduce_324,
  1, 213, :_reduce_325,
  6, 237, :_reduce_326,
  4, 237, :_reduce_327,
  4, 237, :_reduce_328,
  2, 237, :_reduce_329,
  4, 237, :_reduce_330,
  2, 237, :_reduce_331,
  2, 237, :_reduce_332,
  1, 237, :_reduce_333,
  1, 240, :_reduce_334,
  3, 240, :_reduce_335,
  3, 244, :_reduce_336,
  1, 171, :_reduce_none,
  2, 171, :_reduce_338,
  1, 171, :_reduce_339,
  3, 171, :_reduce_340,
  0, 246, :_reduce_341,
  5, 245, :_reduce_342,
  2, 167, :_reduce_343,
  4, 167, :_reduce_none,
  4, 167, :_reduce_none,
  2, 207, :_reduce_346,
  4, 207, :_reduce_347,
  3, 207, :_reduce_348,
  4, 207, :_reduce_349,
  3, 207, :_reduce_350,
  2, 207, :_reduce_351,
  1, 207, :_reduce_352,
  0, 248, :_reduce_353,
  5, 206, :_reduce_354,
  0, 249, :_reduce_355,
  5, 206, :_reduce_356,
  0, 251, :_reduce_357,
  6, 212, :_reduce_358,
  1, 250, :_reduce_359,
  1, 250, :_reduce_none,
  6, 141, :_reduce_361,
  0, 141, :_reduce_362,
  1, 252, :_reduce_363,
  1, 252, :_reduce_none,
  1, 252, :_reduce_none,
  2, 253, :_reduce_366,
  1, 253, :_reduce_367,
  2, 143, :_reduce_368,
  1, 143, :_reduce_none,
  1, 198, :_reduce_370,
  1, 198, :_reduce_371,
  1, 198, :_reduce_none,
  1, 199, :_reduce_373,
  1, 256, :_reduce_none,
  2, 256, :_reduce_none,
  3, 257, :_reduce_376,
  1, 257, :_reduce_377,
  3, 200, :_reduce_378,
  3, 201, :_reduce_379,
  3, 202, :_reduce_380,
  3, 202, :_reduce_381,
  1, 260, :_reduce_382,
  3, 260, :_reduce_383,
  1, 261, :_reduce_384,
  2, 261, :_reduce_385,
  3, 203, :_reduce_386,
  3, 203, :_reduce_387,
  1, 263, :_reduce_388,
  3, 263, :_reduce_389,
  1, 258, :_reduce_390,
  2, 258, :_reduce_391,
  1, 259, :_reduce_392,
  2, 259, :_reduce_393,
  1, 262, :_reduce_394,
  0, 265, :_reduce_395,
  3, 262, :_reduce_396,
  0, 266, :_reduce_397,
  4, 262, :_reduce_398,
  1, 264, :_reduce_399,
  1, 264, :_reduce_400,
  1, 264, :_reduce_401,
  1, 264, :_reduce_none,
  2, 184, :_reduce_403,
  1, 184, :_reduce_none,
  1, 267, :_reduce_none,
  1, 267, :_reduce_none,
  1, 267, :_reduce_none,
  1, 267, :_reduce_none,
  3, 255, :_reduce_409,
  1, 254, :_reduce_none,
  1, 254, :_reduce_none,
  2, 254, :_reduce_none,
  2, 254, :_reduce_none,
  1, 178, :_reduce_414,
  1, 178, :_reduce_415,
  1, 178, :_reduce_416,
  1, 178, :_reduce_417,
  1, 178, :_reduce_418,
  1, 178, :_reduce_419,
  1, 178, :_reduce_420,
  1, 178, :_reduce_421,
  1, 178, :_reduce_422,
  1, 178, :_reduce_423,
  1, 178, :_reduce_424,
  1, 204, :_reduce_425,
  1, 155, :_reduce_426,
  1, 158, :_reduce_none,
  1, 158, :_reduce_none,
  1, 214, :_reduce_429,
  3, 214, :_reduce_430,
  2, 214, :_reduce_431,
  4, 216, :_reduce_432,
  2, 216, :_reduce_433,
  6, 268, :_reduce_434,
  4, 268, :_reduce_435,
  4, 268, :_reduce_436,
  2, 268, :_reduce_437,
  4, 268, :_reduce_438,
  2, 268, :_reduce_439,
  2, 268, :_reduce_440,
  1, 268, :_reduce_441,
  0, 268, :_reduce_442,
  1, 270, :_reduce_443,
  1, 270, :_reduce_444,
  1, 270, :_reduce_445,
  1, 270, :_reduce_446,
  1, 270, :_reduce_447,
  1, 239, :_reduce_448,
  3, 239, :_reduce_449,
  3, 271, :_reduce_450,
  1, 269, :_reduce_451,
  3, 269, :_reduce_452,
  1, 272, :_reduce_none,
  1, 272, :_reduce_none,
  2, 241, :_reduce_455,
  1, 241, :_reduce_456,
  1, 273, :_reduce_none,
  1, 273, :_reduce_none,
  2, 243, :_reduce_459,
  2, 242, :_reduce_460,
  0, 242, :_reduce_461,
  1, 217, :_reduce_462,
  4, 217, :_reduce_463,
  1, 205, :_reduce_464,
  2, 205, :_reduce_465,
  2, 205, :_reduce_466,
  1, 189, :_reduce_467,
  3, 189, :_reduce_468,
  3, 274, :_reduce_469,
  2, 274, :_reduce_470,
  1, 172, :_reduce_none,
  1, 172, :_reduce_none,
  1, 172, :_reduce_none,
  1, 168, :_reduce_none,
  1, 168, :_reduce_none,
  1, 168, :_reduce_none,
  1, 168, :_reduce_none,
  1, 247, :_reduce_none,
  1, 247, :_reduce_none,
  1, 247, :_reduce_none,
  1, 218, :_reduce_none,
  1, 218, :_reduce_none,
  0, 145, :_reduce_none,
  1, 145, :_reduce_none,
  0, 185, :_reduce_none,
  1, 185, :_reduce_none,
  0, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 215, :_reduce_none,
  1, 215, :_reduce_none,
  1, 148, :_reduce_none,
  2, 148, :_reduce_none,
  0, 146, :_reduce_none,
  0, 197, :_reduce_none ]

racc_reduce_n = 496

racc_shift_n = 872

racc_token_table = {
  false => 0,
  :error => 1,
  :CLASS => 2,
  :MODULE => 3,
  :DEF => 4,
  :UNDEF => 5,
  :BEGIN => 6,
  :RESCUE => 7,
  :ENSURE => 8,
  :END => 9,
  :IF => 10,
  :UNLESS => 11,
  :THEN => 12,
  :ELSIF => 13,
  :ELSE => 14,
  :CASE => 15,
  :WHEN => 16,
  :WHILE => 17,
  :UNTIL => 18,
  :FOR => 19,
  :BREAK => 20,
  :NEXT => 21,
  :REDO => 22,
  :RETRY => 23,
  :IN => 24,
  :DO => 25,
  :DO_COND => 26,
  :DO_BLOCK => 27,
  :RETURN => 28,
  :YIELD => 29,
  :SUPER => 30,
  :SELF => 31,
  :NIL => 32,
  :TRUE => 33,
  :FALSE => 34,
  :AND => 35,
  :OR => 36,
  :NOT => 37,
  :IF_MOD => 38,
  :UNLESS_MOD => 39,
  :WHILE_MOD => 40,
  :UNTIL_MOD => 41,
  :RESCUE_MOD => 42,
  :ALIAS => 43,
  :DEFINED => 44,
  :klBEGIN => 45,
  :klEND => 46,
  :LINE => 47,
  :FILE => 48,
  :IDENTIFIER => 49,
  :FID => 50,
  :GVAR => 51,
  :IVAR => 52,
  :CONSTANT => 53,
  :CVAR => 54,
  :NTH_REF => 55,
  :BACK_REF => 56,
  :STRING_CONTENT => 57,
  :INTEGER => 58,
  :FLOAT => 59,
  :REGEXP_END => 60,
  "+@" => 61,
  "-@" => 62,
  "-@NUM" => 63,
  "**" => 64,
  "<=>" => 65,
  "==" => 66,
  "===" => 67,
  "!=" => 68,
  ">=" => 69,
  "<=" => 70,
  "&&" => 71,
  "||" => 72,
  "=~" => 73,
  "!~" => 74,
  "." => 75,
  ".." => 76,
  "..." => 77,
  "[]" => 78,
  "[]=" => 79,
  "<<" => 80,
  ">>" => 81,
  "::" => 82,
  "::@" => 83,
  :OP_ASGN => 84,
  "=>" => 85,
  :PAREN_BEG => 86,
  "(" => 87,
  ")" => 88,
  :tLPAREN_ARG => 89,
  :ARRAY_BEG => 90,
  "]" => 91,
  :tLBRACE => 92,
  :tLBRACE_ARG => 93,
  :SPLAT => 94,
  "*" => 95,
  "&@" => 96,
  "&" => 97,
  "~" => 98,
  "%" => 99,
  "/" => 100,
  "+" => 101,
  "-" => 102,
  "<" => 103,
  ">" => 104,
  "|" => 105,
  "!" => 106,
  "^" => 107,
  :LCURLY => 108,
  "}" => 109,
  :BACK_REF2 => 110,
  :SYMBOL_BEG => 111,
  :STRING_BEG => 112,
  :XSTRING_BEG => 113,
  :REGEXP_BEG => 114,
  :WORDS_BEG => 115,
  :AWORDS_BEG => 116,
  :STRING_DBEG => 117,
  :STRING_DVAR => 118,
  :STRING_END => 119,
  :STRING => 120,
  :SYMBOL => 121,
  "\\n" => 122,
  "?" => 123,
  ":" => 124,
  "," => 125,
  :SPACE => 126,
  ";" => 127,
  :LABEL => 128,
  :LAMBDA => 129,
  :LAMBEG => 130,
  :DO_LAMBDA => 131,
  "=" => 132,
  :LOWEST => 133,
  "[@" => 134,
  "[" => 135,
  "{" => 136 }

racc_nt_base = 137

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "CLASS",
  "MODULE",
  "DEF",
  "UNDEF",
  "BEGIN",
  "RESCUE",
  "ENSURE",
  "END",
  "IF",
  "UNLESS",
  "THEN",
  "ELSIF",
  "ELSE",
  "CASE",
  "WHEN",
  "WHILE",
  "UNTIL",
  "FOR",
  "BREAK",
  "NEXT",
  "REDO",
  "RETRY",
  "IN",
  "DO",
  "DO_COND",
  "DO_BLOCK",
  "RETURN",
  "YIELD",
  "SUPER",
  "SELF",
  "NIL",
  "TRUE",
  "FALSE",
  "AND",
  "OR",
  "NOT",
  "IF_MOD",
  "UNLESS_MOD",
  "WHILE_MOD",
  "UNTIL_MOD",
  "RESCUE_MOD",
  "ALIAS",
  "DEFINED",
  "klBEGIN",
  "klEND",
  "LINE",
  "FILE",
  "IDENTIFIER",
  "FID",
  "GVAR",
  "IVAR",
  "CONSTANT",
  "CVAR",
  "NTH_REF",
  "BACK_REF",
  "STRING_CONTENT",
  "INTEGER",
  "FLOAT",
  "REGEXP_END",
  "\"+@\"",
  "\"-@\"",
  "\"-@NUM\"",
  "\"**\"",
  "\"<=>\"",
  "\"==\"",
  "\"===\"",
  "\"!=\"",
  "\">=\"",
  "\"<=\"",
  "\"&&\"",
  "\"||\"",
  "\"=~\"",
  "\"!~\"",
  "\".\"",
  "\"..\"",
  "\"...\"",
  "\"[]\"",
  "\"[]=\"",
  "\"<<\"",
  "\">>\"",
  "\"::\"",
  "\"::@\"",
  "OP_ASGN",
  "\"=>\"",
  "PAREN_BEG",
  "\"(\"",
  "\")\"",
  "tLPAREN_ARG",
  "ARRAY_BEG",
  "\"]\"",
  "tLBRACE",
  "tLBRACE_ARG",
  "SPLAT",
  "\"*\"",
  "\"&@\"",
  "\"&\"",
  "\"~\"",
  "\"%\"",
  "\"/\"",
  "\"+\"",
  "\"-\"",
  "\"<\"",
  "\">\"",
  "\"|\"",
  "\"!\"",
  "\"^\"",
  "LCURLY",
  "\"}\"",
  "BACK_REF2",
  "SYMBOL_BEG",
  "STRING_BEG",
  "XSTRING_BEG",
  "REGEXP_BEG",
  "WORDS_BEG",
  "AWORDS_BEG",
  "STRING_DBEG",
  "STRING_DVAR",
  "STRING_END",
  "STRING",
  "SYMBOL",
  "\"\\\\n\"",
  "\"?\"",
  "\":\"",
  "\",\"",
  "SPACE",
  "\";\"",
  "LABEL",
  "LAMBDA",
  "LAMBEG",
  "DO_LAMBDA",
  "\"=\"",
  "LOWEST",
  "\"[@\"",
  "\"[\"",
  "\"{\"",
  "$start",
  "target",
  "compstmt",
  "bodystmt",
  "opt_rescue",
  "opt_else",
  "opt_ensure",
  "stmts",
  "opt_terms",
  "none",
  "stmt",
  "terms",
  "fitem",
  "undef_list",
  "expr_value",
  "lhs",
  "command_call",
  "mlhs",
  "var_lhs",
  "primary_value",
  "aref_args",
  "backref",
  "mrhs",
  "arg_value",
  "expr",
  "@1",
  "arg",
  "command",
  "block_command",
  "call_args",
  "block_call",
  "operation2",
  "command_args",
  "cmd_brace_block",
  "opt_block_var",
  "operation",
  "mlhs_basic",
  "mlhs_entry",
  "mlhs_head",
  "mlhs_item",
  "mlhs_node",
  "variable",
  "cname",
  "cpath",
  "fname",
  "op",
  "reswords",
  "symbol",
  "opt_nl",
  "primary",
  "args",
  "trailer",
  "assocs",
  "paren_args",
  "opt_paren_args",
  "opt_block_arg",
  "block_arg",
  "call_args2",
  "open_args",
  "@2",
  "none_block_pass",
  "literal",
  "strings",
  "xstring",
  "regexp",
  "words",
  "awords",
  "var_ref",
  "assoc_list",
  "brace_block",
  "method_call",
  "lambda",
  "then",
  "if_tail",
  "do",
  "case_body",
  "block_var",
  "superclass",
  "term",
  "f_arglist",
  "singleton",
  "dot_or_colon",
  "@3",
  "@4",
  "@5",
  "@6",
  "@7",
  "@8",
  "@9",
  "@10",
  "@11",
  "@12",
  "@13",
  "@14",
  "@15",
  "@16",
  "@17",
  "@18",
  "f_larglist",
  "lambda_body",
  "block_var_args",
  "@19",
  "f_arg",
  "f_block_optarg",
  "f_rest_arg",
  "opt_f_block_arg",
  "f_block_arg",
  "f_block_opt",
  "do_block",
  "@20",
  "operation3",
  "@21",
  "@22",
  "cases",
  "@23",
  "exc_list",
  "exc_var",
  "numeric",
  "dsym",
  "string",
  "string1",
  "string_contents",
  "xstring_contents",
  "word_list",
  "word",
  "string_content",
  "qword_list",
  "string_dvar",
  "@24",
  "@25",
  "sym",
  "f_args",
  "f_optarg",
  "f_norm_arg",
  "f_opt",
  "restarg_mark",
  "blkarg_mark",
  "assoc" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

def _reduce_1(val, _values, result)
      result = val[0]
    
    result
end

def _reduce_2(val, _values, result)
      result = new_body val[0], val[1], val[2], val[3]
    
    result
end

def _reduce_3(val, _values, result)
      comp = new_compstmt val[0]
      if comp and comp[0] == :begin and comp.size == 2
        result = comp[1]
        result.line = comp.line
      else
        result = comp
      end
    
    result
end

def _reduce_4(val, _values, result)
      result = new_block
    
    result
end

def _reduce_5(val, _values, result)
      result = new_block val[0]
    
    result
end

def _reduce_6(val, _values, result)
      val[0] << val[2]
      result = val[0]
    
    result
end

def _reduce_7(val, _values, result)
      @lex_state = :expr_fname
    
    result
end

def _reduce_8(val, _values, result)
      result = s(:alias, val[1], val[3])
    
    result
end

def _reduce_9(val, _values, result)
      result = s(:valias, val[1].intern, val[2].intern)
    
    result
end

# reduce 10 omitted

def _reduce_11(val, _values, result)
      result = s(:valias, val[1].intern, val[2].intern)
    
    result
end

def _reduce_12(val, _values, result)
      result = val[1]
    
    result
end

def _reduce_13(val, _values, result)
      result = new_if val[2], val[0], nil
    
    result
end

def _reduce_14(val, _values, result)
      result = new_if val[2], nil, val[0]
    
    result
end

def _reduce_15(val, _values, result)
      result = s(:while, val[2], val[0], true)
    
    result
end

def _reduce_16(val, _values, result)
      result = s(:until, val[2], val[0], true)
    
    result
end

# reduce 17 omitted

# reduce 18 omitted

# reduce 19 omitted

def _reduce_20(val, _values, result)
      result = new_assign val[0], val[2]
    
    result
end

def _reduce_21(val, _values, result)
      result = s(:masgn, val[0], s(:to_ary, val[2]))
    
    result
end

def _reduce_22(val, _values, result)
      result = new_op_asgn val[1].intern, val[0], val[2]
    
    result
end

# reduce 23 omitted

def _reduce_24(val, _values, result)
      result = s(:op_asgn2, val[0], "#{val[2]}=".intern, val[3].intern, val[4])
    
    result
end

# reduce 25 omitted

# reduce 26 omitted

# reduce 27 omitted

def _reduce_28(val, _values, result)
      result = new_assign val[0], s(:svalue, val[2])
    
    result
end

def _reduce_29(val, _values, result)
      result = s(:masgn, val[0], s(:to_ary, val[2]))
    
    result
end

def _reduce_30(val, _values, result)
      result = s(:masgn, val[0], val[2])
    
    result
end

# reduce 31 omitted

# reduce 32 omitted

def _reduce_33(val, _values, result)
      result = s(:and, val[0], val[2])
      result.line = val[0].line
    
    result
end

def _reduce_34(val, _values, result)
      result = s(:or, val[0], val[2])
      result.line = val[0].line
    
    result
end

def _reduce_35(val, _values, result)
      result = s(:not, val[1])
      result.line = val[1].line
    
    result
end

def _reduce_36(val, _values, result)
      result = s(:not, val[1])
    
    result
end

# reduce 37 omitted

# reduce 38 omitted

# reduce 39 omitted

# reduce 40 omitted

def _reduce_41(val, _values, result)
      args = val[1]
      args = args[1] if args.size == 2
      result = s(:return, args)
    
    result
end

def _reduce_42(val, _values, result)
      args = val[1]
      args = args[1] if args.size == 2
      result = s(:break, args)
    
    result
end

def _reduce_43(val, _values, result)
      args = val[1]
      args = args[1] if args.size == 2
      result = s(:next, args)
    
    result
end

# reduce 44 omitted

# reduce 45 omitted

# reduce 46 omitted

# reduce 47 omitted

def _reduce_48(val, _values, result)
      result = new_call nil, val[0].intern, val[1]
    
    result
end

# reduce 49 omitted

def _reduce_50(val, _values, result)
      result = new_call val[0], val[2].intern, val[3]
    
    result
end

# reduce 51 omitted

def _reduce_52(val, _values, result)
      result = "result = ['call', val[0], val[2], val[3]];"
    
    result
end

# reduce 53 omitted

def _reduce_54(val, _values, result)
      result = new_super val[1]
    
    result
end

def _reduce_55(val, _values, result)
      result = new_yield val[1]
    
    result
end

def _reduce_56(val, _values, result)
      result = val[0]
    
    result
end

def _reduce_57(val, _values, result)
      result = val[1]
    
    result
end

def _reduce_58(val, _values, result)
      result = val[0]
    
    result
end

def _reduce_59(val, _values, result)
      result = val[1]
    
    result
end

def _reduce_60(val, _values, result)
      result = val[0]
    
    result
end

def _reduce_61(val, _values, result)
      result = val[0] << val[1]
    
    result
end

def _reduce_62(val, _values, result)
      result = val[0] << s(:splat, val[2])
    
    result
end

def _reduce_63(val, _values, result)
      result = val[0] << s(:splat)
    
    result
end

def _reduce_64(val, _values, result)
      result = s(:array, s(:splat, val[1]))
    
    result
end

def _reduce_65(val, _values, result)
      result = s(:array, s(:splat))
    
    result
end

def _reduce_66(val, _values, result)
      result = val[0]
    
    result
end

def _reduce_67(val, _values, result)
      result = val[1]
    
    result
end

def _reduce_68(val, _values, result)
      result = s(:array, val[0])
    
    result
end

def _reduce_69(val, _values, result)
      result = val[0] << val[1]
    
    result
end

def _reduce_70(val, _values, result)
      result = new_assignable val[0]
    
    result
end

# reduce 71 omitted

# reduce 72 omitted

# reduce 73 omitted

# reduce 74 omitted

# reduce 75 omitted

# reduce 76 omitted

# reduce 77 omitted

def _reduce_78(val, _values, result)
      result = new_assignable val[0]
    
    result
end

def _reduce_79(val, _values, result)
      args = val[2]
      args[0] = :arglist if args[0] == :array
      result = s(:attrasgn, val[0], :[]=, args)
    
    result
end

def _reduce_80(val, _values, result)
      result = s(:attrasgn, val[0], "#{val[2]}=".intern, s(:arglist))
    
    result
end

def _reduce_81(val, _values, result)
      result = s(:attrasgn, val[0], "#{val[2]}=".intern, s(:arglist))
    
    result
end

def _reduce_82(val, _values, result)
      result = s(:attrasgn, val[0], "#{val[2]}=".intern, s(:arglist))
    
    result
end

# reduce 83 omitted

# reduce 84 omitted

# reduce 85 omitted

# reduce 86 omitted

def _reduce_87(val, _values, result)
      result = s(:colon3, val[1].intern)
    
    result
end

def _reduce_88(val, _values, result)
      result = val[0].intern
    
    result
end

def _reduce_89(val, _values, result)
      result = s(:colon2, val[0], val[2].intern)
    
    result
end

# reduce 90 omitted

# reduce 91 omitted

# reduce 92 omitted

def _reduce_93(val, _values, result)
      @lex_state = :expr_end
      result = val[0]
    
    result
end

def _reduce_94(val, _values, result)
      @lex_state = :expr_end
      result = val[0]
    
    result
end

def _reduce_95(val, _values, result)
      result = s(:lit, val[0].intern)
    
    result
end

def _reduce_96(val, _values, result)
      result = s(:lit, val[0])
    
    result
end

def _reduce_97(val, _values, result)
      result = s(:undef, val[0])
    
    result
end

def _reduce_98(val, _values, result)
      result = val[0] << val[2]
    
    result
end

# reduce 99 omitted

# reduce 100 omitted

# reduce 101 omitted

# reduce 102 omitted

# reduce 103 omitted

# reduce 104 omitted

# reduce 105 omitted

# reduce 106 omitted

# reduce 107 omitted

# reduce 108 omitted

# reduce 109 omitted

# reduce 110 omitted

# reduce 111 omitted

# reduce 112 omitted

# reduce 113 omitted

# reduce 114 omitted

# reduce 115 omitted

# reduce 116 omitted

# reduce 117 omitted

# reduce 118 omitted

# reduce 119 omitted

# reduce 120 omitted

# reduce 121 omitted

# reduce 122 omitted

# reduce 123 omitted

# reduce 124 omitted

# reduce 125 omitted

# reduce 126 omitted

# reduce 127 omitted

# reduce 128 omitted

# reduce 129 omitted

# reduce 130 omitted

# reduce 131 omitted

# reduce 132 omitted

# reduce 133 omitted

# reduce 134 omitted

# reduce 135 omitted

# reduce 136 omitted

# reduce 137 omitted

# reduce 138 omitted

# reduce 139 omitted

# reduce 140 omitted

# reduce 141 omitted

# reduce 142 omitted

# reduce 143 omitted

# reduce 144 omitted

# reduce 145 omitted

# reduce 146 omitted

# reduce 147 omitted

# reduce 148 omitted

# reduce 149 omitted

# reduce 150 omitted

# reduce 151 omitted

# reduce 152 omitted

# reduce 153 omitted

# reduce 154 omitted

# reduce 155 omitted

# reduce 156 omitted

# reduce 157 omitted

# reduce 158 omitted

# reduce 159 omitted

# reduce 160 omitted

# reduce 161 omitted

# reduce 162 omitted

# reduce 163 omitted

# reduce 164 omitted

# reduce 165 omitted

# reduce 166 omitted

# reduce 167 omitted

def _reduce_168(val, _values, result)
      result = new_assign val[0], val[2]
    
    result
end

# reduce 169 omitted

def _reduce_170(val, _values, result)
      result = new_op_asgn val[1].intern, val[0], val[2]
    
    result
end

def _reduce_171(val, _values, result)
      args = val[2]
      args[0] = :arglist if args[0] == :array
      result = s(:op_asgn1, val[0], val[2], val[4].intern, val[5])
      result.line = val[0].line
    
    result
end

def _reduce_172(val, _values, result)
      result = s(:op_asgn2, val[0], "#{val[2]}=".intern, val[3].intern, val[4])
    
    result
end

# reduce 173 omitted

# reduce 174 omitted

# reduce 175 omitted

# reduce 176 omitted

# reduce 177 omitted

def _reduce_178(val, _values, result)
      result = s(:dot2, val[0], val[2])
      result.line = val[0].line
    
    result
end

def _reduce_179(val, _values, result)
      result = s(:dot3, val[0], val[2])
      result.line = val[0].line
    
    result
end

def _reduce_180(val, _values, result)
      result = s(:operator, :"+", val[0], val[2])
    
    result
end

def _reduce_181(val, _values, result)
      result = s(:operator, :"-", val[0], val[2])
    
    result
end

def _reduce_182(val, _values, result)
      result = s(:operator, :"*", val[0], val[2])
    
    result
end

def _reduce_183(val, _values, result)
      result = s(:operator, :"/", val[0], val[2])
    
    result
end

def _reduce_184(val, _values, result)
      result = new_call val[0], :"%", s(:arglist, val[2])
    
    result
end

def _reduce_185(val, _values, result)
      result = new_call val[0], :"**", s(:arglist, val[2])
    
    result
end

# reduce 186 omitted

# reduce 187 omitted

def _reduce_188(val, _values, result)
      result = new_call val[1], :"+@", s(:arglist)
      result = val[1] if val[1][0] == :lit and Numeric === val[1][1]
    
    result
end

def _reduce_189(val, _values, result)
      result = new_call val[1], :"-@", s(:arglist)
      if val[1][0] == :lit and Numeric === val[1][1]
        val[1][1] = -val[1][1]
        result = val[1]
      end
    
    result
end

def _reduce_190(val, _values, result)
      result = new_call val[0], :"|", s(:arglist, val[2])
    
    result
end

def _reduce_191(val, _values, result)
      result = new_call val[0], :"^", s(:arglist, val[2])
    
    result
end

def _reduce_192(val, _values, result)
      result = new_call val[0], :"&", s(:arglist, val[2])
    
    result
end

def _reduce_193(val, _values, result)
      result = new_call val[0], :"<=>", s(:arglist, val[2])
    
    result
end

def _reduce_194(val, _values, result)
      result = new_call val[0], :">", s(:arglist, val[2])
    
    result
end

def _reduce_195(val, _values, result)
      result = new_call val[0], :">=", s(:arglist, val[2])
    
    result
end

def _reduce_196(val, _values, result)
      result = new_call val[0], :"<", s(:arglist, val[2])
    
    result
end

def _reduce_197(val, _values, result)
      result = new_call val[0], :"<=", s(:arglist, val[2])
    
    result
end

def _reduce_198(val, _values, result)
      result = new_call val[0], :"==", s(:arglist, val[2])
    
    result
end

def _reduce_199(val, _values, result)
      result = new_call val[0], :"===", s(:arglist, val[2])
    
    result
end

def _reduce_200(val, _values, result)
      result = s(:not, new_call(val[0], :"==", s(:arglist, val[2])))
    
    result
end

def _reduce_201(val, _values, result)
      result = new_call val[0], :"=~", s(:arglist, val[2])
    
    result
end

def _reduce_202(val, _values, result)
      result = s(:not, new_call(val[0], :"=~", s(:arglist, val[2])))
    
    result
end

def _reduce_203(val, _values, result)
      result = s(:not, val[1])
    
    result
end

def _reduce_204(val, _values, result)
      result = new_call val[1], :"~", s(:arglist)
    
    result
end

def _reduce_205(val, _values, result)
      result = new_call val[0], :"<<", s(:arglist, val[2])
    
    result
end

def _reduce_206(val, _values, result)
      result = new_call val[0], :">>", s(:arglist, val[2])
    
    result
end

def _reduce_207(val, _values, result)
      result = s(:and, val[0], val[2])
      result.line = val[0].line
    
    result
end

def _reduce_208(val, _values, result)
      result = s(:or, val[0], val[2])
      result.line = val[0].line
    
    result
end

def _reduce_209(val, _values, result)
      result = s(:defined, val[2])
    
    result
end

def _reduce_210(val, _values, result)
      result = s(:if, val[0], val[2], val[4])
      result.line = val[0].line
    
    result
end

# reduce 211 omitted

# reduce 212 omitted

def _reduce_213(val, _values, result)
      result = nil
    
    result
end

def _reduce_214(val, _values, result)
      result = val[0]
    
    result
end

def _reduce_215(val, _values, result)
      result = s(:array, s(:hash, *val[0]))
    
    result
end

def _reduce_216(val, _values, result)
      result = nil
    
    result
end

def _reduce_217(val, _values, result)
      result = val[1]
    
    result
end

# reduce 218 omitted

# reduce 219 omitted

# reduce 220 omitted

# reduce 221 omitted

def _reduce_222(val, _values, result)
      result = s(:array, val[0])
    
    result
end

def _reduce_223(val, _values, result)
      result = val[0]
      add_block_pass val[0], val[1]
    
    result
end

def _reduce_224(val, _values, result)
      result = s(:arglist, s(:hash, *val[0]))
      add_block_pass result, val[1]
    
    result
end

def _reduce_225(val, _values, result)
      result = val[0]
      result << s(:hash, *val[2])
    
    result
end

def _reduce_226(val, _values, result)
      result = s(:arglist)
      add_block_pass result, val[0]
    
    result
end

# reduce 227 omitted

# reduce 228 omitted

def _reduce_229(val, _values, result)
      cmdarg_push 1
    
    result
end

def _reduce_230(val, _values, result)
      cmdarg_pop
      result = val[1]
    
    result
end

# reduce 231 omitted

def _reduce_232(val, _values, result)
      result = nil
    
    result
end

def _reduce_233(val, _values, result)
      result = val[1]
    
    result
end

def _reduce_234(val, _values, result)
      result = s(:block_pass, val[1])
    
    result
end

def _reduce_235(val, _values, result)
      result = val[1]
    
    result
end

def _reduce_236(val, _values, result)
      result = nil
    
    result
end

def _reduce_237(val, _values, result)
      result = s(:array, val[0])
    
    result
end

def _reduce_238(val, _values, result)
      result = s(:array, s(:splat, val[1]))
    
    result
end

def _reduce_239(val, _values, result)
      result = val[0] << val[2]
    
    result
end

def _reduce_240(val, _values, result)
      result  = val[0] << s(:splat, val[3])
    
    result
end

def _reduce_241(val, _values, result)
      val[0] << val[2]
      result = val[0]
    
    result
end

# reduce 242 omitted

def _reduce_243(val, _values, result)
      result = s(:splat, val[1])
    
    result
end

# reduce 244 omitted

# reduce 245 omitted

# reduce 246 omitted

# reduce 247 omitted

# reduce 248 omitted

# reduce 249 omitted

# reduce 250 omitted

# reduce 251 omitted

# reduce 252 omitted

def _reduce_253(val, _values, result)
      result = @line
    
    result
end

def _reduce_254(val, _values, result)
      result = s(:begin, val[2])
      result.line = val[1]
    
    result
end

def _reduce_255(val, _values, result)
      result = val[1]
    
    result
end

def _reduce_256(val, _values, result)
      result = val[1] || s(:nil)
    
    result
end

def _reduce_257(val, _values, result)
      result = s(:colon2, val[0], val[2].intern)
    
    result
end

def _reduce_258(val, _values, result)
      result = s(:colon3, val[1])
    
    result
end

def _reduce_259(val, _values, result)
      result = new_call val[0], :[], val[2]
    
    result
end

def _reduce_260(val, _values, result)
      result = val[1] || s(:array)
    
    result
end

def _reduce_261(val, _values, result)
      result = s(:hash, *val[1])
    
    result
end

def _reduce_262(val, _values, result)
      result = s(:return)
    
    result
end

def _reduce_263(val, _values, result)
      result = new_yield val[2]
    
    result
end

def _reduce_264(val, _values, result)
      result = s(:yield)
    
    result
end

def _reduce_265(val, _values, result)
      result = s(:yield)
    
    result
end

def _reduce_266(val, _values, result)
      result = s(:defined, val[3])
    
    result
end

def _reduce_267(val, _values, result)
      result = s(:not, val[2])
      result.line = val[2].line
    
    result
end

def _reduce_268(val, _values, result)
      result = s(:not, s(:nil))
    
    result
end

def _reduce_269(val, _values, result)
      result = val[1]
      result[1] = new_call(nil, val[0].intern, s(:arglist))
    
    result
end

# reduce 270 omitted

def _reduce_271(val, _values, result)
      result = val[1]
      result[1] = val[0]
    
    result
end

def _reduce_272(val, _values, result)
      result = val[1]
    
    result
end

def _reduce_273(val, _values, result)
      result = new_if val[1], val[3], val[4]
    
    result
end

def _reduce_274(val, _values, result)
      result = new_if val[1], val[4], val[3]
    
    result
end

def _reduce_275(val, _values, result)
      cond_push 1
      result = @line
    
    result
end

def _reduce_276(val, _values, result)
      cond_pop
    
    result
end

def _reduce_277(val, _values, result)
      result = s(:while, val[2], val[5], true)
      result.line = val[1]
    
    result
end

def _reduce_278(val, _values, result)
      cond_push 1
      result = @line
    
    result
end

def _reduce_279(val, _values, result)
      cond_pop
    
    result
end

def _reduce_280(val, _values, result)
      result = s(:until, val[2], val[5], true)
      result.line = val[1]
    
    result
end

def _reduce_281(val, _values, result)
      result = s(:case, val[1], *val[3])
      result.line = val[1].line
    
    result
end

def _reduce_282(val, _values, result)
      result = s(:case, nil, *val[2])
      result.line = val[2].line
    
    result
end

def _reduce_283(val, _values, result)
      result = s(:case, nil, val[3])
      result.line = val[3].line
    
    result
end

def _reduce_284(val, _values, result)
      result = "this.cond_push(1);"
    
    result
end

def _reduce_285(val, _values, result)
      result = "this.cond_pop();"
    
    result
end

# reduce 286 omitted

def _reduce_287(val, _values, result)
      result = @line
    
    result
end

def _reduce_288(val, _values, result)
      # ...
    
    result
end

def _reduce_289(val, _values, result)
      result = new_class val[2], val[3], val[5]
      result.line = val[1]
      result.end_line = @line
    
    result
end

def _reduce_290(val, _values, result)
      result = @line
    
    result
end

def _reduce_291(val, _values, result)
      # ...
    
    result
end

def _reduce_292(val, _values, result)
      result = new_sclass val[3], val[6]
      result.line = val[2]
    
    result
end

def _reduce_293(val, _values, result)
      result = @line
    
    result
end

def _reduce_294(val, _values, result)
      # ...
    
    result
end

def _reduce_295(val, _values, result)
      result = new_module val[2], val[4]
      result.line = val[1]
      result.end_line = @line
    
    result
end

def _reduce_296(val, _values, result)
      result = @scope_line
      push_scope
    
    result
end

def _reduce_297(val, _values, result)
      result = new_defn val[2], val[1], val[3], val[4]
      pop_scope
    
    result
end

def _reduce_298(val, _values, result)
       # ..
    
    result
end

def _reduce_299(val, _values, result)
      result = @scope_line
      push_scope
    
    result
end

def _reduce_300(val, _values, result)
      result = new_defs val[5], val[1], val[4], val[6], val[7]
      pop_scope
    
    result
end

def _reduce_301(val, _values, result)
      result = s(:break)
    
    result
end

def _reduce_302(val, _values, result)
      result = s(:next)
    
    result
end

def _reduce_303(val, _values, result)
      result = s(:redo)
    
    result
end

# reduce 304 omitted

# reduce 305 omitted

# reduce 306 omitted

# reduce 307 omitted

# reduce 308 omitted

# reduce 309 omitted

# reduce 310 omitted

# reduce 311 omitted

# reduce 312 omitted

def _reduce_313(val, _values, result)
      call = new_call nil, :lambda, s(:arglist)
      result = new_iter call, val[0], val[1]
    
    result
end

def _reduce_314(val, _values, result)
      result = val[1]
    
    result
end

def _reduce_315(val, _values, result)
      result = nil
    
    result
end

# reduce 316 omitted

# reduce 317 omitted

def _reduce_318(val, _values, result)
      result = val[1]
    
    result
end

def _reduce_319(val, _values, result)
      result = val[1]
    
    result
end

def _reduce_320(val, _values, result)
      result = val[0]
    
    result
end

def _reduce_321(val, _values, result)
      result = @line
    
    result
end

def _reduce_322(val, _values, result)
      result = s(:if, val[2], val[4], val[5])
      result.line = val[1]
    
    result
end

# reduce 323 omitted

def _reduce_324(val, _values, result)
      result = val[1]
    
    result
end

def _reduce_325(val, _values, result)
      result = val[0]
    
    result
end

def _reduce_326(val, _values, result)
      result = new_block_args val[0], val[2], val[4], val[5]
    
    result
end

def _reduce_327(val, _values, result)
      result = new_block_args val[0], val[2], nil, val[3]
    
    result
end

def _reduce_328(val, _values, result)
      result = new_block_args val[0], nil, val[2], val[3]
    
    result
end

def _reduce_329(val, _values, result)
      result = new_block_args val[0], nil, nil, val[1]
    
    result
end

def _reduce_330(val, _values, result)
      result = new_block_args nil, val[0], val[2], val[3]
    
    result
end

def _reduce_331(val, _values, result)
      result = new_block_args nil, val[0], nil, val[1]
    
    result
end

def _reduce_332(val, _values, result)
      result = new_block_args nil, nil, val[0], val[1]
    
    result
end

def _reduce_333(val, _values, result)
      result = new_block_args nil, nil, nil, val[0]
    
    result
end

def _reduce_334(val, _values, result)
      result = s(:block, val[0])
    
    result
end

def _reduce_335(val, _values, result)
      val[0] << val[2]
      result = val[0]
    
    result
end

def _reduce_336(val, _values, result)
      result = new_assign new_assignable(s(:identifier, val[0].intern)), val[2]
    
    result
end

# reduce 337 omitted

def _reduce_338(val, _values, result)
      result = 0
    
    result
end

def _reduce_339(val, _values, result)
      result = 0
    
    result
end

def _reduce_340(val, _values, result)
      result = val[1]
    
    result
end

def _reduce_341(val, _values, result)
      push_scope :block
      result = @line
    
    result
end

def _reduce_342(val, _values, result)
      result = new_iter nil, val[2], val[3]
      result.line = val[1]
      pop_scope
    
    result
end

def _reduce_343(val, _values, result)
      result = val[1]
      result[1] = val[0]
    
    result
end

# reduce 344 omitted

# reduce 345 omitted

def _reduce_346(val, _values, result)
      result = new_call nil, val[0].intern, val[1]
    
    result
end

def _reduce_347(val, _values, result)
      result = new_call val[0], val[2].intern, val[3]
    
    result
end

def _reduce_348(val, _values, result)
      result = new_call val[0], :call, val[2]
    
    result
end

def _reduce_349(val, _values, result)
      result = new_call val[0], val[2].intern, val[3]
    
    result
end

def _reduce_350(val, _values, result)
      result = new_call val[0], val[2].intern, s(:arglist)
    
    result
end

def _reduce_351(val, _values, result)
      result = new_super val[1]
    
    result
end

def _reduce_352(val, _values, result)
      result = s(:zsuper)
    
    result
end

def _reduce_353(val, _values, result)
      push_scope :block
      result = @line
    
    result
end

def _reduce_354(val, _values, result)
      result = new_iter nil, val[2], val[3]
      result.line = val[1]
      pop_scope
    
    result
end

def _reduce_355(val, _values, result)
      push_scope :block
      result = @line
    
    result
end

def _reduce_356(val, _values, result)
      result = new_iter nil, val[2], val[3]
      result.line = val[1]
      pop_scope
    
    result
end

def _reduce_357(val, _values, result)
      result = @line
    
    result
end

def _reduce_358(val, _values, result)
      part = s(:when, val[2], val[4])
      part.line = val[2].line
      result = [part]
      result.push *val[5] if val[5]
    
    result
end

def _reduce_359(val, _values, result)
      result = [val[0]]
    
    result
end

# reduce 360 omitted

def _reduce_361(val, _values, result)
      exc = val[1] || s(:array)
      exc << new_assign(val[2], s(:gvar, '$!'.intern)) if val[2]
      result = [s(:resbody, exc, val[4])]
      result.push val[5].first if val[5]
    
    result
end

def _reduce_362(val, _values, result)
      result = nil
    
    result
end

def _reduce_363(val, _values, result)
      result = s(:array, val[0])
    
    result
end

# reduce 364 omitted

# reduce 365 omitted

def _reduce_366(val, _values, result)
      result = val[1]
    
    result
end

def _reduce_367(val, _values, result)
      result = nil
    
    result
end

def _reduce_368(val, _values, result)
      result = val[1].nil? ? s(:nil) : val[1]
    
    result
end

# reduce 369 omitted

def _reduce_370(val, _values, result)
      result = s(:lit, val[0])
    
    result
end

def _reduce_371(val, _values, result)
      result = s(:lit, val[0])
    
    result
end

# reduce 372 omitted

def _reduce_373(val, _values, result)
      result = new_str val[0]
    
    result
end

# reduce 374 omitted

# reduce 375 omitted

def _reduce_376(val, _values, result)
      result = val[1]
    
    result
end

def _reduce_377(val, _values, result)
      result = s(:str, val[0])
    
    result
end

def _reduce_378(val, _values, result)
      result = new_xstr val[1]
    
    result
end

def _reduce_379(val, _values, result)
      result = new_regexp val[1], val[2]
    
    result
end

def _reduce_380(val, _values, result)
      result = s(:array)
    
    result
end

def _reduce_381(val, _values, result)
      result = val[1]
    
    result
end

def _reduce_382(val, _values, result)
      result = s(:array)
    
    result
end

def _reduce_383(val, _values, result)
      part = val[1]
      part = s(:dstr, "", val[1]) if part[0] == :evstr
      result = val[0] << part
    
    result
end

def _reduce_384(val, _values, result)
      result = val[0]
    
    result
end

def _reduce_385(val, _values, result)
      result = val[0].concat([val[1]])
    
    result
end

def _reduce_386(val, _values, result)
      result = s(:array)
    
    result
end

def _reduce_387(val, _values, result)
      result = val[1]
    
    result
end

def _reduce_388(val, _values, result)
      result = s(:array)
    
    result
end

def _reduce_389(val, _values, result)
      result = val[0] << s(:str, val[1])
    
    result
end

def _reduce_390(val, _values, result)
      result = nil
    
    result
end

def _reduce_391(val, _values, result)
      result = str_append val[0], val[1]
    
    result
end

def _reduce_392(val, _values, result)
      result = nil
    
    result
end

def _reduce_393(val, _values, result)
      result = str_append val[0], val[1]
    
    result
end

def _reduce_394(val, _values, result)
      result = s(:str, val[0])
    
    result
end

def _reduce_395(val, _values, result)
      result = @string_parse
      @string_parse = nil
    
    result
end

def _reduce_396(val, _values, result)
      @string_parse = val[1]
      result = s(:evstr, val[2])
    
    result
end

def _reduce_397(val, _values, result)
      cond_push 0
      cmdarg_push 0
      result = @string_parse
      @string_parse = nil
      @lex_state = :expr_beg
    
    result
end

def _reduce_398(val, _values, result)
      @string_parse = val[1]
      cond_lexpop
      cmdarg_lexpop
      result = s(:evstr, val[2])
    
    result
end

def _reduce_399(val, _values, result)
      result = s(:gvar, val[0].intern)
    
    result
end

def _reduce_400(val, _values, result)
      result = s(:ivar, val[0].intern)
    
    result
end

def _reduce_401(val, _values, result)
      result = s(:cvar, val[0].intern)
    
    result
end

# reduce 402 omitted

def _reduce_403(val, _values, result)
      result = val[1].intern
      @lex_state = :expr_end
    
    result
end

# reduce 404 omitted

# reduce 405 omitted

# reduce 406 omitted

# reduce 407 omitted

# reduce 408 omitted

def _reduce_409(val, _values, result)
      result = new_dsym val[1]
    
    result
end

# reduce 410 omitted

# reduce 411 omitted

# reduce 412 omitted

# reduce 413 omitted

def _reduce_414(val, _values, result)
      result = s(:identifier, val[0].intern)
    
    result
end

def _reduce_415(val, _values, result)
      result = s(:ivar, val[0].intern)
    
    result
end

def _reduce_416(val, _values, result)
      result = s(:gvar, val[0].intern)
    
    result
end

def _reduce_417(val, _values, result)
      result = s(:const, val[0].intern)
    
    result
end

def _reduce_418(val, _values, result)
      result = s(:cvar, val[0].intern)
    
    result
end

def _reduce_419(val, _values, result)
      result = s(:nil)
    
    result
end

def _reduce_420(val, _values, result)
      result = s(:self)
    
    result
end

def _reduce_421(val, _values, result)
      result = s(:true)
    
    result
end

def _reduce_422(val, _values, result)
      result = s(:false)
    
    result
end

def _reduce_423(val, _values, result)
      result = s(:str, @file)
    
    result
end

def _reduce_424(val, _values, result)
      result = s(:lit, @line)
    
    result
end

def _reduce_425(val, _values, result)
      result = new_var_ref val[0]
    
    result
end

def _reduce_426(val, _values, result)
      result = new_assignable val[0]
    
    result
end

# reduce 427 omitted

# reduce 428 omitted

def _reduce_429(val, _values, result)
      result = nil
    
    result
end

def _reduce_430(val, _values, result)
      result = val[1]
    
    result
end

def _reduce_431(val, _values, result)
      result = nil
    
    result
end

def _reduce_432(val, _values, result)
      result = val[1]
    
    result
end

def _reduce_433(val, _values, result)
      result = val[0]
    
    result
end

def _reduce_434(val, _values, result)
      result = new_args val[0], val[2], val[4], val[5]
    
    result
end

def _reduce_435(val, _values, result)
      result = new_args val[0], val[2], nil, val[3]
    
    result
end

def _reduce_436(val, _values, result)
      result = new_args val[0], nil, val[2], val[3]
    
    result
end

def _reduce_437(val, _values, result)
      result = new_args val[0], nil, nil, val[1]
    
    result
end

def _reduce_438(val, _values, result)
      result = new_args nil, val[0], val[2], val[3]
    
    result
end

def _reduce_439(val, _values, result)
      result = new_args nil, val[0], nil, val[1]
    
    result
end

def _reduce_440(val, _values, result)
      result = new_args nil, nil, val[0], val[1]
    
    result
end

def _reduce_441(val, _values, result)
      result = new_args nil, nil, nil, val[0]
    
    result
end

def _reduce_442(val, _values, result)
      result = s(:args)
    
    result
end

def _reduce_443(val, _values, result)
      raise 'formal argument cannot be a constant'
    
    result
end

def _reduce_444(val, _values, result)
      raise 'formal argument cannot be an instance variable'
    
    result
end

def _reduce_445(val, _values, result)
      raise 'formal argument cannot be a class variable'
    
    result
end

def _reduce_446(val, _values, result)
      raise 'formal argument cannot be a global variable'
    
    result
end

def _reduce_447(val, _values, result)
      result = val[0].intern
      @scope.add_local result
    
    result
end

def _reduce_448(val, _values, result)
      result = [val[0]]
    
    result
end

def _reduce_449(val, _values, result)
      val[0] << val[2]
      result = val[0]
    
    result
end

def _reduce_450(val, _values, result)
      result = new_assign new_assignable(s(:identifier, val[0].intern)), val[2]
    
    result
end

def _reduce_451(val, _values, result)
      result = s(:block, val[0])
    
    result
end

def _reduce_452(val, _values, result)
      result = val[0]
      val[0] << val[2]
    
    result
end

# reduce 453 omitted

# reduce 454 omitted

def _reduce_455(val, _values, result)
      result = "*#{val[1]}".intern
    
    result
end

def _reduce_456(val, _values, result)
      result = :"*"
    
    result
end

# reduce 457 omitted

# reduce 458 omitted

def _reduce_459(val, _values, result)
      result = "&#{val[1]}".intern
    
    result
end

def _reduce_460(val, _values, result)
      result = val[1]
    
    result
end

def _reduce_461(val, _values, result)
      result = nil
    
    result
end

def _reduce_462(val, _values, result)
      result = val[0]
    
    result
end

def _reduce_463(val, _values, result)
      result = val[1]
    
    result
end

def _reduce_464(val, _values, result)
      result = []
    
    result
end

def _reduce_465(val, _values, result)
      result = val[0]
    
    result
end

def _reduce_466(val, _values, result)
      raise "unsupported assoc list type (#@line_number)"
    
    result
end

def _reduce_467(val, _values, result)
      result = val[0]
    
    result
end

def _reduce_468(val, _values, result)
      result = val[0].push *val[2]
    
    result
end

def _reduce_469(val, _values, result)
      result = [val[0], val[2]]
    
    result
end

def _reduce_470(val, _values, result)
      result = [s(:lit, val[0].intern), val[1]]
    
    result
end

# reduce 471 omitted

# reduce 472 omitted

# reduce 473 omitted

# reduce 474 omitted

# reduce 475 omitted

# reduce 476 omitted

# reduce 477 omitted

# reduce 478 omitted

# reduce 479 omitted

# reduce 480 omitted

# reduce 481 omitted

# reduce 482 omitted

# reduce 483 omitted

# reduce 484 omitted

# reduce 485 omitted

# reduce 486 omitted

# reduce 487 omitted

# reduce 488 omitted

# reduce 489 omitted

# reduce 490 omitted

# reduce 491 omitted

# reduce 492 omitted

# reduce 493 omitted

# reduce 494 omitted

# reduce 495 omitted

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Grammar
  end   # module Opal
