inherit_from: .rubocop_todo.yml

Metrics/LineLength:
  Enabled: false
  # Max: 120

Naming/MethodName:
  Exclude:
    - 'opal/**/*.rb' # Ruby has methods like Integer/Float/Array

Layout/ClosingParenthesisIndentation:
  Enabled: false

Layout/CommentIndentation:
  # The following files use comments to show generated ruby code
  Exclude:
    - 'lib/opal/rewriters/binary_operator_assignment.rb'
    - 'lib/opal/rewriters/logical_operator_assignment.rb'

Style/FrozenStringLiteralComment:
  Exclude:
    - 'opal/**/*.rb'

Layout/EmptyLineAfterMagicComment:
  Exclude:
    - 'opal/**/*.rb'

Style/GlobalVars:
  Exclude:
    - 'opal/corelib/kernel.rb'

Layout/ExtraSpacing:
  Exclude:
    # This files uses extra spaces to show an inheritance tree of error classes
    - 'opal/corelib/error.rb'

Layout/IndentArray:
  EnforcedStyle: consistent

Layout/SpaceAroundOperators:
  Exclude:
    - 'opal/corelib/error.rb'

Lint/BooleanSymbol:
  Exclude:
    # There are AST nodes with types :true and :false
    - 'lib/opal/nodes/**/*.rb'

Lint/InheritException:
  Exclude:
    - 'lib/opal/builder.rb'
    - 'opal/**/*.rb'

Lint/LiteralAsCondition:
  Exclude:
    # Opal support if `...js...`
    - 'opal/**/*.rb'

Lint/RescueException:
  Exclude:
    # That's what MRI does
    - 'opal/corelib/enumerator.rb'

Lint/StringConversionInInterpolation:
  Exclude:
    # That's what MRI does
    - 'opal/corelib/error.rb'

Lint/UnusedBlockArgument:
  Exclude:
    # Variable from Ruby can be accessed in JS, rubocop can't catch it (but JSHint can)
    - 'opal/**/*.rb'

Lint/UnusedMethodArgument:
  Exclude:
    # Variable from Ruby can be accessed in JS, rubocop can't catch it (but JSHint can)
    - 'opal/**/*.rb'

Lint/UselessAssignment:
  Exclude:
    # Variable from Ruby can be accessed in JS, rubocop can't catch it (but JSHint can)
    - 'opal/**/*.rb'

Metrics/AbcSize:
  Enabled: false

Metrics/BlockLength:
  Enabled: false

Metrics/BlockNesting:
  Enabled: false

Metrics/ClassLength:
  Enabled: false

Metrics/CyclomaticComplexity:
  Enabled: false

Metrics/MethodLength:
  Enabled: false

Metrics/ModuleLength:
  Enabled: false

Metrics/PerceivedComplexity:
  Enabled: false

Metrics/ParameterLists:
  Exclude:
    # Some Ruby methods take 10 arguments
    - 'opal/**/*.rb'

Naming/BinaryOperatorParameterName:
  Exclude:
    # Opal follows MRI argument namings
    - 'opal/**/*.rb'

Naming/PredicateName:
  # Ruby has "has_key?" method
  NamePrefixBlacklist: is_, have_

Performance/FlatMap:
  Exclude:
    # That's actually a definition of Enumerable#flat_map
    - 'opal/corelib/enumerable.rb'

Performance/HashEachMethods:
  Exclude:
    # Rubocop doesn't understand that 'value' is used in JS.
    - 'opal/corelib/hash.rb'

Performance/RegexpMatch:
  # This cop converts =~ to match?
  # But this method was introduced only in 2.4
  Enabled: false

Performance/UnfreezeString:
  Enabled: false

Style/AsciiComments:
  Enabled: false

Style/CaseEquality:
  Exclude:
    - 'opal/**/*.rb'
    - 'lib/opal/config.rb'

Style/ClassAndModuleChildren:
  Enabled: false


Style/ClassVars:
  Exclude:
    # These classes use class variables on purpose
    - 'lib/opal/rewriters/binary_operator_assignment.rb'
    - 'lib/opal/rewriters/logical_operator_assignment.rb'

Style/CommandLiteral:
  # This cop converts `` to %x{}
  Enabled: false

Style/Documentation:
  Enabled: false
