$:.unshift '../lib'
require 'opal'
require 'opal/builder_task'
require 'fileutils'

Opal::BuilderTask.new do |s|
  s.config :default do
    s.out = 'opal.js'
    s.builder = proc { Opal.build_runtime }
  end

  s.config :debug do
    s.out = 'opal.debug.js'
    s.builder = proc { Opal.build_runtime true }
  end

  s.config :test do
    s.out = 'opal.test.js'
    s.files = Dir['spec/**/*.rb']
    s.stdlib = %w[forwardable]
    # we dont have a 'main' as we do it manually in spec_runner so we can
    # benchmark code
  end
end

desc "Run opal tests"
task :test do
  Opal::Context.runner 'spec/**/*.rb'
end

desc "Check file sizes for core builds"
task :sizes do
  sizes 'opal.js'
  sizes 'opal.debug.js'
end

def sizes file
  o = File.read file
  m = uglify o
  g = gzip m

  puts "#{file}:"
  puts "development: #{o.size}, minified: #{m.size}, gzipped: #{g.size}"
end

# Used for uglifying source to minify
def uglify(str)
  IO.popen('uglifyjs -nc', 'r+') do |i|
    i.puts str
    i.close_write
    return i.read
  end
end

# Gzip code to check file size
def gzip(str)
  IO.popen('gzip -f', 'r+') do |i|
    i.puts str
    i.close_write
    return i.read
  end
end
